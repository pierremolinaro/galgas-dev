//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'common_semantics.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      april 23th, 2009, at 23h9'17"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef common_semantics_DEFINED
#define common_semantics_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/xml_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_EXactualParametersPassingMode ;
class GGS_EXformalArgumentPassingMode ;
class GGS_typeInstruction ;
class cPtr_typeInstruction ;
class GGS_typeInstructionList ;
class GGS_L_signature ;
class GGS_typeListModel ;
class GGS_TypeModel ;
class cPtr_TypeModel ;
class GGS_BoolModel ;
class cPtr_BoolModel ;
class GGS_CharModel ;
class cPtr_CharModel ;
class GGS_UIntModel ;
class cPtr_UIntModel ;
class GGS_SIntModel ;
class cPtr_SIntModel ;
class GGS_UInt64Model ;
class cPtr_UInt64Model ;
class GGS_SInt64Model ;
class cPtr_SInt64Model ;
class GGS_DoubleModel ;
class cPtr_DoubleModel ;
class GGS_StringModel ;
class cPtr_StringModel ;
class GGS_LBoolModel ;
class cPtr_LBoolModel ;
class GGS_LCharModel ;
class cPtr_LCharModel ;
class GGS_LUIntModel ;
class cPtr_LUIntModel ;
class GGS_LSIntModel ;
class cPtr_LSIntModel ;
class GGS_LUInt64Model ;
class cPtr_LUInt64Model ;
class GGS_LSInt64Model ;
class cPtr_LSInt64Model ;
class GGS_LDoubleModel ;
class cPtr_LDoubleModel ;
class GGS_LStringModel ;
class cPtr_LStringModel ;
class GGS_StringsetModel ;
class cPtr_StringsetModel ;
class GGS_LocationModel ;
class cPtr_LocationModel ;
class GGS_ListModel ;
class cPtr_ListModel ;
class GGS_MapModel ;
class cPtr_MapModel ;
class GGS_enumConstantMap ;
class GGS_enumUsedConstantMap ;
class GGS_enumMessageMap ;
class GGS_EnumModel ;
class cPtr_EnumModel ;
class GGS_constructorMap ;
class GGS_readerMap ;
class GGS_modifierMap ;
class GGS_ExternTypeModel ;
class cPtr_ExternTypeModel ;
class GGS_classMessageMap ;
class GGS_ClassModel ;
class cPtr_ClassModel ;
class GGS_ModelMap ;
class GGS_ActionMap ;
class GGS_localConstantBuildStyleEnum ;
class GGS_AC_galgasType ;
class cPtr_AC_galgasType ;
class GGS_typeCplusPlusName ;
class cPtr_typeCplusPlusName ;
class GGS_typeDirectName ;
class cPtr_typeDirectName ;
class GGS_typeCurrentObjectName ;
class cPtr_typeCurrentObjectName ;
class GGS_typeCppThisName ;
class cPtr_typeCppThisName ;
class GGS_typeCppThisInCategoryName ;
class cPtr_typeCppThisInCategoryName ;
class GGS_typeCppInheritedName ;
class cPtr_typeCppInheritedName ;
class GGS_typeAutomaticName ;
class cPtr_typeAutomaticName ;
class GGS_typeLocationAutomaticName ;
class cPtr_typeLocationAutomaticName ;
class GGS_typeOperandName ;
class cPtr_typeOperandName ;
class GGS_typeKeyName ;
class cPtr_typeKeyName ;
class GGS_typeNullName ;
class cPtr_typeNullName ;
class GGS_typeListeTypesEtNomsArgMethode ;
class GGS_typeSuperClassesMap ;
class GGS_typeListeAttributsSemantiques ;
class GGS_typeTypesList ;
class GGS_L_EXsignature ;
class GGS_categoryMethodKind ;
class GGS_EXcategoryMethodMap ;
class GGS_L_actualParametersSignature ;
class GGS_M_accessors_map ;
class GGS_typeGalgas_jokerInParameterList ;
class cPtr_typeGalgas_jokerInParameterList ;
class GGS_typeGalgas_bool ;
class cPtr_typeGalgas_bool ;
class GGS_typeGalgas_uint ;
class cPtr_typeGalgas_uint ;
class GGS_typeGalgas_char ;
class cPtr_typeGalgas_char ;
class GGS_typeGalgas_string ;
class cPtr_typeGalgas_string ;
class GGS_typeGalgas_sint ;
class cPtr_typeGalgas_sint ;
class GGS_typeGalgas_sint64 ;
class cPtr_typeGalgas_sint64 ;
class GGS_typeGalgas_uint64 ;
class cPtr_typeGalgas_uint64 ;
class GGS_typeGalgas_double ;
class cPtr_typeGalgas_double ;
class GGS_typeGalgas_binaryset ;
class cPtr_typeGalgas_binaryset ;
class GGS_C_galgasPrimitiveType ;
class cPtr_C_galgasPrimitiveType ;
class GGS_typeGalgas_location ;
class cPtr_typeGalgas_location ;
class GGS_typeGalgas_lstring ;
class cPtr_typeGalgas_lstring ;
class GGS_typeGalgas_lchar ;
class cPtr_typeGalgas_lchar ;
class GGS_typeGalgas_lbool ;
class cPtr_typeGalgas_lbool ;
class GGS_typeGalgas_luint ;
class cPtr_typeGalgas_luint ;
class GGS_typeGalgas_luint64 ;
class cPtr_typeGalgas_luint64 ;
class GGS_typeGalgas_lsint ;
class cPtr_typeGalgas_lsint ;
class GGS_typeGalgas_lsint64 ;
class cPtr_typeGalgas_lsint64 ;
class GGS_typeGalgas_ldouble ;
class cPtr_typeGalgas_ldouble ;
class GGS_typeGalgas_stringset ;
class cPtr_typeGalgas_stringset ;
class GGS_typeGalgas_filewrapper ;
class cPtr_typeGalgas_filewrapper ;
class GGS_typeTableMethodes ;
class GGS_typeGalgasUndefinedExternType ;
class cPtr_typeGalgasUndefinedExternType ;
class GGS_M_externTypeConstructorMap ;
class GGS_typeGalgasExternType ;
class cPtr_typeGalgasExternType ;
class GGS_M_terminalSymbolsMapForUse ;
class GGS_M_lexiqueComponents ;
class GGS_typeTableEnAvant ;
class GGS_M_nonterminalSymbolAlts ;
class GGS_AC_semanticsEntity ;
class cPtr_AC_semanticsEntity ;
class GGS_C_grammarForSemantics ;
class cPtr_C_grammarForSemantics ;
class GGS_M_semanticsEntitiesForUse ;
class GGS_AC_typeForGrammarComponent ;
class cPtr_AC_typeForGrammarComponent ;
class GGS_M_typesForGrammarComponent ;
class GGS_AC_instruction_ForGrammar ;
class cPtr_AC_instruction_ForGrammar ;
class GGS_L_ruleSyntaxSignature ;
class GGS_L_grammarsMap ;
class GGS_M_nonterminalSymbolAltsForGrammar ;
class GGS_L_productionRules_ForGrammarComponent ;
class GGS_M_nonTerminalSymbolsForGrammar ;
class GGS_M_unusedNonTerminalSymbolsForGrammar ;
class GGS_M_syntaxComponents ;
class GGS_T_terminalInstruction_forGrammarComponent ;
class cPtr_T_terminalInstruction_forGrammarComponent ;
class GGS_T_nonterminalInstruction_forGrammarComponent ;
class cPtr_T_nonterminalInstruction_forGrammarComponent ;
class GGS_L_branchList_ForGrammarComponent ;
class GGS_T_selectInstruction_forGrammarComponent ;
class cPtr_T_selectInstruction_forGrammarComponent ;
class GGS_T_repeatInstruction_forGrammarComponent ;
class cPtr_T_repeatInstruction_forGrammarComponent ;
class GGS_L_syntaxComponents_ForGrammar ;
class GGS_typeClassInheritedMessagesMap ;
class GGS_typeSemanticAttributesMap ;
class GGS_insertOrSearchMethodList ;
class GGS_typeDefEntiteUtilisable ;
class cPtr_typeDefEntiteUtilisable ;
class GGS_typeGalgasUndefinedListType ;
class cPtr_typeGalgasUndefinedListType ;
class GGS_typeGalgasListType ;
class cPtr_typeGalgasListType ;
class GGS_typeGalgasStructType ;
class cPtr_typeGalgasStructType ;
class GGS_typeGalgasListmapType ;
class cPtr_typeGalgasListmapType ;
class GGS_domainModifierMap ;
class GGS_domainAttributeMap ;
class GGS_typeGalgasDomainType ;
class cPtr_typeGalgasDomainType ;
class GGS_typeGalgasUndefinedSortedListType ;
class cPtr_typeGalgasUndefinedSortedListType ;
class GGS_typeGalgasSortedListType ;
class cPtr_typeGalgasSortedListType ;
class GGS_typeTableBlocsDeTable ;
class GGS_typeGalgasUndefinedMapType ;
class cPtr_typeGalgasUndefinedMapType ;
class GGS_mapModifierMap ;
class GGS_mapMethodMap ;
class GGS_typeGalgasMapType ;
class cPtr_typeGalgasMapType ;
class GGS_typeGalgasUndefinedMapindexType ;
class cPtr_typeGalgasUndefinedMapindexType ;
class GGS_mapIndexSearchReaderMap ;
class GGS_typeGalgasMapindexType ;
class cPtr_typeGalgasMapindexType ;
class GGS_typeGalgasUndefinedClassType ;
class cPtr_typeGalgasUndefinedClassType ;
class GGS_L_lazyAttributeList ;
class GGS_typeGalgasClassType ;
class cPtr_typeGalgasClassType ;
class GGS_typeEntiteType ;
class cPtr_typeEntiteType ;
class GGS_typeEntiteRoutine ;
class cPtr_typeEntiteRoutine ;
class GGS_typeEntiteFonction ;
class cPtr_typeEntiteFonction ;
class GGS_typeEnumMessageMap ;
class GGS_enumModifierDefinitionList ;
class GGS_enumModifierMap ;
class GGS_enumMethodDefinitionList ;
class GGS_enumMethodMap ;
class GGS_enumOperatorDefinitionList ;
class GGS_enumOperatorMap ;
class GGS_typeGalgas_enum ;
class cPtr_typeGalgas_enum ;
class GGS_M_cli_options ;
class GGS_M_optionComponents ;
class GGS_M_grammarComponents ;
class GGS_M_semanticsComponents ;
class GGS_M_regularFiles ;
class GGS_filewrapperTemplateMap ;
class GGS_M_filewrappers ;
class GGS_labelForPopUpList ;
class GGS_textMacroList ;
class GGS_templateInstruction ;
class cPtr_templateInstruction ;
class GGS_templateInstructionList ;
class GGS_templateInstructionString ;
class cPtr_templateInstructionString ;
class GGS_templateInstructionConstant ;
class cPtr_templateInstructionConstant ;
class GGS_EXsemanticContext ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Class for 'EXactualParametersPassingMode' Enumeration            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_EXactualParametersPassingMode {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_parameterIn, enum_parameterOut, enum_parameterOutIn} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_EXactualParametersPassingMode (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_EXactualParametersPassingMode (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool _isBuilt (void) const ;

//--- Construction from GALGAS constructor
  public : static inline GGS_EXactualParametersPassingMode  constructor_parameterIn (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXactualParametersPassingMode (enum_parameterIn) ;
  }
  public : static inline GGS_EXactualParametersPassingMode  constructor_parameterOut (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXactualParametersPassingMode (enum_parameterOut) ;
  }
  public : static inline GGS_EXactualParametersPassingMode  constructor_parameterOutIn (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXactualParametersPassingMode (enum_parameterOutIn) ;
  }

//--- Readers
  public : GGS_string reader_actualArgumentMessage (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- Methods

//--- Operators

//--- 'description' reader
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void _drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool _operator_infOrEqual (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool _operator_supOrEqual (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool _operator_strictInf (const GGS_EXactualParametersPassingMode inOperand) const ;
  public : GGS_bool _operator_strictSup (const GGS_EXactualParametersPassingMode inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for 'EXformalArgumentPassingMode' Enumeration             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_EXformalArgumentPassingMode {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_argumentConstantIn, enum_argumentIn, enum_argumentInOut, enum_argumentOut} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_EXformalArgumentPassingMode (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_EXformalArgumentPassingMode (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 3 ; }

//--- Is built ?
  public : bool _isBuilt (void) const ;

//--- Construction from GALGAS constructor
  public : static inline GGS_EXformalArgumentPassingMode  constructor_argumentConstantIn (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXformalArgumentPassingMode (enum_argumentConstantIn) ;
  }
  public : static inline GGS_EXformalArgumentPassingMode  constructor_argumentIn (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXformalArgumentPassingMode (enum_argumentIn) ;
  }
  public : static inline GGS_EXformalArgumentPassingMode  constructor_argumentInOut (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXformalArgumentPassingMode (enum_argumentInOut) ;
  }
  public : static inline GGS_EXformalArgumentPassingMode  constructor_argumentOut (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_EXformalArgumentPassingMode (enum_argumentOut) ;
  }

//--- Readers
  public : GGS_string reader_formalArgumentMessage (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- Methods

//--- Operators

//--- 'description' reader
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void _drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_EXformalArgumentPassingMode inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_EXformalArgumentPassingMode inOperand) const ;
  public : GGS_bool _operator_infOrEqual (const GGS_EXformalArgumentPassingMode inOperand) const ;
  public : GGS_bool _operator_supOrEqual (const GGS_EXformalArgumentPassingMode inOperand) const ;
  public : GGS_bool _operator_strictInf (const GGS_EXformalArgumentPassingMode inOperand) const ;
  public : GGS_bool _operator_strictSup (const GGS_EXformalArgumentPassingMode inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeInstruction : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_typeInstruction (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_typeInstruction (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeInstruction (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeInstruction
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeInstruction * getPtr (void) const {
    return (cPtr_typeInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeInstruction *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__typeInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@typeInstructionList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeInstructionList ;

class GGS_typeInstructionList : public AC_galgas_list {
  public : typedef elementOf_GGS_typeInstructionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeInstructionList constructor_emptyList (void) ;
  public : static GGS_typeInstructionList constructor_listWithValue (const GGS_typeInstruction & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeInstructionList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_typeInstructionList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeInstructionList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_typeInstruction & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_typeInstruction & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_typeInstruction & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_typeInstruction & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_typeInstructionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_typeInstruction & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeInstructionList _operator_concat (const GGS_typeInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_typeInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_typeInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_typeInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeInstruction 
  reader_mInstructionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInstructionAtIndex (C_Compiler & inLexique,
                              const GGS_typeInstruction  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeInstructionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_typeInstruction   & _mInstruction (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@L_signature'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_signature ;

class GGS_L_signature : public AC_galgas_list {
  public : typedef elementOf_GGS_L_signature cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_signature constructor_emptyList (void) ;
  public : static GGS_L_signature constructor_listWithValue (const GGS_EXformalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_signature & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_signature
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_signature
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_signature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_EXformalArgumentPassingMode& _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_EXformalArgumentPassingMode& _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_EXformalArgumentPassingMode& _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_EXformalArgumentPassingMode& _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_L_signature inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_EXformalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_signature _operator_concat (const GGS_L_signature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_EXformalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_EXformalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_EXformalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_EXformalArgumentPassingMode
  reader_mFormalArgumentPassingModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mGalgasTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMFormalArgumentPassingModeAtIndex (C_Compiler & inLexique,
                              const GGS_EXformalArgumentPassingMode & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMGalgasTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_signature & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_EXformalArgumentPassingMode  & _mFormalArgumentPassingMode (LOCATION_ARGS) const ;
  public : /* const */ GGS_lstring   & _mGalgasTypeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeListModel'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel ;

class GGS_typeListModel : public AC_galgas_list {
  public : typedef elementOf_GGS_typeListModel cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeListModel constructor_emptyList (void) ;
  public : static GGS_typeListModel constructor_listWithValue (const GGS_lstring & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeListModel & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_typeListModel
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeListModel
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeListModel * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_typeListModel inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeListModel _operator_concat (const GGS_typeListModel & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeListModel & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mTypeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_TypeModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_TypeModel : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_TypeModel (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_TypeModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_TypeModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_TypeModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_TypeModel * getPtr (void) const {
    return (cPtr_TypeModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_TypeModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_TypeModel * operator () (LOCATION_ARGS) const {
      return (cPtr_TypeModel *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__TypeModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_BoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_BoolModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_BoolModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_BoolModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_BoolModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_BoolModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_BoolModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_BoolModel * getPtr (void) const {
    return (cPtr_BoolModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_BoolModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_BoolModel * operator () (LOCATION_ARGS) const {
      return (cPtr_BoolModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__BoolModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_CharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_CharModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_CharModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_CharModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_CharModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_CharModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_CharModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_CharModel * getPtr (void) const {
    return (cPtr_CharModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_CharModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_CharModel * operator () (LOCATION_ARGS) const {
      return (cPtr_CharModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__CharModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_UIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_UIntModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_UIntModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_UIntModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_UIntModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_UIntModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_UIntModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_UIntModel * getPtr (void) const {
    return (cPtr_UIntModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_UIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_UIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_UIntModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__UIntModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_SIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_SIntModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_SIntModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_SIntModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_SIntModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_SIntModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_SIntModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_SIntModel * getPtr (void) const {
    return (cPtr_SIntModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_SIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_SIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_SIntModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__SIntModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_UInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_UInt64Model : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_UInt64Model (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_UInt64Model (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_UInt64Model (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_UInt64Model
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_UInt64Model constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_UInt64Model * getPtr (void) const {
    return (cPtr_UInt64Model *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_UInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_UInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_UInt64Model *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__UInt64Model ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_SInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_SInt64Model : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_SInt64Model (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_SInt64Model (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_SInt64Model (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_SInt64Model
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_SInt64Model constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_SInt64Model * getPtr (void) const {
    return (cPtr_SInt64Model *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_SInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_SInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_SInt64Model *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__SInt64Model ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_DoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_DoubleModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_DoubleModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_DoubleModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_DoubleModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_DoubleModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_DoubleModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_DoubleModel * getPtr (void) const {
    return (cPtr_DoubleModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_DoubleModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_DoubleModel * operator () (LOCATION_ARGS) const {
      return (cPtr_DoubleModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__DoubleModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_StringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_StringModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_StringModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_StringModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_StringModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_StringModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_StringModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_StringModel * getPtr (void) const {
    return (cPtr_StringModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_StringModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_StringModel * operator () (LOCATION_ARGS) const {
      return (cPtr_StringModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__StringModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LBoolModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LBoolModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LBoolModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LBoolModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LBoolModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_LBoolModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LBoolModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LBoolModel * getPtr (void) const {
    return (cPtr_LBoolModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LBoolModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LBoolModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LBoolModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__LBoolModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LCharModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LCharModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LCharModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LCharModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LCharModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_LCharModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LCharModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LCharModel * getPtr (void) const {
    return (cPtr_LCharModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LCharModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LCharModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LCharModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__LCharModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LUIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LUIntModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LUIntModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LUIntModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LUIntModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_LUIntModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LUIntModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LUIntModel * getPtr (void) const {
    return (cPtr_LUIntModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LUIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LUIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LUIntModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__LUIntModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_LSIntModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LSIntModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LSIntModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LSIntModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LSIntModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_LSIntModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LSIntModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LSIntModel * getPtr (void) const {
    return (cPtr_LSIntModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LSIntModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LSIntModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LSIntModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__LSIntModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LUInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LUInt64Model : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LUInt64Model (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LUInt64Model (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LUInt64Model (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_LUInt64Model
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LUInt64Model constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LUInt64Model * getPtr (void) const {
    return (cPtr_LUInt64Model *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LUInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LUInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_LUInt64Model *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__LUInt64Model ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LSInt64Model'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LSInt64Model : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LSInt64Model (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LSInt64Model (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LSInt64Model (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_LSInt64Model
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LSInt64Model constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LSInt64Model * getPtr (void) const {
    return (cPtr_LSInt64Model *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LSInt64Model * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LSInt64Model * operator () (LOCATION_ARGS) const {
      return (cPtr_LSInt64Model *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__LSInt64Model ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LDoubleModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LDoubleModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LDoubleModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LDoubleModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LDoubleModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_LDoubleModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LDoubleModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LDoubleModel * getPtr (void) const {
    return (cPtr_LDoubleModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LDoubleModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LDoubleModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LDoubleModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__LDoubleModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LStringModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LStringModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LStringModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LStringModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LStringModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_LStringModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LStringModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LStringModel * getPtr (void) const {
    return (cPtr_LStringModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LStringModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LStringModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LStringModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__LStringModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_StringsetModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_StringsetModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_StringsetModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_StringsetModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_StringsetModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_StringsetModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_StringsetModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_StringsetModel * getPtr (void) const {
    return (cPtr_StringsetModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_StringsetModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_StringsetModel * operator () (LOCATION_ARGS) const {
      return (cPtr_StringsetModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__StringsetModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_LocationModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_LocationModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_LocationModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_LocationModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_LocationModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_LocationModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_LocationModel constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_LocationModel * getPtr (void) const {
    return (cPtr_LocationModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_LocationModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_LocationModel * operator () (LOCATION_ARGS) const {
      return (cPtr_LocationModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__LocationModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_ListModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ListModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_ListModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_ListModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ListModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_ListModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ListModel constructor_new (C_Compiler & inLexique,
                                const GGS_typeListModel & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ListModel * getPtr (void) const {
    return (cPtr_ListModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListModel  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ListModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ListModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ListModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__ListModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_MapModel'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_MapModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_MapModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_MapModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_MapModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_MapModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_MapModel constructor_new (C_Compiler & inLexique,
                                const GGS_typeListModel & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_MapModel * getPtr (void) const {
    return (cPtr_MapModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListModel  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_MapModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_MapModel * operator () (LOCATION_ARGS) const {
      return (cPtr_MapModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__MapModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumConstantMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap ;

class GGS_enumConstantMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumConstantMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_enumConstantMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_enumConstantMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumConstantMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumConstantMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumConstantMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMHasConstructorForKey (C_Compiler & inLexique,
                        const GGS_bool& inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_bool&  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_bool  & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- 'searchKeyAndGetIndex' Search Method
  public : void method_searchKeyAndGetIndex (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_bool  & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_bool& inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_bool& outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_enumConstantMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumConstantMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumConstantMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumConstantMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumConstantMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_bool  & _mHasConstructor (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@enumUsedConstantMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumUsedConstantMap ;

class GGS_enumUsedConstantMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumUsedConstantMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_enumUsedConstantMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_enumUsedConstantMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumUsedConstantMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumUsedConstantMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumUsedConstantMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_enumUsedConstantMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumUsedConstantMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumUsedConstantMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumUsedConstantMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumUsedConstantMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumMessageMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap ;

class GGS_enumMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumMessageMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_enumMessageMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_enumMessageMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumMessageMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_enumMessageMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumMessageMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumMessageMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumMessageMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_EnumModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_EnumModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_EnumModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_EnumModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_EnumModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_EnumModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_EnumModel constructor_new (C_Compiler & inLexique,
                                const GGS_enumConstantMap & argument_0,
                                const GGS_enumMessageMap & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_EnumModel * getPtr (void) const {
    return (cPtr_EnumModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_enumConstantMap  reader_mEnumConstantesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumMessageMap  reader_mMessagesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_EnumModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_EnumModel * operator () (LOCATION_ARGS) const {
      return (cPtr_EnumModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__EnumModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@constructorMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap ;

class GGS_constructorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_constructorMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_constructorMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_constructorMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_constructorMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMFormalInputArgumentListForKey (C_Compiler & inLexique,
                        const GGS_typeListModel & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListModel &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListModel   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_typeListModel & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_typeListModel & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_constructorMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_constructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_constructorMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_constructorMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_constructorMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeListModel   & _mFormalInputArgumentList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@readerMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap ;

class GGS_readerMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_readerMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_readerMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_readerMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_readerMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMReaderFormalArgumentListForKey (C_Compiler & inLexique,
                        const GGS_L_signature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_signature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_signature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_readerMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_readerMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_readerMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_readerMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_readerMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_signature   & _mReaderFormalArgumentList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@modifierMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap ;

class GGS_modifierMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_modifierMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_modifierMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_modifierMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_modifierMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMModifierFormalArgumentListForKey (C_Compiler & inLexique,
                        const GGS_L_signature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_signature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_signature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_modifierMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_modifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_modifierMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_modifierMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_modifierMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_signature   & _mModifierFormalArgumentList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_ExternTypeModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ExternTypeModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_ExternTypeModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_ExternTypeModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ExternTypeModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_ExternTypeModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ExternTypeModel constructor_new (C_Compiler & inLexique,
                                const GGS_constructorMap & argument_0,
                                const GGS_readerMap & argument_1,
                                const GGS_modifierMap & argument_2,
                                const GGS_typeListModel & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ExternTypeModel * getPtr (void) const {
    return (cPtr_ExternTypeModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_constructorMap  reader_mExternTypeConstructorMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_readerMap  reader_mReaderMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_modifierMap  reader_mModifierMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListModel  reader_mAddAssignFormalInputArgumentList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ExternTypeModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ExternTypeModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ExternTypeModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__ExternTypeModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@classMessageMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap ;

class GGS_classMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_classMessageMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_classMessageMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_classMessageMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_classMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_classMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_classMessageMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_classMessageMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_classMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_classMessageMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_classMessageMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_classMessageMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_ClassModel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ClassModel : public GGS_TypeModel {
//--- Default constructor
  public : inline GGS_ClassModel (void) :
  GGS_TypeModel () {}

//--- Pointer assignment constructor
  public : GGS_ClassModel (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ClassModel (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_ClassModel
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ClassModel constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_typeListModel & argument_2,
                                const GGS_classMessageMap & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ClassModel * getPtr (void) const {
    return (cPtr_ClassModel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset  reader_mSuperClasses (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListModel  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_classMessageMap  reader_mMessageMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ClassModel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ClassModel * operator () (LOCATION_ARGS) const {
      return (cPtr_ClassModel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__ClassModel ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ModelMap'                               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap ;

class GGS_ModelMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_ModelMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_ModelMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_ModelMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_ModelMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ModelMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_ModelMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMTypeForKey (C_Compiler & inLexique,
                        const GGS_TypeModel & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_TypeModel &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_TypeModel   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_TypeModel & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_TypeModel & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_ModelMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_ModelMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ModelMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_ModelMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_ModelMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_TypeModel   & _mType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ActionMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap ;

class GGS_ActionMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_ActionMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_ActionMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_ActionMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_ActionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ActionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_ActionMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMSignatureForKey (C_Compiler & inLexique,
                        const GGS_L_signature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMIsExternForKey (C_Compiler & inLexique,
                        const GGS_bool& inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_signature & inParameter0,
                                   const GGS_bool& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_signature & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_ActionMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_ActionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ActionMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_ActionMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_ActionMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_signature   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mIsExtern (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for 'localConstantBuildStyleEnum' Enumeration             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localConstantBuildStyleEnum {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_firstIsKeyOtherMapStyle, enum_listStyle, enum_mapStyle} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_localConstantBuildStyleEnum (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_localConstantBuildStyleEnum (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool _isBuilt (void) const ;

//--- Construction from GALGAS constructor
  public : static inline GGS_localConstantBuildStyleEnum  constructor_firstIsKeyOtherMapStyle (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_firstIsKeyOtherMapStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum  constructor_listStyle (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_listStyle) ;
  }
  public : static inline GGS_localConstantBuildStyleEnum  constructor_mapStyle (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_localConstantBuildStyleEnum (enum_mapStyle) ;
  }

//--- Readers

//--- Modifiers

//--- Methods

//--- Operators

//--- 'description' reader
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void _drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_infOrEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_supOrEqual (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_strictInf (const GGS_localConstantBuildStyleEnum inOperand) const ;
  public : GGS_bool _operator_strictSup (const GGS_localConstantBuildStyleEnum inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_AC_galgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_galgasType : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_AC_galgasType (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_galgasType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_galgasType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_AC_galgasType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_galgasType * getPtr (void) const {
    return (cPtr_AC_galgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_galgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_galgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_galgasType *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__AC_galgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeCplusPlusName'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCplusPlusName : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_typeCplusPlusName (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_typeCplusPlusName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCplusPlusName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeCplusPlusName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCplusPlusName * getPtr (void) const {
    return (cPtr_typeCplusPlusName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mVariableLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCplusPlusName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCplusPlusName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCplusPlusName *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__typeCplusPlusName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeDirectName'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDirectName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeDirectName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeDirectName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeDirectName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeDirectName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeDirectName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeDirectName * getPtr (void) const {
    return (cPtr_typeDirectName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDirectName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDirectName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDirectName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeDirectName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeCurrentObjectName'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCurrentObjectName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeCurrentObjectName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeCurrentObjectName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCurrentObjectName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeCurrentObjectName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCurrentObjectName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCurrentObjectName * getPtr (void) const {
    return (cPtr_typeCurrentObjectName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCurrentObjectName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCurrentObjectName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCurrentObjectName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeCurrentObjectName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeCppThisName'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCppThisName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeCppThisName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeCppThisName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCppThisName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeCppThisName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCppThisName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCppThisName * getPtr (void) const {
    return (cPtr_typeCppThisName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCppThisName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCppThisName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCppThisName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeCppThisName ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeCppThisInCategoryName'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCppThisInCategoryName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeCppThisInCategoryName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeCppThisInCategoryName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCppThisInCategoryName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeCppThisInCategoryName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCppThisInCategoryName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCppThisInCategoryName * getPtr (void) const {
    return (cPtr_typeCppThisInCategoryName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCppThisInCategoryName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCppThisInCategoryName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCppThisInCategoryName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeCppThisInCategoryName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeCppInheritedName'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeCppInheritedName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeCppInheritedName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeCppInheritedName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeCppInheritedName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeCppInheritedName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeCppInheritedName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeCppInheritedName * getPtr (void) const {
    return (cPtr_typeCppInheritedName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeCppInheritedName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeCppInheritedName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeCppInheritedName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeCppInheritedName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeAutomaticName'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeAutomaticName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeAutomaticName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeAutomaticName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeAutomaticName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeAutomaticName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeAutomaticName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeAutomaticName * getPtr (void) const {
    return (cPtr_typeAutomaticName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeAutomaticName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeAutomaticName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeAutomaticName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeAutomaticName ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeLocationAutomaticName'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeLocationAutomaticName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeLocationAutomaticName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeLocationAutomaticName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeLocationAutomaticName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeLocationAutomaticName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeLocationAutomaticName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeLocationAutomaticName * getPtr (void) const {
    return (cPtr_typeLocationAutomaticName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_mSequenceNumber (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeLocationAutomaticName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeLocationAutomaticName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeLocationAutomaticName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeLocationAutomaticName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeOperandName'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeOperandName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeOperandName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeOperandName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeOperandName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeOperandName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeOperandName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeOperandName * getPtr (void) const {
    return (cPtr_typeOperandName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mFieldKind (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mIteratorNewStyle (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeOperandName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeOperandName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeOperandName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeOperandName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_typeKeyName'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeKeyName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeKeyName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeKeyName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeKeyName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeKeyName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeKeyName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeKeyName * getPtr (void) const {
    return (cPtr_typeKeyName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIteratorNewStyle (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeKeyName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeKeyName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeKeyName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeKeyName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_typeNullName'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeNullName : public GGS_typeCplusPlusName {
//--- Default constructor
  public : inline GGS_typeNullName (void) :
  GGS_typeCplusPlusName () {}

//--- Pointer assignment constructor
  public : GGS_typeNullName (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeNullName (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeNullName
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeNullName constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeNullName * getPtr (void) const {
    return (cPtr_typeNullName *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeNullName * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeNullName * operator () (LOCATION_ARGS) const {
      return (cPtr_typeNullName *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeNullName ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeListeTypesEtNomsArgMethode'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeTypesEtNomsArgMethode ;

class GGS_typeListeTypesEtNomsArgMethode : public AC_galgas_list {
  public : typedef elementOf_GGS_typeListeTypesEtNomsArgMethode cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeListeTypesEtNomsArgMethode constructor_emptyList (void) ;
  public : static GGS_typeListeTypesEtNomsArgMethode constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeListeTypesEtNomsArgMethode & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_typeListeTypesEtNomsArgMethode
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeListeTypesEtNomsArgMethode
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeListeTypesEtNomsArgMethode * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_EXformalArgumentPassingMode& _out_1,
                              GGS_typeCplusPlusName & _out_2,
                              GGS_bool& _out_3,
                              GGS_lstring & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_EXformalArgumentPassingMode& _out_1,
                             GGS_typeCplusPlusName & _out_2,
                             GGS_bool& _out_3,
                             GGS_lstring & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_EXformalArgumentPassingMode& _out_1,
                                GGS_typeCplusPlusName & _out_2,
                                GGS_bool& _out_3,
                                GGS_lstring & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_EXformalArgumentPassingMode& _out_1,
                                 GGS_typeCplusPlusName & _out_2,
                                 GGS_bool& _out_3,
                                 GGS_lstring & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_typeListeTypesEtNomsArgMethode inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeListeTypesEtNomsArgMethode _operator_concat (const GGS_typeListeTypesEtNomsArgMethode & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1,
                                const GGS_typeCplusPlusName & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_lstring & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_EXformalArgumentPassingMode
  reader_mFormalArgumentPassingModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeCplusPlusName 
  reader_mCppNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mModeInAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mParameterNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_Compiler & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalArgumentPassingModeAtIndex (C_Compiler & inLexique,
                              const GGS_EXformalArgumentPassingMode & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMCppNameAtIndex (C_Compiler & inLexique,
                              const GGS_typeCplusPlusName  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMModeInAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMParameterNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeListeTypesEtNomsArgMethode & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
  public : /* const */ GGS_EXformalArgumentPassingMode  & _mFormalArgumentPassingMode (LOCATION_ARGS) const ;
  public : /* const */ GGS_typeCplusPlusName   & _mCppName (LOCATION_ARGS) const ;
  public : /* const */ GGS_bool  & _mModeIn (LOCATION_ARGS) const ;
  public : /* const */ GGS_lstring   & _mParameterName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeSuperClassesMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap ;

class GGS_typeSuperClassesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSuperClassesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeSuperClassesMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeSuperClassesMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeSuperClassesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeSuperClassesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeSuperClassesMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeSuperClassesMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeSuperClassesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeSuperClassesMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeSuperClassesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeSuperClassesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@typeListeAttributsSemantiques'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques ;

class GGS_typeListeAttributsSemantiques : public AC_galgas_list {
  public : typedef elementOf_GGS_typeListeAttributsSemantiques cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeListeAttributsSemantiques constructor_emptyList (void) ;
  public : static GGS_typeListeAttributsSemantiques constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeListeAttributsSemantiques & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_typeListeAttributsSemantiques
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeListeAttributsSemantiques
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeListeAttributsSemantiques * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_typeListeAttributsSemantiques inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeListeAttributsSemantiques _operator_concat (const GGS_typeListeAttributsSemantiques & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mAttributTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAttributTypeAtIndex (C_Compiler & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeListeAttributsSemantiques & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_AC_galgasType   & _mAttributType (LOCATION_ARGS) const ;
  public : /* const */ GGS_lstring   & _mAttributeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@typeTypesList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList ;

class GGS_typeTypesList : public AC_galgas_list {
  public : typedef elementOf_GGS_typeTypesList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeTypesList constructor_emptyList (void) ;
  public : static GGS_typeTypesList constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeTypesList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_typeTypesList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeTypesList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeTypesList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_location & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_location & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_location & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_location & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_typeTypesList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeTypesList _operator_concat (const GGS_typeTypesList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_location 
  reader_mEndOfExpressionLocationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_Compiler & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEndOfExpressionLocationAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeTypesList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
  public : /* const */ GGS_location   & _mEndOfExpressionLocation (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@L_EXsignature'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature ;

class GGS_L_EXsignature : public AC_galgas_list {
  public : typedef elementOf_GGS_L_EXsignature cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_EXsignature constructor_emptyList (void) ;
  public : static GGS_L_EXsignature constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_EXsignature & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_EXsignature
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_EXsignature
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_EXsignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_EXformalArgumentPassingMode& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_EXformalArgumentPassingMode& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_EXformalArgumentPassingMode& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_EXformalArgumentPassingMode& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_L_EXsignature inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_EXsignature _operator_concat (const GGS_L_EXsignature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_EXformalArgumentPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_EXformalArgumentPassingMode
  reader_mFormalArgumentPassingModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_Compiler & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalArgumentPassingModeAtIndex (C_Compiler & inLexique,
                              const GGS_EXformalArgumentPassingMode & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_EXsignature & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
  public : /* const */ GGS_EXformalArgumentPassingMode  & _mFormalArgumentPassingMode (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Class for 'categoryMethodKind' Enumeration                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_categoryMethodKind {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_abstractMethod, enum_baseMethod, enum_overridingMethod} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_categoryMethodKind (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_categoryMethodKind (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline uint16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool _isBuilt (void) const ;

//--- Construction from GALGAS constructor
  public : static inline GGS_categoryMethodKind  constructor_abstractMethod (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_categoryMethodKind (enum_abstractMethod) ;
  }
  public : static inline GGS_categoryMethodKind  constructor_baseMethod (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_categoryMethodKind (enum_baseMethod) ;
  }
  public : static inline GGS_categoryMethodKind  constructor_overridingMethod (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_categoryMethodKind (enum_overridingMethod) ;
  }

//--- Readers

//--- Modifiers

//--- Methods

//--- Operators

//--- 'description' reader
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void _drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool _operator_isEqual (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool _operator_infOrEqual (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool _operator_supOrEqual (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool _operator_strictInf (const GGS_categoryMethodKind inOperand) const ;
  public : GGS_bool _operator_strictSup (const GGS_categoryMethodKind inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@EXcategoryMethodMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_EXcategoryMethodMap ;

class GGS_EXcategoryMethodMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_EXcategoryMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_EXcategoryMethodMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_EXcategoryMethodMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_EXcategoryMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_EXcategoryMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_EXcategoryMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMCategoryMethodKindForKey (C_Compiler & inLexique,
                        const GGS_categoryMethodKind& inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setAListeArgumentsFormelsForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_categoryMethodKind&  inParameter0,
                                const GGS_L_EXsignature &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_categoryMethodKind  & outParameter0,
                                GGS_L_EXsignature   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- 'searchKeyAndGetIndex' Search Method
  public : void method_searchKeyAndGetIndex (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_categoryMethodKind  & outParameter0,
                                GGS_L_EXsignature   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_categoryMethodKind& inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_categoryMethodKind& outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_EXcategoryMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_EXcategoryMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_EXcategoryMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_EXcategoryMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_EXcategoryMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_categoryMethodKind  & _mCategoryMethodKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_EXsignature   & _aListeArgumentsFormels (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@L_actualParametersSignature'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature ;

class GGS_L_actualParametersSignature : public AC_galgas_list {
  public : typedef elementOf_GGS_L_actualParametersSignature cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_actualParametersSignature constructor_emptyList (void) ;
  public : static GGS_L_actualParametersSignature constructor_listWithValue (const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_actualParametersSignature & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_actualParametersSignature
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_actualParametersSignature
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_actualParametersSignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_galgasType & _out_0,
                              GGS_EXactualParametersPassingMode& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_galgasType & _out_0,
                             GGS_EXactualParametersPassingMode& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_galgasType & _out_0,
                                GGS_EXactualParametersPassingMode& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_galgasType & _out_0,
                                 GGS_EXactualParametersPassingMode& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_L_actualParametersSignature inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_actualParametersSignature _operator_concat (const GGS_L_actualParametersSignature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_galgasType & argument_0,
                                const GGS_EXactualParametersPassingMode& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_galgasType 
  reader_mTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_EXactualParametersPassingMode
  reader_mFormalArgumentPassingModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_Compiler & inLexique,
                              const GGS_AC_galgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalArgumentPassingModeAtIndex (C_Compiler & inLexique,
                              const GGS_EXactualParametersPassingMode & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_actualParametersSignature & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
  public : /* const */ GGS_EXactualParametersPassingMode  & _mFormalArgumentPassingMode (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@M_accessors_map'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map ;

class GGS_M_accessors_map : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_accessors_map cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_accessors_map & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_accessors_map & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_accessors_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_accessors_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_accessors_map constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMAccessorSignatureForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMReturnedTypeForKey (C_Compiler & inLexique,
                        const GGS_AC_galgasType & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_AC_galgasType &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_AC_galgasType   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   const GGS_AC_galgasType & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_AC_galgasType & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_accessors_map constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_accessors_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_accessors_map reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_accessors_map & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_accessors_map & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mAccessorSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_AC_galgasType   & _mReturnedType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeGalgas_jokerInParameterList'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_jokerInParameterList : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_jokerInParameterList (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_jokerInParameterList (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_jokerInParameterList (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_jokerInParameterList
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_jokerInParameterList constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_jokerInParameterList * getPtr (void) const {
    return (cPtr_typeGalgas_jokerInParameterList *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_jokerInParameterList * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_jokerInParameterList * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_jokerInParameterList *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_jokerInParameterList ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_bool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_bool : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_bool (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_bool (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_bool (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_bool
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_bool constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_bool * getPtr (void) const {
    return (cPtr_typeGalgas_bool *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_bool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_bool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_bool *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_bool ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_uint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_uint : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_uint (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_uint (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_uint (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_uint
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_uint constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_uint * getPtr (void) const {
    return (cPtr_typeGalgas_uint *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_uint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_uint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_uint *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_uint ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_char'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_char : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_char (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_char (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_char (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_char
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_char constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_char * getPtr (void) const {
    return (cPtr_typeGalgas_char *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_char * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_char * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_char *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_char ;

void routine_extern_build_stringlist_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_string'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_string : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_string (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_string (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_string (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_string
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_string constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_string * getPtr (void) const {
    return (cPtr_typeGalgas_string *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_string * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_string * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_string *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_string ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_sint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_sint : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_sint (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_sint (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_sint (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_sint
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_sint constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_sint * getPtr (void) const {
    return (cPtr_typeGalgas_sint *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_sint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_sint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_sint *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_sint ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_sint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_sint64 : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_sint64 (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_sint64 (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_sint64 (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_sint64
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_sint64 constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_sint64 * getPtr (void) const {
    return (cPtr_typeGalgas_sint64 *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_sint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_sint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_sint64 *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_sint64 ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_uint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_uint64 : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_uint64 (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_uint64 (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_uint64 (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_uint64
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_uint64 constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_uint64 * getPtr (void) const {
    return (cPtr_typeGalgas_uint64 *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_uint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_uint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_uint64 *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_uint64 ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_double'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_double : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_double (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_double (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_double (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_double
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_double constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_double * getPtr (void) const {
    return (cPtr_typeGalgas_double *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_double * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_double * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_double *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_double ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgas_binaryset'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_binaryset : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_binaryset (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_binaryset (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_binaryset (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_binaryset
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_binaryset constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_binaryset * getPtr (void) const {
    return (cPtr_typeGalgas_binaryset *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_binaryset * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_binaryset * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_binaryset *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_binaryset ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_galgasPrimitiveType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_galgasPrimitiveType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_C_galgasPrimitiveType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_C_galgasPrimitiveType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_galgasPrimitiveType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_C_galgasPrimitiveType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_galgasPrimitiveType * getPtr (void) const {
    return (cPtr_C_galgasPrimitiveType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_galgasPrimitiveType * operator () (LOCATION_ARGS) const {
      return (cPtr_C_galgasPrimitiveType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__C_galgasPrimitiveType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_location'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_location : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_location (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_location (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_location (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_location
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_location constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_location * getPtr (void) const {
    return (cPtr_typeGalgas_location *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_location * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_location * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_location *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_location ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_lstring'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lstring : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lstring (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lstring (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lstring (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lstring
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lstring constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lstring * getPtr (void) const {
    return (cPtr_typeGalgas_lstring *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lstring * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lstring * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lstring *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_lstring ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lchar'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lchar : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lchar (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lchar (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lchar (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lchar
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lchar constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lchar * getPtr (void) const {
    return (cPtr_typeGalgas_lchar *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lchar * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lchar * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lchar *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_lchar ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lbool'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lbool : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lbool (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lbool (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lbool (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lbool
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lbool constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lbool * getPtr (void) const {
    return (cPtr_typeGalgas_lbool *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lbool * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lbool * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lbool *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_lbool ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_luint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_luint : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_luint (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_luint (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_luint (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_luint
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_luint constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_luint * getPtr (void) const {
    return (cPtr_typeGalgas_luint *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_luint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_luint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_luint *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_luint ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_luint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_luint64 : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_luint64 (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_luint64 (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_luint64 (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_luint64
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_luint64 constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_luint64 * getPtr (void) const {
    return (cPtr_typeGalgas_luint64 *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_luint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_luint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_luint64 *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_luint64 ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgas_lsint'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lsint : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lsint (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lsint (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lsint (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lsint
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lsint constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lsint * getPtr (void) const {
    return (cPtr_typeGalgas_lsint *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lsint * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lsint * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lsint *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_lsint ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_lsint64'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_lsint64 : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_lsint64 (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_lsint64 (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_lsint64 (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_lsint64
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_lsint64 constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_lsint64 * getPtr (void) const {
    return (cPtr_typeGalgas_lsint64 *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_lsint64 * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_lsint64 * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_lsint64 *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_lsint64 ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgas_ldouble'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_ldouble : public GGS_C_galgasPrimitiveType {
//--- Default constructor
  public : inline GGS_typeGalgas_ldouble (void) :
  GGS_C_galgasPrimitiveType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_ldouble (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_ldouble (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_ldouble
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_ldouble constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_ldouble * getPtr (void) const {
    return (cPtr_typeGalgas_ldouble *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_ldouble * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_ldouble * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_ldouble *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_ldouble ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgas_stringset'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_stringset : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_stringset (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_stringset (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_stringset (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_stringset
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_stringset constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_stringset * getPtr (void) const {
    return (cPtr_typeGalgas_stringset *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_stringset * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_stringset * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_stringset *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_stringset ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeGalgas_filewrapper'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_filewrapper : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_filewrapper (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_filewrapper (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_filewrapper (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_filewrapper
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_filewrapper constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_filewrapper * getPtr (void) const {
    return (cPtr_typeGalgas_filewrapper *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_filewrapper * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_filewrapper * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_filewrapper *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_filewrapper ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeTableMethodes'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableMethodes ;

class GGS_typeTableMethodes : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableMethodes cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeTableMethodes & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeTableMethodes & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableMethodes * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableMethodes * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableMethodes constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setAListeTypesParametresForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeTableMethodes constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeTableMethodes & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableMethodes reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeTableMethodes & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeTableMethodes & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _aListeTypesParametres (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedExternType'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedExternType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedExternType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedExternType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedExternType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedExternType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedExternType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedExternType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedExternType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mGalgasClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedExternType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedExternType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedExternType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasUndefinedExternType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_externTypeConstructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap ;

class GGS_M_externTypeConstructorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_externTypeConstructorMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_externTypeConstructorMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_externTypeConstructorMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_externTypeConstructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_externTypeConstructorMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setAListeDesAttributsForKey (C_Compiler & inLexique,
                        const GGS_typeListeAttributsSemantiques & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_typeListeAttributsSemantiques & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_typeListeAttributsSemantiques & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_externTypeConstructorMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_externTypeConstructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_externTypeConstructorMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_externTypeConstructorMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_externTypeConstructorMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeListeAttributsSemantiques   & _aListeDesAttributs (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasExternType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasExternType : public GGS_typeGalgasUndefinedExternType {
//--- Default constructor
  public : inline GGS_typeGalgasExternType (void) :
  GGS_typeGalgasUndefinedExternType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasExternType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasExternType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasExternType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasExternType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_M_externTypeConstructorMap & argument_1,
                                const GGS_typeTableMethodes & argument_2,
                                const GGS_typeTableMethodes & argument_3,
                                const GGS_bool& argument_4,
                                const GGS_typeListeAttributsSemantiques & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasExternType * getPtr (void) const {
    return (cPtr_typeGalgasExternType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_M_externTypeConstructorMap  reader_mConstructorMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeTableMethodes  reader_mModifiersMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeTableMethodes  reader_mReadersInInstructionMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mAcceptAddAssignOperatorCall (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mAddAssignOperatorCallTypeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasExternType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasExternType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasExternType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasExternType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_terminalSymbolsMapForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse ;

class GGS_M_terminalSymbolsMapForUse : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_terminalSymbolsMapForUse cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_terminalSymbolsMapForUse & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_terminalSymbolsMapForUse & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_terminalSymbolsMapForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_terminalSymbolsMapForUse * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_terminalSymbolsMapForUse constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setAListeDesAttributsForKey (C_Compiler & inLexique,
                        const GGS_typeListeAttributsSemantiques & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- 'searchKeyGetID' Search Method
  public : void method_searchKeyGetID (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_typeListeAttributsSemantiques & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_typeListeAttributsSemantiques & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_terminalSymbolsMapForUse constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_terminalSymbolsMapForUse & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_terminalSymbolsMapForUse reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_terminalSymbolsMapForUse & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_terminalSymbolsMapForUse & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeListeAttributsSemantiques   & _aListeDesAttributs (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_lexiqueComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents ;

class GGS_M_lexiqueComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_lexiqueComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_lexiqueComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_lexiqueComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_lexiqueComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_lexiqueComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_lexiqueComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMTerminalSymbolMapForKey (C_Compiler & inLexique,
                        const GGS_M_terminalSymbolsMapForUse & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_terminalSymbolsMapForUse &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_terminalSymbolsMapForUse   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_terminalSymbolsMapForUse & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_terminalSymbolsMapForUse & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_lexiqueComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_lexiqueComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_lexiqueComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_lexiqueComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_lexiqueComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_terminalSymbolsMapForUse   & _mTerminalSymbolMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@typeTableEnAvant'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant ;

class GGS_typeTableEnAvant : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableEnAvant cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeTableEnAvant & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeTableEnAvant & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableEnAvant * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableEnAvant * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableEnAvant constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMTypeForKey (C_Compiler & inLexique,
                        const GGS_AC_galgasType & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_AC_galgasType & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_AC_galgasType & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeTableEnAvant constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeTableEnAvant & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableEnAvant reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeTableEnAvant & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeTableEnAvant & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@M_nonterminalSymbolAlts'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts ;

class GGS_M_nonterminalSymbolAlts : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonterminalSymbolAlts cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_nonterminalSymbolAlts & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_nonterminalSymbolAlts & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_nonterminalSymbolAlts * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonterminalSymbolAlts * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_nonterminalSymbolAlts constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMFormalParametersListForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_nonterminalSymbolAlts constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_nonterminalSymbolAlts & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonterminalSymbolAlts reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_nonterminalSymbolAlts & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_nonterminalSymbolAlts & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mFormalParametersList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_AC_semanticsEntity'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_semanticsEntity : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_AC_semanticsEntity (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_semanticsEntity (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_semanticsEntity (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_AC_semanticsEntity
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_semanticsEntity * getPtr (void) const {
    return (cPtr_AC_semanticsEntity *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_semanticsEntity * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_semanticsEntity *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__AC_semanticsEntity ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_C_grammarForSemantics'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_C_grammarForSemantics : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_C_grammarForSemantics (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_C_grammarForSemantics (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_C_grammarForSemantics (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_C_grammarForSemantics
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_C_grammarForSemantics constructor_new (C_Compiler & inLexique,
                                const GGS_M_nonterminalSymbolAlts & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_C_grammarForSemantics * getPtr (void) const {
    return (cPtr_C_grammarForSemantics *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_M_nonterminalSymbolAlts  reader_mGrammarAltMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mLexiqueClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_C_grammarForSemantics * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_C_grammarForSemantics * operator () (LOCATION_ARGS) const {
      return (cPtr_C_grammarForSemantics *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__C_grammarForSemantics ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@M_semanticsEntitiesForUse'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse ;

class GGS_M_semanticsEntitiesForUse : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsEntitiesForUse cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_semanticsEntitiesForUse & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_semanticsEntitiesForUse & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsEntitiesForUse * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_semanticsEntitiesForUse * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_semanticsEntitiesForUse constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setADefEntiteForKey (C_Compiler & inLexique,
                        const GGS_AC_semanticsEntity & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_semanticsEntity &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_semanticsEntity   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_AC_semanticsEntity & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_AC_semanticsEntity & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_semanticsEntitiesForUse constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_semanticsEntitiesForUse & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_semanticsEntitiesForUse reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_semanticsEntitiesForUse & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_semanticsEntitiesForUse & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_semanticsEntity   & _aDefEntite (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_AC_typeForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_typeForGrammarComponent : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_AC_typeForGrammarComponent (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_typeForGrammarComponent (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_typeForGrammarComponent (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_AC_typeForGrammarComponent
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_typeForGrammarComponent * getPtr (void) const {
    return (cPtr_AC_typeForGrammarComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'typeForGrammarComponentMessage' message
  public : GGS_string reader_typeForGrammarComponentMessage (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_typeForGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_typeForGrammarComponent *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__AC_typeForGrammarComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@M_typesForGrammarComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent ;

class GGS_M_typesForGrammarComponent : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_typesForGrammarComponent cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_typesForGrammarComponent & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_typesForGrammarComponent & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_typesForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_typesForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_typesForGrammarComponent constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMTypeForKey (C_Compiler & inLexique,
                        const GGS_AC_typeForGrammarComponent & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_typeForGrammarComponent &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_typeForGrammarComponent   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_AC_typeForGrammarComponent & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_AC_typeForGrammarComponent & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_typesForGrammarComponent constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_typesForGrammarComponent & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_typesForGrammarComponent reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_typesForGrammarComponent & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_typesForGrammarComponent & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_typeForGrammarComponent   & _mType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'checkSignature_ForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkSignature_ForGrammarComponent (C_Compiler &,
                                const GGS_L_signature  ,
                                const GGS_L_signature  ,
                                const GGS_location  ,
                                const GGS_location   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_AC_instruction_ForGrammar'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_AC_instruction_ForGrammar : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_AC_instruction_ForGrammar (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_AC_instruction_ForGrammar (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_AC_instruction_ForGrammar (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_AC_instruction_ForGrammar
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_AC_instruction_ForGrammar * getPtr (void) const {
    return (cPtr_AC_instruction_ForGrammar *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mStartLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_AC_instruction_ForGrammar * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_AC_instruction_ForGrammar * operator () (LOCATION_ARGS) const {
      return (cPtr_AC_instruction_ForGrammar *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__AC_instruction_ForGrammar ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@L_ruleSyntaxSignature'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ruleSyntaxSignature ;

class GGS_L_ruleSyntaxSignature : public AC_galgas_list {
  public : typedef elementOf_GGS_L_ruleSyntaxSignature cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_ruleSyntaxSignature constructor_emptyList (void) ;
  public : static GGS_L_ruleSyntaxSignature constructor_listWithValue (const GGS_AC_instruction_ForGrammar & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_ruleSyntaxSignature & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_ruleSyntaxSignature
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_ruleSyntaxSignature
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_ruleSyntaxSignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_AC_instruction_ForGrammar & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_AC_instruction_ForGrammar & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_AC_instruction_ForGrammar & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_AC_instruction_ForGrammar & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_L_ruleSyntaxSignature inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_AC_instruction_ForGrammar & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_ruleSyntaxSignature _operator_concat (const GGS_L_ruleSyntaxSignature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_AC_instruction_ForGrammar & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_AC_instruction_ForGrammar & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_AC_instruction_ForGrammar & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_AC_instruction_ForGrammar 
  reader_mInstructionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInstructionAtIndex (C_Compiler & inLexique,
                              const GGS_AC_instruction_ForGrammar  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_ruleSyntaxSignature & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_AC_instruction_ForGrammar   & _mInstruction (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@L_grammarsMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap ;

class GGS_L_grammarsMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_L_grammarsMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_L_grammarsMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_L_grammarsMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_L_grammarsMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_L_grammarsMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_L_grammarsMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMStartSymbolParametersMapForKey (C_Compiler & inLexique,
                        const GGS_M_nonterminalSymbolAlts & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAlts &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAlts   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_nonterminalSymbolAlts & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_nonterminalSymbolAlts & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_L_grammarsMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_L_grammarsMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_L_grammarsMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_L_grammarsMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_L_grammarsMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_nonterminalSymbolAlts   & _mStartSymbolParametersMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Map '@M_nonterminalSymbolAltsForGrammar'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAltsForGrammar ;

class GGS_M_nonterminalSymbolAltsForGrammar : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonterminalSymbolAltsForGrammar cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_nonterminalSymbolAltsForGrammar & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_nonterminalSymbolAltsForGrammar & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_nonterminalSymbolAltsForGrammar * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonterminalSymbolAltsForGrammar * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_nonterminalSymbolAltsForGrammar constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMFormalParametersListForKey (C_Compiler & inLexique,
                        const GGS_L_signature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_signature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_signature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_signature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_nonterminalSymbolAltsForGrammar constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_nonterminalSymbolAltsForGrammar & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonterminalSymbolAltsForGrammar reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_nonterminalSymbolAltsForGrammar & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_nonterminalSymbolAltsForGrammar & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_signature   & _mFormalParametersList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              list '@L_productionRules_ForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_productionRules_ForGrammarComponent ;

class GGS_L_productionRules_ForGrammarComponent : public AC_galgas_list {
  public : typedef elementOf_GGS_L_productionRules_ForGrammarComponent cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_productionRules_ForGrammarComponent constructor_emptyList (void) ;
  public : static GGS_L_productionRules_ForGrammarComponent constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_productionRules_ForGrammarComponent & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_productionRules_ForGrammarComponent
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_productionRules_ForGrammarComponent
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_productionRules_ForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_uint & _out_1,
                              GGS_L_ruleSyntaxSignature & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_uint & _out_1,
                             GGS_L_ruleSyntaxSignature & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_uint & _out_1,
                                GGS_L_ruleSyntaxSignature & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_uint & _out_1,
                                 GGS_L_ruleSyntaxSignature & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_L_productionRules_ForGrammarComponent inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_productionRules_ForGrammarComponent _operator_concat (const GGS_L_productionRules_ForGrammarComponent & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_L_ruleSyntaxSignature & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mLeftNonterminalSymbolAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mLeftNonterminalSymbolIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_L_ruleSyntaxSignature 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMLeftNonterminalSymbolAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMLeftNonterminalSymbolIndexAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_L_ruleSyntaxSignature  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_productionRules_ForGrammarComponent & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mLeftNonterminalSymbol (LOCATION_ARGS) const ;
  public : /* const */ GGS_uint   & _mLeftNonterminalSymbolIndex (LOCATION_ARGS) const ;
  public : /* const */ GGS_L_ruleSyntaxSignature   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Map '@M_nonTerminalSymbolsForGrammar'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolsForGrammar ;

class GGS_M_nonTerminalSymbolsForGrammar : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_nonTerminalSymbolsForGrammar cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_nonTerminalSymbolsForGrammar & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_nonTerminalSymbolsForGrammar & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_nonTerminalSymbolsForGrammar * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_nonTerminalSymbolsForGrammar * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_nonTerminalSymbolsForGrammar constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMNonterminalSymbolParametersMapForKey (C_Compiler & inLexique,
                        const GGS_M_nonterminalSymbolAltsForGrammar & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAltsForGrammar &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- 'searchKeyGetID' Search Method
  public : void method_searchKeyGetID (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_luint & outIndex,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_nonterminalSymbolAltsForGrammar & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_nonterminalSymbolAltsForGrammar & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_nonTerminalSymbolsForGrammar constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_nonTerminalSymbolsForGrammar & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_nonTerminalSymbolsForGrammar reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_nonTerminalSymbolsForGrammar & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_nonTerminalSymbolsForGrammar & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_nonterminalSymbolAltsForGrammar   & _mNonterminalSymbolParametersMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Map '@M_unusedNonTerminalSymbolsForGrammar'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar ;

class GGS_M_unusedNonTerminalSymbolsForGrammar : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_unusedNonTerminalSymbolsForGrammar & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_unusedNonTerminalSymbolsForGrammar & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_unusedNonTerminalSymbolsForGrammar * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_unusedNonTerminalSymbolsForGrammar * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_unusedNonTerminalSymbolsForGrammar constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMSymbolIndexForKey (C_Compiler & inLexique,
                        const GGS_luint & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_luint &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_luint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_unusedNonTerminalSymbolsForGrammar constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_unusedNonTerminalSymbolsForGrammar & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_unusedNonTerminalSymbolsForGrammar reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_unusedNonTerminalSymbolsForGrammar & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_unusedNonTerminalSymbolsForGrammar & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_luint   & _mSymbolIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_syntaxComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents ;

class GGS_M_syntaxComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_syntaxComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_syntaxComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_syntaxComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_syntaxComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_syntaxComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_syntaxComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMNonterminalSymbolsMapForKey (C_Compiler & inLexique,
                        const GGS_M_nonTerminalSymbolsForGrammar & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMProductionRulesListForKey (C_Compiler & inLexique,
                        const GGS_L_productionRules_ForGrammarComponent & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMLexiqueComponentNameForKey (C_Compiler & inLexique,
                        const GGS_lstring & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonTerminalSymbolsForGrammar &  inParameter0,
                                const GGS_L_productionRules_ForGrammarComponent &  inParameter1,
                                const GGS_lstring &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonTerminalSymbolsForGrammar   & outParameter0,
                                GGS_L_productionRules_ForGrammarComponent   & outParameter1,
                                GGS_lstring   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_nonTerminalSymbolsForGrammar & inParameter0,
                                   const GGS_L_productionRules_ForGrammarComponent & inParameter1,
                                   const GGS_lstring & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_nonTerminalSymbolsForGrammar & outParameter0,
                                   GGS_L_productionRules_ForGrammarComponent & outParameter1,
                                   GGS_lstring & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_syntaxComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_syntaxComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_syntaxComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_syntaxComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_syntaxComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_nonTerminalSymbolsForGrammar   & _mNonterminalSymbolsMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_productionRules_ForGrammarComponent   & _mProductionRulesList (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mLexiqueComponentName (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       GALGAS class 'GGS_T_terminalInstruction_forGrammarComponent'        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_terminalInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- Default constructor
  public : inline GGS_T_terminalInstruction_forGrammarComponent (void) :
  GGS_AC_instruction_ForGrammar () {}

//--- Pointer assignment constructor
  public : GGS_T_terminalInstruction_forGrammarComponent (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_T_terminalInstruction_forGrammarComponent (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_T_terminalInstruction_forGrammarComponent
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_T_terminalInstruction_forGrammarComponent constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_T_terminalInstruction_forGrammarComponent * getPtr (void) const {
    return (cPtr_T_terminalInstruction_forGrammarComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTerminalSymbolName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mTerminalSymbolIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_terminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_terminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_terminalInstruction_forGrammarComponent *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__T_terminalInstruction_forGrammarComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//     GALGAS class 'GGS_T_nonterminalInstruction_forGrammarComponent'       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_nonterminalInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- Default constructor
  public : inline GGS_T_nonterminalInstruction_forGrammarComponent (void) :
  GGS_AC_instruction_ForGrammar () {}

//--- Pointer assignment constructor
  public : GGS_T_nonterminalInstruction_forGrammarComponent (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_T_nonterminalInstruction_forGrammarComponent (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_T_nonterminalInstruction_forGrammarComponent
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_T_nonterminalInstruction_forGrammarComponent constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_T_nonterminalInstruction_forGrammarComponent * getPtr (void) const {
    return (cPtr_T_nonterminalInstruction_forGrammarComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mNonterminalSymbolName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mNonterminalSymbolIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_nonterminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_nonterminalInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_nonterminalInstruction_forGrammarComponent *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__T_nonterminalInstruction_forGrammarComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 list '@L_branchList_ForGrammarComponent'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_branchList_ForGrammarComponent ;

class GGS_L_branchList_ForGrammarComponent : public AC_galgas_list {
  public : typedef elementOf_GGS_L_branchList_ForGrammarComponent cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_branchList_ForGrammarComponent constructor_emptyList (void) ;
  public : static GGS_L_branchList_ForGrammarComponent constructor_listWithValue (const GGS_L_ruleSyntaxSignature & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_branchList_ForGrammarComponent & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_branchList_ForGrammarComponent
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_branchList_ForGrammarComponent
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_branchList_ForGrammarComponent * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_L_ruleSyntaxSignature & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_L_ruleSyntaxSignature & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_L_ruleSyntaxSignature & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_L_ruleSyntaxSignature & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_L_branchList_ForGrammarComponent inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_L_ruleSyntaxSignature & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_branchList_ForGrammarComponent _operator_concat (const GGS_L_branchList_ForGrammarComponent & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_L_ruleSyntaxSignature & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_L_ruleSyntaxSignature & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_L_ruleSyntaxSignature & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_L_ruleSyntaxSignature 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_L_ruleSyntaxSignature  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_branchList_ForGrammarComponent & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_L_ruleSyntaxSignature   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_T_selectInstruction_forGrammarComponent'         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_selectInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- Default constructor
  public : inline GGS_T_selectInstruction_forGrammarComponent (void) :
  GGS_AC_instruction_ForGrammar () {}

//--- Pointer assignment constructor
  public : GGS_T_selectInstruction_forGrammarComponent (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_T_selectInstruction_forGrammarComponent (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_T_selectInstruction_forGrammarComponent
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_T_selectInstruction_forGrammarComponent constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_T_selectInstruction_forGrammarComponent * getPtr (void) const {
    return (cPtr_T_selectInstruction_forGrammarComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_branchList_ForGrammarComponent  reader_mSelectList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mAddedNonterminalmSymbolIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_selectInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_selectInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_selectInstruction_forGrammarComponent *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__T_selectInstruction_forGrammarComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_T_repeatInstruction_forGrammarComponent'         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_T_repeatInstruction_forGrammarComponent : public GGS_AC_instruction_ForGrammar {
//--- Default constructor
  public : inline GGS_T_repeatInstruction_forGrammarComponent (void) :
  GGS_AC_instruction_ForGrammar () {}

//--- Pointer assignment constructor
  public : GGS_T_repeatInstruction_forGrammarComponent (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_T_repeatInstruction_forGrammarComponent (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_T_repeatInstruction_forGrammarComponent
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_T_repeatInstruction_forGrammarComponent constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_L_branchList_ForGrammarComponent & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_T_repeatInstruction_forGrammarComponent * getPtr (void) const {
    return (cPtr_T_repeatInstruction_forGrammarComponent *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_branchList_ForGrammarComponent  reader_mRepeatList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mAddedNonterminalmSymbolIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_T_repeatInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_T_repeatInstruction_forGrammarComponent * operator () (LOCATION_ARGS) const {
      return (cPtr_T_repeatInstruction_forGrammarComponent *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__T_repeatInstruction_forGrammarComponent ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@L_syntaxComponents_ForGrammar'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_syntaxComponents_ForGrammar ;

class GGS_L_syntaxComponents_ForGrammar : public AC_galgas_list {
  public : typedef elementOf_GGS_L_syntaxComponents_ForGrammar cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_syntaxComponents_ForGrammar constructor_emptyList (void) ;
  public : static GGS_L_syntaxComponents_ForGrammar constructor_listWithValue (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_syntaxComponents_ForGrammar & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_syntaxComponents_ForGrammar
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_syntaxComponents_ForGrammar
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_syntaxComponents_ForGrammar * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_M_nonTerminalSymbolsForGrammar & _out_0,
                              GGS_L_productionRules_ForGrammarComponent & _out_1,
                              GGS_lstring & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_M_nonTerminalSymbolsForGrammar & _out_0,
                             GGS_L_productionRules_ForGrammarComponent & _out_1,
                             GGS_lstring & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_M_nonTerminalSymbolsForGrammar & _out_0,
                                GGS_L_productionRules_ForGrammarComponent & _out_1,
                                GGS_lstring & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_M_nonTerminalSymbolsForGrammar & _out_0,
                                 GGS_L_productionRules_ForGrammarComponent & _out_1,
                                 GGS_lstring & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_L_syntaxComponents_ForGrammar inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_syntaxComponents_ForGrammar _operator_concat (const GGS_L_syntaxComponents_ForGrammar & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_M_nonTerminalSymbolsForGrammar & argument_0,
                                const GGS_L_productionRules_ForGrammarComponent & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_M_nonTerminalSymbolsForGrammar 
  reader_mNonterminalSymbolsMapAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_L_productionRules_ForGrammarComponent 
  reader_mProductionRulesListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mSyntaxComponentNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMNonterminalSymbolsMapAtIndex (C_Compiler & inLexique,
                              const GGS_M_nonTerminalSymbolsForGrammar  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMProductionRulesListAtIndex (C_Compiler & inLexique,
                              const GGS_L_productionRules_ForGrammarComponent  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSyntaxComponentNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_syntaxComponents_ForGrammar & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_M_nonTerminalSymbolsForGrammar   & _mNonterminalSymbolsMap (LOCATION_ARGS) const ;
  public : /* const */ GGS_L_productionRules_ForGrammarComponent   & _mProductionRulesList (LOCATION_ARGS) const ;
  public : /* const */ GGS_lstring   & _mSyntaxComponentName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map '@typeClassInheritedMessagesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap ;

class GGS_typeClassInheritedMessagesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeClassInheritedMessagesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeClassInheritedMessagesMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeClassInheritedMessagesMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeClassInheritedMessagesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeClassInheritedMessagesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeClassInheritedMessagesMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeClassInheritedMessagesMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeClassInheritedMessagesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeClassInheritedMessagesMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeClassInheritedMessagesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeClassInheritedMessagesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@typeSemanticAttributesMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap ;

class GGS_typeSemanticAttributesMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeSemanticAttributesMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeSemanticAttributesMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeSemanticAttributesMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeSemanticAttributesMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeSemanticAttributesMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeSemanticAttributesMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMAttributTypeForKey (C_Compiler & inLexique,
                        const GGS_AC_galgasType & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_AC_galgasType &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_AC_galgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_AC_galgasType & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_AC_galgasType & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeSemanticAttributesMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeSemanticAttributesMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeSemanticAttributesMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeSemanticAttributesMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeSemanticAttributesMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_AC_galgasType   & _mAttributType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@insertOrSearchMethodList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList ;

class GGS_insertOrSearchMethodList : public AC_galgas_list {
  public : typedef elementOf_GGS_insertOrSearchMethodList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_insertOrSearchMethodList constructor_emptyList (void) ;
  public : static GGS_insertOrSearchMethodList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_insertOrSearchMethodList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_insertOrSearchMethodList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_insertOrSearchMethodList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_insertOrSearchMethodList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_string& _out_1,
                              GGS_bool& _out_2,
                              GGS_string& _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_string& _out_1,
                             GGS_bool& _out_2,
                             GGS_string& _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_string& _out_1,
                                GGS_bool& _out_2,
                                GGS_string& _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_string& _out_1,
                                 GGS_bool& _out_2,
                                 GGS_string& _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_insertOrSearchMethodList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_insertOrSearchMethodList _operator_concat (const GGS_insertOrSearchMethodList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_string& argument_1,
                                const GGS_bool& argument_2,
                                const GGS_string& argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mErrorMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mIsGetIndexMethodAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mShadowErrorMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMErrorMessageAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMIsGetIndexMethodAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMShadowErrorMessageAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_insertOrSearchMethodList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
  public : /* const */ GGS_string  & _mErrorMessage (LOCATION_ARGS) const ;
  public : /* const */ GGS_bool  & _mIsGetIndexMethod (LOCATION_ARGS) const ;
  public : /* const */ GGS_string  & _mShadowErrorMessage (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeDefEntiteUtilisable'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeDefEntiteUtilisable : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_typeDefEntiteUtilisable (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_typeDefEntiteUtilisable (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeDefEntiteUtilisable (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeDefEntiteUtilisable
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeDefEntiteUtilisable * getPtr (void) const {
    return (cPtr_typeDefEntiteUtilisable *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeDefEntiteUtilisable * operator () (LOCATION_ARGS) const {
      return (cPtr_typeDefEntiteUtilisable *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__typeDefEntiteUtilisable ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedListType'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedListType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedListType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedListType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedListType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedListType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedListType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedListType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedListType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedListType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasUndefinedListType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasListType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasListType : public GGS_typeGalgasUndefinedListType {
//--- Default constructor
  public : inline GGS_typeGalgasListType (void) :
  GGS_typeGalgasUndefinedListType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasListType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasListType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasListType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasListType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_EXsignature & argument_2,
                                const GGS_L_EXsignature & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasListType * getPtr (void) const {
    return (cPtr_typeGalgasListType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_EXsignature  reader_mExtractSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_EXsignature  reader_mInputSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasListType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasListType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasStructType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasStructType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasStructType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasStructType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasStructType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasStructType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasStructType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasStructType * getPtr (void) const {
    return (cPtr_typeGalgasStructType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mStructTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasStructType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasStructType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasStructType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasStructType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasListmapType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasListmapType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasListmapType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasListmapType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasListmapType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasListmapType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasListmapType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeGalgasListType & argument_2,
                                const GGS_typeListeAttributsSemantiques & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasListmapType * getPtr (void) const {
    return (cPtr_typeGalgasListmapType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListmapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mListTypename (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeGalgasListType  reader_mListType (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasListmapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasListmapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasListmapType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasListmapType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'build_uintlist_type'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_uintlist_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'build_luintlist_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_luintlist_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'build_uint64list_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_uint64list_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'build_stringlist_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_stringlist_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'build_lstringlist_type'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_lstringlist_type (C_Compiler &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@domainModifierMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_domainModifierMap ;

class GGS_domainModifierMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_domainModifierMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_domainModifierMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_domainModifierMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_domainModifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_domainModifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_domainModifierMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMFormalParametersListForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_domainModifierMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_domainModifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_domainModifierMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_domainModifierMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_domainModifierMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mFormalParametersList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@domainAttributeMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_domainAttributeMap ;

class GGS_domainAttributeMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_domainAttributeMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_domainAttributeMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_domainAttributeMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_domainAttributeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_domainAttributeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_domainAttributeMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_domainAttributeMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_domainAttributeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_domainAttributeMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_domainAttributeMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_domainAttributeMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typeGalgasDomainType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasDomainType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasDomainType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasDomainType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasDomainType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasDomainType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasDomainType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_domainAttributeMap & argument_1,
                                const GGS_domainModifierMap & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasDomainType * getPtr (void) const {
    return (cPtr_typeGalgasDomainType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mDomainTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_domainAttributeMap  reader_mAttributeMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_domainModifierMap  reader_mDomainModifierMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasDomainType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasDomainType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasDomainType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasDomainType ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_typeGalgasUndefinedSortedListType'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedSortedListType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedSortedListType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedSortedListType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedSortedListType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedSortedListType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedSortedListType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedSortedListType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedSortedListType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedSortedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedSortedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedSortedListType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasUndefinedSortedListType ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_typeGalgasSortedListType'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasSortedListType : public GGS_typeGalgasUndefinedSortedListType {
//--- Default constructor
  public : inline GGS_typeGalgasSortedListType (void) :
  GGS_typeGalgasUndefinedSortedListType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasSortedListType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasSortedListType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasSortedListType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasSortedListType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_L_EXsignature & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasSortedListType * getPtr (void) const {
    return (cPtr_typeGalgasSortedListType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_EXsignature  reader_mExtractSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasSortedListType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasSortedListType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasSortedListType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasSortedListType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@typeTableBlocsDeTable'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable ;

class GGS_typeTableBlocsDeTable : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeTableBlocsDeTable cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeTableBlocsDeTable & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeTableBlocsDeTable & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeTableBlocsDeTable * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeTableBlocsDeTable * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeTableBlocsDeTable constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setASignatureDebutForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setASignatureFinForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0,
                                const GGS_L_EXsignature &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0,
                                GGS_L_EXsignature   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeTableBlocsDeTable constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeTableBlocsDeTable & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeTableBlocsDeTable reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeTableBlocsDeTable & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeTableBlocsDeTable & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _aSignatureDebut (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_EXsignature   & _aSignatureFin (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_typeGalgasUndefinedMapType'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedMapType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedMapType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedMapType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedMapType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedMapType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedMapType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedMapType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedMapType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedMapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedMapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedMapType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasUndefinedMapType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@mapModifierMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapModifierMap ;

class GGS_mapModifierMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapModifierMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_mapModifierMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_mapModifierMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapModifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapModifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapModifierMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMMethodSignatureForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_mapModifierMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_mapModifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapModifierMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_mapModifierMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_mapModifierMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mMethodSignature (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@mapMethodMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap ;

class GGS_mapMethodMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_mapMethodMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_mapMethodMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMMethodSignatureForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_L_EXsignature &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_L_EXsignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_L_EXsignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_L_EXsignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_mapMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_mapMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_mapMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_mapMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_L_EXsignature   & _mMethodSignature (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeGalgasMapType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasMapType : public GGS_typeGalgasUndefinedMapType {
//--- Default constructor
  public : inline GGS_typeGalgasMapType (void) :
  GGS_typeGalgasUndefinedMapType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasMapType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasMapType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasMapType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasMapType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeTableBlocsDeTable & argument_2,
                                const GGS_mapModifierMap & argument_3,
                                const GGS_mapMethodMap & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasMapType * getPtr (void) const {
    return (cPtr_typeGalgasMapType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeTableBlocsDeTable  reader_aTableMethodesSurcharger (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapModifierMap  reader_mModifierMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodMap  reader_mReaderMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasMapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasMapType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasMapType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasMapType ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_typeGalgasUndefinedMapindexType'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedMapindexType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedMapindexType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedMapindexType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedMapindexType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedMapindexType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedMapindexType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedMapindexType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedMapindexType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapindexTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedMapindexType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedMapindexType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedMapindexType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasUndefinedMapindexType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@mapIndexSearchReaderMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapIndexSearchReaderMap ;

class GGS_mapIndexSearchReaderMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapIndexSearchReaderMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_mapIndexSearchReaderMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_mapIndexSearchReaderMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapIndexSearchReaderMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapIndexSearchReaderMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapIndexSearchReaderMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMRetrieveErrorMessageForKey (C_Compiler & inLexique,
                        const GGS_lstring & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_mapIndexSearchReaderMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_mapIndexSearchReaderMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapIndexSearchReaderMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_mapIndexSearchReaderMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_mapIndexSearchReaderMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mRetrieveErrorMessage (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_typeGalgasMapindexType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasMapindexType : public GGS_typeGalgasUndefinedMapindexType {
//--- Default constructor
  public : inline GGS_typeGalgasMapindexType (void) :
  GGS_typeGalgasUndefinedMapindexType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasMapindexType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasMapindexType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasMapindexType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasMapindexType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_mapIndexSearchReaderMap & argument_3,
                                const GGS_typeTableBlocsDeTable & argument_4,
                                const GGS_mapModifierMap & argument_5,
                                const GGS_mapMethodMap & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasMapindexType * getPtr (void) const {
    return (cPtr_typeGalgasMapindexType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mMapAttributesList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapIndexSearchReaderMap  reader_mMapIndexSearchReaderMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeTableBlocsDeTable  reader_aTableMethodesSurcharger (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapModifierMap  reader_mModifierMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodMap  reader_mReaderMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasMapindexType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasMapindexType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasMapindexType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasMapindexType ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_typeGalgasUndefinedClassType'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasUndefinedClassType : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgasUndefinedClassType (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasUndefinedClassType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasUndefinedClassType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasUndefinedClassType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasUndefinedClassType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasUndefinedClassType * getPtr (void) const {
    return (cPtr_typeGalgasUndefinedClassType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mClassTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasUndefinedClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasUndefinedClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasUndefinedClassType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasUndefinedClassType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@L_lazyAttributeList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lazyAttributeList ;

class GGS_L_lazyAttributeList : public AC_galgas_list {
  public : typedef elementOf_GGS_L_lazyAttributeList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_L_lazyAttributeList constructor_emptyList (void) ;
  public : static GGS_L_lazyAttributeList constructor_listWithValue (const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_L_lazyAttributeList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_L_lazyAttributeList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_L_lazyAttributeList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_L_lazyAttributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_location & _out_0,
                              GGS_typeListeAttributsSemantiques & _out_1,
                              GGS_typeInstructionList & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_location & _out_0,
                             GGS_typeListeAttributsSemantiques & _out_1,
                             GGS_typeInstructionList & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_location & _out_0,
                                GGS_typeListeAttributsSemantiques & _out_1,
                                GGS_typeInstructionList & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_location & _out_0,
                                 GGS_typeListeAttributsSemantiques & _out_1,
                                 GGS_typeInstructionList & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_L_lazyAttributeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_L_lazyAttributeList _operator_concat (const GGS_L_lazyAttributeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_typeListeAttributsSemantiques & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_location 
  reader_mLocationMagicNumberAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques 
  reader_mComputedAttributeTypeAndNameListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMLocationMagicNumberAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMComputedAttributeTypeAndNameListAtIndex (C_Compiler & inLexique,
                              const GGS_typeListeAttributsSemantiques  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_L_lazyAttributeList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_location   & _mLocationMagicNumber (LOCATION_ARGS) const ;
  public : /* const */ GGS_typeListeAttributsSemantiques   & _mComputedAttributeTypeAndNameList (LOCATION_ARGS) const ;
  public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeGalgasClassType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgasClassType : public GGS_typeGalgasUndefinedClassType {
//--- Default constructor
  public : inline GGS_typeGalgasClassType (void) :
  GGS_typeGalgasUndefinedClassType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasClassType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasClassType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgasClassType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasClassType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeTableMethodes & argument_1,
                                const GGS_typeListeAttributsSemantiques & argument_2,
                                const GGS_typeSuperClassesMap & argument_3,
                                const GGS_typeClassInheritedMessagesMap & argument_4,
                                const GGS_typeSemanticAttributesMap & argument_5,
                                const GGS_bool& argument_6,
                                const GGS_string& argument_7,
                                const GGS_bool& argument_8,
                                const GGS_L_lazyAttributeList & argument_9
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasClassType * getPtr (void) const {
    return (cPtr_typeGalgasClassType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeTableMethodes  reader_mMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeListeAttributsSemantiques  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeSuperClassesMap  reader_mAncestorClassesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeClassInheritedMessagesMap  reader_mMessagesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeSemanticAttributesMap  reader_mNonExternAttributesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mClassIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mClassMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mHasGeneratedInSeparateFileSetting (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_L_lazyAttributeList  reader_mLazyAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasClassType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasClassType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasClassType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgasClassType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeEntiteType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteType : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_typeEntiteType (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_typeEntiteType (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntiteType (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeEntiteType
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEntiteType constructor_new (C_Compiler & inLexique,
                                const GGS_AC_galgasType & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntiteType * getPtr (void) const {
    return (cPtr_typeEntiteType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_AC_galgasType  reader_aDefType (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteType *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeEntiteType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_typeEntiteRoutine'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteRoutine : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_typeEntiteRoutine (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_typeEntiteRoutine (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntiteRoutine (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeEntiteRoutine
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEntiteRoutine constructor_new (C_Compiler & inLexique,
                                const GGS_L_EXsignature & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntiteRoutine * getPtr (void) const {
    return (cPtr_typeEntiteRoutine *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_EXsignature  reader_aListeArgumentsFormels (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteRoutine * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteRoutine * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteRoutine *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeEntiteRoutine ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_typeEntiteFonction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeEntiteFonction : public GGS_AC_semanticsEntity {
//--- Default constructor
  public : inline GGS_typeEntiteFonction (void) :
  GGS_AC_semanticsEntity () {}

//--- Pointer assignment constructor
  public : GGS_typeEntiteFonction (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeEntiteFonction (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeEntiteFonction
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeEntiteFonction constructor_new (C_Compiler & inLexique,
                                const GGS_L_EXsignature & argument_0,
                                const GGS_AC_galgasType & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeEntiteFonction * getPtr (void) const {
    return (cPtr_typeEntiteFonction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_L_EXsignature  reader_aListeArgumentsFormels (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_AC_galgasType  reader_mReturnedType (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageTypeEntite' message
  public : GGS_string reader_messageTypeEntite (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeEntiteFonction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeEntiteFonction * operator () (LOCATION_ARGS) const {
      return (cPtr_typeEntiteFonction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeEntiteFonction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@typeEnumMessageMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap ;

class GGS_typeEnumMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeEnumMessageMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_typeEnumMessageMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_typeEnumMessageMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeEnumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeEnumMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeEnumMessageMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMMessageStringListForKey (C_Compiler & inLexique,
                        const GGS_lstringlist & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstringlist &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstringlist   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstringlist & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstringlist & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_typeEnumMessageMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeEnumMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeEnumMessageMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeEnumMessageMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeEnumMessageMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstringlist   & _mMessageStringList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@enumModifierDefinitionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumModifierDefinitionList ;

class GGS_enumModifierDefinitionList : public AC_galgas_list {
  public : typedef elementOf_GGS_enumModifierDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_enumModifierDefinitionList constructor_emptyList (void) ;
  public : static GGS_enumModifierDefinitionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_enumModifierDefinitionList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_enumModifierDefinitionList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_enumModifierDefinitionList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_enumModifierDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_typeInstructionList & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_typeInstructionList & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_typeInstructionList & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_typeInstructionList & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_enumModifierDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumModifierDefinitionList _operator_concat (const GGS_enumModifierDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mSourceStateAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mTargetStateAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSourceStateAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTargetStateAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_enumModifierDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mSourceState (LOCATION_ARGS) const ;
  public : /* const */ GGS_lstring   & _mTargetState (LOCATION_ARGS) const ;
  public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumModifierMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumModifierMap ;

class GGS_enumModifierMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumModifierMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_enumModifierMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_enumModifierMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumModifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumModifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumModifierMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMActionDefinitionListForKey (C_Compiler & inLexique,
                        const GGS_enumModifierDefinitionList & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMSignatureForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMArgumentTypeAndNameListForKey (C_Compiler & inLexique,
                        const GGS_typeListeTypesEtNomsArgMethode & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_enumModifierDefinitionList &  inParameter0,
                                const GGS_L_EXsignature &  inParameter1,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_enumModifierDefinitionList   & outParameter0,
                                GGS_L_EXsignature   & outParameter1,
                                GGS_typeListeTypesEtNomsArgMethode   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_enumModifierDefinitionList & inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   const GGS_typeListeTypesEtNomsArgMethode & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_enumModifierDefinitionList & outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                   GGS_typeListeTypesEtNomsArgMethode & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_enumModifierMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumModifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumModifierMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumModifierMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumModifierMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_enumModifierDefinitionList   & _mActionDefinitionList (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_EXsignature   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeListeTypesEtNomsArgMethode   & _mArgumentTypeAndNameList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@enumMethodDefinitionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMethodDefinitionList ;

class GGS_enumMethodDefinitionList : public AC_galgas_list {
  public : typedef elementOf_GGS_enumMethodDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_enumMethodDefinitionList constructor_emptyList (void) ;
  public : static GGS_enumMethodDefinitionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_typeInstructionList & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_enumMethodDefinitionList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_enumMethodDefinitionList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_enumMethodDefinitionList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_enumMethodDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_typeInstructionList & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_typeInstructionList & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_typeInstructionList & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_typeInstructionList & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_enumMethodDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_typeInstructionList & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumMethodDefinitionList _operator_concat (const GGS_enumMethodDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_typeInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_typeInstructionList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mSourceStateAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSourceStateAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_enumMethodDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mSourceState (LOCATION_ARGS) const ;
  public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@enumMethodMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMethodMap ;

class GGS_enumMethodMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_enumMethodMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_enumMethodMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMActionDefinitionListForKey (C_Compiler & inLexique,
                        const GGS_enumMethodDefinitionList & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMSignatureForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMArgumentTypeAndNameListForKey (C_Compiler & inLexique,
                        const GGS_typeListeTypesEtNomsArgMethode & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_enumMethodDefinitionList &  inParameter0,
                                const GGS_L_EXsignature &  inParameter1,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_enumMethodDefinitionList   & outParameter0,
                                GGS_L_EXsignature   & outParameter1,
                                GGS_typeListeTypesEtNomsArgMethode   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_enumMethodDefinitionList & inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   const GGS_typeListeTypesEtNomsArgMethode & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_enumMethodDefinitionList & outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                   GGS_typeListeTypesEtNomsArgMethode & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_enumMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_enumMethodDefinitionList   & _mActionDefinitionList (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_EXsignature   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeListeTypesEtNomsArgMethode   & _mArgumentTypeAndNameList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@enumOperatorDefinitionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumOperatorDefinitionList ;

class GGS_enumOperatorDefinitionList : public AC_galgas_list {
  public : typedef elementOf_GGS_enumOperatorDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_enumOperatorDefinitionList constructor_emptyList (void) ;
  public : static GGS_enumOperatorDefinitionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_luint & argument_5,
                                const GGS_typeInstructionList & argument_6) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_enumOperatorDefinitionList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_enumOperatorDefinitionList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_enumOperatorDefinitionList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_enumOperatorDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_luint & _out_1,
                              GGS_lstring & _out_2,
                              GGS_luint & _out_3,
                              GGS_lstring & _out_4,
                              GGS_luint & _out_5,
                              GGS_typeInstructionList & _out_6
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_luint & _out_1,
                             GGS_lstring & _out_2,
                             GGS_luint & _out_3,
                             GGS_lstring & _out_4,
                             GGS_luint & _out_5,
                             GGS_typeInstructionList & _out_6
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_luint & _out_1,
                                GGS_lstring & _out_2,
                                GGS_luint & _out_3,
                                GGS_lstring & _out_4,
                                GGS_luint & _out_5,
                                GGS_typeInstructionList & _out_6
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_luint & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_luint & _out_3,
                                 GGS_lstring & _out_4,
                                 GGS_luint & _out_5,
                                 GGS_typeInstructionList & _out_6
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_enumOperatorDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_luint & argument_5,
                                const GGS_typeInstructionList & argument_6) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumOperatorDefinitionList _operator_concat (const GGS_enumOperatorDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_luint & argument_5,
                                const GGS_typeInstructionList & argument_6
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_luint & argument_5,
                                const GGS_typeInstructionList & argument_6
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_luint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_luint & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_luint & argument_5,
                                const GGS_typeInstructionList & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mLeftSourceStateAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_luint 
  reader_mLeftSourceStateIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mRightSourceStateAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_luint 
  reader_mRightSourceStateIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mTargetStateAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_luint 
  reader_mTargetStateIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_typeInstructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMLeftSourceStateAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMLeftSourceStateIndexAtIndex (C_Compiler & inLexique,
                              const GGS_luint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMRightSourceStateAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMRightSourceStateIndexAtIndex (C_Compiler & inLexique,
                              const GGS_luint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTargetStateAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTargetStateIndexAtIndex (C_Compiler & inLexique,
                              const GGS_luint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_typeInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_enumOperatorDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mLeftSourceState (LOCATION_ARGS) const ;
  public : /* const */ GGS_luint   & _mLeftSourceStateIndex (LOCATION_ARGS) const ;
  public : /* const */ GGS_lstring   & _mRightSourceState (LOCATION_ARGS) const ;
  public : /* const */ GGS_luint   & _mRightSourceStateIndex (LOCATION_ARGS) const ;
  public : /* const */ GGS_lstring   & _mTargetState (LOCATION_ARGS) const ;
  public : /* const */ GGS_luint   & _mTargetStateIndex (LOCATION_ARGS) const ;
  public : /* const */ GGS_typeInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumOperatorMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumOperatorMap ;

class GGS_enumOperatorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumOperatorMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_enumOperatorMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_enumOperatorMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumOperatorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumOperatorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumOperatorMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMActionDefinitionListForKey (C_Compiler & inLexique,
                        const GGS_enumOperatorDefinitionList & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMSignatureForKey (C_Compiler & inLexique,
                        const GGS_L_EXsignature & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMArgumentTypeAndNameListForKey (C_Compiler & inLexique,
                        const GGS_typeListeTypesEtNomsArgMethode & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_enumOperatorDefinitionList &  inParameter0,
                                const GGS_L_EXsignature &  inParameter1,
                                const GGS_typeListeTypesEtNomsArgMethode &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_enumOperatorDefinitionList   & outParameter0,
                                GGS_L_EXsignature   & outParameter1,
                                GGS_typeListeTypesEtNomsArgMethode   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_enumOperatorDefinitionList & inParameter0,
                                   const GGS_L_EXsignature & inParameter1,
                                   const GGS_typeListeTypesEtNomsArgMethode & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_enumOperatorDefinitionList & outParameter0,
                                   GGS_L_EXsignature & outParameter1,
                                   GGS_typeListeTypesEtNomsArgMethode & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_enumOperatorMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumOperatorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumOperatorMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumOperatorMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumOperatorMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_enumOperatorDefinitionList   & _mActionDefinitionList (LOCATION_ARGS) const ;
    public : /* const */ GGS_L_EXsignature   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeListeTypesEtNomsArgMethode   & _mArgumentTypeAndNameList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgas_enum'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_typeGalgas_enum : public GGS_AC_galgasType {
//--- Default constructor
  public : inline GGS_typeGalgas_enum (void) :
  GGS_AC_galgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgas_enum (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgas_enum (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_typeGalgas_enum
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgas_enum constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumConstantMap & argument_1,
                                const GGS_typeEnumMessageMap & argument_2,
                                const GGS_enumModifierMap & argument_3,
                                const GGS_enumMethodMap & argument_4,
                                const GGS_enumOperatorMap & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgas_enum * getPtr (void) const {
    return (cPtr_typeGalgas_enum *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumConstantMap  reader_mEnumConstantesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeEnumMessageMap  reader_mMessagesMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumModifierMap  reader_mModifierMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumMethodMap  reader_mMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumOperatorMap  reader_mOperatorMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'messageGalgasType' message
  public : GGS_string reader_messageGalgasType (C_Compiler & _inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgas_enum * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgas_enum * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgas_enum *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__typeGalgas_enum ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'checkAssignmentTypesCompatibility'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkAssignmentTypesCompatibility (C_Compiler &,
                                const GGS_AC_galgasType  ,
                                const GGS_AC_galgasType  ,
                                const GGS_location  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'verifierCompatibiliteSignatures'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_verifierCompatibiliteSignatures (C_Compiler &,
                                const GGS_L_EXsignature  ,
                                const GGS_L_EXsignature  ,
                                const GGS_location   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@M_cli_options'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options ;

class GGS_M_cli_options : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_cli_options cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_cli_options & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_cli_options & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_cli_options * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_cli_options * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_cli_options constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMOptionCharForKey (C_Compiler & inLexique,
                        const GGS_lchar & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMOptionStringForKey (C_Compiler & inLexique,
                        const GGS_lstring & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMCommentForKey (C_Compiler & inLexique,
                        const GGS_lstring & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMDefaultValueForKey (C_Compiler & inLexique,
                        const GGS_string& inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lchar &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_lstring &  inParameter2,
                                const GGS_string&  inParameter3 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lchar   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_lstring   & outParameter2,
                                GGS_string  & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lchar & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   const GGS_lstring & inParameter2,
                                   const GGS_string& inParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lchar & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_lstring & outParameter2,
                                   GGS_string& outParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_cli_options constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_cli_options & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_cli_options reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_cli_options & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_cli_options & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lchar   & _mOptionChar (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mOptionString (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mComment (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mDefaultValue (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_optionComponents'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents ;

class GGS_M_optionComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_optionComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_optionComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_optionComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_optionComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_optionComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_optionComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMBoolOptionsMapForKey (C_Compiler & inLexique,
                        const GGS_M_cli_options & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMUintOptionsMapForKey (C_Compiler & inLexique,
                        const GGS_M_cli_options & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMStringOptionsMapForKey (C_Compiler & inLexique,
                        const GGS_M_cli_options & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_cli_options &  inParameter0,
                                const GGS_M_cli_options &  inParameter1,
                                const GGS_M_cli_options &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_cli_options   & outParameter0,
                                GGS_M_cli_options   & outParameter1,
                                GGS_M_cli_options   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_cli_options & inParameter0,
                                   const GGS_M_cli_options & inParameter1,
                                   const GGS_M_cli_options & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_cli_options & outParameter0,
                                   GGS_M_cli_options & outParameter1,
                                   GGS_M_cli_options & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_optionComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_optionComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_optionComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_optionComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_optionComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_cli_options   & _mBoolOptionsMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_cli_options   & _mUintOptionsMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_cli_options   & _mStringOptionsMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@M_grammarComponents'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents ;

class GGS_M_grammarComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_grammarComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_grammarComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_grammarComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_grammarComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_grammarComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_grammarComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMNonterminalSymbolParametersMapForKey (C_Compiler & inLexique,
                        const GGS_M_nonterminalSymbolAltsForGrammar & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMLexiqueNameForKey (C_Compiler & inLexique,
                        const GGS_lstring & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMOptionsMapForKey (C_Compiler & inLexique,
                        const GGS_M_optionComponents & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_nonterminalSymbolAltsForGrammar &  inParameter0,
                                const GGS_lstring &  inParameter1,
                                const GGS_M_optionComponents &  inParameter2 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_nonterminalSymbolAltsForGrammar   & outParameter0,
                                GGS_lstring   & outParameter1,
                                GGS_M_optionComponents   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_nonterminalSymbolAltsForGrammar & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   const GGS_M_optionComponents & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_nonterminalSymbolAltsForGrammar & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_M_optionComponents & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_grammarComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_grammarComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_grammarComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_grammarComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_grammarComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_nonterminalSymbolAltsForGrammar   & _mNonterminalSymbolParametersMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mLexiqueName (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_optionComponents   & _mOptionsMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Map '@M_semanticsComponents'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents ;

class GGS_M_semanticsComponents : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_semanticsComponents cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_semanticsComponents & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_semanticsComponents & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_semanticsComponents * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_semanticsComponents * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_semanticsComponents constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMModelMapForKey (C_Compiler & inLexique,
                        const GGS_ModelMap & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMActionMapForKey (C_Compiler & inLexique,
                        const GGS_ActionMap & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMImportedSemanticsComponentsForKey (C_Compiler & inLexique,
                        const GGS_stringset & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMImportedMetamodelComponentsForKey (C_Compiler & inLexique,
                        const GGS_stringset & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMImportedOptionsComponentsForKey (C_Compiler & inLexique,
                        const GGS_stringset & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMOptionsComponentsForKey (C_Compiler & inLexique,
                        const GGS_M_optionComponents & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMSemanticsEntitiesMapForKey (C_Compiler & inLexique,
                        const GGS_M_semanticsEntitiesForUse & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_ModelMap &  inParameter0,
                                const GGS_ActionMap &  inParameter1,
                                const GGS_stringset &  inParameter2,
                                const GGS_stringset &  inParameter3,
                                const GGS_stringset &  inParameter4,
                                const GGS_M_optionComponents &  inParameter5,
                                const GGS_M_semanticsEntitiesForUse &  inParameter6 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_ModelMap   & outParameter0,
                                GGS_ActionMap   & outParameter1,
                                GGS_stringset   & outParameter2,
                                GGS_stringset   & outParameter3,
                                GGS_stringset   & outParameter4,
                                GGS_M_optionComponents   & outParameter5,
                                GGS_M_semanticsEntitiesForUse   & outParameter6 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_ModelMap & inParameter0,
                                   const GGS_ActionMap & inParameter1,
                                   const GGS_stringset & inParameter2,
                                   const GGS_stringset & inParameter3,
                                   const GGS_stringset & inParameter4,
                                   const GGS_M_optionComponents & inParameter5,
                                   const GGS_M_semanticsEntitiesForUse & inParameter6,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_ModelMap & outParameter0,
                                   GGS_ActionMap & outParameter1,
                                   GGS_stringset & outParameter2,
                                   GGS_stringset & outParameter3,
                                   GGS_stringset & outParameter4,
                                   GGS_M_optionComponents & outParameter5,
                                   GGS_M_semanticsEntitiesForUse & outParameter6,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_semanticsComponents constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_semanticsComponents & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_semanticsComponents reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_semanticsComponents & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_semanticsComponents & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_ModelMap   & _mModelMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_ActionMap   & _mActionMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_stringset   & _mImportedSemanticsComponents (LOCATION_ARGS) const ;
    public : /* const */ GGS_stringset   & _mImportedMetamodelComponents (LOCATION_ARGS) const ;
    public : /* const */ GGS_stringset   & _mImportedOptionsComponents (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_optionComponents   & _mOptionsComponents (LOCATION_ARGS) const ;
    public : /* const */ GGS_M_semanticsEntitiesForUse   & _mSemanticsEntitiesMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@M_regularFiles'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_regularFiles ;

class GGS_M_regularFiles : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_regularFiles cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_regularFiles & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_regularFiles & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_regularFiles * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_regularFiles * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_regularFiles constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMWrapperDirectoryIndexForKey (C_Compiler & inLexique,
                        const GGS_uint & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMWrapperFileIndexForKey (C_Compiler & inLexique,
                        const GGS_uint & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0,
                                const GGS_uint &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0,
                                GGS_uint   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   const GGS_uint & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_uint & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_regularFiles constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_regularFiles & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_regularFiles reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_regularFiles & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_regularFiles & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mWrapperDirectoryIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mWrapperFileIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@filewrapperTemplateMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateMap ;

class GGS_filewrapperTemplateMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_filewrapperTemplateMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_filewrapperTemplateMap & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_filewrapperTemplateMap & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_filewrapperTemplateMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_filewrapperTemplateMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_filewrapperTemplateMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMFormalAttributeListForKey (C_Compiler & inLexique,
                        const GGS_typeListeAttributsSemantiques & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeListeAttributsSemantiques &  inParameter0 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeListeAttributsSemantiques   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_typeListeAttributsSemantiques & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_typeListeAttributsSemantiques & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_filewrapperTemplateMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_filewrapperTemplateMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_filewrapperTemplateMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_filewrapperTemplateMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_filewrapperTemplateMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeListeAttributsSemantiques   & _mFormalAttributeList (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@M_filewrappers'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_M_filewrappers ;

class GGS_M_filewrappers : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_M_filewrappers cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool _operator_isEqual (const GGS_M_filewrappers & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_M_filewrappers & inOperand) const ;

//--- Create a new element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_M_filewrappers * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_M_filewrappers * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_M_filewrappers constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"
  public : void modifier_setMRegularFileMapForKey (C_Compiler & inLexique,
                        const GGS_M_regularFiles & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;
  public : void modifier_setMTemplateMapForKey (C_Compiler & inLexique,
                        const GGS_filewrapperTemplateMap & inValue,
                        const GGS_string & inKey
                        COMMA_LOCATION_ARGS) ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_M_regularFiles &  inParameter0,
                                const GGS_filewrapperTemplateMap &  inParameter1 COMMA_LOCATION_ARGS) ;
//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_M_regularFiles   & outParameter0,
                                GGS_filewrapperTemplateMap   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void _insertElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_M_regularFiles & inParameter0,
                                   const GGS_filewrapperTemplateMap & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void _searchElement (C_Compiler & inLexique,
                                   const char * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_M_regularFiles & outParameter0,
                                   GGS_filewrapperTemplateMap & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_description (C_Compiler & _inLexique
                                          COMMA_LOCATION_ARGS,
                                          const sint32 inIndentation = 0) const ;
  public : static GGS_M_filewrappers constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_M_filewrappers & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_M_filewrappers reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_M_filewrappers & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_M_filewrappers & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_M_regularFiles   & _mRegularFileMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_filewrapperTemplateMap   & _mTemplateMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@labelForPopUpList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_labelForPopUpList ;

class GGS_labelForPopUpList : public AC_galgas_list {
  public : typedef elementOf_GGS_labelForPopUpList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_labelForPopUpList constructor_emptyList (void) ;
  public : static GGS_labelForPopUpList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_labelForPopUpList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_labelForPopUpList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_labelForPopUpList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_labelForPopUpList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_uint & _out_1,
                              GGS_lstring & _out_2,
                              GGS_uint & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_uint & _out_1,
                             GGS_lstring & _out_2,
                             GGS_uint & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_uint & _out_1,
                                GGS_lstring & _out_2,
                                GGS_uint & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_uint & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_uint & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_labelForPopUpList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_labelForPopUpList _operator_concat (const GGS_labelForPopUpList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_uint & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mTerminal1AtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mTerminal1IDAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mTerminal2AtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mTerminal2IDAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTerminal1AtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTerminal1IDAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTerminal2AtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTerminal2IDAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_labelForPopUpList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mTerminal1 (LOCATION_ARGS) const ;
  public : /* const */ GGS_uint   & _mTerminal1ID (LOCATION_ARGS) const ;
  public : /* const */ GGS_lstring   & _mTerminal2 (LOCATION_ARGS) const ;
  public : /* const */ GGS_uint   & _mTerminal2ID (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@textMacroList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_textMacroList ;

class GGS_textMacroList : public AC_galgas_list {
  public : typedef elementOf_GGS_textMacroList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_textMacroList constructor_emptyList (void) ;
  public : static GGS_textMacroList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_textMacroList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_textMacroList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_textMacroList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_textMacroList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_textMacroList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_textMacroList _operator_concat (const GGS_textMacroList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mKeyAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mContentsAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMKeyAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMContentsAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_textMacroList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_lstring   & _mKey (LOCATION_ARGS) const ;
  public : /* const */ GGS_lstring   & _mContents (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'handleStringReaderCall'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleStringReaderCall (C_Compiler &,
                                const GGS_lstring  ,
                                GGS_typeListeAttributsSemantiques  &,
                                GGS_AC_galgasType  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'handleReaderCall'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleReaderCall (C_Compiler &,
                                const GGS_M_semanticsEntitiesForUse  ,
                                const GGS_AC_galgasType  ,
                                const GGS_lstring  ,
                                GGS_typeListeAttributsSemantiques  &,
                                GGS_AC_galgasType  &,
                                GGS_string & COMMA_LOCATION_ARGS) ;

void routine_check_KL_escapeCharacters (C_Compiler &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

void routine_check_K_escapeCharacters (C_Compiler &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'importSemanticsComponent'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_importSemanticsComponent (C_Compiler &,
                                GGS_M_semanticsComponents  &,
                                GGS_ModelMap  &,
                                GGS_ActionMap  &,
                                GGS_stringset  &,
                                GGS_stringset  &,
                                GGS_lstring   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'enterBuiltinTypes'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterBuiltinTypes (C_Compiler &,
                                GGS_M_semanticsEntitiesForUse  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_templateInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_templateInstruction : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_templateInstruction (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_templateInstruction (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstruction (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_templateInstruction
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstruction * getPtr (void) const {
    return (cPtr_templateInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstruction * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstruction *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformation * _galgasObjectRunTimeInfo (void) const ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformation gClassInfoFor__templateInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@templateInstructionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionList ;

class GGS_templateInstructionList : public AC_galgas_list {
  public : typedef elementOf_GGS_templateInstructionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_templateInstructionList constructor_emptyList (void) ;
  public : static GGS_templateInstructionList constructor_listWithValue (const GGS_templateInstruction & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_templateInstructionList & ioList,
                            const sint32 inFirstIndex,
                            const sint32 inCount) const ;

  public : GGS_templateInstructionList
  reader_subListWithRange (C_Compiler & _inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_templateInstructionList
  reader_subListFromIndex (C_Compiler & _inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_templateInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_templateInstruction & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_templateInstruction & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_templateInstruction & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_templateInstruction & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void _dotAssign_operation (const GGS_templateInstructionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_templateInstruction & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_templateInstructionList _operator_concat (const GGS_templateInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_templateInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_templateInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void _internalPrependValues (const GGS_templateInstruction & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_templateInstruction 
  reader_mInstructionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMInstructionAtIndex (C_Compiler & inLexique,
                              const GGS_templateInstruction  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_templateInstructionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  public : /* const */ GGS_templateInstruction   & _mInstruction (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_templateInstructionString'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_templateInstructionString : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateInstructionString (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionString (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionString (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_templateInstructionString
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionString constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionString * getPtr (void) const {
    return (cPtr_templateInstructionString *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mTemplateString (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionString * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionString * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionString *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__templateInstructionString ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_templateInstructionConstant'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_templateInstructionConstant : public GGS_templateInstruction {
//--- Default constructor
  public : inline GGS_templateInstructionConstant (void) :
  GGS_templateInstruction () {}

//--- Pointer assignment constructor
  public : GGS_templateInstructionConstant (cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_templateInstructionConstant (cPtr__AC_galgas_class & inObject) ;

//--- _castFrom class method (implements cast expression)
  public : static GGS_templateInstructionConstant
  _castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_templateInstructionConstant constructor_new (C_Compiler & inLexique,
                                const GGS_typeCplusPlusName & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_templateInstructionConstant * getPtr (void) const {
    return (cPtr_templateInstructionConstant *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_typeCplusPlusName  reader_mCppName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_templateInstructionConstant * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_templateInstructionConstant * operator () (LOCATION_ARGS) const {
      return (cPtr_templateInstructionConstant *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformation gClassInfoFor__templateInstructionConstant ;

//---------------------------------------------------------------------------*

#include "include_typeInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@typeInstructionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeInstructionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_typeInstruction  mInstruction ;
//--- Constructor
  public : elementOf_GGS_typeInstructionList (const GGS_typeInstruction & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeInstructionList * nextObject (void) const { return (elementOf_GGS_typeInstructionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeInstructionList * previousObject (void) const { return (elementOf_GGS_typeInstructionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_typeInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@L_signature'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_signature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_EXformalArgumentPassingMode mFormalArgumentPassingMode ;
  public : GGS_lstring  mGalgasTypeName ;
//--- Constructor
  public : elementOf_GGS_L_signature (const GGS_EXformalArgumentPassingMode& ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_signature * nextObject (void) const { return (elementOf_GGS_L_signature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_signature * previousObject (void) const { return (elementOf_GGS_L_signature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_signature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeListModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListModel : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mTypeName ;
//--- Constructor
  public : elementOf_GGS_typeListModel (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeListModel * nextObject (void) const { return (elementOf_GGS_typeListModel *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeListModel * previousObject (void) const { return (elementOf_GGS_typeListModel *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_typeListModel ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_TypeModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_TypeModel : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_TypeModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_TypeModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_BoolModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_BoolModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_BoolModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_BoolModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_CharModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_CharModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_CharModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_CharModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_UIntModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_UIntModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_UIntModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_UIntModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_SIntModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_SIntModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_SIntModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_SIntModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_UInt64Model'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_UInt64Model : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_UInt64Model (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_UInt64Model (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_SInt64Model'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_SInt64Model : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_SInt64Model (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_SInt64Model (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_DoubleModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_DoubleModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_DoubleModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_DoubleModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_StringModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_StringModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_StringModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_StringModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_LBoolModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LBoolModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LBoolModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_LBoolModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_LCharModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LCharModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LCharModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_LCharModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_LUIntModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LUIntModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LUIntModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_LUIntModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_LSIntModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LSIntModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LSIntModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_LSIntModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_LUInt64Model'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LUInt64Model : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LUInt64Model (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_LUInt64Model (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_LSInt64Model'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LSInt64Model : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LSInt64Model (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_LSInt64Model (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_LDoubleModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LDoubleModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LDoubleModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_LDoubleModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_LStringModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LStringModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LStringModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_LStringModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_StringsetModel'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_StringsetModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_StringsetModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_StringsetModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_LocationModel'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_LocationModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_LocationModel (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_LocationModel (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_ListModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ListModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_ListModel (const GGS_typeListModel & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_ListModel (void) {}
  #endif

//--- Attributes
  public : GGS_typeListModel  mAttributeList ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      abstract class 'cPtr_MapModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_MapModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_MapModel (const GGS_typeListModel & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_MapModel (void) {}
  #endif

//--- Attributes
  public : GGS_typeListModel  mAttributeList ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@enumConstantMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumConstantMap {
  public : GGS_bool mHasConstructor ;

  public : e_enumConstantMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstantMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumConstantMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumConstantMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumConstantMap * nextObject (void) const { return (elementOf_GGS_enumConstantMap *) mNextItem ; }
  public : inline elementOf_GGS_enumConstantMap * infObject (void) const { return (elementOf_GGS_enumConstantMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumConstantMap * supObject (void) const { return (elementOf_GGS_enumConstantMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumConstantMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@enumUsedConstantMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumUsedConstantMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumUsedConstantMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumUsedConstantMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumUsedConstantMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumUsedConstantMap * nextObject (void) const { return (elementOf_GGS_enumUsedConstantMap *) mNextItem ; }
  public : inline elementOf_GGS_enumUsedConstantMap * infObject (void) const { return (elementOf_GGS_enumUsedConstantMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumUsedConstantMap * supObject (void) const { return (elementOf_GGS_enumUsedConstantMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumUsedConstantMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@enumMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumMessageMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumMessageMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumMessageMap * nextObject (void) const { return (elementOf_GGS_enumMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_enumMessageMap * infObject (void) const { return (elementOf_GGS_enumMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumMessageMap * supObject (void) const { return (elementOf_GGS_enumMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_EnumModel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_EnumModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_EnumModel (const GGS_enumConstantMap & ,
                                const GGS_enumMessageMap & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_EnumModel (void) {}
  #endif

//--- Attributes
  public : GGS_enumConstantMap  mEnumConstantesMap ;
  public : GGS_enumMessageMap  mMessagesMap ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@constructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_constructorMap {
  public : GGS_typeListModel  mFormalInputArgumentList ;

  public : e_constructorMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_constructorMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_constructorMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_constructorMap * nextObject (void) const { return (elementOf_GGS_constructorMap *) mNextItem ; }
  public : inline elementOf_GGS_constructorMap * infObject (void) const { return (elementOf_GGS_constructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_constructorMap * supObject (void) const { return (elementOf_GGS_constructorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_constructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@readerMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_readerMap {
  public : GGS_L_signature  mReaderFormalArgumentList ;

  public : e_readerMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_readerMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_readerMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_readerMap * nextObject (void) const { return (elementOf_GGS_readerMap *) mNextItem ; }
  public : inline elementOf_GGS_readerMap * infObject (void) const { return (elementOf_GGS_readerMap *) mInfPtr ; }
  public : inline elementOf_GGS_readerMap * supObject (void) const { return (elementOf_GGS_readerMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_readerMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@modifierMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_modifierMap {
  public : GGS_L_signature  mModifierFormalArgumentList ;

  public : e_modifierMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_modifierMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_modifierMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_modifierMap * nextObject (void) const { return (elementOf_GGS_modifierMap *) mNextItem ; }
  public : inline elementOf_GGS_modifierMap * infObject (void) const { return (elementOf_GGS_modifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_modifierMap * supObject (void) const { return (elementOf_GGS_modifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_modifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_ExternTypeModel'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ExternTypeModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_ExternTypeModel (const GGS_constructorMap & ,
                                const GGS_readerMap & ,
                                const GGS_modifierMap & ,
                                const GGS_typeListModel & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_ExternTypeModel (void) {}
  #endif

//--- Attributes
  public : GGS_constructorMap  mExternTypeConstructorMap ;
  public : GGS_readerMap  mReaderMap ;
  public : GGS_modifierMap  mModifierMap ;
  public : GGS_typeListModel  mAddAssignFormalInputArgumentList ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@classMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_classMessageMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_classMessageMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_classMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_classMessageMap * nextObject (void) const { return (elementOf_GGS_classMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_classMessageMap * infObject (void) const { return (elementOf_GGS_classMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_classMessageMap * supObject (void) const { return (elementOf_GGS_classMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_classMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_ClassModel'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ClassModel : public cPtr_TypeModel {
  private : typedef cPtr_TypeModel inherited ;
//--- Constructor
  public : cPtr_ClassModel (const GGS_bool& ,
                                const GGS_stringset & ,
                                const GGS_typeListModel & ,
                                const GGS_classMessageMap & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_ClassModel (void) {}
  #endif

//--- Attributes
  public : GGS_bool mIsAbstract ;
  public : GGS_stringset  mSuperClasses ;
  public : GGS_typeListModel  mAttributeList ;
  public : GGS_classMessageMap  mMessageMap ;
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformation * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Element of map '@ModelMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ModelMap {
  public : GGS_TypeModel  mType ;

  public : e_ModelMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ModelMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ModelMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_ModelMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_ModelMap * nextObject (void) const { return (elementOf_GGS_ModelMap *) mNextItem ; }
  public : inline elementOf_GGS_ModelMap * infObject (void) const { return (elementOf_GGS_ModelMap *) mInfPtr ; }
  public : inline elementOf_GGS_ModelMap * supObject (void) const { return (elementOf_GGS_ModelMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_ModelMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@ActionMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ActionMap {
  public : GGS_L_signature  mSignature ;
  public : GGS_bool mIsExtern ;

  public : e_ActionMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ActionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ActionMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_ActionMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_ActionMap * nextObject (void) const { return (elementOf_GGS_ActionMap *) mNextItem ; }
  public : inline elementOf_GGS_ActionMap * infObject (void) const { return (elementOf_GGS_ActionMap *) mInfPtr ; }
  public : inline elementOf_GGS_ActionMap * supObject (void) const { return (elementOf_GGS_ActionMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_ActionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_galgasType.h"

//---------------------------------------------------------------------------*

#include "include_typeCplusPlusName.h"

//---------------------------------------------------------------------------*

#include "include_typeDirectName.h"

//---------------------------------------------------------------------------*

#include "include_typeCurrentObjectName.h"

//---------------------------------------------------------------------------*

#include "include_typeCppThisName.h"

//---------------------------------------------------------------------------*

#include "include_typeCppThisInCategoryName.h"

//---------------------------------------------------------------------------*

#include "include_typeCppInheritedName.h"

//---------------------------------------------------------------------------*

#include "include_typeAutomaticName.h"

//---------------------------------------------------------------------------*

#include "include_typeLocationAutomaticName.h"

//---------------------------------------------------------------------------*

#include "include_typeOperandName.h"

//---------------------------------------------------------------------------*

#include "include_typeKeyName.h"

//---------------------------------------------------------------------------*

#include "include_typeNullName.h"

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@typeListeTypesEtNomsArgMethode'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeTypesEtNomsArgMethode : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_EXformalArgumentPassingMode mFormalArgumentPassingMode ;
  public : GGS_typeCplusPlusName  mCppName ;
  public : GGS_bool mModeIn ;
  public : GGS_lstring  mParameterName ;
//--- Constructor
  public : elementOf_GGS_typeListeTypesEtNomsArgMethode (const GGS_AC_galgasType & ,
                                const GGS_EXformalArgumentPassingMode& ,
                                const GGS_typeCplusPlusName & ,
                                const GGS_bool& ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeListeTypesEtNomsArgMethode * nextObject (void) const { return (elementOf_GGS_typeListeTypesEtNomsArgMethode *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeListeTypesEtNomsArgMethode * previousObject (void) const { return (elementOf_GGS_typeListeTypesEtNomsArgMethode *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_typeListeTypesEtNomsArgMethode ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@typeSuperClassesMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSuperClassesMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSuperClassesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeSuperClassesMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeSuperClassesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeSuperClassesMap * nextObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeSuperClassesMap * infObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeSuperClassesMap * supObject (void) const { return (elementOf_GGS_typeSuperClassesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeSuperClassesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@typeListeAttributsSemantiques'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeListeAttributsSemantiques : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mAttributType ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : elementOf_GGS_typeListeAttributsSemantiques (const GGS_AC_galgasType & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeListeAttributsSemantiques * nextObject (void) const { return (elementOf_GGS_typeListeAttributsSemantiques *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeListeAttributsSemantiques * previousObject (void) const { return (elementOf_GGS_typeListeAttributsSemantiques *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_typeListeAttributsSemantiques ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@typeTypesList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeTypesList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_location  mEndOfExpressionLocation ;
//--- Constructor
  public : elementOf_GGS_typeTypesList (const GGS_AC_galgasType & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeTypesList * nextObject (void) const { return (elementOf_GGS_typeTypesList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeTypesList * previousObject (void) const { return (elementOf_GGS_typeTypesList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_typeTypesList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@L_EXsignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_EXsignature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_EXformalArgumentPassingMode mFormalArgumentPassingMode ;
//--- Constructor
  public : elementOf_GGS_L_EXsignature (const GGS_AC_galgasType & ,
                                const GGS_EXformalArgumentPassingMode& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_EXsignature * nextObject (void) const { return (elementOf_GGS_L_EXsignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_EXsignature * previousObject (void) const { return (elementOf_GGS_L_EXsignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_EXsignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@EXcategoryMethodMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_EXcategoryMethodMap {
  public : GGS_categoryMethodKind mCategoryMethodKind ;
  public : GGS_L_EXsignature  aListeArgumentsFormels ;

  public : e_EXcategoryMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_EXcategoryMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_EXcategoryMethodMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_EXcategoryMethodMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_EXcategoryMethodMap * nextObject (void) const { return (elementOf_GGS_EXcategoryMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_EXcategoryMethodMap * infObject (void) const { return (elementOf_GGS_EXcategoryMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_EXcategoryMethodMap * supObject (void) const { return (elementOf_GGS_EXcategoryMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_EXcategoryMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@L_actualParametersSignature'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_actualParametersSignature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_galgasType  mType ;
  public : GGS_EXactualParametersPassingMode mFormalArgumentPassingMode ;
//--- Constructor
  public : elementOf_GGS_L_actualParametersSignature (const GGS_AC_galgasType & ,
                                const GGS_EXactualParametersPassingMode& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_actualParametersSignature * nextObject (void) const { return (elementOf_GGS_L_actualParametersSignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_actualParametersSignature * previousObject (void) const { return (elementOf_GGS_L_actualParametersSignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_actualParametersSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@M_accessors_map'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_accessors_map {
  public : GGS_L_EXsignature  mAccessorSignature ;
  public : GGS_AC_galgasType  mReturnedType ;

  public : e_M_accessors_map (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_accessors_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_accessors_map (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_accessors_map & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_accessors_map * nextObject (void) const { return (elementOf_GGS_M_accessors_map *) mNextItem ; }
  public : inline elementOf_GGS_M_accessors_map * infObject (void) const { return (elementOf_GGS_M_accessors_map *) mInfPtr ; }
  public : inline elementOf_GGS_M_accessors_map * supObject (void) const { return (elementOf_GGS_M_accessors_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_accessors_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgas_jokerInParameterList.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_bool.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_uint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_char.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_string.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_sint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_sint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_uint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_double.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_binaryset.h"

//---------------------------------------------------------------------------*

#include "include_C_galgasPrimitiveType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_location.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lstring.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lchar.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lbool.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_luint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_luint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lsint.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_lsint64.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_ldouble.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_stringset.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgas_filewrapper.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@typeTableMethodes'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableMethodes {
  public : GGS_L_EXsignature  aListeTypesParametres ;

  public : e_typeTableMethodes (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableMethodes : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableMethodes (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeTableMethodes & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableMethodes * nextObject (void) const { return (elementOf_GGS_typeTableMethodes *) mNextItem ; }
  public : inline elementOf_GGS_typeTableMethodes * infObject (void) const { return (elementOf_GGS_typeTableMethodes *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableMethodes * supObject (void) const { return (elementOf_GGS_typeTableMethodes *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableMethodes mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_externTypeConstructorMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_externTypeConstructorMap {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;

  public : e_M_externTypeConstructorMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_externTypeConstructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_externTypeConstructorMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_externTypeConstructorMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_externTypeConstructorMap * nextObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mNextItem ; }
  public : inline elementOf_GGS_M_externTypeConstructorMap * infObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_M_externTypeConstructorMap * supObject (void) const { return (elementOf_GGS_M_externTypeConstructorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_externTypeConstructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasExternType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_terminalSymbolsMapForUse'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_terminalSymbolsMapForUse {
  public : GGS_typeListeAttributsSemantiques  aListeDesAttributs ;

  public : e_M_terminalSymbolsMapForUse (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_terminalSymbolsMapForUse : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_terminalSymbolsMapForUse (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_terminalSymbolsMapForUse & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * nextObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mNextItem ; }
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * infObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mInfPtr ; }
  public : inline elementOf_GGS_M_terminalSymbolsMapForUse * supObject (void) const { return (elementOf_GGS_M_terminalSymbolsMapForUse *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_terminalSymbolsMapForUse mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_lexiqueComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_lexiqueComponents {
  public : GGS_M_terminalSymbolsMapForUse  mTerminalSymbolMap ;

  public : e_M_lexiqueComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_lexiqueComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_lexiqueComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_lexiqueComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_lexiqueComponents * nextObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_lexiqueComponents * infObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_lexiqueComponents * supObject (void) const { return (elementOf_GGS_M_lexiqueComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_lexiqueComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@typeTableEnAvant'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableEnAvant {
  public : GGS_AC_galgasType  mType ;

  public : e_typeTableEnAvant (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableEnAvant : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableEnAvant (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeTableEnAvant & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableEnAvant * nextObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mNextItem ; }
  public : inline elementOf_GGS_typeTableEnAvant * infObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableEnAvant * supObject (void) const { return (elementOf_GGS_typeTableEnAvant *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableEnAvant mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@M_nonterminalSymbolAlts'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonterminalSymbolAlts {
  public : GGS_L_EXsignature  mFormalParametersList ;

  public : e_M_nonterminalSymbolAlts (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAlts : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonterminalSymbolAlts (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_nonterminalSymbolAlts & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * nextObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mNextItem ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * infObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAlts * supObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAlts *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_nonterminalSymbolAlts mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_semanticsEntity.h"

//---------------------------------------------------------------------------*

#include "include_C_grammarForSemantics.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_semanticsEntitiesForUse'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsEntitiesForUse {
  public : GGS_AC_semanticsEntity  aDefEntite ;

  public : e_M_semanticsEntitiesForUse (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsEntitiesForUse : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_semanticsEntitiesForUse (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_semanticsEntitiesForUse & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * nextObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mNextItem ; }
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * infObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mInfPtr ; }
  public : inline elementOf_GGS_M_semanticsEntitiesForUse * supObject (void) const { return (elementOf_GGS_M_semanticsEntitiesForUse *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_semanticsEntitiesForUse mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_typeForGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@M_typesForGrammarComponent'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_typesForGrammarComponent {
  public : GGS_AC_typeForGrammarComponent  mType ;

  public : e_M_typesForGrammarComponent (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_typesForGrammarComponent : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_typesForGrammarComponent (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_typesForGrammarComponent & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_typesForGrammarComponent * nextObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mNextItem ; }
  public : inline elementOf_GGS_M_typesForGrammarComponent * infObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mInfPtr ; }
  public : inline elementOf_GGS_M_typesForGrammarComponent * supObject (void) const { return (elementOf_GGS_M_typesForGrammarComponent *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_typesForGrammarComponent mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_AC_instruction_ForGrammar.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@L_ruleSyntaxSignature'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_ruleSyntaxSignature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_AC_instruction_ForGrammar  mInstruction ;
//--- Constructor
  public : elementOf_GGS_L_ruleSyntaxSignature (const GGS_AC_instruction_ForGrammar & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_ruleSyntaxSignature * nextObject (void) const { return (elementOf_GGS_L_ruleSyntaxSignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_ruleSyntaxSignature * previousObject (void) const { return (elementOf_GGS_L_ruleSyntaxSignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_ruleSyntaxSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@L_grammarsMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_L_grammarsMap {
  public : GGS_M_nonterminalSymbolAlts  mStartSymbolParametersMap ;

  public : e_L_grammarsMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_L_grammarsMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_L_grammarsMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_L_grammarsMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_L_grammarsMap * nextObject (void) const { return (elementOf_GGS_L_grammarsMap *) mNextItem ; }
  public : inline elementOf_GGS_L_grammarsMap * infObject (void) const { return (elementOf_GGS_L_grammarsMap *) mInfPtr ; }
  public : inline elementOf_GGS_L_grammarsMap * supObject (void) const { return (elementOf_GGS_L_grammarsMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_L_grammarsMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of map '@M_nonterminalSymbolAltsForGrammar'             *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonterminalSymbolAltsForGrammar {
  public : GGS_L_signature  mFormalParametersList ;

  public : e_M_nonterminalSymbolAltsForGrammar (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonterminalSymbolAltsForGrammar : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonterminalSymbolAltsForGrammar (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_nonterminalSymbolAltsForGrammar & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * nextObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mNextItem ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * infObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonterminalSymbolAltsForGrammar * supObject (void) const { return (elementOf_GGS_M_nonterminalSymbolAltsForGrammar *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_nonterminalSymbolAltsForGrammar mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Element of list '@L_productionRules_ForGrammarComponent'          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_productionRules_ForGrammarComponent : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mLeftNonterminalSymbol ;
  public : GGS_uint  mLeftNonterminalSymbolIndex ;
  public : GGS_L_ruleSyntaxSignature  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_L_productionRules_ForGrammarComponent (const GGS_lstring & ,
                                const GGS_uint & ,
                                const GGS_L_ruleSyntaxSignature & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_productionRules_ForGrammarComponent * nextObject (void) const { return (elementOf_GGS_L_productionRules_ForGrammarComponent *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_productionRules_ForGrammarComponent * previousObject (void) const { return (elementOf_GGS_L_productionRules_ForGrammarComponent *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_productionRules_ForGrammarComponent ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@M_nonTerminalSymbolsForGrammar'              *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_nonTerminalSymbolsForGrammar {
  public : GGS_M_nonterminalSymbolAltsForGrammar  mNonterminalSymbolParametersMap ;

  public : e_M_nonTerminalSymbolsForGrammar (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_nonTerminalSymbolsForGrammar : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_nonTerminalSymbolsForGrammar (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_nonTerminalSymbolsForGrammar & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * nextObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mNextItem ; }
  public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * infObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mInfPtr ; }
  public : inline elementOf_GGS_M_nonTerminalSymbolsForGrammar * supObject (void) const { return (elementOf_GGS_M_nonTerminalSymbolsForGrammar *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_nonTerminalSymbolsForGrammar mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of map '@M_unusedNonTerminalSymbolsForGrammar'           *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_unusedNonTerminalSymbolsForGrammar {
  public : GGS_luint  mSymbolIndex ;

  public : e_M_unusedNonTerminalSymbolsForGrammar (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_unusedNonTerminalSymbolsForGrammar & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar * nextObject (void) const { return (elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar *) mNextItem ; }
  public : inline elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar * infObject (void) const { return (elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar *) mInfPtr ; }
  public : inline elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar * supObject (void) const { return (elementOf_GGS_M_unusedNonTerminalSymbolsForGrammar *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_unusedNonTerminalSymbolsForGrammar mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_syntaxComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_syntaxComponents {
  public : GGS_M_nonTerminalSymbolsForGrammar  mNonterminalSymbolsMap ;
  public : GGS_L_productionRules_ForGrammarComponent  mProductionRulesList ;
  public : GGS_lstring  mLexiqueComponentName ;

  public : e_M_syntaxComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_syntaxComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_syntaxComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_syntaxComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_syntaxComponents * nextObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_syntaxComponents * infObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_syntaxComponents * supObject (void) const { return (elementOf_GGS_M_syntaxComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_syntaxComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_T_terminalInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*

#include "include_T_nonterminalInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of list '@L_branchList_ForGrammarComponent'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_branchList_ForGrammarComponent : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_L_ruleSyntaxSignature  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_L_branchList_ForGrammarComponent (const GGS_L_ruleSyntaxSignature & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_branchList_ForGrammarComponent * nextObject (void) const { return (elementOf_GGS_L_branchList_ForGrammarComponent *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_branchList_ForGrammarComponent * previousObject (void) const { return (elementOf_GGS_L_branchList_ForGrammarComponent *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_branchList_ForGrammarComponent ;
} ;

//---------------------------------------------------------------------------*

#include "include_T_selectInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*

#include "include_T_repeatInstruction_forGrammarComponent.h"

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@L_syntaxComponents_ForGrammar'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_syntaxComponents_ForGrammar : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_M_nonTerminalSymbolsForGrammar  mNonterminalSymbolsMap ;
  public : GGS_L_productionRules_ForGrammarComponent  mProductionRulesList ;
  public : GGS_lstring  mSyntaxComponentName ;
//--- Constructor
  public : elementOf_GGS_L_syntaxComponents_ForGrammar (const GGS_M_nonTerminalSymbolsForGrammar & ,
                                const GGS_L_productionRules_ForGrammarComponent & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_syntaxComponents_ForGrammar * nextObject (void) const { return (elementOf_GGS_L_syntaxComponents_ForGrammar *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_syntaxComponents_ForGrammar * previousObject (void) const { return (elementOf_GGS_L_syntaxComponents_ForGrammar *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_syntaxComponents_ForGrammar ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of map '@typeClassInheritedMessagesMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeClassInheritedMessagesMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeClassInheritedMessagesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeClassInheritedMessagesMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeClassInheritedMessagesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * nextObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * infObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeClassInheritedMessagesMap * supObject (void) const { return (elementOf_GGS_typeClassInheritedMessagesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeClassInheritedMessagesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@typeSemanticAttributesMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeSemanticAttributesMap {
  public : GGS_AC_galgasType  mAttributType ;

  public : e_typeSemanticAttributesMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeSemanticAttributesMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeSemanticAttributesMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeSemanticAttributesMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeSemanticAttributesMap * nextObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mNextItem ; }
  public : inline elementOf_GGS_typeSemanticAttributesMap * infObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeSemanticAttributesMap * supObject (void) const { return (elementOf_GGS_typeSemanticAttributesMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeSemanticAttributesMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@insertOrSearchMethodList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_insertOrSearchMethodList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_string mErrorMessage ;
  public : GGS_bool mIsGetIndexMethod ;
  public : GGS_string mShadowErrorMessage ;
//--- Constructor
  public : elementOf_GGS_insertOrSearchMethodList (const GGS_lstring & ,
                                const GGS_string& ,
                                const GGS_bool& ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_insertOrSearchMethodList * nextObject (void) const { return (elementOf_GGS_insertOrSearchMethodList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_insertOrSearchMethodList * previousObject (void) const { return (elementOf_GGS_insertOrSearchMethodList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_insertOrSearchMethodList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeDefEntiteUtilisable.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedListType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasListType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasStructType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasListmapType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@domainModifierMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_domainModifierMap {
  public : GGS_L_EXsignature  mFormalParametersList ;

  public : e_domainModifierMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_domainModifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_domainModifierMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_domainModifierMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_domainModifierMap * nextObject (void) const { return (elementOf_GGS_domainModifierMap *) mNextItem ; }
  public : inline elementOf_GGS_domainModifierMap * infObject (void) const { return (elementOf_GGS_domainModifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_domainModifierMap * supObject (void) const { return (elementOf_GGS_domainModifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_domainModifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@domainAttributeMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_domainAttributeMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_domainAttributeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_domainAttributeMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_domainAttributeMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_domainAttributeMap * nextObject (void) const { return (elementOf_GGS_domainAttributeMap *) mNextItem ; }
  public : inline elementOf_GGS_domainAttributeMap * infObject (void) const { return (elementOf_GGS_domainAttributeMap *) mInfPtr ; }
  public : inline elementOf_GGS_domainAttributeMap * supObject (void) const { return (elementOf_GGS_domainAttributeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_domainAttributeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasDomainType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedSortedListType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasSortedListType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@typeTableBlocsDeTable'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeTableBlocsDeTable {
  public : GGS_L_EXsignature  aSignatureDebut ;
  public : GGS_L_EXsignature  aSignatureFin ;

  public : e_typeTableBlocsDeTable (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeTableBlocsDeTable : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeTableBlocsDeTable (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeTableBlocsDeTable & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeTableBlocsDeTable * nextObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mNextItem ; }
  public : inline elementOf_GGS_typeTableBlocsDeTable * infObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mInfPtr ; }
  public : inline elementOf_GGS_typeTableBlocsDeTable * supObject (void) const { return (elementOf_GGS_typeTableBlocsDeTable *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeTableBlocsDeTable mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedMapType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@mapModifierMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapModifierMap {
  public : GGS_L_EXsignature  mMethodSignature ;

  public : e_mapModifierMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapModifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapModifierMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapModifierMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapModifierMap * nextObject (void) const { return (elementOf_GGS_mapModifierMap *) mNextItem ; }
  public : inline elementOf_GGS_mapModifierMap * infObject (void) const { return (elementOf_GGS_mapModifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapModifierMap * supObject (void) const { return (elementOf_GGS_mapModifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapModifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@mapMethodMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapMethodMap {
  public : GGS_L_EXsignature  mMethodSignature ;

  public : e_mapMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapMethodMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapMethodMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapMethodMap * nextObject (void) const { return (elementOf_GGS_mapMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_mapMethodMap * infObject (void) const { return (elementOf_GGS_mapMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapMethodMap * supObject (void) const { return (elementOf_GGS_mapMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasMapType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedMapindexType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@mapIndexSearchReaderMap'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapIndexSearchReaderMap {
  public : GGS_lstring  mRetrieveErrorMessage ;

  public : e_mapIndexSearchReaderMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapIndexSearchReaderMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapIndexSearchReaderMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_mapIndexSearchReaderMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapIndexSearchReaderMap * nextObject (void) const { return (elementOf_GGS_mapIndexSearchReaderMap *) mNextItem ; }
  public : inline elementOf_GGS_mapIndexSearchReaderMap * infObject (void) const { return (elementOf_GGS_mapIndexSearchReaderMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapIndexSearchReaderMap * supObject (void) const { return (elementOf_GGS_mapIndexSearchReaderMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapIndexSearchReaderMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasMapindexType.h"

//---------------------------------------------------------------------------*

#include "include_typeGalgasUndefinedClassType.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@L_lazyAttributeList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_L_lazyAttributeList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_location  mLocationMagicNumber ;
  public : GGS_typeListeAttributsSemantiques  mComputedAttributeTypeAndNameList ;
  public : GGS_typeInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_L_lazyAttributeList (const GGS_location & ,
                                const GGS_typeListeAttributsSemantiques & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_L_lazyAttributeList * nextObject (void) const { return (elementOf_GGS_L_lazyAttributeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_L_lazyAttributeList * previousObject (void) const { return (elementOf_GGS_L_lazyAttributeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_L_lazyAttributeList ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgasClassType.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteType.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteRoutine.h"

//---------------------------------------------------------------------------*

#include "include_typeEntiteFonction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@typeEnumMessageMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeEnumMessageMap {
  public : GGS_lstringlist  mMessageStringList ;

  public : e_typeEnumMessageMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeEnumMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeEnumMessageMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_typeEnumMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeEnumMessageMap * nextObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_typeEnumMessageMap * infObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeEnumMessageMap * supObject (void) const { return (elementOf_GGS_typeEnumMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeEnumMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@enumModifierDefinitionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumModifierDefinitionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mSourceState ;
  public : GGS_lstring  mTargetState ;
  public : GGS_typeInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_enumModifierDefinitionList (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_enumModifierDefinitionList * nextObject (void) const { return (elementOf_GGS_enumModifierDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_enumModifierDefinitionList * previousObject (void) const { return (elementOf_GGS_enumModifierDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_enumModifierDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@enumModifierMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumModifierMap {
  public : GGS_enumModifierDefinitionList  mActionDefinitionList ;
  public : GGS_L_EXsignature  mSignature ;
  public : GGS_typeListeTypesEtNomsArgMethode  mArgumentTypeAndNameList ;

  public : e_enumModifierMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumModifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumModifierMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumModifierMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumModifierMap * nextObject (void) const { return (elementOf_GGS_enumModifierMap *) mNextItem ; }
  public : inline elementOf_GGS_enumModifierMap * infObject (void) const { return (elementOf_GGS_enumModifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumModifierMap * supObject (void) const { return (elementOf_GGS_enumModifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumModifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@enumMethodDefinitionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMethodDefinitionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mSourceState ;
  public : GGS_typeInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_enumMethodDefinitionList (const GGS_lstring & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_enumMethodDefinitionList * nextObject (void) const { return (elementOf_GGS_enumMethodDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_enumMethodDefinitionList * previousObject (void) const { return (elementOf_GGS_enumMethodDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_enumMethodDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@enumMethodMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumMethodMap {
  public : GGS_enumMethodDefinitionList  mActionDefinitionList ;
  public : GGS_L_EXsignature  mSignature ;
  public : GGS_typeListeTypesEtNomsArgMethode  mArgumentTypeAndNameList ;

  public : e_enumMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumMethodMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumMethodMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumMethodMap * nextObject (void) const { return (elementOf_GGS_enumMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_enumMethodMap * infObject (void) const { return (elementOf_GGS_enumMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumMethodMap * supObject (void) const { return (elementOf_GGS_enumMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@enumOperatorDefinitionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumOperatorDefinitionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mLeftSourceState ;
  public : GGS_luint  mLeftSourceStateIndex ;
  public : GGS_lstring  mRightSourceState ;
  public : GGS_luint  mRightSourceStateIndex ;
  public : GGS_lstring  mTargetState ;
  public : GGS_luint  mTargetStateIndex ;
  public : GGS_typeInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_enumOperatorDefinitionList (const GGS_lstring & ,
                                const GGS_luint & ,
                                const GGS_lstring & ,
                                const GGS_luint & ,
                                const GGS_lstring & ,
                                const GGS_luint & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_enumOperatorDefinitionList * nextObject (void) const { return (elementOf_GGS_enumOperatorDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_enumOperatorDefinitionList * previousObject (void) const { return (elementOf_GGS_enumOperatorDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_enumOperatorDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@enumOperatorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumOperatorMap {
  public : GGS_enumOperatorDefinitionList  mActionDefinitionList ;
  public : GGS_L_EXsignature  mSignature ;
  public : GGS_typeListeTypesEtNomsArgMethode  mArgumentTypeAndNameList ;

  public : e_enumOperatorMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumOperatorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumOperatorMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_enumOperatorMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumOperatorMap * nextObject (void) const { return (elementOf_GGS_enumOperatorMap *) mNextItem ; }
  public : inline elementOf_GGS_enumOperatorMap * infObject (void) const { return (elementOf_GGS_enumOperatorMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumOperatorMap * supObject (void) const { return (elementOf_GGS_enumOperatorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumOperatorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

#include "include_typeGalgas_enum.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@M_cli_options'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_cli_options {
  public : GGS_lchar  mOptionChar ;
  public : GGS_lstring  mOptionString ;
  public : GGS_lstring  mComment ;
  public : GGS_string mDefaultValue ;

  public : e_M_cli_options (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_cli_options : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_cli_options (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_cli_options & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_cli_options * nextObject (void) const { return (elementOf_GGS_M_cli_options *) mNextItem ; }
  public : inline elementOf_GGS_M_cli_options * infObject (void) const { return (elementOf_GGS_M_cli_options *) mInfPtr ; }
  public : inline elementOf_GGS_M_cli_options * supObject (void) const { return (elementOf_GGS_M_cli_options *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_cli_options mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@M_optionComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_optionComponents {
  public : GGS_M_cli_options  mBoolOptionsMap ;
  public : GGS_M_cli_options  mUintOptionsMap ;
  public : GGS_M_cli_options  mStringOptionsMap ;

  public : e_M_optionComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_optionComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_optionComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_optionComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_optionComponents * nextObject (void) const { return (elementOf_GGS_M_optionComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_optionComponents * infObject (void) const { return (elementOf_GGS_M_optionComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_optionComponents * supObject (void) const { return (elementOf_GGS_M_optionComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_optionComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of map '@M_grammarComponents'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_grammarComponents {
  public : GGS_M_nonterminalSymbolAltsForGrammar  mNonterminalSymbolParametersMap ;
  public : GGS_lstring  mLexiqueName ;
  public : GGS_M_optionComponents  mOptionsMap ;

  public : e_M_grammarComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_grammarComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_grammarComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_grammarComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_grammarComponents * nextObject (void) const { return (elementOf_GGS_M_grammarComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_grammarComponents * infObject (void) const { return (elementOf_GGS_M_grammarComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_grammarComponents * supObject (void) const { return (elementOf_GGS_M_grammarComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_grammarComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@M_semanticsComponents'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_semanticsComponents {
  public : GGS_ModelMap  mModelMap ;
  public : GGS_ActionMap  mActionMap ;
  public : GGS_stringset  mImportedSemanticsComponents ;
  public : GGS_stringset  mImportedMetamodelComponents ;
  public : GGS_stringset  mImportedOptionsComponents ;
  public : GGS_M_optionComponents  mOptionsComponents ;
  public : GGS_M_semanticsEntitiesForUse  mSemanticsEntitiesMap ;

  public : e_M_semanticsComponents (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_semanticsComponents : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_semanticsComponents (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_semanticsComponents & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_semanticsComponents * nextObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mNextItem ; }
  public : inline elementOf_GGS_M_semanticsComponents * infObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mInfPtr ; }
  public : inline elementOf_GGS_M_semanticsComponents * supObject (void) const { return (elementOf_GGS_M_semanticsComponents *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_semanticsComponents mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@M_regularFiles'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_regularFiles {
  public : GGS_uint  mWrapperDirectoryIndex ;
  public : GGS_uint  mWrapperFileIndex ;

  public : e_M_regularFiles (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_regularFiles : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_regularFiles (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_regularFiles & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_regularFiles * nextObject (void) const { return (elementOf_GGS_M_regularFiles *) mNextItem ; }
  public : inline elementOf_GGS_M_regularFiles * infObject (void) const { return (elementOf_GGS_M_regularFiles *) mInfPtr ; }
  public : inline elementOf_GGS_M_regularFiles * supObject (void) const { return (elementOf_GGS_M_regularFiles *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_regularFiles mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@filewrapperTemplateMap'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_filewrapperTemplateMap {
  public : GGS_typeListeAttributsSemantiques  mFormalAttributeList ;

  public : e_filewrapperTemplateMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_filewrapperTemplateMap (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_filewrapperTemplateMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_filewrapperTemplateMap * nextObject (void) const { return (elementOf_GGS_filewrapperTemplateMap *) mNextItem ; }
  public : inline elementOf_GGS_filewrapperTemplateMap * infObject (void) const { return (elementOf_GGS_filewrapperTemplateMap *) mInfPtr ; }
  public : inline elementOf_GGS_filewrapperTemplateMap * supObject (void) const { return (elementOf_GGS_filewrapperTemplateMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_filewrapperTemplateMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@M_filewrappers'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_M_filewrappers {
  public : GGS_M_regularFiles  mRegularFileMap ;
  public : GGS_filewrapperTemplateMap  mTemplateMap ;

  public : e_M_filewrappers (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_M_filewrappers : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_M_filewrappers (const GGS_lstring & inKey,
                                     const sint32 inIndex,
                                     const e_M_filewrappers & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_M_filewrappers * nextObject (void) const { return (elementOf_GGS_M_filewrappers *) mNextItem ; }
  public : inline elementOf_GGS_M_filewrappers * infObject (void) const { return (elementOf_GGS_M_filewrappers *) mInfPtr ; }
  public : inline elementOf_GGS_M_filewrappers * supObject (void) const { return (elementOf_GGS_M_filewrappers *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_M_filewrappers mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (C_Compiler & _inLexique,
                                         const sint32 inElementIndex,
                                         C_String & ioString,
                                         const sint32 inIndentation
                                         COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@labelForPopUpList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_labelForPopUpList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mTerminal1 ;
  public : GGS_uint  mTerminal1ID ;
  public : GGS_lstring  mTerminal2 ;
  public : GGS_uint  mTerminal2ID ;
//--- Constructor
  public : elementOf_GGS_labelForPopUpList (const GGS_lstring & ,
                                const GGS_uint & ,
                                const GGS_lstring & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_labelForPopUpList * nextObject (void) const { return (elementOf_GGS_labelForPopUpList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_labelForPopUpList * previousObject (void) const { return (elementOf_GGS_labelForPopUpList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_labelForPopUpList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@textMacroList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_textMacroList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mKey ;
  public : GGS_lstring  mContents ;
//--- Constructor
  public : elementOf_GGS_textMacroList (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_textMacroList * nextObject (void) const { return (elementOf_GGS_textMacroList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_textMacroList * previousObject (void) const { return (elementOf_GGS_textMacroList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_textMacroList ;
} ;

//---------------------------------------------------------------------------*

#include "include_templateInstruction.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@templateInstructionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_templateInstructionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_templateInstruction  mInstruction ;
//--- Constructor
  public : elementOf_GGS_templateInstructionList (const GGS_templateInstruction & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_templateInstructionList * nextObject (void) const { return (elementOf_GGS_templateInstructionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_templateInstructionList * previousObject (void) const { return (elementOf_GGS_templateInstructionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Friend class declaration
  friend class GGS_templateInstructionList ;
} ;

//---------------------------------------------------------------------------*

#include "include_templateInstructionString.h"

//---------------------------------------------------------------------------*

#include "include_templateInstructionConstant.h"

//---------------------------------------------------------------------------*
//                                                                           *
//               Declarations for 'EXsemanticContext' struct                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_EXsemanticContext {
//--- Default constructor
  public : GGS_EXsemanticContext (void) ;

//--- Virtual destructor
  public : virtual ~GGS_EXsemanticContext (void) ;

//--- Handle 'drop' instruction
  public : void _drop (void) ;

//--- Method '_isBuilt'
  public : bool _isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_EXsemanticContext * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_EXsemanticContext * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool _operator_isEqual (const GGS_EXsemanticContext & inOperand) const ;
  public : GGS_bool _operator_isNotEqual (const GGS_EXsemanticContext & inOperand) const ;

//--- Reader 'description'
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;
//--- Galgas 'new' destructor
  public : static GGS_EXsemanticContext constructor_new (const GGS_M_filewrappers & argument_0,
                 const GGS_stringset & argument_1,
                 const GGS_EXcategoryMethodMap & argument_2) ;

//--- Readers
  public : inline GGS_M_filewrappers 
  reader_mFilewrappers (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mFilewrappers ;
  }

  public : inline GGS_stringset 
  reader_mImportedSemanticComponents (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mImportedSemanticComponents ;
  }

  public : inline GGS_EXcategoryMethodMap 
  reader_mCategoryMethodMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mCategoryMethodMap ;
  }

//--- Attributes
  public : GGS_M_filewrappers  mFilewrappers ;
  public : GGS_stringset  mImportedSemanticComponents ;
  public : GGS_EXcategoryMethodMap  mCategoryMethodMap ;
} ;

//---------------------------------------------------------------------------*

#endif
