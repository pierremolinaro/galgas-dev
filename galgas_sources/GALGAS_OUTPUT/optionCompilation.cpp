//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'optionCompilation.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 12th, 2008, at 15h35'38"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "optionCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "optionCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "optionHeaderGeneration"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_optionHeaderGeneration (C_Compiler & _inLexique,
                                const GGS_string  var_cas_inStartDirectory,
                                const GGS_string  var_cas_inOptionComponentName,
                                const GGS_commandLineOptionMap   var_cas_inBoolOptionMap,
                                const GGS_commandLineOptionMap   var_cas_inUIntOptionMap,
                                const GGS_commandLineOptionMap   var_cas_inStringOptionMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_optionHeaderGeneration at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_generatedUserZone2 ;
  var_cas_generatedUserZone2 = GGS_string (true, "") ;
  var_cas_generatedUserZone2.writeString ("#ifndef ") ;
  var_cas_generatedUserZone2._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone2.writeString ("_0_DEFINED\n"
  "#define ") ;
  var_cas_generatedUserZone2._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone2.writeString ("_0_DEFINED\n"
  "#include \"command_line_interface/AC_CLI_Options.h\"\n"
    "\n") ;
  var_cas_generatedUserZone2._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
  GGS_string var_cas_generatedUserZone3 ;
  var_cas_generatedUserZone3 = GGS_string (true, "") ;
  var_cas_generatedUserZone3.modifier_setCapacity (_inLexique, GGS_uint (true, 5000U) COMMA_SOURCE_FILE_AT_LINE (44)) ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "Command Line Options definitions class") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("class ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString (" : public AC_CLI_Options {\n"
  "//--- Constructor\n"
  "  public : ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString (" (void) ;\n"
  "\n"
  "//--- Boolean Command Line Interface Options\n"
  "  public : virtual sint32 getBoolOptionsCount (void) const ;\n"
    "\n"
  "  public : virtual bool\n"
  "  getBoolOptionValue (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual void\n"
  "  setBoolOptionValue (const sint32 inIndex, const bool inValue) ;\n"
    "\n"
  "  public : virtual char\n"
  "  getBoolOptionChar (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual const char *\n"
  "  getBoolOptionString (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual const char *\n"
  "  getBoolOptionDescription (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual bool\n"
  "  boolOptionValueFromKeys (const char * inModuleName,\n"
  "                           const char * inOptionName,\n"
  "                           bool * outFound) const ;\n"
    "\n"
  "\n"
  "//--- Unsigned integer Command Line Interface Options\n"
  "  public : virtual sint32 getUintOptionsCount (void) const ;\n"
    "\n"
  "  public : virtual uint32\n"
  "  getUintOptionValue (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual uint32\n"
  "  getUintOptionDefaultValue (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual void\n"
  "  setUintOptionValue (const sint32 inIndex, const uint32 inValue) ;\n"
    "\n"
  "  public : virtual char\n"
  "  getUintOptionChar (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual const char *\n"
  "  getUintOptionString (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual const char *\n"
  "  getUintOptionDescription (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual uint32\n"
  "  uintOptionValueFromKeys (const char * inModuleName,\n"
  "                           const char * inOptionName,\n"
  "                           bool * outFound) const ;\n"
  "\n"
  "//--- String Command Line Interface Options\n"
  "  public : virtual sint32 getStringOptionsCount (void) const ;\n"
    "\n"
  "  public : virtual C_String\n"
  "  getStringOptionValue (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual void\n"
  "  setStringOptionValue (const sint32 inIndex, const C_String & inValue) ;\n"
    "\n"
  "  public : virtual char\n"
  "  getStringOptionChar (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual const char *\n"
  "  getStringOptionString (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual const char *\n"
  "  getStringOptionDescription (const sint32 inIndex) const ;\n"
    "\n"
  "  public : virtual C_String\n"
  "  stringOptionValueFromKeys (const char * inModuleName,\n"
  "                             const char * inOptionName,\n"
  "                             bool * outFound) const ;\n"
  "\n"
  "//--- Private arraies : current options values\n"
  "  private : bool mBoolOptionValues [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (105))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (105)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (105))) ;
  var_cas_generatedUserZone3.writeString ("] ;\n"
  "  private : uint32 mUintOptionValues [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (106))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (106)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (106))) ;
  var_cas_generatedUserZone3.writeString ("] ;\n"
  "  private : C_String mStringOptionValues [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (107))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (107)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (107))) ;
  var_cas_generatedUserZone3.writeString ("] ;\n"
  "  private : TC_UniqueArray <C_String> mStringValue ;\n"
  "} ;\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("#endif\n") ;
  GGS_string::class_method_generateFile (_inLexique, var_cas_inStartDirectory, (var_cas_inOptionComponentName)._operator_concat (GGS_string (true, ".h")), GGS_string (true, "//"), GGS_string (true, "\n"
    "\n"), var_cas_generatedUserZone2, GGS_string (true, "\n"
    "\n"), var_cas_generatedUserZone3 COMMA_SOURCE_FILE_AT_LINE (116)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_optionHeaderGeneration\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "optionImplementationGeneration"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_optionImplementationGeneration (C_Compiler & _inLexique,
                                const GGS_string  var_cas_inStartDirectory,
                                const GGS_string  var_cas_inOptionComponentName,
                                const GGS_commandLineOptionMap   var_cas_inBoolOptionMap,
                                const GGS_commandLineOptionMap   var_cas_inUIntOptionMap,
                                const GGS_commandLineOptionMap   var_cas_inStringOptionMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_optionImplementationGeneration at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_generatedUserZone2 ;
  var_cas_generatedUserZone2 = GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE) ;
  var_cas_generatedUserZone2.writeString ("#include \"version_libpm.h\"\n"
  "#if LIBPM_VERSION != THE_LIBPM_VERSION\n"
  "  #error \"This file has been compiled with a version of GALGAS different than the version of libpm\"\n"
  "#endif\n"
    "\n"
  "#include <string.h>\n"
    "\n"
  "#include \"") ;
  var_cas_generatedUserZone2._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone2.writeString (".h\"\n"
    "\n") ;
  GGS_string var_cas_generatedUserZone3 ;
  var_cas_generatedUserZone3 = GGS_string (true, "") ;
  var_cas_generatedUserZone3.modifier_setCapacity (_inLexique, GGS_uint (true, 5000U) COMMA_SOURCE_FILE_AT_LINE (148)) ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "C O N S T R U C T O R") COMMA_HERE)) ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString (" (void)\n"
  ":mStringValue (1 COMMA_HERE) {\n") ;
  GGS_uint  var_cas_index ;
  var_cas_index = GGS_uint (true, 0U) ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_7028 (var_cas_inBoolOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_7028 = NULL ;
    while (((operand_7028 = (GGS_commandLineOptionMap::cElement *) enumerator_7028.nextObject ()))) {
      macroValidPointer (operand_7028) ;
      var_cas_generatedUserZone3.writeString ("  mBoolOptionValues [") ;
      var_cas_generatedUserZone3._dotAssign_operation (var_cas_index.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (155))) ;
      var_cas_generatedUserZone3.writeString ("] = false ;\n") ;
      var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (156)) ;
    }
  }
  var_cas_generatedUserZone3.writeString ("  mBoolOptionValues [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_index.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (158))) ;
  var_cas_generatedUserZone3.writeString ("] = false ; // Extra unused entry\n") ;
  var_cas_index = GGS_uint (true, 0U) ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_7302 (var_cas_inUIntOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_7302 = NULL ;
    while (((operand_7302 = (GGS_commandLineOptionMap::cElement *) enumerator_7302.nextObject ()))) {
      macroValidPointer (operand_7302) ;
      var_cas_generatedUserZone3.writeString ("  mUintOptionValues [") ;
      var_cas_generatedUserZone3._dotAssign_operation (var_cas_index.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (161))) ;
      var_cas_generatedUserZone3.writeString ("] = 0 ;\n") ;
      var_cas_index._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (162)) ;
    }
  }
  var_cas_generatedUserZone3.writeString ("  mUintOptionValues [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_index.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (164))) ;
  var_cas_generatedUserZone3.writeString ("] = 0 ; // Extra unused entry\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    B O O L    O P T I O N S    C O U N T") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("sint32 ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getBoolOptionsCount (void) const {\n"
  "  return ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (170)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (170))) ;
  var_cas_generatedUserZone3.writeString (" ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    B O O L    O P T I O N    V A L U E") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("bool ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getBoolOptionValue (const sint32 inIndex) const {\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (177)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (177))) ;
  var_cas_generatedUserZone3.writeString (")) \? mBoolOptionValues [inIndex] : false ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "S E T    B O O L    O P T I O N    V A L U E") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("void ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::setBoolOptionValue (const sint32 inIndex, const bool inValue) {\n"
  "  if ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (184)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (184))) ;
  var_cas_generatedUserZone3.writeString (")) {\n"
  "    mBoolOptionValues [inIndex] = inValue ;\n"
  "  }\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    B O O L    O P T I O N    C H A R A C T E R") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("char ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getBoolOptionChar (const sint32 inIndex) const {\n"
  "  const char kCharArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (193))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (193)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (193))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_9071 (var_cas_inBoolOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_9071 = NULL ;
    while (((operand_9071 = (GGS_commandLineOptionMap::cElement *) enumerator_9071.nextObject ()))) {
      macroValidPointer (operand_9071) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppChar (_inLexique, operand_9071->mInfo.mOptionChar.reader_char (_inLexique COMMA_SOURCE_FILE_AT_LINE (195)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (", ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("'\\0'} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (198)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (198))) ;
  var_cas_generatedUserZone3.writeString (")) \? kCharArray [inIndex] : '\\0' ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    B O O L    O P T I O N    S T R I N G") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("const char * ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getBoolOptionString (const sint32 inIndex) const {\n"
  "  const char * kStringArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (205))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (205)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (205))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_9745 (var_cas_inBoolOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_9745 = NULL ;
    while (((operand_9745 = (GGS_commandLineOptionMap::cElement *) enumerator_9745.nextObject ()))) {
      macroValidPointer (operand_9745) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppString (_inLexique, operand_9745->mInfo.mOptionString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (207)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (",\n"
        "    ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("\"\"} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (211)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (211))) ;
  var_cas_generatedUserZone3.writeString (")) \? kStringArray [inIndex] : \"\" ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    B O O L    O P T I O N    D E S C R I P T I O N") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("const char * ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getBoolOptionDescription (const sint32 inIndex) const {\n"
  "  const char * kDescriptionArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (218))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (218)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (218))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_10466 (var_cas_inBoolOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_10466 = NULL ;
    while (((operand_10466 = (GGS_commandLineOptionMap::cElement *) enumerator_10466.nextObject ()))) {
      macroValidPointer (operand_10466) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppString (_inLexique, operand_10466->mInfo.mComment.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (220)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (",\n"
        "    ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("\"\"} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (224)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (224))) ;
  var_cas_generatedUserZone3.writeString (")) \? kDescriptionArray [inIndex] : \"\" ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    B O O L    O P T I O N    V A L U E    F R O M    K E Y S") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("bool ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::\n"
  "boolOptionValueFromKeys (const char * inModuleName,\n"
  "                         const char * inOptionName,\n"
  "                         bool * outFound) const {\n"
  "  const char * kKeyArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (233))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (233)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (233))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_11311 (var_cas_inBoolOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_11311 = NULL ;
    while (((operand_11311 = (GGS_commandLineOptionMap::cElement *) enumerator_11311.nextObject ()))) {
      macroValidPointer (operand_11311) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppString (_inLexique, operand_11311->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (235)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (",\n"
        "    ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("\"\"} ;\n"
  "  bool result = false ;\n"
  "  bool found = strcmp (inModuleName, \"") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("\") == 0 ;\n"
  "  if (found) {\n"
  "    found = false ;\n"
  "    sint32 index = 0 ;\n"
  "    while ((index < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inBoolOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (244)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (244))) ;
  var_cas_generatedUserZone3.writeString (") && ! found) {\n"
  "      found = strcmp (inOptionName, kKeyArray [index]) == 0 ;\n"
  "      if (found) {\n"
  "        result = mBoolOptionValues [index] ;\n"
  "      }\n"
  "      index ++ ;\n"
  "    }\n"
  "  }\n"
  "  if (outFound != NULL) {\n"
  "    * outFound = found ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    U I N T    O P T I O N S    C O U N T") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("sint32 ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getUintOptionsCount (void) const {\n"
  "  return ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (261)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (261))) ;
  var_cas_generatedUserZone3.writeString (" ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    U I N T    O P T I O N    V A L U E") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("uint32 ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getUintOptionValue (const sint32 inIndex) const {\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (268)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (268))) ;
  var_cas_generatedUserZone3.writeString (")) \? mUintOptionValues [inIndex] : 0 ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    U I N T    O P T I O N    D E F A U L T    V A L U E") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("uint32 ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getUintOptionDefaultValue (const sint32 inIndex) const {\n"
  "  static const uint32 kDefaultValues [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (275))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (275)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (275))) ;
  var_cas_generatedUserZone3.writeString ("] = {\n") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_13221 (var_cas_inUIntOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_13221 = NULL ;
    while (((operand_13221 = (GGS_commandLineOptionMap::cElement *) enumerator_13221.nextObject ()))) {
      macroValidPointer (operand_13221) ;
      var_cas_generatedUserZone3.writeString ("  0,\n") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("  0} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (280)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (280))) ;
  var_cas_generatedUserZone3.writeString (")) \? kDefaultValues [inIndex] : 0 ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "S E T    U I N T    O P T I O N    V A L U E") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("void ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::setUintOptionValue (const sint32 inIndex, const uint32 inValue) {\n"
  "  if ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (287)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (287))) ;
  var_cas_generatedUserZone3.writeString (")) {\n"
  "    mUintOptionValues [inIndex] = inValue ;\n"
  "  }\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    U I N T    O P T I O N    C H A R A C T E R") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("char ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getUintOptionChar (const sint32 inIndex) const {\n"
  "  static const char kCharArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (296))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (296)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (296))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_14273 (var_cas_inUIntOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_14273 = NULL ;
    while (((operand_14273 = (GGS_commandLineOptionMap::cElement *) enumerator_14273.nextObject ()))) {
      macroValidPointer (operand_14273) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppChar (_inLexique, operand_14273->mInfo.mOptionChar.reader_char (_inLexique COMMA_SOURCE_FILE_AT_LINE (298)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (", ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("'\\0'} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (302)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (302))) ;
  var_cas_generatedUserZone3.writeString (")) \? kCharArray [inIndex] : '\\0' ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    U I N T    O P T I O N    S T R I N G") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("const char * ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getUintOptionString (const sint32 inIndex) const {\n"
  "  static const char * kStringArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (309))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (309)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (309))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_14958 (var_cas_inUIntOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_14958 = NULL ;
    while (((operand_14958 = (GGS_commandLineOptionMap::cElement *) enumerator_14958.nextObject ()))) {
      macroValidPointer (operand_14958) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppString (_inLexique, operand_14958->mInfo.mOptionString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (311)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (",\n"
        "    ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("\"\"} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (315)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (315))) ;
  var_cas_generatedUserZone3.writeString (")) \? kStringArray [inIndex] : \"\" ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T   U I N T    O P T I O N    D E S C R I P T I O N") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("const char * ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::getUintOptionDescription (const sint32 inIndex) const {\n"
  "  static const char * kDescriptionArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (322))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (322)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (322))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_15682 (var_cas_inUIntOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_15682 = NULL ;
    while (((operand_15682 = (GGS_commandLineOptionMap::cElement *) enumerator_15682.nextObject ()))) {
      macroValidPointer (operand_15682) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppString (_inLexique, operand_15682->mInfo.mComment.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (324)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (",\n"
        "    ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("\"\"} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (328)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (328))) ;
  var_cas_generatedUserZone3.writeString (")) \? kDescriptionArray [inIndex] : \"\" ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    U I N T    O P T I O N    V A L U E    F R O M    K E Y S") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("uint32 ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::\n"
  "uintOptionValueFromKeys (const char * inModuleName,\n"
  "                         const char * inOptionName,\n"
  "                         bool * outFound) const {\n"
  "  static const char * kKeyArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (337))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (337)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (337))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_16533 (var_cas_inUIntOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_16533 = NULL ;
    while (((operand_16533 = (GGS_commandLineOptionMap::cElement *) enumerator_16533.nextObject ()))) {
      macroValidPointer (operand_16533) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppString (_inLexique, operand_16533->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (339)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (",\n"
        "    ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("\"\"} ;\n"
  "  uint32 result = 0 ;\n"
  "  bool found = strcmp (inModuleName, \"") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("\") == 0 ;\n"
  "  if (found) {\n"
  "    found = false ;\n"
  "    sint32 index = 0 ;\n"
  "    while ((index < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inUIntOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (348)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (348))) ;
  var_cas_generatedUserZone3.writeString (") && ! found) {\n"
  "      found = strcmp (inOptionName, kKeyArray [index]) == 0 ;\n"
  "      if (found) {\n"
  "        result = mUintOptionValues [index] ;\n"
  "      }\n"
  "      index ++ ;\n"
  "    }\n"
  "  }\n"
  "  if (outFound != NULL) {\n"
  "    * outFound = found ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    S T R I N G    O P T I O N S    C O U N T") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("sint32 ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::\n"
  "getStringOptionsCount (void) const {\n"
  "  return ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (366)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (366))) ;
  var_cas_generatedUserZone3.writeString (" ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    S T R I N G    O P T I O N S    V A L U E") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("C_String ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::\n"
  "getStringOptionValue (const sint32 inIndex) const {\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (373)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (373))) ;
  var_cas_generatedUserZone3.writeString (")) \? mStringOptionValues [inIndex] : C_String () ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "S E T    S T R I N G    O P T I O N S    V A L U E") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("void ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::\n"
  "setStringOptionValue (const sint32 inIndex, const C_String & inValue) {\n"
  "  if ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (380)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (380))) ;
  var_cas_generatedUserZone3.writeString (")) {\n"
  "     mStringOptionValues [inIndex] = inValue ;\n"
  "  }\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    S T R I N G    O P T I O N    C H A R") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("char ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::\n"
  "getStringOptionChar (const sint32 inIndex) const {\n"
  "  static const char kCharArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (390))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (390)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (390))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_18931 (var_cas_inStringOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_18931 = NULL ;
    while (((operand_18931 = (GGS_commandLineOptionMap::cElement *) enumerator_18931.nextObject ()))) {
      macroValidPointer (operand_18931) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppChar (_inLexique, operand_18931->mInfo.mOptionChar.reader_char (_inLexique COMMA_SOURCE_FILE_AT_LINE (392)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (", ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("'\\0'} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (396)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (396))) ;
  var_cas_generatedUserZone3.writeString (")) \? kCharArray [inIndex] : '\\0' ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    S T R I N G    O P T I O N    S T R I N G") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("const char * ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::\n"
  "getStringOptionString (const sint32 inIndex) const {\n"
  "  static const char * kStringArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (403))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (403)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (403))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_19638 (var_cas_inStringOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_19638 = NULL ;
    while (((operand_19638 = (GGS_commandLineOptionMap::cElement *) enumerator_19638.nextObject ()))) {
      macroValidPointer (operand_19638) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppString (_inLexique, operand_19638->mInfo.mOptionString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (405)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (",\n"
        "    ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("\"\"} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (409)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (409))) ;
  var_cas_generatedUserZone3.writeString (")) \? kStringArray [inIndex] : \"\" ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    S T R I N G    O P T I O N    D E S C R I P T I O N") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("const char * ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::\n"
  "getStringOptionDescription (const sint32 inIndex) const {\n"
  "  static const char * kDescriptionArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (416))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (416)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (416))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_20385 (var_cas_inStringOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_20385 = NULL ;
    while (((operand_20385 = (GGS_commandLineOptionMap::cElement *) enumerator_20385.nextObject ()))) {
      macroValidPointer (operand_20385) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppString (_inLexique, operand_20385->mInfo.mComment.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (418)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (",\n"
        "    ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("\"\"} ;\n"
  "  return ((inIndex >= 0) && (inIndex < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (422)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (422))) ;
  var_cas_generatedUserZone3.writeString (")) \? kDescriptionArray [inIndex] : \"\" ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "G E T    S T R I N G    O P T I O N    V A L U E   F R O M   K E Y S") COMMA_HERE)) ;
  var_cas_generatedUserZone3.writeString ("C_String ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("::\n"
  "stringOptionValueFromKeys (const char * inModuleName,\n"
  "                           const char * inOptionName,\n"
  "                           bool * outFound) const {\n"
  "  static const char * kKeyArray [") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (431))._add_operation (_inLexique, GGS_uint (true, 1U) COMMA_SOURCE_FILE_AT_LINE (431)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (431))) ;
  var_cas_generatedUserZone3.writeString ("] = {") ;
  {
    GGS_commandLineOptionMap::cEnumerator enumerator_21256 (var_cas_inStringOptionMap, true) ;
    const GGS_commandLineOptionMap::cElement * operand_21256 = NULL ;
    while (((operand_21256 = (GGS_commandLineOptionMap::cElement *) enumerator_21256.nextObject ()))) {
      macroValidPointer (operand_21256) ;
      var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppString (_inLexique, operand_21256->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (433)) COMMA_HERE)) ;
      var_cas_generatedUserZone3.writeString (",\n"
        "    ") ;
    }
  }
  var_cas_generatedUserZone3.writeString ("\"\"} ;\n"
  "  C_String result ;\n"
  "  bool found = strcmp (inModuleName, \"") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inOptionComponentName) ;
  var_cas_generatedUserZone3.writeString ("\") == 0 ;\n"
  "  if (found) {\n"
  "    found = false ;\n"
  "    sint32 index = 0 ;\n"
  "    while ((index < ") ;
  var_cas_generatedUserZone3._dotAssign_operation (var_cas_inStringOptionMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (442)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (442))) ;
  var_cas_generatedUserZone3.writeString (") && ! found) {\n"
  "      found = strcmp (inOptionName, kKeyArray [index]) == 0 ;\n"
  "      if (found) {\n"
  "        result = mStringOptionValues [index] ;\n"
  "      }\n"
  "      index ++ ;\n"
  "    }\n"
  "  }\n"
  "  if (outFound != NULL) {\n"
  "    * outFound = found ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
    "\n") ;
  var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
  GGS_string::class_method_generateFile (_inLexique, var_cas_inStartDirectory, (var_cas_inOptionComponentName)._operator_concat (GGS_string (true, ".cpp")), GGS_string (true, "//"), GGS_string (true, "\n"
    "\n"), var_cas_generatedUserZone2, GGS_string (true, "\n"
    "\n"), var_cas_generatedUserZone3 COMMA_SOURCE_FILE_AT_LINE (459)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_optionImplementationGeneration\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "compileOptionComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileOptionComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  var_cas_inOutputDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileOptionComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_optionComponentRoot  var_cas_optionComponentRoot ;
  optionLL1grammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile,
                                  var_cas_optionComponentRoot
                                  COMMA_SOURCE_FILE_AT_LINE (478)) ;
  GGS_lstring  var_cas_componentName ;
  var_cas_componentName = var_cas_optionComponentRoot.reader_mOptionComponentName (_inLexique COMMA_SOURCE_FILE_AT_LINE (480)) ;
  GGS_string var_cas_basename ;
  var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (481)).reader_stringByDeletingPathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (481)) ;
  if (((var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (482)))._operator_isNotEqual (var_cas_basename)).isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, ((((GGS_string (true, "GALGAS checks "
      "the component name ('"))._operator_concat (var_cas_componentName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (484))))._operator_concat (GGS_string (true, "') against the source file base name ('")))._operator_concat (var_cas_basename))._operator_concat (GGS_string (true, "'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (485)) ;
  }
  GGS_string var_cas_baseName ;
  var_cas_baseName = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (489)).reader_stringByDeletingPathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (489)) ;
  if (((var_cas_optionComponentRoot.reader_mOptionComponentName (_inLexique COMMA_SOURCE_FILE_AT_LINE (490)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (490)))._operator_isNotEqual (var_cas_baseName)).isBuiltAndTrue ()) {
    var_cas_optionComponentRoot.reader_mOptionComponentName (_inLexique COMMA_SOURCE_FILE_AT_LINE (491)).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the component name is '"))._operator_concat (var_cas_optionComponentRoot.reader_mOptionComponentName (_inLexique COMMA_SOURCE_FILE_AT_LINE (492))))._operator_concat (GGS_string (true, "' should be the file base name '")))._operator_concat (var_cas_baseName))._operator_concat (GGS_string (true, "'")) COMMA_SOURCE_FILE_AT_LINE (493)) ;
  }
  GGS_commandLineOptionMap  var_cas_boolOptionMap ;
  var_cas_boolOptionMap = GGS_commandLineOptionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_commandLineOptionMap  var_cas_uintOptionMap ;
  var_cas_uintOptionMap = GGS_commandLineOptionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_commandLineOptionMap  var_cas_stringOptionMap ;
  var_cas_stringOptionMap = GGS_commandLineOptionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_optionNameSet ;
  var_cas_optionNameSet = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  {
    GGS_commandLineOptionList::cEnumerator enumerator_23715 (var_cas_optionComponentRoot.reader_mOptions (_inLexique COMMA_SOURCE_FILE_AT_LINE (500)), true) ;
    const GGS_commandLineOptionList::cElement * operand_23715 = NULL ;
    while (((operand_23715 = (GGS_commandLineOptionList::cElement *) enumerator_23715.nextObject ()))) {
      macroValidPointer (operand_23715) ;
      if ((var_cas_optionNameSet.reader_hasKey (_inLexique, operand_23715->mOptionInternalName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (501)) COMMA_SOURCE_FILE_AT_LINE (501))).isBuiltAndTrue ()) {
        operand_23715->mOptionInternalName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((GGS_string (true, "the '"))._operator_concat (operand_23715->mOptionInternalName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (502))))._operator_concat (GGS_string (true, "' command line option has been already declared")) COMMA_SOURCE_FILE_AT_LINE (502)) ;
      }else if (((operand_23715->mOptionTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (503)))._operator_isEqual (GGS_string (true, "bool"))).isBuiltAndTrue ()) {
        var_cas_boolOptionMap.modifier_insertKey (_inLexique, operand_23715->mOptionInternalName, operand_23715->mOptionInvocationLetter, operand_23715->mOptionInvocationString, operand_23715->mOptionComment COMMA_SOURCE_FILE_AT_LINE (504)) ;
      }else if (((operand_23715->mOptionTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (510)))._operator_isEqual (GGS_string (true, "uint"))).isBuiltAndTrue ()) {
        var_cas_uintOptionMap.modifier_insertKey (_inLexique, operand_23715->mOptionInternalName, operand_23715->mOptionInvocationLetter, operand_23715->mOptionInvocationString, operand_23715->mOptionComment COMMA_SOURCE_FILE_AT_LINE (511)) ;
      }else if (((operand_23715->mOptionTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (517)))._operator_isEqual (GGS_string (true, "string"))).isBuiltAndTrue ()) {
        var_cas_stringOptionMap.modifier_insertKey (_inLexique, operand_23715->mOptionInternalName, operand_23715->mOptionInvocationLetter, operand_23715->mOptionInvocationString, operand_23715->mOptionComment COMMA_SOURCE_FILE_AT_LINE (518)) ;
      }else{
        operand_23715->mOptionTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "only the @bool, @uint or @string types are allowed here") COMMA_SOURCE_FILE_AT_LINE (525)) ;
      }
      var_cas_optionNameSet._addAssign_operation (operand_23715->mOptionInternalName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (527))) ;
    }
  }
  if (((GGS_uint ::constructor_errorCount (_inLexique COMMA_HERE))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    ::routine_optionHeaderGeneration (_inLexique,  var_cas_inOutputDirectory,  var_cas_optionComponentRoot.reader_mOptionComponentName (_inLexique COMMA_SOURCE_FILE_AT_LINE (533)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (533)),  var_cas_boolOptionMap,  var_cas_uintOptionMap,  var_cas_stringOptionMap COMMA_SOURCE_FILE_AT_LINE (530)) ;
  }
  if (((GGS_uint ::constructor_errorCount (_inLexique COMMA_HERE))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    ::routine_optionImplementationGeneration (_inLexique,  var_cas_inOutputDirectory,  var_cas_optionComponentRoot.reader_mOptionComponentName (_inLexique COMMA_SOURCE_FILE_AT_LINE (543)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (543)),  var_cas_boolOptionMap,  var_cas_uintOptionMap,  var_cas_stringOptionMap COMMA_SOURCE_FILE_AT_LINE (540)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileOptionComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*

