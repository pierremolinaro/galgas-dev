//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'semanticsTypes.h'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 7th, 2010, at 18h43'45"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsTypes_DEFINED
#define semanticsTypes_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "parameterArgumentMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ACGalgasType ;
class cPtr_ACGalgasType ;
class GGS_typeMap ;
class GGS_typeMapIndex ;
class GGS_sortedTypeList ;
class GGS_typeList ;
class GGS_signature ;
class GGS_attributeList ;
class GGS_primitiveGalgasType ;
class cPtr_primitiveGalgasType ;
class GGS_dataGalgasType ;
class cPtr_dataGalgasType ;
class GGS_typeGalgasType ;
class cPtr_typeGalgasType ;
class GGS_objectGalgasType ;
class cPtr_objectGalgasType ;
class GGS_functionGalgasType ;
class cPtr_functionGalgasType ;
class GGS_locationGalgasType ;
class cPtr_locationGalgasType ;
class GGS_stringGalgasType ;
class cPtr_stringGalgasType ;
class GGS_charGalgasType ;
class cPtr_charGalgasType ;
class GGS_boolGalgasType ;
class cPtr_boolGalgasType ;
class GGS_uintGalgasType ;
class cPtr_uintGalgasType ;
class GGS_sintGalgasType ;
class cPtr_sintGalgasType ;
class GGS_uint64GalgasType ;
class cPtr_uint64GalgasType ;
class GGS_sint64GalgasType ;
class cPtr_sint64GalgasType ;
class GGS_doubleGalgasType ;
class cPtr_doubleGalgasType ;
class GGS_lstringGalgasType ;
class cPtr_lstringGalgasType ;
class GGS_lcharGalgasType ;
class cPtr_lcharGalgasType ;
class GGS_lboolGalgasType ;
class cPtr_lboolGalgasType ;
class GGS_luintGalgasType ;
class cPtr_luintGalgasType ;
class GGS_lsintGalgasType ;
class cPtr_lsintGalgasType ;
class GGS_luint64GalgasType ;
class cPtr_luint64GalgasType ;
class GGS_lsint64GalgasType ;
class cPtr_lsint64GalgasType ;
class GGS_ldoubleGalgasType ;
class cPtr_ldoubleGalgasType ;
class GGS_stringsetGalgasType ;
class cPtr_stringsetGalgasType ;
class GGS_binarysetGalgasType ;
class cPtr_binarysetGalgasType ;
class GGS_classMethodList ;
class GGS_classGalgasType ;
class cPtr_classGalgasType ;
class GGS_listGalgasType ;
class cPtr_listGalgasType ;
class GGS_listmapGalgasType ;
class cPtr_listmapGalgasType ;
class GGS_structGalgasType ;
class cPtr_structGalgasType ;
class GGS_indexAttributeMap ;
class GGS_sortDescriptorList ;
class GGS_sortedlistGalgasType ;
class cPtr_sortedlistGalgasType ;
class GGS_mapMethodMap ;
class GGS_mapType ;
class cPtr_mapType ;
class GGS_mapindexType ;
class cPtr_mapindexType ;
class GGS_enumConstructorMap ;
class GGS_enumMessageMap ;
class GGS_enumType ;
class cPtr_enumType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_ACGalgasType'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ACGalgasType ;

//---------------------------------------------------------------------------*

class GGS_ACGalgasType : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_ACGalgasType (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_ACGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ACGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ACGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ACGalgasType * getPtr (void) const {
    return (cPtr_ACGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ACGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ACGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_ACGalgasType *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ACGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__ACGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                              Map '@typeMap'                               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeMap ;

//---------------------------------------------------------------------------*

class GGS_typeMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_typeMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_typeMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_typeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_typeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_typeMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_ACGalgasType &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_ACGalgasType   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_ACGalgasType & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_ACGalgasType & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_typeMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_typeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_typeMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_typeMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_typeMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_ACGalgasType   & _mType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map index '@typeMapIndex'                          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeMapIndex ;

//---------------------------------------------------------------------------*

class GGS_typeMapIndex : public AC_galgas_mapindex {
//--- 'null' constructor
  public : static GGS_typeMapIndex
  constructor_null (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS) ;

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_typeMapIndex & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeMapIndex & inOperand) const ;

//--- 'description' reader declaration
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeMapIndex castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Type Method 'makeRegularIndex'
  public : static void
  class_method_makeRegularIndex (C_Compiler & inLexique,
                                 const GGS_lstring & inKey,
                                 GGS_typeMap & ioMap,
                                 GGS_typeMapIndex & outIndex
                                 COMMA_LOCATION_ARGS) ;

//--- Method Access
  public : inline const GGS_typeMapIndex *
  operator () (UNUSED_LOCATION_ARGS) const {
    return this ;
  }

//--- Search method(s)
  public : static const utf32 kMapIndexSearchMessage_searchKey [] ;

  public : void
  method_searchKey (C_Compiler & inLexique,
                     GGS_lstring & outKey,
                     GGS_ACGalgasType & outAttribute1
                     COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      sorted list '@sortedTypeList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_sortedTypeList ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sortedTypeList ;

//---------------------------------------------------------------------------*


class GGS_sortedTypeList : public AC_galgas_sortedlist {
  public : typedef elementOf_GGS_sortedTypeList cElement ;
//--- Default Constructor
  public : GGS_sortedTypeList (void) ;
//--- Copy Constructor
  public : GGS_sortedTypeList (const GGS_sortedTypeList & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_sortedTypeList & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_sortedTypeList & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_sortedTypeList constructor_emptySortedList (void) ;
  public : static GGS_sortedTypeList constructor_sortedListWithValue (const GGS_ACGalgasType & argument_0,
                           const GGS_string& argument_1) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_sortedTypeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_Compiler & inLexique,
                              GGS_ACGalgasType & _out_0,
                              GGS_string& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_Compiler & inLexique,
                             GGS_ACGalgasType & _out_0,
                             GGS_string& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_Compiler & inLexique,
                                GGS_ACGalgasType & _out_0,
                                GGS_string& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_Compiler & inLexique,
                                 GGS_ACGalgasType & _out_0,
                                 GGS_string& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_sortedTypeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_ACGalgasType & argument_0,
                                const GGS_string& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_sortedTypeList operator_concat (const GGS_sortedTypeList & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_ACGalgasType & argument_0,
                                const GGS_string& argument_1) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sortedTypeList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_sortedTypeList & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_ACGalgasType  & _mType (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mSortString (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             list '@typeList'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeList ;

//---------------------------------------------------------------------------*

class GGS_typeList : public AC_galgas_list {
  public : typedef elementOf_GGS_typeList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typeList constructor_emptyList (void) ;
  public : static GGS_typeList constructor_listWithValue (const GGS_ACGalgasType & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typeList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typeList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typeList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_ACGalgasType & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_ACGalgasType & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_ACGalgasType & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_ACGalgasType & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_ACGalgasType & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_typeList operator_concat (const GGS_typeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_ACGalgasType & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_ACGalgasType & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_ACGalgasType & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_ACGalgasType 
  reader_mTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_Compiler & inLexique,
                              const GGS_ACGalgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typeList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_ACGalgasType   & _mType (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            list '@signature'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_signature ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_signature ;

//---------------------------------------------------------------------------*

class GGS_signature : public AC_galgas_list {
  public : typedef elementOf_GGS_signature cElement ;

//--- Constructor 'emptyList'
  public : static GGS_signature constructor_emptyList (void) ;
  public : static GGS_signature constructor_listWithValue (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_signature & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_signature
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_signature
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_signature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_typeMapIndex & _out_0,
                              GGS_lstring & _out_1,
                              GGS_formalArgumentPassingMode& _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_typeMapIndex & _out_0,
                             GGS_lstring & _out_1,
                             GGS_formalArgumentPassingMode& _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_typeMapIndex & _out_0,
                                GGS_lstring & _out_1,
                                GGS_formalArgumentPassingMode& _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_typeMapIndex & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_formalArgumentPassingMode& _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_signature inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_signature operator_concat (const GGS_signature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalArgumentPassingMode& argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeMapIndex 
  reader_mAttributeTypeIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mFormalArgumentNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalArgumentPassingMode
  reader_mFormalArgumentPassingModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAttributeTypeIndexAtIndex (C_Compiler & inLexique,
                              const GGS_typeMapIndex  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalArgumentNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalArgumentPassingModeAtIndex (C_Compiler & inLexique,
                              const GGS_formalArgumentPassingMode & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_signature castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_signature & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeMapIndex   & _mAttributeTypeIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mFormalArgumentName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalArgumentPassingMode  & _mFormalArgumentPassingMode (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@attributeList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_attributeList ;

//---------------------------------------------------------------------------*

class GGS_attributeList : public AC_galgas_list {
  public : typedef elementOf_GGS_attributeList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_attributeList constructor_emptyList (void) ;
  public : static GGS_attributeList constructor_listWithValue (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_attributeList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_attributeList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_attributeList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_attributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_typeMapIndex & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_typeMapIndex & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_typeMapIndex & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_typeMapIndex & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_attributeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_attributeList operator_concat (const GGS_attributeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeMapIndex 
  reader_mAttributeTypeIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAttributeTypeIndexAtIndex (C_Compiler & inLexique,
                              const GGS_typeMapIndex  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_attributeList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_attributeList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeMapIndex   & _mAttributeTypeIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mAttributeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_primitiveGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_primitiveGalgasType ;

//---------------------------------------------------------------------------*

class GGS_primitiveGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_primitiveGalgasType (void) :
  GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_primitiveGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_primitiveGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_primitiveGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_primitiveGalgasType * getPtr (void) const {
    return (cPtr_primitiveGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_primitiveGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_primitiveGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_primitiveGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_primitiveGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__primitiveGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_dataGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_dataGalgasType ;

//---------------------------------------------------------------------------*

class GGS_dataGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_dataGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_dataGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_dataGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_dataGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_dataGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_dataGalgasType * getPtr (void) const {
    return (cPtr_dataGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_dataGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_dataGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_dataGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_dataGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__dataGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_typeGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeGalgasType ;

//---------------------------------------------------------------------------*

class GGS_typeGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_typeGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_typeGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typeGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typeGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typeGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typeGalgasType * getPtr (void) const {
    return (cPtr_typeGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typeGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typeGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_typeGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typeGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_objectGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_objectGalgasType ;

//---------------------------------------------------------------------------*

class GGS_objectGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_objectGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_objectGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_objectGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_objectGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_objectGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_objectGalgasType * getPtr (void) const {
    return (cPtr_objectGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_objectGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_objectGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_objectGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_objectGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__objectGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_functionGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_functionGalgasType ;

//---------------------------------------------------------------------------*

class GGS_functionGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_functionGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_functionGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_functionGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_functionGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_functionGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_functionGalgasType * getPtr (void) const {
    return (cPtr_functionGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_functionGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_functionGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_functionGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_functionGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__functionGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_locationGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_locationGalgasType ;

//---------------------------------------------------------------------------*

class GGS_locationGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_locationGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_locationGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_locationGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_locationGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_locationGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_locationGalgasType * getPtr (void) const {
    return (cPtr_locationGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_locationGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_locationGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_locationGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_locationGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__locationGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_stringGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_stringGalgasType ;

//---------------------------------------------------------------------------*

class GGS_stringGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_stringGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_stringGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_stringGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_stringGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_stringGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_stringGalgasType * getPtr (void) const {
    return (cPtr_stringGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_stringGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_stringGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_stringGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_stringGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__stringGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_charGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_charGalgasType ;

//---------------------------------------------------------------------------*

class GGS_charGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_charGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_charGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_charGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_charGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_charGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_charGalgasType * getPtr (void) const {
    return (cPtr_charGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_charGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_charGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_charGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_charGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__charGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_boolGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_boolGalgasType ;

//---------------------------------------------------------------------------*

class GGS_boolGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_boolGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_boolGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_boolGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_boolGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_boolGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_boolGalgasType * getPtr (void) const {
    return (cPtr_boolGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_boolGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_boolGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_boolGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_boolGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__boolGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_uintGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uintGalgasType ;

//---------------------------------------------------------------------------*

class GGS_uintGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_uintGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_uintGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uintGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uintGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uintGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uintGalgasType * getPtr (void) const {
    return (cPtr_uintGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uintGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uintGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_uintGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uintGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uintGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_sintGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sintGalgasType ;

//---------------------------------------------------------------------------*

class GGS_sintGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_sintGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_sintGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sintGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sintGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sintGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sintGalgasType * getPtr (void) const {
    return (cPtr_sintGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sintGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sintGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_sintGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sintGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sintGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_uint64GalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint64GalgasType ;

//---------------------------------------------------------------------------*

class GGS_uint64GalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_uint64GalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_uint64GalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint64GalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint64GalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint64GalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64GalgasType * getPtr (void) const {
    return (cPtr_uint64GalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64GalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64GalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64GalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint64GalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint64GalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_sint64GalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint64GalgasType ;

//---------------------------------------------------------------------------*

class GGS_sint64GalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_sint64GalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_sint64GalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint64GalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint64GalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint64GalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64GalgasType * getPtr (void) const {
    return (cPtr_sint64GalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64GalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64GalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64GalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint64GalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint64GalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_doubleGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_doubleGalgasType ;

//---------------------------------------------------------------------------*

class GGS_doubleGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_doubleGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_doubleGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_doubleGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_doubleGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_doubleGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_doubleGalgasType * getPtr (void) const {
    return (cPtr_doubleGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_doubleGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_doubleGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_doubleGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_doubleGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__doubleGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_lstringGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lstringGalgasType ;

//---------------------------------------------------------------------------*

class GGS_lstringGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_lstringGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lstringGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lstringGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lstringGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lstringGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lstringGalgasType * getPtr (void) const {
    return (cPtr_lstringGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lstringGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lstringGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lstringGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lstringGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lstringGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_lcharGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lcharGalgasType ;

//---------------------------------------------------------------------------*

class GGS_lcharGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_lcharGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lcharGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lcharGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lcharGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lcharGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lcharGalgasType * getPtr (void) const {
    return (cPtr_lcharGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lcharGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lcharGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lcharGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lcharGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lcharGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_lboolGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lboolGalgasType ;

//---------------------------------------------------------------------------*

class GGS_lboolGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_lboolGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lboolGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lboolGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lboolGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lboolGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lboolGalgasType * getPtr (void) const {
    return (cPtr_lboolGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lboolGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lboolGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lboolGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lboolGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lboolGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_luintGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_luintGalgasType ;

//---------------------------------------------------------------------------*

class GGS_luintGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_luintGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_luintGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_luintGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_luintGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_luintGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_luintGalgasType * getPtr (void) const {
    return (cPtr_luintGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_luintGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_luintGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_luintGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_luintGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__luintGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_lsintGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lsintGalgasType ;

//---------------------------------------------------------------------------*

class GGS_lsintGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_lsintGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lsintGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lsintGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lsintGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lsintGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lsintGalgasType * getPtr (void) const {
    return (cPtr_lsintGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lsintGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lsintGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lsintGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lsintGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lsintGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_luint64GalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_luint64GalgasType ;

//---------------------------------------------------------------------------*

class GGS_luint64GalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_luint64GalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_luint64GalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_luint64GalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_luint64GalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_luint64GalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_luint64GalgasType * getPtr (void) const {
    return (cPtr_luint64GalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_luint64GalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_luint64GalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_luint64GalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_luint64GalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__luint64GalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_lsint64GalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lsint64GalgasType ;

//---------------------------------------------------------------------------*

class GGS_lsint64GalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_lsint64GalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_lsint64GalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lsint64GalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lsint64GalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lsint64GalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lsint64GalgasType * getPtr (void) const {
    return (cPtr_lsint64GalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lsint64GalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lsint64GalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_lsint64GalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lsint64GalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lsint64GalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_ldoubleGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ldoubleGalgasType ;

//---------------------------------------------------------------------------*

class GGS_ldoubleGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_ldoubleGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_ldoubleGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ldoubleGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ldoubleGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ldoubleGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ldoubleGalgasType * getPtr (void) const {
    return (cPtr_ldoubleGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ldoubleGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ldoubleGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_ldoubleGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ldoubleGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ldoubleGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_stringsetGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_stringsetGalgasType ;

//---------------------------------------------------------------------------*

class GGS_stringsetGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_stringsetGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_stringsetGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_stringsetGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_stringsetGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_stringsetGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_stringsetGalgasType * getPtr (void) const {
    return (cPtr_stringsetGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_stringsetGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_stringsetGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_stringsetGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_stringsetGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__stringsetGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_binarysetGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_binarysetGalgasType ;

//---------------------------------------------------------------------------*

class GGS_binarysetGalgasType : public GGS_primitiveGalgasType {
//--- Default constructor
  public : inline GGS_binarysetGalgasType (void) :
  GGS_primitiveGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_binarysetGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_binarysetGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_binarysetGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_binarysetGalgasType constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_binarysetGalgasType * getPtr (void) const {
    return (cPtr_binarysetGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_binarysetGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_binarysetGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_binarysetGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_binarysetGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__binarysetGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@classMethodList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMethodList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classMethodList ;

//---------------------------------------------------------------------------*

class GGS_classMethodList : public AC_galgas_list {
  public : typedef elementOf_GGS_classMethodList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_classMethodList constructor_emptyList (void) ;
  public : static GGS_classMethodList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_signature & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_classMethodList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_classMethodList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_classMethodList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_classMethodList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_signature & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_signature & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_signature & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_signature & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_classMethodList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_signature & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_classMethodList operator_concat (const GGS_classMethodList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_signature & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_signature & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_signature & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_signature 
  reader_mMethodSignatureAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMMethodSignatureAtIndex (C_Compiler & inLexique,
                              const GGS_signature  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classMethodList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_classMethodList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_signature   & _mMethodSignature (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_classGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classGalgasType ;

//---------------------------------------------------------------------------*

class GGS_classGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_classGalgasType (void) :
  GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_classGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_classGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_classGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_classGalgasType constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_typeMapIndex & argument_2,
                                const GGS_attributeList & argument_3,
                                const GGS_classMethodList & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_classGalgasType * getPtr (void) const {
    return (cPtr_classGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeMapIndex  reader_mSuperClassIndex (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_classGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__classGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_listGalgasType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_listGalgasType ;

//---------------------------------------------------------------------------*

class GGS_listGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_listGalgasType (void) :
  GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_listGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_listGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_listGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_listGalgasType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_listGalgasType * getPtr (void) const {
    return (cPtr_listGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_listGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_listGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__listGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_listmapGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_listmapGalgasType ;

//---------------------------------------------------------------------------*

class GGS_listmapGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_listmapGalgasType (void) :
  GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_listmapGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_listmapGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_listmapGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_listmapGalgasType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeMapIndex & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_listmapGalgasType * getPtr (void) const {
    return (cPtr_listmapGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listmapGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listmapGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_listmapGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_listmapGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__listmapGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_structGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_structGalgasType ;

//---------------------------------------------------------------------------*

class GGS_structGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_structGalgasType (void) :
  GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_structGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_structGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_structGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_structGalgasType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_structGalgasType * getPtr (void) const {
    return (cPtr_structGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_structGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_structGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_structGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_structGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__structGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@indexAttributeMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_indexAttributeMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_indexAttributeMap ;

//---------------------------------------------------------------------------*

class GGS_indexAttributeMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_indexAttributeMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_indexAttributeMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_indexAttributeMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_indexAttributeMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_indexAttributeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_indexAttributeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_indexAttributeMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_uint & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_indexAttributeMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_indexAttributeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_indexAttributeMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_indexAttributeMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_indexAttributeMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mAttributeIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@sortDescriptorList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_sortDescriptorList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sortDescriptorList ;

//---------------------------------------------------------------------------*

class GGS_sortDescriptorList : public AC_galgas_list {
  public : typedef elementOf_GGS_sortDescriptorList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_sortDescriptorList constructor_emptyList (void) ;
  public : static GGS_sortDescriptorList constructor_listWithValue (const GGS_uint & argument_0,
                                const GGS_bool& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_sortDescriptorList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_sortDescriptorList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_sortDescriptorList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_sortDescriptorList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_uint & _out_0,
                              GGS_bool& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_uint & _out_0,
                             GGS_bool& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_uint & _out_0,
                                GGS_bool& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_bool& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_sortDescriptorList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_bool& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_sortDescriptorList operator_concat (const GGS_sortDescriptorList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_uint & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_uint & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uint 
  reader_mAttributeIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mAscendingOrderAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAttributeIndexAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAscendingOrderAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sortDescriptorList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_sortDescriptorList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _mAttributeIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mAscendingOrder (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_sortedlistGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sortedlistGalgasType ;

//---------------------------------------------------------------------------*

class GGS_sortedlistGalgasType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_sortedlistGalgasType (void) :
  GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_sortedlistGalgasType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sortedlistGalgasType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sortedlistGalgasType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sortedlistGalgasType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeList & argument_1,
                                const GGS_sortDescriptorList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sortedlistGalgasType * getPtr (void) const {
    return (cPtr_sortedlistGalgasType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_sortDescriptorList  reader_mSortDescriptorList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sortedlistGalgasType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sortedlistGalgasType * operator () (LOCATION_ARGS) const {
      return (cPtr_sortedlistGalgasType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sortedlistGalgasType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sortedlistGalgasType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@mapMethodMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapMethodMap ;

//---------------------------------------------------------------------------*

class GGS_mapMethodMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_mapMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_mapMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_mapMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapMethodMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_mapMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_mapMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_mapMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_mapMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_mapMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_mapMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_mapMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_mapMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMessage (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        GALGAS class 'GGS_mapType'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapType ;

//---------------------------------------------------------------------------*

class GGS_mapType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_mapType (void) :
  GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_mapType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_mapType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_mapType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_mapType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeList & argument_1,
                                const GGS_mapMethodMap & argument_2,
                                const GGS_mapMethodMap & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_mapType * getPtr (void) const {
    return (cPtr_mapType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapType * operator () (LOCATION_ARGS) const {
      return (cPtr_mapType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__mapType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_mapindexType'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapindexType ;

//---------------------------------------------------------------------------*

class GGS_mapindexType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_mapindexType (void) :
  GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_mapindexType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_mapindexType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_mapindexType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_mapindexType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_typeMapIndex & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_mapindexType * getPtr (void) const {
    return (cPtr_mapindexType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapindexType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapindexType * operator () (LOCATION_ARGS) const {
      return (cPtr_mapindexType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapindexType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__mapindexType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Map '@enumConstructorMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstructorMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumConstructorMap ;

//---------------------------------------------------------------------------*

class GGS_enumConstructorMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumConstructorMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_enumConstructorMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_enumConstructorMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumConstructorMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumConstructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumConstructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumConstructorMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_enumConstructorMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumConstructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumConstructorMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumConstructorMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumConstructorMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@enumMessageMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumMessageMap ;

//---------------------------------------------------------------------------*

class GGS_enumMessageMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_enumMessageMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_enumMessageMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_enumMessageMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumMessageMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_enumMessageMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_enumMessageMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_enumMessageMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_enumMessageMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_enumMessageMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_enumMessageMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_enumMessageMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_enumMessageMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_enumType'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumType ;

//---------------------------------------------------------------------------*

class GGS_enumType : public GGS_ACGalgasType {
//--- Default constructor
  public : inline GGS_enumType (void) :
  GGS_ACGalgasType () {}

//--- Pointer assignment constructor
  public : GGS_enumType (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_enumType (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_enumType
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_enumType constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumConstructorMap & argument_1,
                                const GGS_enumMessageMap & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_enumType * getPtr (void) const {
    return (cPtr_enumType *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumType * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumType * operator () (LOCATION_ARGS) const {
      return (cPtr_enumType *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumType castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__enumType ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'addTypeList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addTypeList (C_Compiler &,
                                const GGS_string ,
                                GGS_typeMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Once function 'constructPrimitiveTypeMap'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_constructPrimitiveTypeMap ;

//---------------------------------------------------------------------------*

GGS_typeMap  function_constructPrimitiveTypeMap (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Once function 'constructBuiltinTypeMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_constructBuiltinTypeMap ;

//---------------------------------------------------------------------------*

GGS_typeMap  function_constructBuiltinTypeMap (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'build_lstringlist_type'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_build_lstringlist_type ;

//---------------------------------------------------------------------------*

GGS_ACGalgasType  function_build_lstringlist_type (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'build_stringlist_type'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_build_stringlist_type ;

//---------------------------------------------------------------------------*

GGS_ACGalgasType  function_build_stringlist_type (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'build_uint64list_type'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_build_uint64list_type ;

//---------------------------------------------------------------------------*

GGS_ACGalgasType  function_build_uint64list_type (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Once function 'build_typelist_type'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_build_typelist_type ;

//---------------------------------------------------------------------------*

GGS_ACGalgasType  function_build_typelist_type (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'build_objectlist_type'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_build_objectlist_type ;

//---------------------------------------------------------------------------*

GGS_ACGalgasType  function_build_objectlist_type (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Once function 'build_functionlist_type'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_build_functionlist_type ;

//---------------------------------------------------------------------------*

GGS_ACGalgasType  function_build_functionlist_type (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_ACGalgasType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ACGalgasType : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_ACGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Method 'checkTypeCrossReferences'
  public : virtual void method_checkTypeCrossReferences (C_Compiler &,
                                GGS_uint  
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Element of map '@typeMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class e_typeMap {
  public : GGS_ACGalgasType  mType ;

  public : e_typeMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_typeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_typeMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_typeMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_typeMap * nextObject (void) const { return (elementOf_GGS_typeMap *) mNextItem ; }
  public : inline elementOf_GGS_typeMap * infObject (void) const { return (elementOf_GGS_typeMap *) mInfPtr ; }
  public : inline elementOf_GGS_typeMap * supObject (void) const { return (elementOf_GGS_typeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_typeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of sorted list '@sortedTypeList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_sortedTypeList : public AC_galgas_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_ACGalgasType  mType ;
  public : GGS_string mSortString ;
//--- Constructor
  public : elementOf_GGS_sortedTypeList (const GGS_ACGalgasType & ,
                                const GGS_string& ) ;

//--- Access to next
  public : inline elementOf_GGS_sortedTypeList * nextObject (void) const { return (elementOf_GGS_sortedTypeList *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_sortedTypeList * previousObject (void) const { return (elementOf_GGS_sortedTypeList *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_sortedTypeList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of list '@typeList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typeList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_ACGalgasType  mType ;
//--- Constructor
  public : elementOf_GGS_typeList (const GGS_ACGalgasType & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typeList * nextObject (void) const { return (elementOf_GGS_typeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typeList * previousObject (void) const { return (elementOf_GGS_typeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typeList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of list '@signature'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_signature : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_typeMapIndex  mAttributeTypeIndex ;
  public : GGS_lstring  mFormalArgumentName ;
  public : GGS_formalArgumentPassingMode mFormalArgumentPassingMode ;
//--- Constructor
  public : elementOf_GGS_signature (const GGS_typeMapIndex & ,
                                const GGS_lstring & ,
                                const GGS_formalArgumentPassingMode& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_signature * nextObject (void) const { return (elementOf_GGS_signature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_signature * previousObject (void) const { return (elementOf_GGS_signature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_signature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@attributeList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_typeMapIndex  mAttributeTypeIndex ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : elementOf_GGS_attributeList (const GGS_typeMapIndex & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_attributeList * nextObject (void) const { return (elementOf_GGS_attributeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_attributeList * previousObject (void) const { return (elementOf_GGS_attributeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_attributeList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_primitiveGalgasType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_primitiveGalgasType : public cPtr_ACGalgasType {
  private : typedef cPtr_ACGalgasType inherited ;
//--- Constructor
  public : cPtr_primitiveGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_dataGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_dataGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_dataGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_typeGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_typeGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_objectGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_objectGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_objectGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_functionGalgasType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_functionGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_functionGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_locationGalgasType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_locationGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_locationGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_stringGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_stringGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_stringGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_charGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_charGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_charGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_boolGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_boolGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_boolGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_uintGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uintGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_uintGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_sintGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sintGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_sintGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_uint64GalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint64GalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_uint64GalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_sint64GalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint64GalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_sint64GalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_doubleGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_doubleGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_doubleGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_lstringGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lstringGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_lstringGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_lcharGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lcharGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_lcharGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_lboolGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lboolGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_lboolGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_luintGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_luintGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_luintGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_lsintGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lsintGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_lsintGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_luint64GalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_luint64GalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_luint64GalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_lsint64GalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lsint64GalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_lsint64GalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_ldoubleGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ldoubleGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_ldoubleGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_stringsetGalgasType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_stringsetGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_stringsetGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_binarysetGalgasType'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_binarysetGalgasType : public cPtr_primitiveGalgasType {
  private : typedef cPtr_primitiveGalgasType inherited ;
//--- Constructor
  public : cPtr_binarysetGalgasType (LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@classMethodList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMethodList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_signature  mMethodSignature ;
//--- Constructor
  public : elementOf_GGS_classMethodList (const GGS_lstring & ,
                                const GGS_signature & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_classMethodList * nextObject (void) const { return (elementOf_GGS_classMethodList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_classMethodList * previousObject (void) const { return (elementOf_GGS_classMethodList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_classMethodList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_classGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classGalgasType : public cPtr_ACGalgasType {
  private : typedef cPtr_ACGalgasType inherited ;
//--- Constructor
  public : cPtr_classGalgasType (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_typeMapIndex & ,
                                const GGS_attributeList & ,
                                const GGS_classMethodList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_bool mIsAbstract ;
  public : GGS_lstring  mClassName ;
  public : GGS_typeMapIndex  mSuperClassIndex ;
  public : GGS_attributeList  mAttributeList ;
  public : GGS_classMethodList  mMethodList ;
//--- Method 'checkTypeCrossReferences'
  public : virtual void method_checkTypeCrossReferences (C_Compiler &,
                                GGS_uint  
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_listGalgasType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_listGalgasType : public cPtr_ACGalgasType {
  private : typedef cPtr_ACGalgasType inherited ;
//--- Constructor
  public : cPtr_listGalgasType (const GGS_lstring & ,
                                const GGS_attributeList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mListTypeName ;
  public : GGS_attributeList  mAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_listmapGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_listmapGalgasType : public cPtr_ACGalgasType {
  private : typedef cPtr_ACGalgasType inherited ;
//--- Constructor
  public : cPtr_listmapGalgasType (const GGS_lstring & ,
                                const GGS_typeMapIndex & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mListmapTypeName ;
  public : GGS_typeMapIndex  mAssociatedListTypeIndex ;
//--- Method 'checkTypeCrossReferences'
  public : virtual void method_checkTypeCrossReferences (C_Compiler &,
                                GGS_uint  
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_structGalgasType'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_structGalgasType : public cPtr_ACGalgasType {
  private : typedef cPtr_ACGalgasType inherited ;
//--- Constructor
  public : cPtr_structGalgasType (const GGS_lstring & ,
                                const GGS_attributeList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mStructTypeName ;
  public : GGS_attributeList  mAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@indexAttributeMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_indexAttributeMap {
  public : GGS_uint  mAttributeIndex ;

  public : e_indexAttributeMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_indexAttributeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_indexAttributeMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_indexAttributeMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_indexAttributeMap * nextObject (void) const { return (elementOf_GGS_indexAttributeMap *) mNextItem ; }
  public : inline elementOf_GGS_indexAttributeMap * infObject (void) const { return (elementOf_GGS_indexAttributeMap *) mInfPtr ; }
  public : inline elementOf_GGS_indexAttributeMap * supObject (void) const { return (elementOf_GGS_indexAttributeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_indexAttributeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@sortDescriptorList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_sortDescriptorList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_uint  mAttributeIndex ;
  public : GGS_bool mAscendingOrder ;
//--- Constructor
  public : elementOf_GGS_sortDescriptorList (const GGS_uint & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_sortDescriptorList * nextObject (void) const { return (elementOf_GGS_sortDescriptorList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_sortDescriptorList * previousObject (void) const { return (elementOf_GGS_sortDescriptorList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_sortDescriptorList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_sortedlistGalgasType'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sortedlistGalgasType : public cPtr_ACGalgasType {
  private : typedef cPtr_ACGalgasType inherited ;
//--- Constructor
  public : cPtr_sortedlistGalgasType (const GGS_lstring & ,
                                const GGS_attributeList & ,
                                const GGS_sortDescriptorList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mListTypeName ;
  public : GGS_attributeList  mAttributeList ;
  public : GGS_sortDescriptorList  mSortDescriptorList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@mapMethodMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_mapMethodMap {
  public : GGS_lstring  mMessage ;

  public : e_mapMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_mapMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_mapMethodMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_mapMethodMap * nextObject (void) const { return (elementOf_GGS_mapMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_mapMethodMap * infObject (void) const { return (elementOf_GGS_mapMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_mapMethodMap * supObject (void) const { return (elementOf_GGS_mapMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_mapMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      abstract class 'cPtr_mapType'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapType : public cPtr_ACGalgasType {
  private : typedef cPtr_ACGalgasType inherited ;
//--- Constructor
  public : cPtr_mapType (const GGS_lstring & ,
                                const GGS_attributeList & ,
                                const GGS_mapMethodMap & ,
                                const GGS_mapMethodMap & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mMapTypeName ;
  public : GGS_attributeList  mAttributeList ;
  public : GGS_mapMethodMap  mInsertMethodMap ;
  public : GGS_mapMethodMap  mRemoveMethodMap ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_mapindexType'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapindexType : public cPtr_ACGalgasType {
  private : typedef cPtr_ACGalgasType inherited ;
//--- Constructor
  public : cPtr_mapindexType (const GGS_lstring & ,
                                const GGS_typeMapIndex & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mMapIndexTypeName ;
  public : GGS_typeMapIndex  mIndexOfMapType ;
  public : GGS_lstring  mSearchMethodName ;
//--- Method 'checkTypeCrossReferences'
  public : virtual void method_checkTypeCrossReferences (C_Compiler &,
                                GGS_uint  
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@enumConstructorMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumConstructorMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumConstructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumConstructorMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_enumConstructorMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumConstructorMap * nextObject (void) const { return (elementOf_GGS_enumConstructorMap *) mNextItem ; }
  public : inline elementOf_GGS_enumConstructorMap * infObject (void) const { return (elementOf_GGS_enumConstructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumConstructorMap * supObject (void) const { return (elementOf_GGS_enumConstructorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumConstructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@enumMessageMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_enumMessageMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_enumMessageMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_enumMessageMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_enumMessageMap * nextObject (void) const { return (elementOf_GGS_enumMessageMap *) mNextItem ; }
  public : inline elementOf_GGS_enumMessageMap * infObject (void) const { return (elementOf_GGS_enumMessageMap *) mInfPtr ; }
  public : inline elementOf_GGS_enumMessageMap * supObject (void) const { return (elementOf_GGS_enumMessageMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_enumMessageMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      abstract class 'cPtr_enumType'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_enumType : public cPtr_ACGalgasType {
  private : typedef cPtr_ACGalgasType inherited ;
//--- Constructor
  public : cPtr_enumType (const GGS_lstring & ,
                                const GGS_enumConstructorMap & ,
                                const GGS_enumMessageMap & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mEnumTypeName ;
  public : GGS_enumConstructorMap  mEnumConstructorMap ;
  public : GGS_enumMessageMap  mEnumMessageMap ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

#endif
