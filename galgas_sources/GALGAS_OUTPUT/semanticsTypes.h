//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'semanticsTypes.h'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 12th, 2010, at 16h49'36"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsTypes_DEFINED
#define semanticsTypes_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "semanticsTypesForAST.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_unifiedTypeMapIndexList ;
class GGS_constructorMap ;
class GGS_readerQualifier ;
class GGS_readerMap ;
class GGS_formalParameterSignature ;
class GGS_modifierMap ;
class GGS_instanceMethodMap ;
class GGS_classMethodMap ;
class GGS_enumerationDescriptorList ;
class GGS_typedAttributeList ;
class GGS_typeKindEnum ;
class GGS_unifiedTypeMap ;
class GGS_unifiedTypeMapIndex ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@unifiedTypeMapIndexList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_unifiedTypeMapIndexList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_unifiedTypeMapIndexList ;

//---------------------------------------------------------------------------*

class GGS_unifiedTypeMapIndexList : public AC_GGS_list {
  public : typedef elementOf_GGS_unifiedTypeMapIndexList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_unifiedTypeMapIndexList constructor_emptyList (void) ;
  public : static GGS_unifiedTypeMapIndexList constructor_listWithValue (const GGS_unifiedTypeMapIndex & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_unifiedTypeMapIndexList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_unifiedTypeMapIndexList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_unifiedTypeMapIndexList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_unifiedTypeMapIndexList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_unifiedTypeMapIndex & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_unifiedTypeMapIndex & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_unifiedTypeMapIndex & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_unifiedTypeMapIndex & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_unifiedTypeMapIndexList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_unifiedTypeMapIndex & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_unifiedTypeMapIndexList operator_concat (const GGS_unifiedTypeMapIndexList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_unifiedTypeMapIndex & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_unifiedTypeMapIndex & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_unifiedTypeMapIndex & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_unifiedTypeMapIndex 
  reader_mTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_Compiler & inLexique,
                              const GGS_unifiedTypeMapIndex  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_unifiedTypeMapIndexList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_unifiedTypeMapIndexList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapIndex   & _mType (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@constructorMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_constructorMap ;

//---------------------------------------------------------------------------*

class GGS_constructorMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_constructorMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_constructorMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_constructorMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_constructorMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_constructorMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapIndexList &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_unifiedTypeMapIndex &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapIndexList   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_unifiedTypeMapIndex   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapIndexList & inParameter0,
                                   const GGS_bool& inParameter1,
                                   const GGS_unifiedTypeMapIndex & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapIndexList & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_unifiedTypeMapIndex & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_constructorMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_constructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_constructorMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_constructorMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_constructorMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapIndexList   & _mArgumentTypeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasLexique (LOCATION_ARGS) const ;
    public : /* const */ GGS_unifiedTypeMapIndex   & _mReturnedType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Class for 'readerQualifier' Enumeration                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_readerQualifier ;

//---------------------------------------------------------------------------*

class GGS_readerQualifier : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_isAbstract, enum_isBasic, enum_isInherited, enum_isOverriding} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_readerQualifier (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_readerQualifier (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 3 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_readerQualifier castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_readerQualifier  constructor_isAbstract (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_readerQualifier (enum_isAbstract) ;
  }
  public : static inline GGS_readerQualifier  constructor_isBasic (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_readerQualifier (enum_isBasic) ;
  }
  public : static inline GGS_readerQualifier  constructor_isInherited (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_readerQualifier (enum_isInherited) ;
  }
  public : static inline GGS_readerQualifier  constructor_isOverriding (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_readerQualifier (enum_isOverriding) ;
  }

//--- Readers

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_readerQualifier inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@readerMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_readerMap ;

//---------------------------------------------------------------------------*

class GGS_readerMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_readerMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_readerMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_readerMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_readerMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_readerMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapIndexList &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_unifiedTypeMapIndex &  inParameter2,
                                const GGS_readerQualifier&  inParameter3,
                                const GGS_string&  inParameter4 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapIndexList   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_unifiedTypeMapIndex   & outParameter2,
                                GGS_readerQualifier  & outParameter3,
                                GGS_string  & outParameter4 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapIndexList & inParameter0,
                                   const GGS_bool& inParameter1,
                                   const GGS_unifiedTypeMapIndex & inParameter2,
                                   const GGS_readerQualifier& inParameter3,
                                   const GGS_string& inParameter4,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapIndexList & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_unifiedTypeMapIndex & outParameter2,
                                   GGS_readerQualifier& outParameter3,
                                   GGS_string& outParameter4,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
//--- 'insertOrReplace' Modifier
  public : void modifier_insertOrReplace (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapIndexList &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_unifiedTypeMapIndex &  inParameter2,
                                const GGS_readerQualifier&  inParameter3,
                                const GGS_string&  inParameter4 COMMA_LOCATION_ARGS) ;

  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_readerMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_readerMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_readerMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_readerMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_readerMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapIndexList   & _mArgumentTypeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasLexiqueArgument (LOCATION_ARGS) const ;
    public : /* const */ GGS_unifiedTypeMapIndex   & _mReturnedType (LOCATION_ARGS) const ;
    public : /* const */ GGS_readerQualifier  & _mQualifier (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mImplicitConversionReader (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@formalParameterSignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_formalParameterSignature ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_formalParameterSignature ;

//---------------------------------------------------------------------------*

class GGS_formalParameterSignature : public AC_GGS_list {
  public : typedef elementOf_GGS_formalParameterSignature cElement ;

//--- Constructor 'emptyList'
  public : static GGS_formalParameterSignature constructor_emptyList (void) ;
  public : static GGS_formalParameterSignature constructor_listWithValue (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_formalParameterSignature & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_formalParameterSignature
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_formalParameterSignature
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_formalParameterSignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_unifiedTypeMapIndex & _out_0,
                              GGS_formalArgumentPassingModeAST& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_unifiedTypeMapIndex & _out_0,
                             GGS_formalArgumentPassingModeAST& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_unifiedTypeMapIndex & _out_0,
                                GGS_formalArgumentPassingModeAST& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_unifiedTypeMapIndex & _out_0,
                                 GGS_formalArgumentPassingModeAST& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_formalParameterSignature inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_formalParameterSignature operator_concat (const GGS_formalParameterSignature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_unifiedTypeMapIndex 
  reader_mParameterTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalArgumentPassingModeAST
  reader_mFormalParameterPassingModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMParameterTypeAtIndex (C_Compiler & inLexique,
                              const GGS_unifiedTypeMapIndex  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalParameterPassingModeAtIndex (C_Compiler & inLexique,
                              const GGS_formalArgumentPassingModeAST & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_formalParameterSignature castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_formalParameterSignature & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapIndex   & _mParameterType (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalArgumentPassingModeAST  & _mFormalParameterPassingMode (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@modifierMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_modifierMap ;

//---------------------------------------------------------------------------*

class GGS_modifierMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_modifierMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_modifierMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_modifierMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_modifierMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_modifierMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterSignature   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_formalParameterSignature & inParameter0,
                                   const GGS_bool& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_formalParameterSignature & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
//--- 'insertOrReplace' Modifier
  public : void modifier_insertOrReplace (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_modifierMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_modifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_modifierMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_modifierMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_modifierMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_formalParameterSignature   & _mParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasCompilerArgument (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@instanceMethodMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_instanceMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_instanceMethodMap ;

//---------------------------------------------------------------------------*

class GGS_instanceMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_instanceMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_instanceMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_instanceMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_instanceMethodMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_instanceMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_instanceMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_instanceMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterSignature   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_formalParameterSignature & inParameter0,
                                   const GGS_bool& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_formalParameterSignature & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
//--- 'insertOrReplace' Modifier
  public : void modifier_insertOrReplace (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_instanceMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_instanceMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_instanceMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_instanceMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_instanceMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_formalParameterSignature   & _mParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasCompilerArgument (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@classMethodMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classMethodMap ;

//---------------------------------------------------------------------------*

class GGS_classMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_classMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_classMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_classMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classMethodMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_classMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_classMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_classMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterSignature   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_formalParameterSignature & inParameter0,
                                   const GGS_bool& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_formalParameterSignature & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
//--- 'insertOrReplace' Modifier
  public : void modifier_insertOrReplace (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_classMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_classMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_classMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_classMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_classMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_formalParameterSignature   & _mParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasCompilerArgument (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@enumerationDescriptorList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumerationDescriptorList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumerationDescriptorList ;

//---------------------------------------------------------------------------*

class GGS_enumerationDescriptorList : public AC_GGS_list {
  public : typedef elementOf_GGS_enumerationDescriptorList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_enumerationDescriptorList constructor_emptyList (void) ;
  public : static GGS_enumerationDescriptorList constructor_listWithValue (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_string& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_enumerationDescriptorList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_enumerationDescriptorList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_enumerationDescriptorList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_enumerationDescriptorList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_unifiedTypeMapIndex & _out_0,
                              GGS_string& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_unifiedTypeMapIndex & _out_0,
                             GGS_string& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_unifiedTypeMapIndex & _out_0,
                                GGS_string& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_unifiedTypeMapIndex & _out_0,
                                 GGS_string& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_enumerationDescriptorList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_string& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumerationDescriptorList operator_concat (const GGS_enumerationDescriptorList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_unifiedTypeMapIndex 
  reader_mEnumeratedTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mEnumerationNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMEnumeratedTypeAtIndex (C_Compiler & inLexique,
                              const GGS_unifiedTypeMapIndex  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEnumerationNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumerationDescriptorList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_enumerationDescriptorList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapIndex   & _mEnumeratedType (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mEnumerationName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@typedAttributeList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typedAttributeList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typedAttributeList ;

//---------------------------------------------------------------------------*

class GGS_typedAttributeList : public AC_GGS_list {
  public : typedef elementOf_GGS_typedAttributeList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typedAttributeList constructor_emptyList (void) ;
  public : static GGS_typedAttributeList constructor_listWithValue (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typedAttributeList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typedAttributeList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typedAttributeList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typedAttributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_unifiedTypeMapIndex & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_unifiedTypeMapIndex & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_unifiedTypeMapIndex & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_unifiedTypeMapIndex & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typedAttributeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_typedAttributeList operator_concat (const GGS_typedAttributeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_unifiedTypeMapIndex & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_unifiedTypeMapIndex 
  reader_mAttributeTypeIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAttributeTypeIndexAtIndex (C_Compiler & inLexique,
                              const GGS_unifiedTypeMapIndex  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typedAttributeList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typedAttributeList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapIndex   & _mAttributeTypeIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mAttributeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Class for 'typeKindEnum' Enumeration                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeKindEnum ;

//---------------------------------------------------------------------------*

class GGS_typeKindEnum : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_classType, enum_enumType, enum_listMapType, enum_listType, enum_mapIndexType, enum_mapType, enum_primitiveType, enum_sortedListType, enum_structType} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_typeKindEnum (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_typeKindEnum (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 4 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeKindEnum castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_typeKindEnum  constructor_classType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_classType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_enumType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_enumType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_listMapType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_listMapType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_listType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_listType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_mapIndexType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_mapIndexType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_mapType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_mapType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_primitiveType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_primitiveType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_sortedListType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_sortedListType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_structType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_structType) ;
  }

//--- Readers

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_typeKindEnum inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@unifiedTypeMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_unifiedTypeMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_unifiedTypeMap ;

//---------------------------------------------------------------------------*

class GGS_unifiedTypeMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_unifiedTypeMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_unifiedTypeMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_unifiedTypeMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_unifiedTypeMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_unifiedTypeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_unifiedTypeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_unifiedTypeMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_bool&  inParameter0,
                                const GGS_unifiedTypeMapIndex &  inParameter1,
                                const GGS_typeKindEnum&  inParameter2,
                                const GGS_typedAttributeList &  inParameter3,
                                const GGS_constructorMap &  inParameter4,
                                const GGS_readerMap &  inParameter5,
                                const GGS_modifierMap &  inParameter6,
                                const GGS_instanceMethodMap &  inParameter7,
                                const GGS_classMethodMap &  inParameter8,
                                const GGS_enumerationDescriptorList &  inParameter9 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_bool  & outParameter0,
                                GGS_unifiedTypeMapIndex   & outParameter1,
                                GGS_typeKindEnum  & outParameter2,
                                GGS_typedAttributeList   & outParameter3,
                                GGS_constructorMap   & outParameter4,
                                GGS_readerMap   & outParameter5,
                                GGS_modifierMap   & outParameter6,
                                GGS_instanceMethodMap   & outParameter7,
                                GGS_classMethodMap   & outParameter8,
                                GGS_enumerationDescriptorList   & outParameter9 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_bool& inParameter0,
                                   const GGS_unifiedTypeMapIndex & inParameter1,
                                   const GGS_typeKindEnum& inParameter2,
                                   const GGS_typedAttributeList & inParameter3,
                                   const GGS_constructorMap & inParameter4,
                                   const GGS_readerMap & inParameter5,
                                   const GGS_modifierMap & inParameter6,
                                   const GGS_instanceMethodMap & inParameter7,
                                   const GGS_classMethodMap & inParameter8,
                                   const GGS_enumerationDescriptorList & inParameter9,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_bool& outParameter0,
                                   GGS_unifiedTypeMapIndex & outParameter1,
                                   GGS_typeKindEnum& outParameter2,
                                   GGS_typedAttributeList & outParameter3,
                                   GGS_constructorMap & outParameter4,
                                   GGS_readerMap & outParameter5,
                                   GGS_modifierMap & outParameter6,
                                   GGS_instanceMethodMap & outParameter7,
                                   GGS_classMethodMap & outParameter8,
                                   GGS_enumerationDescriptorList & outParameter9,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_unifiedTypeMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_unifiedTypeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_unifiedTypeMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_unifiedTypeMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_unifiedTypeMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_bool  & _mIsConcrete (LOCATION_ARGS) const ;
    public : /* const */ GGS_unifiedTypeMapIndex   & _mSuperType (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeKindEnum  & _mTypeKindEnum (LOCATION_ARGS) const ;
    public : /* const */ GGS_typedAttributeList   & _mTypedAttributeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_constructorMap   & _mConstructorMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_readerMap   & _mReaderMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_modifierMap   & _mModifierMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_instanceMethodMap   & _mInstanceMethodMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_classMethodMap   & _mClassMethodMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_enumerationDescriptorList   & _mEnumerationDescriptor (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map index '@unifiedTypeMapIndex'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_unifiedTypeMapIndex ;

//---------------------------------------------------------------------------*

class GGS_unifiedTypeMapIndex : public AC_GGS_mapindex {
//--- 'null' constructor
  public : static GGS_unifiedTypeMapIndex
  constructor_null (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS) ;

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_unifiedTypeMapIndex & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_unifiedTypeMapIndex & inOperand) const ;

//--- 'description' reader declaration
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_unifiedTypeMapIndex castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Type Method 'makeRegularIndex'
  public : static void
  class_method_makeRegularIndex (C_Compiler & inLexique,
                                 const GGS_lstring & inKey,
                                 GGS_unifiedTypeMap & ioMap,
                                 GGS_unifiedTypeMapIndex & outIndex
                                 COMMA_LOCATION_ARGS) ;

//--- Method Access
  public : inline const GGS_unifiedTypeMapIndex *
  operator () (UNUSED_LOCATION_ARGS) const {
    return this ;
  }

//--- Attribute access
  public : GGS_bool reader_mIsConcrete (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_unifiedTypeMapIndex  reader_mSuperType (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeKindEnum reader_mTypeKindEnum (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typedAttributeList  reader_mTypedAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_constructorMap  reader_mConstructorMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_readerMap  reader_mReaderMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_modifierMap  reader_mModifierMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_instanceMethodMap  reader_mInstanceMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_classMethodMap  reader_mClassMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumerationDescriptorList  reader_mEnumerationDescriptor (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@unifiedTypeMapIndexList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_unifiedTypeMapIndexList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_unifiedTypeMapIndex  mType ;
//--- Constructor
  public : elementOf_GGS_unifiedTypeMapIndexList (const GGS_unifiedTypeMapIndex & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_unifiedTypeMapIndexList * nextObject (void) const { return (elementOf_GGS_unifiedTypeMapIndexList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_unifiedTypeMapIndexList * previousObject (void) const { return (elementOf_GGS_unifiedTypeMapIndexList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_unifiedTypeMapIndexList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@constructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_constructorMap {
  public : GGS_unifiedTypeMapIndexList  mArgumentTypeList ;
  public : GGS_bool mHasLexique ;
  public : GGS_unifiedTypeMapIndex  mReturnedType ;

  public : e_constructorMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_constructorMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_constructorMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_constructorMap * nextObject (void) const { return (elementOf_GGS_constructorMap *) mNextItem ; }
  public : inline elementOf_GGS_constructorMap * infObject (void) const { return (elementOf_GGS_constructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_constructorMap * supObject (void) const { return (elementOf_GGS_constructorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_constructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@readerMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_readerMap {
  public : GGS_unifiedTypeMapIndexList  mArgumentTypeList ;
  public : GGS_bool mHasLexiqueArgument ;
  public : GGS_unifiedTypeMapIndex  mReturnedType ;
  public : GGS_readerQualifier mQualifier ;
  public : GGS_string mImplicitConversionReader ;

  public : e_readerMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_readerMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_readerMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_readerMap * nextObject (void) const { return (elementOf_GGS_readerMap *) mNextItem ; }
  public : inline elementOf_GGS_readerMap * infObject (void) const { return (elementOf_GGS_readerMap *) mInfPtr ; }
  public : inline elementOf_GGS_readerMap * supObject (void) const { return (elementOf_GGS_readerMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_readerMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@formalParameterSignature'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_formalParameterSignature : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_unifiedTypeMapIndex  mParameterType ;
  public : GGS_formalArgumentPassingModeAST mFormalParameterPassingMode ;
//--- Constructor
  public : elementOf_GGS_formalParameterSignature (const GGS_unifiedTypeMapIndex & ,
                                const GGS_formalArgumentPassingModeAST& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_formalParameterSignature * nextObject (void) const { return (elementOf_GGS_formalParameterSignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_formalParameterSignature * previousObject (void) const { return (elementOf_GGS_formalParameterSignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_formalParameterSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@modifierMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_modifierMap {
  public : GGS_formalParameterSignature  mParameterList ;
  public : GGS_bool mHasCompilerArgument ;

  public : e_modifierMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_modifierMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_modifierMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_modifierMap * nextObject (void) const { return (elementOf_GGS_modifierMap *) mNextItem ; }
  public : inline elementOf_GGS_modifierMap * infObject (void) const { return (elementOf_GGS_modifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_modifierMap * supObject (void) const { return (elementOf_GGS_modifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_modifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@instanceMethodMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_instanceMethodMap {
  public : GGS_formalParameterSignature  mParameterList ;
  public : GGS_bool mHasCompilerArgument ;

  public : e_instanceMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_instanceMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_instanceMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_instanceMethodMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_instanceMethodMap * nextObject (void) const { return (elementOf_GGS_instanceMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_instanceMethodMap * infObject (void) const { return (elementOf_GGS_instanceMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_instanceMethodMap * supObject (void) const { return (elementOf_GGS_instanceMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_instanceMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@classMethodMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_classMethodMap {
  public : GGS_formalParameterSignature  mParameterList ;
  public : GGS_bool mHasCompilerArgument ;

  public : e_classMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_classMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_classMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_classMethodMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_classMethodMap * nextObject (void) const { return (elementOf_GGS_classMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_classMethodMap * infObject (void) const { return (elementOf_GGS_classMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_classMethodMap * supObject (void) const { return (elementOf_GGS_classMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_classMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@enumerationDescriptorList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumerationDescriptorList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_unifiedTypeMapIndex  mEnumeratedType ;
  public : GGS_string mEnumerationName ;
//--- Constructor
  public : elementOf_GGS_enumerationDescriptorList (const GGS_unifiedTypeMapIndex & ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_enumerationDescriptorList * nextObject (void) const { return (elementOf_GGS_enumerationDescriptorList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_enumerationDescriptorList * previousObject (void) const { return (elementOf_GGS_enumerationDescriptorList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_enumerationDescriptorList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@typedAttributeList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typedAttributeList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_unifiedTypeMapIndex  mAttributeTypeIndex ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : elementOf_GGS_typedAttributeList (const GGS_unifiedTypeMapIndex & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typedAttributeList * nextObject (void) const { return (elementOf_GGS_typedAttributeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typedAttributeList * previousObject (void) const { return (elementOf_GGS_typedAttributeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typedAttributeList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@unifiedTypeMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_unifiedTypeMap {
  public : GGS_bool mIsConcrete ;
  public : GGS_unifiedTypeMapIndex  mSuperType ;
  public : GGS_typeKindEnum mTypeKindEnum ;
  public : GGS_typedAttributeList  mTypedAttributeList ;
  public : GGS_constructorMap  mConstructorMap ;
  public : GGS_readerMap  mReaderMap ;
  public : GGS_modifierMap  mModifierMap ;
  public : GGS_instanceMethodMap  mInstanceMethodMap ;
  public : GGS_classMethodMap  mClassMethodMap ;
  public : GGS_enumerationDescriptorList  mEnumerationDescriptor ;

  public : e_unifiedTypeMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_unifiedTypeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_unifiedTypeMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_unifiedTypeMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_unifiedTypeMap * nextObject (void) const { return (elementOf_GGS_unifiedTypeMap *) mNextItem ; }
  public : inline elementOf_GGS_unifiedTypeMap * infObject (void) const { return (elementOf_GGS_unifiedTypeMap *) mInfPtr ; }
  public : inline elementOf_GGS_unifiedTypeMap * supObject (void) const { return (elementOf_GGS_unifiedTypeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_unifiedTypeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#endif
