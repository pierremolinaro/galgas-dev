//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'semanticsTypes.h'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 23th, 2010, at 18h4'57"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsTypes_DEFINED
#define semanticsTypes_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "semanticsTypesForAST.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_unifiedTypeMapProxyList ;
class GGS_constructorMap ;
class GGS_readerQualifier ;
class GGS_readerMap ;
class GGS_formalParameterSignature ;
class GGS_modifierMap ;
class GGS_instanceMethodMap ;
class GGS_classMethodMap ;
class GGS_withAccessorMap ;
class GGS_enumerationDescriptorList ;
class GGS_typedAttributeList ;
class GGS_typeKindEnum ;
class GGS_nativeAttributeList ;
class GGS_attributeMap ;
class GGS_unifiedTypeMap ;
class GGS_unifiedTypeMapProxy ;
class GGS_genericTypeTypeAST ;
class cPtr_genericTypeTypeAST ;
class GGS_predefinedTypeAST ;
class cPtr_predefinedTypeAST ;
class GGS_binarysetPredefinedTypeAST ;
class cPtr_binarysetPredefinedTypeAST ;
class GGS_boolPredefinedTypeAST ;
class cPtr_boolPredefinedTypeAST ;
class GGS_uintPredefinedTypeAST ;
class cPtr_uintPredefinedTypeAST ;
class GGS_uint64PredefinedTypeAST ;
class cPtr_uint64PredefinedTypeAST ;
class GGS_sintPredefinedTypeAST ;
class cPtr_sintPredefinedTypeAST ;
class GGS_sint64PredefinedTypeAST ;
class cPtr_sint64PredefinedTypeAST ;
class GGS_charPredefinedTypeAST ;
class cPtr_charPredefinedTypeAST ;
class GGS_doublePredefinedTypeAST ;
class cPtr_doublePredefinedTypeAST ;
class GGS_stringPredefinedTypeAST ;
class cPtr_stringPredefinedTypeAST ;
class GGS_locationPredefinedTypeAST ;
class cPtr_locationPredefinedTypeAST ;
class GGS_stringsetPredefinedTypeAST ;
class cPtr_stringsetPredefinedTypeAST ;
class GGS_objectPredefinedTypeAST ;
class cPtr_objectPredefinedTypeAST ;
class GGS_functionPredefinedTypeAST ;
class cPtr_functionPredefinedTypeAST ;
class GGS_typePredefinedTypeAST ;
class cPtr_typePredefinedTypeAST ;
class GGS_dataPredefinedTypeAST ;
class cPtr_dataPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@unifiedTypeMapProxyList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_unifiedTypeMapProxyList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_unifiedTypeMapProxyList ;

//---------------------------------------------------------------------------*

class GGS_unifiedTypeMapProxyList : public AC_GGS_list {
  public : typedef elementOf_GGS_unifiedTypeMapProxyList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_unifiedTypeMapProxyList constructor_emptyList (void) ;
  public : static GGS_unifiedTypeMapProxyList constructor_listWithValue (const GGS_unifiedTypeMapProxy & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_unifiedTypeMapProxyList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_unifiedTypeMapProxyList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_unifiedTypeMapProxyList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_unifiedTypeMapProxyList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_unifiedTypeMapProxy & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_unifiedTypeMapProxy & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_unifiedTypeMapProxy & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_unifiedTypeMapProxy & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_unifiedTypeMapProxyList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_unifiedTypeMapProxy & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_unifiedTypeMapProxyList operator_concat (const GGS_unifiedTypeMapProxyList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_unifiedTypeMapProxy & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_unifiedTypeMapProxy & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_unifiedTypeMapProxy & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_unifiedTypeMapProxy 
  reader_mTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMTypeAtIndex (C_Compiler & inLexique,
                              const GGS_unifiedTypeMapProxy  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_unifiedTypeMapProxyList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_unifiedTypeMapProxyList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxy   & _mType (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@constructorMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_constructorMap ;

//---------------------------------------------------------------------------*

class GGS_constructorMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_constructorMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_constructorMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_constructorMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_constructorMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_constructorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_constructorMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_constructorMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_unifiedTypeMapProxyList & inValue0,
                                             const GGS_bool& inValue1,
                                             const GGS_unifiedTypeMapProxy & inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxyList &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_unifiedTypeMapProxy &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapProxyList   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_unifiedTypeMapProxy   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapProxyList & inParameter0,
                                   const GGS_bool& inParameter1,
                                   const GGS_unifiedTypeMapProxy & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapProxyList & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_unifiedTypeMapProxy & outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_constructorMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_constructorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_constructorMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_constructorMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_constructorMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxyList   & _mArgumentTypeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasCompilerArgument (LOCATION_ARGS) const ;
    public : /* const */ GGS_unifiedTypeMapProxy   & _mReturnedType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Class for 'readerQualifier' Enumeration                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_readerQualifier ;

//---------------------------------------------------------------------------*

class GGS_readerQualifier : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_isAbstract, enum_isBasic, enum_isInherited, enum_isOverriding, enum_isOverridingAbstract} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_readerQualifier (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_readerQualifier (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 3 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_readerQualifier castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_readerQualifier  constructor_isAbstract (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_readerQualifier (enum_isAbstract) ;
  }
  public : static inline GGS_readerQualifier  constructor_isBasic (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_readerQualifier (enum_isBasic) ;
  }
  public : static inline GGS_readerQualifier  constructor_isInherited (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_readerQualifier (enum_isInherited) ;
  }
  public : static inline GGS_readerQualifier  constructor_isOverriding (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_readerQualifier (enum_isOverriding) ;
  }
  public : static inline GGS_readerQualifier  constructor_isOverridingAbstract (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_readerQualifier (enum_isOverridingAbstract) ;
  }

//--- Readers

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_readerQualifier inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_readerQualifier inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@readerMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_readerMap ;

//---------------------------------------------------------------------------*

class GGS_readerMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_readerMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_readerMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_readerMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_readerMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_readerMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_readerMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_readerMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_unifiedTypeMapProxyList & inValue0,
                                             const GGS_bool& inValue1,
                                             const GGS_unifiedTypeMapProxy & inValue2,
                                             const GGS_readerQualifier& inValue3
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxyList &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_unifiedTypeMapProxy &  inParameter2,
                                const GGS_readerQualifier&  inParameter3 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapProxyList   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_unifiedTypeMapProxy   & outParameter2,
                                GGS_readerQualifier  & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapProxyList & inParameter0,
                                   const GGS_bool& inParameter1,
                                   const GGS_unifiedTypeMapProxy & inParameter2,
                                   const GGS_readerQualifier& inParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapProxyList & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_unifiedTypeMapProxy & outParameter2,
                                   GGS_readerQualifier& outParameter3,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
//--- 'insertOrReplace' Modifier
  public : void modifier_insertOrReplace (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxyList &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_unifiedTypeMapProxy &  inParameter2,
                                const GGS_readerQualifier&  inParameter3 COMMA_LOCATION_ARGS) ;

  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_readerMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_readerMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_readerMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_readerMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_readerMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxyList   & _mArgumentTypeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasCompilerArgument (LOCATION_ARGS) const ;
    public : /* const */ GGS_unifiedTypeMapProxy   & _mReturnedType (LOCATION_ARGS) const ;
    public : /* const */ GGS_readerQualifier  & _mQualifier (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@formalParameterSignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_formalParameterSignature ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_formalParameterSignature ;

//---------------------------------------------------------------------------*

class GGS_formalParameterSignature : public AC_GGS_list {
  public : typedef elementOf_GGS_formalParameterSignature cElement ;

//--- Constructor 'emptyList'
  public : static GGS_formalParameterSignature constructor_emptyList (void) ;
  public : static GGS_formalParameterSignature constructor_listWithValue (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_formalParameterSignature & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_formalParameterSignature
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_formalParameterSignature
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_formalParameterSignature * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_unifiedTypeMapProxy & _out_0,
                              GGS_formalArgumentPassingModeAST& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_unifiedTypeMapProxy & _out_0,
                             GGS_formalArgumentPassingModeAST& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_unifiedTypeMapProxy & _out_0,
                                GGS_formalArgumentPassingModeAST& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_unifiedTypeMapProxy & _out_0,
                                 GGS_formalArgumentPassingModeAST& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_formalParameterSignature inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_formalParameterSignature operator_concat (const GGS_formalParameterSignature & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_formalArgumentPassingModeAST& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_unifiedTypeMapProxy 
  reader_mFormalArgumentTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalArgumentPassingModeAST
  reader_mFormalArgumentPassingModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMFormalArgumentTypeAtIndex (C_Compiler & inLexique,
                              const GGS_unifiedTypeMapProxy  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFormalArgumentPassingModeAtIndex (C_Compiler & inLexique,
                              const GGS_formalArgumentPassingModeAST & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_formalParameterSignature castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_formalParameterSignature & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxy   & _mFormalArgumentType (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalArgumentPassingModeAST  & _mFormalArgumentPassingMode (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@modifierMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_modifierMap ;

//---------------------------------------------------------------------------*

class GGS_modifierMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_modifierMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_modifierMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_modifierMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_modifierMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_modifierMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_modifierMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_modifierMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_formalParameterSignature & inValue0,
                                             const GGS_bool& inValue1,
                                             const GGS_readerQualifier& inValue2
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_readerQualifier&  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterSignature   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_readerQualifier  & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_formalParameterSignature & inParameter0,
                                   const GGS_bool& inParameter1,
                                   const GGS_readerQualifier& inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_formalParameterSignature & outParameter0,
                                   GGS_bool& outParameter1,
                                   GGS_readerQualifier& outParameter2,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
//--- 'insertOrReplace' Modifier
  public : void modifier_insertOrReplace (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1,
                                const GGS_readerQualifier&  inParameter2 COMMA_LOCATION_ARGS) ;

  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_modifierMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_modifierMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_modifierMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_modifierMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_modifierMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_formalParameterSignature   & _mParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasCompilerArgument (LOCATION_ARGS) const ;
    public : /* const */ GGS_readerQualifier  & _mQualifier (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@instanceMethodMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_instanceMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_instanceMethodMap ;

//---------------------------------------------------------------------------*

class GGS_instanceMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_instanceMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_instanceMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_instanceMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_instanceMethodMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_instanceMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_instanceMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_instanceMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_instanceMethodMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_formalParameterSignature & inValue0,
                                             const GGS_location & inValue1,
                                             const GGS_bool& inValue2,
                                             const GGS_readerQualifier& inValue3
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_location &  inParameter1,
                                const GGS_bool&  inParameter2,
                                const GGS_readerQualifier&  inParameter3 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

  public : static const utf32 kSearchMessage_searchInheritedKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterSignature   & outParameter0,
                                GGS_location   & outParameter1,
                                GGS_bool  & outParameter2,
                                GGS_readerQualifier  & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- 'searchInheritedKey' Search Method
  public : void method_searchInheritedKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterSignature   & outParameter0,
                                GGS_location   & outParameter1,
                                GGS_bool  & outParameter2,
                                GGS_readerQualifier  & outParameter3 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_formalParameterSignature & inParameter0,
                                   const GGS_location & inParameter1,
                                   const GGS_bool& inParameter2,
                                   const GGS_readerQualifier& inParameter3,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_formalParameterSignature & outParameter0,
                                   GGS_location & outParameter1,
                                   GGS_bool& outParameter2,
                                   GGS_readerQualifier& outParameter3,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_instanceMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_instanceMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_instanceMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_instanceMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_instanceMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_formalParameterSignature   & _mParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_location   & _mDeclarationLocation (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasCompilerArgument (LOCATION_ARGS) const ;
    public : /* const */ GGS_readerQualifier  & _mQualifier (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@classMethodMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classMethodMap ;

//---------------------------------------------------------------------------*

class GGS_classMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_classMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_classMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_classMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classMethodMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_classMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_classMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_classMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_classMethodMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_formalParameterSignature & inValue0,
                                             const GGS_bool& inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterSignature   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_formalParameterSignature & inParameter0,
                                   const GGS_bool& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_formalParameterSignature & outParameter0,
                                   GGS_bool& outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
//--- 'insertOrReplace' Modifier
  public : void modifier_insertOrReplace (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0,
                                const GGS_bool&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_classMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_classMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_classMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_classMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_classMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_formalParameterSignature   & _mParameterList (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mHasCompilerArgument (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@withAccessorMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_withAccessorMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_withAccessorMap ;

//---------------------------------------------------------------------------*

class GGS_withAccessorMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_withAccessorMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_withAccessorMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_withAccessorMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_withAccessorMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_withAccessorMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_withAccessorMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_withAccessorMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_withAccessorMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_unifiedTypeMapProxy & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapProxy   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapProxy & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapProxy & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_withAccessorMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_withAccessorMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_withAccessorMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_withAccessorMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_withAccessorMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxy   & _mArgumentType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@enumerationDescriptorList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumerationDescriptorList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumerationDescriptorList ;

//---------------------------------------------------------------------------*

class GGS_enumerationDescriptorList : public AC_GGS_list {
  public : typedef elementOf_GGS_enumerationDescriptorList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_enumerationDescriptorList constructor_emptyList (void) ;
  public : static GGS_enumerationDescriptorList constructor_listWithValue (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_string& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_enumerationDescriptorList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_enumerationDescriptorList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_enumerationDescriptorList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_enumerationDescriptorList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_unifiedTypeMapProxy & _out_0,
                              GGS_string& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_unifiedTypeMapProxy & _out_0,
                             GGS_string& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_unifiedTypeMapProxy & _out_0,
                                GGS_string& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_unifiedTypeMapProxy & _out_0,
                                 GGS_string& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_enumerationDescriptorList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_string& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumerationDescriptorList operator_concat (const GGS_enumerationDescriptorList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_unifiedTypeMapProxy 
  reader_mEnumeratedTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mEnumerationNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMEnumeratedTypeAtIndex (C_Compiler & inLexique,
                              const GGS_unifiedTypeMapProxy  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMEnumerationNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumerationDescriptorList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_enumerationDescriptorList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxy   & _mEnumeratedType (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mEnumerationName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@typedAttributeList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typedAttributeList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typedAttributeList ;

//---------------------------------------------------------------------------*

class GGS_typedAttributeList : public AC_GGS_list {
  public : typedef elementOf_GGS_typedAttributeList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_typedAttributeList constructor_emptyList (void) ;
  public : static GGS_typedAttributeList constructor_listWithValue (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_typedAttributeList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_typedAttributeList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_typedAttributeList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_typedAttributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_unifiedTypeMapProxy & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_unifiedTypeMapProxy & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_unifiedTypeMapProxy & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_unifiedTypeMapProxy & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_typedAttributeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_typedAttributeList operator_concat (const GGS_typedAttributeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_unifiedTypeMapProxy & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_unifiedTypeMapProxy 
  reader_mAttributeTypeIndexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAttributeTypeIndexAtIndex (C_Compiler & inLexique,
                              const GGS_unifiedTypeMapProxy  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typedAttributeList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_typedAttributeList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxy   & _mAttributeTypeIndex (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mAttributeName (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Class for 'typeKindEnum' Enumeration                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typeKindEnum ;

//---------------------------------------------------------------------------*

class GGS_typeKindEnum : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_classType, enum_enumType, enum_listMapType, enum_listType, enum_mapProxyType, enum_mapType, enum_sortedListType, enum_structType} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_typeKindEnum (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_typeKindEnum (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 4 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typeKindEnum castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_typeKindEnum  constructor_classType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_classType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_enumType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_enumType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_listMapType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_listMapType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_listType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_listType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_mapProxyType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_mapProxyType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_mapType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_mapType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_sortedListType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_sortedListType) ;
  }
  public : static inline GGS_typeKindEnum  constructor_structType (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_typeKindEnum (enum_structType) ;
  }

//--- Readers
  public : GGS_string reader_kind (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_typeKindEnum inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_typeKindEnum inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@nativeAttributeList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_nativeAttributeList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_nativeAttributeList ;

//---------------------------------------------------------------------------*

class GGS_nativeAttributeList : public AC_GGS_list {
  public : typedef elementOf_GGS_nativeAttributeList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_nativeAttributeList constructor_emptyList (void) ;
  public : static GGS_nativeAttributeList constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4,
                                const GGS_string& argument_5) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_nativeAttributeList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_nativeAttributeList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_nativeAttributeList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_nativeAttributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_string& _out_0,
                              GGS_bool& _out_1,
                              GGS_string& _out_2,
                              GGS_bool& _out_3,
                              GGS_string& _out_4,
                              GGS_string& _out_5
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_string& _out_0,
                             GGS_bool& _out_1,
                             GGS_string& _out_2,
                             GGS_bool& _out_3,
                             GGS_string& _out_4,
                             GGS_string& _out_5
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_string& _out_0,
                                GGS_bool& _out_1,
                                GGS_string& _out_2,
                                GGS_bool& _out_3,
                                GGS_string& _out_4,
                                GGS_string& _out_5
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_string& _out_0,
                                 GGS_bool& _out_1,
                                 GGS_string& _out_2,
                                 GGS_bool& _out_3,
                                 GGS_string& _out_4,
                                 GGS_string& _out_5
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_nativeAttributeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4,
                                const GGS_string& argument_5) ;
//--- Handling '.' GALGAS operator
  public : GGS_nativeAttributeList operator_concat (const GGS_nativeAttributeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4,
                                const GGS_string& argument_5
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4,
                                const GGS_string& argument_5
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4,
                                const GGS_string& argument_5
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_string
  reader_mCppClassNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mIsPointerAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mUseReferenceForConstructorAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mGetterNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_string
  reader_mDefaultValueAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMCppClassNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMIsPointerAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMUseReferenceForConstructorAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMGetterNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMDefaultValueAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_nativeAttributeList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_nativeAttributeList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _mCppClassName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mIsPointer (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mAttributeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mUseReferenceForConstructor (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mGetterName (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _mDefaultValue (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'binaryAddOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binaryAddOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binaryAddOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'binarySubOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binarySubOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binarySubOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'binaryMulOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binaryMulOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binaryMulOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'binaryDivOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binaryDivOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binaryDivOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'binaryModOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binaryModOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binaryModOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Function 'binaryShiftOperator'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binaryShiftOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binaryShiftOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'unaryPlusOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_unaryPlusOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_unaryPlusOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Function 'unaryMinusOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_unaryMinusOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_unaryMinusOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Function 'unaryTildeOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_unaryTildeOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_unaryTildeOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'incDecOperator'                          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_incDecOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_incDecOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'binaryAndOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binaryAndOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binaryAndOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'binaryOrOperator'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binaryOrOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binaryOrOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'binaryXorOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binaryXorOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binaryXorOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'unaryNotOperator'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_unaryNotOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_unaryNotOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'binaryConcatOperator'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_binaryConcatOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_binaryConcatOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'dotAssignOperator'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_dotAssignOperator ;

//---------------------------------------------------------------------------*

GGS_uint  function_dotAssignOperator (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'isComparable'                           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_isComparable ;

//---------------------------------------------------------------------------*

GGS_uint  function_isComparable (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Function 'generateConstructorWithSelfObject'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_generateConstructorWithSelfObject ;

//---------------------------------------------------------------------------*

GGS_uint  function_generateConstructorWithSelfObject (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Function 'generateSortedListComparisonMethod'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_generateSortedListComparisonMethod ;

//---------------------------------------------------------------------------*

GGS_uint  function_generateSortedListComparisonMethod (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Function 'generateEnumerationHelperMethods'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_generateEnumerationHelperMethods ;

//---------------------------------------------------------------------------*

GGS_uint  function_generateEnumerationHelperMethods (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Function 'generateCppConstructorWithAllAttributeList'            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_generateCppConstructorWithAllAttributeList ;

//---------------------------------------------------------------------------*

GGS_uint  function_generateCppConstructorWithAllAttributeList (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Function 'generateCppConstructorWithCurrentAttributeList'          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_generateCppConstructorWithCurrentAttributeList ;

//---------------------------------------------------------------------------*

GGS_uint  function_generateCppConstructorWithCurrentAttributeList (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Function 'generateCppConstructorWithNativeAttributeList'          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_generateCppConstructorWithNativeAttributeList ;

//---------------------------------------------------------------------------*

GGS_uint  function_generateCppConstructorWithNativeAttributeList (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Function 'doNotGenererateObjectCompare'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_doNotGenererateObjectCompare ;

//---------------------------------------------------------------------------*

GGS_uint  function_doNotGenererateObjectCompare (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Function 'generateDescriptionReaderUtilityMethod'              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_generateDescriptionReaderUtilityMethod ;

//---------------------------------------------------------------------------*

GGS_uint  function_generateDescriptionReaderUtilityMethod (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Function 'generateNativeNewConstructor'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_generateNativeNewConstructor ;

//---------------------------------------------------------------------------*

GGS_uint  function_generateNativeNewConstructor (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Function 'generateVirtualDestructor'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_generateVirtualDestructor ;

//---------------------------------------------------------------------------*

GGS_uint  function_generateVirtualDestructor (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@attributeMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_attributeMap ;

//---------------------------------------------------------------------------*

class GGS_attributeMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_attributeMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_attributeMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_attributeMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_attributeMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_attributeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_attributeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_attributeMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_attributeMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_unifiedTypeMapProxy & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapProxy &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapProxy   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapProxy & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapProxy & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_attributeMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_attributeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_attributeMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_attributeMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_attributeMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapProxy   & _mAttributeType (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@unifiedTypeMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_unifiedTypeMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_unifiedTypeMap ;

//---------------------------------------------------------------------------*

class GGS_unifiedTypeMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_unifiedTypeMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_unifiedTypeMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_unifiedTypeMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_unifiedTypeMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_unifiedTypeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_unifiedTypeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_unifiedTypeMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_unifiedTypeMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_bool& inValue0,
                                             const GGS_unifiedTypeMapProxy & inValue1,
                                             const GGS_typeKindEnum& inValue2,
                                             const GGS_typedAttributeList & inValue3,
                                             const GGS_attributeMap & inValue4,
                                             const GGS_typedAttributeList & inValue5,
                                             const GGS_constructorMap & inValue6,
                                             const GGS_readerMap & inValue7,
                                             const GGS_modifierMap & inValue8,
                                             const GGS_instanceMethodMap & inValue9,
                                             const GGS_classMethodMap & inValue10,
                                             const GGS_enumerationDescriptorList & inValue11,
                                             const GGS_uint & inValue12,
                                             const GGS_unifiedTypeMapProxyList & inValue13,
                                             const GGS_nativeAttributeList & inValue14,
                                             const GGS_lstringlist & inValue15,
                                             const GGS_typedAttributeList & inValue16,
                                             const GGS_mapSearchMethodListAST & inValue17,
                                             const GGS_mapSearchMethodListAST & inValue18,
                                             const GGS_withAccessorMap & inValue19
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_bool&  inParameter0,
                                const GGS_unifiedTypeMapProxy &  inParameter1,
                                const GGS_typeKindEnum&  inParameter2,
                                const GGS_typedAttributeList &  inParameter3,
                                const GGS_attributeMap &  inParameter4,
                                const GGS_typedAttributeList &  inParameter5,
                                const GGS_constructorMap &  inParameter6,
                                const GGS_readerMap &  inParameter7,
                                const GGS_modifierMap &  inParameter8,
                                const GGS_instanceMethodMap &  inParameter9,
                                const GGS_classMethodMap &  inParameter10,
                                const GGS_enumerationDescriptorList &  inParameter11,
                                const GGS_uint &  inParameter12,
                                const GGS_unifiedTypeMapProxyList &  inParameter13,
                                const GGS_nativeAttributeList &  inParameter14,
                                const GGS_lstringlist &  inParameter15,
                                const GGS_typedAttributeList &  inParameter16,
                                const GGS_mapSearchMethodListAST &  inParameter17,
                                const GGS_mapSearchMethodListAST &  inParameter18,
                                const GGS_withAccessorMap &  inParameter19 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_bool  & outParameter0,
                                GGS_unifiedTypeMapProxy   & outParameter1,
                                GGS_typeKindEnum  & outParameter2,
                                GGS_typedAttributeList   & outParameter3,
                                GGS_attributeMap   & outParameter4,
                                GGS_typedAttributeList   & outParameter5,
                                GGS_constructorMap   & outParameter6,
                                GGS_readerMap   & outParameter7,
                                GGS_modifierMap   & outParameter8,
                                GGS_instanceMethodMap   & outParameter9,
                                GGS_classMethodMap   & outParameter10,
                                GGS_enumerationDescriptorList   & outParameter11,
                                GGS_uint   & outParameter12,
                                GGS_unifiedTypeMapProxyList   & outParameter13,
                                GGS_nativeAttributeList   & outParameter14,
                                GGS_lstringlist   & outParameter15,
                                GGS_typedAttributeList   & outParameter16,
                                GGS_mapSearchMethodListAST   & outParameter17,
                                GGS_mapSearchMethodListAST   & outParameter18,
                                GGS_withAccessorMap   & outParameter19 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_bool& inParameter0,
                                   const GGS_unifiedTypeMapProxy & inParameter1,
                                   const GGS_typeKindEnum& inParameter2,
                                   const GGS_typedAttributeList & inParameter3,
                                   const GGS_attributeMap & inParameter4,
                                   const GGS_typedAttributeList & inParameter5,
                                   const GGS_constructorMap & inParameter6,
                                   const GGS_readerMap & inParameter7,
                                   const GGS_modifierMap & inParameter8,
                                   const GGS_instanceMethodMap & inParameter9,
                                   const GGS_classMethodMap & inParameter10,
                                   const GGS_enumerationDescriptorList & inParameter11,
                                   const GGS_uint & inParameter12,
                                   const GGS_unifiedTypeMapProxyList & inParameter13,
                                   const GGS_nativeAttributeList & inParameter14,
                                   const GGS_lstringlist & inParameter15,
                                   const GGS_typedAttributeList & inParameter16,
                                   const GGS_mapSearchMethodListAST & inParameter17,
                                   const GGS_mapSearchMethodListAST & inParameter18,
                                   const GGS_withAccessorMap & inParameter19,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_bool& outParameter0,
                                   GGS_unifiedTypeMapProxy & outParameter1,
                                   GGS_typeKindEnum& outParameter2,
                                   GGS_typedAttributeList & outParameter3,
                                   GGS_attributeMap & outParameter4,
                                   GGS_typedAttributeList & outParameter5,
                                   GGS_constructorMap & outParameter6,
                                   GGS_readerMap & outParameter7,
                                   GGS_modifierMap & outParameter8,
                                   GGS_instanceMethodMap & outParameter9,
                                   GGS_classMethodMap & outParameter10,
                                   GGS_enumerationDescriptorList & outParameter11,
                                   GGS_uint & outParameter12,
                                   GGS_unifiedTypeMapProxyList & outParameter13,
                                   GGS_nativeAttributeList & outParameter14,
                                   GGS_lstringlist & outParameter15,
                                   GGS_typedAttributeList & outParameter16,
                                   GGS_mapSearchMethodListAST & outParameter17,
                                   GGS_mapSearchMethodListAST & outParameter18,
                                   GGS_withAccessorMap & outParameter19,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_unifiedTypeMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_unifiedTypeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_unifiedTypeMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_unifiedTypeMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_unifiedTypeMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_bool  & _mIsConcrete (LOCATION_ARGS) const ;
    public : /* const */ GGS_unifiedTypeMapProxy   & _mSuperType (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeKindEnum  & _mTypeKindEnum (LOCATION_ARGS) const ;
    public : /* const */ GGS_typedAttributeList   & _mInheritedTypedAttributeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_attributeMap   & _mAttributeMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_typedAttributeList   & _mCurrentTypedAttributeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_constructorMap   & _mConstructorMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_readerMap   & _mReaderMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_modifierMap   & _mModifierMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_instanceMethodMap   & _mInstanceMethodMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_classMethodMap   & _mClassMethodMap (LOCATION_ARGS) const ;
    public : /* const */ GGS_enumerationDescriptorList   & _mEnumerationDescriptor (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mHandledOperatorFlags (LOCATION_ARGS) const ;
    public : /* const */ GGS_unifiedTypeMapProxyList   & _mAddAssignOperatorArguments (LOCATION_ARGS) const ;
    public : /* const */ GGS_nativeAttributeList   & _mNativeAttributeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstringlist   & _mEnumConstantList (LOCATION_ARGS) const ;
    public : /* const */ GGS_typedAttributeList   & _mPrivateDataMemberList (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapSearchMethodListAST   & _mMapSearchMethodList (LOCATION_ARGS) const ;
    public : /* const */ GGS_mapSearchMethodListAST   & _mMapProxySearchConstructorList (LOCATION_ARGS) const ;
    public : /* const */ GGS_withAccessorMap   & _mWithAccessorMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map index '@unifiedTypeMapProxy'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_unifiedTypeMapProxy ;

//---------------------------------------------------------------------------*

class GGS_unifiedTypeMapProxy : public AC_GGS_mapindex {
//--- 'null' constructor
  public : static GGS_unifiedTypeMapProxy
  constructor_null (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS) ;

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_unifiedTypeMapProxy & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_unifiedTypeMapProxy & inOperand) const ;

//--- 'description' reader declaration
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_unifiedTypeMapProxy castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Type Method 'makeRegularProxy'
  public : static void
  class_method_makeRegularProxy (C_Compiler & inLexique,
                                 GGS_unifiedTypeMap & ioMap,
                                 const GGS_string & inKey,
                                 GGS_unifiedTypeMapProxy & outIndex
                                 COMMA_LOCATION_ARGS) ;

//--- Method Access
  public : inline const GGS_unifiedTypeMapProxy *
  operator () (UNUSED_LOCATION_ARGS) const {
    return this ;
  }

//--- Attribute access
  public : GGS_bool reader_mIsConcrete (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_unifiedTypeMapProxy  reader_mSuperType (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typeKindEnum reader_mTypeKindEnum (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typedAttributeList  reader_mInheritedTypedAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeMap  reader_mAttributeMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typedAttributeList  reader_mCurrentTypedAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_constructorMap  reader_mConstructorMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_readerMap  reader_mReaderMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_modifierMap  reader_mModifierMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_instanceMethodMap  reader_mInstanceMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_classMethodMap  reader_mClassMethodMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumerationDescriptorList  reader_mEnumerationDescriptor (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_mHandledOperatorFlags (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_unifiedTypeMapProxyList  reader_mAddAssignOperatorArguments (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_nativeAttributeList  reader_mNativeAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mEnumConstantList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_typedAttributeList  reader_mPrivateDataMemberList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapSearchMethodListAST  reader_mMapSearchMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapSearchMethodListAST  reader_mMapProxySearchConstructorList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_withAccessorMap  reader_mWithAccessorMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- Constructors from map readers
  public : static GGS_unifiedTypeMapProxy constructor_searchKey (C_Compiler & inLexique,
              const GGS_unifiedTypeMap & inMap,
              const GGS_lstring & inKey
              COMMA_LOCATION_ARGS) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_genericTypeTypeAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_genericTypeTypeAST ;

//---------------------------------------------------------------------------*

class GGS_genericTypeTypeAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_genericTypeTypeAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_genericTypeTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_genericTypeTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_genericTypeTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_genericTypeTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_genericTypeTypeAST * getPtr (void) const {
    return (cPtr_genericTypeTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mSuperTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_genericTypeTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_genericTypeTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_genericTypeTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_genericTypeTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__genericTypeTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_predefinedTypeAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_predefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_predefinedTypeAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_predefinedTypeAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_predefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_predefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_predefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_predefinedTypeAST * getPtr (void) const {
    return (cPtr_predefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mPredefinedTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_predefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_predefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_predefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_predefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__predefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_binarysetPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_binarysetPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_binarysetPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_binarysetPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_binarysetPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_binarysetPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_binarysetPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_binarysetPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_binarysetPredefinedTypeAST * getPtr (void) const {
    return (cPtr_binarysetPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_binarysetPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_binarysetPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_binarysetPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_binarysetPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__binarysetPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_boolPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_boolPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_boolPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_boolPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_boolPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_boolPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_boolPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_boolPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_boolPredefinedTypeAST * getPtr (void) const {
    return (cPtr_boolPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_boolPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_boolPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_boolPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_boolPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__boolPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_uintPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uintPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_uintPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_uintPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_uintPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uintPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uintPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uintPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uintPredefinedTypeAST * getPtr (void) const {
    return (cPtr_uintPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uintPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uintPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_uintPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uintPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uintPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_uint64PredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_uint64PredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_uint64PredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_uint64PredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint64PredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint64PredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint64PredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64PredefinedTypeAST * getPtr (void) const {
    return (cPtr_uint64PredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64PredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64PredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64PredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint64PredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_sintPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sintPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_sintPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_sintPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_sintPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sintPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sintPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sintPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sintPredefinedTypeAST * getPtr (void) const {
    return (cPtr_sintPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sintPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sintPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_sintPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sintPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sintPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_sint64PredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_sint64PredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_sint64PredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_sint64PredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint64PredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint64PredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint64PredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64PredefinedTypeAST * getPtr (void) const {
    return (cPtr_sint64PredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64PredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64PredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64PredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint64PredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_charPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_charPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_charPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_charPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_charPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_charPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_charPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_charPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_charPredefinedTypeAST * getPtr (void) const {
    return (cPtr_charPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_charPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_charPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_charPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_charPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__charPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_doublePredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_doublePredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_doublePredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_doublePredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_doublePredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_doublePredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_doublePredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_doublePredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_doublePredefinedTypeAST * getPtr (void) const {
    return (cPtr_doublePredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_doublePredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_doublePredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_doublePredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_doublePredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__doublePredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_stringPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_stringPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_stringPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_stringPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_stringPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_stringPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_stringPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_stringPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_stringPredefinedTypeAST * getPtr (void) const {
    return (cPtr_stringPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_stringPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_stringPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_stringPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_stringPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__stringPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_locationPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_locationPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_locationPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_locationPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_locationPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_locationPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_locationPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_locationPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_locationPredefinedTypeAST * getPtr (void) const {
    return (cPtr_locationPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_locationPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_locationPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_locationPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_locationPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__locationPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_stringsetPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_stringsetPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_stringsetPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_stringsetPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_stringsetPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_stringsetPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_stringsetPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_stringsetPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_stringsetPredefinedTypeAST * getPtr (void) const {
    return (cPtr_stringsetPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_stringsetPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_stringsetPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_stringsetPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_stringsetPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__stringsetPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_objectPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_objectPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_objectPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_objectPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_objectPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_objectPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_objectPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_objectPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_objectPredefinedTypeAST * getPtr (void) const {
    return (cPtr_objectPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_objectPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_objectPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_objectPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_objectPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__objectPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_functionPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_functionPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_functionPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_functionPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_functionPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_functionPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_functionPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_functionPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_functionPredefinedTypeAST * getPtr (void) const {
    return (cPtr_functionPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_functionPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_functionPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_functionPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_functionPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__functionPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typePredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typePredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_typePredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_typePredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_typePredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typePredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typePredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typePredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typePredefinedTypeAST * getPtr (void) const {
    return (cPtr_typePredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typePredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typePredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_typePredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typePredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typePredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_dataPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_dataPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_dataPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_dataPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_dataPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_dataPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_dataPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_dataPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_dataPredefinedTypeAST * getPtr (void) const {
    return (cPtr_dataPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_dataPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_dataPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_dataPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_dataPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__dataPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Category reader '@predefinedTypeAST.getSuperTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

typedef GGS_string (*typeCategoryReader__predefinedTypeAST__getSuperTypeName)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__predefinedTypeAST__getSuperTypeName (typeCategoryReader__predefinedTypeAST__getSuperTypeName inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryReader__predefinedTypeAST__getSuperTypeName
findCategoryReader__predefinedTypeAST__getSuperTypeName (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@predefinedTypeAST.getConstructorMap'           *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__predefinedTypeAST__getConstructorMap)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_constructorMap  & var_cas_outConstructorMap
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__predefinedTypeAST__getConstructorMap (typeCategoryMethod__predefinedTypeAST__getConstructorMap inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__predefinedTypeAST__getConstructorMap
findCategoryMethod__predefinedTypeAST__getConstructorMap (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category method '@predefinedTypeAST.getReaderMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__predefinedTypeAST__getReaderMap)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outReaderMap
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__predefinedTypeAST__getReaderMap (typeCategoryMethod__predefinedTypeAST__getReaderMap inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__predefinedTypeAST__getReaderMap
findCategoryMethod__predefinedTypeAST__getReaderMap (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@predefinedTypeAST.getModifierMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__predefinedTypeAST__getModifierMap)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__predefinedTypeAST__getModifierMap (typeCategoryMethod__predefinedTypeAST__getModifierMap inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__predefinedTypeAST__getModifierMap
findCategoryMethod__predefinedTypeAST__getModifierMap (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@predefinedTypeAST.getInstanceMethodMap'          *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__predefinedTypeAST__getInstanceMethodMap)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_instanceMethodMap  & var_cas_outInstanceMethodMap
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__predefinedTypeAST__getInstanceMethodMap (typeCategoryMethod__predefinedTypeAST__getInstanceMethodMap inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__predefinedTypeAST__getInstanceMethodMap
findCategoryMethod__predefinedTypeAST__getInstanceMethodMap (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@predefinedTypeAST.getClassMethodMap'           *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__predefinedTypeAST__getClassMethodMap)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_classMethodMap  & var_cas_outClassMethodMap
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__predefinedTypeAST__getClassMethodMap (typeCategoryMethod__predefinedTypeAST__getClassMethodMap inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__predefinedTypeAST__getClassMethodMap
findCategoryMethod__predefinedTypeAST__getClassMethodMap (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@predefinedTypeAST.getSupportedOperatorFlags'       *
//                                                                           *
//---------------------------------------------------------------------------*

typedef GGS_uint  (*typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags (typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags
findCategoryReader__predefinedTypeAST__getSupportedOperatorFlags (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@predefinedTypeAST.getAddAssignArgumentList'        *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__predefinedTypeAST__getAddAssignArgumentList)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_unifiedTypeMapProxyList  & var_cas_outAddAssignArgumentList
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__predefinedTypeAST__getAddAssignArgumentList (typeCategoryMethod__predefinedTypeAST__getAddAssignArgumentList inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__predefinedTypeAST__getAddAssignArgumentList
findCategoryMethod__predefinedTypeAST__getAddAssignArgumentList (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@predefinedTypeAST.getNativeAttributeList'         *
//                                                                           *
//---------------------------------------------------------------------------*

typedef GGS_nativeAttributeList  (*typeCategoryReader__predefinedTypeAST__getNativeAttributeList)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__predefinedTypeAST__getNativeAttributeList (typeCategoryReader__predefinedTypeAST__getNativeAttributeList inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryReader__predefinedTypeAST__getNativeAttributeList
findCategoryReader__predefinedTypeAST__getNativeAttributeList (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@predefinedTypeAST.getEnumerationList'           *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__predefinedTypeAST__getEnumerationList)  (C_Compiler & inLexique,
                                const cPtr_predefinedTypeAST * inObjectPtr,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_enumerationDescriptorList  & var_cas_outEnumerationList
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__predefinedTypeAST__getEnumerationList (typeCategoryMethod__predefinedTypeAST__getEnumerationList inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__predefinedTypeAST__getEnumerationList
findCategoryMethod__predefinedTypeAST__getEnumerationList (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@unifiedTypeMapProxyList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_unifiedTypeMapProxyList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_unifiedTypeMapProxy  mType ;
//--- Constructor
  public : elementOf_GGS_unifiedTypeMapProxyList (const GGS_unifiedTypeMapProxy & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_unifiedTypeMapProxyList * nextObject (void) const { return (elementOf_GGS_unifiedTypeMapProxyList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_unifiedTypeMapProxyList * previousObject (void) const { return (elementOf_GGS_unifiedTypeMapProxyList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_unifiedTypeMapProxyList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@constructorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_constructorMap {
  public : GGS_unifiedTypeMapProxyList  mArgumentTypeList ;
  public : GGS_bool mHasCompilerArgument ;
  public : GGS_unifiedTypeMapProxy  mReturnedType ;

  public : e_constructorMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_constructorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_constructorMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_constructorMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_constructorMap * nextObject (void) const { return (elementOf_GGS_constructorMap *) mNextItem ; }
  public : inline elementOf_GGS_constructorMap * infObject (void) const { return (elementOf_GGS_constructorMap *) mInfPtr ; }
  public : inline elementOf_GGS_constructorMap * supObject (void) const { return (elementOf_GGS_constructorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_constructorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@readerMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_readerMap {
  public : GGS_unifiedTypeMapProxyList  mArgumentTypeList ;
  public : GGS_bool mHasCompilerArgument ;
  public : GGS_unifiedTypeMapProxy  mReturnedType ;
  public : GGS_readerQualifier mQualifier ;

  public : e_readerMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_readerMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_readerMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_readerMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_readerMap * nextObject (void) const { return (elementOf_GGS_readerMap *) mNextItem ; }
  public : inline elementOf_GGS_readerMap * infObject (void) const { return (elementOf_GGS_readerMap *) mInfPtr ; }
  public : inline elementOf_GGS_readerMap * supObject (void) const { return (elementOf_GGS_readerMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_readerMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@formalParameterSignature'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_formalParameterSignature : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_unifiedTypeMapProxy  mFormalArgumentType ;
  public : GGS_formalArgumentPassingModeAST mFormalArgumentPassingMode ;
//--- Constructor
  public : elementOf_GGS_formalParameterSignature (const GGS_unifiedTypeMapProxy & ,
                                const GGS_formalArgumentPassingModeAST& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_formalParameterSignature * nextObject (void) const { return (elementOf_GGS_formalParameterSignature *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_formalParameterSignature * previousObject (void) const { return (elementOf_GGS_formalParameterSignature *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_formalParameterSignature ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@modifierMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_modifierMap {
  public : GGS_formalParameterSignature  mParameterList ;
  public : GGS_bool mHasCompilerArgument ;
  public : GGS_readerQualifier mQualifier ;

  public : e_modifierMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_modifierMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_modifierMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_modifierMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_modifierMap * nextObject (void) const { return (elementOf_GGS_modifierMap *) mNextItem ; }
  public : inline elementOf_GGS_modifierMap * infObject (void) const { return (elementOf_GGS_modifierMap *) mInfPtr ; }
  public : inline elementOf_GGS_modifierMap * supObject (void) const { return (elementOf_GGS_modifierMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_modifierMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@instanceMethodMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_instanceMethodMap {
  public : GGS_formalParameterSignature  mParameterList ;
  public : GGS_location  mDeclarationLocation ;
  public : GGS_bool mHasCompilerArgument ;
  public : GGS_readerQualifier mQualifier ;

  public : e_instanceMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_instanceMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_instanceMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_instanceMethodMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_instanceMethodMap * nextObject (void) const { return (elementOf_GGS_instanceMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_instanceMethodMap * infObject (void) const { return (elementOf_GGS_instanceMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_instanceMethodMap * supObject (void) const { return (elementOf_GGS_instanceMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_instanceMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@classMethodMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_classMethodMap {
  public : GGS_formalParameterSignature  mParameterList ;
  public : GGS_bool mHasCompilerArgument ;

  public : e_classMethodMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_classMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_classMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_classMethodMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_classMethodMap * nextObject (void) const { return (elementOf_GGS_classMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_classMethodMap * infObject (void) const { return (elementOf_GGS_classMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_classMethodMap * supObject (void) const { return (elementOf_GGS_classMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_classMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@withAccessorMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_withAccessorMap {
  public : GGS_unifiedTypeMapProxy  mArgumentType ;

  public : e_withAccessorMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_withAccessorMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_withAccessorMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_withAccessorMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_withAccessorMap * nextObject (void) const { return (elementOf_GGS_withAccessorMap *) mNextItem ; }
  public : inline elementOf_GGS_withAccessorMap * infObject (void) const { return (elementOf_GGS_withAccessorMap *) mInfPtr ; }
  public : inline elementOf_GGS_withAccessorMap * supObject (void) const { return (elementOf_GGS_withAccessorMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_withAccessorMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@enumerationDescriptorList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumerationDescriptorList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_unifiedTypeMapProxy  mEnumeratedType ;
  public : GGS_string mEnumerationName ;
//--- Constructor
  public : elementOf_GGS_enumerationDescriptorList (const GGS_unifiedTypeMapProxy & ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_enumerationDescriptorList * nextObject (void) const { return (elementOf_GGS_enumerationDescriptorList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_enumerationDescriptorList * previousObject (void) const { return (elementOf_GGS_enumerationDescriptorList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_enumerationDescriptorList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@typedAttributeList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_typedAttributeList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_unifiedTypeMapProxy  mAttributeTypeIndex ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : elementOf_GGS_typedAttributeList (const GGS_unifiedTypeMapProxy & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_typedAttributeList * nextObject (void) const { return (elementOf_GGS_typedAttributeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_typedAttributeList * previousObject (void) const { return (elementOf_GGS_typedAttributeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_typedAttributeList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@nativeAttributeList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_nativeAttributeList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_string mCppClassName ;
  public : GGS_bool mIsPointer ;
  public : GGS_string mAttributeName ;
  public : GGS_bool mUseReferenceForConstructor ;
  public : GGS_string mGetterName ;
  public : GGS_string mDefaultValue ;
//--- Constructor
  public : elementOf_GGS_nativeAttributeList (const GGS_string& ,
                                const GGS_bool& ,
                                const GGS_string& ,
                                const GGS_bool& ,
                                const GGS_string& ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_nativeAttributeList * nextObject (void) const { return (elementOf_GGS_nativeAttributeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_nativeAttributeList * previousObject (void) const { return (elementOf_GGS_nativeAttributeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_nativeAttributeList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@attributeMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_attributeMap {
  public : GGS_unifiedTypeMapProxy  mAttributeType ;

  public : e_attributeMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_attributeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_attributeMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_attributeMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_attributeMap * nextObject (void) const { return (elementOf_GGS_attributeMap *) mNextItem ; }
  public : inline elementOf_GGS_attributeMap * infObject (void) const { return (elementOf_GGS_attributeMap *) mInfPtr ; }
  public : inline elementOf_GGS_attributeMap * supObject (void) const { return (elementOf_GGS_attributeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_attributeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@unifiedTypeMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_unifiedTypeMap {
  public : GGS_bool mIsConcrete ;
  public : GGS_unifiedTypeMapProxy  mSuperType ;
  public : GGS_typeKindEnum mTypeKindEnum ;
  public : GGS_typedAttributeList  mInheritedTypedAttributeList ;
  public : GGS_attributeMap  mAttributeMap ;
  public : GGS_typedAttributeList  mCurrentTypedAttributeList ;
  public : GGS_constructorMap  mConstructorMap ;
  public : GGS_readerMap  mReaderMap ;
  public : GGS_modifierMap  mModifierMap ;
  public : GGS_instanceMethodMap  mInstanceMethodMap ;
  public : GGS_classMethodMap  mClassMethodMap ;
  public : GGS_enumerationDescriptorList  mEnumerationDescriptor ;
  public : GGS_uint  mHandledOperatorFlags ;
  public : GGS_unifiedTypeMapProxyList  mAddAssignOperatorArguments ;
  public : GGS_nativeAttributeList  mNativeAttributeList ;
  public : GGS_lstringlist  mEnumConstantList ;
  public : GGS_typedAttributeList  mPrivateDataMemberList ;
  public : GGS_mapSearchMethodListAST  mMapSearchMethodList ;
  public : GGS_mapSearchMethodListAST  mMapProxySearchConstructorList ;
  public : GGS_withAccessorMap  mWithAccessorMap ;

  public : e_unifiedTypeMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_unifiedTypeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_unifiedTypeMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_unifiedTypeMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_unifiedTypeMap * nextObject (void) const { return (elementOf_GGS_unifiedTypeMap *) mNextItem ; }
  public : inline elementOf_GGS_unifiedTypeMap * infObject (void) const { return (elementOf_GGS_unifiedTypeMap *) mInfPtr ; }
  public : inline elementOf_GGS_unifiedTypeMap * supObject (void) const { return (elementOf_GGS_unifiedTypeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_unifiedTypeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_genericTypeTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_genericTypeTypeAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_genericTypeTypeAST (const GGS_string& ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_string mTypeName ;
  public : GGS_string mSuperTypeName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_predefinedTypeAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_predefinedTypeAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_predefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_string mPredefinedTypeName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_binarysetPredefinedTypeAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_binarysetPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_binarysetPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_boolPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_boolPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_boolPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_uintPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uintPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_uintPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_uint64PredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint64PredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_uint64PredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_sintPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sintPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_sintPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_sint64PredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint64PredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_sint64PredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_charPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_charPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_charPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_doublePredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_doublePredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_doublePredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_stringPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_stringPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_stringPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_locationPredefinedTypeAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_locationPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_locationPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_stringsetPredefinedTypeAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_stringsetPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_stringsetPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_objectPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_objectPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_objectPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_functionPredefinedTypeAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_functionPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_functionPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_typePredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typePredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_typePredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_dataPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_dataPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_dataPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

#endif
