//---------------------------------------------------------------------------*
//                                                                           *
//                   File 'include_C_classToImplement.h'                     *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 3rd, 2007, at 19h53'44"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_C_classToImplement'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_C_classToImplement : public cPtr_typeEntityToGenerate {
  private : typedef cPtr_typeEntityToGenerate inherited ;
//--- START OF USER ZONE 2

  public : virtual void
  generatePredeclarations (AC_OutputStream & inHfile) const ;

  public : virtual void
  generateHdeclarations (AC_OutputStream & inHfile) const ;

  public : virtual void
  generateHdeclarations_2 (AC_OutputStream & inHfile,
                           C_Compiler & inLexique) const ;

  public : virtual bool
  isCppClassNeeded (void) const ;

  public : virtual void
  generateCppClassDeclaration (AC_OutputStream & inHfile,
                               const C_String & inTargetFileName,
                               sint32 & /* ioPrototypeIndex */) const ;

  public : virtual void
  generateCppClassImplementation (AC_OutputStream & inCppFile,
                                  const C_String & inTargetFileName,
                                  sint32 & ioPrototypeIndex,
                                  const bool inGenerateDebug) const ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_C_classToImplement (const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_typeListeAttributsSemantiques & ,
                                const GGS_typeTableMethodes & ,
                                const GGS_typeTableMethodesAimplementer & ,
                                const GGS_typeListeAttributsSemantiques & ,
                                const GGS_typeSuperClassesMap & ,
                                const GGS_typeClassMessagesMap & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_C_classToImplement (void) {}
  #endif

//--- Attributes
  public : GGS_lstring  aNomClasse ;
  public : GGS_bool mIsAbstract ;
  public : GGS_typeListeAttributsSemantiques  aListeTousAttributsNonExternes ;
  public : GGS_typeTableMethodes  aTableToutesMethodes ;
  public : GGS_typeTableMethodesAimplementer  mMethodsMap ;
  public : GGS_typeListeAttributsSemantiques  aListeAttributsCourants ;
  public : GGS_typeSuperClassesMap  mAncestorClassesMap ;
  public : GGS_typeClassMessagesMap  mMessagesMap ;
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Compiler & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool isEqualToObject (const C_GGS_Object * inOperand) const ;
} ;

//---------------------------------------------------------------------------*

