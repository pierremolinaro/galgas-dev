//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticsSemanticsEX.h'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 10th, 2010, at 23h34'11"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsSemanticsEX_DEFINED
#define semanticsSemanticsEX_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "semanticsTypesEX.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_routineMapEX ;
class GGS_functionMapEX ;
class GGS_filewrapperTemplateMapEXX ;
class GGS_filewrapperMapEXX ;
class GGS_classIndexListEX ;
class GGS_descendantClassListMapEX ;
class GGS_semanticContextEX ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@routineMapEX'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_routineMapEX ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_routineMapEX ;

//---------------------------------------------------------------------------*

class GGS_routineMapEX : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_routineMapEX cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_routineMapEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_routineMapEX & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_routineMapEX castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_routineMapEX * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_routineMapEX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_routineMapEX constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_signature &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_signature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_signature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_signature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_routineMapEX constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_routineMapEX & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_routineMapEX reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_routineMapEX & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_routineMapEX & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_signature   & _mRoutineSignature (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@functionMapEX'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_functionMapEX ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_functionMapEX ;

//---------------------------------------------------------------------------*

class GGS_functionMapEX : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_functionMapEX cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_functionMapEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_functionMapEX & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_functionMapEX castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_functionMapEX * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_functionMapEX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_functionMapEX constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_signature &  inParameter0,
                                const GGS_typeMapIndex &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_signature   & outParameter0,
                                GGS_typeMapIndex   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_signature & inParameter0,
                                   const GGS_typeMapIndex & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_signature & outParameter0,
                                   GGS_typeMapIndex & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_functionMapEX constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_functionMapEX & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_functionMapEX reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_functionMapEX & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_functionMapEX & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_signature   & _mFunctionSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_typeMapIndex   & _mResultTypeIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@filewrapperTemplateMapEXX'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateMapEXX ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperTemplateMapEXX ;

//---------------------------------------------------------------------------*

class GGS_filewrapperTemplateMapEXX : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_filewrapperTemplateMapEXX cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_filewrapperTemplateMapEXX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_filewrapperTemplateMapEXX & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperTemplateMapEXX castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_filewrapperTemplateMapEXX * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_filewrapperTemplateMapEXX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_filewrapperTemplateMapEXX constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_signature &  inParameter0,
                                const GGS_lstring &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_signature   & outParameter0,
                                GGS_lstring   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_signature & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_signature & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_filewrapperTemplateMapEXX constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_filewrapperTemplateMapEXX & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_filewrapperTemplateMapEXX reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_filewrapperTemplateMapEXX & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_filewrapperTemplateMapEXX & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_signature   & _mTemplateSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mFilewrapperTemplatePath (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@filewrapperMapEXX'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperMapEXX ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperMapEXX ;

//---------------------------------------------------------------------------*

class GGS_filewrapperMapEXX : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_filewrapperMapEXX cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_filewrapperMapEXX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_filewrapperMapEXX & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperMapEXX castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_filewrapperMapEXX * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_filewrapperMapEXX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_filewrapperMapEXX constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0,
                                const GGS_lstringlist &  inParameter1,
                                const GGS_filewrapperTemplateMapEXX &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0,
                                GGS_lstringlist   & outParameter1,
                                GGS_filewrapperTemplateMapEXX   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   const GGS_lstringlist & inParameter1,
                                   const GGS_filewrapperTemplateMapEXX & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                   GGS_lstringlist & outParameter1,
                                   GGS_filewrapperTemplateMapEXX & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_filewrapperMapEXX constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_filewrapperMapEXX & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_filewrapperMapEXX reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_filewrapperMapEXX & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_filewrapperMapEXX & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mFilewrapperPath (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstringlist   & _mFilewrapperExtensionList (LOCATION_ARGS) const ;
    public : /* const */ GGS_filewrapperTemplateMapEXX   & _mFilewrapperTemplateMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@classIndexListEX'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classIndexListEX ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classIndexListEX ;

//---------------------------------------------------------------------------*

class GGS_classIndexListEX : public AC_galgas_list {
  public : typedef elementOf_GGS_classIndexListEX cElement ;

//--- Constructor 'emptyList'
  public : static GGS_classIndexListEX constructor_emptyList (void) ;
  public : static GGS_classIndexListEX constructor_listWithValue (const GGS_typeMapIndex & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_classIndexListEX & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_classIndexListEX
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_classIndexListEX
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_classIndexListEX * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_typeMapIndex & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_typeMapIndex & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_typeMapIndex & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_typeMapIndex & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_classIndexListEX inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_typeMapIndex & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_classIndexListEX operator_concat (const GGS_classIndexListEX & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_typeMapIndex & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_typeMapIndex & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_typeMapIndex & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_typeMapIndex 
  reader_mClassMapindexAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMClassMapindexAtIndex (C_Compiler & inLexique,
                              const GGS_typeMapIndex  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classIndexListEX castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_classIndexListEX & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_typeMapIndex   & _mClassMapindex (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Map list '@descendantClassListMapEX'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_descendantClassListMapEX ;

//---------------------------------------------------------------------------*

class GGS_descendantClassListMapEX : public AC_galgas_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_classIndexListEX mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_descendantClassListMapEX
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_descendantClassListMapEX inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_descendantClassListMapEX operator_concat (const GGS_descendantClassListMapEX & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_typeMapIndex & inAttribute0) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_classIndexListEX
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_descendantClassListMapEX & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_classIndexListEX & _object (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_descendantClassListMapEX castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@routineMapEX'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_routineMapEX {
  public : GGS_signature  mRoutineSignature ;

  public : e_routineMapEX (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_routineMapEX : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_routineMapEX (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_routineMapEX & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_routineMapEX * nextObject (void) const { return (elementOf_GGS_routineMapEX *) mNextItem ; }
  public : inline elementOf_GGS_routineMapEX * infObject (void) const { return (elementOf_GGS_routineMapEX *) mInfPtr ; }
  public : inline elementOf_GGS_routineMapEX * supObject (void) const { return (elementOf_GGS_routineMapEX *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_routineMapEX mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@functionMapEX'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_functionMapEX {
  public : GGS_signature  mFunctionSignature ;
  public : GGS_typeMapIndex  mResultTypeIndex ;

  public : e_functionMapEX (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_functionMapEX : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_functionMapEX (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_functionMapEX & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_functionMapEX * nextObject (void) const { return (elementOf_GGS_functionMapEX *) mNextItem ; }
  public : inline elementOf_GGS_functionMapEX * infObject (void) const { return (elementOf_GGS_functionMapEX *) mInfPtr ; }
  public : inline elementOf_GGS_functionMapEX * supObject (void) const { return (elementOf_GGS_functionMapEX *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_functionMapEX mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@filewrapperTemplateMapEXX'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_filewrapperTemplateMapEXX {
  public : GGS_signature  mTemplateSignature ;
  public : GGS_lstring  mFilewrapperTemplatePath ;

  public : e_filewrapperTemplateMapEXX (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateMapEXX : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_filewrapperTemplateMapEXX (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_filewrapperTemplateMapEXX & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_filewrapperTemplateMapEXX * nextObject (void) const { return (elementOf_GGS_filewrapperTemplateMapEXX *) mNextItem ; }
  public : inline elementOf_GGS_filewrapperTemplateMapEXX * infObject (void) const { return (elementOf_GGS_filewrapperTemplateMapEXX *) mInfPtr ; }
  public : inline elementOf_GGS_filewrapperTemplateMapEXX * supObject (void) const { return (elementOf_GGS_filewrapperTemplateMapEXX *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_filewrapperTemplateMapEXX mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@filewrapperMapEXX'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_filewrapperMapEXX {
  public : GGS_lstring  mFilewrapperPath ;
  public : GGS_lstringlist  mFilewrapperExtensionList ;
  public : GGS_filewrapperTemplateMapEXX  mFilewrapperTemplateMap ;

  public : e_filewrapperMapEXX (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperMapEXX : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_filewrapperMapEXX (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_filewrapperMapEXX & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_filewrapperMapEXX * nextObject (void) const { return (elementOf_GGS_filewrapperMapEXX *) mNextItem ; }
  public : inline elementOf_GGS_filewrapperMapEXX * infObject (void) const { return (elementOf_GGS_filewrapperMapEXX *) mInfPtr ; }
  public : inline elementOf_GGS_filewrapperMapEXX * supObject (void) const { return (elementOf_GGS_filewrapperMapEXX *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_filewrapperMapEXX mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@classIndexListEX'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classIndexListEX : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_typeMapIndex  mClassMapindex ;
//--- Constructor
  public : elementOf_GGS_classIndexListEX (const GGS_typeMapIndex & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_classIndexListEX * nextObject (void) const { return (elementOf_GGS_classIndexListEX *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_classIndexListEX * previousObject (void) const { return (elementOf_GGS_classIndexListEX *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_classIndexListEX ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Declarations for 'semanticContextEX' struct                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticContextEX ;

//---------------------------------------------------------------------------*

class GGS_semanticContextEX : public GGS__root {
//--- Default constructor
  public : GGS_semanticContextEX (void) ;

//--- Virtual destructor
  public : virtual ~GGS_semanticContextEX (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_semanticContextEX * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_semanticContextEX * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_semanticContextEX & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_semanticContextEX & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticContextEX castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_semanticContextEX constructor_new (const GGS_typeMap & argument_0,
                 const GGS_routineMapEX & argument_1,
                 const GGS_functionMapEX & argument_2,
                 const GGS_descendantClassListMapEX& argument_3,
                 const GGS_filewrapperMapEXX & argument_4) ;

//--- Readers
  public : inline GGS_typeMap 
  reader_mTypeMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mTypeMap ;
  }

  public : inline GGS_routineMapEX 
  reader_mRoutineMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mRoutineMap ;
  }

  public : inline GGS_functionMapEX 
  reader_mFunctionMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mFunctionMap ;
  }

  public : inline GGS_descendantClassListMapEX
  reader_mDescendantClassListMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mDescendantClassListMap ;
  }

  public : inline GGS_filewrapperMapEXX 
  reader_mFilewrapperMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mFilewrapperMap ;
  }

//--- Attributes
  public : GGS_typeMap  mTypeMap ;
  public : GGS_routineMapEX  mRoutineMap ;
  public : GGS_functionMapEX  mFunctionMap ;
  public : GGS_descendantClassListMapEX mDescendantClassListMap ;
  public : GGS_filewrapperMapEXX  mFilewrapperMap ;
} ;

//---------------------------------------------------------------------------*

#endif
