//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'guiGrammar.cpp'                            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       july 6th, 2009, at 15h35'29"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"

//---------------------------------------------------------------------------*

#include "guiGrammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "guiGrammar.gGrammar", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                  N O N    T E R M I N A L    N A M E S                    *
//                                                                           *
//---------------------------------------------------------------------------*

static const char * gNonTerminalNames [10] = {
  "<gui_component_start_symbol>",// Index 0
  "<select_repeat_guiModelBuilder_0>",// Index 1
  "<select_guiModelBuilder_1>",// Index 2
  "<select_repeat_guiModelBuilder_2>",// Index 3
  "<select_repeat_guiModelBuilder_3>",// Index 4
  "<select_repeat_guiModelBuilder_4>",// Index 5
  "<select_repeat_guiModelBuilder_5>",// Index 6
  "<select_repeat_guiModelBuilder_6>",// Index 7
  "<select_repeat_guiModelBuilder_7>",// Index 8
  "<>"// Index 9
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           S L R    A N A L Y Z E R    A C T I O N    T A B L E            *
//                                                                           *
//---------------------------------------------------------------------------*

// Action tables handle shift and reduce actions ;
//  - a shift action is (terminal_symbol, SHIFT (n)) : if shifts to state n ;
//  - the accept action is (terminal_symbol, ACCEPT) ;
//  - a reduce action is (terminal_symbol, REDUCE (n)) ; if reduces to state n.

#define SHIFT(a) ((a) + 2)
#define REDUCE(a) (-(a) - 1)
#define ACCEPT (1)
#define END (-1)

static const sint16 gActionTable [] = {
// State S0 (index = 0)
  galgas_scanner::galgas_scanner_1_gui, SHIFT (1)
, END
// State S1 (index = 3)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (3)
, END
// State S2 (index = 6)
, galgas_scanner::galgas_scanner_1_, ACCEPT
, END
// State S3 (index = 9)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (4)
, END
// State S4 (index = 12)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (5)
, END
// State S5 (index = 15)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (1)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, galgas_scanner::galgas_scanner_1_import, SHIFT (6)
, galgas_scanner::galgas_scanner_1_import_5F__5F_, SHIFT (7)
, galgas_scanner::galgas_scanner_1_label, REDUCE (1)
, galgas_scanner::galgas_scanner_1_with, REDUCE (1)
, END
// State S6 (index = 28)
, galgas_scanner::galgas_scanner_1_grammar, SHIFT (9)
, galgas_scanner::galgas_scanner_1_lexique, SHIFT (10)
, galgas_scanner::galgas_scanner_1_option, SHIFT (11)
, galgas_scanner::galgas_scanner_1_semantics, SHIFT (12)
, galgas_scanner::galgas_scanner_1_syntax, SHIFT (13)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (14)
, END
// State S7 (index = 41)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (16)
, END
// State S8 (index = 44)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (17)
, galgas_scanner::galgas_scanner_1_end, REDUCE (10)
, galgas_scanner::galgas_scanner_1_label, SHIFT (18)
, galgas_scanner::galgas_scanner_1_with, SHIFT (19)
, END
// State S9 (index = 53)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (7)
, END
// State S10 (index = 56)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (6)
, END
// State S11 (index = 59)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (9)
, END
// State S12 (index = 62)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (5)
, END
// State S13 (index = 65)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (8)
, END
// State S14 (index = 68)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (21)
, END
// State S15 (index = 71)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (22)
, END
// State S16 (index = 74)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (23)
, END
// State S17 (index = 77)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (24)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (25)
, END
// State S18 (index = 82)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (26)
, END
// State S19 (index = 85)
, galgas_scanner::galgas_scanner_1_lexique, SHIFT (27)
, END
// State S20 (index = 88)
, galgas_scanner::galgas_scanner_1_end, SHIFT (28)
, END
// State S21 (index = 91)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (1)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, galgas_scanner::galgas_scanner_1_import, SHIFT (6)
, galgas_scanner::galgas_scanner_1_import_5F__5F_, SHIFT (7)
, galgas_scanner::galgas_scanner_1_label, REDUCE (1)
, galgas_scanner::galgas_scanner_1_with, REDUCE (1)
, END
// State S22 (index = 104)
, galgas_scanner::galgas_scanner_1_in, SHIFT (30)
, END
// State S23 (index = 107)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (1)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, galgas_scanner::galgas_scanner_1_import, SHIFT (6)
, galgas_scanner::galgas_scanner_1_import_5F__5F_, SHIFT (7)
, galgas_scanner::galgas_scanner_1_label, REDUCE (1)
, galgas_scanner::galgas_scanner_1_with, REDUCE (1)
, END
// State S24 (index = 120)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (32)
, END
// State S25 (index = 123)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (33)
, END
// State S26 (index = 126)
, galgas_scanner::galgas_scanner_1__2C_, SHIFT (34)
, END
// State S27 (index = 129)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (35)
, END
// State S28 (index = 132)
, galgas_scanner::galgas_scanner_1_gui, SHIFT (36)
, END
// State S29 (index = 135)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (2)
, galgas_scanner::galgas_scanner_1_end, REDUCE (2)
, galgas_scanner::galgas_scanner_1_label, REDUCE (2)
, galgas_scanner::galgas_scanner_1_with, REDUCE (2)
, END
// State S30 (index = 144)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (37)
, END
// State S31 (index = 147)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (3)
, galgas_scanner::galgas_scanner_1_end, REDUCE (3)
, galgas_scanner::galgas_scanner_1_label, REDUCE (3)
, galgas_scanner::galgas_scanner_1_with, REDUCE (3)
, END
// State S32 (index = 156)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (17)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (38)
, END
// State S33 (index = 161)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (40)
, END
// State S34 (index = 164)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (41)
, END
// State S35 (index = 167)
, galgas_scanner::galgas_scanner_1__7B_, SHIFT (42)
, END
// State S36 (index = 170)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (43)
, END
// State S37 (index = 173)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (44)
, END
// State S38 (index = 176)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (17)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (38)
, END
// State S39 (index = 181)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (46)
, END
// State S40 (index = 184)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (15)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (47)
, END
// State S41 (index = 189)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (49)
, END
// State S42 (index = 192)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (50)
, galgas_scanner::galgas_scanner_1_label, SHIFT (51)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (19)
, END
// State S43 (index = 199)
, galgas_scanner::galgas_scanner_1_, REDUCE (0)
, END
// State S44 (index = 202)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (1)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, galgas_scanner::galgas_scanner_1_import, SHIFT (6)
, galgas_scanner::galgas_scanner_1_import_5F__5F_, SHIFT (7)
, galgas_scanner::galgas_scanner_1_label, REDUCE (1)
, galgas_scanner::galgas_scanner_1_with, REDUCE (1)
, END
// State S45 (index = 215)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (18)
, END
// State S46 (index = 218)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (17)
, galgas_scanner::galgas_scanner_1_end, REDUCE (10)
, galgas_scanner::galgas_scanner_1_label, SHIFT (18)
, galgas_scanner::galgas_scanner_1_with, SHIFT (19)
, END
// State S47 (index = 227)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (15)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (47)
, END
// State S48 (index = 232)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (56)
, END
// State S49 (index = 235)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (17)
, galgas_scanner::galgas_scanner_1_end, REDUCE (10)
, galgas_scanner::galgas_scanner_1_label, SHIFT (18)
, galgas_scanner::galgas_scanner_1_with, SHIFT (19)
, END
// State S50 (index = 244)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (58)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (59)
, END
// State S51 (index = 249)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (60)
, END
// State S52 (index = 252)
, galgas_scanner::galgas_scanner_1__7D_, SHIFT (61)
, END
// State S53 (index = 255)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (4)
, galgas_scanner::galgas_scanner_1_end, REDUCE (4)
, galgas_scanner::galgas_scanner_1_label, REDUCE (4)
, galgas_scanner::galgas_scanner_1_with, REDUCE (4)
, END
// State S54 (index = 264)
, galgas_scanner::galgas_scanner_1_end, REDUCE (12)
, END
// State S55 (index = 267)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (16)
, END
// State S56 (index = 270)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (17)
, galgas_scanner::galgas_scanner_1_end, REDUCE (10)
, galgas_scanner::galgas_scanner_1_label, SHIFT (18)
, galgas_scanner::galgas_scanner_1_with, SHIFT (19)
, END
// State S57 (index = 279)
, galgas_scanner::galgas_scanner_1_end, REDUCE (13)
, END
// State S58 (index = 282)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (63)
, END
// State S59 (index = 285)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (64)
, END
// State S60 (index = 288)
, galgas_scanner::galgas_scanner_1__2C_, SHIFT (65)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (23)
, END
// State S61 (index = 293)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (17)
, galgas_scanner::galgas_scanner_1_end, REDUCE (10)
, galgas_scanner::galgas_scanner_1_label, SHIFT (18)
, galgas_scanner::galgas_scanner_1_with, SHIFT (19)
, END
// State S62 (index = 302)
, galgas_scanner::galgas_scanner_1_end, REDUCE (11)
, END
// State S63 (index = 305)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (68)
, END
// State S64 (index = 308)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (69)
, END
// State S65 (index = 311)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (70)
, END
// State S66 (index = 314)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (71)
, END
// State S67 (index = 317)
, galgas_scanner::galgas_scanner_1_end, REDUCE (14)
, END
// State S68 (index = 320)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (50)
, galgas_scanner::galgas_scanner_1_label, SHIFT (51)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (19)
, END
// State S69 (index = 327)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (25)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (73)
, END
// State S70 (index = 332)
, galgas_scanner::galgas_scanner_1__2C_, SHIFT (65)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (23)
, END
// State S71 (index = 337)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (50)
, galgas_scanner::galgas_scanner_1_label, SHIFT (51)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (19)
, END
// State S72 (index = 344)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (22)
, END
// State S73 (index = 347)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (25)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (73)
, END
// State S74 (index = 352)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (78)
, END
// State S75 (index = 355)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (24)
, END
// State S76 (index = 358)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (20)
, END
// State S77 (index = 361)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (26)
, END
// State S78 (index = 364)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (50)
, galgas_scanner::galgas_scanner_1_label, SHIFT (51)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (19)
, END
// State S79 (index = 371)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (21)
, END} ;

static const uint32 gActionTableIndex [80] = {
  0  // S0
, 3  // S1
, 6  // S2
, 9  // S3
, 12  // S4
, 15  // S5
, 28  // S6
, 41  // S7
, 44  // S8
, 53  // S9
, 56  // S10
, 59  // S11
, 62  // S12
, 65  // S13
, 68  // S14
, 71  // S15
, 74  // S16
, 77  // S17
, 82  // S18
, 85  // S19
, 88  // S20
, 91  // S21
, 104  // S22
, 107  // S23
, 120  // S24
, 123  // S25
, 126  // S26
, 129  // S27
, 132  // S28
, 135  // S29
, 144  // S30
, 147  // S31
, 156  // S32
, 161  // S33
, 164  // S34
, 167  // S35
, 170  // S36
, 173  // S37
, 176  // S38
, 181  // S39
, 184  // S40
, 189  // S41
, 192  // S42
, 199  // S43
, 202  // S44
, 215  // S45
, 218  // S46
, 227  // S47
, 232  // S48
, 235  // S49
, 244  // S50
, 249  // S51
, 252  // S52
, 255  // S53
, 264  // S54
, 267  // S55
, 270  // S56
, 279  // S57
, 282  // S58
, 285  // S59
, 288  // S60
, 293  // S61
, 302  // S62
, 305  // S63
, 308  // S64
, 311  // S65
, 314  // S66
, 317  // S67
, 320  // S68
, 327  // S69
, 332  // S70
, 337  // S71
, 344  // S72
, 347  // S73
, 352  // S74
, 355  // S75
, 358  // S76
, 361  // S77
, 364  // S78
, 371  // S79
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       SLR states successors table                         *
//                                                                           *
//---------------------------------------------------------------------------*

// Successor tables handle non terminal successors ;
// an entry is (non_terminal_symbol, n) ; successor is state n.

static const sint16 gSuccessorTable0 [3] = {0, 2, -1} ;

static const sint16 gSuccessorTable5 [3] = {1, 8, -1} ;

static const sint16 gSuccessorTable6 [3] = {2, 15, -1} ;

static const sint16 gSuccessorTable8 [3] = {3, 20, -1} ;

static const sint16 gSuccessorTable21 [3] = {1, 29, -1} ;

static const sint16 gSuccessorTable23 [3] = {1, 31, -1} ;

static const sint16 gSuccessorTable32 [3] = {5, 39, -1} ;

static const sint16 gSuccessorTable38 [3] = {5, 45, -1} ;

static const sint16 gSuccessorTable40 [3] = {4, 48, -1} ;

static const sint16 gSuccessorTable42 [3] = {6, 52, -1} ;

static const sint16 gSuccessorTable44 [3] = {1, 53, -1} ;

static const sint16 gSuccessorTable46 [3] = {3, 54, -1} ;

static const sint16 gSuccessorTable47 [3] = {4, 55, -1} ;

static const sint16 gSuccessorTable49 [3] = {3, 57, -1} ;

static const sint16 gSuccessorTable56 [3] = {3, 62, -1} ;

static const sint16 gSuccessorTable60 [3] = {7, 66, -1} ;

static const sint16 gSuccessorTable61 [3] = {3, 67, -1} ;

static const sint16 gSuccessorTable68 [3] = {6, 72, -1} ;

static const sint16 gSuccessorTable69 [3] = {8, 74, -1} ;

static const sint16 gSuccessorTable70 [3] = {7, 75, -1} ;

static const sint16 gSuccessorTable71 [3] = {6, 76, -1} ;

static const sint16 gSuccessorTable73 [3] = {8, 77, -1} ;

static const sint16 gSuccessorTable78 [3] = {6, 79, -1} ;

static const sint16 * gSuccessorTable [80] = {
gSuccessorTable0, NULL, NULL, NULL, 
  NULL, gSuccessorTable5, gSuccessorTable6, NULL, 
  gSuccessorTable8, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable21, NULL, gSuccessorTable23, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable32, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable38, NULL, 
  gSuccessorTable40, NULL, gSuccessorTable42, NULL, 
  gSuccessorTable44, NULL, gSuccessorTable46, gSuccessorTable47, 
  NULL, gSuccessorTable49, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable56, NULL, NULL, NULL, 
  gSuccessorTable60, gSuccessorTable61, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable68, gSuccessorTable69, gSuccessorTable70, gSuccessorTable71, 
  NULL, gSuccessorTable73, NULL, NULL, 
  NULL, NULL, gSuccessorTable78, NULL} ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Production rules infos (left non terminal, size of right string)      *
//                                                                           *
//---------------------------------------------------------------------------*

static const sint16 gProductionsTable [28 * 2] = {
0, 9,
  1, 0,
  1, 4,
  1, 4,
  1, 7,
  2, 1,
  2, 1,
  2, 1,
  2, 1,
  2, 1,
  3, 0,
  3, 7,
  3, 6,
  3, 6,
  3, 7,
  4, 0,
  4, 2,
  5, 0,
  5, 2,
  6, 0,
  6, 5,
  6, 7,
  6, 5,
  7, 0,
  7, 3,
  8, 0,
  8, 2,
  9, 1} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         'gui_component_start_symbol' non terminal implementation          *
//                                                                           *
//---------------------------------------------------------------------------*

void guiGrammar::
nt_gui_component_start_symbol_ (galgas_scanner & inLexique,
                                GGS_guiComponentRoot & parameter_1) {
  switch (inLexique.nextProductionIndex ()) {
  case 0 :
    pr_gui_component_start_symbol_guiModelBuilder_35_33_ (inLexique, parameter_1) ;
    break ;
  default :
    inLexique.internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Grammar start symbol implementation                     *
//                                                                           *
//---------------------------------------------------------------------------*

void guiGrammar::_performSourceFileParsing_ (C_Compiler & _inCompiler,
                                const C_String & _inDependancyExtension,
                                const C_String & _inDependancyPath,
                                GGS_string * _inSentStringPtr,
                                const GGS_lstring _inFileName,
                                GGS_guiComponentRoot & parameter_1
                                COMMA_LOCATION_ARGS) {
  const C_String sourceFileName = _inFileName.string ().isAbsolutePath ()
    ? _inFileName.string ()
    : _inCompiler.sourceFileName ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (_inFileName.string ()) ;
  if (sourceFileName.fileExists ()) {
    galgas_scanner * scanner_ = NULL ;
    macroMyNew (scanner_, galgas_scanner (& _inCompiler, _inDependancyExtension, _inDependancyPath, _inCompiler.ioParametersPtr (), sourceFileName COMMA_HERE)) ;
    if (scanner_->needsCompiling ()) {
      if (scanner_->sourceText () != NULL) {
        scanner_->mPerformGeneration = _inCompiler.mPerformGeneration ;
        const bool ok = scanner_->performBottomUpParsing (gActionTable, gNonTerminalNames,
                                                          gActionTableIndex, gSuccessorTable,
                                                          gProductionsTable) ;
        if (ok && ! scanner_->mParseOnlyFlag) {
          guiGrammar _grammar ;
          _grammar.nt_gui_component_start_symbol_ (*scanner_, parameter_1) ;
          if (_inSentStringPtr != NULL) {
            _inSentStringPtr->dotAssign_operation (scanner_->sentString ()) ;
          }
        }
      }else{
        C_String message ;
        message << "the '" << sourceFileName << "' file exits, but cannot be read" ;
        _inFileName.signalSemanticError (_inCompiler, message COMMA_THERE) ;
      parameter_1.drop () ;
      }
    }
    macroDetachPointer (scanner_, galgas_scanner) ;
  }else{
    C_String message ;
    message << "the '" << sourceFileName << "' file does not exist" ;
    _inFileName.signalSemanticError (_inCompiler, message COMMA_THERE) ;
    parameter_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void guiGrammar::_performSourceStringParsing_ (C_Compiler & _inCompiler,
                                GGS_string * _inSentStringPtr,
                                const GGS_string _inSourceString,
                                GGS_guiComponentRoot & parameter_1
                                COMMA_UNUSED_LOCATION_ARGS) {
  galgas_scanner * scanner_ = NULL ;
  macroMyNew (scanner_, galgas_scanner (& _inCompiler, _inCompiler.ioParametersPtr (), _inSourceString.string (), "Error when parsing dynamic string" COMMA_HERE)) ;
  if (scanner_->sourceText () != NULL) {
    scanner_->mPerformGeneration = _inCompiler.mPerformGeneration ;
    const bool ok = scanner_->performBottomUpParsing (gActionTable, gNonTerminalNames,
                                                      gActionTableIndex, gSuccessorTable,
                                                      gProductionsTable) ;
    if (ok && ! scanner_->mParseOnlyFlag) {
      guiGrammar _grammar ;
      _grammar.nt_gui_component_start_symbol_ (*scanner_, parameter_1) ;
      if (_inSentStringPtr != NULL) {
        _inSentStringPtr->dotAssign_operation (scanner_->sentString ()) ;
      }
    }
  }
  macroDetachPointer (scanner_, galgas_scanner) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_0' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_0 (galgas_scanner & inLexique) {
// Productions numbers : 1 2 3 4
  return (sint16) (inLexique.nextProductionIndex () - 0) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          'select_guiModelBuilder_1' non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_guiModelBuilder_1 (galgas_scanner & inLexique) {
// Productions numbers : 5 6 7 8 9
  return (sint16) (inLexique.nextProductionIndex () - 4) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_2' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_2 (galgas_scanner & inLexique) {
// Productions numbers : 10 11 12 13 14
  return (sint16) (inLexique.nextProductionIndex () - 9) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_3' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_3 (galgas_scanner & inLexique) {
// Productions numbers : 15 16
  return (sint16) (inLexique.nextProductionIndex () - 14) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_4' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_4 (galgas_scanner & inLexique) {
// Productions numbers : 17 18
  return (sint16) (inLexique.nextProductionIndex () - 16) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_5' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_5 (galgas_scanner & inLexique) {
// Productions numbers : 19 20 21 22
  return (sint16) (inLexique.nextProductionIndex () - 18) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_6' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_6 (galgas_scanner & inLexique) {
// Productions numbers : 23 24
  return (sint16) (inLexique.nextProductionIndex () - 22) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_7' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_7 (galgas_scanner & inLexique) {
// Productions numbers : 25 26
  return (sint16) (inLexique.nextProductionIndex () - 24) ;
}

//---------------------------------------------------------------------------*

