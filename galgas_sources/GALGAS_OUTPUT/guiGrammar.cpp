//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'guiGrammar.cpp'                            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       july 2nd, 2009, at 12h41'8"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"

//---------------------------------------------------------------------------*

#include "guiGrammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "guiGrammar.gGrammar", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                  N O N    T E R M I N A L    N A M E S                    *
//                                                                           *
//---------------------------------------------------------------------------*

static const char * gNonTerminalNames [10] = {
  "<gui_component_start_symbol>",// Index 0
  "<select_repeat_guiModelBuilder_0>",// Index 1
  "<select_guiModelBuilder_1>",// Index 2
  "<select_repeat_guiModelBuilder_2>",// Index 3
  "<select_repeat_guiModelBuilder_3>",// Index 4
  "<select_repeat_guiModelBuilder_4>",// Index 5
  "<select_repeat_guiModelBuilder_5>",// Index 6
  "<select_repeat_guiModelBuilder_6>",// Index 7
  "<select_repeat_guiModelBuilder_7>",// Index 8
  "<>"// Index 9
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           S L R    A N A L Y Z E R    A C T I O N    T A B L E            *
//                                                                           *
//---------------------------------------------------------------------------*

// Action tables handle shift and reduce actions ;
//  - a shift action is (terminal_symbol, SHIFT (n)) : if shifts to state n ;
//  - the accept action is (terminal_symbol, ACCEPT) ;
//  - a reduce action is (terminal_symbol, REDUCE (n)) ; if reduces to state n.

#define SHIFT(a) ((a) + 2)
#define REDUCE(a) (-(a) - 1)
#define ACCEPT (1)
#define END (-1)

static const sint16 gActionTable [] = {
// State S0 (index = 0)
  galgas_scanner::galgas_scanner_1_gui, SHIFT (1)
, END
// State S1 (index = 3)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (3)
, END
// State S2 (index = 6)
, galgas_scanner::galgas_scanner_1_, ACCEPT
, END
// State S3 (index = 9)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (4)
, END
// State S4 (index = 12)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (5)
, END
// State S5 (index = 15)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (1)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, galgas_scanner::galgas_scanner_1_import, SHIFT (6)
, galgas_scanner::galgas_scanner_1_import_5F__5F_, SHIFT (7)
, galgas_scanner::galgas_scanner_1_label, REDUCE (1)
, galgas_scanner::galgas_scanner_1_with, REDUCE (1)
, END
// State S6 (index = 28)
, galgas_scanner::galgas_scanner_1_grammar, SHIFT (9)
, galgas_scanner::galgas_scanner_1_lexique, SHIFT (10)
, galgas_scanner::galgas_scanner_1_option, SHIFT (11)
, galgas_scanner::galgas_scanner_1_semantics, SHIFT (12)
, galgas_scanner::galgas_scanner_1_syntax, SHIFT (13)
, END
// State S7 (index = 39)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (15)
, END
// State S8 (index = 42)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (16)
, galgas_scanner::galgas_scanner_1_end, REDUCE (9)
, galgas_scanner::galgas_scanner_1_label, SHIFT (17)
, galgas_scanner::galgas_scanner_1_with, SHIFT (18)
, END
// State S9 (index = 51)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (6)
, END
// State S10 (index = 54)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (5)
, END
// State S11 (index = 57)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (8)
, END
// State S12 (index = 60)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (4)
, END
// State S13 (index = 63)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (7)
, END
// State S14 (index = 66)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (20)
, END
// State S15 (index = 69)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (21)
, END
// State S16 (index = 72)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (22)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (23)
, END
// State S17 (index = 77)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (24)
, END
// State S18 (index = 80)
, galgas_scanner::galgas_scanner_1_lexique, SHIFT (25)
, END
// State S19 (index = 83)
, galgas_scanner::galgas_scanner_1_end, SHIFT (26)
, END
// State S20 (index = 86)
, galgas_scanner::galgas_scanner_1_in, SHIFT (27)
, END
// State S21 (index = 89)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (1)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, galgas_scanner::galgas_scanner_1_import, SHIFT (6)
, galgas_scanner::galgas_scanner_1_import_5F__5F_, SHIFT (7)
, galgas_scanner::galgas_scanner_1_label, REDUCE (1)
, galgas_scanner::galgas_scanner_1_with, REDUCE (1)
, END
// State S22 (index = 102)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (29)
, END
// State S23 (index = 105)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (30)
, END
// State S24 (index = 108)
, galgas_scanner::galgas_scanner_1__2C_, SHIFT (31)
, END
// State S25 (index = 111)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (32)
, END
// State S26 (index = 114)
, galgas_scanner::galgas_scanner_1_gui, SHIFT (33)
, END
// State S27 (index = 117)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (34)
, END
// State S28 (index = 120)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (2)
, galgas_scanner::galgas_scanner_1_end, REDUCE (2)
, galgas_scanner::galgas_scanner_1_label, REDUCE (2)
, galgas_scanner::galgas_scanner_1_with, REDUCE (2)
, END
// State S29 (index = 129)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (16)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (35)
, END
// State S30 (index = 134)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (37)
, END
// State S31 (index = 137)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (38)
, END
// State S32 (index = 140)
, galgas_scanner::galgas_scanner_1__7B_, SHIFT (39)
, END
// State S33 (index = 143)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (40)
, END
// State S34 (index = 146)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (41)
, END
// State S35 (index = 149)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (16)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (35)
, END
// State S36 (index = 154)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (43)
, END
// State S37 (index = 157)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (14)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (44)
, END
// State S38 (index = 162)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (46)
, END
// State S39 (index = 165)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (47)
, galgas_scanner::galgas_scanner_1_label, SHIFT (48)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (18)
, END
// State S40 (index = 172)
, galgas_scanner::galgas_scanner_1_, REDUCE (0)
, END
// State S41 (index = 175)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (1)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, galgas_scanner::galgas_scanner_1_import, SHIFT (6)
, galgas_scanner::galgas_scanner_1_import_5F__5F_, SHIFT (7)
, galgas_scanner::galgas_scanner_1_label, REDUCE (1)
, galgas_scanner::galgas_scanner_1_with, REDUCE (1)
, END
// State S42 (index = 188)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (17)
, END
// State S43 (index = 191)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (16)
, galgas_scanner::galgas_scanner_1_end, REDUCE (9)
, galgas_scanner::galgas_scanner_1_label, SHIFT (17)
, galgas_scanner::galgas_scanner_1_with, SHIFT (18)
, END
// State S44 (index = 200)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (14)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (44)
, END
// State S45 (index = 205)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (53)
, END
// State S46 (index = 208)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (16)
, galgas_scanner::galgas_scanner_1_end, REDUCE (9)
, galgas_scanner::galgas_scanner_1_label, SHIFT (17)
, galgas_scanner::galgas_scanner_1_with, SHIFT (18)
, END
// State S47 (index = 217)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (55)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (56)
, END
// State S48 (index = 222)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (57)
, END
// State S49 (index = 225)
, galgas_scanner::galgas_scanner_1__7D_, SHIFT (58)
, END
// State S50 (index = 228)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (3)
, galgas_scanner::galgas_scanner_1_end, REDUCE (3)
, galgas_scanner::galgas_scanner_1_label, REDUCE (3)
, galgas_scanner::galgas_scanner_1_with, REDUCE (3)
, END
// State S51 (index = 237)
, galgas_scanner::galgas_scanner_1_end, REDUCE (11)
, END
// State S52 (index = 240)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (15)
, END
// State S53 (index = 243)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (16)
, galgas_scanner::galgas_scanner_1_end, REDUCE (9)
, galgas_scanner::galgas_scanner_1_label, SHIFT (17)
, galgas_scanner::galgas_scanner_1_with, SHIFT (18)
, END
// State S54 (index = 252)
, galgas_scanner::galgas_scanner_1_end, REDUCE (12)
, END
// State S55 (index = 255)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (60)
, END
// State S56 (index = 258)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (61)
, END
// State S57 (index = 261)
, galgas_scanner::galgas_scanner_1__2C_, SHIFT (62)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (22)
, END
// State S58 (index = 266)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (16)
, galgas_scanner::galgas_scanner_1_end, REDUCE (9)
, galgas_scanner::galgas_scanner_1_label, SHIFT (17)
, galgas_scanner::galgas_scanner_1_with, SHIFT (18)
, END
// State S59 (index = 275)
, galgas_scanner::galgas_scanner_1_end, REDUCE (10)
, END
// State S60 (index = 278)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (65)
, END
// State S61 (index = 281)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (66)
, END
// State S62 (index = 284)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (67)
, END
// State S63 (index = 287)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (68)
, END
// State S64 (index = 290)
, galgas_scanner::galgas_scanner_1_end, REDUCE (13)
, END
// State S65 (index = 293)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (47)
, galgas_scanner::galgas_scanner_1_label, SHIFT (48)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (18)
, END
// State S66 (index = 300)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (24)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (70)
, END
// State S67 (index = 305)
, galgas_scanner::galgas_scanner_1__2C_, SHIFT (62)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (22)
, END
// State S68 (index = 310)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (47)
, galgas_scanner::galgas_scanner_1_label, SHIFT (48)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (18)
, END
// State S69 (index = 317)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (21)
, END
// State S70 (index = 320)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (24)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (70)
, END
// State S71 (index = 325)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (75)
, END
// State S72 (index = 328)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (23)
, END
// State S73 (index = 331)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (19)
, END
// State S74 (index = 334)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (25)
, END
// State S75 (index = 337)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (47)
, galgas_scanner::galgas_scanner_1_label, SHIFT (48)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (18)
, END
// State S76 (index = 344)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (20)
, END} ;

static const uint32 gActionTableIndex [77] = {
  0  // S0
, 3  // S1
, 6  // S2
, 9  // S3
, 12  // S4
, 15  // S5
, 28  // S6
, 39  // S7
, 42  // S8
, 51  // S9
, 54  // S10
, 57  // S11
, 60  // S12
, 63  // S13
, 66  // S14
, 69  // S15
, 72  // S16
, 77  // S17
, 80  // S18
, 83  // S19
, 86  // S20
, 89  // S21
, 102  // S22
, 105  // S23
, 108  // S24
, 111  // S25
, 114  // S26
, 117  // S27
, 120  // S28
, 129  // S29
, 134  // S30
, 137  // S31
, 140  // S32
, 143  // S33
, 146  // S34
, 149  // S35
, 154  // S36
, 157  // S37
, 162  // S38
, 165  // S39
, 172  // S40
, 175  // S41
, 188  // S42
, 191  // S43
, 200  // S44
, 205  // S45
, 208  // S46
, 217  // S47
, 222  // S48
, 225  // S49
, 228  // S50
, 237  // S51
, 240  // S52
, 243  // S53
, 252  // S54
, 255  // S55
, 258  // S56
, 261  // S57
, 266  // S58
, 275  // S59
, 278  // S60
, 281  // S61
, 284  // S62
, 287  // S63
, 290  // S64
, 293  // S65
, 300  // S66
, 305  // S67
, 310  // S68
, 317  // S69
, 320  // S70
, 325  // S71
, 328  // S72
, 331  // S73
, 334  // S74
, 337  // S75
, 344  // S76
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       SLR states successors table                         *
//                                                                           *
//---------------------------------------------------------------------------*

// Successor tables handle non terminal successors ;
// an entry is (non_terminal_symbol, n) ; successor is state n.

static const sint16 gSuccessorTable0 [3] = {0, 2, -1} ;

static const sint16 gSuccessorTable5 [3] = {1, 8, -1} ;

static const sint16 gSuccessorTable6 [3] = {2, 14, -1} ;

static const sint16 gSuccessorTable8 [3] = {3, 19, -1} ;

static const sint16 gSuccessorTable21 [3] = {1, 28, -1} ;

static const sint16 gSuccessorTable29 [3] = {5, 36, -1} ;

static const sint16 gSuccessorTable35 [3] = {5, 42, -1} ;

static const sint16 gSuccessorTable37 [3] = {4, 45, -1} ;

static const sint16 gSuccessorTable39 [3] = {6, 49, -1} ;

static const sint16 gSuccessorTable41 [3] = {1, 50, -1} ;

static const sint16 gSuccessorTable43 [3] = {3, 51, -1} ;

static const sint16 gSuccessorTable44 [3] = {4, 52, -1} ;

static const sint16 gSuccessorTable46 [3] = {3, 54, -1} ;

static const sint16 gSuccessorTable53 [3] = {3, 59, -1} ;

static const sint16 gSuccessorTable57 [3] = {7, 63, -1} ;

static const sint16 gSuccessorTable58 [3] = {3, 64, -1} ;

static const sint16 gSuccessorTable65 [3] = {6, 69, -1} ;

static const sint16 gSuccessorTable66 [3] = {8, 71, -1} ;

static const sint16 gSuccessorTable67 [3] = {7, 72, -1} ;

static const sint16 gSuccessorTable68 [3] = {6, 73, -1} ;

static const sint16 gSuccessorTable70 [3] = {8, 74, -1} ;

static const sint16 gSuccessorTable75 [3] = {6, 76, -1} ;

static const sint16 * gSuccessorTable [77] = {
gSuccessorTable0, NULL, NULL, NULL, 
  NULL, gSuccessorTable5, gSuccessorTable6, NULL, 
  gSuccessorTable8, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable21, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable29, NULL, NULL, 
  NULL, NULL, NULL, gSuccessorTable35, 
  NULL, gSuccessorTable37, NULL, gSuccessorTable39, 
  NULL, gSuccessorTable41, NULL, gSuccessorTable43, 
  gSuccessorTable44, NULL, gSuccessorTable46, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable53, NULL, NULL, 
  NULL, gSuccessorTable57, gSuccessorTable58, NULL, 
  NULL, NULL, NULL, NULL, 
  NULL, gSuccessorTable65, gSuccessorTable66, gSuccessorTable67, 
  gSuccessorTable68, NULL, gSuccessorTable70, NULL, 
  NULL, NULL, NULL, gSuccessorTable75, 
  NULL} ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Production rules infos (left non terminal, size of right string)      *
//                                                                           *
//---------------------------------------------------------------------------*

static const sint16 gProductionsTable [27 * 2] = {
0, 9,
  1, 0,
  1, 4,
  1, 7,
  2, 1,
  2, 1,
  2, 1,
  2, 1,
  2, 1,
  3, 0,
  3, 7,
  3, 6,
  3, 6,
  3, 7,
  4, 0,
  4, 2,
  5, 0,
  5, 2,
  6, 0,
  6, 5,
  6, 7,
  6, 5,
  7, 0,
  7, 3,
  8, 0,
  8, 2,
  9, 1} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         'gui_component_start_symbol' non terminal implementation          *
//                                                                           *
//---------------------------------------------------------------------------*

void guiGrammar::
nt_gui_component_start_symbol_ (galgas_scanner & inLexique,
                                GGS_guiComponentRoot & parameter_1) {
  switch (inLexique.nextProductionIndex ()) {
  case 0 :
    pr_gui_component_start_symbol_guiModelBuilder_35_33_ (inLexique, parameter_1) ;
    break ;
  default :
    inLexique.internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Grammar start symbol implementation                     *
//                                                                           *
//---------------------------------------------------------------------------*

void guiGrammar::_performSourceFileParsing_ (C_Compiler & _inCompiler,
                                const C_String & _inDependancyExtension,
                                const C_String & _inDependancyPath,
                                GGS_string * _inSentStringPtr,
                                const GGS_lstring _inFileName,
                                GGS_guiComponentRoot & parameter_1
                                COMMA_LOCATION_ARGS) {
  const C_String sourceFileName = _inFileName.string ().isAbsolutePath ()
    ? _inFileName.string ()
    : _inCompiler.sourceFileName ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (_inFileName.string ()) ;
  if (sourceFileName.fileExists ()) {
    galgas_scanner * scanner_ = NULL ;
    macroMyNew (scanner_, galgas_scanner (& _inCompiler, _inDependancyExtension, _inDependancyPath, _inCompiler.ioParametersPtr (), sourceFileName COMMA_HERE)) ;
    if (scanner_->needsCompiling ()) {
      if (scanner_->sourceText () != NULL) {
        scanner_->mPerformGeneration = _inCompiler.mPerformGeneration ;
        const bool ok = scanner_->performBottomUpParsing (gActionTable, gNonTerminalNames,
                                                          gActionTableIndex, gSuccessorTable,
                                                          gProductionsTable) ;
        if (ok && ! scanner_->mParseOnlyFlag) {
          guiGrammar _grammar ;
          _grammar.nt_gui_component_start_symbol_ (*scanner_, parameter_1) ;
          if (_inSentStringPtr != NULL) {
            _inSentStringPtr->dotAssign_operation (scanner_->sentString ()) ;
          }
        }
      }else{
        C_String message ;
        message << "the '" << sourceFileName << "' file exits, but cannot be read" ;
        _inFileName.signalSemanticError (_inCompiler, message COMMA_THERE) ;
      parameter_1.drop () ;
      }
    }
    macroDetachPointer (scanner_, galgas_scanner) ;
  }else{
    C_String message ;
    message << "the '" << sourceFileName << "' file does not exist" ;
    _inFileName.signalSemanticError (_inCompiler, message COMMA_THERE) ;
    parameter_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void guiGrammar::_performSourceStringParsing_ (C_Compiler & _inCompiler,
                                GGS_string * _inSentStringPtr,
                                const GGS_string _inSourceString,
                                GGS_guiComponentRoot & parameter_1
                                COMMA_UNUSED_LOCATION_ARGS) {
  galgas_scanner * scanner_ = NULL ;
  macroMyNew (scanner_, galgas_scanner (& _inCompiler, _inCompiler.ioParametersPtr (), _inSourceString.string (), "Error when parsing dynamic string" COMMA_HERE)) ;
  if (scanner_->sourceText () != NULL) {
    scanner_->mPerformGeneration = _inCompiler.mPerformGeneration ;
    const bool ok = scanner_->performBottomUpParsing (gActionTable, gNonTerminalNames,
                                                      gActionTableIndex, gSuccessorTable,
                                                      gProductionsTable) ;
    if (ok && ! scanner_->mParseOnlyFlag) {
      guiGrammar _grammar ;
      _grammar.nt_gui_component_start_symbol_ (*scanner_, parameter_1) ;
      if (_inSentStringPtr != NULL) {
        _inSentStringPtr->dotAssign_operation (scanner_->sentString ()) ;
      }
    }
  }
  macroDetachPointer (scanner_, galgas_scanner) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_0' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_0 (galgas_scanner & inLexique) {
// Productions numbers : 1 2 3
  return (sint16) (inLexique.nextProductionIndex () - 0) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          'select_guiModelBuilder_1' non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_guiModelBuilder_1 (galgas_scanner & inLexique) {
// Productions numbers : 4 5 6 7 8
  return (sint16) (inLexique.nextProductionIndex () - 3) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_2' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_2 (galgas_scanner & inLexique) {
// Productions numbers : 9 10 11 12 13
  return (sint16) (inLexique.nextProductionIndex () - 8) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_3' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_3 (galgas_scanner & inLexique) {
// Productions numbers : 14 15
  return (sint16) (inLexique.nextProductionIndex () - 13) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_4' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_4 (galgas_scanner & inLexique) {
// Productions numbers : 16 17
  return (sint16) (inLexique.nextProductionIndex () - 15) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_5' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_5 (galgas_scanner & inLexique) {
// Productions numbers : 18 19 20 21
  return (sint16) (inLexique.nextProductionIndex () - 17) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_6' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_6 (galgas_scanner & inLexique) {
// Productions numbers : 22 23
  return (sint16) (inLexique.nextProductionIndex () - 21) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      'select_repeat_guiModelBuilder_7' non terminal implementation        *
//                                                                           *
//---------------------------------------------------------------------------*


sint16 guiGrammar::select_repeat_guiModelBuilder_7 (galgas_scanner & inLexique) {
// Productions numbers : 24 25
  return (sint16) (inLexique.nextProductionIndex () - 23) ;
}

//---------------------------------------------------------------------------*

