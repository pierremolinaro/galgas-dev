//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'guiGrammar.cpp'                            *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    december 13th, 2009, at 17h35'23"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"

//---------------------------------------------------------------------------*

#include "guiGrammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "all_galgas.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                  N O N    T E R M I N A L    N A M E S                    *
//                                                                           *
//---------------------------------------------------------------------------*

static const char * gNonTerminalNames [8] = {
  "<gui_component_start_symbol>",// Index 0
  "<select_guiModelBuilder_0>",// Index 1
  "<select_guiModelBuilder_1>",// Index 2
  "<select_guiModelBuilder_2>",// Index 3
  "<select_guiModelBuilder_3>",// Index 4
  "<select_guiModelBuilder_4>",// Index 5
  "<select_guiModelBuilder_5>",// Index 6
  "<>"// Index 7
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           S L R    A N A L Y Z E R    A C T I O N    T A B L E            *
//                                                                           *
//---------------------------------------------------------------------------*

// Action tables handle shift and reduce actions ;
//  - a shift action is (terminal_symbol, SHIFT (n)) : if shifts to state n ;
//  - the accept action is (terminal_symbol, ACCEPT) ;
//  - a reduce action is (terminal_symbol, REDUCE (n)) ; if reduces to state n.

#define SHIFT(a) ((a) + 2)
#define REDUCE(a) (-(a) - 1)
#define ACCEPT (1)
#define END (-1)

static const PMSInt16 gActionTable [] = {
// State S0 (index = 0)
  galgas_scanner::galgas_scanner_1_gui, SHIFT (1)
, END
// State S1 (index = 3)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (3)
, END
// State S2 (index = 6)
, galgas_scanner::galgas_scanner_1_, ACCEPT
, END
// State S3 (index = 9)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (4)
, END
// State S4 (index = 12)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (5)
, END
// State S5 (index = 15)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (6)
, galgas_scanner::galgas_scanner_1_with, SHIFT (7)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, END
// State S6 (index = 22)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (9)
, END
// State S7 (index = 25)
, galgas_scanner::galgas_scanner_1_option, SHIFT (10)
, galgas_scanner::galgas_scanner_1_lexique, SHIFT (11)
, END
// State S8 (index = 30)
, galgas_scanner::galgas_scanner_1_end, SHIFT (13)
, END
// State S9 (index = 33)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (14)
, END
// State S10 (index = 36)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (15)
, END
// State S11 (index = 39)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (16)
, END
// State S12 (index = 42)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (6)
, galgas_scanner::galgas_scanner_1_with, SHIFT (7)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, END
// State S13 (index = 49)
, galgas_scanner::galgas_scanner_1_gui, SHIFT (18)
, END
// State S14 (index = 52)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (19)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (4)
, END
// State S15 (index = 57)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (21)
, END
// State S16 (index = 60)
, galgas_scanner::galgas_scanner_1__7B_, SHIFT (22)
, END
// State S17 (index = 63)
, galgas_scanner::galgas_scanner_1_end, REDUCE (3)
, END
// State S18 (index = 66)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (23)
, END
// State S19 (index = 69)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (19)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (4)
, END
// State S20 (index = 74)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (25)
, END
// State S21 (index = 77)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (6)
, galgas_scanner::galgas_scanner_1_with, REDUCE (6)
, galgas_scanner::galgas_scanner_1_end, REDUCE (6)
, END
// State S22 (index = 84)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (26)
, galgas_scanner::galgas_scanner_1_label, SHIFT (27)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (8)
, END
// State S23 (index = 91)
, galgas_scanner::galgas_scanner_1_, REDUCE (0)
, END
// State S24 (index = 94)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (5)
, END
// State S25 (index = 97)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (6)
, galgas_scanner::galgas_scanner_1_with, SHIFT (7)
, galgas_scanner::galgas_scanner_1_end, REDUCE (1)
, END
// State S26 (index = 104)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (30)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (31)
, END
// State S27 (index = 109)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (32)
, END
// State S28 (index = 112)
, galgas_scanner::galgas_scanner_1__7D_, SHIFT (33)
, END
// State S29 (index = 115)
, galgas_scanner::galgas_scanner_1_end, REDUCE (2)
, END
// State S30 (index = 118)
, galgas_scanner::galgas_scanner_1__3A_, SHIFT (34)
, END
// State S31 (index = 121)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (35)
, END
// State S32 (index = 124)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (12)
, galgas_scanner::galgas_scanner_1__2C_, SHIFT (36)
, END
// State S33 (index = 129)
, galgas_scanner::galgas_scanner_1_identifier, REDUCE (7)
, galgas_scanner::galgas_scanner_1_with, REDUCE (7)
, galgas_scanner::galgas_scanner_1_end, REDUCE (7)
, END
// State S34 (index = 136)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (38)
, END
// State S35 (index = 139)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (39)
, END
// State S36 (index = 142)
, galgas_scanner::galgas_scanner_1_terminal, SHIFT (40)
, END
// State S37 (index = 145)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (41)
, END
// State S38 (index = 148)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (42)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (14)
, END
// State S39 (index = 153)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (26)
, galgas_scanner::galgas_scanner_1_label, SHIFT (27)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (8)
, END
// State S40 (index = 160)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (12)
, galgas_scanner::galgas_scanner_1__2C_, SHIFT (36)
, END
// State S41 (index = 165)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (26)
, galgas_scanner::galgas_scanner_1_label, SHIFT (27)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (8)
, END
// State S42 (index = 172)
, galgas_scanner::galgas_scanner_1_literal_5F_string, SHIFT (42)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (14)
, END
// State S43 (index = 177)
, galgas_scanner::galgas_scanner_1__3B_, SHIFT (48)
, END
// State S44 (index = 180)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (11)
, END
// State S45 (index = 183)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (13)
, END
// State S46 (index = 186)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (9)
, END
// State S47 (index = 189)
, galgas_scanner::galgas_scanner_1__3B_, REDUCE (15)
, END
// State S48 (index = 192)
, galgas_scanner::galgas_scanner_1_identifier, SHIFT (26)
, galgas_scanner::galgas_scanner_1_label, SHIFT (27)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (8)
, END
// State S49 (index = 199)
, galgas_scanner::galgas_scanner_1__7D_, REDUCE (10)
, END} ;

static const PMUInt32 gActionTableIndex [50] = {
  0  // S0
, 3  // S1
, 6  // S2
, 9  // S3
, 12  // S4
, 15  // S5
, 22  // S6
, 25  // S7
, 30  // S8
, 33  // S9
, 36  // S10
, 39  // S11
, 42  // S12
, 49  // S13
, 52  // S14
, 57  // S15
, 60  // S16
, 63  // S17
, 66  // S18
, 69  // S19
, 74  // S20
, 77  // S21
, 84  // S22
, 91  // S23
, 94  // S24
, 97  // S25
, 104  // S26
, 109  // S27
, 112  // S28
, 115  // S29
, 118  // S30
, 121  // S31
, 124  // S32
, 129  // S33
, 136  // S34
, 139  // S35
, 142  // S36
, 145  // S37
, 148  // S38
, 153  // S39
, 160  // S40
, 165  // S41
, 172  // S42
, 177  // S43
, 180  // S44
, 183  // S45
, 186  // S46
, 189  // S47
, 192  // S48
, 199  // S49
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       SLR states successors table                         *
//                                                                           *
//---------------------------------------------------------------------------*

// Successor tables handle non terminal successors ;
// an entry is (non_terminal_symbol, n) ; successor is state n.

static const PMSInt16 gSuccessorTable0 [3] = {0, 2, -1} ;

static const PMSInt16 gSuccessorTable5 [3] = {1, 8, -1} ;

static const PMSInt16 gSuccessorTable7 [3] = {3, 12, -1} ;

static const PMSInt16 gSuccessorTable12 [3] = {1, 17, -1} ;

static const PMSInt16 gSuccessorTable14 [3] = {2, 20, -1} ;

static const PMSInt16 gSuccessorTable19 [3] = {2, 24, -1} ;

static const PMSInt16 gSuccessorTable22 [3] = {4, 28, -1} ;

static const PMSInt16 gSuccessorTable25 [3] = {1, 29, -1} ;

static const PMSInt16 gSuccessorTable32 [3] = {5, 37, -1} ;

static const PMSInt16 gSuccessorTable38 [3] = {6, 43, -1} ;

static const PMSInt16 gSuccessorTable39 [3] = {4, 44, -1} ;

static const PMSInt16 gSuccessorTable40 [3] = {5, 45, -1} ;

static const PMSInt16 gSuccessorTable41 [3] = {4, 46, -1} ;

static const PMSInt16 gSuccessorTable42 [3] = {6, 47, -1} ;

static const PMSInt16 gSuccessorTable48 [3] = {4, 49, -1} ;

static const PMSInt16 * gSuccessorTable [50] = {
gSuccessorTable0, NULL, NULL, NULL, 
  NULL, gSuccessorTable5, NULL, gSuccessorTable7, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable12, NULL, gSuccessorTable14, NULL, 
  NULL, NULL, NULL, gSuccessorTable19, 
  NULL, NULL, gSuccessorTable22, NULL, 
  NULL, gSuccessorTable25, NULL, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable32, NULL, NULL, NULL, 
  NULL, NULL, gSuccessorTable38, gSuccessorTable39, 
  gSuccessorTable40, gSuccessorTable41, gSuccessorTable42, NULL, 
  NULL, NULL, NULL, NULL, 
  gSuccessorTable48, NULL} ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Production rules infos (left non terminal, size of right string)      *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gProductionsTable [17 * 2] = {
0, 8,
  1, 0,
  1, 6,
  1, 3,
  2, 0,
  2, 2,
  3, 3,
  3, 5,
  4, 0,
  4, 5,
  4, 7,
  4, 5,
  5, 0,
  5, 3,
  6, 0,
  6, 2,
  7, 1} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         'gui_component_start_symbol' non terminal implementation          *
//                                                                           *
//---------------------------------------------------------------------------*

void guiGrammar::
nt_gui_component_start_symbol_ (galgas_scanner & inLexique,
                                GGS_guiComponentRoot & parameter_1) {
  switch (inLexique.nextProductionIndex ()) {
  case 0 :
    pr_gui_component_start_symbol_guiModelBuilder_36_33_ (inLexique, parameter_1) ;
    break ;
  default :
    inLexique.internalBottomUpParserError (HERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Grammar start symbol implementation                     *
//                                                                           *
//---------------------------------------------------------------------------*

void guiGrammar::_performSourceFileParsing_ (C_CompilerEx & inCompiler,
                                const C_String & inDependancyExtension,
                                const C_String & inDependancyPath,
                                GGS_string * inSentStringPtr,
                                const GGS_lstring _inFileName,
                                GGS_guiComponentRoot & parameter_1
                                COMMA_LOCATION_ARGS) {
  const C_String sourceFileName = _inFileName.string ().isAbsolutePath ()
    ? _inFileName.string ()
    : inCompiler.sourceFileName ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (_inFileName.string ()) ;
  if (sourceFileName.fileExists ()) {
    galgas_scanner * scanner_ = NULL ;
    macroMyNew (scanner_, galgas_scanner (& inCompiler, inDependancyExtension, inDependancyPath, inCompiler.ioParametersPtr (), sourceFileName COMMA_HERE)) ;
    if (scanner_->needsCompiling ()) {
      if (scanner_->sourceText () != NULL) {
        scanner_->mPerformGeneration = inCompiler.mPerformGeneration ;
        const bool ok = scanner_->performBottomUpParsing (gActionTable, gNonTerminalNames,
                                                          gActionTableIndex, gSuccessorTable,
                                                          gProductionsTable) ;
        if (ok && ! scanner_->mParseOnlyFlag) {
          guiGrammar _grammar ;
          _grammar.nt_gui_component_start_symbol_ (*scanner_, parameter_1) ;
          if (inSentStringPtr != NULL) {
            inSentStringPtr->dotAssign_operation (scanner_->sentString ()) ;
          }
        }
      }else{
        C_String message ;
        message << "the '" << sourceFileName << "' file exits, but cannot be read" ;
        _inFileName.signalSemanticError (inCompiler, message COMMA_THERE) ;
      parameter_1.drop () ;
      }
    }
    macroDetachPointer (scanner_, galgas_scanner) ;
  }else{
    C_String message ;
    message << "the '" << sourceFileName << "' file does not exist" ;
    _inFileName.signalSemanticError (inCompiler, message COMMA_THERE) ;
    parameter_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void guiGrammar::_performSourceStringParsing_ (C_CompilerEx & inCompiler,
                                GGS_string * inSentStringPtr,
                                const GGS_string _inSourceString,
                                GGS_guiComponentRoot & parameter_1
                                COMMA_UNUSED_LOCATION_ARGS) {
  galgas_scanner * scanner_ = NULL ;
  macroMyNew (scanner_, galgas_scanner (& inCompiler, inCompiler.ioParametersPtr (), _inSourceString.string (), "Error when parsing dynamic string" COMMA_HERE)) ;
  if (scanner_->sourceText () != NULL) {
    scanner_->mPerformGeneration = inCompiler.mPerformGeneration ;
    const bool ok = scanner_->performBottomUpParsing (gActionTable, gNonTerminalNames,
                                                      gActionTableIndex, gSuccessorTable,
                                                      gProductionsTable) ;
    if (ok && ! scanner_->mParseOnlyFlag) {
      guiGrammar _grammar ;
      _grammar.nt_gui_component_start_symbol_ (*scanner_, parameter_1) ;
      if (inSentStringPtr != NULL) {
        inSentStringPtr->dotAssign_operation (scanner_->sentString ()) ;
      }
    }
  }
  macroDetachPointer (scanner_, galgas_scanner) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          'select_guiModelBuilder_0' non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 guiGrammar::select_guiModelBuilder_0 (galgas_scanner & inLexique) {
// Productions numbers : 1 2 3
  return (PMSInt16) (inLexique.nextProductionIndex () - 0) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          'select_guiModelBuilder_1' non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 guiGrammar::select_guiModelBuilder_1 (galgas_scanner & inLexique) {
// Productions numbers : 4 5
  return (PMSInt16) (inLexique.nextProductionIndex () - 3) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          'select_guiModelBuilder_2' non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 guiGrammar::select_guiModelBuilder_2 (galgas_scanner & inLexique) {
// Productions numbers : 6 7
  return (PMSInt16) (inLexique.nextProductionIndex () - 5) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          'select_guiModelBuilder_3' non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 guiGrammar::select_guiModelBuilder_3 (galgas_scanner & inLexique) {
// Productions numbers : 8 9 10 11
  return (PMSInt16) (inLexique.nextProductionIndex () - 7) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          'select_guiModelBuilder_4' non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 guiGrammar::select_guiModelBuilder_4 (galgas_scanner & inLexique) {
// Productions numbers : 12 13
  return (PMSInt16) (inLexique.nextProductionIndex () - 11) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          'select_guiModelBuilder_5' non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 guiGrammar::select_guiModelBuilder_5 (galgas_scanner & inLexique) {
// Productions numbers : 14 15
  return (PMSInt16) (inLexique.nextProductionIndex () - 13) ;
}

//---------------------------------------------------------------------------*

