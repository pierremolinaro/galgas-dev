//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticsModifiers.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      april 30th, 2010, at 13h56'37"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsModifiers.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsModifiers.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterModifierWithInputArgument"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inInputArgumentTypeName,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_argumentTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgumentTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (34)), var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (34)) ;
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (36))) ;
  var_cas_ioModifierMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (38)), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (37)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterModifierWithOutputArgument"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithOutputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inInputArgumentTypeName,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithOutputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_argumentTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgumentTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (54)), var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (54)) ;
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_SOURCE_FILE_AT_LINE (56))) ;
  var_cas_ioModifierMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (58)), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (57)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithOutputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterModifierWith2InputArguments"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWith2InputArguments (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inInputArgument1TypeName,
                                const GGS_string  var_cas_inInputArgument2TypeName,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWith2InputArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  GGS_unifiedTypeMapProxy  var_cas_argumentTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgument1TypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (76)), var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (76)) ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (77))) ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgument2TypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (78)), var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (78)) ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (79))) ;
  var_cas_ioModifierMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (81)), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (80)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWith2InputArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterModifierWithoutArgument"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithoutArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioModifierMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (95)), GGS_formalParameterSignature ::constructor_emptyList (), var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (94)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@stringPredefinedTypeAST.getModifierMap'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_stringPredefinedTypeAST * operand_4490,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4490 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (107)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("setCapacity"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (108)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("incIndentation"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (109)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("decIndentation"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (110)) ;
    ::routine_enterModifierWith2InputArguments (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("char"),  GGS_string ("uint"),  GGS_string ("setCharacterAtIndex"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (111)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@dataPredefinedTypeAST.getModifierMap'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__dataPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_dataPredefinedTypeAST * operand_5177,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5177 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (120)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendByte"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (121)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendShortBE"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (122)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendShortLE"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (123)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendUIntBE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (124)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendUIntLE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (125)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("appendUTF8String"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (126)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("data"),  GGS_string ("appendData"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (127)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsModifiers (void) {
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__stringPredefinedTypeAST__getModifierMap, gClassInfoFor__stringPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__dataPredefinedTypeAST__getModifierMap, gClassInfoFor__dataPredefinedTypeAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsModifiers (prologueRoutineFor_semanticsModifiers, NULL) ;

//---------------------------------------------------------------------------*

