//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticsModifiers.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 10th, 2010, at 17h5'43"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsModifiers.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsModifiers.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterModifierWithInputArgument"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_string  var_cas_inInputArgumentTypeName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapIndex  var_cas_argumentTypeIndex ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgumentTypeName, GGS_location (inLexique) COMMA_HERE), var_cas_ioUnifiedTypeMap, var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (34)) ;
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (37)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterModifierWith2InputArguments"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWith2InputArguments (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_string  var_cas_inInputArgument1TypeName,
                                const GGS_string  var_cas_inInputArgument2TypeName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWith2InputArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  GGS_unifiedTypeMapIndex  var_cas_argumentTypeIndex ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgument1TypeName, GGS_location (inLexique) COMMA_HERE), var_cas_ioUnifiedTypeMap, var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (56)) ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgument2TypeName, GGS_location (inLexique) COMMA_HERE), var_cas_ioUnifiedTypeMap, var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (58)) ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (60)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWith2InputArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterModifierWithoutArgument"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithoutArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_HERE), GGS_formalParameterSignature ::constructor_emptyList (), var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (74)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "modifierMapFor_string"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_string (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_string at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("setCapacity"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (88)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("incIndentation"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (89)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("decIndentation"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (90)) ;
  ::routine_enterModifierWith2InputArguments (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("char"),  GGS_string ("uint"),  GGS_string ("setCharacterAtIndex"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (91)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_string\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "modifierMapFor_lstring"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_lstring (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_lstring at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("setString"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (101)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (102)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_lstring\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "modifierMapFor_lchar"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_lchar (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_lchar at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("char"),  GGS_string ("setChar"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (112)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (113)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_lchar\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "modifierMapFor_lbool"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_lbool (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_lbool at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("bool"),  GGS_string ("setBool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (123)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (124)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_lbool\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "modifierMapFor_luint"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_luint (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_luint at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("setUint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (134)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (135)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_luint\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "modifierMapFor_lsint"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_lsint (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_lsint at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint"),  GGS_string ("setSint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (145)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (146)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_lsint\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "modifierMapFor_luint64"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_luint64 (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_luint64 at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64"),  GGS_string ("setUint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (156)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (157)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_luint64\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "modifierMapFor_lsint64"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_lsint64 (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_lsint64 at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint64"),  GGS_string ("setSint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (167)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (168)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_lsint64\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "modifierMapFor_ldouble"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_ldouble (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_ldouble at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("double"),  GGS_string ("setDouble"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (178)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (179)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_ldouble\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "modifierMapFor_data"               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_modifierMapFor_data (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_modifierMapFor_data at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendByte"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (189)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendShortBE"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (190)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendShortLE"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (191)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendUIntBE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (192)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendUIntLE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (193)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("appendUTF8String"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (194)) ;
  ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("data"),  GGS_string ("appendData"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (195)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_modifierMapFor_data\n") ;
  #endif
}

//---------------------------------------------------------------------------*

