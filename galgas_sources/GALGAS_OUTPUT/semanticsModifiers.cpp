//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticsModifiers.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 24th, 2010, at 16h38'32"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsModifiers.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsModifiers.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@formalParameterSignature'                 *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_formalParameterSignature::
elementOf_GGS_formalParameterSignature (const GGS_ACGalgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mParameterType (argument_0),
mFormalParameterPassingMode (argument_1) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_formalParameterSignature::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_formalParameterSignature * ptr = dynamic_cast <const elementOf_GGS_formalParameterSignature *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mParameterType.operator_isEqual (ptr->mParameterType).boolValue ()
         && mFormalParameterPassingMode.operator_isEqual (ptr->mFormalParameterPassingMode).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_formalParameterSignature::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mParameterType.reader_description (inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mFormalParameterPassingMode.reader_description (inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     List '@formalParameterSignature'                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX kTypeDescriptor_GGS_formalParameterSignature ("formalParameterSignature", false, NULL) ;

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
internalAppendValues (const GGS_ACGalgasType & argument_0,
                    const GGS_formalArgumentPassingMode& argument_1
                    COMMA_LOCATION_ARGS) {
  cElement * newElement = (cElement *) NULL ;
  macroMyNew (newElement, cElement (argument_0,
                                argument_1
                                COMMA_THERE)) ;
  internalAppendItem (newElement) ;
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
internalPrependValues (const GGS_ACGalgasType & argument_0,
                    const GGS_formalArgumentPassingMode& argument_1
                    COMMA_LOCATION_ARGS) {
  cElement * newElement = (cElement *) NULL ;
  macroMyNew (newElement, cElement (argument_0,
                                argument_1
                                COMMA_THERE)) ;
  internalPrependItem (newElement) ;
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
addAssign_operation (const GGS_ACGalgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1) {
  if (isBuilt ()&& argument_0.isBuilt ()&& argument_1.isBuilt ()) {
    insulateList () ;
    internalAppendValues (argument_0,
                                argument_1
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_formalParameterSignature GGS_formalParameterSignature::
operator_concat (const GGS_formalParameterSignature & inOperand) const {
  GGS_formalParameterSignature result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
dotAssign_operation (const GGS_formalParameterSignature inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        insulateList () ;
        elementOf_GGS_formalParameterSignature * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_ACGalgasType  p_0 = p->mParameterType ;
          GGS_formalArgumentPassingMode p_1 = p->mFormalParameterPassingMode ;
          internalAppendValues (p_0, p_1 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_ACGalgasType & argument_0,
                     const GGS_formalArgumentPassingMode& argument_1
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    insulateList () ;
    internalPrependValues (argument_0,
                                argument_1
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
insulateList (void) {
  if (isShared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      internalAppendValues (ptr->mParameterType,
                                ptr->mFormalParameterPassingMode
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_formalParameterSignature  GGS_formalParameterSignature::
constructor_emptyList (void) {
  GGS_formalParameterSignature result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_formalParameterSignature  GGS_formalParameterSignature::
constructor_listWithValue (const GGS_ACGalgasType & argument_0,
                                const GGS_formalArgumentPassingMode& argument_1) {
  GGS_formalParameterSignature result ;
  result.alloc () ;
  result.addAssign_operation (argument_0, argument_1) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
internalSubListWithRange (GGS_formalParameterSignature & ioList,
                          const PMSInt32 inFirstIndex,
                          const PMSInt32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (PMSInt32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (PMSInt32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList.addAssign_operation (ptr->mParameterType, ptr->mFormalParameterPassingMode) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_formalParameterSignature GGS_formalParameterSignature::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_formalParameterSignature result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const PMSInt32 firstIndex = (PMSInt32) inFirstIndex.uintValue () ;
    const PMSInt32 rangeCount = (PMSInt32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_formalParameterSignature GGS_formalParameterSignature::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_formalParameterSignature result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const PMSInt32 startIndex = (PMSInt32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_formalParameterSignature::
reader_description (const PMSInt32 inIndentation) const {
  return performDescription ("@formalParameterSignature", inIndentation) ;
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
method_first (C_Compiler & inLexique,
              GGS_ACGalgasType & _out_0,
              GGS_formalArgumentPassingMode& _out_1
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mParameterType ;
    _out_1 = ptr->mFormalParameterPassingMode ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
method_last (C_Compiler & inLexique,
             GGS_ACGalgasType & _out_0,
             GGS_formalArgumentPassingMode& _out_1
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mParameterType ;
    _out_1 = ptr->mFormalParameterPassingMode ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_ACGalgasType & _out_0,
                 GGS_formalArgumentPassingMode& _out_1
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mParameterType ;
    _out_1 = ptr->mFormalParameterPassingMode ;
    insulateList () ;
    internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
modifier_popLast (C_Compiler & inLexique,
                GGS_ACGalgasType & _out_0,
                GGS_formalArgumentPassingMode& _out_1
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mParameterType ;
    _out_1 = ptr->mFormalParameterPassingMode ;
    insulateList () ;
    internalRemoveLast () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_ACGalgasType  GGS_formalParameterSignature::
reader_mParameterTypeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_ACGalgasType  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mParameterType ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_formalArgumentPassingMode GGS_formalParameterSignature::
reader_mFormalParameterPassingModeAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_formalArgumentPassingMode result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mFormalParameterPassingMode ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
modifier_setMParameterTypeAtIndex (C_Compiler & inLexique,
                              const GGS_ACGalgasType  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mParameterType = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_formalParameterSignature::
modifier_setMFormalParameterPassingModeAtIndex (C_Compiler & inLexique,
                              const GGS_formalArgumentPassingMode & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mFormalParameterPassingMode = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_ACGalgasType  & GGS_formalParameterSignature::cEnumerator::_mParameterType (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mParameterType ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_formalArgumentPassingMode & GGS_formalParameterSignature::cEnumerator::_mFormalParameterPassingMode (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mFormalParameterPassingMode ;
}

//---------------------------------------------------------------------------*

GGS_object GGS_formalParameterSignature::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_formalParameterSignature * p = NULL ;
    macroMyNew (p, GGS_formalParameterSignature (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_formalParameterSignature GGS_formalParameterSignature::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_formalParameterSignature result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_formalParameterSignature * p = dynamic_cast <const GGS_formalParameterSignature *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_formalParameterSignature, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX * GGS_formalParameterSignature::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_formalParameterSignature ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                          class 'e_modifierMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

e_modifierMap::e_modifierMap (void) :
mParameterList (),
mHasCompilerArgument () {
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         class map '@modifierMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX kTypeDescriptor_GGS_modifierMap ("modifierMap", false, NULL) ;

//---------------------------------------------------------------------------*

elementOf_GGS_modifierMap::
elementOf_GGS_modifierMap (const GGS_lstring & inKey,
              const PMSInt32 inIndex,
              const e_modifierMap & inInfo) :
AC_galgas_map_element (inKey, inIndex),
mInfo (inInfo) {
}

//---------------------------------------------------------------------------*

void elementOf_GGS_modifierMap::
appendForMapDescription (const PMSInt32 inElementIndex,
                         C_String & ioString,
                         const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-key " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mKey.reader_description (inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mParameterList.reader_description (inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mHasCompilerArgument.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_modifierMap::
isEqualToMapElement (const AC_galgas_map_element * inOperand) const {
  const elementOf_GGS_modifierMap * ptr = dynamic_cast <const elementOf_GGS_modifierMap *> (inOperand) ;
  macroValidPointer (ptr) ;
  return (mInfo.mParameterList.operator_isEqual (ptr->mInfo.mParameterList)).boolValue ()
           && (mInfo.mHasCompilerArgument.operator_isEqual (ptr->mInfo.mHasCompilerArgument)).boolValue () ;
}

//---------------------------------------------------------------------------*

AC_galgas_map_element * GGS_modifierMap::
new_element (const GGS_lstring & inKey, void * inInfo) {
  MF_Assert (reinterpret_cast <e_modifierMap *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  AC_galgas_map_element * p = NULL ;
  e_modifierMap * info = (e_modifierMap *) inInfo ;
  macroMyNew (p, cElement (inKey, nextIndex (), * info)) ;
  return p ;
}

//---------------------------------------------------------------------------*

void GGS_modifierMap::
assignInfo (AC_galgas_map_element * inPtr, void * inInfo) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  MF_Assert (reinterpret_cast <e_modifierMap *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  e_modifierMap * info = (e_modifierMap *) inInfo ;
  p->mInfo = * info ;
}

//---------------------------------------------------------------------------*

GGS_modifierMap GGS_modifierMap::
constructor_emptyMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap result ;
  macroMyNew (result.mSharedMapRoot, cMapRoot) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_modifierMap::
enterIndex (const GGS_lstring & inKey,
            AC_galgas_index_core & outIndex) {
  e_modifierMap info  ;
  internalEnterIndex (inKey,
                      (void *) & info,
                      outIndex) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_modifierMap::
operator_isEqual (const GGS_modifierMap & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_modifierMap::
operator_isNotEqual (const GGS_modifierMap & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), ! isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

void GGS_modifierMap::
internalInsertForDuplication (AC_galgas_map_element * inPtr) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  PMSInt32 attributeIndex = -1 ; // Unused here
  GGS_location existingKeyLocation ; // Unused here
  internalInsert (p->mKey, (void *) & p->mInfo, attributeIndex, existingKeyLocation) ;
}

//---------------------------------------------------------------------------*

void GGS_modifierMap::
insertElement (C_Compiler & inLexique,
                const utf32 * inErrorMessage,
                const GGS_lstring & inKey,
                const GGS_formalParameterSignature & inParameter0,
                const GGS_bool& inParameter1,
                GGS_luint * outIndex
                COMMA_LOCATION_ARGS) {
  PMSInt32 elementID = - 1 ;
  if (isBuilt ()
   && inParameter0.isBuilt ()
   && inParameter1.isBuilt ()
   && inKey.isBuilt ()) {
    insulateMap () ;
    e_modifierMap info  ;
    info.mParameterList = inParameter0 ;
    info.mHasCompilerArgument = inParameter1 ;
    GGS_location existingKeyLocation ;
    internalInsert (inKey, (void *) & info, elementID, existingKeyLocation) ;
    if (elementID < 0) {
      emitInsertMapSemanticErrorMessage (inLexique, inKey, inErrorMessage, existingKeyLocation COMMA_THERE) ;
    }
  }
  if (outIndex != NULL) {
    * outIndex = GGS_luint (GGS_uint (elementID >= 0, (PMUInt32) elementID), inKey) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_modifierMap::
searchElement (C_Compiler & inLexique,
               const utf32 * inErrorMessage,
               const GGS_lstring & inKey,
               GGS_formalParameterSignature   & outParameter0,
               GGS_bool  & outParameter1,
               GGS_luint * outIndex
               COMMA_LOCATION_ARGS) const {
  cElement * node = NULL  ;
  if (isBuilt () && inKey.isBuilt ()) {
    AC_galgas_map_element * p = internal_search (inKey.string ()) ;
    MF_Assert ((p == NULL) || (reinterpret_cast <cElement *> (p) != NULL), "Dynamic cast error", 0, 0) ;
    node = (cElement *) p ;
    if (node == NULL) {
      emitMapSemanticErrorMessage (inLexique, inKey, inErrorMessage COMMA_THERE) ;
    }
  }
  if (node == NULL) {
    outParameter0.drop () ;
    outParameter1.drop () ;
    if (outIndex != NULL) {
      outIndex->drop () ;
     }
  }else{
    outParameter0 = node->mInfo.mParameterList ;
    outParameter1 = node->mInfo.mHasCompilerArgument ;
    if (outIndex != NULL) {
      * outIndex = GGS_luint (GGS_uint (true, (PMUInt32) node->mID), inKey) ;
    }
  }
}

//---------------------------------------------------------------------------*

const utf32 GGS_modifierMap::kSearchMessage_searchKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('d'),
  TO_UNICODE ('i'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_modifierMap::
method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterSignature   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const {
  searchElement (inLexique,
                  kSearchMessage_searchKey,
                  inKey,
                  outParameter0,
                  outParameter1,
                  NULL
                  COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const utf32 GGS_modifierMap::kInsertMessage_insertKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('m'),
  TO_UNICODE ('o'),
  TO_UNICODE ('d'),
  TO_UNICODE ('i'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('y'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_modifierMap::
modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature & inParameter0,
                                const GGS_bool& inParameter1 COMMA_LOCATION_ARGS) {
  insertElement (inLexique,
                 kInsertMessage_insertKey,
                 inKey,
                 inParameter0,
                 inParameter1,
                 NULL
                 COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GGS_modifierMap GGS_modifierMap::
constructor_mapWithMapToOverride (C_Compiler & /* inLexique */,
                                  const GGS_modifierMap & inMapToOverride
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap result ; // Not Built
  if (inMapToOverride.mSharedMapRoot != NULL) {
    macroValidPointer (inMapToOverride.mSharedMapRoot) ;
    macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    result.mSharedMapRoot->mNextMap = inMapToOverride.mSharedMapRoot ;
    inMapToOverride.mSharedMapRoot->mReferenceCount ++ ;
    result.mSharedMapRoot->mSequenceNumber = inMapToOverride.mSharedMapRoot->mSequenceNumber ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_modifierMap GGS_modifierMap::
reader_overriddenMap (C_Compiler & /* inLexique */
                      COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_modifierMap result ; // Not Built
  if (mSharedMapRoot != NULL) {
    macroValidPointer (mSharedMapRoot) ;
    result.mSharedMapRoot = mSharedMapRoot->mNextMap ;
    if (result.mSharedMapRoot != NULL) {
      macroValidPointer (result.mSharedMapRoot) ;
      result.mSharedMapRoot->mReferenceCount ++ ;
    }else{
      macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_modifierMap::
reader_description (const PMSInt32 inIndentation) const {
  C_String s ;
  s << "<map @modifierMap " ;
  if (isBuilt ()) {
    s.appendSigned (count ()) ;
    s << " object" << ((count () > 1) ? "s " : " ") ;
    cMapRoot * mapRoot = mSharedMapRoot ;
    PMSInt32 level = 0 ;
    while (mapRoot != NULL) {
      if (level > 0) {
        s << "\n" ;
        s.writeStringMultiple ("| ", inIndentation) ;
        s << "------- level " << cStringWithSigned (level) ;
      }
      macroValidPointer (mapRoot) ;
      cElement * p = (cElement *) mapRoot->mFirstItem ;
      PMSInt32 elementID = 0 ;
      while (p != NULL) {
        macroValidPointer (p) ;
        p->appendForMapDescription (elementID, s, inIndentation) ;
        p = p->nextObject () ;
        elementID ++ ;
      }
      mapRoot = mapRoot->mNextMap ;
      level ++ ;
    }
  }else{
    s << "not built" ;
  }
  s << "\n" ;
  s.writeStringMultiple ("| ", inIndentation) ;
  s << ">" ;
  return GGS_string (true, s) ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_formalParameterSignature  & GGS_modifierMap::cEnumerator::_mParameterList (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mParameterList ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_bool & GGS_modifierMap::cEnumerator::_mHasCompilerArgument (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mHasCompilerArgument ;
}

//---------------------------------------------------------------------------*

GGS_object GGS_modifierMap::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_modifierMap * p = NULL ;
    macroMyNew (p, GGS_modifierMap (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_modifierMap GGS_modifierMap::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_modifierMap result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_modifierMap * p = dynamic_cast <const GGS_modifierMap *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_modifierMap, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX * GGS_modifierMap::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_modifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of routine "enterModifierWithStringInputArgument"      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithStringInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithStringInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (49)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithStringInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterModifierWithoutArgument"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithoutArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), GGS_formalParameterSignature ::constructor_emptyList (), var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (63)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of routine "enterModifierWithLocationInputArgument"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithLocationInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithLocationInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (79)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithLocationInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "enterModifierWithCharInputArgument"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithCharInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithCharInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (95)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithCharInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "enterModifierWithBoolInputArgument"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithBoolInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithBoolInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (111)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithBoolInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "enterModifierWithDataInputArgument"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithDataInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithDataInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_dataGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (127)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithDataInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "enterModifierWithUintInputArgument"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithUintInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithUintInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (143)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithUintInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of routine "enterModifierWithUint64InputArgument"      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithUint64InputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithUint64InputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (159)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithUint64InputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "enterModifierWithSintInputArgument"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithSintInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithSintInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (175)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithSintInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of routine "enterModifierWithSint64InputArgument"      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithSint64InputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithSint64InputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (191)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithSint64InputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of routine "enterModifierWithDoubleInputArgument"      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithDoubleInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithDoubleInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_doubleGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (207)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithDoubleInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of routine "enterModifierWithCharUintInputArgument"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithCharUintInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithCharUintInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_argList.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (224)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithCharUintInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Virtual Table for category reader '@ACGalgasType.modifierMap'        *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__modifierMap> gDispatchTableForReader__ACGalgasType__modifierMap ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__modifierMap (typeCategoryReader__ACGalgasType__modifierMap inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__modifierMap.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__ACGalgasType_defaultReader_modifierMap (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_modifierMap  () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__modifierMap
findCategoryReader__ACGalgasType__modifierMap (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__modifierMap result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__modifierMap.count ()) {
    result = gDispatchTableForReader__ACGalgasType__modifierMap (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__modifierMap (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__modifierMap.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_modifierMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "modifierMapFor_location"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_location ;
static bool gCacheFlagForOnceFunction_modifierMapFor_location = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_location (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_location) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_location at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_location\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_location = true ;
    gCachedResultForOnceFunction_modifierMapFor_location = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_location ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_location (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_location (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_location ("modifierMapFor_location",
                              functionForGenericCall_modifierMapFor_location,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@locationGalgasType.modifierMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__locationGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_locationGalgasType * operand_8157
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_8157 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_location (inLexique COMMA_SOURCE_FILE_AT_LINE (244)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_string"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_string ;
static bool gCacheFlagForOnceFunction_modifierMapFor_string = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_string (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_string) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_string at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setCapacity"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (251)) ;
    ::routine_enterModifierWithUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("incIndentation"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (252)) ;
    ::routine_enterModifierWithUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("decIndentation"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (253)) ;
    ::routine_enterModifierWithCharUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setCharacterAtIndex"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (254)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_string\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_string = true ;
    gCachedResultForOnceFunction_modifierMapFor_string = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_string ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_string (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_string (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_string ("modifierMapFor_string",
                              functionForGenericCall_modifierMapFor_string,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@stringGalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__stringGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_stringGalgasType * operand_8899
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_8899 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_string (inLexique COMMA_SOURCE_FILE_AT_LINE (260)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_char"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_char ;
static bool gCacheFlagForOnceFunction_modifierMapFor_char = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_char (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_char) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_char at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_char\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_char = true ;
    gCachedResultForOnceFunction_modifierMapFor_char = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_char ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_char (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_char (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_char ("modifierMapFor_char",
                              functionForGenericCall_modifierMapFor_char,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@charGalgasType.modifierMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__charGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_charGalgasType * operand_9309
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_9309 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_char (inLexique COMMA_SOURCE_FILE_AT_LINE (272)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_bool"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_bool ;
static bool gCacheFlagForOnceFunction_modifierMapFor_bool = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_bool (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_bool) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_bool at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_bool\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_bool = true ;
    gCachedResultForOnceFunction_modifierMapFor_bool = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_bool ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_bool (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_bool (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_bool ("modifierMapFor_bool",
                              functionForGenericCall_modifierMapFor_bool,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@boolGalgasType.modifierMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__boolGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_boolGalgasType * operand_9717
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_9717 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_bool (inLexique COMMA_SOURCE_FILE_AT_LINE (284)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_uint"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_uint ;
static bool gCacheFlagForOnceFunction_modifierMapFor_uint = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_uint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_uint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_uint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_uint\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_uint = true ;
    gCachedResultForOnceFunction_modifierMapFor_uint = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_uint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_uint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_uint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_uint ("modifierMapFor_uint",
                              functionForGenericCall_modifierMapFor_uint,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@uintGalgasType.modifierMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__uintGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_uintGalgasType * operand_10127
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_10127 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_sint"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_sint ;
static bool gCacheFlagForOnceFunction_modifierMapFor_sint = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_sint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_sint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_sint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_sint\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_sint = true ;
    gCachedResultForOnceFunction_modifierMapFor_sint = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_sint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_sint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_sint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_sint ("modifierMapFor_sint",
                              functionForGenericCall_modifierMapFor_sint,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@sintGalgasType.modifierMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__sintGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_sintGalgasType * operand_10535
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_10535 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_sint (inLexique COMMA_SOURCE_FILE_AT_LINE (308)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_uint64"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_uint64 ;
static bool gCacheFlagForOnceFunction_modifierMapFor_uint64 = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_uint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_uint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_uint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_uint64\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_uint64 = true ;
    gCachedResultForOnceFunction_modifierMapFor_uint64 = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_uint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_uint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_uint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_uint64 ("modifierMapFor_uint64",
                              functionForGenericCall_modifierMapFor_uint64,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@uint64GalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__uint64GalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_uint64GalgasType * operand_10947
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_10947 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_uint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (320)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_sint64"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_sint64 ;
static bool gCacheFlagForOnceFunction_modifierMapFor_sint64 = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_sint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_sint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_sint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_sint64\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_sint64 = true ;
    gCachedResultForOnceFunction_modifierMapFor_sint64 = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_sint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_sint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_sint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_sint64 ("modifierMapFor_sint64",
                              functionForGenericCall_modifierMapFor_sint64,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@sint64GalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__sint64GalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_sint64GalgasType * operand_11361
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_11361 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_sint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (332)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_double"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_double ;
static bool gCacheFlagForOnceFunction_modifierMapFor_double = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_double (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_double) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_double at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_double\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_double = true ;
    gCachedResultForOnceFunction_modifierMapFor_double = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_double ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_double (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_double (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_double ("modifierMapFor_double",
                              functionForGenericCall_modifierMapFor_double,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@doubleGalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__doubleGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_doubleGalgasType * operand_11775
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_11775 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_double (inLexique COMMA_SOURCE_FILE_AT_LINE (344)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_lstring"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_lstring ;
static bool gCacheFlagForOnceFunction_modifierMapFor_lstring = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_lstring (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_lstring) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_lstring at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithStringInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setString"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (351)) ;
    ::routine_enterModifierWithLocationInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (352)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_lstring\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_lstring = true ;
    gCachedResultForOnceFunction_modifierMapFor_lstring = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_lstring ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_lstring (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_lstring (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_lstring ("modifierMapFor_lstring",
                              functionForGenericCall_modifierMapFor_lstring,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@lstringGalgasType.modifierMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__lstringGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_lstringGalgasType * operand_12351
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_12351 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_lstring (inLexique COMMA_SOURCE_FILE_AT_LINE (358)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_lchar"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_lchar ;
static bool gCacheFlagForOnceFunction_modifierMapFor_lchar = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_lchar (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_lchar) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_lchar at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithCharInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setChar"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (365)) ;
    ::routine_enterModifierWithLocationInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (366)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_lchar\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_lchar = true ;
    gCachedResultForOnceFunction_modifierMapFor_lchar = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_lchar ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_lchar (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_lchar (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_lchar ("modifierMapFor_lchar",
                              functionForGenericCall_modifierMapFor_lchar,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@lcharGalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__lcharGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_lcharGalgasType * operand_12920
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_12920 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_lchar (inLexique COMMA_SOURCE_FILE_AT_LINE (372)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_lbool"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_lbool ;
static bool gCacheFlagForOnceFunction_modifierMapFor_lbool = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_lbool (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_lbool) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_lbool at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithBoolInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setBool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (379)) ;
    ::routine_enterModifierWithLocationInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (380)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_lbool\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_lbool = true ;
    gCachedResultForOnceFunction_modifierMapFor_lbool = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_lbool ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_lbool (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_lbool (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_lbool ("modifierMapFor_lbool",
                              functionForGenericCall_modifierMapFor_lbool,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@lboolGalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__lboolGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_lboolGalgasType * operand_13487
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_13487 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_lbool (inLexique COMMA_SOURCE_FILE_AT_LINE (386)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_luint"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_luint ;
static bool gCacheFlagForOnceFunction_modifierMapFor_luint = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_luint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_luint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_luint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setUint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (393)) ;
    ::routine_enterModifierWithLocationInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (394)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_luint\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_luint = true ;
    gCachedResultForOnceFunction_modifierMapFor_luint = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_luint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_luint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_luint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_luint ("modifierMapFor_luint",
                              functionForGenericCall_modifierMapFor_luint,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@luintGalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__luintGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_luintGalgasType * operand_14054
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_14054 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_luint (inLexique COMMA_SOURCE_FILE_AT_LINE (400)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_lsint"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_lsint ;
static bool gCacheFlagForOnceFunction_modifierMapFor_lsint = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_lsint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_lsint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_lsint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithSintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setSint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (407)) ;
    ::routine_enterModifierWithLocationInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (408)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_lsint\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_lsint = true ;
    gCachedResultForOnceFunction_modifierMapFor_lsint = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_lsint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_lsint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_lsint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_lsint ("modifierMapFor_lsint",
                              functionForGenericCall_modifierMapFor_lsint,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@lsintGalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__lsintGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_lsintGalgasType * operand_14621
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_14621 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_lsint (inLexique COMMA_SOURCE_FILE_AT_LINE (414)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_luint64"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_luint64 ;
static bool gCacheFlagForOnceFunction_modifierMapFor_luint64 = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_luint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_luint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_luint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithUint64InputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setUint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (421)) ;
    ::routine_enterModifierWithLocationInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (422)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_luint64\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_luint64 = true ;
    gCachedResultForOnceFunction_modifierMapFor_luint64 = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_luint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_luint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_luint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_luint64 ("modifierMapFor_luint64",
                              functionForGenericCall_modifierMapFor_luint64,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@luint64GalgasType.modifierMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__luint64GalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_luint64GalgasType * operand_15196
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_15196 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_luint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (428)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_lsint64"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_lsint64 ;
static bool gCacheFlagForOnceFunction_modifierMapFor_lsint64 = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_lsint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_lsint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_lsint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithSint64InputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setSint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (435)) ;
    ::routine_enterModifierWithLocationInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (436)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_lsint64\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_lsint64 = true ;
    gCachedResultForOnceFunction_modifierMapFor_lsint64 = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_lsint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_lsint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_lsint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_lsint64 ("modifierMapFor_lsint64",
                              functionForGenericCall_modifierMapFor_lsint64,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@lsint64GalgasType.modifierMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__lsint64GalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_lsint64GalgasType * operand_15773
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_15773 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_lsint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (442)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_ldouble"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_ldouble ;
static bool gCacheFlagForOnceFunction_modifierMapFor_ldouble = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_ldouble (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_ldouble) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_ldouble at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithDoubleInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setDouble"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (449)) ;
    ::routine_enterModifierWithLocationInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (450)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_ldouble\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_ldouble = true ;
    gCachedResultForOnceFunction_modifierMapFor_ldouble = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_ldouble ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_ldouble (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_ldouble (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_ldouble ("modifierMapFor_ldouble",
                              functionForGenericCall_modifierMapFor_ldouble,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@ldoubleGalgasType.modifierMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__ldoubleGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_ldoubleGalgasType * operand_16350
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_16350 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_ldouble (inLexique COMMA_SOURCE_FILE_AT_LINE (456)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "modifierMapFor_stringset"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_stringset ;
static bool gCacheFlagForOnceFunction_modifierMapFor_stringset = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_stringset (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_stringset) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_stringset at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_stringset\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_stringset = true ;
    gCachedResultForOnceFunction_modifierMapFor_stringset = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_stringset ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_stringset (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_stringset (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_stringset ("modifierMapFor_stringset",
                              functionForGenericCall_modifierMapFor_stringset,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@stringsetGalgasType.modifierMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__stringsetGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_stringsetGalgasType * operand_16771
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_16771 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_stringset (inLexique COMMA_SOURCE_FILE_AT_LINE (468)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "modifierMapFor_binaryset"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_binaryset ;
static bool gCacheFlagForOnceFunction_modifierMapFor_binaryset = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_binaryset (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_binaryset) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_binaryset at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_binaryset\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_binaryset = true ;
    gCachedResultForOnceFunction_modifierMapFor_binaryset = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_binaryset ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_binaryset (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_binaryset (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_binaryset ("modifierMapFor_binaryset",
                              functionForGenericCall_modifierMapFor_binaryset,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@binarysetGalgasType.modifierMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__binarysetGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_binarysetGalgasType * operand_17194
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_17194 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_binaryset (inLexique COMMA_SOURCE_FILE_AT_LINE (480)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_type"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_type ;
static bool gCacheFlagForOnceFunction_modifierMapFor_type = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_type (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_type) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_type at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_type\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_type = true ;
    gCachedResultForOnceFunction_modifierMapFor_type = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_type ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_type (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_type (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_type ("modifierMapFor_type",
                              functionForGenericCall_modifierMapFor_type,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@typeGalgasType.modifierMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__typeGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_typeGalgasType * operand_17607
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_17607 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_type (inLexique COMMA_SOURCE_FILE_AT_LINE (492)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_object"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_object ;
static bool gCacheFlagForOnceFunction_modifierMapFor_object = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_object (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_object) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_object at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_object\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_object = true ;
    gCachedResultForOnceFunction_modifierMapFor_object = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_object ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_object (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_object (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_object ("modifierMapFor_object",
                              functionForGenericCall_modifierMapFor_object,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@objectGalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__objectGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_objectGalgasType * operand_18019
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_18019 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_object (inLexique COMMA_SOURCE_FILE_AT_LINE (504)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "modifierMapFor_data"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_data ;
static bool gCacheFlagForOnceFunction_modifierMapFor_data = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_data (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_data) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_data at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("appendByte"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (511)) ;
    ::routine_enterModifierWithUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("appendShortBE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (512)) ;
    ::routine_enterModifierWithUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("appendShortLE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (513)) ;
    ::routine_enterModifierWithUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("appendUIntBE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (514)) ;
    ::routine_enterModifierWithUintInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("appendUIntLE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (515)) ;
    ::routine_enterModifierWithStringInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("appendUTF8String"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (516)) ;
    ::routine_enterModifierWithDataInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("appendData"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (517)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_data\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_data = true ;
    gCachedResultForOnceFunction_modifierMapFor_data = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_data ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_data (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_data (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_data ("modifierMapFor_data",
                              functionForGenericCall_modifierMapFor_data,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@dataGalgasType.modifierMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__dataGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_dataGalgasType * operand_18986
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_18986 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_data (inLexique COMMA_SOURCE_FILE_AT_LINE (523)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "modifierMapFor_function"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_function ;
static bool gCacheFlagForOnceFunction_modifierMapFor_function = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_function (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_function) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_function at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_function\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_function = true ;
    gCachedResultForOnceFunction_modifierMapFor_function = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_function ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_function (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_function (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_function ("modifierMapFor_function",
                              functionForGenericCall_modifierMapFor_function,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@functionGalgasType.modifierMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__functionGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_functionGalgasType * operand_19402
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_19402 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_function (inLexique COMMA_SOURCE_FILE_AT_LINE (535)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@classGalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__classGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_classGalgasType * operand_19621
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_19621 != NULL) {
    const GGS_bool cond_19744 = operand_19621->mSuperClassIndex.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (541)) ;
    if (cond_19744.isBuiltAndTrue ()) {
      var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    }else if (cond_19744.isBuiltAndFalse ()) {
      GGS_ACGalgasType  var_cas_superClassType ;
      GGS_lstring  automatic_var_19831_0 ;
      const GGS_typeMapIndex  temp_19811 = operand_19621->mSuperClassIndex ;
      if (temp_19811.isBuilt ()) {
        temp_19811 (HERE)->method_searchKey (inLexique, automatic_var_19831_0, var_cas_superClassType COMMA_SOURCE_FILE_AT_LINE (545)) ;
      }
      var_cas_outModifierMap = (findCategoryReader__ACGalgasType__modifierMap (var_cas_superClassType (HERE)->galgasRTTI ()) (inLexique, var_cas_superClassType.getPtr () COMMA_SOURCE_FILE_AT_LINE (546))) ;
    }
    {
      GGS_attributeList::cEnumerator enumerator_19922 (operand_19621->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_19922 = NULL ;
      while (((operand_19922 = enumerator_19922.nextObject ()))) {
        macroValidPointer (operand_19922) ;
        GGS_ACGalgasType  var_cas_t ;
        GGS_lstring  automatic_var_19989_0 ;
        const GGS_typeMapIndex  temp_19982 = operand_19922->mAttributeTypeIndex ;
        if (temp_19982.isBuilt ()) {
          temp_19982 (HERE)->method_searchKey (inLexique, automatic_var_19989_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (550)) ;
        }
        GGS_formalParameterSignature  var_cas_accessorSignature = GGS_formalParameterSignature ::constructor_emptyList () ;
        var_cas_accessorSignature.addAssign_operation (GGS_lstringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
        var_cas_accessorSignature.addAssign_operation (var_cas_t, GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
        var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, (GGS_string ("set")).operator_concat (operand_19922->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ()), operand_19922->mAttributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (556)) COMMA_HERE), var_cas_accessorSignature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (555)) ;
      }
    }
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@listGalgasType.modifierMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__listGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_listGalgasType * operand_20607
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_20607 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_formalParameterSignature  var_cas_extractSignature = GGS_formalParameterSignature ::constructor_emptyList () ;
    GGS_formalParameterSignature  var_cas_inputSignature = GGS_formalParameterSignature ::constructor_emptyList () ;
    {
      GGS_attributeList::cEnumerator enumerator_20826 (operand_20607->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_20826 = NULL ;
      while (((operand_20826 = enumerator_20826.nextObject ()))) {
        macroValidPointer (operand_20826) ;
        GGS_ACGalgasType  var_cas_t ;
        GGS_lstring  automatic_var_20893_0 ;
        const GGS_typeMapIndex  temp_20886 = operand_20826->mAttributeTypeIndex ;
        if (temp_20886.isBuilt ()) {
          temp_20886 (HERE)->method_searchKey (inLexique, automatic_var_20893_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (571)) ;
        }
        var_cas_extractSignature.addAssign_operation (var_cas_t, GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
        var_cas_inputSignature.addAssign_operation (var_cas_t, GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
      }
    }
    var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("popFirst"), GGS_location (inLexique) COMMA_HERE), var_cas_extractSignature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (575)) ;
    var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("popLast"), GGS_location (inLexique) COMMA_HERE), var_cas_extractSignature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (580)) ;
    var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("prependValue"), GGS_location (inLexique) COMMA_HERE), var_cas_inputSignature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (585)) ;
    {
      GGS_attributeList::cEnumerator enumerator_21402 (operand_20607->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_21402 = NULL ;
      while (((operand_21402 = enumerator_21402.nextObject ()))) {
        macroValidPointer (operand_21402) ;
        GGS_ACGalgasType  var_cas_t ;
        GGS_lstring  automatic_var_21469_0 ;
        const GGS_typeMapIndex  temp_21462 = operand_21402->mAttributeTypeIndex ;
        if (temp_21462.isBuilt ()) {
          temp_21462 (HERE)->method_searchKey (inLexique, automatic_var_21469_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (592)) ;
        }
        GGS_formalParameterSignature  var_cas_signature = GGS_formalParameterSignature ::constructor_emptyList () ;
        var_cas_signature.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
        var_cas_signature.addAssign_operation (var_cas_t, GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
        var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, ((GGS_string ("set")).operator_concat (operand_21402->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (597)).reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("AtIndex")), operand_21402->mAttributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (597)) COMMA_HERE), var_cas_signature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (596)) ;
      }
    }
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "modifierMapFor_listmap"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_modifierMapFor_listmap ;
static bool gCacheFlagForOnceFunction_modifierMapFor_listmap = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_modifierMapFor_listmap (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_modifierMapFor_listmap) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_modifierMapFor_listmap at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_modifierMapFor_listmap\n") ;
    #endif
    gCacheFlagForOnceFunction_modifierMapFor_listmap = true ;
    gCachedResultForOnceFunction_modifierMapFor_listmap = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_modifierMapFor_listmap ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_modifierMapFor_listmap (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_modifierMapFor_listmap (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_modifierMapFor_listmap ("modifierMapFor_listmap",
                              functionForGenericCall_modifierMapFor_listmap,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@listmapGalgasType.modifierMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__listmapGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_listmapGalgasType * operand_22233
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_22233 != NULL) {
    var_cas_outModifierMap = function_modifierMapFor_listmap (inLexique COMMA_SOURCE_FILE_AT_LINE (613)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@structGalgasType.modifierMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__structGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_structGalgasType * operand_22452
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_22452 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Category reader '@sortedlistGalgasType.modifierMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__sortedlistGalgasType__modifierMap (C_Compiler & inLexique,
                                const cPtr_sortedlistGalgasType * operand_22673
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_22673 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_formalParameterSignature  var_cas_extractSignature = GGS_formalParameterSignature ::constructor_emptyList () ;
    {
      GGS_attributeList::cEnumerator enumerator_22835 (operand_22673->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_22835 = NULL ;
      while (((operand_22835 = enumerator_22835.nextObject ()))) {
        macroValidPointer (operand_22835) ;
        GGS_ACGalgasType  var_cas_t ;
        GGS_lstring  automatic_var_22902_0 ;
        const GGS_typeMapIndex  temp_22895 = operand_22835->mAttributeTypeIndex ;
        if (temp_22895.isBuilt ()) {
          temp_22895 (HERE)->method_searchKey (inLexique, automatic_var_22902_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (629)) ;
        }
        var_cas_extractSignature.addAssign_operation (var_cas_t, GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
      }
    }
    var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("popSmallest"), GGS_location (inLexique) COMMA_HERE), var_cas_extractSignature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (632)) ;
    var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("popGreatest"), GGS_location (inLexique) COMMA_HERE), var_cas_extractSignature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (637)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  Category reader '@mapType.modifierMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__mapType__modifierMap (C_Compiler & inLexique,
                                const cPtr_mapType * operand_23339
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_23339 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_formalParameterSignature  var_cas_insertSignature = GGS_formalParameterSignature ::constructor_emptyList () ;
    GGS_formalParameterSignature  var_cas_removeSignature = GGS_formalParameterSignature ::constructor_emptyList () ;
    var_cas_insertSignature.addAssign_operation (GGS_lstringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    var_cas_removeSignature.addAssign_operation (GGS_lstringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    {
      GGS_attributeList::cEnumerator enumerator_23754 (operand_23339->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_23754 = NULL ;
      while (((operand_23754 = enumerator_23754.nextObject ()))) {
        macroValidPointer (operand_23754) ;
        GGS_ACGalgasType  var_cas_t ;
        GGS_lstring  automatic_var_23821_0 ;
        const GGS_typeMapIndex  temp_23814 = operand_23754->mAttributeTypeIndex ;
        if (temp_23814.isBuilt ()) {
          temp_23814 (HERE)->method_searchKey (inLexique, automatic_var_23821_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (654)) ;
        }
        var_cas_insertSignature.addAssign_operation (var_cas_t, GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
        var_cas_removeSignature.addAssign_operation (var_cas_t, GGS_formalArgumentPassingMode::constructor_argumentOut (inLexique COMMA_HERE)) ;
        GGS_formalParameterSignature  var_cas_accessorSignature = GGS_formalParameterSignature ::constructor_emptyList () ;
        var_cas_accessorSignature.addAssign_operation (GGS_lstringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
        var_cas_accessorSignature.addAssign_operation (var_cas_t, GGS_formalArgumentPassingMode::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
        var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, ((GGS_string ("set")).operator_concat (operand_23754->mAttributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ())).operator_concat (GGS_string ("ForKey")), operand_23754->mAttributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (662)) COMMA_HERE), var_cas_accessorSignature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (661)) ;
      }
    }
    {
      GGS_mapMethodMap::cEnumerator enumerator_24514 (operand_23339->mInsertMethodMap, true) ;
      const GGS_mapMethodMap::cElement * operand_24514 = NULL ;
      while (((operand_24514 = enumerator_24514.nextObject ()))) {
        macroValidPointer (operand_24514) ;
        var_cas_outModifierMap.modifier_insertKey (inLexique, operand_24514->mKey, var_cas_insertSignature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (669)) ;
      }
    }
    {
      GGS_mapMethodMap::cEnumerator enumerator_24666 (operand_23339->mRemoveMethodMap, true) ;
      const GGS_mapMethodMap::cElement * operand_24666 = NULL ;
      while (((operand_24666 = enumerator_24666.nextObject ()))) {
        macroValidPointer (operand_24666) ;
        var_cas_outModifierMap.modifier_insertKey (inLexique, operand_24666->mKey, var_cas_removeSignature, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (677)) ;
      }
    }
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@mapindexType.modifierMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__mapindexType__modifierMap (C_Compiler & inLexique,
                                const cPtr_mapindexType * operand_24906
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_24906 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Category reader '@enumType.modifierMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__enumType__modifierMap (C_Compiler & inLexique,
                                const cPtr_enumType * operand_25115
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_25115 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsModifiers (void) {
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__locationGalgasType__modifierMap, gClassInfoFor__locationGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__stringGalgasType__modifierMap, gClassInfoFor__stringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__charGalgasType__modifierMap, gClassInfoFor__charGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__boolGalgasType__modifierMap, gClassInfoFor__boolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__uintGalgasType__modifierMap, gClassInfoFor__uintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__sintGalgasType__modifierMap, gClassInfoFor__sintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__uint64GalgasType__modifierMap, gClassInfoFor__uint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__sint64GalgasType__modifierMap, gClassInfoFor__sint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__doubleGalgasType__modifierMap, gClassInfoFor__doubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__lstringGalgasType__modifierMap, gClassInfoFor__lstringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__lcharGalgasType__modifierMap, gClassInfoFor__lcharGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__lboolGalgasType__modifierMap, gClassInfoFor__lboolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__luintGalgasType__modifierMap, gClassInfoFor__luintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__lsintGalgasType__modifierMap, gClassInfoFor__lsintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__luint64GalgasType__modifierMap, gClassInfoFor__luint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__lsint64GalgasType__modifierMap, gClassInfoFor__lsint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__ldoubleGalgasType__modifierMap, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__stringsetGalgasType__modifierMap, gClassInfoFor__stringsetGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__binarysetGalgasType__modifierMap, gClassInfoFor__binarysetGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__typeGalgasType__modifierMap, gClassInfoFor__typeGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__objectGalgasType__modifierMap, gClassInfoFor__objectGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__dataGalgasType__modifierMap, gClassInfoFor__dataGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__functionGalgasType__modifierMap, gClassInfoFor__functionGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__classGalgasType__modifierMap, gClassInfoFor__classGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__listGalgasType__modifierMap, gClassInfoFor__listGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__listmapGalgasType__modifierMap, gClassInfoFor__listmapGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__structGalgasType__modifierMap, gClassInfoFor__structGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__sortedlistGalgasType__modifierMap, gClassInfoFor__sortedlistGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__mapType__modifierMap, gClassInfoFor__mapType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__mapindexType__modifierMap, gClassInfoFor__mapindexType.slotID ()) ;
  enterCategoryReader__ACGalgasType__modifierMap ((typeCategoryReader__ACGalgasType__modifierMap) category_reader__enumType__modifierMap, gClassInfoFor__enumType.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsModifiers (void) {
  gDispatchTableForReader__ACGalgasType__modifierMap.free () ;
  gCachedResultForOnceFunction_modifierMapFor_location.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_string.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_char.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_bool.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_uint.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_sint.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_uint64.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_sint64.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_double.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_lstring.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_lchar.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_lbool.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_luint.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_lsint.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_luint64.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_lsint64.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_ldouble.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_stringset.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_binaryset.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_type.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_object.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_data.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_function.drop () ;
  gCachedResultForOnceFunction_modifierMapFor_listmap.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsModifiers (prologueRoutineFor_semanticsModifiers, epilogueRoutineFor_semanticsModifiers) ;

//---------------------------------------------------------------------------*

