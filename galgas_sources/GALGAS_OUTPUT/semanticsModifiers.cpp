//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'semanticsModifiers.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 12th, 2010, at 20h32'2"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsModifiers.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsModifiers.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterModifierWithInputArgument"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithInputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inInputArgumentTypeName,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithInputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapIndex  var_cas_argumentTypeIndex ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgumentTypeName, GGS_location (inLexique) COMMA_HERE), var_cas_ioUnifiedTypeMap, var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (34)) ;
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (37)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithInputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterModifierWithOutputArgument"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithOutputArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inInputArgumentTypeName,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithOutputArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapIndex  var_cas_argumentTypeIndex ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgumentTypeName, GGS_location (inLexique) COMMA_HERE), var_cas_ioUnifiedTypeMap, var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (54)) ;
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (57)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithOutputArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterModifierWith2InputArguments"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWith2InputArguments (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inInputArgument1TypeName,
                                const GGS_string  var_cas_inInputArgument2TypeName,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWith2InputArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
  GGS_unifiedTypeMapIndex  var_cas_argumentTypeIndex ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgument1TypeName, GGS_location (inLexique) COMMA_HERE), var_cas_ioUnifiedTypeMap, var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (76)) ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  GGS_unifiedTypeMapIndex::class_method_makeRegularIndex (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inInputArgument2TypeName, GGS_location (inLexique) COMMA_HERE), var_cas_ioUnifiedTypeMap, var_cas_argumentTypeIndex COMMA_SOURCE_FILE_AT_LINE (78)) ;
  var_cas_argList.addAssign_operation (var_cas_argumentTypeIndex, GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
  var_cas_ioModifierMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (80)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWith2InputArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterModifierWithoutArgument"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterModifierWithoutArgument (C_Compiler & inLexique,
                                GGS_modifierMap  & var_cas_ioModifierMap,
                                const GGS_string  var_cas_inModifierName,
                                const GGS_bool  var_cas_inHasCompilerArgument COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterModifierWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioModifierMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inModifierName, GGS_location (inLexique) COMMA_HERE), GGS_formalParameterSignature ::constructor_emptyList (), var_cas_inHasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (94)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterModifierWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@stringPredefinedTypeAST.getModifierMap'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_stringPredefinedTypeAST * operand_4490,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4490 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("setCapacity"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (108)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("incIndentation"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (109)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("decIndentation"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (110)) ;
    ::routine_enterModifierWith2InputArguments (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("char"),  GGS_string ("uint"),  GGS_string ("setCharacterAtIndex"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (111)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@lstringPredefinedTypeAST.getModifierMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lstringPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_lstringPredefinedTypeAST * operand_5180,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5180 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("setString"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (121)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (122)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@lcharPredefinedTypeAST.getModifierMap'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lcharPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_lcharPredefinedTypeAST * operand_5650,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5650 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("char"),  GGS_string ("setChar"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (132)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (133)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@lboolPredefinedTypeAST.getModifierMap'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lboolPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_lboolPredefinedTypeAST * operand_6116,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6116 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("bool"),  GGS_string ("setBool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (143)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (144)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@luintPredefinedTypeAST.getModifierMap'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__luintPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_luintPredefinedTypeAST * operand_6582,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_6582 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("setUint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (154)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (155)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@lsintPredefinedTypeAST.getModifierMap'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lsintPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_lsintPredefinedTypeAST * operand_7048,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7048 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint"),  GGS_string ("setSint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (165)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (166)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@luint64PredefinedTypeAST.getModifierMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__luint64PredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_luint64PredefinedTypeAST * operand_7516,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7516 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64"),  GGS_string ("setUint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (176)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (177)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@lsint64PredefinedTypeAST.getModifierMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__lsint64PredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_lsint64PredefinedTypeAST * operand_7988,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7988 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint64"),  GGS_string ("setSint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (187)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (188)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@ldoublePredefinedTypeAST.getModifierMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ldoublePredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_ldoublePredefinedTypeAST * operand_8460,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8460 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("double"),  GGS_string ("setDouble"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (198)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("location"),  GGS_string ("setLocation"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (199)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@dataPredefinedTypeAST.getModifierMap'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__dataPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_dataPredefinedTypeAST * operand_8929,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8929 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendByte"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (209)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendShortBE"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (210)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendShortLE"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (211)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendUIntBE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (212)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("appendUIntLE"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (213)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("appendUTF8String"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (214)) ;
    ::routine_enterModifierWithInputArgument (inLexique,  var_cas_outModifierMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("data"),  GGS_string ("appendData"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (215)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsModifiers (void) {
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__stringPredefinedTypeAST__getModifierMap, gClassInfoFor__stringPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__lstringPredefinedTypeAST__getModifierMap, gClassInfoFor__lstringPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__lcharPredefinedTypeAST__getModifierMap, gClassInfoFor__lcharPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__lboolPredefinedTypeAST__getModifierMap, gClassInfoFor__lboolPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__luintPredefinedTypeAST__getModifierMap, gClassInfoFor__luintPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__lsintPredefinedTypeAST__getModifierMap, gClassInfoFor__lsintPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__luint64PredefinedTypeAST__getModifierMap, gClassInfoFor__luint64PredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__lsint64PredefinedTypeAST__getModifierMap, gClassInfoFor__lsint64PredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__ldoublePredefinedTypeAST__getModifierMap, gClassInfoFor__ldoublePredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__dataPredefinedTypeAST__getModifierMap, gClassInfoFor__dataPredefinedTypeAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsModifiers (prologueRoutineFor_semanticsModifiers, NULL) ;

//---------------------------------------------------------------------------*

