//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'programComponentCompilation.cpp'                   *
//                        Generated by version 2.5.0                         *
//                     october 16th, 2013, at 20h26'50"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "programComponentCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "programSLRgrammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "programComponentCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                Filewrapper 'programFileGenerationTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const cDirectoryWrapper gWrapperDirectory_0_programFileGenerationTemplate ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Filewrapper template 'programFileGenerationTemplate programFileHeader'   *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_programFileGenerationTemplate_programFileHeader (C_Compiler * inCompiler,
                                                                                   const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                   const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                   const GALGAS_lstringlist & in_TYPE_5F_PREDECLARATION_5F_LIST
                                                                                   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Filewrapper template 'programFileGenerationTemplate programFileImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_programFileGenerationTemplate_programFileImplementation (C_Compiler * inCompiler,
                                                                                           const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                           const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                           const GALGAS_programRuleList & in_PROGRAM_5F_RULE_5F_LIST,
                                                                                           const GALGAS_bool & in_HAS_5F_INDEXING
                                                                                           COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'compileBeforeClause'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileBeforeClause (const GALGAS_analysisContext constinArgument0,
                                  const GALGAS_programComponentAST constinArgument1,
                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument2,
                                  C_Compiler * inCompiler
                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'compileProgramRules'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileProgramRules (const GALGAS_analysisContext constinArgument0,
                                  const GALGAS_programComponentAST constinArgument1,
                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument2,
                                  GALGAS_bool & ioArgument3,
                                  C_Compiler * inCompiler
                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'compileAfterClause'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileAfterClause (const GALGAS_analysisContext constinArgument0,
                                 const GALGAS_programComponentAST constinArgument1,
                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument2,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Filewrapper 'programFileGenerationTemplate'                *
//                                                                           *
//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_programFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_programFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_programFileGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_programFileGenerationTemplate_0,
  0,
  gWrapperAllDirectories_programFileGenerationTemplate_0
) ;


//---------------------------------------------------------------------------*
//                                                                           *
//  Filewrapper template 'programFileGenerationTemplate programFileHeader'   *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_programFileGenerationTemplate_programFileHeader (C_Compiler * /* inCompiler */,
                                                                                   const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                   const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                   const GALGAS_lstringlist & in_TYPE_5F_PREDECLARATION_5F_LIST
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#ifndef " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "#define " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"galgas2/predefined-types.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_339_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_339 (in_IMPORTED_5F_COMPONENT_5F_LIST, kEnumeration_up) ;
    while (enumerator_339.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_339.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_339_.increment () ;
      enumerator_339.gotoNextObject () ;
    }
  }
  result << "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_504_ (0) ;
  if (in_TYPE_5F_PREDECLARATION_5F_LIST.isValid ()) {
    cEnumerator_lstringlist enumerator_504 (in_TYPE_5F_PREDECLARATION_5F_LIST, kEnumeration_up) ;
    while (enumerator_504.hasCurrentObject ()) {
      result << "class GALGAS_" ;
      result << enumerator_504.current_mValue (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (17)).stringValue () ;
      result << " ;\n" ;
      index_504_.increment () ;
      enumerator_504.gotoNextObject () ;
    }
  }
  result << "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Filewrapper template 'programFileGenerationTemplate programFileImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_programFileGenerationTemplate_programFileImplementation (C_Compiler * /* inCompiler */,
                                                                                           const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                           const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                           const GALGAS_programRuleList & in_PROGRAM_5F_RULE_5F_LIST,
                                                                                           const GALGAS_bool & in_HAS_5F_INDEXING
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#include \"" ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << ".h\"\n"
    "#include \"galgas2/C_galgas_CLI_Options.h\"\n"
    "#include \"utilities/F_DisplayException.h\"\n"
    "#include \"utilities/basic-allocation.h\"\n"
    "#include \"utilities/cpp-allocation.h\"\n"
    "#include \"utilities/C_PrologueEpilogue.h\"\n"
    "#include \"command_line_interface/F_mainForLIBPM.h\"\n"
    "#include \"command_line_interface/C_builtin_CLI_Options.h\"\n"
    "#include \"command_line_interface/F_Analyze_CLI_Options.h\"\n"
    "#include \"project_header.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_564_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_564 (in_IMPORTED_5F_COMPONENT_5F_LIST, kEnumeration_up) ;
    while (enumerator_564.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_564.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_564_.increment () ;
      enumerator_564.gotoNextObject () ;
    }
  }
  result << "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  #define SOURCE_FILE_AT_LINE(line) \"" ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << ".gProgram\", line\n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)\n"
    "#else\n"
    "  #define SOURCE_FILE_AT_LINE(line) \n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line) \n"
    "#endif\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//                      print_tool_help_message                              *\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "static void print_tool_help_message (void) {\n"
    "  co << \"Compiled with GALGAS revision NUMERO_REVISION_GALGAS\\n\" ;\n"
    "}\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "static const char * kSourceFileExtensions [] = {\n" ;
  GALGAS_uint index_1621_ (0) ;
  if (in_PROGRAM_5F_RULE_5F_LIST.isValid ()) {
    cEnumerator_programRuleList enumerator_1621 (in_PROGRAM_5F_RULE_5F_LIST, kEnumeration_up) ;
    while (enumerator_1621.hasCurrentObject ()) {
      result << "  " ;
      result << enumerator_1621.current_mSourceFileExtension (HERE).mAttribute_string.reader_utf_38_Representation (SOURCE_FILE_AT_LINE (42)).stringValue () ;
      result << ",\n" ;
      index_1621_.increment () ;
      enumerator_1621.gotoNextObject () ;
    }
  }
  result << "  NULL\n"
    "} ;    \n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "static const char * kSourceFileHelpMessages [] = {\n" ;
  GALGAS_uint index_1866_ (0) ;
  if (in_PROGRAM_5F_RULE_5F_LIST.isValid ()) {
    cEnumerator_programRuleList enumerator_1866 (in_PROGRAM_5F_RULE_5F_LIST, kEnumeration_up) ;
    while (enumerator_1866.hasCurrentObject ()) {
      result << "  " ;
      result << enumerator_1866.current_mSourceFileHelp (HERE).mAttribute_string.reader_utf_38_Representation (SOURCE_FILE_AT_LINE (52)).stringValue () ;
      result << ",\n" ;
      index_1866_.increment () ;
      enumerator_1866.gotoNextObject () ;
    }
  }
  result << "  NULL\n"
    "} ;    \n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  static const char * kVersionString = \"version \" PROJECT_VERSION_STRING \" [debug]\" ;\n"
    "#else\n"
    "  static const char * kVersionString = \"version \" PROJECT_VERSION_STRING ;\n"
    "#endif\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//                      M A I N    F O R    L I B P M                        *\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "int mainForLIBPM (int inArgc, const char * inArgv []) {\n"
    "//--- Analyze Command Line Options\n"
    "  TC_UniqueArray <C_String> sourceFilesArray ;\n"
    "  F_Analyze_CLI_Options (inArgc, inArgv,\n"
    "                         kVersionString,\n"
    "                         sourceFilesArray,\n"
    "                         kSourceFileExtensions,\n"
    "                         kSourceFileHelpMessages,\n"
    "                         print_tool_help_message) ;\n"
    "//---\n"
    "  bool verboseOptionOn = true ;\n"
    "  PMSInt16 returnCode = 0 ; // No error\n"
    "//--- Set Execution mode\n"
    "  C_String executionModeOptionErrorMessage ;\n"
    "  setExecutionMode (executionModeOptionErrorMessage) ;\n"
    "  if (executionModeOptionErrorMessage.length () > 0) {\n"
    "    co << executionModeOptionErrorMessage ;\n"
    "    returnCode = 1 ;\n"
    "  }else{\n"
    "  //--- Common lexique object\n"
    "    C_Compiler * commonLexique = NULL ;\n"
    "    macroMyNew (commonLexique, C_Compiler (NULL, \"\", \"\" COMMA_HERE)) ;\n"
    "    try{\n"
    "      routine_before (commonLexique COMMA_HERE) ;\n"
    "      verboseOptionOn = gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue ;\n"
    "      for (PMSInt32 i=0 ; i<sourceFilesArray.count () ; i++) {\n"
    "        setCurrentCompiledFilePath (sourceFilesArray (i COMMA_HERE)) ;\n"
    "        if (gOption_galgas_5F_builtin_5F_options_trace.mValue) {\n"
    "          enableTraceWithPath (sourceFilesArray (i COMMA_HERE)) ;\n"
    "        }\n"
    "        const C_String fileExtension = sourceFilesArray (i COMMA_HERE).pathExtension () ;\n"
    "        const GALGAS_string sfp = GALGAS_string (sourceFilesArray (i COMMA_HERE)) ;\n"
    "        const GALGAS_location location = commonLexique->here () ;\n"
    "        const GALGAS_lstring sourceFilePath (sfp, location) ;\n"
    "        PMSInt16 r = 0 ;\n"
    "        " ;
  GALGAS_uint index_4326_IDX (0) ;
  if (in_PROGRAM_5F_RULE_5F_LIST.isValid ()) {
    cEnumerator_programRuleList enumerator_4326 (in_PROGRAM_5F_RULE_5F_LIST, kEnumeration_up) ;
    while (enumerator_4326.hasCurrentObject ()) {
      result << "if (fileExtension == " ;
      result << enumerator_4326.current_mSourceFileExtension (HERE).mAttribute_string.reader_utf_38_Representation (SOURCE_FILE_AT_LINE (109)).stringValue () ;
      result << ") {\n" ;
      const enumGalgasBool test_0 = in_HAS_5F_INDEXING.boolEnum () ;
      if (kBoolTrue == test_0) {
        const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_4326.current_mIndexingGrammar (HERE).reader_string (SOURCE_FILE_AT_LINE (111)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
        if (kBoolTrue == test_1) {
          result << "          if (! executionModeIsIndexing ()) {\n"
            "            routine_" ;
          result << GALGAS_string ("programRule_").operator_concat (index_4326_IDX.reader_string (SOURCE_FILE_AT_LINE (113)) COMMA_SOURCE_FILE_AT_LINE (113)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (113)).stringValue () ;
          result << " (sourceFilePath, commonLexique COMMA_HERE) ;\n"
            "          }\n" ;
        }else if (kBoolFalse == test_1) {
          result << "          if (executionModeIsIndexing ()) {\n"
            "            cGrammar_" ;
          result << enumerator_4326.current_mIndexingGrammar (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (117)).stringValue () ;
          result << "::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;\n"
            "          }else{\n"
            "            routine_" ;
          result << GALGAS_string ("programRule_").operator_concat (index_4326_IDX.reader_string (SOURCE_FILE_AT_LINE (119)) COMMA_SOURCE_FILE_AT_LINE (119)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (119)).stringValue () ;
          result << " (sourceFilePath, commonLexique COMMA_HERE) ;\n"
            "          }\n" ;
        }
      }else if (kBoolFalse == test_0) {
        result << "          routine_" ;
        result << GALGAS_string ("programRule_").operator_concat (index_4326_IDX.reader_string (SOURCE_FILE_AT_LINE (123)) COMMA_SOURCE_FILE_AT_LINE (123)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (123)).stringValue () ;
        result << " (sourceFilePath, commonLexique COMMA_HERE) ;\n" ;
      }
      if (enumerator_4326.hasNextObject ()) {
        result << "        }else " ;
      }
      index_4326_IDX.increment () ;
      enumerator_4326.gotoNextObject () ;
    }
  }
  result << "        }else{\n"
    "          printf (\"*** Error: unhandled extension for file '%s' ***\\n\", sourceFilesArray (i COMMA_HERE).cString (HERE)) ;\n"
    "          r = 1 ;\n"
    "        }\n"
    "        if (r != 0) {\n"
    "          returnCode = r ;\n"
    "        }\n"
    "        closeTrace () ;\n"
    "      }\n"
    "    //--- Error or warnings \?\n"
    "      if (totalErrorCount () > 0) {\n"
    "        returnCode = 1 ; // Error code\n"
    "      }else if (totalWarningCount () > 0) {\n"
    "        if (gOption_galgas_5F_builtin_5F_options_treat_5F_warnings_5F_as_5F_error.mValue) {\n"
    "          returnCode = 1 ; // Error code\n"
    "          if (verboseOptionOn) {\n"
    "            printf (\"** Note: warnings are treated as errors. **\\n\") ;\n"
    "          }\n"
    "        }\n"
    "      }\n"
    "    //--- Epilogue\n"
    "      routine_after (commonLexique COMMA_HERE) ;\n"
    "    //--- Display error and warnings count\n"
    "      if (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue || (totalWarningCount () > 0) || (totalErrorCount () > 0)) {\n"
    "        C_String message ;\n"
    "        if (totalWarningCount () == 0) {\n"
    "          message << \"No warning\" ;\n"
    "        }else if (totalWarningCount () == 1) {\n"
    "          message << \"1 warning\" ;\n"
    "        }else{\n"
    "          message << cStringWithSigned (totalWarningCount ()) << \" warnings\" ;\n"
    "        }\n"
    "        message << \", \" ;\n"
    "        if (totalErrorCount () == 0) {\n"
    "          message << \"no error\" ;\n"
    "        }else if (totalErrorCount () == 1) {\n"
    "          message << \"1 error\" ;\n"
    "        }else{\n"
    "          message << cStringWithSigned (totalErrorCount ()) << \" errors\" ;\n"
    "        }\n"
    "        message << \".\\n\" ;\n"
    "        ggs_printMessage (message COMMA_HERE) ;\n"
    "      }\n"
    "    }catch (const M_STD_NAMESPACE exception & e) {\n"
    "      F_default_display_exception (e) ;\n"
    "      returnCode = 1 ; // Error code\n"
    "    }catch (...) {\n"
    "      printf (\"**** Unknow exception ****\\n\") ;\n"
    "      throw ;\n"
    "    }\n"
    "    macroDetachSharedObject (commonLexique) ;\n"
    "  }\n"
    "  return returnCode ;\n"
    "}\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'compileBeforeClause'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileBeforeClause (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                  const GALGAS_programComponentAST constinArgument_inProgramComponentAST,
                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioDecoratedDeclarationListForGeneration,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, constinArgument_inProgramComponentAST.reader_mPrologueList (SOURCE_FILE_AT_LINE (60)).reader_length (SOURCE_FILE_AT_LINE (60)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location var_locationOfSecondItem = constinArgument_inProgramComponentAST.reader_mPrologueList (SOURCE_FILE_AT_LINE (61)).reader_mEndOfInstructionListAtIndex (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (61)) ;
    inCompiler->emitSemanticError (var_locationOfSecondItem, GALGAS_string ("there are several 'before' declarations") COMMA_SOURCE_FILE_AT_LINE (62)) ;
    var_semanticInstructionListForGeneration.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inProgramComponentAST.reader_mPrologueList (SOURCE_FILE_AT_LINE (63)).reader_length (SOURCE_FILE_AT_LINE (63)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_semanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (64)) ;
    }else if (kBoolFalse == test_1) {
      {
      GALGAS_formalParameterListForGeneration joker_4067_0 ; // Joker input parameter
      routine_analyzeRoutineBody (constinArgument_inAnalysisContext, GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (68)), GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (69)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (70)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (71)), GALGAS_string::makeEmptyString (), constinArgument_inProgramComponentAST.reader_mPrologueList (SOURCE_FILE_AT_LINE (73)).reader_mInstructionListAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (73)), constinArgument_inProgramComponentAST.reader_mPrologueList (SOURCE_FILE_AT_LINE (74)).reader_mEndOfInstructionListAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (74)), var_semanticInstructionListForGeneration, joker_4067_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (66)) ;
      }
    }
  }
  ioArgument_ioDecoratedDeclarationListForGeneration.addAssign_operation (GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("before"), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (83)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (80)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (80)) ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'compileProgramRules'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileProgramRules (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                  const GALGAS_programComponentAST constinArgument_inProgramComponentAST,
                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioDecoratedDeclarationListForGeneration,
                                  GALGAS_bool & ioArgument_ioHasIndexing,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint var_ruleIndex = GALGAS_uint ((PMUInt32) 0U) ;
  cEnumerator_programRuleList enumerator_5047 (constinArgument_inProgramComponentAST.reader_mProgramRules (SOURCE_FILE_AT_LINE (103)), kEnumeration_up) ;
  while (enumerator_5047.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_5047.current_mIndexingGrammar (HERE).mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      ioArgument_ioHasIndexing = GALGAS_bool (true) ;
      GALGAS_bool var_hasIndexing ;
      GALGAS_grammarLabelMap joker_5233_0 ; // Joker input parameter
      constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mGrammarMap.method_searchKey (enumerator_5047.current_mIndexingGrammar (HERE), joker_5233_0, var_hasIndexing, inCompiler COMMA_SOURCE_FILE_AT_LINE (107)) ;
      const enumGalgasBool test_1 = var_hasIndexing.operator_not (SOURCE_FILE_AT_LINE (108)).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_5047.current_mIndexingGrammar (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_5047.current_mIndexingGrammar (HERE).reader_string (SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)).operator_concat (GALGAS_string ("' grammar does not enable indexing") COMMA_SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
      }
    }
    GALGAS_formalParameterListAST var_argumentList = GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (112)) ;
    var_argumentList.addAssign_operation (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (114)), GALGAS_lstring::constructor_new (GALGAS_string ("lstring"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (115)), enumerator_5047.current_mSourceFileVariableName (HERE), enumerator_5047.current_mSourceFileVariableNameIsUnused (HERE) COMMA_SOURCE_FILE_AT_LINE (113)) ;
    GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
    GALGAS_formalParameterListForGeneration var_routineSignature ;
    {
    routine_analyzeRoutineBody (constinArgument_inAnalysisContext, var_argumentList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (124)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (125)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (126)), GALGAS_string::makeEmptyString (), enumerator_5047.current_mInstructionList (HERE), enumerator_5047.current_mEndOfInstructionList (HERE), var_semanticInstructionListForGeneration, var_routineSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (121)) ;
    }
    ioArgument_ioDecoratedDeclarationListForGeneration.addAssign_operation (GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("programRule_").operator_concat (var_ruleIndex.reader_string (SOURCE_FILE_AT_LINE (135)) COMMA_SOURCE_FILE_AT_LINE (135)), var_routineSignature, var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (133)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (133)) ;
    var_ruleIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (141)) ;
    enumerator_5047.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'compileAfterClause'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileAfterClause (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                 const GALGAS_programComponentAST constinArgument_inProgramComponentAST,
                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioDecoratedDeclarationListForGeneration,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, constinArgument_inProgramComponentAST.reader_mEpilogueList (SOURCE_FILE_AT_LINE (158)).reader_length (SOURCE_FILE_AT_LINE (158)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location var_locationOfSecondItem = constinArgument_inProgramComponentAST.reader_mEpilogueList (SOURCE_FILE_AT_LINE (159)).reader_mEndOfInstructionListAtIndex (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (159)) ;
    inCompiler->emitSemanticError (var_locationOfSecondItem, GALGAS_string ("there are several 'after' declarations") COMMA_SOURCE_FILE_AT_LINE (160)) ;
    var_semanticInstructionListForGeneration.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, constinArgument_inProgramComponentAST.reader_mEpilogueList (SOURCE_FILE_AT_LINE (161)).reader_length (SOURCE_FILE_AT_LINE (161)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_semanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (162)) ;
    }else if (kBoolFalse == test_1) {
      {
      GALGAS_formalParameterListForGeneration joker_8231_0 ; // Joker input parameter
      routine_analyzeRoutineBody (constinArgument_inAnalysisContext, GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (166)), GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (167)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (168)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (169)), GALGAS_string::makeEmptyString (), constinArgument_inProgramComponentAST.reader_mEpilogueList (SOURCE_FILE_AT_LINE (171)).reader_mInstructionListAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (171)), constinArgument_inProgramComponentAST.reader_mEpilogueList (SOURCE_FILE_AT_LINE (172)).reader_mEndOfInstructionListAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (172)), var_semanticInstructionListForGeneration, joker_8231_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (164)) ;
      }
    }
  }
  ioArgument_ioDecoratedDeclarationListForGeneration.addAssign_operation (GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("after"), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (181)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (178)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (178)) ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'compileProgramComponentFromAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileProgramComponentFromAST (const GALGAS_lstring constinArgument_inSourceFile,
                                             const GALGAS_string constinArgument_inOutputDirectory,
                                             const GALGAS_programComponentAST constinArgument_inProgramComponentAST,
                                             GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (200)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (200)) ;
  GALGAS_lstring var_componentName = constinArgument_inProgramComponentAST.reader_mProgramComponentName (SOURCE_FILE_AT_LINE (202)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_componentName.reader_string (SOURCE_FILE_AT_LINE (203)).objectCompare (var_basename)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (var_componentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("GALGAS checks the component name ('").operator_concat (var_componentName.reader_string (SOURCE_FILE_AT_LINE (205)) COMMA_SOURCE_FILE_AT_LINE (205)).operator_concat (GALGAS_string ("') against the source file base name ('") COMMA_SOURCE_FILE_AT_LINE (206)).operator_concat (var_basename COMMA_SOURCE_FILE_AT_LINE (206)).operator_concat (GALGAS_string ("'): they should be identical") COMMA_SOURCE_FILE_AT_LINE (206)) COMMA_SOURCE_FILE_AT_LINE (204)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inProgramComponentAST.reader_mSemanticDeclarationList (SOURCE_FILE_AT_LINE (210)) ;
  GALGAS_stringset var_parsedFileSet = GALGAS_stringset::constructor_setWithString (constinArgument_inSourceFile.reader_string (SOURCE_FILE_AT_LINE (211)) COMMA_SOURCE_FILE_AT_LINE (211)) ;
  GALGAS_lstringlist var_optionComponentFileNameList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (212)) ;
  GALGAS_grammarComponentASTList var_grammarComponentASTList = GALGAS_grammarComponentASTList::constructor_emptyList (SOURCE_FILE_AT_LINE (213)) ;
  GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (214)) ;
  GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (215)) ;
  {
  routine_recursivelyImportSemanticComponentAndCheckNoCircularityInImportSemantics (constinArgument_inSourceFile, ioArgument_ioParsedComponentStruct, var_optionComponentFileNameList, var_grammarComponentASTList, var_semanticDeclarationList, var_parsedFileSet, var_headerIncludeList, var_implementationIncludeList, constinArgument_inProgramComponentAST.reader_mImportedComponentFileNameList (SOURCE_FILE_AT_LINE (225)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (226)), inCompiler COMMA_SOURCE_FILE_AT_LINE (216)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = var_semanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler COMMA_SOURCE_FILE_AT_LINE (230)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildSemanticContext (constinArgument_inSourceFile.reader_string (SOURCE_FILE_AT_LINE (234)), var_semanticDeclarationListWithPredefinedTypes, constinArgument_inProgramComponentAST.reader_mEndOfSourceFile (SOURCE_FILE_AT_LINE (236)), var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (233)) ;
  }
  {
  routine_buildGrammarComponentMapForSemanticAnalysis (var_grammarComponentASTList, var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (240)) ;
  }
  {
  routine_buildOptionComponentMapForSemanticAnalysis (var_optionComponentFileNameList, ioArgument_ioParsedComponentStruct, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler COMMA_SOURCE_FILE_AT_LINE (245)) ;
  }
  GALGAS_lexiqueComponentMapForSemanticAnalysis var_lexiqueMap ;
  {
  routine_buildLexiqueComponentMapForSemanticAnalysis (ioArgument_ioParsedComponentStruct, var_lexiqueMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (251)) ;
  }
  var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis = var_lexiqueMap ;
  GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
  {
  routine_performSemanticAnalysis (constinArgument_inProgramComponentAST.reader_mSemanticDeclarationList (SOURCE_FILE_AT_LINE (259)), var_semanticContext, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (258)) ;
  }
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (var_semanticContext, function_buildPredefinedTypes (var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (266)), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (267)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (269)) COMMA_SOURCE_FILE_AT_LINE (264)) ;
  {
  routine_compileBeforeClause (var_analysisContext, constinArgument_inProgramComponentAST, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (272)) ;
  }
  GALGAS_bool var_hasIndexing = GALGAS_bool (false) ;
  {
  routine_compileProgramRules (var_analysisContext, constinArgument_inProgramComponentAST, var_decoratedDeclarationListForGeneration, var_hasIndexing, inCompiler COMMA_SOURCE_FILE_AT_LINE (279)) ;
  }
  {
  routine_compileAfterClause (var_analysisContext, constinArgument_inProgramComponentAST, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (286)) ;
  }
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (292)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileHeader (inCompiler, var_componentName.reader_string (SOURCE_FILE_AT_LINE (294)), var_headerIncludeList, var_semanticContext.mAttribute_mTypeMap.reader_allKeyList (SOURCE_FILE_AT_LINE (296)) COMMA_SOURCE_FILE_AT_LINE (293))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_12796 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_12796.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_12796.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (299)) COMMA_SOURCE_FILE_AT_LINE (299)) ;
      enumerator_12796.gotoNextObject () ;
    }
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_12925 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_12925.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_12925.current_mDeclaration (HERE).ptr (), constinArgument_inOutputDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (302)) COMMA_SOURCE_FILE_AT_LINE (302)) ;
      enumerator_12925.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE_AT_LINE (306)).operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (306)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_headerString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (304)) ;
    }
  }
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (315)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileImplementation (inCompiler, var_componentName.reader_string (SOURCE_FILE_AT_LINE (317)), var_implementationIncludeList, constinArgument_inProgramComponentAST.reader_mProgramRules (SOURCE_FILE_AT_LINE (319)), var_hasIndexing COMMA_SOURCE_FILE_AT_LINE (316))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_13620 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_13620.hasCurrentObject ()) {
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_13620.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (323)) COMMA_SOURCE_FILE_AT_LINE (323)) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_13620.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (324)) COMMA_SOURCE_FILE_AT_LINE (324)) ;
      enumerator_13620.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE_AT_LINE (328)).operator_concat (GALGAS_string (".cpp") COMMA_SOURCE_FILE_AT_LINE (328)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_implementationString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (326)) ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'compileProgramComponentFromSourceFile'              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileProgramComponentFromSourceFile (const GALGAS_lstring constinArgument_inSourceFile,
                                                    const GALGAS_string constinArgument_inOutputDirectory,
                                                    GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (346)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (346)) ;
  GALGAS_lstring var_basenameKey = GALGAS_lstring::constructor_new (var_basename, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (347)) ;
  GALGAS_programComponentAST var_programComponentAST ;
  const enumGalgasBool test_0 = ioArgument_ioParsedComponentStruct.mAttribute_mParsedProgramComponentMap.reader_hasKey (var_basename COMMA_SOURCE_FILE_AT_LINE (349)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring joker_14662_0 ; // Joker input parameter
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedProgramComponentMap.method_searchKey (var_basenameKey, joker_14662_0, var_programComponentAST, inCompiler COMMA_SOURCE_FILE_AT_LINE (350)) ;
  }else if (kBoolFalse == test_0) {
    {
    cGrammar_programSLRgrammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile, var_programComponentAST COMMA_SOURCE_FILE_AT_LINE (352)) ;
    }
    {
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedProgramComponentMap.modifier_insertKey (var_basenameKey, constinArgument_inSourceFile, var_programComponentAST, inCompiler COMMA_SOURCE_FILE_AT_LINE (353)) ;
    }
  }
  {
  routine_compileProgramComponentFromAST (constinArgument_inSourceFile, constinArgument_inOutputDirectory, var_programComponentAST, ioArgument_ioParsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (356)) ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


