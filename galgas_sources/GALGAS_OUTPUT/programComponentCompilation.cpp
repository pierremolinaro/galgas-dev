//-----------------------------------------------------------------------------*
//                                                                             *
//                   File 'programComponentCompilation.cpp'                    *
//                         Generated by version 2.6.0                          *
//                       july 10th, 2014, at 20h30'43"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "programComponentCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "programSLRgrammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "programComponentCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                 Filewrapper 'programFileGenerationTemplate'                 *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_programFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_programFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_programFileGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_programFileGenerationTemplate_0,
  0,
  gWrapperAllDirectories_programFileGenerationTemplate_0
) ;


//-----------------------------------------------------------------------------*
//                                                                             *
//   Filewrapper template 'programFileGenerationTemplate programFileHeader'    *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_programFileGenerationTemplate_programFileHeader (C_Compiler * /* inCompiler */,
                                                                                   const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                   const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                   const GALGAS_lstringlist & in_TYPE_5F_PREDECLARATION_5F_LIST
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#ifndef " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "#define " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "#include \"galgas2/predefined-types.h\"\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_325_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_325 (in_IMPORTED_5F_COMPONENT_5F_LIST, kEnumeration_up) ;
    while (enumerator_325.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_325.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_325_.increment () ;
      enumerator_325.gotoNextObject () ;
    }
  }
  result << "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_483_ (0) ;
  if (in_TYPE_5F_PREDECLARATION_5F_LIST.isValid ()) {
    cEnumerator_lstringlist enumerator_483 (in_TYPE_5F_PREDECLARATION_5F_LIST, kEnumeration_up) ;
    while (enumerator_483.hasCurrentObject ()) {
      result << "class GALGAS_" ;
      result << enumerator_483.current_mValue (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (17)).stringValue () ;
      result << " ;\n" ;
      index_483_.increment () ;
      enumerator_483.gotoNextObject () ;
    }
  }
  result << "\n" ;
  return GALGAS_string (result) ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Filewrapper template 'programFileGenerationTemplate programFileImplementation'*
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_programFileGenerationTemplate_programFileImplementation (C_Compiler * inCompiler,
                                                                                           const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                           const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                           const GALGAS_programRuleList & in_PROGRAM_5F_RULE_5F_LIST,
                                                                                           const GALGAS_bool & in_HAS_5F_INDEXING
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#include \"" ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << ".h\"\n"
    "#include \"galgas2/C_galgas_CLI_Options.h\"\n"
    "#include \"galgas2/C_Compiler.h\"\n"
    "#include \"galgas2/C_galgas_io.h\"\n"
    "#include \"utilities/F_DisplayException.h\"\n"
    "#include \"utilities/basic-allocation.h\"\n"
    "#include \"utilities/cpp-allocation.h\"\n"
    "#include \"utilities/C_PrologueEpilogue.h\"\n"
    "#include \"command_line_interface/F_mainForLIBPM.h\"\n"
    "#include \"command_line_interface/C_builtin_CLI_Options.h\"\n"
    "#include \"command_line_interface/F_Analyze_CLI_Options.h\"\n"
    "#include \"project_header.h\"\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_613_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_613 (in_IMPORTED_5F_COMPONENT_5F_LIST, kEnumeration_up) ;
    while (enumerator_613.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_613.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_613_.increment () ;
      enumerator_613.gotoNextObject () ;
    }
  }
  result << "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  #define SOURCE_FILE_AT_LINE(line) \"" ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << ".gProgram\", line\n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)\n"
    "#else\n"
    "  #define SOURCE_FILE_AT_LINE(line) \n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line) \n"
    "#endif\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "//                                                                             *\n"
    "//                      print_tool_help_message                                *\n"
    "//                                                                             *\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "static void print_tool_help_message (void) {\n"
    "  co << \"Compiled with GALGAS revision NUMERO_REVISION_GALGAS\\n\" ;\n"
    "}\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "static const char * kSourceFileExtensions [] = {\n" ;
  GALGAS_uint index_1686_ (0) ;
  if (in_PROGRAM_5F_RULE_5F_LIST.isValid ()) {
    cEnumerator_programRuleList enumerator_1686 (in_PROGRAM_5F_RULE_5F_LIST, kEnumeration_up) ;
    while (enumerator_1686.hasCurrentObject ()) {
      result << "  " ;
      result << enumerator_1686.current_mSourceFileExtension (HERE).mAttribute_string.reader_utf_38_Representation (SOURCE_FILE_AT_LINE (44)).stringValue () ;
      result << ",\n" ;
      index_1686_.increment () ;
      enumerator_1686.gotoNextObject () ;
    }
  }
  result << "  NULL\n"
    "} ;    \n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "static const char * kSourceFileHelpMessages [] = {\n" ;
  GALGAS_uint index_1925_ (0) ;
  if (in_PROGRAM_5F_RULE_5F_LIST.isValid ()) {
    cEnumerator_programRuleList enumerator_1925 (in_PROGRAM_5F_RULE_5F_LIST, kEnumeration_up) ;
    while (enumerator_1925.hasCurrentObject ()) {
      result << "  " ;
      result << enumerator_1925.current_mSourceFileHelp (HERE).mAttribute_string.reader_utf_38_Representation (SOURCE_FILE_AT_LINE (54)).stringValue () ;
      result << ",\n" ;
      index_1925_.increment () ;
      enumerator_1925.gotoNextObject () ;
    }
  }
  result << "  NULL\n"
    "} ;    \n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  static const char * kVersionString = \"version \" PROJECT_VERSION_STRING \" [debug]\" ;\n"
    "#else\n"
    "  static const char * kVersionString = \"version \" PROJECT_VERSION_STRING ;\n"
    "#endif\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "//                                                                             *\n"
    "//                      M A I N    F O R    L I B P M                          *\n"
    "//                                                                             *\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "int mainForLIBPM (int inArgc, const char * inArgv []) {\n"
    "//--- Analyze Command Line Options\n"
    "  TC_UniqueArray <C_String> sourceFilesArray ;\n"
    "  F_Analyze_CLI_Options (inArgc, inArgv,\n"
    "                         kVersionString,\n"
    "                         sourceFilesArray,\n"
    "                         kSourceFileExtensions,\n"
    "                         kSourceFileHelpMessages,\n"
    "                         print_tool_help_message) ;\n"
    "//---\n"
    "  bool verboseOptionOn = true ;\n"
    "  int16_t returnCode = 0 ; // No error\n"
    "//--- Set Execution mode\n"
    "  C_String executionModeOptionErrorMessage ;\n"
    "  setExecutionMode (executionModeOptionErrorMessage) ;\n"
    "  if (executionModeOptionErrorMessage.length () > 0) {\n"
    "    co << executionModeOptionErrorMessage ;\n"
    "    returnCode = 1 ;\n"
    "  }else{\n"
    "  //--- Common lexique object\n"
    "    C_Compiler * commonLexique = NULL ;\n"
    "    macroMyNew (commonLexique, C_Compiler (NULL, \"\", \"\" COMMA_HERE)) ;\n"
    "    try{\n"
    "      routine_before (commonLexique COMMA_HERE) ;\n"
    "      verboseOptionOn = gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue ;\n"
    "      for (int32_t i=0 ; i<sourceFilesArray.count () ; i++) {\n"
    "        setCurrentCompiledFilePath (sourceFilesArray (i COMMA_HERE)) ;\n"
    "        if (gOption_galgas_5F_builtin_5F_options_trace.mValue) {\n"
    "          enableTraceWithPath (sourceFilesArray (i COMMA_HERE)) ;\n"
    "        }\n"
    "        const C_String fileExtension = sourceFilesArray (i COMMA_HERE).pathExtension () ;\n"
    "        const GALGAS_string sfp = GALGAS_string (sourceFilesArray (i COMMA_HERE)) ;\n"
    "        const GALGAS_location location = commonLexique->here () ;\n"
    "        const GALGAS_lstring sourceFilePath (sfp, location) ;\n"
    "        int16_t r = 0 ;\n"
    "        " ;
  GALGAS_uint index_4394_IDX (0) ;
  if (in_PROGRAM_5F_RULE_5F_LIST.isValid ()) {
    cEnumerator_programRuleList enumerator_4394 (in_PROGRAM_5F_RULE_5F_LIST, kEnumeration_up) ;
    while (enumerator_4394.hasCurrentObject ()) {
      result << "if (fileExtension == " ;
      result << enumerator_4394.current_mSourceFileExtension (HERE).mAttribute_string.reader_utf_38_Representation (SOURCE_FILE_AT_LINE (111)).stringValue () ;
      result << ") {\n" ;
      const enumGalgasBool test_0 = in_HAS_5F_INDEXING.boolEnum () ;
      if (kBoolTrue == test_0) {
        const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_4394.current_mIndexingGrammar (HERE).reader_string (SOURCE_FILE_AT_LINE (113)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
        if (kBoolTrue == test_1) {
          result << "          if (! executionModeIsIndexing ()) {\n"
            "            routine_" ;
          result << GALGAS_string ("programRule_").add_operation (index_4394_IDX.reader_string (SOURCE_FILE_AT_LINE (115)), inCompiler COMMA_SOURCE_FILE_AT_LINE (115)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (115)).stringValue () ;
          result << " (sourceFilePath, commonLexique COMMA_HERE) ;\n"
            "          }\n" ;
        }else if (kBoolFalse == test_1) {
          result << "          if (executionModeIsIndexing ()) {\n"
            "            cGrammar_" ;
          result << enumerator_4394.current_mIndexingGrammar (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (119)).stringValue () ;
          result << "::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;\n"
            "          }else{\n"
            "            routine_" ;
          result << GALGAS_string ("programRule_").add_operation (index_4394_IDX.reader_string (SOURCE_FILE_AT_LINE (121)), inCompiler COMMA_SOURCE_FILE_AT_LINE (121)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (121)).stringValue () ;
          result << " (sourceFilePath, commonLexique COMMA_HERE) ;\n"
            "          }\n" ;
        }
      }else if (kBoolFalse == test_0) {
        result << "          routine_" ;
        result << GALGAS_string ("programRule_").add_operation (index_4394_IDX.reader_string (SOURCE_FILE_AT_LINE (125)), inCompiler COMMA_SOURCE_FILE_AT_LINE (125)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (125)).stringValue () ;
        result << " (sourceFilePath, commonLexique COMMA_HERE) ;\n" ;
      }
      if (enumerator_4394.hasNextObject ()) {
        result << "        }else " ;
      }
      index_4394_IDX.increment () ;
      enumerator_4394.gotoNextObject () ;
    }
  }
  result << "        }else{\n"
    "          printf (\"*** Error: unhandled extension for file '%s' ***\\n\", sourceFilesArray (i COMMA_HERE).cString (HERE)) ;\n"
    "          r = 1 ;\n"
    "        }\n"
    "        if (r != 0) {\n"
    "          returnCode = r ;\n"
    "        }\n"
    "        closeTrace () ;\n"
    "      }\n"
    "    //--- Error or warnings \?\n"
    "      if (totalErrorCount () > 0) {\n"
    "        returnCode = 1 ; // Error code\n"
    "      }else if (totalWarningCount () > 0) {\n"
    "        if (gOption_galgas_5F_builtin_5F_options_treat_5F_warnings_5F_as_5F_error.mValue) {\n"
    "          returnCode = 1 ; // Error code\n"
    "          if (verboseOptionOn) {\n"
    "            printf (\"** Note: warnings are treated as errors. **\\n\") ;\n"
    "          }\n"
    "        }\n"
    "      }\n"
    "    //--- Epilogue\n"
    "      routine_after (commonLexique COMMA_HERE) ;\n"
    "    //--- Display error and warnings count\n"
    "      if (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue || (totalWarningCount () > 0) || (totalErrorCount () > 0)) {\n"
    "        C_String message ;\n"
    "        if (totalWarningCount () == 0) {\n"
    "          message << \"No warning\" ;\n"
    "        }else if (totalWarningCount () == 1) {\n"
    "          message << \"1 warning\" ;\n"
    "        }else{\n"
    "          message << cStringWithSigned (totalWarningCount ()) << \" warnings\" ;\n"
    "        }\n"
    "        message << \", \" ;\n"
    "        if (totalErrorCount () == 0) {\n"
    "          message << \"no error\" ;\n"
    "        }else if (totalErrorCount () == 1) {\n"
    "          message << \"1 error\" ;\n"
    "        }else{\n"
    "          message << cStringWithSigned (totalErrorCount ()) << \" errors\" ;\n"
    "        }\n"
    "        message << \".\\n\" ;\n"
    "        ggs_printMessage (message COMMA_HERE) ;\n"
    "      }\n"
    "    }catch (const ::std:: exception & e) {\n"
    "      F_default_display_exception (e) ;\n"
    "      returnCode = 1 ; // Error code\n"
    "    }catch (...) {\n"
    "      printf (\"**** Unknow exception ****\\n\") ;\n"
    "      throw ;\n"
    "    }\n"
    "    macroDetachSharedObject (commonLexique) ;\n"
    "  }\n"
    "  return returnCode ;\n"
    "}\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'compileBeforeClause'                        *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileBeforeClause (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                  const GALGAS_prologueEpilogueList constinArgument_inPrologueList,
                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioDecoratedDeclarationListForGeneration,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (59)) ;
  cEnumerator_prologueEpilogueList enumerator_3073 (constinArgument_inPrologueList, kEnumeration_up) ;
  while (enumerator_3073.hasCurrentObject ()) {
    GALGAS_semanticInstructionListForGeneration var_blockSemanticInstructionListForGeneration ;
    {
    GALGAS_formalParameterListForGeneration joker_3556_0 ; // Joker input parameter
    routine_analyzeRoutineBody (constinArgument_inAnalysisContext, GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (63)), GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (64)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (65)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (66)), GALGAS_string::makeEmptyString (), enumerator_3073.current_mInstructionList (HERE), enumerator_3073.current_mEndOfInstructionList (HERE), var_blockSemanticInstructionListForGeneration, joker_3556_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (61)) ;
    }
    var_semanticInstructionListForGeneration.addAssign_operation (GALGAS_semanticBlockInstructionForGeneration::constructor_new (var_blockSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (73)) COMMA_SOURCE_FILE_AT_LINE (73)) ;
    enumerator_3073.gotoNextObject () ;
  }
  ioArgument_ioDecoratedDeclarationListForGeneration.addAssign_operation (GALGAS_bool (false), GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_string ("before"), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (82)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (80)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (78)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'compileProgramRules'                        *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramRules (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                  const GALGAS_programRuleList constinArgument_inProgramRules,
                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioDecoratedDeclarationListForGeneration,
                                  GALGAS_bool & ioArgument_ioHasIndexing,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint var_ruleIndex = GALGAS_uint ((uint32_t) 0U) ;
  cEnumerator_programRuleList enumerator_4650 (constinArgument_inProgramRules, kEnumeration_up) ;
  while (enumerator_4650.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_4650.current_mIndexingGrammar (HERE).mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      ioArgument_ioHasIndexing = GALGAS_bool (true) ;
      GALGAS_bool var_hasIndexing ;
      GALGAS_grammarLabelMap joker_4812_0 ; // Joker input parameter
      GALGAS_bool joker_4835_0 ; // Joker input parameter
      constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mGrammarMap.method_searchKey (enumerator_4650.current_mIndexingGrammar (HERE), joker_4812_0, var_hasIndexing, joker_4835_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (105)) ;
      const enumGalgasBool test_1 = var_hasIndexing.operator_not (SOURCE_FILE_AT_LINE (106)).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_4650.current_mIndexingGrammar (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_4650.current_mIndexingGrammar (HERE).reader_string (SOURCE_FILE_AT_LINE (107)) COMMA_SOURCE_FILE_AT_LINE (107)).operator_concat (GALGAS_string ("' grammar does not enable indexing") COMMA_SOURCE_FILE_AT_LINE (107)) COMMA_SOURCE_FILE_AT_LINE (107)) ;
      }
    }
    GALGAS_formalParameterListAST var_argumentList = GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (110)) ;
    var_argumentList.addAssign_operation (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (112)), GALGAS_lstring::constructor_new (GALGAS_string ("lstring"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (113)), enumerator_4650.current_mSourceFileVariableName (HERE), enumerator_4650.current_mSourceFileVariableNameIsUnused (HERE) COMMA_SOURCE_FILE_AT_LINE (111)) ;
    GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
    GALGAS_formalParameterListForGeneration var_routineSignature ;
    {
    routine_analyzeRoutineBody (constinArgument_inAnalysisContext, var_argumentList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (122)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (123)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (124)), GALGAS_string::makeEmptyString (), enumerator_4650.current_mInstructionList (HERE), enumerator_4650.current_mEndOfInstructionList (HERE), var_semanticInstructionListForGeneration, var_routineSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (119)) ;
    }
    ioArgument_ioDecoratedDeclarationListForGeneration.addAssign_operation (GALGAS_bool (false), GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_string ("programRule_").operator_concat (var_ruleIndex.reader_string (SOURCE_FILE_AT_LINE (134)) COMMA_SOURCE_FILE_AT_LINE (134)), var_routineSignature, var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (133)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (131)) ;
    var_ruleIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (140)) ;
    enumerator_4650.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'compileAfterClause'                         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileAfterClause (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                 const GALGAS_prologueEpilogueList constinArgument_inEpilogueList,
                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioDecoratedDeclarationListForGeneration,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (156)) ;
  cEnumerator_prologueEpilogueList enumerator_6845 (constinArgument_inEpilogueList, kEnumeration_up) ;
  while (enumerator_6845.hasCurrentObject ()) {
    GALGAS_semanticInstructionListForGeneration var_blockSemanticInstructionListForGeneration ;
    {
    GALGAS_formalParameterListForGeneration joker_7328_0 ; // Joker input parameter
    routine_analyzeRoutineBody (constinArgument_inAnalysisContext, GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (160)), GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (161)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (162)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (163)), GALGAS_string::makeEmptyString (), enumerator_6845.current_mInstructionList (HERE), enumerator_6845.current_mEndOfInstructionList (HERE), var_blockSemanticInstructionListForGeneration, joker_7328_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (158)) ;
    }
    var_semanticInstructionListForGeneration.addAssign_operation (GALGAS_semanticBlockInstructionForGeneration::constructor_new (var_blockSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (170)) COMMA_SOURCE_FILE_AT_LINE (170)) ;
    enumerator_6845.gotoNextObject () ;
  }
  ioArgument_ioDecoratedDeclarationListForGeneration.addAssign_operation (GALGAS_bool (false), GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_string ("after"), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (179)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (177)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (175)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'compileProgramComponentFromAST'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramComponentFromAST (const GALGAS_lstring constinArgument_inSourceFile,
                                             const GALGAS_string constinArgument_inOutputDirectory,
                                             const GALGAS_programComponentAST constinArgument_inProgramComponentAST,
                                             GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (198)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (198)) ;
  GALGAS_lstring var_componentName = constinArgument_inProgramComponentAST.reader_mProgramComponentName (SOURCE_FILE_AT_LINE (200)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_componentName.reader_string (SOURCE_FILE_AT_LINE (201)).objectCompare (var_basename)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (var_componentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("GALGAS checks the component name ('").operator_concat (var_componentName.reader_string (SOURCE_FILE_AT_LINE (203)) COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (GALGAS_string ("') against the source file base name ('") COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (var_basename COMMA_SOURCE_FILE_AT_LINE (204)).operator_concat (GALGAS_string ("'): they should be identical") COMMA_SOURCE_FILE_AT_LINE (204)) COMMA_SOURCE_FILE_AT_LINE (202)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inProgramComponentAST.reader_mSemanticDeclarationList (SOURCE_FILE_AT_LINE (208)) ;
  GALGAS_stringset var_parsedFileSet = GALGAS_stringset::constructor_setWithString (constinArgument_inSourceFile.reader_string (SOURCE_FILE_AT_LINE (209)) COMMA_SOURCE_FILE_AT_LINE (209)) ;
  GALGAS_lstringlist var_optionComponentFileNameList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (210)) ;
  GALGAS_grammarComponentASTList var_grammarComponentASTList = GALGAS_grammarComponentASTList::constructor_emptyList (SOURCE_FILE_AT_LINE (211)) ;
  GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (212)) ;
  GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (213)) ;
  {
  routine_recursivelyImportSemanticComponentAndCheckNoCircularityInImportSemantics (constinArgument_inSourceFile, ioArgument_ioParsedComponentStruct, var_optionComponentFileNameList, var_grammarComponentASTList, var_semanticDeclarationList, var_parsedFileSet, var_headerIncludeList, var_implementationIncludeList, constinArgument_inProgramComponentAST.reader_mImportedComponentFileNameList (SOURCE_FILE_AT_LINE (223)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (224)), inCompiler COMMA_SOURCE_FILE_AT_LINE (214)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = var_semanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler COMMA_SOURCE_FILE_AT_LINE (228)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildSemanticContext (constinArgument_inSourceFile.reader_string (SOURCE_FILE_AT_LINE (232)), var_semanticDeclarationListWithPredefinedTypes, constinArgument_inProgramComponentAST.reader_mEndOfSourceFile (SOURCE_FILE_AT_LINE (234)), var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (231)) ;
  }
  {
  routine_buildGrammarComponentMapForSemanticAnalysis (var_grammarComponentASTList, var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (238)) ;
  }
  {
  routine_buildOptionComponentMapForSemanticAnalysis (var_optionComponentFileNameList, ioArgument_ioParsedComponentStruct, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler COMMA_SOURCE_FILE_AT_LINE (243)) ;
  }
  GALGAS_lexiqueComponentMapForSemanticAnalysis var_lexiqueMap ;
  {
  routine_buildLexiqueComponentMapForSemanticAnalysis (ioArgument_ioParsedComponentStruct, var_lexiqueMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (249)) ;
  }
  var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis = var_lexiqueMap ;
  GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
  {
  routine_performSemanticAnalysis (constinArgument_inProgramComponentAST.reader_mSemanticDeclarationList (SOURCE_FILE_AT_LINE (257)), var_semanticContext, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (256)) ;
  }
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (var_semanticContext, function_buildPredefinedTypes (var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (264)), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (265)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (267)) COMMA_SOURCE_FILE_AT_LINE (262)) ;
  {
  routine_compileBeforeClause (var_analysisContext, constinArgument_inProgramComponentAST.mAttribute_mPrologueList, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (270)) ;
  }
  GALGAS_bool var_hasIndexing = GALGAS_bool (false) ;
  {
  routine_compileProgramRules (var_analysisContext, constinArgument_inProgramComponentAST.mAttribute_mProgramRules, var_decoratedDeclarationListForGeneration, var_hasIndexing, inCompiler COMMA_SOURCE_FILE_AT_LINE (277)) ;
  }
  {
  routine_compileAfterClause (var_analysisContext, constinArgument_inProgramComponentAST.mAttribute_mEpilogueList, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (284)) ;
  }
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (290)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileHeader (inCompiler, var_componentName.reader_string (SOURCE_FILE_AT_LINE (292)), var_headerIncludeList, var_semanticContext.mAttribute_mTypeMap.reader_allKeyList (SOURCE_FILE_AT_LINE (294)) COMMA_SOURCE_FILE_AT_LINE (291))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_12096 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_12096.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_12096.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (297)) COMMA_SOURCE_FILE_AT_LINE (297)) ;
      enumerator_12096.gotoNextObject () ;
    }
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_12225 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_12225.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_12225.current_mDeclaration (HERE).ptr (), constinArgument_inOutputDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (300)) COMMA_SOURCE_FILE_AT_LINE (300)) ;
      enumerator_12225.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE_AT_LINE (304)).operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (304)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_headerString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (302)) ;
    }
  }
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (313)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileImplementation (inCompiler, var_componentName.reader_string (SOURCE_FILE_AT_LINE (315)), var_implementationIncludeList, constinArgument_inProgramComponentAST.reader_mProgramRules (SOURCE_FILE_AT_LINE (317)), var_hasIndexing COMMA_SOURCE_FILE_AT_LINE (314))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_12920 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_12920.hasCurrentObject ()) {
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_12920.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (321)) COMMA_SOURCE_FILE_AT_LINE (321)) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_12920.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (322)) COMMA_SOURCE_FILE_AT_LINE (322)) ;
      enumerator_12920.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE_AT_LINE (326)).operator_concat (GALGAS_string (".cpp") COMMA_SOURCE_FILE_AT_LINE (326)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_implementationString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (324)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//               Routine 'compileProgramComponentFromSourceFile'               *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramComponentFromSourceFile (const GALGAS_lstring constinArgument_inSourceFile,
                                                    const GALGAS_string constinArgument_inOutputDirectory,
                                                    GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (344)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (344)) ;
  GALGAS_lstring var_basenameKey = GALGAS_lstring::constructor_new (var_basename, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (345)) ;
  GALGAS_programComponentAST var_programComponentAST ;
  const enumGalgasBool test_0 = ioArgument_ioParsedComponentStruct.mAttribute_mParsedProgramComponentMap.reader_hasKey (var_basename COMMA_SOURCE_FILE_AT_LINE (347)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring joker_13959_0 ; // Joker input parameter
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedProgramComponentMap.method_searchKey (var_basenameKey, joker_13959_0, var_programComponentAST, inCompiler COMMA_SOURCE_FILE_AT_LINE (348)) ;
  }else if (kBoolFalse == test_0) {
    C_String syntaxDirectedTranslationResult_14021 ;
    cGrammar_programSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_14021, constinArgument_inSourceFile, var_programComponentAST COMMA_SOURCE_FILE_AT_LINE (350)) ;
    {
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedProgramComponentMap.modifier_insertKey (var_basenameKey, constinArgument_inSourceFile, var_programComponentAST, inCompiler COMMA_SOURCE_FILE_AT_LINE (351)) ;
    }
  }
  {
  routine_compileProgramComponentFromAST (constinArgument_inSourceFile, constinArgument_inOutputDirectory, var_programComponentAST, ioArgument_ioParsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (354)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'compileProgramComponentGalgas3'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramComponentGalgas_33_ (const GALGAS_string constinArgument_inOutputDirectory,
                                                const GALGAS_prologueEpilogueList constinArgument_inPrologueList,
                                                const GALGAS_programRuleList constinArgument_inProgramRules,
                                                const GALGAS_prologueEpilogueList constinArgument_inEpilogueList,
                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, function_buildPredefinedTypes (constinArgument_inSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (385)), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (386)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (388)) COMMA_SOURCE_FILE_AT_LINE (383)) ;
  GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE_AT_LINE (391)) ;
  {
  routine_compileBeforeClause (var_analysisContext, constinArgument_inPrologueList, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (392)) ;
  }
  GALGAS_bool var_hasIndexing = GALGAS_bool (false) ;
  {
  routine_compileProgramRules (var_analysisContext, constinArgument_inProgramRules, var_decoratedDeclarationListForGeneration, var_hasIndexing, inCompiler COMMA_SOURCE_FILE_AT_LINE (399)) ;
  }
  {
  routine_compileAfterClause (var_analysisContext, constinArgument_inEpilogueList, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (406)) ;
  }
  GALGAS_string var_programFileName = GALGAS_string ("program") ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (413)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (414)) ;
    var_headerIncludeList.addAssign_operation (GALGAS_string ("AZERTYUIOP") COMMA_SOURCE_FILE_AT_LINE (415)) ;
    GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileHeader (inCompiler, var_programFileName, var_headerIncludeList, constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_allKeyList (SOURCE_FILE_AT_LINE (419)) COMMA_SOURCE_FILE_AT_LINE (416))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_16467 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_16467.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_16467.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (422)) COMMA_SOURCE_FILE_AT_LINE (422)) ;
      enumerator_16467.gotoNextObject () ;
    }
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_16596 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_16596.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_16596.current_mDeclaration (HERE).ptr (), constinArgument_inOutputDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (425)) COMMA_SOURCE_FILE_AT_LINE (425)) ;
      enumerator_16596.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_programFileName.add_operation (GALGAS_string (".h"), inCompiler COMMA_SOURCE_FILE_AT_LINE (429)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_headerString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (427)) ;
    }
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (438)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioToolProductFileList.addAssign_operation (var_programFileName.operator_concat (GALGAS_string (".cpp") COMMA_SOURCE_FILE_AT_LINE (439)) COMMA_SOURCE_FILE_AT_LINE (439)) ;
    GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (440)) ;
    cEnumerator_optionComponentMapForSemanticAnalysis enumerator_17185 (constinArgument_inSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, kEnumeration_up) ;
    while (enumerator_17185.hasCurrentObject ()) {
      const enumGalgasBool test_2 = enumerator_17185.current_mIsPredefined (HERE).operator_not (SOURCE_FILE_AT_LINE (442)).boolEnum () ;
      if (kBoolTrue == test_2) {
        var_implementationIncludeList.addAssign_operation (enumerator_17185.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (443)) ;
      }
      enumerator_17185.gotoNextObject () ;
    }
    GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileImplementation (inCompiler, var_programFileName, var_implementationIncludeList, constinArgument_inProgramRules, var_hasIndexing COMMA_SOURCE_FILE_AT_LINE (446))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_17562 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_17562.hasCurrentObject ()) {
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_17562.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (453)) COMMA_SOURCE_FILE_AT_LINE (453)) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_17562.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (454)) COMMA_SOURCE_FILE_AT_LINE (454)) ;
      enumerator_17562.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_programFileName.operator_concat (GALGAS_string (".cpp") COMMA_SOURCE_FILE_AT_LINE (458)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_implementationString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (456)) ;
    }
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


