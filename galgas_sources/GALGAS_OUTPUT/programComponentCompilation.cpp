//-----------------------------------------------------------------------------*
//                                                                             *
//                   File 'programComponentCompilation.cpp'                    *
//                         Generated by version 2.6.0                          *
//                       july 15th, 2014, at 10h21'18"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "programComponentCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "programSLRgrammar.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//                 Filewrapper 'programFileGenerationTemplate'                 *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_programFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_programFileGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_programFileGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_programFileGenerationTemplate_0,
  0,
  gWrapperAllDirectories_programFileGenerationTemplate_0
) ;


//-----------------------------------------------------------------------------*
//                                                                             *
//   Filewrapper template 'programFileGenerationTemplate programFileHeader'    *
//                                                                             *
//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_programFileGenerationTemplate_programFileHeader (C_Compiler * /* inCompiler */,
                                                                                   const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                   const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                   const GALGAS_lstringlist & in_TYPE_5F_PREDECLARATION_5F_LIST
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#ifndef " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "#define " ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << "_ENTITIES_DEFINED\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "#include \"galgas2/predefined-types.h\"\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_325_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_325 (in_IMPORTED_5F_COMPONENT_5F_LIST, kEnumeration_up) ;
    while (enumerator_325.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_325.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_325_.increment () ;
      enumerator_325.gotoNextObject () ;
    }
  }
  result << "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_483_ (0) ;
  if (in_TYPE_5F_PREDECLARATION_5F_LIST.isValid ()) {
    cEnumerator_lstringlist enumerator_483 (in_TYPE_5F_PREDECLARATION_5F_LIST, kEnumeration_up) ;
    while (enumerator_483.hasCurrentObject ()) {
      result << "class GALGAS_" ;
      result << enumerator_483.current_mValue (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("program-file.h.gTemplate", 17)).stringValue () ;
      result << " ;\n" ;
      index_483_.increment () ;
      enumerator_483.gotoNextObject () ;
    }
  }
  result << "\n" ;
  return GALGAS_string (result) ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Filewrapper template 'programFileGenerationTemplate programFileImplementation'*
//                                                                             *
//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_programFileGenerationTemplate_programFileImplementation (C_Compiler * inCompiler,
                                                                                           const GALGAS_string & in_COMPONENT_5F_NAME,
                                                                                           const GALGAS_stringlist & in_IMPORTED_5F_COMPONENT_5F_LIST,
                                                                                           const GALGAS_programRuleList & in_PROGRAM_5F_RULE_5F_LIST,
                                                                                           const GALGAS_bool & in_HAS_5F_INDEXING
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#include \"" ;
  result << in_COMPONENT_5F_NAME.stringValue () ;
  result << ".h\"\n"
    "#include \"galgas2/C_galgas_CLI_Options.h\"\n"
    "#include \"galgas2/C_Compiler.h\"\n"
    "#include \"galgas2/C_galgas_io.h\"\n"
    "#include \"utilities/F_DisplayException.h\"\n"
    "#include \"utilities/basic-allocation.h\"\n"
    "#include \"utilities/cpp-allocation.h\"\n"
    "#include \"utilities/C_PrologueEpilogue.h\"\n"
    "#include \"command_line_interface/F_mainForLIBPM.h\"\n"
    "#include \"command_line_interface/C_builtin_CLI_Options.h\"\n"
    "#include \"command_line_interface/F_Analyze_CLI_Options.h\"\n"
    "#include \"project_header.h\"\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_613_ (0) ;
  if (in_IMPORTED_5F_COMPONENT_5F_LIST.isValid ()) {
    cEnumerator_stringlist enumerator_613 (in_IMPORTED_5F_COMPONENT_5F_LIST, kEnumeration_up) ;
    while (enumerator_613.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_613.current_mValue (HERE).stringValue () ;
      result << ".h\"\n" ;
      index_613_.increment () ;
      enumerator_613.gotoNextObject () ;
    }
  }
  result << "\n"
    "//-----------------------------------------------------------------------------*\n"
    "//                                                                             *\n"
    "//                      print_tool_help_message                                *\n"
    "//                                                                             *\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "static void print_tool_help_message (void) {\n"
    "  co << \"Compiled with GALGAS revision NUMERO_REVISION_GALGAS\\n\" ;\n"
    "}\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "static const char * kSourceFileExtensions [] = {\n" ;
  GALGAS_uint index_1335_ (0) ;
  if (in_PROGRAM_5F_RULE_5F_LIST.isValid ()) {
    cEnumerator_programRuleList enumerator_1335 (in_PROGRAM_5F_RULE_5F_LIST, kEnumeration_up) ;
    while (enumerator_1335.hasCurrentObject ()) {
      result << "  " ;
      result << enumerator_1335.current_mSourceFileExtension (HERE).mAttribute_string.reader_utf_38_Representation (SOURCE_FILE ("program-file.cpp.gTemplate", 34)).stringValue () ;
      result << ",\n" ;
      index_1335_.increment () ;
      enumerator_1335.gotoNextObject () ;
    }
  }
  result << "  NULL\n"
    "} ;    \n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "static const char * kSourceFileHelpMessages [] = {\n" ;
  GALGAS_uint index_1574_ (0) ;
  if (in_PROGRAM_5F_RULE_5F_LIST.isValid ()) {
    cEnumerator_programRuleList enumerator_1574 (in_PROGRAM_5F_RULE_5F_LIST, kEnumeration_up) ;
    while (enumerator_1574.hasCurrentObject ()) {
      result << "  " ;
      result << enumerator_1574.current_mSourceFileHelp (HERE).mAttribute_string.reader_utf_38_Representation (SOURCE_FILE ("program-file.cpp.gTemplate", 44)).stringValue () ;
      result << ",\n" ;
      index_1574_.increment () ;
      enumerator_1574.gotoNextObject () ;
    }
  }
  result << "  NULL\n"
    "} ;    \n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  static const char * kVersionString = \"version \" PROJECT_VERSION_STRING \" [debug]\" ;\n"
    "#else\n"
    "  static const char * kVersionString = \"version \" PROJECT_VERSION_STRING ;\n"
    "#endif\n"
    "\n"
    "//-----------------------------------------------------------------------------*\n"
    "//                                                                             *\n"
    "//                      M A I N    F O R    L I B P M                          *\n"
    "//                                                                             *\n"
    "//-----------------------------------------------------------------------------*\n"
    "\n"
    "int mainForLIBPM (int inArgc, const char * inArgv []) {\n"
    "//--- Analyze Command Line Options\n"
    "  TC_UniqueArray <C_String> sourceFilesArray ;\n"
    "  F_Analyze_CLI_Options (inArgc, inArgv,\n"
    "                         kVersionString,\n"
    "                         sourceFilesArray,\n"
    "                         kSourceFileExtensions,\n"
    "                         kSourceFileHelpMessages,\n"
    "                         print_tool_help_message) ;\n"
    "//---\n"
    "  bool verboseOptionOn = true ;\n"
    "  int16_t returnCode = 0 ; // No error\n"
    "//--- Set Execution mode\n"
    "  C_String executionModeOptionErrorMessage ;\n"
    "  setExecutionMode (executionModeOptionErrorMessage) ;\n"
    "  if (executionModeOptionErrorMessage.length () > 0) {\n"
    "    co << executionModeOptionErrorMessage ;\n"
    "    returnCode = 1 ;\n"
    "  }else{\n"
    "  //--- Common lexique object\n"
    "    C_Compiler * commonLexique = NULL ;\n"
    "    macroMyNew (commonLexique, C_Compiler (NULL, \"\", \"\" COMMA_HERE)) ;\n"
    "    try{\n"
    "      routine_before (commonLexique COMMA_HERE) ;\n"
    "      verboseOptionOn = gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue ;\n"
    "      for (int32_t i=0 ; i<sourceFilesArray.count () ; i++) {\n"
    "        setCurrentCompiledFilePath (sourceFilesArray (i COMMA_HERE)) ;\n"
    "        if (gOption_galgas_5F_builtin_5F_options_trace.mValue) {\n"
    "          enableTraceWithPath (sourceFilesArray (i COMMA_HERE)) ;\n"
    "        }\n"
    "        const C_String fileExtension = sourceFilesArray (i COMMA_HERE).pathExtension () ;\n"
    "        const GALGAS_string sfp = GALGAS_string (sourceFilesArray (i COMMA_HERE)) ;\n"
    "        const GALGAS_location location = commonLexique->here () ;\n"
    "        const GALGAS_lstring sourceFilePath (sfp, location) ;\n"
    "        int16_t r = 0 ;\n"
    "        " ;
  GALGAS_uint index_4043_IDX (0) ;
  if (in_PROGRAM_5F_RULE_5F_LIST.isValid ()) {
    cEnumerator_programRuleList enumerator_4043 (in_PROGRAM_5F_RULE_5F_LIST, kEnumeration_up) ;
    while (enumerator_4043.hasCurrentObject ()) {
      result << "if (fileExtension == " ;
      result << enumerator_4043.current_mSourceFileExtension (HERE).mAttribute_string.reader_utf_38_Representation (SOURCE_FILE ("program-file.cpp.gTemplate", 101)).stringValue () ;
      result << ") {\n" ;
      const enumGalgasBool test_0 = in_HAS_5F_INDEXING.boolEnum () ;
      if (kBoolTrue == test_0) {
        const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_4043.current_mIndexingGrammar (HERE).reader_string (SOURCE_FILE ("program-file.cpp.gTemplate", 103)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
        if (kBoolTrue == test_1) {
          result << "          if (! executionModeIsIndexing ()) {\n"
            "            routine_" ;
          result << GALGAS_string ("programRule_").add_operation (index_4043_IDX.reader_string (SOURCE_FILE ("program-file.cpp.gTemplate", 105)), inCompiler COMMA_SOURCE_FILE ("program-file.cpp.gTemplate", 105)).reader_identifierRepresentation (SOURCE_FILE ("program-file.cpp.gTemplate", 105)).stringValue () ;
          result << " (sourceFilePath, commonLexique COMMA_HERE) ;\n"
            "          }\n" ;
        }else if (kBoolFalse == test_1) {
          result << "          if (executionModeIsIndexing ()) {\n"
            "            cGrammar_" ;
          result << enumerator_4043.current_mIndexingGrammar (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("program-file.cpp.gTemplate", 109)).stringValue () ;
          result << "::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;\n"
            "          }else{\n"
            "            routine_" ;
          result << GALGAS_string ("programRule_").add_operation (index_4043_IDX.reader_string (SOURCE_FILE ("program-file.cpp.gTemplate", 111)), inCompiler COMMA_SOURCE_FILE ("program-file.cpp.gTemplate", 111)).reader_identifierRepresentation (SOURCE_FILE ("program-file.cpp.gTemplate", 111)).stringValue () ;
          result << " (sourceFilePath, commonLexique COMMA_HERE) ;\n"
            "          }\n" ;
        }
      }else if (kBoolFalse == test_0) {
        result << "          routine_" ;
        result << GALGAS_string ("programRule_").add_operation (index_4043_IDX.reader_string (SOURCE_FILE ("program-file.cpp.gTemplate", 115)), inCompiler COMMA_SOURCE_FILE ("program-file.cpp.gTemplate", 115)).reader_identifierRepresentation (SOURCE_FILE ("program-file.cpp.gTemplate", 115)).stringValue () ;
        result << " (sourceFilePath, commonLexique COMMA_HERE) ;\n" ;
      }
      if (enumerator_4043.hasNextObject ()) {
        result << "        }else " ;
      }
      index_4043_IDX.increment () ;
      enumerator_4043.gotoNextObject () ;
    }
  }
  result << "        }else{\n"
    "          printf (\"*** Error: unhandled extension for file '%s' ***\\n\", sourceFilesArray (i COMMA_HERE).cString (HERE)) ;\n"
    "          r = 1 ;\n"
    "        }\n"
    "        if (r != 0) {\n"
    "          returnCode = r ;\n"
    "        }\n"
    "        closeTrace () ;\n"
    "      }\n"
    "    //--- Error or warnings \?\n"
    "      if (totalErrorCount () > 0) {\n"
    "        returnCode = 1 ; // Error code\n"
    "      }else if (totalWarningCount () > 0) {\n"
    "        if (gOption_galgas_5F_builtin_5F_options_treat_5F_warnings_5F_as_5F_error.mValue) {\n"
    "          returnCode = 1 ; // Error code\n"
    "          if (verboseOptionOn) {\n"
    "            printf (\"** Note: warnings are treated as errors. **\\n\") ;\n"
    "          }\n"
    "        }\n"
    "      }\n"
    "    //--- Epilogue\n"
    "      routine_after (commonLexique COMMA_HERE) ;\n"
    "    //--- Display error and warnings count\n"
    "      if (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue || (totalWarningCount () > 0) || (totalErrorCount () > 0)) {\n"
    "        C_String message ;\n"
    "        if (totalWarningCount () == 0) {\n"
    "          message << \"No warning\" ;\n"
    "        }else if (totalWarningCount () == 1) {\n"
    "          message << \"1 warning\" ;\n"
    "        }else{\n"
    "          message << cStringWithSigned (totalWarningCount ()) << \" warnings\" ;\n"
    "        }\n"
    "        message << \", \" ;\n"
    "        if (totalErrorCount () == 0) {\n"
    "          message << \"no error\" ;\n"
    "        }else if (totalErrorCount () == 1) {\n"
    "          message << \"1 error\" ;\n"
    "        }else{\n"
    "          message << cStringWithSigned (totalErrorCount ()) << \" errors\" ;\n"
    "        }\n"
    "        message << \".\\n\" ;\n"
    "        ggs_printMessage (message COMMA_HERE) ;\n"
    "      }\n"
    "    }catch (const ::std:: exception & e) {\n"
    "      F_default_display_exception (e) ;\n"
    "      returnCode = 1 ; // Error code\n"
    "    }catch (...) {\n"
    "      printf (\"**** Unknow exception ****\\n\") ;\n"
    "      throw ;\n"
    "    }\n"
    "    macroDetachSharedObject (commonLexique) ;\n"
    "  }\n"
    "  return returnCode ;\n"
    "}\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'compileBeforeClause'                        *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileBeforeClause (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                  const GALGAS_prologueEpilogueList constinArgument_inPrologueList,
                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioDecoratedDeclarationListForGeneration,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 59)) ;
  cEnumerator_prologueEpilogueList enumerator_3073 (constinArgument_inPrologueList, kEnumeration_up) ;
  while (enumerator_3073.hasCurrentObject ()) {
    GALGAS_semanticInstructionListForGeneration var_blockSemanticInstructionListForGeneration ;
    {
    GALGAS_formalParameterListForGeneration joker_3556_0 ; // Joker input parameter
    routine_analyzeRoutineBody (constinArgument_inAnalysisContext, GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 63)), GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 64)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 65)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 66)), GALGAS_string::makeEmptyString (), enumerator_3073.current_mInstructionList (HERE), enumerator_3073.current_mEndOfInstructionList (HERE), var_blockSemanticInstructionListForGeneration, joker_3556_0, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 61)) ;
    }
    var_semanticInstructionListForGeneration.addAssign_operation (GALGAS_semanticBlockInstructionForGeneration::constructor_new (var_blockSemanticInstructionListForGeneration  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 73))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 73)) ;
    enumerator_3073.gotoNextObject () ;
  }
  ioArgument_ioDecoratedDeclarationListForGeneration.addAssign_operation (GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_bool (false), GALGAS_string ("proc-before"), GALGAS_string ("before"), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 83)), var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 79)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 78)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'compileProgramRules'                        *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramRules (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                  const GALGAS_programRuleList constinArgument_inProgramRules,
                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioDecoratedDeclarationListForGeneration,
                                  GALGAS_bool & ioArgument_ioHasIndexing,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint var_ruleIndex = GALGAS_uint ((uint32_t) 0U) ;
  cEnumerator_programRuleList enumerator_4669 (constinArgument_inProgramRules, kEnumeration_up) ;
  while (enumerator_4669.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_4669.current_mIndexingGrammar (HERE).mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      ioArgument_ioHasIndexing = GALGAS_bool (true) ;
      GALGAS_bool var_hasIndexing ;
      GALGAS_grammarLabelMap joker_4831_0 ; // Joker input parameter
      GALGAS_bool joker_4854_0 ; // Joker input parameter
      constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mGrammarMap.method_searchKey (enumerator_4669.current_mIndexingGrammar (HERE), joker_4831_0, var_hasIndexing, joker_4854_0, inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 106)) ;
      const enumGalgasBool test_1 = var_hasIndexing.operator_not (SOURCE_FILE ("programComponentCompilation.gSemantics", 107)).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_4669.current_mIndexingGrammar (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_4669.current_mIndexingGrammar (HERE).reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 108))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 108)).operator_concat (GALGAS_string ("' grammar does not enable indexing")  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 108))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 108)) ;
      }
    }
    GALGAS_formalParameterListAST var_argumentList = GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 111)) ;
    var_argumentList.addAssign_operation (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE ("programComponentCompilation.gSemantics", 113)), GALGAS_lstring::constructor_new (GALGAS_string ("lstring"), inCompiler->here ()  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 114)), enumerator_4669.current_mSourceFileVariableName (HERE), enumerator_4669.current_mSourceFileVariableNameIsUnused (HERE)  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 112)) ;
    GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
    GALGAS_formalParameterListForGeneration var_routineSignature ;
    {
    routine_analyzeRoutineBody (constinArgument_inAnalysisContext, var_argumentList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 123)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 124)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 125)), GALGAS_string::makeEmptyString (), enumerator_4669.current_mInstructionList (HERE), enumerator_4669.current_mEndOfInstructionList (HERE), var_semanticInstructionListForGeneration, var_routineSignature, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 120)) ;
    }
    ioArgument_ioDecoratedDeclarationListForGeneration.addAssign_operation (GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_bool (false), GALGAS_string ("proc-programrule"), GALGAS_string ("programRule_").operator_concat (var_ruleIndex.reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 136))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 136)), var_routineSignature, var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 133)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 132)) ;
    var_ruleIndex.increment_operation (inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 142)) ;
    enumerator_4669.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'compileAfterClause'                         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileAfterClause (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                 const GALGAS_prologueEpilogueList constinArgument_inEpilogueList,
                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioDecoratedDeclarationListForGeneration,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 158)) ;
  cEnumerator_prologueEpilogueList enumerator_6890 (constinArgument_inEpilogueList, kEnumeration_up) ;
  while (enumerator_6890.hasCurrentObject ()) {
    GALGAS_semanticInstructionListForGeneration var_blockSemanticInstructionListForGeneration ;
    {
    GALGAS_formalParameterListForGeneration joker_7373_0 ; // Joker input parameter
    routine_analyzeRoutineBody (constinArgument_inAnalysisContext, GALGAS_formalParameterListAST::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 162)), GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 163)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 164)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 165)), GALGAS_string::makeEmptyString (), enumerator_6890.current_mInstructionList (HERE), enumerator_6890.current_mEndOfInstructionList (HERE), var_blockSemanticInstructionListForGeneration, joker_7373_0, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 160)) ;
    }
    var_semanticInstructionListForGeneration.addAssign_operation (GALGAS_semanticBlockInstructionForGeneration::constructor_new (var_blockSemanticInstructionListForGeneration  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 172))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 172)) ;
    enumerator_6890.gotoNextObject () ;
  }
  ioArgument_ioDecoratedDeclarationListForGeneration.addAssign_operation (GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_bool (false), GALGAS_string ("proc-after"), GALGAS_string ("after"), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 182)), var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 178)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 177)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'compileProgramComponentFromAST'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramComponentFromAST (const GALGAS_lstring constinArgument_inSourceFile,
                                             const GALGAS_string constinArgument_inOutputDirectory,
                                             const GALGAS_programComponentAST constinArgument_inProgramComponentAST,
                                             GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("programComponentCompilation.gSemantics", 201)).reader_stringByDeletingPathExtension (SOURCE_FILE ("programComponentCompilation.gSemantics", 201)) ;
  GALGAS_lstring var_componentName = constinArgument_inProgramComponentAST.reader_mProgramComponentName (SOURCE_FILE ("programComponentCompilation.gSemantics", 203)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_componentName.reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 204)).objectCompare (var_basename)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (var_componentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("GALGAS checks the component name ('").operator_concat (var_componentName.reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 206))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 206)).operator_concat (GALGAS_string ("') against the source file base name ('")  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 206)).operator_concat (var_basename  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 207)).operator_concat (GALGAS_string ("'): they should be identical")  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 207))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 205)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inProgramComponentAST.reader_mSemanticDeclarationList (SOURCE_FILE ("programComponentCompilation.gSemantics", 211)) ;
  GALGAS_stringset var_parsedFileSet = GALGAS_stringset::constructor_setWithString (constinArgument_inSourceFile.reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 212)) COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 212)) ;
  GALGAS_lstringlist var_optionComponentFileNameList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 213)) ;
  GALGAS_grammarComponentASTList var_grammarComponentASTList = GALGAS_grammarComponentASTList::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 214)) ;
  GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 215)) ;
  GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 216)) ;
  {
  routine_recursivelyImportSemanticComponentAndCheckNoCircularityInImportSemantics (constinArgument_inSourceFile, ioArgument_ioParsedComponentStruct, var_optionComponentFileNameList, var_grammarComponentASTList, var_semanticDeclarationList, var_parsedFileSet, var_headerIncludeList, var_implementationIncludeList, constinArgument_inProgramComponentAST.reader_mImportedComponentFileNameList (SOURCE_FILE ("programComponentCompilation.gSemantics", 226)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("programComponentCompilation.gSemantics", 227)), inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 217)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = var_semanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 231)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildSemanticContext (constinArgument_inSourceFile.reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 235)), var_semanticDeclarationListWithPredefinedTypes, constinArgument_inProgramComponentAST.reader_mEndOfSourceFile (SOURCE_FILE ("programComponentCompilation.gSemantics", 237)), var_semanticContext, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 234)) ;
  }
  {
  routine_buildGrammarComponentMapForSemanticAnalysis (var_grammarComponentASTList, var_semanticContext, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 241)) ;
  }
  {
  routine_buildOptionComponentMapForSemanticAnalysis (var_optionComponentFileNameList, ioArgument_ioParsedComponentStruct, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 246)) ;
  }
  GALGAS_lexiqueComponentMapForSemanticAnalysis var_lexiqueMap ;
  {
  routine_buildLexiqueComponentMapForSemanticAnalysis (ioArgument_ioParsedComponentStruct, var_lexiqueMap, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 252)) ;
  }
  var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis = var_lexiqueMap ;
  GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
  {
  routine_performSemanticAnalysis (constinArgument_inProgramComponentAST.reader_mSemanticDeclarationList (SOURCE_FILE ("programComponentCompilation.gSemantics", 260)), var_semanticContext, var_decoratedDeclarationListForGeneration, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 259)) ;
  }
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (var_semanticContext, function_buildPredefinedTypes (var_semanticContext, inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 267)), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("programComponentCompilation.gSemantics", 268)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("programComponentCompilation.gSemantics", 270))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 265)) ;
  {
  routine_compileBeforeClause (var_analysisContext, constinArgument_inProgramComponentAST.mAttribute_mPrologueList, var_decoratedDeclarationListForGeneration, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 273)) ;
  }
  GALGAS_bool var_hasIndexing = GALGAS_bool (false) ;
  {
  routine_compileProgramRules (var_analysisContext, constinArgument_inProgramComponentAST.mAttribute_mProgramRules, var_decoratedDeclarationListForGeneration, var_hasIndexing, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 280)) ;
  }
  {
  routine_compileAfterClause (var_analysisContext, constinArgument_inProgramComponentAST.mAttribute_mEpilogueList, var_decoratedDeclarationListForGeneration, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 287)) ;
  }
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("programComponentCompilation.gSemantics", 293)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileHeader (inCompiler, var_componentName.reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 295)), var_headerIncludeList, var_semanticContext.mAttribute_mTypeMap.reader_allKeyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 297)) COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 294))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_12159 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_12159.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_12159.current_mDeclaration (HERE).ptr (), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 300))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 300)) ;
      enumerator_12159.gotoNextObject () ;
    }
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_12295 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_12295.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_12295.current_mDeclaration (HERE).ptr (), constinArgument_inOutputDirectory, GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 303))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 303)) ;
      enumerator_12295.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 307)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 307)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_headerString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 305)) ;
    }
  }
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("programComponentCompilation.gSemantics", 316)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileImplementation (inCompiler, var_componentName.reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 318)), var_implementationIncludeList, constinArgument_inProgramComponentAST.reader_mProgramRules (SOURCE_FILE ("programComponentCompilation.gSemantics", 320)), var_hasIndexing COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 317))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_12997 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_12997.hasCurrentObject ()) {
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_12997.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 324))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 324)) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_12997.current_mDeclaration (HERE).ptr (), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 325))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 325)) ;
      enumerator_12997.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE ("programComponentCompilation.gSemantics", 329)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 329)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_implementationString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 327)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//               Routine 'compileProgramComponentFromSourceFile'               *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramComponentFromSourceFile (const GALGAS_lstring constinArgument_inSourceFile,
                                                    const GALGAS_string constinArgument_inOutputDirectory,
                                                    GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("programComponentCompilation.gSemantics", 347)).reader_stringByDeletingPathExtension (SOURCE_FILE ("programComponentCompilation.gSemantics", 347)) ;
  GALGAS_lstring var_basenameKey = GALGAS_lstring::constructor_new (var_basename, inCompiler->here ()  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 348)) ;
  GALGAS_programComponentAST var_programComponentAST ;
  const enumGalgasBool test_0 = ioArgument_ioParsedComponentStruct.mAttribute_mParsedProgramComponentMap.reader_hasKey (var_basename COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 350)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring joker_14043_0 ; // Joker input parameter
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedProgramComponentMap.method_searchKey (var_basenameKey, joker_14043_0, var_programComponentAST, inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 351)) ;
  }else if (kBoolFalse == test_0) {
    var_programComponentAST.drop () ;
    C_String syntaxDirectedTranslationResult_14105 ;
    cGrammar_programSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_14105, constinArgument_inSourceFile, var_programComponentAST  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 353)) ;
    {
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedProgramComponentMap.modifier_insertKey (var_basenameKey, constinArgument_inSourceFile, var_programComponentAST, inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 354)) ;
    }
  }
  {
  routine_compileProgramComponentFromAST (constinArgument_inSourceFile, constinArgument_inOutputDirectory, var_programComponentAST, ioArgument_ioParsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 357)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'compileProgramComponentGalgas3'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileProgramComponentGalgas_33_ (const GALGAS_string constinArgument_inOutputDirectory,
                                                const GALGAS_prologueEpilogueList constinArgument_inPrologueList,
                                                const GALGAS_programRuleList constinArgument_inProgramRules,
                                                const GALGAS_prologueEpilogueList constinArgument_inEpilogueList,
                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, function_buildPredefinedTypes (constinArgument_inSemanticContext, inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 383)), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("programComponentCompilation.gSemantics", 384)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("programComponentCompilation.gSemantics", 386))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 381)) ;
  GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE ("programComponentCompilation.gSemantics", 389)) ;
  {
  routine_compileBeforeClause (var_analysisContext, constinArgument_inPrologueList, var_decoratedDeclarationListForGeneration, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 390)) ;
  }
  GALGAS_bool var_hasIndexing = GALGAS_bool (false) ;
  {
  routine_compileProgramRules (var_analysisContext, constinArgument_inProgramRules, var_decoratedDeclarationListForGeneration, var_hasIndexing, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 397)) ;
  }
  {
  routine_compileAfterClause (var_analysisContext, constinArgument_inEpilogueList, var_decoratedDeclarationListForGeneration, inCompiler  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 404)) ;
  }
  GALGAS_string var_programFileName = GALGAS_string ("program") ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("programComponentCompilation.gSemantics", 411)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 412)) ;
    var_headerIncludeList.addAssign_operation (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 413)) ;
    GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileHeader (inCompiler, var_programFileName, var_headerIncludeList, constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_allKeyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 417)) COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 414))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_16376 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_16376.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_16376.current_mDeclaration (HERE).ptr (), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 420))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 420)) ;
      enumerator_16376.gotoNextObject () ;
    }
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_16511 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_16511.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_16511.current_mDeclaration (HERE).ptr (), constinArgument_inOutputDirectory, GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 423))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 423)) ;
      enumerator_16511.gotoNextObject () ;
    }
    ioArgument_ioAllProductFileSet.addAssign_operation (var_programFileName.add_operation (GALGAS_string (".h"), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 425))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 425)) ;
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_programFileName.add_operation (GALGAS_string (".h"), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 428)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_headerString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 426)) ;
    }
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("programComponentCompilation.gSemantics", 437)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    ioArgument_ioToolProductFileList.addAssign_operation (var_programFileName.operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 438))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 438)) ;
    GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("programComponentCompilation.gSemantics", 439)) ;
    cEnumerator_optionComponentMapForSemanticAnalysis enumerator_17159 (constinArgument_inSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, kEnumeration_up) ;
    while (enumerator_17159.hasCurrentObject ()) {
      const enumGalgasBool test_2 = enumerator_17159.current_mIsPredefined (HERE).operator_not (SOURCE_FILE ("programComponentCompilation.gSemantics", 441)).boolEnum () ;
      if (kBoolTrue == test_2) {
        var_implementationIncludeList.addAssign_operation (GALGAS_string ("option-").operator_concat (enumerator_17159.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 442))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 442)) ;
      }
      enumerator_17159.gotoNextObject () ;
    }
    cEnumerator_grammarMap enumerator_17332 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
    while (enumerator_17332.hasCurrentObject ()) {
      var_implementationIncludeList.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_17332.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 446))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 446)) ;
      enumerator_17332.gotoNextObject () ;
    }
    GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_programFileGenerationTemplate_programFileImplementation (inCompiler, var_programFileName, var_implementationIncludeList, constinArgument_inProgramRules, var_hasIndexing COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 448))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_17673 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_17673.hasCurrentObject ()) {
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_17673.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 455))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 455)) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_17673.current_mDeclaration (HERE).ptr (), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 456))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 456)) ;
      enumerator_17673.gotoNextObject () ;
    }
    ioArgument_ioAllProductFileSet.addAssign_operation (var_programFileName.add_operation (GALGAS_string (".cpp"), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 458))  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 458)) ;
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_programFileName.operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 461)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_implementationString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("programComponentCompilation.gSemantics", 459)) ;
    }
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


