//---------------------------------------------------------------------------*
//                                                                           *
//           File 'include_typeInstructionDeclarationVarLocale.h'            *
//                Generated by version GALGAS_BETA_VERSION (LL(1) grammar)                 *
//                     october 29th, 2005, at 20h9'42"                       *
//                                                                           *
// This program is free software; you can redistribute it and/or modify it   *
// under the terms of the GNU General Public License as published by the     *
// Free Software Foundation.                                                 *
//                                                                           *
// This program is distributed in the hope it will be useful, but WITHOUT    *
// ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or     *
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
// more details.                                                             *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'cPtr_typeInstructionDeclarationVarLocale'              *
//                                                                           *
//---------------------------------------------------------------------------*

#ifndef typeInstructionDeclarationVarLocale_DEFINED
#define typeInstructionDeclarationVarLocale_DEFINED

class cPtr_typeInstructionDeclarationVarLocale : public cPtr_typeInstruction {
  private : typedef cPtr_typeInstruction inherited ;
//--- START OF USER ZONE 2

public : virtual void generateInstruction (AC_OutputStream & inCppFile,
                                           const C_String & inLexiqueClassName,
                                           const C_String & inTargetFileName,
                                           sint32 & ioPrototypeIndex,
                                           const bool inGenerateDebug,
                                           const bool inGenerateSemanticInstructions) const ;
public : virtual bool isLexiqueFormalArgumentUsed (const bool inGenerateSemanticInstructions) const ;
public : virtual bool formalArgumentIsUsed (const GGS_typeCplusPlusName & inArgumentCppName,
                                            const bool inGenerateSemanticInstructions) const ;

//--- END OF USER ZONE 2

  public : cPtr_typeInstructionDeclarationVarLocale (const GGS_typeCplusPlusName & ,
                                const GGS_AC_galgasType & ) ;
  public : GGS_typeCplusPlusName  aNomCppVariable ;
  public : GGS_AC_galgasType  aTypeVariable ;
} ;

//---------------------------------------------------------------------------*

#endif

