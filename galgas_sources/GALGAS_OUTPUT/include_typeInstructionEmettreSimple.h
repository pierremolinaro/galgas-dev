//---------------------------------------------------------------------------*
//                                                                           *
//              File 'include_typeInstructionEmettreSimple.h'                *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                    december 11th, 2006, at 16h22'16"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_typeInstructionEmettreSimple'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeInstructionEmettreSimple : public cPtr_typeInstructionLexicale {
  private : typedef cPtr_typeInstructionLexicale inherited ;
//--- START OF USER ZONE 2

  public : virtual bool
  instruction__uses_loop_variable (void) const ;

  public : virtual void
  generate_scanner_instruction (const C_String & inLexiqueName,
                                const bool inGenerateEnterToken,
                                AC_OutputStream & inCppFile) const ;

  public : virtual void
  generateDecoderFromInstruction (C_Lexique & inLexique,
                                  sint32 & ioCurrentState,
                                  cDecoderController & ioDecoderController) ;

//--- END OF USER ZONE 2

  public : cPtr_typeInstructionEmettreSimple (const GGS_lstring &  COMMA_LOCATION_ARGS) ;
  public : GGS_lstring  mTerminal ;
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Lexique & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;
//--- Comparison
  public : virtual bool isEqualToObject (const C_GGS_Object * inOperand) const ;
} ;

//---------------------------------------------------------------------------*

