//-----------------------------------------------------------------------------*
//                                                                             *
//                     File 'projectGlobalCheckings.cpp'                       *
//                         Generated by version 2.7.0                          *
//                        july 19th, 2014, at 13h24'9"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "projectGlobalCheckings.h"


//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap::GALGAS_genericCategoryMethodListMap (void) :
AC_GALGAS_listmap () {
}

//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap GALGAS_genericCategoryMethodListMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_genericCategoryMethodListMap result ;
  result.makeNewEmptyListMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_genericCategoryMethodListMap::addAssign_operation (const GALGAS_string & inKey,
                                                               const GALGAS_lstring & inOperand0
                                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inKey.isValid () && inOperand0.isValid ()) {
    capCollectionElement attributes ;
    GALGAS_lstringlist::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    addObjectInListMap (inKey.stringValue (), attributes) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_genericCategoryMethodListMap::reader_listForKey (const GALGAS_string & inKey
                                                                           COMMA_UNUSED_LOCATION_ARGS) const {
  return GALGAS_lstringlist (listForKey (inKey)) ;
}

//-----------------------------------------------------------------------------*

cEnumerator_genericCategoryMethodListMap::cEnumerator_genericCategoryMethodListMap (const GALGAS_genericCategoryMethodListMap & inEnumeratedObject,
                                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap_2E_element cEnumerator_genericCategoryMethodListMap::current (LOCATION_ARGS) const {
  const cListMapElement * p = (const cListMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cListMapElement) ;
  return GALGAS_genericCategoryMethodListMap_2E_element (p->mKey, p->mSharedListMapList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_genericCategoryMethodListMap::current_key (LOCATION_ARGS) const {
  const cListMapElement * p = (const cListMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cListMapElement) ;
  return GALGAS_string (p->mKey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_genericCategoryMethodListMap::current_mList (LOCATION_ARGS) const {
  const cListMapElement * p = (const cListMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cListMapElement) ;
  return GALGAS_lstringlist (p->mSharedListMapList) ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                     @genericCategoryMethodListMap type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_genericCategoryMethodListMap ("genericCategoryMethodListMap",
                                                     NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_genericCategoryMethodListMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_genericCategoryMethodListMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_genericCategoryMethodListMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_genericCategoryMethodListMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap GALGAS_genericCategoryMethodListMap::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_genericCategoryMethodListMap result ;
  const GALGAS_genericCategoryMethodListMap * p = (const GALGAS_genericCategoryMethodListMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_genericCategoryMethodListMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("genericCategoryMethodListMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap::GALGAS_descendantClassListMap (void) :
AC_GALGAS_listmap () {
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap GALGAS_descendantClassListMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_descendantClassListMap result ;
  result.makeNewEmptyListMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_descendantClassListMap::addAssign_operation (const GALGAS_string & inKey,
                                                         const GALGAS_unifiedTypeMapProxy & inOperand0
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inKey.isValid () && inOperand0.isValid ()) {
    capCollectionElement attributes ;
    GALGAS_unifiedTypeMapProxyList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    addObjectInListMap (inKey.stringValue (), attributes) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_descendantClassListMap::reader_listForKey (const GALGAS_string & inKey
                                                                                 COMMA_UNUSED_LOCATION_ARGS) const {
  return GALGAS_unifiedTypeMapProxyList (listForKey (inKey)) ;
}

//-----------------------------------------------------------------------------*

cEnumerator_descendantClassListMap::cEnumerator_descendantClassListMap (const GALGAS_descendantClassListMap & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap_2E_element cEnumerator_descendantClassListMap::current (LOCATION_ARGS) const {
  const cListMapElement * p = (const cListMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cListMapElement) ;
  return GALGAS_descendantClassListMap_2E_element (p->mKey, p->mSharedListMapList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_descendantClassListMap::current_key (LOCATION_ARGS) const {
  const cListMapElement * p = (const cListMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cListMapElement) ;
  return GALGAS_string (p->mKey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList cEnumerator_descendantClassListMap::current_mList (LOCATION_ARGS) const {
  const cListMapElement * p = (const cListMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cListMapElement) ;
  return GALGAS_unifiedTypeMapProxyList (p->mSharedListMapList) ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                        @descendantClassListMap type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_descendantClassListMap ("descendantClassListMap",
                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_descendantClassListMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_descendantClassListMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_descendantClassListMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_descendantClassListMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap GALGAS_descendantClassListMap::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_descendantClassListMap result ;
  const GALGAS_descendantClassListMap * p = (const GALGAS_descendantClassListMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_descendantClassListMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("descendantClassListMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryMethodMapForGlobalCheckings::cMapElement_categoryMethodMapForGlobalCheckings (const GALGAS_lstring & inKey
                                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_categoryMethodMapForGlobalCheckings::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_categoryMethodMapForGlobalCheckings::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryMethodMapForGlobalCheckings (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_categoryMethodMapForGlobalCheckings::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryMethodMapForGlobalCheckings::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryMethodMapForGlobalCheckings * operand = (cMapElement_categoryMethodMapForGlobalCheckings *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings::GALGAS_categoryMethodMapForGlobalCheckings (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings::GALGAS_categoryMethodMapForGlobalCheckings (const GALGAS_categoryMethodMapForGlobalCheckings & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings & GALGAS_categoryMethodMapForGlobalCheckings::operator = (const GALGAS_categoryMethodMapForGlobalCheckings & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings GALGAS_categoryMethodMapForGlobalCheckings::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryMethodMapForGlobalCheckings result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings GALGAS_categoryMethodMapForGlobalCheckings::constructor_mapWithMapToOverride (const GALGAS_categoryMethodMapForGlobalCheckings & inMapToOverride
                                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForGlobalCheckings result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings GALGAS_categoryMethodMapForGlobalCheckings::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_categoryMethodMapForGlobalCheckings result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForGlobalCheckings::modifier_insertKey (GALGAS_lstring inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_categoryMethodMapForGlobalCheckings * p = NULL ;
  macroMyNew (p, cMapElement_categoryMethodMapForGlobalCheckings (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' category method is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryMethodMapForGlobalCheckings * GALGAS_categoryMethodMapForGlobalCheckings::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                        const GALGAS_string & inKey
                                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryMethodMapForGlobalCheckings * result = (cMapElement_categoryMethodMapForGlobalCheckings *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryMethodMapForGlobalCheckings) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_categoryMethodMapForGlobalCheckings::cEnumerator_categoryMethodMapForGlobalCheckings (const GALGAS_categoryMethodMapForGlobalCheckings & inEnumeratedObject,
                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings_2E_element cEnumerator_categoryMethodMapForGlobalCheckings::current (LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForGlobalCheckings * p = (const cMapElement_categoryMethodMapForGlobalCheckings *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryMethodMapForGlobalCheckings) ;
  return GALGAS_categoryMethodMapForGlobalCheckings_2E_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryMethodMapForGlobalCheckings::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @categoryMethodMapForGlobalCheckings type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForGlobalCheckings ("categoryMethodMapForGlobalCheckings",
                                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForGlobalCheckings::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForGlobalCheckings ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForGlobalCheckings::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForGlobalCheckings (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings GALGAS_categoryMethodMapForGlobalCheckings::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForGlobalCheckings result ;
  const GALGAS_categoryMethodMapForGlobalCheckings * p = (const GALGAS_categoryMethodMapForGlobalCheckings *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForGlobalCheckings *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryMethodMapForGlobalCheckings", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryModifierMapForGlobalCheckings::cMapElement_categoryModifierMapForGlobalCheckings (const GALGAS_lstring & inKey
                                                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_categoryModifierMapForGlobalCheckings::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_categoryModifierMapForGlobalCheckings::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryModifierMapForGlobalCheckings (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_categoryModifierMapForGlobalCheckings::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryModifierMapForGlobalCheckings::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryModifierMapForGlobalCheckings * operand = (cMapElement_categoryModifierMapForGlobalCheckings *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings::GALGAS_categoryModifierMapForGlobalCheckings (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings::GALGAS_categoryModifierMapForGlobalCheckings (const GALGAS_categoryModifierMapForGlobalCheckings & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings & GALGAS_categoryModifierMapForGlobalCheckings::operator = (const GALGAS_categoryModifierMapForGlobalCheckings & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings GALGAS_categoryModifierMapForGlobalCheckings::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryModifierMapForGlobalCheckings result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings GALGAS_categoryModifierMapForGlobalCheckings::constructor_mapWithMapToOverride (const GALGAS_categoryModifierMapForGlobalCheckings & inMapToOverride
                                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForGlobalCheckings result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings GALGAS_categoryModifierMapForGlobalCheckings::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_categoryModifierMapForGlobalCheckings result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForGlobalCheckings::modifier_insertKey (GALGAS_lstring inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_categoryModifierMapForGlobalCheckings * p = NULL ;
  macroMyNew (p, cMapElement_categoryModifierMapForGlobalCheckings (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' category modifier is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryModifierMapForGlobalCheckings * GALGAS_categoryModifierMapForGlobalCheckings::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                            const GALGAS_string & inKey
                                                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryModifierMapForGlobalCheckings * result = (cMapElement_categoryModifierMapForGlobalCheckings *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryModifierMapForGlobalCheckings) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_categoryModifierMapForGlobalCheckings::cEnumerator_categoryModifierMapForGlobalCheckings (const GALGAS_categoryModifierMapForGlobalCheckings & inEnumeratedObject,
                                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings_2E_element cEnumerator_categoryModifierMapForGlobalCheckings::current (LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForGlobalCheckings * p = (const cMapElement_categoryModifierMapForGlobalCheckings *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryModifierMapForGlobalCheckings) ;
  return GALGAS_categoryModifierMapForGlobalCheckings_2E_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryModifierMapForGlobalCheckings::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                 @categoryModifierMapForGlobalCheckings type                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForGlobalCheckings ("categoryModifierMapForGlobalCheckings",
                                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForGlobalCheckings::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForGlobalCheckings ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForGlobalCheckings::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForGlobalCheckings (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings GALGAS_categoryModifierMapForGlobalCheckings::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForGlobalCheckings result ;
  const GALGAS_categoryModifierMapForGlobalCheckings * p = (const GALGAS_categoryModifierMapForGlobalCheckings *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForGlobalCheckings *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryModifierMapForGlobalCheckings", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryReaderMapForGlobalCheckings::cMapElement_categoryReaderMapForGlobalCheckings (const GALGAS_lstring & inKey
                                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_categoryReaderMapForGlobalCheckings::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_categoryReaderMapForGlobalCheckings::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryReaderMapForGlobalCheckings (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_categoryReaderMapForGlobalCheckings::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryReaderMapForGlobalCheckings::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryReaderMapForGlobalCheckings * operand = (cMapElement_categoryReaderMapForGlobalCheckings *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings::GALGAS_categoryReaderMapForGlobalCheckings (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings::GALGAS_categoryReaderMapForGlobalCheckings (const GALGAS_categoryReaderMapForGlobalCheckings & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings & GALGAS_categoryReaderMapForGlobalCheckings::operator = (const GALGAS_categoryReaderMapForGlobalCheckings & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings GALGAS_categoryReaderMapForGlobalCheckings::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryReaderMapForGlobalCheckings result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings GALGAS_categoryReaderMapForGlobalCheckings::constructor_mapWithMapToOverride (const GALGAS_categoryReaderMapForGlobalCheckings & inMapToOverride
                                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForGlobalCheckings result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings GALGAS_categoryReaderMapForGlobalCheckings::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_categoryReaderMapForGlobalCheckings result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForGlobalCheckings::modifier_insertKey (GALGAS_lstring inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_categoryReaderMapForGlobalCheckings * p = NULL ;
  macroMyNew (p, cMapElement_categoryReaderMapForGlobalCheckings (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' category reader is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryReaderMapForGlobalCheckings * GALGAS_categoryReaderMapForGlobalCheckings::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                        const GALGAS_string & inKey
                                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForGlobalCheckings * result = (cMapElement_categoryReaderMapForGlobalCheckings *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryReaderMapForGlobalCheckings) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_categoryReaderMapForGlobalCheckings::cEnumerator_categoryReaderMapForGlobalCheckings (const GALGAS_categoryReaderMapForGlobalCheckings & inEnumeratedObject,
                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings_2E_element cEnumerator_categoryReaderMapForGlobalCheckings::current (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForGlobalCheckings * p = (const cMapElement_categoryReaderMapForGlobalCheckings *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryReaderMapForGlobalCheckings) ;
  return GALGAS_categoryReaderMapForGlobalCheckings_2E_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryReaderMapForGlobalCheckings::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @categoryReaderMapForGlobalCheckings type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForGlobalCheckings ("categoryReaderMapForGlobalCheckings",
                                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForGlobalCheckings::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForGlobalCheckings ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForGlobalCheckings::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForGlobalCheckings (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings GALGAS_categoryReaderMapForGlobalCheckings::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForGlobalCheckings result ;
  const GALGAS_categoryReaderMapForGlobalCheckings * p = (const GALGAS_categoryReaderMapForGlobalCheckings *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForGlobalCheckings *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryReaderMapForGlobalCheckings", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                         Function 'outputDirectory'                          *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string function_outputDirectory (const GALGAS_lstring & constinArgument_inSourceFile,
                                        C_Compiler * inCompiler
                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outOuputDirectory ; // Returned variable
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inSourceFile.mAttribute_string.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 366)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    result_outOuputDirectory = constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 367)) ;
    result_outOuputDirectory.dotAssign_operation (GALGAS_string ("/GALGAS_OUTPUT")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 368)) ;
  }else if (kBoolFalse == test_0) {
    result_outOuputDirectory = GALGAS_string ("GALGAS_OUTPUT") ;
  }
//---
  return result_outOuputDirectory ;
}


//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_outputDirectory [2] = {
  & kTypeDescriptor_GALGAS_lstring,
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_outputDirectory (C_Compiler * inCompiler,
                                                                const cObjectArray & inEffectiveParameterArray,
                                                                const GALGAS_location & /* §§ inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  const GALGAS_lstring operand0 = GALGAS_lstring::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                 inCompiler
                                                                 COMMA_THERE) ;
  return function_outputDirectory (operand0,
                                   inCompiler
                                   COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_outputDirectory ("outputDirectory",
                                                                 functionWithGenericHeader_outputDirectory,
                                                                 & kTypeDescriptor_GALGAS_string,
                                                                 1,
                                                                 functionArgs_outputDirectory) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//              Routine 'checkCategoryModifierDefinitionForClass'              *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_checkCategoryModifierDefinitionForClass (const GALGAS_string constinArgument_inClassNameForErrorSignaling,
                                                      const GALGAS_string constinArgument_inClassName,
                                                      const GALGAS_lstring constinArgument_inAbstractCategoryModifierName,
                                                      const GALGAS_descendantClassListMap constinArgument_inDescendantClassListMap,
                                                      const GALGAS_genericCategoryMethodListMap constinArgument_inOverridingCategoryMethodListMap,
                                                      const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeMapProxyList var_descendantClasses = constinArgument_inDescendantClassListMap.reader_listForKey (constinArgument_inClassName COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 384)) ;
  cEnumerator_unifiedTypeMapProxyList enumerator_20460 (var_descendantClasses, kEnumeration_up) ;
  while (enumerator_20460.hasCurrentObject ()) {
    GALGAS_lstring var_descendantClassName = enumerator_20460.current_mType (HERE).reader_lkey (inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 386)) ;
    GALGAS_lstringlist var_overridingMethods = constinArgument_inOverridingCategoryMethodListMap.reader_listForKey (var_descendantClassName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 387)) COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 387)) ;
    GALGAS_bool var_found = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_20694 (var_overridingMethods, kEnumeration_up) ;
    bool bool_0 = var_found.operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 389)).isValidAndTrue () ;
    if (enumerator_20694.hasCurrentObject () && bool_0) {
      while (enumerator_20694.hasCurrentObject () && bool_0) {
        var_found = GALGAS_bool (kIsEqual, constinArgument_inAbstractCategoryModifierName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 390)).objectCompare (enumerator_20694.current_mValue (HERE).reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 390)))) ;
        enumerator_20694.gotoNextObject () ;
        if (enumerator_20694.hasCurrentObject ()) {
          bool_0 = var_found.operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 389)).isValidAndTrue () ;
        }
      }
    }
    const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 392)).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = enumerator_20460.current_mType (HERE).reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 393)).operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 393)).boolEnum () ;
      if (kBoolTrue == test_2) {
        {
        routine_checkCategoryModifierDefinitionForClass (constinArgument_inClassNameForErrorSignaling, var_descendantClassName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 396)), constinArgument_inAbstractCategoryModifierName, constinArgument_inDescendantClassListMap, constinArgument_inOverridingCategoryMethodListMap, constinArgument_inUnifiedTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 394)) ;
        }
      }else if (kBoolFalse == test_2) {
        GALGAS_location location_3 (constinArgument_inAbstractCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_3, GALGAS_string ("an abstract category method '").operator_concat (constinArgument_inAbstractCategoryModifierName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 403))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 403)).operator_concat (GALGAS_string ("' is defined for abstract class '@")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 403)).operator_concat (constinArgument_inClassNameForErrorSignaling  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 403)).operator_concat (GALGAS_string ("', but concrete descendant class '@")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 404)).operator_concat (var_descendantClassName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 405))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 405)).operator_concat (GALGAS_string ("' does not implement this method")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 405))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 403)) ;
      }
    }
    enumerator_20460.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//               Routine 'checkCategoryMethodDefinitionForClass'               *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_checkCategoryMethodDefinitionForClass (const GALGAS_string constinArgument_inClassNameForErrorSignaling,
                                                    const GALGAS_string constinArgument_inClassName,
                                                    const GALGAS_lstring constinArgument_inAbstractCategoryMethodName,
                                                    const GALGAS_descendantClassListMap constinArgument_inDescendantClassListMap,
                                                    const GALGAS_genericCategoryMethodListMap constinArgument_inOverridingCategoryMethodListMap,
                                                    const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeMapProxyList var_descendantClasses = constinArgument_inDescendantClassListMap.reader_listForKey (constinArgument_inClassName COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 421)) ;
  cEnumerator_unifiedTypeMapProxyList enumerator_22052 (var_descendantClasses, kEnumeration_up) ;
  while (enumerator_22052.hasCurrentObject ()) {
    GALGAS_lstring var_descendantClassName = enumerator_22052.current_mType (HERE).reader_lkey (inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 423)) ;
    GALGAS_lstringlist var_overridingMethods = constinArgument_inOverridingCategoryMethodListMap.reader_listForKey (var_descendantClassName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 424)) COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 424)) ;
    GALGAS_bool var_found = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_22286 (var_overridingMethods, kEnumeration_up) ;
    bool bool_0 = var_found.operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 426)).isValidAndTrue () ;
    if (enumerator_22286.hasCurrentObject () && bool_0) {
      while (enumerator_22286.hasCurrentObject () && bool_0) {
        var_found = GALGAS_bool (kIsEqual, constinArgument_inAbstractCategoryMethodName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 427)).objectCompare (enumerator_22286.current_mValue (HERE).reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 427)))) ;
        enumerator_22286.gotoNextObject () ;
        if (enumerator_22286.hasCurrentObject ()) {
          bool_0 = var_found.operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 426)).isValidAndTrue () ;
        }
      }
    }
    const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 429)).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = enumerator_22052.current_mType (HERE).reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 430)).operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 430)).boolEnum () ;
      if (kBoolTrue == test_2) {
        {
        routine_checkCategoryMethodDefinitionForClass (constinArgument_inClassNameForErrorSignaling, var_descendantClassName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 433)), constinArgument_inAbstractCategoryMethodName, constinArgument_inDescendantClassListMap, constinArgument_inOverridingCategoryMethodListMap, constinArgument_inUnifiedTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 431)) ;
        }
      }else if (kBoolFalse == test_2) {
        GALGAS_location location_3 (constinArgument_inAbstractCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_3, GALGAS_string ("an abstract category method '").operator_concat (constinArgument_inAbstractCategoryMethodName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 440))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 440)).operator_concat (GALGAS_string ("' is defined for abstract class '@")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 440)).operator_concat (constinArgument_inClassNameForErrorSignaling  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 440)).operator_concat (GALGAS_string ("', but concrete descendant class '@")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 441)).operator_concat (var_descendantClassName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 442))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 442)).operator_concat (GALGAS_string ("' does not implement this method")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 442))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 440)) ;
      }
    }
    enumerator_22052.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//               Routine 'checkCategoryReaderDefinitionForClass'               *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_checkCategoryReaderDefinitionForClass (const GALGAS_string constinArgument_inClassNameForErrorSignaling,
                                                    const GALGAS_string constinArgument_inClassName,
                                                    const GALGAS_lstring constinArgument_inAbstractCategoryReaderName,
                                                    const GALGAS_descendantClassListMap constinArgument_inDescendantClassListMap,
                                                    const GALGAS_genericCategoryMethodListMap constinArgument_inOverridingCategoryReaderListMap,
                                                    const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeMapProxyList var_descendantClasses = constinArgument_inDescendantClassListMap.reader_listForKey (constinArgument_inClassName COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 458)) ;
  cEnumerator_unifiedTypeMapProxyList enumerator_23634 (var_descendantClasses, kEnumeration_up) ;
  while (enumerator_23634.hasCurrentObject ()) {
    GALGAS_lstring var_descendantClassName = enumerator_23634.current_mType (HERE).reader_lkey (inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 460)) ;
    GALGAS_lstringlist var_overridingReaders = constinArgument_inOverridingCategoryReaderListMap.reader_listForKey (var_descendantClassName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 461)) COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 461)) ;
    GALGAS_bool var_found = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_23862 (var_overridingReaders, kEnumeration_up) ;
    bool bool_0 = var_found.operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 463)).isValidAndTrue () ;
    if (enumerator_23862.hasCurrentObject () && bool_0) {
      while (enumerator_23862.hasCurrentObject () && bool_0) {
        var_found = GALGAS_bool (kIsEqual, constinArgument_inAbstractCategoryReaderName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 464)).objectCompare (enumerator_23862.current_mValue (HERE).reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 464)))) ;
        enumerator_23862.gotoNextObject () ;
        if (enumerator_23862.hasCurrentObject ()) {
          bool_0 = var_found.operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 463)).isValidAndTrue () ;
        }
      }
    }
    const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 466)).boolEnum () ;
    if (kBoolTrue == test_1) {
      const enumGalgasBool test_2 = enumerator_23634.current_mType (HERE).reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 467)).operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 467)).boolEnum () ;
      if (kBoolTrue == test_2) {
        {
        routine_checkCategoryReaderDefinitionForClass (constinArgument_inClassNameForErrorSignaling, var_descendantClassName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 470)), constinArgument_inAbstractCategoryReaderName, constinArgument_inDescendantClassListMap, constinArgument_inOverridingCategoryReaderListMap, constinArgument_inUnifiedTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 468)) ;
        }
      }else if (kBoolFalse == test_2) {
        GALGAS_location location_3 (constinArgument_inAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_3, GALGAS_string ("an abstract category reader '").operator_concat (constinArgument_inAbstractCategoryReaderName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 477))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 477)).operator_concat (GALGAS_string ("' is defined for abstract class '@")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 477)).operator_concat (constinArgument_inClassNameForErrorSignaling  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 477)).operator_concat (GALGAS_string ("', but concrete descendant class '@")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 478)).operator_concat (var_descendantClassName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 479))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 479)).operator_concat (GALGAS_string ("' does not implement this reader")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 479))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 477)) ;
      }
    }
    enumerator_23634.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                   Routine 'performProjectGlobalCheckings'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_performProjectGlobalCheckings (const GALGAS_parsedComponentStruct constinArgument_inParsedComponentStruct,
                                            const GALGAS_string constinArgument_inProjectSourceFilePath,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 491)) ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationList, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 493)) ;
  }
  cEnumerator_parsedSemanticsComponentMap enumerator_25165 (constinArgument_inParsedComponentStruct.reader_mParsedSemanticsComponentMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 495)), kEnumeration_up) ;
  while (enumerator_25165.hasCurrentObject ()) {
    var_semanticDeclarationList.dotAssign_operation (enumerator_25165.current_mSemanticComponentRoot (HERE).reader_mSemanticDeclarationList (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 496))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 496)) ;
    enumerator_25165.gotoNextObject () ;
  }
  cEnumerator_parsedSyntaxComponentMap enumerator_25329 (constinArgument_inParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 498)), kEnumeration_up) ;
  while (enumerator_25329.hasCurrentObject ()) {
    var_semanticDeclarationList.dotAssign_operation (enumerator_25329.current_mSyntaxComponentRoot (HERE).reader_mSemanticDeclarationList (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 499))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 499)) ;
    enumerator_25329.gotoNextObject () ;
  }
  cEnumerator_parsedProgramComponentMap enumerator_25492 (constinArgument_inParsedComponentStruct.reader_mParsedProgramComponentMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 501)), kEnumeration_up) ;
  while (enumerator_25492.hasCurrentObject ()) {
    var_semanticDeclarationList.dotAssign_operation (enumerator_25492.current_mProgramComponentAST (HERE).reader_mSemanticDeclarationList (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 502))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 502)) ;
    enumerator_25492.gotoNextObject () ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildSemanticContext (GALGAS_string::makeEmptyString (), var_semanticDeclarationList, var_semanticContext, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 505)) ;
  }
  GALGAS_descendantClassListMap var_descendantClassListMap = GALGAS_descendantClassListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 512)) ;
  cEnumerator_unifiedTypeMap enumerator_25929 (var_semanticContext.mAttribute_mTypeMap, kEnumeration_up) ;
  while (enumerator_25929.hasCurrentObject ()) {
    const enumGalgasBool test_0 = enumerator_25929.current_mSuperType (HERE).reader_isNull (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 514)).operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 514)).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_descendantClassListMap.addAssign_operation (enumerator_25929.current_mSuperType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 516)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (var_semanticContext.mAttribute_mTypeMap, enumerator_25929.current_lkey (HERE), inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 517))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 515)) ;
    }
    enumerator_25929.gotoNextObject () ;
  }
  GALGAS_genericCategoryMethodListMap var_abstractCategoryMethodListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 522)) ;
  GALGAS_genericCategoryMethodListMap var_categoryMethodListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 523)) ;
  GALGAS_genericCategoryMethodListMap var_overridingCategoryMethodListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 524)) ;
  GALGAS_genericCategoryMethodListMap var_overridingAbstractCategoryMethodListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 525)) ;
  GALGAS_genericCategoryMethodListMap var_abstractCategoryReaderListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 526)) ;
  GALGAS_genericCategoryMethodListMap var_categoryReaderListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 527)) ;
  GALGAS_genericCategoryMethodListMap var_overridingCategoryReaderListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 528)) ;
  GALGAS_genericCategoryMethodListMap var_overridingAbstractCategoryReaderListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 529)) ;
  GALGAS_genericCategoryMethodListMap var_abstractCategoryModifierListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 530)) ;
  GALGAS_genericCategoryMethodListMap var_categoryModifierListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 531)) ;
  GALGAS_genericCategoryMethodListMap var_overridingCategoryModifierListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 532)) ;
  GALGAS_genericCategoryMethodListMap var_overridingAbstractCategoryModifierListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 533)) ;
  cEnumerator_semanticDeclarationListAST enumerator_27131 (var_semanticDeclarationList, kEnumeration_up) ;
  while (enumerator_27131.hasCurrentObject ()) {
    callCategoryMethod_buildCategoryListMaps ((const cPtr_semanticDeclarationAST *) enumerator_27131.current_mSemanticDeclaration (HERE).ptr (), var_abstractCategoryModifierListMap, var_categoryModifierListMap, var_overridingCategoryModifierListMap, var_overridingAbstractCategoryModifierListMap, var_abstractCategoryMethodListMap, var_categoryMethodListMap, var_overridingCategoryMethodListMap, var_overridingAbstractCategoryMethodListMap, var_abstractCategoryReaderListMap, var_categoryReaderListMap, var_overridingCategoryReaderListMap, var_overridingAbstractCategoryReaderListMap, inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 535)) ;
    enumerator_27131.gotoNextObject () ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 551)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    cEnumerator_genericCategoryMethodListMap enumerator_27858 (var_abstractCategoryModifierListMap, kEnumeration_up) ;
    while (enumerator_27858.hasCurrentObject ()) {
      GALGAS_categoryModifierMapForGlobalCheckings var_categoryModifierMap = GALGAS_categoryModifierMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 554)) ;
      cEnumerator_lstringlist enumerator_27959 (enumerator_27858.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_27959.hasCurrentObject ()) {
        {
        var_categoryModifierMap.modifier_insertKey (enumerator_27959.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 556)) ;
        }
        enumerator_27959.gotoNextObject () ;
      }
      enumerator_27858.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_28161 (var_categoryModifierListMap, kEnumeration_up) ;
    while (enumerator_28161.hasCurrentObject ()) {
      GALGAS_categoryModifierMapForGlobalCheckings var_categoryModifierMap = GALGAS_categoryModifierMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 561)) ;
      cEnumerator_lstringlist enumerator_28262 (enumerator_28161.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_28262.hasCurrentObject ()) {
        {
        var_categoryModifierMap.modifier_insertKey (enumerator_28262.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 563)) ;
        }
        enumerator_28262.gotoNextObject () ;
      }
      enumerator_28161.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_28480 (var_overridingCategoryModifierListMap, kEnumeration_up) ;
    while (enumerator_28480.hasCurrentObject ()) {
      GALGAS_categoryModifierMapForGlobalCheckings var_categoryModifierMap = GALGAS_categoryModifierMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 568)) ;
      cEnumerator_lstringlist enumerator_28581 (enumerator_28480.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_28581.hasCurrentObject ()) {
        {
        var_categoryModifierMap.modifier_insertKey (enumerator_28581.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 570)) ;
        }
        enumerator_28581.gotoNextObject () ;
      }
      enumerator_28480.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_28814 (var_overridingAbstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_28814.hasCurrentObject ()) {
      GALGAS_categoryModifierMapForGlobalCheckings var_categoryModifierMap = GALGAS_categoryModifierMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 575)) ;
      cEnumerator_lstringlist enumerator_28915 (enumerator_28814.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_28915.hasCurrentObject ()) {
        {
        var_categoryModifierMap.modifier_insertKey (enumerator_28915.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 577)) ;
        }
        enumerator_28915.gotoNextObject () ;
      }
      enumerator_28814.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_29177 (var_abstractCategoryModifierListMap, kEnumeration_up) ;
    while (enumerator_29177.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_29200 (enumerator_29177.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_29200.hasCurrentObject ()) {
        {
        routine_checkCategoryModifierDefinitionForClass (enumerator_29177.current_key (HERE), enumerator_29177.current_key (HERE), enumerator_29200.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryModifierListMap, var_semanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 583)) ;
        }
        enumerator_29200.gotoNextObject () ;
      }
      enumerator_29177.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_29651 (var_overridingAbstractCategoryModifierListMap, kEnumeration_up) ;
    while (enumerator_29651.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_29674 (enumerator_29651.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_29674.hasCurrentObject ()) {
        {
        routine_checkCategoryModifierDefinitionForClass (enumerator_29651.current_key (HERE), enumerator_29651.current_key (HERE), enumerator_29674.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryModifierListMap, var_semanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 596)) ;
        }
        enumerator_29674.gotoNextObject () ;
      }
      enumerator_29651.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_30052 (var_abstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_30052.hasCurrentObject ()) {
      GALGAS_categoryMethodMapForGlobalCheckings var_categoryMethodMap = GALGAS_categoryMethodMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 608)) ;
      cEnumerator_lstringlist enumerator_30149 (enumerator_30052.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_30149.hasCurrentObject ()) {
        {
        var_categoryMethodMap.modifier_insertKey (enumerator_30149.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 610)) ;
        }
        enumerator_30149.gotoNextObject () ;
      }
      enumerator_30052.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_30345 (var_categoryMethodListMap, kEnumeration_up) ;
    while (enumerator_30345.hasCurrentObject ()) {
      GALGAS_categoryMethodMapForGlobalCheckings var_categoryMethodMap = GALGAS_categoryMethodMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 615)) ;
      cEnumerator_lstringlist enumerator_30442 (enumerator_30345.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_30442.hasCurrentObject ()) {
        {
        var_categoryMethodMap.modifier_insertKey (enumerator_30442.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 617)) ;
        }
        enumerator_30442.gotoNextObject () ;
      }
      enumerator_30345.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_30654 (var_overridingCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_30654.hasCurrentObject ()) {
      GALGAS_categoryMethodMapForGlobalCheckings var_categoryMethodMap = GALGAS_categoryMethodMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 622)) ;
      cEnumerator_lstringlist enumerator_30751 (enumerator_30654.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_30751.hasCurrentObject ()) {
        {
        var_categoryMethodMap.modifier_insertKey (enumerator_30751.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 624)) ;
        }
        enumerator_30751.gotoNextObject () ;
      }
      enumerator_30654.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_30980 (var_overridingAbstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_30980.hasCurrentObject ()) {
      GALGAS_categoryMethodMapForGlobalCheckings var_categoryMethodMap = GALGAS_categoryMethodMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 629)) ;
      cEnumerator_lstringlist enumerator_31077 (enumerator_30980.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_31077.hasCurrentObject ()) {
        {
        var_categoryMethodMap.modifier_insertKey (enumerator_31077.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 631)) ;
        }
        enumerator_31077.gotoNextObject () ;
      }
      enumerator_30980.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_31331 (var_abstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_31331.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_31354 (enumerator_31331.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_31354.hasCurrentObject ()) {
        {
        routine_checkCategoryMethodDefinitionForClass (enumerator_31331.current_key (HERE), enumerator_31331.current_key (HERE), enumerator_31354.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryMethodListMap, var_semanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 637)) ;
        }
        enumerator_31354.gotoNextObject () ;
      }
      enumerator_31331.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_31784 (var_overridingAbstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_31784.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_31807 (enumerator_31784.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_31807.hasCurrentObject ()) {
        {
        routine_checkCategoryMethodDefinitionForClass (enumerator_31784.current_key (HERE), enumerator_31784.current_key (HERE), enumerator_31807.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryMethodListMap, var_semanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 650)) ;
        }
        enumerator_31807.gotoNextObject () ;
      }
      enumerator_31784.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_32335 (var_abstractCategoryReaderListMap, kEnumeration_up) ;
    while (enumerator_32335.hasCurrentObject ()) {
      GALGAS_categoryReaderMapForGlobalCheckings var_CategoryReaderMap = GALGAS_categoryReaderMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 665)) ;
      cEnumerator_lstringlist enumerator_32432 (enumerator_32335.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_32432.hasCurrentObject ()) {
        {
        var_CategoryReaderMap.modifier_insertKey (enumerator_32432.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 667)) ;
        }
        enumerator_32432.gotoNextObject () ;
      }
      enumerator_32335.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_32628 (var_categoryReaderListMap, kEnumeration_up) ;
    while (enumerator_32628.hasCurrentObject ()) {
      GALGAS_categoryReaderMapForGlobalCheckings var_CategoryReaderMap = GALGAS_categoryReaderMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 672)) ;
      cEnumerator_lstringlist enumerator_32725 (enumerator_32628.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_32725.hasCurrentObject ()) {
        {
        var_CategoryReaderMap.modifier_insertKey (enumerator_32725.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 674)) ;
        }
        enumerator_32725.gotoNextObject () ;
      }
      enumerator_32628.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_32937 (var_overridingCategoryReaderListMap, kEnumeration_up) ;
    while (enumerator_32937.hasCurrentObject ()) {
      GALGAS_categoryReaderMapForGlobalCheckings var_CategoryReaderMap = GALGAS_categoryReaderMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 679)) ;
      cEnumerator_lstringlist enumerator_33034 (enumerator_32937.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_33034.hasCurrentObject ()) {
        {
        var_CategoryReaderMap.modifier_insertKey (enumerator_33034.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 681)) ;
        }
        enumerator_33034.gotoNextObject () ;
      }
      enumerator_32937.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_33261 (var_abstractCategoryReaderListMap, kEnumeration_up) ;
    while (enumerator_33261.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_33284 (enumerator_33261.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_33284.hasCurrentObject ()) {
        {
        routine_checkCategoryReaderDefinitionForClass (enumerator_33261.current_key (HERE), enumerator_33261.current_key (HERE), enumerator_33284.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryReaderListMap, var_semanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 687)) ;
        }
        enumerator_33284.gotoNextObject () ;
      }
      enumerator_33261.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_33687 (var_overridingAbstractCategoryReaderListMap, kEnumeration_up) ;
    while (enumerator_33687.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_33710 (enumerator_33687.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_33710.hasCurrentObject ()) {
        {
        routine_checkCategoryReaderDefinitionForClass (enumerator_33687.current_key (HERE), enumerator_33687.current_key (HERE), enumerator_33710.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryReaderListMap, var_semanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 700)) ;
        }
        enumerator_33710.gotoNextObject () ;
      }
      enumerator_33687.gotoNextObject () ;
    }
  }
  GALGAS_string var_typeDumpFilePath = constinArgument_inProjectSourceFilePath.operator_concat (GALGAS_string (".html")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 712)) ;
  const enumGalgasBool test_2 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_outputHTMLTypeListFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_stringset var_firstLetterSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 714)) ;
    cEnumerator_unifiedTypeMap enumerator_34256 (var_semanticContext.mAttribute_mTypeMap, kEnumeration_up) ;
    while (enumerator_34256.hasCurrentObject ()) {
      var_firstLetterSet.addAssign_operation (enumerator_34256.current_lkey (HERE).mAttribute_string.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 716)).reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 716))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 716)) ;
      enumerator_34256.gotoNextObject () ;
    }
    GALGAS_string var_tableOfTypeString = GALGAS_string::makeEmptyString () ;
    GALGAS_char var_currentFirstLetter = GALGAS_char (TO_UNICODE (32)) ;
    cEnumerator_unifiedTypeMap enumerator_34461 (var_semanticContext.mAttribute_mTypeMap, kEnumeration_up) ;
    while (enumerator_34461.hasCurrentObject ()) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_currentFirstLetter.objectCompare (enumerator_34461.current_lkey (HERE).mAttribute_string.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 721)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        var_currentFirstLetter = enumerator_34461.current_lkey (HERE).mAttribute_string.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 722)) ;
        var_tableOfTypeString.dotAssign_operation (GALGAS_string ("<br><a name=\"").operator_concat (var_currentFirstLetter.reader_uint (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 723)).reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 723))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 723)).operator_concat (GALGAS_string ("\"><b>")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 723)).operator_concat (var_currentFirstLetter.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 723))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 723)).operator_concat (GALGAS_string ("</b></a><br>")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 723))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 723)) ;
      }
      var_tableOfTypeString.dotAssign_operation (function_linkForType (enumerator_34461.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 725)).operator_concat (GALGAS_string ("<br>")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 725))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 725)) ;
      enumerator_34461.gotoNextObject () ;
    }
    GALGAS_string var_typeDumpString = GALGAS_string (filewrapperTemplate_typeDumpGenerationTemplate_typeDump (inCompiler, constinArgument_inProjectSourceFilePath.reader_lastPathComponent (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 728)), var_semanticContext.mAttribute_mTypeMap, var_firstLetterSet, var_tableOfTypeString COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 727))) ;
    GALGAS_bool joker_35146_0 ; // Joker input parameter
    var_typeDumpString.method_writeToFileWhenDifferentContents (var_typeDumpFilePath, joker_35146_0, inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 733)) ;
  }else if (kBoolFalse == test_2) {
    {
    GALGAS_string::class_method_deleteFileIfExists (var_typeDumpFilePath, inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 735)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//               Routine 'performGalgas3ProjectGlobalCheckings'                *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_performGalgas_33_ProjectGlobalCheckings (const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                      const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                                      const GALGAS_string constinArgument_inProjectSourceFilePath,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->printMessage (GALGAS_string ("*** Perform global checkings\n")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 747)) ;
  }
  GALGAS_descendantClassListMap var_descendantClassListMap = GALGAS_descendantClassListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 751)) ;
  cEnumerator_unifiedTypeMap enumerator_35800 (constinArgument_inSemanticContext.mAttribute_mTypeMap, kEnumeration_up) ;
  while (enumerator_35800.hasCurrentObject ()) {
    const enumGalgasBool test_1 = enumerator_35800.current_mSuperType (HERE).reader_isNull (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 753)).operator_not (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 753)).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_descendantClassListMap.addAssign_operation (enumerator_35800.current_mSuperType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 755)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_35800.current_lkey (HERE), inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 756))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 754)) ;
    }
    enumerator_35800.gotoNextObject () ;
  }
  GALGAS_genericCategoryMethodListMap var_abstractCategoryMethodListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 761)) ;
  GALGAS_genericCategoryMethodListMap var_categoryMethodListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 762)) ;
  GALGAS_genericCategoryMethodListMap var_overridingCategoryMethodListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 763)) ;
  GALGAS_genericCategoryMethodListMap var_overridingAbstractCategoryMethodListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 764)) ;
  GALGAS_genericCategoryMethodListMap var_abstractCategoryReaderListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 765)) ;
  GALGAS_genericCategoryMethodListMap var_categoryReaderListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 766)) ;
  GALGAS_genericCategoryMethodListMap var_overridingCategoryReaderListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 767)) ;
  GALGAS_genericCategoryMethodListMap var_overridingAbstractCategoryReaderListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 768)) ;
  GALGAS_genericCategoryMethodListMap var_abstractCategoryModifierListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 769)) ;
  GALGAS_genericCategoryMethodListMap var_categoryModifierListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 770)) ;
  GALGAS_genericCategoryMethodListMap var_overridingCategoryModifierListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 771)) ;
  GALGAS_genericCategoryMethodListMap var_overridingAbstractCategoryModifierListMap = GALGAS_genericCategoryMethodListMap::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 772)) ;
  cEnumerator_semanticDeclarationListAST enumerator_37006 (constinArgument_inSemanticDeclarationList, kEnumeration_up) ;
  while (enumerator_37006.hasCurrentObject ()) {
    callCategoryMethod_buildCategoryListMaps ((const cPtr_semanticDeclarationAST *) enumerator_37006.current_mSemanticDeclaration (HERE).ptr (), var_abstractCategoryModifierListMap, var_categoryModifierListMap, var_overridingCategoryModifierListMap, var_overridingAbstractCategoryModifierListMap, var_abstractCategoryMethodListMap, var_categoryMethodListMap, var_overridingCategoryMethodListMap, var_overridingAbstractCategoryMethodListMap, var_abstractCategoryReaderListMap, var_categoryReaderListMap, var_overridingCategoryReaderListMap, var_overridingAbstractCategoryReaderListMap, inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 774)) ;
    enumerator_37006.gotoNextObject () ;
  }
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 790)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    cEnumerator_genericCategoryMethodListMap enumerator_37733 (var_abstractCategoryModifierListMap, kEnumeration_up) ;
    while (enumerator_37733.hasCurrentObject ()) {
      GALGAS_categoryModifierMapForGlobalCheckings var_categoryModifierMap = GALGAS_categoryModifierMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 793)) ;
      cEnumerator_lstringlist enumerator_37834 (enumerator_37733.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_37834.hasCurrentObject ()) {
        {
        var_categoryModifierMap.modifier_insertKey (enumerator_37834.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 795)) ;
        }
        enumerator_37834.gotoNextObject () ;
      }
      enumerator_37733.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_38036 (var_categoryModifierListMap, kEnumeration_up) ;
    while (enumerator_38036.hasCurrentObject ()) {
      GALGAS_categoryModifierMapForGlobalCheckings var_categoryModifierMap = GALGAS_categoryModifierMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 800)) ;
      cEnumerator_lstringlist enumerator_38137 (enumerator_38036.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_38137.hasCurrentObject ()) {
        {
        var_categoryModifierMap.modifier_insertKey (enumerator_38137.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 802)) ;
        }
        enumerator_38137.gotoNextObject () ;
      }
      enumerator_38036.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_38355 (var_overridingCategoryModifierListMap, kEnumeration_up) ;
    while (enumerator_38355.hasCurrentObject ()) {
      GALGAS_categoryModifierMapForGlobalCheckings var_categoryModifierMap = GALGAS_categoryModifierMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 807)) ;
      cEnumerator_lstringlist enumerator_38456 (enumerator_38355.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_38456.hasCurrentObject ()) {
        {
        var_categoryModifierMap.modifier_insertKey (enumerator_38456.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 809)) ;
        }
        enumerator_38456.gotoNextObject () ;
      }
      enumerator_38355.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_38689 (var_overridingAbstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_38689.hasCurrentObject ()) {
      GALGAS_categoryModifierMapForGlobalCheckings var_categoryModifierMap = GALGAS_categoryModifierMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 814)) ;
      cEnumerator_lstringlist enumerator_38790 (enumerator_38689.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_38790.hasCurrentObject ()) {
        {
        var_categoryModifierMap.modifier_insertKey (enumerator_38790.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 816)) ;
        }
        enumerator_38790.gotoNextObject () ;
      }
      enumerator_38689.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_39052 (var_abstractCategoryModifierListMap, kEnumeration_up) ;
    while (enumerator_39052.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_39075 (enumerator_39052.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_39075.hasCurrentObject ()) {
        {
        routine_checkCategoryModifierDefinitionForClass (enumerator_39052.current_key (HERE), enumerator_39052.current_key (HERE), enumerator_39075.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryModifierListMap, constinArgument_inSemanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 822)) ;
        }
        enumerator_39075.gotoNextObject () ;
      }
      enumerator_39052.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_39528 (var_overridingAbstractCategoryModifierListMap, kEnumeration_up) ;
    while (enumerator_39528.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_39551 (enumerator_39528.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_39551.hasCurrentObject ()) {
        {
        routine_checkCategoryModifierDefinitionForClass (enumerator_39528.current_key (HERE), enumerator_39528.current_key (HERE), enumerator_39551.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryModifierListMap, constinArgument_inSemanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 835)) ;
        }
        enumerator_39551.gotoNextObject () ;
      }
      enumerator_39528.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_39931 (var_abstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_39931.hasCurrentObject ()) {
      GALGAS_categoryMethodMapForGlobalCheckings var_categoryMethodMap = GALGAS_categoryMethodMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 847)) ;
      cEnumerator_lstringlist enumerator_40028 (enumerator_39931.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_40028.hasCurrentObject ()) {
        {
        var_categoryMethodMap.modifier_insertKey (enumerator_40028.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 849)) ;
        }
        enumerator_40028.gotoNextObject () ;
      }
      enumerator_39931.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_40224 (var_categoryMethodListMap, kEnumeration_up) ;
    while (enumerator_40224.hasCurrentObject ()) {
      GALGAS_categoryMethodMapForGlobalCheckings var_categoryMethodMap = GALGAS_categoryMethodMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 854)) ;
      cEnumerator_lstringlist enumerator_40321 (enumerator_40224.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_40321.hasCurrentObject ()) {
        {
        var_categoryMethodMap.modifier_insertKey (enumerator_40321.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 856)) ;
        }
        enumerator_40321.gotoNextObject () ;
      }
      enumerator_40224.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_40533 (var_overridingCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_40533.hasCurrentObject ()) {
      GALGAS_categoryMethodMapForGlobalCheckings var_categoryMethodMap = GALGAS_categoryMethodMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 861)) ;
      cEnumerator_lstringlist enumerator_40630 (enumerator_40533.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_40630.hasCurrentObject ()) {
        {
        var_categoryMethodMap.modifier_insertKey (enumerator_40630.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 863)) ;
        }
        enumerator_40630.gotoNextObject () ;
      }
      enumerator_40533.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_40859 (var_overridingAbstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_40859.hasCurrentObject ()) {
      GALGAS_categoryMethodMapForGlobalCheckings var_categoryMethodMap = GALGAS_categoryMethodMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 868)) ;
      cEnumerator_lstringlist enumerator_40956 (enumerator_40859.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_40956.hasCurrentObject ()) {
        {
        var_categoryMethodMap.modifier_insertKey (enumerator_40956.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 870)) ;
        }
        enumerator_40956.gotoNextObject () ;
      }
      enumerator_40859.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_41210 (var_abstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_41210.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_41233 (enumerator_41210.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_41233.hasCurrentObject ()) {
        {
        routine_checkCategoryMethodDefinitionForClass (enumerator_41210.current_key (HERE), enumerator_41210.current_key (HERE), enumerator_41233.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryMethodListMap, constinArgument_inSemanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 876)) ;
        }
        enumerator_41233.gotoNextObject () ;
      }
      enumerator_41210.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_41665 (var_overridingAbstractCategoryMethodListMap, kEnumeration_up) ;
    while (enumerator_41665.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_41688 (enumerator_41665.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_41688.hasCurrentObject ()) {
        {
        routine_checkCategoryMethodDefinitionForClass (enumerator_41665.current_key (HERE), enumerator_41665.current_key (HERE), enumerator_41688.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryMethodListMap, constinArgument_inSemanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 889)) ;
        }
        enumerator_41688.gotoNextObject () ;
      }
      enumerator_41665.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_42218 (var_abstractCategoryReaderListMap, kEnumeration_up) ;
    while (enumerator_42218.hasCurrentObject ()) {
      GALGAS_categoryReaderMapForGlobalCheckings var_CategoryReaderMap = GALGAS_categoryReaderMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 904)) ;
      cEnumerator_lstringlist enumerator_42315 (enumerator_42218.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_42315.hasCurrentObject ()) {
        {
        var_CategoryReaderMap.modifier_insertKey (enumerator_42315.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 906)) ;
        }
        enumerator_42315.gotoNextObject () ;
      }
      enumerator_42218.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_42511 (var_categoryReaderListMap, kEnumeration_up) ;
    while (enumerator_42511.hasCurrentObject ()) {
      GALGAS_categoryReaderMapForGlobalCheckings var_CategoryReaderMap = GALGAS_categoryReaderMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 911)) ;
      cEnumerator_lstringlist enumerator_42608 (enumerator_42511.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_42608.hasCurrentObject ()) {
        {
        var_CategoryReaderMap.modifier_insertKey (enumerator_42608.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 913)) ;
        }
        enumerator_42608.gotoNextObject () ;
      }
      enumerator_42511.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_42820 (var_overridingCategoryReaderListMap, kEnumeration_up) ;
    while (enumerator_42820.hasCurrentObject ()) {
      GALGAS_categoryReaderMapForGlobalCheckings var_CategoryReaderMap = GALGAS_categoryReaderMapForGlobalCheckings::constructor_emptyMap (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 918)) ;
      cEnumerator_lstringlist enumerator_42917 (enumerator_42820.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_42917.hasCurrentObject ()) {
        {
        var_CategoryReaderMap.modifier_insertKey (enumerator_42917.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 920)) ;
        }
        enumerator_42917.gotoNextObject () ;
      }
      enumerator_42820.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_43144 (var_abstractCategoryReaderListMap, kEnumeration_up) ;
    while (enumerator_43144.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_43167 (enumerator_43144.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_43167.hasCurrentObject ()) {
        {
        routine_checkCategoryReaderDefinitionForClass (enumerator_43144.current_key (HERE), enumerator_43144.current_key (HERE), enumerator_43167.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryReaderListMap, constinArgument_inSemanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 926)) ;
        }
        enumerator_43167.gotoNextObject () ;
      }
      enumerator_43144.gotoNextObject () ;
    }
    cEnumerator_genericCategoryMethodListMap enumerator_43572 (var_overridingAbstractCategoryReaderListMap, kEnumeration_up) ;
    while (enumerator_43572.hasCurrentObject ()) {
      cEnumerator_lstringlist enumerator_43595 (enumerator_43572.current_mList (HERE), kEnumeration_up) ;
      while (enumerator_43595.hasCurrentObject ()) {
        {
        routine_checkCategoryReaderDefinitionForClass (enumerator_43572.current_key (HERE), enumerator_43572.current_key (HERE), enumerator_43595.current_mValue (HERE), var_descendantClassListMap, var_overridingCategoryReaderListMap, constinArgument_inSemanticContext.mAttribute_mTypeMap, inCompiler  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 939)) ;
        }
        enumerator_43595.gotoNextObject () ;
      }
      enumerator_43572.gotoNextObject () ;
    }
  }
  GALGAS_string var_typeDumpFilePath = constinArgument_inProjectSourceFilePath.operator_concat (GALGAS_string (".html")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 951)) ;
  const enumGalgasBool test_3 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_outputHTMLTypeListFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_stringset var_firstLetterSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 953)) ;
    cEnumerator_unifiedTypeMap enumerator_44145 (constinArgument_inSemanticContext.mAttribute_mTypeMap, kEnumeration_up) ;
    while (enumerator_44145.hasCurrentObject ()) {
      var_firstLetterSet.addAssign_operation (enumerator_44145.current_lkey (HERE).mAttribute_string.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 955)).reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 955))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 955)) ;
      enumerator_44145.gotoNextObject () ;
    }
    GALGAS_string var_tableOfTypeString = GALGAS_string::makeEmptyString () ;
    GALGAS_char var_currentFirstLetter = GALGAS_char (TO_UNICODE (32)) ;
    cEnumerator_unifiedTypeMap enumerator_44352 (constinArgument_inSemanticContext.mAttribute_mTypeMap, kEnumeration_up) ;
    while (enumerator_44352.hasCurrentObject ()) {
      const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_currentFirstLetter.objectCompare (enumerator_44352.current_lkey (HERE).mAttribute_string.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 960)))).boolEnum () ;
      if (kBoolTrue == test_4) {
        var_currentFirstLetter = enumerator_44352.current_lkey (HERE).mAttribute_string.reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 961)) ;
        var_tableOfTypeString.dotAssign_operation (GALGAS_string ("<br><a name=\"").operator_concat (var_currentFirstLetter.reader_uint (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 962)).reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 962))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 962)).operator_concat (GALGAS_string ("\"><b>")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 962)).operator_concat (var_currentFirstLetter.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 962))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 962)).operator_concat (GALGAS_string ("</b></a><br>")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 962))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 962)) ;
      }
      var_tableOfTypeString.dotAssign_operation (function_linkForType (enumerator_44352.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 964)).operator_concat (GALGAS_string ("<br>")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 964))  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 964)) ;
      enumerator_44352.gotoNextObject () ;
    }
    GALGAS_string var_typeDumpString = GALGAS_string (filewrapperTemplate_typeDumpGenerationTemplate_typeDump (inCompiler, constinArgument_inProjectSourceFilePath.reader_lastPathComponent (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 967)), constinArgument_inSemanticContext.mAttribute_mTypeMap, var_firstLetterSet, var_tableOfTypeString COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 966))) ;
    GALGAS_bool joker_45039_0 ; // Joker input parameter
    var_typeDumpString.method_writeToFileWhenDifferentContents (var_typeDumpFilePath, joker_45039_0, inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 972)) ;
  }else if (kBoolFalse == test_3) {
    {
    GALGAS_string::class_method_deleteFileIfExists (var_typeDumpFilePath, inCompiler COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 974)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                  Filewrapper 'typeDumpGenerationTemplate'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- All files of 'makefile_i386_linux_on_macosx' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeDumpGenerationTemplate_1 [1] = {
  NULL
} ;

//--- All sub-directories of 'makefile_i386_linux_on_macosx' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeDumpGenerationTemplate_1 [1] = {
  NULL
} ;

//--- Directory 'makefile_i386_linux_on_macosx'

const cDirectoryWrapper gWrapperDirectory_1_typeDumpGenerationTemplate (
  "makefile_i386_linux_on_macosx",
  0,
  gWrapperAllFiles_typeDumpGenerationTemplate_1,
  0,
  gWrapperAllDirectories_typeDumpGenerationTemplate_1
) ;

//--- All files of 'makefile_macosx' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeDumpGenerationTemplate_2 [1] = {
  NULL
} ;

//--- All sub-directories of 'makefile_macosx' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeDumpGenerationTemplate_2 [1] = {
  NULL
} ;

//--- Directory 'makefile_macosx'

const cDirectoryWrapper gWrapperDirectory_2_typeDumpGenerationTemplate (
  "makefile_macosx",
  0,
  gWrapperAllFiles_typeDumpGenerationTemplate_2,
  0,
  gWrapperAllDirectories_typeDumpGenerationTemplate_2
) ;

//--- All files of 'makefile_mingw_on_macosx' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeDumpGenerationTemplate_3 [1] = {
  NULL
} ;

//--- All sub-directories of 'makefile_mingw_on_macosx' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeDumpGenerationTemplate_3 [1] = {
  NULL
} ;

//--- Directory 'makefile_mingw_on_macosx'

const cDirectoryWrapper gWrapperDirectory_3_typeDumpGenerationTemplate (
  "makefile_mingw_on_macosx",
  0,
  gWrapperAllFiles_typeDumpGenerationTemplate_3,
  0,
  gWrapperAllDirectories_typeDumpGenerationTemplate_3
) ;

//--- All files of 'makefile_msys_on_win32' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeDumpGenerationTemplate_4 [1] = {
  NULL
} ;

//--- All sub-directories of 'makefile_msys_on_win32' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeDumpGenerationTemplate_4 [1] = {
  NULL
} ;

//--- Directory 'makefile_msys_on_win32'

const cDirectoryWrapper gWrapperDirectory_4_typeDumpGenerationTemplate (
  "makefile_msys_on_win32",
  0,
  gWrapperAllFiles_typeDumpGenerationTemplate_4,
  0,
  gWrapperAllDirectories_typeDumpGenerationTemplate_4
) ;

//--- All files of 'makefile_unix' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeDumpGenerationTemplate_5 [1] = {
  NULL
} ;

//--- All sub-directories of 'makefile_unix' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeDumpGenerationTemplate_5 [1] = {
  NULL
} ;

//--- Directory 'makefile_unix'

const cDirectoryWrapper gWrapperDirectory_5_typeDumpGenerationTemplate (
  "makefile_unix",
  0,
  gWrapperAllFiles_typeDumpGenerationTemplate_5,
  0,
  gWrapperAllDirectories_typeDumpGenerationTemplate_5
) ;

//--- All files of 'makefile_x86_64_linux_on_macosx' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeDumpGenerationTemplate_6 [1] = {
  NULL
} ;

//--- All sub-directories of 'makefile_x86_64_linux_on_macosx' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeDumpGenerationTemplate_6 [1] = {
  NULL
} ;

//--- Directory 'makefile_x86_64_linux_on_macosx'

const cDirectoryWrapper gWrapperDirectory_6_typeDumpGenerationTemplate (
  "makefile_x86_64_linux_on_macosx",
  0,
  gWrapperAllFiles_typeDumpGenerationTemplate_6,
  0,
  gWrapperAllDirectories_typeDumpGenerationTemplate_6
) ;

//--- All files of 'English.lproj' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeDumpGenerationTemplate_8 [1] = {
  NULL
} ;

//--- All sub-directories of 'English.lproj' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeDumpGenerationTemplate_8 [1] = {
  NULL
} ;

//--- Directory 'English.lproj'

const cDirectoryWrapper gWrapperDirectory_8_typeDumpGenerationTemplate (
  "English.lproj",
  0,
  gWrapperAllFiles_typeDumpGenerationTemplate_8,
  0,
  gWrapperAllDirectories_typeDumpGenerationTemplate_8
) ;

//--- All files of 'project_xcode' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeDumpGenerationTemplate_7 [1] = {
  NULL
} ;

//--- All sub-directories of 'project_xcode' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeDumpGenerationTemplate_7 [2] = {
  & gWrapperDirectory_8_typeDumpGenerationTemplate,
  NULL
} ;

//--- Directory 'project_xcode'

const cDirectoryWrapper gWrapperDirectory_7_typeDumpGenerationTemplate (
  "project_xcode",
  0,
  gWrapperAllFiles_typeDumpGenerationTemplate_7,
  1,
  gWrapperAllDirectories_typeDumpGenerationTemplate_7
) ;

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_typeDumpGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_typeDumpGenerationTemplate_0 [8] = {
  & gWrapperDirectory_1_typeDumpGenerationTemplate,
  & gWrapperDirectory_2_typeDumpGenerationTemplate,
  & gWrapperDirectory_3_typeDumpGenerationTemplate,
  & gWrapperDirectory_4_typeDumpGenerationTemplate,
  & gWrapperDirectory_5_typeDumpGenerationTemplate,
  & gWrapperDirectory_6_typeDumpGenerationTemplate,
  & gWrapperDirectory_7_typeDumpGenerationTemplate,
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_typeDumpGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_typeDumpGenerationTemplate_0,
  7,
  gWrapperAllDirectories_typeDumpGenerationTemplate_0
) ;


//-----------------------------------------------------------------------------*
//                                                                             *
//         Filewrapper template 'typeDumpGenerationTemplate typeDump'          *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_typeDumpGenerationTemplate_typeDump (C_Compiler * inCompiler,
                                                                       const GALGAS_string & in_PROJECT_5F_NAME,
                                                                       const GALGAS_unifiedTypeMap & in_UNIFIED_5F_TYPE_5F_MAP,
                                                                       const GALGAS_stringset & in_FIRST_5F_LETTER_5F_SET,
                                                                       const GALGAS_string & in_TABLE_5F_OF_5F_TYPES_5F_STRING
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n"
    "<html>\n"
    "<head>\n"
    "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n"
    "<title>Types of " ;
  result << in_PROJECT_5F_NAME.stringValue () ;
  result << "</title>\n"
    "<style type=\"text/css\">body {\n"
    "  font-family: Georgia, sans-serif ;\n"
    "  font-size: small ;\n"
    "}\n"
    "\n"
    "h1 {\n"
    "  text-align: center ;\n"
    "}\n"
    "\n"
    "a.header_link {\n"
    "  background-color: #FFFFCC ;\n"
    "}\n"
    "\n"
    "a:visited, a:link, a:active{\n"
    "  color: blue ;\n"
    "  text-decoration: underline ;\n"
    "}\n"
    "\n"
    "a:hover {\n"
    "  color:green ;\n"
    "  background-color: #FFFF00 ;\n"
    "  text-decoration: none ;\n"
    "}\n"
    "\n"
    "table.result {\n"
    "  border: 1px solid #666666 ;\n"
    "  border-collapse: collapse ;\n"
    "}\n"
    "\n"
    "td.result_title {\n"
    "  font-weight: bold ;\n"
    "  text-align: center ;\n"
    "  background-color: yellow ;\n"
    "  border-top: 2px solid #666666 ;\n"
    "}\n"
    "\n"
    "tr.result_line {\n"
    "  background-color: #EEEEEE ;\n"
    "  border-top: 1px solid #999999 ;\n"
    "}\n"
    "\n"
    "</style>\n"
    "</head>\n"
    "<body>\n"
    "<div>\n"
    "<h1>Types of " ;
  result << in_PROJECT_5F_NAME.stringValue () ;
  result << "</h1>\n"
    "<p>This document lists all " ;
  result << in_UNIFIED_5F_TYPE_5F_MAP.reader_count (SOURCE_FILE ("typeDump.html.gTemplate", 52)).reader_string (SOURCE_FILE ("typeDump.html.gTemplate", 52)).stringValue () ;
  result << " defined types, sorted by name.</p>\n"
    "<p>" ;
  GALGAS_uint index_1033_ (0) ;
  if (in_FIRST_5F_LETTER_5F_SET.isValid ()) {
    cEnumerator_stringset enumerator_1033 (in_FIRST_5F_LETTER_5F_SET, kEnumeration_up) ;
    while (enumerator_1033.hasCurrentObject ()) {
      result << "<a class=\"header_link\" href=\"#" ;
      result << enumerator_1033.current_key (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 55)).reader_uint (SOURCE_FILE ("typeDump.html.gTemplate", 55)).reader_string (SOURCE_FILE ("typeDump.html.gTemplate", 55)).stringValue () ;
      result << "\">" ;
      result << enumerator_1033.current_key (HERE).stringValue () ;
      result << "</a>" ;
      if (enumerator_1033.hasNextObject ()) {
        result << " - " ;
      }
      index_1033_.increment () ;
      enumerator_1033.gotoNextObject () ;
    }
  }
  result << "</p>\n"
    "<p>" ;
  result << in_TABLE_5F_OF_5F_TYPES_5F_STRING.stringValue () ;
  result << "\n"
    "</p>\n"
    "<table class=\"result\">\n" ;
  GALGAS_uint index_1239_ (0) ;
  if (in_UNIFIED_5F_TYPE_5F_MAP.isValid ()) {
    cEnumerator_unifiedTypeMap enumerator_1239 (in_UNIFIED_5F_TYPE_5F_MAP, kEnumeration_up) ;
    while (enumerator_1239.hasCurrentObject ()) {
      result << "\n"
        "<tr><td colspan=\"2\" class=\"result_title\"><a name=\"" ;
      result << enumerator_1239.current_lkey (HERE).mAttribute_string.stringValue () ;
      result << "\">@" ;
      result << enumerator_1239.current_lkey (HERE).mAttribute_string.stringValue () ;
      result << "</a></td></tr>\n"
        "\n"
        "<tr class=\"result_line\">\n"
        "  <td>Kind</td>\n"
        "  <td>\n"
        "    " ;
      const enumGalgasBool test_0 = enumerator_1239.current_mIsConcrete (HERE).operator_not (SOURCE_FILE ("typeDump.html.gTemplate", 69)).boolEnum () ;
      if (kBoolTrue == test_0) {
        result << "abstract " ;
      }else if (kBoolFalse == test_0) {
      }
      switch (enumerator_1239.current_mTypeKindEnum (HERE).enumValue ()) {
      case GALGAS_typeKindEnum::kNotBuilt :
      break ;
      case GALGAS_typeKindEnum::kEnum_classType : {
        result << "class" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_enumType : {
        result << "enum" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_listType : {
        result << "list" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_sortedListType : {
        result << "sorted list" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_mapType : {
        result << "map" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_uniqueMapType : {
        result << "unique map" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_mapProxyType : {
        result << "map proxy" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_listMapType : {
        result << "list map" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_structType : {
        result << "struct" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_graphType : {
        result << "graph" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_arrayType : {
        result << "array" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_externType : {
        result << "extern" ;
      } break ;
      case GALGAS_typeKindEnum::kEnum_predefinedType : {
        result << "predefined type" ;
      } break ;
      }
      result << "\n"
        "</td></tr>\n" ;
      const enumGalgasBool test_1 = enumerator_1239.current_mSuperType (HERE).reader_isNull (SOURCE_FILE ("typeDump.html.gTemplate", 86)).operator_not (SOURCE_FILE ("typeDump.html.gTemplate", 86)).boolEnum () ;
      if (kBoolTrue == test_1) {
        result << "<tr class=\"result_line\"><td>Superclass</td><td>" ;
        result << function_linkForType (enumerator_1239.current_mSuperType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 87)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 87)).stringValue () ;
        result << "</td></tr>" ;
      }else if (kBoolFalse == test_1) {
      }
      result << "\n"
        "<tr class=\"result_line\"><td>Operators</td>\n"
        "  <td>\n"
        "    " ;
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binaryAddOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 91)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 91)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_2) {
        result << "addition: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 92)).stringValue () ;
        result << " + " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 92)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 92)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_2) {
      }
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binarySubOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 94)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 94)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_3) {
        result << "substraction: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 95)).stringValue () ;
        result << " - " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 95)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 95)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_3) {
      }
      const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binaryMulOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 97)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 97)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_4) {
        result << "multiplication: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 98)).stringValue () ;
        result << " * " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 98)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 98)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_4) {
      }
      const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binaryDivOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 100)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 100)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_5) {
        result << "division: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 101)).stringValue () ;
        result << " / " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 101)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 101)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_5) {
      }
      const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binaryModOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 103)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 103)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_6) {
        result << "modulo: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 104)).stringValue () ;
        result << " <b>mod</b> " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 104)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 104)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_6) {
      }
      const enumGalgasBool test_7 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binaryShiftOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 106)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 106)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_7) {
        result << "left shift: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 107)).stringValue () ;
        result << " &lt;&lt; " ;
        result << function_linkForType (GALGAS_string ("uint"), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 107)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 107)).stringValue () ;
        result << "<br><br>right shift: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 108)).stringValue () ;
        result << " &gt;&gt; " ;
        result << function_linkForType (GALGAS_string ("uint"), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 108)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 108)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_7) {
      }
      const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_unaryPlusOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 110)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 110)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_8) {
        result << "unary +: + " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 111)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 111)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_8) {
      }
      const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_unaryMinusOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 113)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 113)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_9) {
        result << "unary -: - " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 114)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 114)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_9) {
      }
      const enumGalgasBool test_10 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_unaryTildeOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 116)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 116)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_10) {
        result << "bit wise negation: ~ " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 117)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 117)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_10) {
      }
      const enumGalgasBool test_11 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binaryAndOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 119)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 119)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_11) {
        result << "boolean and: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 120)).stringValue () ;
        result << " &amp; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 120)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 120)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_11) {
      }
      const enumGalgasBool test_12 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binaryOrOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 122)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 122)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_12) {
        result << "inclusive or: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 123)).stringValue () ;
        result << " | " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 123)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 123)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_12) {
      }
      const enumGalgasBool test_13 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binaryXorOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 125)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 125)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_13) {
        result << "exclusive or: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 126)).stringValue () ;
        result << " ^ " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 126)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 126)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_13) {
      }
      const enumGalgasBool test_14 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_unaryNotOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 128)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 128)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_14) {
        result << "boolean negation: <b>not</b> " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 129)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 129)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_14) {
      }
      result << "equality test: " ;
      result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 131)).stringValue () ;
      result << " == " ;
      result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 131)).stringValue () ;
      result << " &rarr; " ;
      result << function_linkForType (GALGAS_string ("bool"), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 131)).stringValue () ;
      result << "<br><br>inequality test: " ;
      result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 132)).stringValue () ;
      result << " != " ;
      result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 132)).stringValue () ;
      result << " &rarr; " ;
      result << function_linkForType (GALGAS_string ("bool"), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 132)).stringValue () ;
      result << "<br><br>" ;
      const enumGalgasBool test_15 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 133)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 133)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_15) {
        result << "lower than test: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 134)).stringValue () ;
        result << " &lt; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 134)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (GALGAS_string ("bool"), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 134)).stringValue () ;
        result << "<br><br>lower or equal test: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 135)).stringValue () ;
        result << " &lt;= " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 135)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (GALGAS_string ("bool"), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 135)).stringValue () ;
        result << "<br><br>greater than test: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 136)).stringValue () ;
        result << " &gt; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 136)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (GALGAS_string ("bool"), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 136)).stringValue () ;
        result << "<br><br>greater or equal test: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 137)).stringValue () ;
        result << " &gt;= " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 137)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (GALGAS_string ("bool"), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 137)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_15) {
      }
      const enumGalgasBool test_16 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_binaryConcatOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 139)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 139)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_16) {
        result << "concatenation: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 140)).stringValue () ;
        result << " . " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 140)).stringValue () ;
        result << " &rarr; " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 140)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_16) {
      }
      const enumGalgasBool test_17 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_dotEqualOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 142)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 142)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_17) {
        result << "appending instruction: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 143)).stringValue () ;
        result << " .= " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 143)).stringValue () ;
        result << "<br><br>" ;
      }else if (kBoolFalse == test_17) {
      }
      const enumGalgasBool test_18 = GALGAS_bool (kIsNotEqual, enumerator_1239.current_mHandledOperatorFlags (HERE).operator_and (function_incDecOperator (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 145)) COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 145)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_18) {
        result << "incrementation instruction: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 146)).stringValue () ;
        result << " ++<br><br>decrementation instruction: " ;
        result << function_linkForType (enumerator_1239.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 147)).stringValue () ;
        result << " --<br><br>" ;
      }else if (kBoolFalse == test_18) {
      }
      result << "\n"
        "</td></tr>\n" ;
      const enumGalgasBool test_19 = GALGAS_bool (kIsStrictSup, enumerator_1239.current_mAddAssignOperatorArguments (HERE).reader_length (SOURCE_FILE ("typeDump.html.gTemplate", 152)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_19) {
        result << "<tr class=\"result_line\"><td>+= instruction arguments</td><td>" ;
        GALGAS_uint index_6793_ (0) ;
        if (enumerator_1239.current_mAddAssignOperatorArguments (HERE).isValid ()) {
          cEnumerator_unifiedTypeMapProxyAndParameterList enumerator_6793 (enumerator_1239.current_mAddAssignOperatorArguments (HERE), kEnumeration_up) ;
          while (enumerator_6793.hasCurrentObject ()) {
            result << function_linkForType (enumerator_6793.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 155)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 155)).stringValue () ;
            result << " " ;
            result << enumerator_6793.current_mFormalParameterName (HERE).stringValue () ;
            result << "<br><br>" ;
            index_6793_.increment () ;
            enumerator_6793.gotoNextObject () ;
          }
        }
        result << "</td></tr>" ;
      }else if (kBoolFalse == test_19) {
      }
      const enumGalgasBool test_20 = GALGAS_bool (kIsStrictSup, enumerator_1239.current_mEnumerationDescriptor (HERE).reader_length (SOURCE_FILE ("typeDump.html.gTemplate", 159)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_20) {
        result << "<tr class=\"result_line\"><td><b>foreach</b> constants</td><td>" ;
        GALGAS_uint index_7043_ (0) ;
        if (enumerator_1239.current_mEnumerationDescriptor (HERE).isValid ()) {
          cEnumerator_enumerationDescriptorList enumerator_7043 (enumerator_1239.current_mEnumerationDescriptor (HERE), kEnumeration_up) ;
          while (enumerator_7043.hasCurrentObject ()) {
            result << function_linkForType (enumerator_7043.current_mEnumeratedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 162)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 162)).stringValue () ;
            result << " " ;
            result << enumerator_7043.current_mEnumerationName (HERE).stringValue () ;
            result << "<br><br>" ;
            index_7043_.increment () ;
            enumerator_7043.gotoNextObject () ;
          }
        }
        result << "</td></tr>" ;
      }else if (kBoolFalse == test_20) {
      }
      const enumGalgasBool test_21 = enumerator_1239.current_mTypeForEnumeratedElement (HERE).reader_isNull (SOURCE_FILE ("typeDump.html.gTemplate", 166)).operator_not (SOURCE_FILE ("typeDump.html.gTemplate", 166)).boolEnum () ;
      if (kBoolTrue == test_21) {
        result << "<tr class=\"result_line\"><td><b>for</b> enumeration type</td><td>" ;
        result << function_linkForType (enumerator_1239.current_mTypeForEnumeratedElement (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 167)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 167)).stringValue () ;
        result << "</td></tr>" ;
      }else if (kBoolFalse == test_21) {
      }
      const enumGalgasBool test_22 = GALGAS_bool (kIsStrictSup, enumerator_1239.current_mConstructorMap (HERE).reader_count (SOURCE_FILE ("typeDump.html.gTemplate", 170)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_22) {
        result << "<tr class=\"result_line\"><td>Constructors</td><td>" ;
        GALGAS_uint index_7476_ (0) ;
        if (enumerator_1239.current_mConstructorMap (HERE).isValid ()) {
          cEnumerator_constructorMap enumerator_7476 (enumerator_1239.current_mConstructorMap (HERE), kEnumeration_up) ;
          while (enumerator_7476.hasCurrentObject ()) {
            result << "<b>constructor</b> " ;
            result << enumerator_7476.current_lkey (HERE).mAttribute_string.stringValue () ;
            GALGAS_uint index_7548_ (0) ;
            if (enumerator_7476.current_mArgumentTypeList (HERE).isValid ()) {
              cEnumerator_unifiedTypeMapProxyAndParameterList enumerator_7548 (enumerator_7476.current_mArgumentTypeList (HERE), kEnumeration_up) ;
              while (enumerator_7548.hasCurrentObject ()) {
                result << "<br>&nbsp;&nbsp;&nbsp;&nbsp; \?" ;
                result << function_linkForType (enumerator_7548.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 176)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 176)).stringValue () ;
                result << " " ;
                result << enumerator_7548.current_mFormalParameterName (HERE).stringValue () ;
                index_7548_.increment () ;
                enumerator_7548.gotoNextObject () ;
              }
            }
            result << " &rarr; " ;
            result << function_linkForType (enumerator_7476.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 178)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 178)).stringValue () ;
            result << "<br><br>" ;
            index_7476_.increment () ;
            enumerator_7476.gotoNextObject () ;
          }
        }
      }else if (kBoolFalse == test_22) {
      }
      const enumGalgasBool test_23 = GALGAS_bool (kIsStrictSup, enumerator_1239.current_mReaderMap (HERE).reader_count (SOURCE_FILE ("typeDump.html.gTemplate", 182)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_23) {
        result << "<tr class=\"result_line\"><td>Readers</td><td>" ;
        GALGAS_uint index_7855_ (0) ;
        if (enumerator_1239.current_mReaderMap (HERE).isValid ()) {
          cEnumerator_readerMap enumerator_7855 (enumerator_1239.current_mReaderMap (HERE), kEnumeration_up) ;
          while (enumerator_7855.hasCurrentObject ()) {
            switch (enumerator_7855.current_mKind (HERE).enumValue ()) {
            case GALGAS_methodKind::kNotBuilt :
            break ;
            case GALGAS_methodKind::kEnum_definedAsMember : {
            } break ;
            case GALGAS_methodKind::kEnum_definedAsCategory : {
              result << "(category) " ;
            } break ;
            }
            switch (enumerator_7855.current_mQualifier (HERE).enumValue ()) {
            case GALGAS_methodQualifier::kNotBuilt :
            break ;
            case GALGAS_methodQualifier::kEnum_isAbstract : {
              result << "<b>abstract</b> " ;
            } break ;
            case GALGAS_methodQualifier::kEnum_isBasic : {
            } break ;
            case GALGAS_methodQualifier::kEnum_isBasicFinal : {
            } break ;
            case GALGAS_methodQualifier::kEnum_isInherited : {
            } break ;
            case GALGAS_methodQualifier::kEnum_isOverriding : {
              result << "<b>override</b> " ;
            } break ;
            case GALGAS_methodQualifier::kEnum_isOverridingAbstract : {
              result << "<b>abstract override</b> " ;
            } break ;
            }
            result << "<b>reader</b> " ;
            result << enumerator_7855.current_lkey (HERE).mAttribute_string.stringValue () ;
            GALGAS_uint index_8257_ (0) ;
            if (enumerator_7855.current_mArgumentTypeList (HERE).isValid ()) {
              cEnumerator_unifiedTypeMapProxyAndParameterList enumerator_8257 (enumerator_7855.current_mArgumentTypeList (HERE), kEnumeration_up) ;
              while (enumerator_8257.hasCurrentObject ()) {
                result << "<br>&nbsp;&nbsp;&nbsp;&nbsp; \?" ;
                result << function_linkForType (enumerator_8257.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 200)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 200)).stringValue () ;
                result << " " ;
                result << enumerator_8257.current_mFormalParameterName (HERE).stringValue () ;
                index_8257_.increment () ;
                enumerator_8257.gotoNextObject () ;
              }
            }
            result << " &rarr; " ;
            result << function_linkForType (enumerator_7855.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 202)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 202)).stringValue () ;
            result << "<br><br>" ;
            index_7855_.increment () ;
            enumerator_7855.gotoNextObject () ;
          }
        }
        result << "</td></tr>" ;
      }else if (kBoolFalse == test_23) {
      }
      const enumGalgasBool test_24 = GALGAS_bool (kIsStrictSup, enumerator_1239.current_mInstanceMethodMap (HERE).reader_count (SOURCE_FILE ("typeDump.html.gTemplate", 207)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_24) {
        result << "<tr class=\"result_line\"><td>Methods</td><td>" ;
        GALGAS_uint index_8595_ (0) ;
        if (enumerator_1239.current_mInstanceMethodMap (HERE).isValid ()) {
          cEnumerator_instanceMethodMap enumerator_8595 (enumerator_1239.current_mInstanceMethodMap (HERE), kEnumeration_up) ;
          while (enumerator_8595.hasCurrentObject ()) {
            switch (enumerator_8595.current_mKind (HERE).enumValue ()) {
            case GALGAS_methodKind::kNotBuilt :
            break ;
            case GALGAS_methodKind::kEnum_definedAsMember : {
            } break ;
            case GALGAS_methodKind::kEnum_definedAsCategory : {
              result << "(category) " ;
            } break ;
            }
            switch (enumerator_8595.current_mQualifier (HERE).enumValue ()) {
            case GALGAS_methodQualifier::kNotBuilt :
            break ;
            case GALGAS_methodQualifier::kEnum_isAbstract : {
              result << "<b>abstract</b> " ;
            } break ;
            case GALGAS_methodQualifier::kEnum_isBasic : {
            } break ;
            case GALGAS_methodQualifier::kEnum_isBasicFinal : {
            } break ;
            case GALGAS_methodQualifier::kEnum_isInherited : {
            } break ;
            case GALGAS_methodQualifier::kEnum_isOverriding : {
              result << "<b>override</b> " ;
            } break ;
            case GALGAS_methodQualifier::kEnum_isOverridingAbstract : {
              result << "<b>abstract override</b> " ;
            } break ;
            }
            result << "<b>method</b> " ;
            result << enumerator_8595.current_lkey (HERE).mAttribute_string.stringValue () ;
            GALGAS_uint index_8994_ (0) ;
            if (enumerator_8595.current_mParameterList (HERE).isValid ()) {
              cEnumerator_formalParameterSignature enumerator_8994 (enumerator_8595.current_mParameterList (HERE), kEnumeration_up) ;
              while (enumerator_8994.hasCurrentObject ()) {
                result << "<br>&nbsp;&nbsp;&nbsp;&nbsp;" ;
                switch (enumerator_8994.current_mFormalArgumentPassingMode (HERE).enumValue ()) {
                case GALGAS_formalArgumentPassingModeAST::kNotBuilt :
                break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentConstantIn : {
                  result << " \?\?" ;
                } break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentIn : {
                  result << " \?" ;
                } break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentInOut : {
                  result << " \?!" ;
                } break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentOut : {
                  result << " !" ;
                } break ;
                }
                result << function_linkForType (enumerator_8994.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 231)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 231)).stringValue () ;
                result << " " ;
                result << enumerator_8994.current_mFormalArgumentName (HERE).stringValue () ;
                index_8994_.increment () ;
                enumerator_8994.gotoNextObject () ;
              }
            }
            result << "<br><br>" ;
            index_8595_.increment () ;
            enumerator_8595.gotoNextObject () ;
          }
        }
        result << "</td></tr>" ;
      }else if (kBoolFalse == test_24) {
      }
      const enumGalgasBool test_25 = GALGAS_bool (kIsStrictSup, enumerator_1239.current_mModifierMap (HERE).reader_count (SOURCE_FILE ("typeDump.html.gTemplate", 238)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_25) {
        result << "<tr class=\"result_line\"><td>Modifiers</td><td>" ;
        GALGAS_uint index_9487_ (0) ;
        if (enumerator_1239.current_mModifierMap (HERE).isValid ()) {
          cEnumerator_modifierMap enumerator_9487 (enumerator_1239.current_mModifierMap (HERE), kEnumeration_up) ;
          while (enumerator_9487.hasCurrentObject ()) {
            switch (enumerator_9487.current_mKind (HERE).enumValue ()) {
            case GALGAS_methodKind::kNotBuilt :
            break ;
            case GALGAS_methodKind::kEnum_definedAsMember : {
            } break ;
            case GALGAS_methodKind::kEnum_definedAsCategory : {
              result << "(category) " ;
            } break ;
            }
            switch (enumerator_9487.current_mQualifier (HERE).enumValue ()) {
            case GALGAS_methodQualifier::kNotBuilt :
            break ;
            case GALGAS_methodQualifier::kEnum_isAbstract : {
              result << "<b>abstract</b> " ;
            } break ;
            case GALGAS_methodQualifier::kEnum_isBasic : {
            } break ;
            case GALGAS_methodQualifier::kEnum_isBasicFinal : {
            } break ;
            case GALGAS_methodQualifier::kEnum_isInherited : {
            } break ;
            case GALGAS_methodQualifier::kEnum_isOverriding : {
              result << "<b>override</b> " ;
            } break ;
            case GALGAS_methodQualifier::kEnum_isOverridingAbstract : {
              result << "<b>abstract override</b> " ;
            } break ;
            }
            result << "<b>modifier</b> " ;
            result << enumerator_9487.current_lkey (HERE).mAttribute_string.stringValue () ;
            GALGAS_uint index_9888_ (0) ;
            if (enumerator_9487.current_mParameterList (HERE).isValid ()) {
              cEnumerator_formalParameterSignature enumerator_9888 (enumerator_9487.current_mParameterList (HERE), kEnumeration_up) ;
              while (enumerator_9888.hasCurrentObject ()) {
                result << "<br>&nbsp;&nbsp;&nbsp;&nbsp;" ;
                switch (enumerator_9888.current_mFormalArgumentPassingMode (HERE).enumValue ()) {
                case GALGAS_formalArgumentPassingModeAST::kNotBuilt :
                break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentConstantIn : {
                  result << " \?\?" ;
                } break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentIn : {
                  result << " \?" ;
                } break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentInOut : {
                  result << " \?!" ;
                } break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentOut : {
                  result << " !" ;
                } break ;
                }
                result << function_linkForType (enumerator_9888.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 262)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 262)).stringValue () ;
                result << " " ;
                result << enumerator_9888.current_mFormalArgumentName (HERE).stringValue () ;
                index_9888_.increment () ;
                enumerator_9888.gotoNextObject () ;
              }
            }
            result << "<br><br>" ;
            index_9487_.increment () ;
            enumerator_9487.gotoNextObject () ;
          }
        }
        result << "</td></tr>" ;
      }else if (kBoolFalse == test_25) {
      }
      const enumGalgasBool test_26 = GALGAS_bool (kIsStrictSup, enumerator_1239.current_mClassMethodMap (HERE).reader_count (SOURCE_FILE ("typeDump.html.gTemplate", 269)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_26) {
        result << "<tr class=\"result_line\"><td>Class methods</td><td>" ;
        GALGAS_uint index_10395_ (0) ;
        if (enumerator_1239.current_mClassMethodMap (HERE).isValid ()) {
          cEnumerator_classMethodMap enumerator_10395 (enumerator_1239.current_mClassMethodMap (HERE), kEnumeration_up) ;
          while (enumerator_10395.hasCurrentObject ()) {
            result << "<b>class method</b> " ;
            result << enumerator_10395.current_lkey (HERE).mAttribute_string.stringValue () ;
            GALGAS_uint index_10465_ (0) ;
            if (enumerator_10395.current_mParameterList (HERE).isValid ()) {
              cEnumerator_formalParameterSignature enumerator_10465 (enumerator_10395.current_mParameterList (HERE), kEnumeration_up) ;
              while (enumerator_10465.hasCurrentObject ()) {
                result << "<br>&nbsp;&nbsp;&nbsp;&nbsp;" ;
                switch (enumerator_10465.current_mFormalArgumentPassingMode (HERE).enumValue ()) {
                case GALGAS_formalArgumentPassingModeAST::kNotBuilt :
                break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentConstantIn : {
                  result << " \?\?" ;
                } break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentIn : {
                  result << " \?" ;
                } break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentInOut : {
                  result << " \?!" ;
                } break ;
                case GALGAS_formalArgumentPassingModeAST::kEnum_argumentOut : {
                  result << " !" ;
                } break ;
                }
                result << function_linkForType (enumerator_10465.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 281)), inCompiler COMMA_SOURCE_FILE ("typeDump.html.gTemplate", 281)).stringValue () ;
                result << " " ;
                result << enumerator_10465.current_mFormalArgumentName (HERE).stringValue () ;
                index_10465_.increment () ;
                enumerator_10465.gotoNextObject () ;
              }
            }
            result << "<br><br>" ;
            index_10395_.increment () ;
            enumerator_10395.gotoNextObject () ;
          }
        }
        result << "</td></tr>" ;
      }else if (kBoolFalse == test_26) {
      }
      index_1239_.increment () ;
      enumerator_1239.gotoNextObject () ;
    }
  }
  result << "\n"
    "</table>\n"
    "</div>\n"
    "</body>\n"
    "</html>\n" ;
  return GALGAS_string (result) ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                           Function 'linkForType'                            *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string function_linkForType (const GALGAS_string & constinArgument_inTypeName,
                                    C_Compiler * /* inCompiler */
                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("<a class=\"header_link\" href=\"#").operator_concat (constinArgument_inTypeName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 999)).operator_concat (GALGAS_string ("\">@")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 999)).operator_concat (constinArgument_inTypeName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 999)).operator_concat (GALGAS_string ("</a>")  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 999)) ;
//---
  return result_outResult ;
}


//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_linkForType [2] = {
  & kTypeDescriptor_GALGAS_string,
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_linkForType (C_Compiler * inCompiler,
                                                            const cObjectArray & inEffectiveParameterArray,
                                                            const GALGAS_location & /* §§ inErrorLocation */
                                                            COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                               inCompiler
                                                               COMMA_THERE) ;
  return function_linkForType (operand0,
                               inCompiler
                               COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_linkForType ("linkForType",
                                                             functionWithGenericHeader_linkForType,
                                                             & kTypeDescriptor_GALGAS_string,
                                                             1,
                                                             functionArgs_linkForType) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//       Category method '@semanticDeclarationAST buildCategoryListMaps'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_buildCategoryListMaps> gCategoryMethodTable_semanticDeclarationAST_buildCategoryListMaps ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_buildCategoryListMaps (const int32_t inClassIndex,
                                                categoryMethodSignature_semanticDeclarationAST_buildCategoryListMaps inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_buildCategoryListMaps.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

void callCategoryMethod_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                               GALGAS_genericCategoryMethodListMap & io_ioAbstractCategoryModifierListMapAST,
                                               GALGAS_genericCategoryMethodListMap & io_ioCategoryModifierListMap,
                                               GALGAS_genericCategoryMethodListMap & io_ioOverridingCategoryModifierListMap,
                                               GALGAS_genericCategoryMethodListMap & io_ioOverridingAbstractCategoryModifierListMap,
                                               GALGAS_genericCategoryMethodListMap & io_ioAbstractCategoryMethodListMapAST,
                                               GALGAS_genericCategoryMethodListMap & io_ioCategoryMethodListMap,
                                               GALGAS_genericCategoryMethodListMap & io_ioOverridingCategoryMethodListMap,
                                               GALGAS_genericCategoryMethodListMap & io_ioOverridingAbstractCategoryMethodListMap,
                                               GALGAS_genericCategoryMethodListMap & io_ioAbstractCategoryReaderListMap,
                                               GALGAS_genericCategoryMethodListMap & io_ioCategoryReaderListMap,
                                               GALGAS_genericCategoryMethodListMap & io_ioOverridingCategoryReaderListMap,
                                               GALGAS_genericCategoryMethodListMap & io_ioOverridingAbstractCategoryReaderListMap,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_buildCategoryListMaps f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_buildCategoryListMaps.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_buildCategoryListMaps (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_buildCategoryListMaps.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_buildCategoryListMaps (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_buildCategoryListMaps.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioAbstractCategoryModifierListMapAST, io_ioCategoryModifierListMap, io_ioOverridingCategoryModifierListMap, io_ioOverridingAbstractCategoryModifierListMap, io_ioAbstractCategoryMethodListMapAST, io_ioCategoryMethodListMap, io_ioOverridingCategoryMethodListMap, io_ioOverridingAbstractCategoryMethodListMap, io_ioAbstractCategoryReaderListMap, io_ioCategoryReaderListMap, io_ioOverridingCategoryReaderListMap, io_ioOverridingAbstractCategoryReaderListMap, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*

static void categoryMethod_semanticDeclarationAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                         GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_semanticDeclarationAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_semanticDeclarationAST.mSlotID,
                                             categoryMethod_semanticDeclarationAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_buildCategoryListMaps (void) {
  gCategoryMethodTable_semanticDeclarationAST_buildCategoryListMaps.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_buildCategoryListMaps (defineCategoryMethod_semanticDeclarationAST_buildCategoryListMaps,
                                                                         freeCategoryMethod_semanticDeclarationAST_buildCategoryListMaps) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@abstractCategoryModifierAST buildCategoryListMaps'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryModifierAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                              GALGAS_genericCategoryMethodListMap & ioArgument_ioAbstractCategoryModifierListMapAST,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryModifierAST * object = (const cPtr_abstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryModifierAST) ;
  ioArgument_ioAbstractCategoryModifierListMapAST.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 72)), object->mAttribute_mAbstractCategoryModifierName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 71)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryModifierAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                             categoryMethod_abstractCategoryModifierAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryModifierAST_buildCategoryListMaps (defineCategoryMethod_abstractCategoryModifierAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@categoryModifierAST buildCategoryListMaps'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryModifierAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                      GALGAS_genericCategoryMethodListMap & ioArgument_ioCategoryModifierListMap,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryModifierAST * object = (const cPtr_categoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryModifierAST) ;
  ioArgument_ioCategoryModifierListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 94)), object->mAttribute_mCategoryModifierName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 93)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryModifierAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                             categoryMethod_categoryModifierAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryModifierAST_buildCategoryListMaps (defineCategoryMethod_categoryModifierAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryModifierAST buildCategoryListMaps'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryModifierAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                                GALGAS_genericCategoryMethodListMap & ioArgument_ioOverridingCategoryModifierListMap,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                                GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryModifierAST * object = (const cPtr_overridingCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryModifierAST) ;
  ioArgument_ioOverridingCategoryModifierListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 116)), object->mAttribute_mOverridingCategoryModifierName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 115)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryModifierAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                             categoryMethod_overridingCategoryModifierAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryModifierAST_buildCategoryListMaps (defineCategoryMethod_overridingCategoryModifierAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryModifierAST buildCategoryListMaps'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryModifierAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                                        GALGAS_genericCategoryMethodListMap & ioArgument_ioOverridingAbstractCategoryModifierListMap,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                                        GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryModifierAST * object = (const cPtr_overridingAbstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryModifierAST) ;
  ioArgument_ioOverridingAbstractCategoryModifierListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 138)), object->mAttribute_mOverridingCategoryModifierName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 137)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryModifierAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                             categoryMethod_overridingAbstractCategoryModifierAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryModifierAST_buildCategoryListMaps (defineCategoryMethod_overridingAbstractCategoryModifierAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@abstractCategoryMethodAST buildCategoryListMaps'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryMethodAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & ioArgument_ioAbstractCategoryMethodListMapAST,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryMethodAST * object = (const cPtr_abstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryMethodAST) ;
  ioArgument_ioAbstractCategoryMethodListMapAST.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 160)), object->mAttribute_mAbstractCategoryMethodName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 159)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryMethodAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                             categoryMethod_abstractCategoryMethodAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryMethodAST_buildCategoryListMaps (defineCategoryMethod_abstractCategoryMethodAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@categoryMethodAST buildCategoryListMaps'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryMethodAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                    GALGAS_genericCategoryMethodListMap & ioArgument_ioCategoryMethodListMap,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryMethodAST * object = (const cPtr_categoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryMethodAST) ;
  ioArgument_ioCategoryMethodListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 182)), object->mAttribute_mCategoryMethodName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 181)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryMethodAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                             categoryMethod_categoryMethodAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryMethodAST_buildCategoryListMaps (defineCategoryMethod_categoryMethodAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryMethodAST buildCategoryListMaps'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryMethodAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & ioArgument_ioOverridingCategoryMethodListMap,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryMethodAST * object = (const cPtr_overridingCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryMethodAST) ;
  ioArgument_ioOverridingCategoryMethodListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 204)), object->mAttribute_mOverridingCategoryMethodName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 203)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryMethodAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                             categoryMethod_overridingCategoryMethodAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryMethodAST_buildCategoryListMaps (defineCategoryMethod_overridingCategoryMethodAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryMethodAST buildCategoryListMaps'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryMethodAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & ioArgument_ioOverridingAbstractCategoryMethodListMap,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryMethodAST * object = (const cPtr_overridingAbstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryMethodAST) ;
  ioArgument_ioOverridingAbstractCategoryMethodListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 226)), object->mAttribute_mOverridingCategoryMethodName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 225)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryMethodAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                             categoryMethod_overridingAbstractCategoryMethodAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryMethodAST_buildCategoryListMaps (defineCategoryMethod_overridingAbstractCategoryMethodAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@abstractCategoryReaderAST buildCategoryListMaps'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryReaderAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & ioArgument_ioAbstractCategoryReaderListMap,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                            GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryReaderAST * object = (const cPtr_abstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryReaderAST) ;
  ioArgument_ioAbstractCategoryReaderListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 248)), object->mAttribute_mAbstractCategoryReaderName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 247)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryReaderAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                             categoryMethod_abstractCategoryReaderAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryReaderAST_buildCategoryListMaps (defineCategoryMethod_abstractCategoryReaderAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@categoryReaderAST buildCategoryListMaps'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryReaderAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & ioArgument_ioCategoryReaderListMap,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                    GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryReaderAST * object = (const cPtr_categoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryReaderAST) ;
  ioArgument_ioCategoryReaderListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 270)), object->mAttribute_mCategoryReaderName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 269)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryReaderAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                             categoryMethod_categoryReaderAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryReaderAST_buildCategoryListMaps (defineCategoryMethod_categoryReaderAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryReaderAST buildCategoryListMaps'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryReaderAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                              GALGAS_genericCategoryMethodListMap & ioArgument_ioOverridingCategoryReaderListMap,
                                                                              GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryReaderListMap */,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryReaderAST * object = (const cPtr_overridingCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryReaderAST) ;
  ioArgument_ioOverridingCategoryReaderListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 292)), object->mAttribute_mOverridingCategoryReaderName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 291)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryReaderAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                             categoryMethod_overridingCategoryReaderAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryReaderAST_buildCategoryListMaps (defineCategoryMethod_overridingCategoryReaderAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryReaderAST buildCategoryListMaps'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryReaderAST_buildCategoryListMaps (const cPtr_semanticDeclarationAST * inObject,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryModifierListMapAST */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryModifierListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryModifierListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryModifierListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryMethodListMapAST */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryMethodListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryMethodListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingAbstractCategoryMethodListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioAbstractCategoryReaderListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioCategoryReaderListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & /* ioArgument_ioOverridingCategoryReaderListMap */,
                                                                                      GALGAS_genericCategoryMethodListMap & ioArgument_ioOverridingAbstractCategoryReaderListMap,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryReaderAST * object = (const cPtr_overridingAbstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryReaderAST) ;
  ioArgument_ioOverridingAbstractCategoryReaderListMap.addAssign_operation (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("projectGlobalCheckings.gSemantics", 314)), object->mAttribute_mAbstractCategoryReaderName  COMMA_SOURCE_FILE ("projectGlobalCheckings.gSemantics", 313)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryReaderAST_buildCategoryListMaps (void) {
  enterCategoryMethod_buildCategoryListMaps (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                             categoryMethod_overridingAbstractCategoryReaderAST_buildCategoryListMaps) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryReaderAST_buildCategoryListMaps (defineCategoryMethod_overridingAbstractCategoryReaderAST_buildCategoryListMaps, NULL) ;

//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap_2E_element::GALGAS_genericCategoryMethodListMap_2E_element (void) :
mAttribute_key (),
mAttribute_mList () {
}

//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap_2E_element::~ GALGAS_genericCategoryMethodListMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap_2E_element::GALGAS_genericCategoryMethodListMap_2E_element (const GALGAS_string & inOperand0,
                                                                                                const GALGAS_lstringlist & inOperand1) :
mAttribute_key (inOperand0),
mAttribute_mList (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap_2E_element GALGAS_genericCategoryMethodListMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_genericCategoryMethodListMap_2E_element (GALGAS_string::constructor_default (HERE),
                                                         GALGAS_lstringlist::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap_2E_element GALGAS_genericCategoryMethodListMap_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                const GALGAS_lstringlist & inOperand1 
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_genericCategoryMethodListMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_genericCategoryMethodListMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_genericCategoryMethodListMap_2E_element::objectCompare (const GALGAS_genericCategoryMethodListMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_key.objectCompare (inOperand.mAttribute_key) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mList.objectCompare (inOperand.mAttribute_mList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_genericCategoryMethodListMap_2E_element::isValid (void) const {
  return mAttribute_key.isValid () && mAttribute_mList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_genericCategoryMethodListMap_2E_element::drop (void) {
  mAttribute_key.drop () ;
  mAttribute_mList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_genericCategoryMethodListMap_2E_element::description (C_String & ioString,
                                                                  const int32_t inIndentation) const {
  ioString << "<struct @genericCategoryMethodListMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_key.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_genericCategoryMethodListMap_2E_element::reader_key (UNUSED_LOCATION_ARGS) const {
  return mAttribute_key ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_genericCategoryMethodListMap_2E_element::reader_mList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                 @genericCategoryMethodListMap.element type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_genericCategoryMethodListMap_2E_element ("genericCategoryMethodListMap.element",
                                                                NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_genericCategoryMethodListMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_genericCategoryMethodListMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_genericCategoryMethodListMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_genericCategoryMethodListMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_genericCategoryMethodListMap_2E_element GALGAS_genericCategoryMethodListMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_genericCategoryMethodListMap_2E_element result ;
  const GALGAS_genericCategoryMethodListMap_2E_element * p = (const GALGAS_genericCategoryMethodListMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_genericCategoryMethodListMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("genericCategoryMethodListMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap_2E_element::GALGAS_descendantClassListMap_2E_element (void) :
mAttribute_key (),
mAttribute_mList () {
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap_2E_element::~ GALGAS_descendantClassListMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap_2E_element::GALGAS_descendantClassListMap_2E_element (const GALGAS_string & inOperand0,
                                                                                    const GALGAS_unifiedTypeMapProxyList & inOperand1) :
mAttribute_key (inOperand0),
mAttribute_mList (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap_2E_element GALGAS_descendantClassListMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_descendantClassListMap_2E_element (GALGAS_string::constructor_default (HERE),
                                                   GALGAS_unifiedTypeMapProxyList::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap_2E_element GALGAS_descendantClassListMap_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                    const GALGAS_unifiedTypeMapProxyList & inOperand1 
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_descendantClassListMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_descendantClassListMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_descendantClassListMap_2E_element::objectCompare (const GALGAS_descendantClassListMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_key.objectCompare (inOperand.mAttribute_key) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mList.objectCompare (inOperand.mAttribute_mList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_descendantClassListMap_2E_element::isValid (void) const {
  return mAttribute_key.isValid () && mAttribute_mList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_descendantClassListMap_2E_element::drop (void) {
  mAttribute_key.drop () ;
  mAttribute_mList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_descendantClassListMap_2E_element::description (C_String & ioString,
                                                            const int32_t inIndentation) const {
  ioString << "<struct @descendantClassListMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_key.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_descendantClassListMap_2E_element::reader_key (UNUSED_LOCATION_ARGS) const {
  return mAttribute_key ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_descendantClassListMap_2E_element::reader_mList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                    @descendantClassListMap.element type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_descendantClassListMap_2E_element ("descendantClassListMap.element",
                                                          NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_descendantClassListMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_descendantClassListMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_descendantClassListMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_descendantClassListMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_descendantClassListMap_2E_element GALGAS_descendantClassListMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_descendantClassListMap_2E_element result ;
  const GALGAS_descendantClassListMap_2E_element * p = (const GALGAS_descendantClassListMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_descendantClassListMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("descendantClassListMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings_2E_element::GALGAS_categoryMethodMapForGlobalCheckings_2E_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings_2E_element::~ GALGAS_categoryMethodMapForGlobalCheckings_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings_2E_element::GALGAS_categoryMethodMapForGlobalCheckings_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings_2E_element GALGAS_categoryMethodMapForGlobalCheckings_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryMethodMapForGlobalCheckings_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings_2E_element GALGAS_categoryMethodMapForGlobalCheckings_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForGlobalCheckings_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_categoryMethodMapForGlobalCheckings_2E_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryMethodMapForGlobalCheckings_2E_element::objectCompare (const GALGAS_categoryMethodMapForGlobalCheckings_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_categoryMethodMapForGlobalCheckings_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForGlobalCheckings_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForGlobalCheckings_2E_element::description (C_String & ioString,
                                                                         const int32_t inIndentation) const {
  ioString << "<struct @categoryMethodMapForGlobalCheckings.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryMethodMapForGlobalCheckings_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//              @categoryMethodMapForGlobalCheckings.element type              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForGlobalCheckings_2E_element ("categoryMethodMapForGlobalCheckings.element",
                                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForGlobalCheckings_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForGlobalCheckings_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForGlobalCheckings_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForGlobalCheckings_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForGlobalCheckings_2E_element GALGAS_categoryMethodMapForGlobalCheckings_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForGlobalCheckings_2E_element result ;
  const GALGAS_categoryMethodMapForGlobalCheckings_2E_element * p = (const GALGAS_categoryMethodMapForGlobalCheckings_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForGlobalCheckings_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryMethodMapForGlobalCheckings.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings_2E_element::GALGAS_categoryModifierMapForGlobalCheckings_2E_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings_2E_element::~ GALGAS_categoryModifierMapForGlobalCheckings_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings_2E_element::GALGAS_categoryModifierMapForGlobalCheckings_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings_2E_element GALGAS_categoryModifierMapForGlobalCheckings_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryModifierMapForGlobalCheckings_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings_2E_element GALGAS_categoryModifierMapForGlobalCheckings_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForGlobalCheckings_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_categoryModifierMapForGlobalCheckings_2E_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryModifierMapForGlobalCheckings_2E_element::objectCompare (const GALGAS_categoryModifierMapForGlobalCheckings_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_categoryModifierMapForGlobalCheckings_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForGlobalCheckings_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForGlobalCheckings_2E_element::description (C_String & ioString,
                                                                           const int32_t inIndentation) const {
  ioString << "<struct @categoryModifierMapForGlobalCheckings.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryModifierMapForGlobalCheckings_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//             @categoryModifierMapForGlobalCheckings.element type             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForGlobalCheckings_2E_element ("categoryModifierMapForGlobalCheckings.element",
                                                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForGlobalCheckings_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForGlobalCheckings_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForGlobalCheckings_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForGlobalCheckings_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForGlobalCheckings_2E_element GALGAS_categoryModifierMapForGlobalCheckings_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                C_Compiler * inCompiler
                                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForGlobalCheckings_2E_element result ;
  const GALGAS_categoryModifierMapForGlobalCheckings_2E_element * p = (const GALGAS_categoryModifierMapForGlobalCheckings_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForGlobalCheckings_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryModifierMapForGlobalCheckings.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings_2E_element::GALGAS_categoryReaderMapForGlobalCheckings_2E_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings_2E_element::~ GALGAS_categoryReaderMapForGlobalCheckings_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings_2E_element::GALGAS_categoryReaderMapForGlobalCheckings_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings_2E_element GALGAS_categoryReaderMapForGlobalCheckings_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryReaderMapForGlobalCheckings_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings_2E_element GALGAS_categoryReaderMapForGlobalCheckings_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForGlobalCheckings_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_categoryReaderMapForGlobalCheckings_2E_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryReaderMapForGlobalCheckings_2E_element::objectCompare (const GALGAS_categoryReaderMapForGlobalCheckings_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_categoryReaderMapForGlobalCheckings_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForGlobalCheckings_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForGlobalCheckings_2E_element::description (C_String & ioString,
                                                                         const int32_t inIndentation) const {
  ioString << "<struct @categoryReaderMapForGlobalCheckings.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryReaderMapForGlobalCheckings_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//              @categoryReaderMapForGlobalCheckings.element type              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForGlobalCheckings_2E_element ("categoryReaderMapForGlobalCheckings.element",
                                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForGlobalCheckings_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForGlobalCheckings_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForGlobalCheckings_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForGlobalCheckings_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForGlobalCheckings_2E_element GALGAS_categoryReaderMapForGlobalCheckings_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForGlobalCheckings_2E_element result ;
  const GALGAS_categoryReaderMapForGlobalCheckings_2E_element * p = (const GALGAS_categoryReaderMapForGlobalCheckings_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForGlobalCheckings_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryReaderMapForGlobalCheckings.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


