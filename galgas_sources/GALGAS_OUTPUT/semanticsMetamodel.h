//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticsMetamodel.h'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       april 3rd, 2007, at 19h31'8"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsMetamodel_METAMODEL_DEFINED
#define semanticsMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

uint32 _metamodel_index_for_semanticsMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticsComponentRootList ;
class GGS_semanticsComponentRoot ;
class cPtr_semanticsComponentRoot ;
class GGS_semanticDeclarationList ;
class GGS_semanticDeclaration ;
class cPtr_semanticDeclaration ;
class GGS_structuredTypeAttributeList ;
class GGS_structuredTypeAttribute ;
class cPtr_structuredTypeAttribute ;
class GGS_mapMethodList ;
class GGS_mapMethod ;
class cPtr_mapMethod ;
class GGS_mapDeclarationList ;
class GGS_mapDeclaration ;
class cPtr_mapDeclaration ;
class GGS_classDeclarationList ;
class GGS_classDeclaration ;
class cPtr_classDeclaration ;
class GGS_listDeclarationList ;
class GGS_listDeclaration ;
class cPtr_listDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_semanticsComponentRoot'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticsComponentRoot : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_semanticsComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_semanticsComponentRoot * getPtr (void) const {
    return (cPtr_semanticsComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSemanticsComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mImportedComponentFileNameList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticDeclarationList  reader_mSemanticDeclarationList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticsComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticsComponentRoot * operator () (void) const {
      return (cPtr_semanticsComponentRoot *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@semanticsComponentRootList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticsComponentRootList : public AC_galgas_list {
  public : typedef cPtr_semanticsComponentRoot element_type ;
//--- Constructor 'emptyList'
  public : static GGS_semanticsComponentRootList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_semanticsComponentRootList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_semanticsComponentRootList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstringlist & _out_1,
                              GGS_semanticDeclarationList & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstringlist & _out_1,
                             GGS_semanticDeclarationList & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstringlist & _out_1,
                                GGS_semanticDeclarationList & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstringlist & _out_1,
                                 GGS_semanticDeclarationList & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticsComponentRootList _operator_concat (const GGS_semanticsComponentRootList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_semanticsComponentRoot & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_semanticDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticDeclaration : public AC_galgas_entity {
//--- getPtr
  public : inline cPtr_semanticDeclaration * getPtr (void) const {
    return (cPtr_semanticDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticDeclaration * operator () (void) const {
      return (cPtr_semanticDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@semanticDeclarationList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticDeclarationList : public AC_galgas_list {
  public : typedef cPtr_semanticDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_semanticDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_semanticDeclarationList constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_semanticDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation () ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticDeclarationList _operator_concat (const GGS_semanticDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_semanticDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_structuredTypeAttribute'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_structuredTypeAttribute : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_structuredTypeAttribute constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_structuredTypeAttribute * getPtr (void) const {
    return (cPtr_structuredTypeAttribute *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mAttributeTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAttributeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_structuredTypeAttribute * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_structuredTypeAttribute * operator () (void) const {
      return (cPtr_structuredTypeAttribute *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@structuredTypeAttributeList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_structuredTypeAttributeList : public AC_galgas_list {
  public : typedef cPtr_structuredTypeAttribute element_type ;
//--- Constructor 'emptyList'
  public : static GGS_structuredTypeAttributeList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_structuredTypeAttributeList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_structuredTypeAttributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_structuredTypeAttributeList _operator_concat (const GGS_structuredTypeAttributeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_structuredTypeAttribute & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_mapMethod'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapMethod : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_mapMethod constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_mapMethod * getPtr (void) const {
    return (cPtr_mapMethod *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mErrorMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapMethod * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapMethod * operator () (void) const {
      return (cPtr_mapMethod *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@mapMethodList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapMethodList : public AC_galgas_list {
  public : typedef cPtr_mapMethod element_type ;
//--- Constructor 'emptyList'
  public : static GGS_mapMethodList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_mapMethodList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_mapMethodList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapMethodList _operator_concat (const GGS_mapMethodList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_mapMethod & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_mapDeclaration'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_mapDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_structuredTypeAttributeList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodList  reader_mInsertMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodList  reader_mSearchMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodList  reader_mRemoveMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapDeclaration * operator () (void) const {
      return (cPtr_mapDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@mapDeclarationList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapDeclarationList : public AC_galgas_list {
  public : typedef cPtr_mapDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_mapDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_mapDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_mapDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_structuredTypeAttributeList & _out_1,
                              GGS_mapMethodList & _out_2,
                              GGS_mapMethodList & _out_3,
                              GGS_mapMethodList & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_structuredTypeAttributeList & _out_1,
                             GGS_mapMethodList & _out_2,
                             GGS_mapMethodList & _out_3,
                             GGS_mapMethodList & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_structuredTypeAttributeList & _out_1,
                                GGS_mapMethodList & _out_2,
                                GGS_mapMethodList & _out_3,
                                GGS_mapMethodList & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_structuredTypeAttributeList & _out_1,
                                 GGS_mapMethodList & _out_2,
                                 GGS_mapMethodList & _out_3,
                                 GGS_mapMethodList & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapDeclarationList _operator_concat (const GGS_mapDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_mapDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_classDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_classDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_structuredTypeAttributeList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mClassTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSuperClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_structuredTypeAttributeList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classDeclaration * operator () (void) const {
      return (cPtr_classDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@classDeclarationList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classDeclarationList : public AC_galgas_list {
  public : typedef cPtr_classDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_classDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_classDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_structuredTypeAttributeList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_classDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_bool& _out_0,
                              GGS_lstring & _out_1,
                              GGS_lstring & _out_2,
                              GGS_structuredTypeAttributeList & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_bool& _out_0,
                             GGS_lstring & _out_1,
                             GGS_lstring & _out_2,
                             GGS_structuredTypeAttributeList & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_bool& _out_0,
                                GGS_lstring & _out_1,
                                GGS_lstring & _out_2,
                                GGS_structuredTypeAttributeList & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_bool& _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_structuredTypeAttributeList & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_structuredTypeAttributeList & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_classDeclarationList _operator_concat (const GGS_classDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_structuredTypeAttributeList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_structuredTypeAttributeList & argument_3) ;

  protected : void _internalPrependValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_structuredTypeAttributeList & argument_3) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_classDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_listDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_listDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_listDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_structuredTypeAttributeList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listDeclaration * operator () (void) const {
      return (cPtr_listDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@listDeclarationList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_listDeclarationList : public AC_galgas_list {
  public : typedef cPtr_listDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_listDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_listDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_listDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_structuredTypeAttributeList & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_structuredTypeAttributeList & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_structuredTypeAttributeList & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_structuredTypeAttributeList & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_listDeclarationList _operator_concat (const GGS_listDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_structuredTypeAttributeList & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_listDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@semanticsComponentRootList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticsComponentRoot : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mSemanticsComponentName ;
  public : GGS_lstringlist  mImportedComponentFileNameList ;
  public : GGS_semanticDeclarationList  mSemanticDeclarationList ;
//--- Constructor
  public : cPtr_semanticsComponentRoot (const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_semanticDeclarationList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_semanticsComponentRoot * nextObject (void) const {
    return (cPtr_semanticsComponentRoot *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_semanticsComponentRoot * previousObject (void) const {
    return (cPtr_semanticsComponentRoot *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_semanticsComponentRoot * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_semanticsComponentRootList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@semanticDeclarationList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticDeclaration : public C_GGS_MetamodelEntity {
//--- Attributes
//--- Constructor
  public : cPtr_semanticDeclaration (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_semanticDeclaration * nextObject (void) const {
    return (cPtr_semanticDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_semanticDeclaration * previousObject (void) const {
    return (cPtr_semanticDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_semanticDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_semanticDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@structuredTypeAttributeList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_structuredTypeAttribute : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mAttributeTypeName ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : cPtr_structuredTypeAttribute (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_structuredTypeAttribute * nextObject (void) const {
    return (cPtr_structuredTypeAttribute *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_structuredTypeAttribute * previousObject (void) const {
    return (cPtr_structuredTypeAttribute *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_structuredTypeAttribute * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_structuredTypeAttributeList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@mapMethodList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapMethod : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_lstring  mErrorMessage ;
//--- Constructor
  public : cPtr_mapMethod (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_mapMethod * nextObject (void) const {
    return (cPtr_mapMethod *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_mapMethod * previousObject (void) const {
    return (cPtr_mapMethod *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_mapMethod * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_mapMethodList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@mapDeclarationList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mMapTypeName ;
  public : GGS_structuredTypeAttributeList  mAttributeList ;
  public : GGS_mapMethodList  mInsertMethodList ;
  public : GGS_mapMethodList  mSearchMethodList ;
  public : GGS_mapMethodList  mRemoveMethodList ;
//--- Constructor
  public : cPtr_mapDeclaration (const GGS_lstring & ,
                                const GGS_structuredTypeAttributeList & ,
                                const GGS_mapMethodList & ,
                                const GGS_mapMethodList & ,
                                const GGS_mapMethodList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_mapDeclaration * nextObject (void) const {
    return (cPtr_mapDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_mapDeclaration * previousObject (void) const {
    return (cPtr_mapDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_mapDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_mapDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@classDeclarationList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_bool mIsAbstract ;
  public : GGS_lstring  mClassTypeName ;
  public : GGS_lstring  mSuperClassName ;
  public : GGS_structuredTypeAttributeList  mAttributeList ;
//--- Constructor
  public : cPtr_classDeclaration (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_structuredTypeAttributeList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_classDeclaration * nextObject (void) const {
    return (cPtr_classDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_classDeclaration * previousObject (void) const {
    return (cPtr_classDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_classDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_classDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@listDeclarationList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_listDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mListTypeName ;
  public : GGS_structuredTypeAttributeList  mAttributeList ;
//--- Constructor
  public : cPtr_listDeclaration (const GGS_lstring & ,
                                const GGS_structuredTypeAttributeList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_listDeclaration * nextObject (void) const {
    return (cPtr_listDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_listDeclaration * previousObject (void) const {
    return (cPtr_listDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_listDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_listDeclarationList ;
} ;

//---------------------------------------------------------------------------*

#endif
