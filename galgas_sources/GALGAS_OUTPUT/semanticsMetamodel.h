//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticsMetamodel.h'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       june 7th, 2007, at 12h19'24"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsMetamodel_METAMODEL_DEFINED
#define semanticsMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"
#include "commonSemantics.h"
#include "instructionMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

sint32 _metamodel_index_for_semanticsMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticsComponentRootList ;
class GGS_semanticsComponentRoot ;
class cPtr_semanticsComponentRoot ;
class GGS_attributeInCollectionList ;
class GGS_attributeInCollection ;
class cPtr_attributeInCollection ;
class GGS_mapDeclarationList ;
class GGS_mapDeclaration ;
class cPtr_mapDeclaration ;
class GGS_mapMethodList ;
class GGS_mapMethod ;
class cPtr_mapMethod ;
class GGS_mapindexDeclarationList ;
class GGS_mapindexDeclaration ;
class cPtr_mapindexDeclaration ;
class GGS_classDeclarationList ;
class GGS_classDeclaration ;
class cPtr_classDeclaration ;
class GGS_abstractMethodDefinitionList ;
class GGS_abstractMethodDefinition ;
class cPtr_abstractMethodDefinition ;
class GGS_overridenMethodDefinitionList ;
class GGS_overridenMethodDefinition ;
class cPtr_overridenMethodDefinition ;
class GGS_methodDefinitionList ;
class GGS_methodDefinition ;
class cPtr_methodDefinition ;
class GGS_classMessageDefinitionList ;
class GGS_classMessageDefinition ;
class cPtr_classMessageDefinition ;
class GGS_listDeclarationList ;
class GGS_listDeclaration ;
class cPtr_listDeclaration ;
class GGS_sortedListSortDescriptorList ;
class GGS_sortedListSortDescriptor ;
class cPtr_sortedListSortDescriptor ;
class GGS_sortedListDeclarationList ;
class GGS_sortedListDeclaration ;
class cPtr_sortedListDeclaration ;
class GGS_enumDeclarationList ;
class GGS_enumDeclaration ;
class cPtr_enumDeclaration ;
class GGS_enumMessageList ;
class GGS_enumMessage ;
class cPtr_enumMessage ;
class GGS_enumMessageAssociationList ;
class GGS_enumMessageAssociation ;
class cPtr_enumMessageAssociation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_semanticsComponentRoot'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticsComponentRoot : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_semanticsComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_semanticsComponentRoot * getPtr (void) const {
    return (cPtr_semanticsComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSemanticsComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mImportedComponentFileNameList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticDeclarationList  reader_mSemanticDeclarationList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticsComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticsComponentRoot * operator () (void) const {
      return (cPtr_semanticsComponentRoot *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@semanticsComponentRootList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticsComponentRootList : public AC_galgas_list {
  public : typedef cPtr_semanticsComponentRoot element_type ;
//--- Constructor 'emptyList'
  public : static GGS_semanticsComponentRootList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_semanticsComponentRootList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_semanticsComponentRootList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_semanticsComponentRoot & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_semanticsComponentRoot & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_semanticsComponentRoot & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_semanticsComponentRoot & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_semanticsComponentRoot & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticsComponentRootList _operator_concat (const GGS_semanticsComponentRootList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationList & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_semanticsComponentRoot & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_attributeInCollection'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_attributeInCollection : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_attributeInCollection constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_attributeInCollection * getPtr (void) const {
    return (cPtr_attributeInCollection *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mAttributeTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAttributeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_attributeInCollection * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_attributeInCollection * operator () (void) const {
      return (cPtr_attributeInCollection *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@attributeInCollectionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_attributeInCollectionList : public AC_galgas_list {
  public : typedef cPtr_attributeInCollection element_type ;
//--- Constructor 'emptyList'
  public : static GGS_attributeInCollectionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_attributeInCollectionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_attributeInCollectionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_attributeInCollection & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_attributeInCollection & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_attributeInCollection & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_attributeInCollection & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_attributeInCollection & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_attributeInCollectionList _operator_concat (const GGS_attributeInCollectionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_attributeInCollection & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_mapDeclaration'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_mapDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodList  reader_mInsertMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodList  reader_mSearchMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodList  reader_mRemoveMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapDeclaration * operator () (void) const {
      return (cPtr_mapDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@mapDeclarationList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapDeclarationList : public AC_galgas_list {
  public : typedef cPtr_mapDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_mapDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_mapDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_mapDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_mapDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_mapDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_mapDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_mapDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_mapDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapDeclarationList _operator_concat (const GGS_mapDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_mapMethodList & argument_2,
                                const GGS_mapMethodList & argument_3,
                                const GGS_mapMethodList & argument_4) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_mapDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_mapMethod'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapMethod : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_mapMethod constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_mapMethod * getPtr (void) const {
    return (cPtr_mapMethod *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mGetIDMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mErrorMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mShadowErrorMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapMethod * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapMethod * operator () (void) const {
      return (cPtr_mapMethod *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@mapMethodList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapMethodList : public AC_galgas_list {
  public : typedef cPtr_mapMethod element_type ;
//--- Constructor 'emptyList'
  public : static GGS_mapMethodList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_mapMethodList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_mapMethodList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_mapMethod & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_mapMethod & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_mapMethod & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_mapMethod & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_mapMethod & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapMethodList _operator_concat (const GGS_mapMethodList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_mapMethod & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_mapindexDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapindexDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_mapindexDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapIndexName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSearchMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSearchMethodErrorMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapindexDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapindexDeclaration * operator () (void) const {
      return (cPtr_mapindexDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@mapindexDeclarationList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapindexDeclarationList : public AC_galgas_list {
  public : typedef cPtr_mapindexDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_mapindexDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_mapindexDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_mapindexDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_mapindexDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_mapindexDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_mapindexDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_mapindexDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_mapindexDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapindexDeclarationList _operator_concat (const GGS_mapindexDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_mapindexDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_classDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_classDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_attributeInCollectionList & argument_3,
                                const GGS_abstractMethodDefinitionList & argument_4,
                                const GGS_overridenMethodDefinitionList & argument_5,
                                const GGS_methodDefinitionList & argument_6,
                                const GGS_classMessageDefinitionList & argument_7,
                                const GGS_string& argument_8
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mClassTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSuperClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_abstractMethodDefinitionList  reader_mAbstractMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_overridenMethodDefinitionList  reader_mOverridenMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_methodDefinitionList  reader_mMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_classMessageDefinitionList  reader_mMessageList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mClassMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classDeclaration * operator () (void) const {
      return (cPtr_classDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@classDeclarationList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classDeclarationList : public AC_galgas_list {
  public : typedef cPtr_classDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_classDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_classDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_attributeInCollectionList & argument_3,
                                const GGS_abstractMethodDefinitionList & argument_4,
                                const GGS_overridenMethodDefinitionList & argument_5,
                                const GGS_methodDefinitionList & argument_6,
                                const GGS_classMessageDefinitionList & argument_7,
                                const GGS_string& argument_8
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_classDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_classDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_classDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_classDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_classDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_classDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_classDeclarationList _operator_concat (const GGS_classDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_attributeInCollectionList & argument_3,
                                const GGS_abstractMethodDefinitionList & argument_4,
                                const GGS_overridenMethodDefinitionList & argument_5,
                                const GGS_methodDefinitionList & argument_6,
                                const GGS_classMessageDefinitionList & argument_7,
                                const GGS_string& argument_8
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_attributeInCollectionList & argument_3,
                                const GGS_abstractMethodDefinitionList & argument_4,
                                const GGS_overridenMethodDefinitionList & argument_5,
                                const GGS_methodDefinitionList & argument_6,
                                const GGS_classMessageDefinitionList & argument_7,
                                const GGS_string& argument_8) ;

  protected : void _internalPrependValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_attributeInCollectionList & argument_3,
                                const GGS_abstractMethodDefinitionList & argument_4,
                                const GGS_overridenMethodDefinitionList & argument_5,
                                const GGS_methodDefinitionList & argument_6,
                                const GGS_classMessageDefinitionList & argument_7,
                                const GGS_string& argument_8) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_classDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_abstractMethodDefinition'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_abstractMethodDefinition : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_abstractMethodDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_abstractMethodDefinition * getPtr (void) const {
    return (cPtr_abstractMethodDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_abstractMethodDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_abstractMethodDefinition * operator () (void) const {
      return (cPtr_abstractMethodDefinition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@abstractMethodDefinitionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_abstractMethodDefinitionList : public AC_galgas_list {
  public : typedef cPtr_abstractMethodDefinition element_type ;
//--- Constructor 'emptyList'
  public : static GGS_abstractMethodDefinitionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_abstractMethodDefinitionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_abstractMethodDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_abstractMethodDefinition & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_abstractMethodDefinition & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_abstractMethodDefinition & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_abstractMethodDefinition & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_abstractMethodDefinition & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_abstractMethodDefinitionList _operator_concat (const GGS_abstractMethodDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_abstractMethodDefinition & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_overridenMethodDefinition'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_overridenMethodDefinition : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_overridenMethodDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_overridenMethodDefinition * getPtr (void) const {
    return (cPtr_overridenMethodDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_overridenMethodDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_overridenMethodDefinition * operator () (void) const {
      return (cPtr_overridenMethodDefinition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@overridenMethodDefinitionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_overridenMethodDefinitionList : public AC_galgas_list {
  public : typedef cPtr_overridenMethodDefinition element_type ;
//--- Constructor 'emptyList'
  public : static GGS_overridenMethodDefinitionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_overridenMethodDefinitionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_overridenMethodDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_overridenMethodDefinition & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_overridenMethodDefinition & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_overridenMethodDefinition & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_overridenMethodDefinition & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_overridenMethodDefinition & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_overridenMethodDefinitionList _operator_concat (const GGS_overridenMethodDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_overridenMethodDefinition & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_methodDefinition'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_methodDefinition : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_methodDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_methodDefinition * getPtr (void) const {
    return (cPtr_methodDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_methodDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_methodDefinition * operator () (void) const {
      return (cPtr_methodDefinition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@methodDefinitionList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_methodDefinitionList : public AC_galgas_list {
  public : typedef cPtr_methodDefinition element_type ;
//--- Constructor 'emptyList'
  public : static GGS_methodDefinitionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_methodDefinitionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_methodDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_methodDefinition & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_methodDefinition & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_methodDefinition & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_methodDefinition & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_methodDefinition & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_methodDefinitionList _operator_concat (const GGS_methodDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_methodDefinition & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_classMessageDefinition'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classMessageDefinition : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_classMessageDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_classMessageDefinition * getPtr (void) const {
    return (cPtr_classMessageDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMessageName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMessageValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classMessageDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classMessageDefinition * operator () (void) const {
      return (cPtr_classMessageDefinition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@classMessageDefinitionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classMessageDefinitionList : public AC_galgas_list {
  public : typedef cPtr_classMessageDefinition element_type ;
//--- Constructor 'emptyList'
  public : static GGS_classMessageDefinitionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_classMessageDefinitionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_classMessageDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_classMessageDefinition & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_classMessageDefinition & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_classMessageDefinition & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_classMessageDefinition & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_classMessageDefinition & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_classMessageDefinitionList _operator_concat (const GGS_classMessageDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_classMessageDefinition & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_listDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_listDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_listDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listDeclaration * operator () (void) const {
      return (cPtr_listDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@listDeclarationList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_listDeclarationList : public AC_galgas_list {
  public : typedef cPtr_listDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_listDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_listDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_listDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_listDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_listDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_listDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_listDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_listDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_listDeclarationList _operator_concat (const GGS_listDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_listDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_sortedListSortDescriptor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sortedListSortDescriptor : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_sortedListSortDescriptor constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_sortedListSortDescriptor * getPtr (void) const {
    return (cPtr_sortedListSortDescriptor *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSortedAttributeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mAscending (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sortedListSortDescriptor * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sortedListSortDescriptor * operator () (void) const {
      return (cPtr_sortedListSortDescriptor *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@sortedListSortDescriptorList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sortedListSortDescriptorList : public AC_galgas_list {
  public : typedef cPtr_sortedListSortDescriptor element_type ;
//--- Constructor 'emptyList'
  public : static GGS_sortedListSortDescriptorList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_sortedListSortDescriptorList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_sortedListSortDescriptorList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_sortedListSortDescriptor & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_sortedListSortDescriptor & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_sortedListSortDescriptor & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_sortedListSortDescriptor & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_sortedListSortDescriptor & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_sortedListSortDescriptorList _operator_concat (const GGS_sortedListSortDescriptorList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_sortedListSortDescriptor & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_sortedListDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sortedListDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_sortedListDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_sortedListSortDescriptorList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSortedListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_sortedListSortDescriptorList  reader_mSortDescriptorList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sortedListDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sortedListDeclaration * operator () (void) const {
      return (cPtr_sortedListDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@sortedListDeclarationList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sortedListDeclarationList : public AC_galgas_list {
  public : typedef cPtr_sortedListDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_sortedListDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_sortedListDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_sortedListSortDescriptorList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_sortedListDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_sortedListDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_sortedListDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_sortedListDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_sortedListDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_sortedListDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_sortedListDeclarationList _operator_concat (const GGS_sortedListDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_sortedListSortDescriptorList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_sortedListSortDescriptorList & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_sortedListSortDescriptorList & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_sortedListDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_enumDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_enumDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_enumMessageList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mConstantList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumMessageList  reader_mEnumMessageList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumDeclaration * operator () (void) const {
      return (cPtr_enumDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@enumDeclarationList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumDeclarationList : public AC_galgas_list {
  public : typedef cPtr_enumDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_enumDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_enumDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_enumMessageList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_enumDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_enumDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_enumDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_enumDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_enumDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_enumDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumDeclarationList _operator_concat (const GGS_enumDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_enumMessageList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_enumMessageList & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_enumMessageList & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_enumDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_enumMessage'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumMessage : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_enumMessage constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_enumMessage * getPtr (void) const {
    return (cPtr_enumMessage *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumMessageName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumMessageAssociationList  reader_mMessageAssociationList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumMessage * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumMessage * operator () (void) const {
      return (cPtr_enumMessage *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@enumMessageList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumMessageList : public AC_galgas_list {
  public : typedef cPtr_enumMessage element_type ;
//--- Constructor 'emptyList'
  public : static GGS_enumMessageList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_enumMessageList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_enumMessageList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_enumMessage & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_enumMessage & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_enumMessage & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_enumMessage & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_enumMessage & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumMessageList _operator_concat (const GGS_enumMessageList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_enumMessage & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_enumMessageAssociation'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumMessageAssociation : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_enumMessageAssociation constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_enumMessageAssociation * getPtr (void) const {
    return (cPtr_enumMessageAssociation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mConstantName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumMessageAssociation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumMessageAssociation * operator () (void) const {
      return (cPtr_enumMessageAssociation *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@enumMessageAssociationList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumMessageAssociationList : public AC_galgas_list {
  public : typedef cPtr_enumMessageAssociation element_type ;
//--- Constructor 'emptyList'
  public : static GGS_enumMessageAssociationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_enumMessageAssociationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_enumMessageAssociationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_enumMessageAssociation & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_enumMessageAssociation & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_enumMessageAssociation & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_enumMessageAssociation & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_enumMessageAssociation & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumMessageAssociationList _operator_concat (const GGS_enumMessageAssociationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_enumMessageAssociation & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@semanticsComponentRootList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticsComponentRoot : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mSemanticsComponentName ;
  public : GGS_lstringlist  mImportedComponentFileNameList ;
  public : GGS_semanticDeclarationList  mSemanticDeclarationList ;
//--- Constructor
  public : cPtr_semanticsComponentRoot (const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_semanticDeclarationList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_semanticsComponentRoot * nextObject (void) const {
    return (cPtr_semanticsComponentRoot *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_semanticsComponentRoot * previousObject (void) const {
    return (cPtr_semanticsComponentRoot *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_semanticsComponentRoot * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_semanticsComponentRootList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@attributeInCollectionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_attributeInCollection : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mAttributeTypeName ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : cPtr_attributeInCollection (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_attributeInCollection * nextObject (void) const {
    return (cPtr_attributeInCollection *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_attributeInCollection * previousObject (void) const {
    return (cPtr_attributeInCollection *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_attributeInCollection * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_attributeInCollectionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@mapDeclarationList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mMapTypeName ;
  public : GGS_attributeInCollectionList  mAttributeList ;
  public : GGS_mapMethodList  mInsertMethodList ;
  public : GGS_mapMethodList  mSearchMethodList ;
  public : GGS_mapMethodList  mRemoveMethodList ;
//--- Constructor
  public : cPtr_mapDeclaration (const GGS_lstring & ,
                                const GGS_attributeInCollectionList & ,
                                const GGS_mapMethodList & ,
                                const GGS_mapMethodList & ,
                                const GGS_mapMethodList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_mapDeclaration * nextObject (void) const {
    return (cPtr_mapDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_mapDeclaration * previousObject (void) const {
    return (cPtr_mapDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_mapDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_mapDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@mapMethodList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapMethod : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_lstring  mGetIDMethodName ;
  public : GGS_lstring  mErrorMessage ;
  public : GGS_lstring  mShadowErrorMessage ;
//--- Constructor
  public : cPtr_mapMethod (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_mapMethod * nextObject (void) const {
    return (cPtr_mapMethod *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_mapMethod * previousObject (void) const {
    return (cPtr_mapMethod *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_mapMethod * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_mapMethodList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@mapindexDeclarationList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapindexDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mMapIndexName ;
  public : GGS_lstring  mMapTypeName ;
  public : GGS_lstring  mSearchMethodName ;
  public : GGS_lstring  mSearchMethodErrorMessage ;
//--- Constructor
  public : cPtr_mapindexDeclaration (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_mapindexDeclaration * nextObject (void) const {
    return (cPtr_mapindexDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_mapindexDeclaration * previousObject (void) const {
    return (cPtr_mapindexDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_mapindexDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_mapindexDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@classDeclarationList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_bool mIsAbstract ;
  public : GGS_lstring  mClassTypeName ;
  public : GGS_lstring  mSuperClassName ;
  public : GGS_attributeInCollectionList  mAttributeList ;
  public : GGS_abstractMethodDefinitionList  mAbstractMethodList ;
  public : GGS_overridenMethodDefinitionList  mOverridenMethodList ;
  public : GGS_methodDefinitionList  mMethodList ;
  public : GGS_classMessageDefinitionList  mMessageList ;
  public : GGS_string mClassMessage ;
//--- Constructor
  public : cPtr_classDeclaration (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_attributeInCollectionList & ,
                                const GGS_abstractMethodDefinitionList & ,
                                const GGS_overridenMethodDefinitionList & ,
                                const GGS_methodDefinitionList & ,
                                const GGS_classMessageDefinitionList & ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_classDeclaration * nextObject (void) const {
    return (cPtr_classDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_classDeclaration * previousObject (void) const {
    return (cPtr_classDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_classDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_classDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@abstractMethodDefinitionList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_abstractMethodDefinition : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameters  mSignature ;
//--- Constructor
  public : cPtr_abstractMethodDefinition (const GGS_lstring & ,
                                const GGS_formalParameters & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_abstractMethodDefinition * nextObject (void) const {
    return (cPtr_abstractMethodDefinition *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_abstractMethodDefinition * previousObject (void) const {
    return (cPtr_abstractMethodDefinition *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_abstractMethodDefinition * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_abstractMethodDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@overridenMethodDefinitionList'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_overridenMethodDefinition : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameters  mSignature ;
  public : GGS_semanticInstructions  mInstructionList ;
//--- Constructor
  public : cPtr_overridenMethodDefinition (const GGS_lstring & ,
                                const GGS_formalParameters & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_overridenMethodDefinition * nextObject (void) const {
    return (cPtr_overridenMethodDefinition *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_overridenMethodDefinition * previousObject (void) const {
    return (cPtr_overridenMethodDefinition *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_overridenMethodDefinition * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_overridenMethodDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@methodDefinitionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_methodDefinition : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameters  mSignature ;
  public : GGS_semanticInstructions  mInstructionList ;
//--- Constructor
  public : cPtr_methodDefinition (const GGS_lstring & ,
                                const GGS_formalParameters & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_methodDefinition * nextObject (void) const {
    return (cPtr_methodDefinition *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_methodDefinition * previousObject (void) const {
    return (cPtr_methodDefinition *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_methodDefinition * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_methodDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@classMessageDefinitionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classMessageDefinition : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mMessageName ;
  public : GGS_lstring  mMessageValue ;
//--- Constructor
  public : cPtr_classMessageDefinition (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_classMessageDefinition * nextObject (void) const {
    return (cPtr_classMessageDefinition *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_classMessageDefinition * previousObject (void) const {
    return (cPtr_classMessageDefinition *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_classMessageDefinition * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_classMessageDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@listDeclarationList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_listDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mListTypeName ;
  public : GGS_attributeInCollectionList  mAttributeList ;
//--- Constructor
  public : cPtr_listDeclaration (const GGS_lstring & ,
                                const GGS_attributeInCollectionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_listDeclaration * nextObject (void) const {
    return (cPtr_listDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_listDeclaration * previousObject (void) const {
    return (cPtr_listDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_listDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_listDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@sortedListSortDescriptorList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sortedListSortDescriptor : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mSortedAttributeName ;
  public : GGS_bool mAscending ;
//--- Constructor
  public : cPtr_sortedListSortDescriptor (const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_sortedListSortDescriptor * nextObject (void) const {
    return (cPtr_sortedListSortDescriptor *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_sortedListSortDescriptor * previousObject (void) const {
    return (cPtr_sortedListSortDescriptor *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_sortedListSortDescriptor * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_sortedListSortDescriptorList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@sortedListDeclarationList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sortedListDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mSortedListTypeName ;
  public : GGS_attributeInCollectionList  mAttributeList ;
  public : GGS_sortedListSortDescriptorList  mSortDescriptorList ;
//--- Constructor
  public : cPtr_sortedListDeclaration (const GGS_lstring & ,
                                const GGS_attributeInCollectionList & ,
                                const GGS_sortedListSortDescriptorList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_sortedListDeclaration * nextObject (void) const {
    return (cPtr_sortedListDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_sortedListDeclaration * previousObject (void) const {
    return (cPtr_sortedListDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_sortedListDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_sortedListDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@enumDeclarationList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_enumDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mEnumTypeName ;
  public : GGS_lstringlist  mConstantList ;
  public : GGS_enumMessageList  mEnumMessageList ;
//--- Constructor
  public : cPtr_enumDeclaration (const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_enumMessageList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_enumDeclaration * nextObject (void) const {
    return (cPtr_enumDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_enumDeclaration * previousObject (void) const {
    return (cPtr_enumDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_enumDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_enumDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@enumMessageList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_enumMessage : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mEnumMessageName ;
  public : GGS_enumMessageAssociationList  mMessageAssociationList ;
//--- Constructor
  public : cPtr_enumMessage (const GGS_lstring & ,
                                const GGS_enumMessageAssociationList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_enumMessage * nextObject (void) const {
    return (cPtr_enumMessage *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_enumMessage * previousObject (void) const {
    return (cPtr_enumMessage *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_enumMessage * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_enumMessageList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@enumMessageAssociationList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_enumMessageAssociation : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mConstantName ;
  public : GGS_lstring  mMessage ;
//--- Constructor
  public : cPtr_enumMessageAssociation (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_enumMessageAssociation * nextObject (void) const {
    return (cPtr_enumMessageAssociation *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_enumMessageAssociation * previousObject (void) const {
    return (cPtr_enumMessageAssociation *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_enumMessageAssociation * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_enumMessageAssociationList ;
} ;

//---------------------------------------------------------------------------*

#endif
