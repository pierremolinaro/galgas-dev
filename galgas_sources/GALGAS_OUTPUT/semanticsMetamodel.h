//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticsMetamodel.h'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      june 28th, 2007, at 15h26'46"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticsMetamodel_METAMODEL_DEFINED
#define semanticsMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"
#include "commonSemantics.h"
#include "instructionMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

sint32 _metamodel_index_for_semanticsMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_semanticsComponentRoot ;
class GGS_semanticsComponentRoot ;
class cPtr_semanticsComponentRoot ;
class GGS__list_attributeInCollection ;
class GGS_attributeInCollection ;
class cPtr_attributeInCollection ;
class GGS__list_mapDeclaration ;
class GGS_mapDeclaration ;
class cPtr_mapDeclaration ;
class GGS__list_mapMethod ;
class GGS_mapMethod ;
class cPtr_mapMethod ;
class GGS__list_mapindexDeclaration ;
class GGS_mapindexDeclaration ;
class cPtr_mapindexDeclaration ;
class GGS__list_classDeclaration ;
class GGS_classDeclaration ;
class cPtr_classDeclaration ;
class GGS__list_abstractMethodDefinition ;
class GGS_abstractMethodDefinition ;
class cPtr_abstractMethodDefinition ;
class GGS__list_overridenMethodDefinition ;
class GGS_overridenMethodDefinition ;
class cPtr_overridenMethodDefinition ;
class GGS__list_methodDefinition ;
class GGS_methodDefinition ;
class cPtr_methodDefinition ;
class GGS__list_classMessageDefinition ;
class GGS_classMessageDefinition ;
class cPtr_classMessageDefinition ;
class GGS__list_listDeclaration ;
class GGS_listDeclaration ;
class cPtr_listDeclaration ;
class GGS__list_sortedListSortDescriptor ;
class GGS_sortedListSortDescriptor ;
class cPtr_sortedListSortDescriptor ;
class GGS__list_sortedListDeclaration ;
class GGS_sortedListDeclaration ;
class cPtr_sortedListDeclaration ;
class GGS__list_enumDeclaration ;
class GGS_enumDeclaration ;
class cPtr_enumDeclaration ;
class GGS__list_enumMessage ;
class GGS_enumMessage ;
class cPtr_enumMessage ;
class GGS__list_enumMessageAssociation ;
class GGS_enumMessageAssociation ;
class cPtr_enumMessageAssociation ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@semanticsComponentRoot'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticsComponentRoot : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_semanticsComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS__list_semanticDeclaration & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_semanticsComponentRoot * getPtr (void) const {
    return (cPtr_semanticsComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSemanticsComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_stringset  reader_mImportedSemanticsComponentSet (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mImportedComponentFileNameList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_semanticDeclaration  reader_mSemanticDeclarationList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticsComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticsComponentRoot * operator () (void) const {
      return (cPtr_semanticsComponentRoot *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@semanticsComponentRoot'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_semanticsComponentRoot : public AC_galgas_entity_list {
  public : typedef cPtr_semanticsComponentRoot element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_semanticsComponentRoot constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_semanticsComponentRoot
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_semanticsComponentRoot & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_semanticsComponentRoot * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_semanticsComponentRoot & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_semanticsComponentRoot & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_semanticsComponentRoot & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_semanticsComponentRoot & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_semanticsComponentRoot & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_semanticsComponentRoot _operator_concat (const GGS__list_semanticsComponentRoot & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_semanticsComponentRoot & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS__list_semanticDeclaration & argument_3) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS__list_semanticDeclaration & argument_3) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_semanticsComponentRoot & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@attributeInCollection'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_attributeInCollection : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_attributeInCollection constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_attributeInCollection * getPtr (void) const {
    return (cPtr_attributeInCollection *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mAttributeTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAttributeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_attributeInCollection * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_attributeInCollection * operator () (void) const {
      return (cPtr_attributeInCollection *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@attributeInCollection'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_attributeInCollection : public AC_galgas_entity_list {
  public : typedef cPtr_attributeInCollection element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_attributeInCollection constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_attributeInCollection
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_attributeInCollection & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_attributeInCollection * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_attributeInCollection & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_attributeInCollection & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_attributeInCollection & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_attributeInCollection & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_attributeInCollection & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_attributeInCollection _operator_concat (const GGS__list_attributeInCollection & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_attributeInCollection & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_attributeInCollection & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@mapDeclaration'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_mapDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS__list_attributeInCollection & argument_1,
                                const GGS__list_mapMethod & argument_2,
                                const GGS__list_mapMethod & argument_3,
                                const GGS__list_mapMethod & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_attributeInCollection  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_mapMethod  reader_mInsertMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_mapMethod  reader_mSearchMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_mapMethod  reader_mRemoveMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapDeclaration * operator () (void) const {
      return (cPtr_mapDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@mapDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_mapDeclaration : public AC_galgas_entity_list {
  public : typedef cPtr_mapDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_mapDeclaration constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_mapDeclaration
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_mapDeclaration & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_mapDeclaration * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_mapDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_mapDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_mapDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_mapDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_mapDeclaration & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_mapDeclaration _operator_concat (const GGS__list_mapDeclaration & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_mapDeclaration & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS__list_attributeInCollection & argument_1,
                                const GGS__list_mapMethod & argument_2,
                                const GGS__list_mapMethod & argument_3,
                                const GGS__list_mapMethod & argument_4) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS__list_attributeInCollection & argument_1,
                                const GGS__list_mapMethod & argument_2,
                                const GGS__list_mapMethod & argument_3,
                                const GGS__list_mapMethod & argument_4) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_mapDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        GALGAS entity '@mapMethod'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapMethod : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_mapMethod constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_mapMethod * getPtr (void) const {
    return (cPtr_mapMethod *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mGetIDMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mErrorMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mShadowErrorMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapMethod * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapMethod * operator () (void) const {
      return (cPtr_mapMethod *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS list of entity '@mapMethod'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_mapMethod : public AC_galgas_entity_list {
  public : typedef cPtr_mapMethod element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_mapMethod constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_mapMethod
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_mapMethod & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_mapMethod * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_mapMethod & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_mapMethod & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_mapMethod & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_mapMethod & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_mapMethod & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_mapMethod _operator_concat (const GGS__list_mapMethod & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_mapMethod & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_mapMethod & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS entity '@mapindexDeclaration'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_mapindexDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_mapindexDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapIndexName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSearchMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSearchMethodErrorMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapindexDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapindexDeclaration * operator () (void) const {
      return (cPtr_mapindexDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS list of entity '@mapindexDeclaration'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_mapindexDeclaration : public AC_galgas_entity_list {
  public : typedef cPtr_mapindexDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_mapindexDeclaration constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_mapindexDeclaration
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_mapindexDeclaration & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_mapindexDeclaration * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_mapindexDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_mapindexDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_mapindexDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_mapindexDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_mapindexDeclaration & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_mapindexDeclaration _operator_concat (const GGS__list_mapindexDeclaration & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_mapindexDeclaration & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_mapindexDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@classDeclaration'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_classDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS__list_attributeInCollection & argument_3,
                                const GGS__list_abstractMethodDefinition & argument_4,
                                const GGS__list_overridenMethodDefinition & argument_5,
                                const GGS__list_methodDefinition & argument_6,
                                const GGS__list_classMessageDefinition & argument_7,
                                const GGS_string& argument_8
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mClassTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSuperClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_attributeInCollection  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_abstractMethodDefinition  reader_mAbstractMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_overridenMethodDefinition  reader_mOverridenMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_methodDefinition  reader_mMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_classMessageDefinition  reader_mMessageList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mClassMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classDeclaration * operator () (void) const {
      return (cPtr_classDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@classDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_classDeclaration : public AC_galgas_entity_list {
  public : typedef cPtr_classDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_classDeclaration constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_classDeclaration
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_classDeclaration & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_classDeclaration * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_classDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_classDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_classDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_classDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_classDeclaration & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_classDeclaration _operator_concat (const GGS__list_classDeclaration & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_classDeclaration & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS__list_attributeInCollection & argument_3,
                                const GGS__list_abstractMethodDefinition & argument_4,
                                const GGS__list_overridenMethodDefinition & argument_5,
                                const GGS__list_methodDefinition & argument_6,
                                const GGS__list_classMessageDefinition & argument_7,
                                const GGS_string& argument_8) ; */

/*  protected : void _internalPrependValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS__list_attributeInCollection & argument_3,
                                const GGS__list_abstractMethodDefinition & argument_4,
                                const GGS__list_overridenMethodDefinition & argument_5,
                                const GGS__list_methodDefinition & argument_6,
                                const GGS__list_classMessageDefinition & argument_7,
                                const GGS_string& argument_8) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_classDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS entity '@abstractMethodDefinition'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_abstractMethodDefinition : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_abstractMethodDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_abstractMethodDefinition * getPtr (void) const {
    return (cPtr_abstractMethodDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_abstractMethodDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_abstractMethodDefinition * operator () (void) const {
      return (cPtr_abstractMethodDefinition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS list of entity '@abstractMethodDefinition'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_abstractMethodDefinition : public AC_galgas_entity_list {
  public : typedef cPtr_abstractMethodDefinition element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_abstractMethodDefinition constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_abstractMethodDefinition
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_abstractMethodDefinition & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_abstractMethodDefinition * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_abstractMethodDefinition & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_abstractMethodDefinition & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_abstractMethodDefinition & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_abstractMethodDefinition & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_abstractMethodDefinition & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_abstractMethodDefinition _operator_concat (const GGS__list_abstractMethodDefinition & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_abstractMethodDefinition & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_abstractMethodDefinition & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS entity '@overridenMethodDefinition'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_overridenMethodDefinition : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_overridenMethodDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_overridenMethodDefinition * getPtr (void) const {
    return (cPtr_overridenMethodDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_overridenMethodDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_overridenMethodDefinition * operator () (void) const {
      return (cPtr_overridenMethodDefinition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS list of entity '@overridenMethodDefinition'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_overridenMethodDefinition : public AC_galgas_entity_list {
  public : typedef cPtr_overridenMethodDefinition element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_overridenMethodDefinition constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_overridenMethodDefinition
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_overridenMethodDefinition & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_overridenMethodDefinition * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_overridenMethodDefinition & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_overridenMethodDefinition & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_overridenMethodDefinition & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_overridenMethodDefinition & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_overridenMethodDefinition & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_overridenMethodDefinition _operator_concat (const GGS__list_overridenMethodDefinition & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_overridenMethodDefinition & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_overridenMethodDefinition & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@methodDefinition'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_methodDefinition : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_methodDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_methodDefinition * getPtr (void) const {
    return (cPtr_methodDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mSignature (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_methodDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_methodDefinition * operator () (void) const {
      return (cPtr_methodDefinition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@methodDefinition'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_methodDefinition : public AC_galgas_entity_list {
  public : typedef cPtr_methodDefinition element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_methodDefinition constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_methodDefinition
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_methodDefinition & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_methodDefinition * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_methodDefinition & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_methodDefinition & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_methodDefinition & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_methodDefinition & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_methodDefinition & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_methodDefinition _operator_concat (const GGS__list_methodDefinition & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_methodDefinition & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_methodDefinition & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@classMessageDefinition'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classMessageDefinition : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_classMessageDefinition constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_classMessageDefinition * getPtr (void) const {
    return (cPtr_classMessageDefinition *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMessageName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMessageValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classMessageDefinition * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classMessageDefinition * operator () (void) const {
      return (cPtr_classMessageDefinition *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@classMessageDefinition'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_classMessageDefinition : public AC_galgas_entity_list {
  public : typedef cPtr_classMessageDefinition element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_classMessageDefinition constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_classMessageDefinition
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_classMessageDefinition & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_classMessageDefinition * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_classMessageDefinition & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_classMessageDefinition & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_classMessageDefinition & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_classMessageDefinition & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_classMessageDefinition & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_classMessageDefinition _operator_concat (const GGS__list_classMessageDefinition & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_classMessageDefinition & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_classMessageDefinition & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@listDeclaration'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_listDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_listDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS__list_attributeInCollection & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_attributeInCollection  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listDeclaration * operator () (void) const {
      return (cPtr_listDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@listDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_listDeclaration : public AC_galgas_entity_list {
  public : typedef cPtr_listDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_listDeclaration constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_listDeclaration
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_listDeclaration & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_listDeclaration * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_listDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_listDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_listDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_listDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_listDeclaration & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_listDeclaration _operator_concat (const GGS__list_listDeclaration & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_listDeclaration & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS__list_attributeInCollection & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS__list_attributeInCollection & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_listDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS entity '@sortedListSortDescriptor'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sortedListSortDescriptor : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_sortedListSortDescriptor constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_sortedListSortDescriptor * getPtr (void) const {
    return (cPtr_sortedListSortDescriptor *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSortedAttributeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mAscending (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sortedListSortDescriptor * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sortedListSortDescriptor * operator () (void) const {
      return (cPtr_sortedListSortDescriptor *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS list of entity '@sortedListSortDescriptor'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_sortedListSortDescriptor : public AC_galgas_entity_list {
  public : typedef cPtr_sortedListSortDescriptor element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_sortedListSortDescriptor constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_sortedListSortDescriptor
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_sortedListSortDescriptor & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_sortedListSortDescriptor * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_sortedListSortDescriptor & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_sortedListSortDescriptor & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_sortedListSortDescriptor & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_sortedListSortDescriptor & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_sortedListSortDescriptor & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_sortedListSortDescriptor _operator_concat (const GGS__list_sortedListSortDescriptor & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_sortedListSortDescriptor & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_sortedListSortDescriptor & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@sortedListDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sortedListDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_sortedListDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS__list_attributeInCollection & argument_1,
                                const GGS__list_sortedListSortDescriptor & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSortedListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_attributeInCollection  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_sortedListSortDescriptor  reader_mSortDescriptorList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sortedListDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sortedListDeclaration * operator () (void) const {
      return (cPtr_sortedListDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@sortedListDeclaration'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_sortedListDeclaration : public AC_galgas_entity_list {
  public : typedef cPtr_sortedListDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_sortedListDeclaration constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_sortedListDeclaration
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_sortedListDeclaration & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_sortedListDeclaration * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_sortedListDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_sortedListDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_sortedListDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_sortedListDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_sortedListDeclaration & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_sortedListDeclaration _operator_concat (const GGS__list_sortedListDeclaration & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_sortedListDeclaration & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS__list_attributeInCollection & argument_1,
                                const GGS__list_sortedListSortDescriptor & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS__list_attributeInCollection & argument_1,
                                const GGS__list_sortedListSortDescriptor & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_sortedListDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@enumDeclaration'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_enumDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS__list_enumMessage & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mConstantList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_enumMessage  reader_mEnumMessageList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumDeclaration * operator () (void) const {
      return (cPtr_enumDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@enumDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_enumDeclaration : public AC_galgas_entity_list {
  public : typedef cPtr_enumDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_enumDeclaration constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_enumDeclaration
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_enumDeclaration & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_enumDeclaration * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_enumDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_enumDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_enumDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_enumDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_enumDeclaration & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_enumDeclaration _operator_concat (const GGS__list_enumDeclaration & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_enumDeclaration & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS__list_enumMessage & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS__list_enumMessage & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_enumDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS entity '@enumMessage'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumMessage : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_enumMessage constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS__list_enumMessageAssociation & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_enumMessage * getPtr (void) const {
    return (cPtr_enumMessage *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumMessageName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_enumMessageAssociation  reader_mMessageAssociationList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumMessage * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumMessage * operator () (void) const {
      return (cPtr_enumMessage *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS list of entity '@enumMessage'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_enumMessage : public AC_galgas_entity_list {
  public : typedef cPtr_enumMessage element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_enumMessage constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_enumMessage
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_enumMessage & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_enumMessage * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_enumMessage & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_enumMessage & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_enumMessage & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_enumMessage & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_enumMessage & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_enumMessage _operator_concat (const GGS__list_enumMessage & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_enumMessage & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS__list_enumMessageAssociation & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS__list_enumMessageAssociation & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_enumMessage & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@enumMessageAssociation'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_enumMessageAssociation : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_enumMessageAssociation constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_enumMessageAssociation * getPtr (void) const {
    return (cPtr_enumMessageAssociation *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mConstantName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumMessageAssociation * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumMessageAssociation * operator () (void) const {
      return (cPtr_enumMessageAssociation *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@enumMessageAssociation'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_enumMessageAssociation : public AC_galgas_entity_list {
  public : typedef cPtr_enumMessageAssociation element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_enumMessageAssociation constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_enumMessageAssociation
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_enumMessageAssociation & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_enumMessageAssociation * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_enumMessageAssociation & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_enumMessageAssociation & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_enumMessageAssociation & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_enumMessageAssociation & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_enumMessageAssociation & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_enumMessageAssociation _operator_concat (const GGS__list_enumMessageAssociation & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_enumMessageAssociation & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_enumMessageAssociation & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@semanticsComponentRoot'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticsComponentRoot : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mSemanticsComponentName ;
  public : GGS_stringset  mImportedSemanticsComponentSet ;
  public : GGS_lstringlist  mImportedComponentFileNameList ;
  public : GGS__list_semanticDeclaration  mSemanticDeclarationList ;
//--- Constructor
  public : cPtr_semanticsComponentRoot (const GGS_lstring & ,
                                const GGS_stringset & ,
                                const GGS_lstringlist & ,
                                const GGS__list_semanticDeclaration & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_semanticsComponentRoot * nextObject (void) const {
    return (cPtr_semanticsComponentRoot *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_semanticsComponentRoot * previousObject (void) const {
    return (cPtr_semanticsComponentRoot *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_semanticsComponentRoot * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_semanticsComponentRoot ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@attributeInCollection'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_attributeInCollection : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mAttributeTypeName ;
  public : GGS_lstring  mAttributeName ;
//--- Constructor
  public : cPtr_attributeInCollection (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_attributeInCollection * nextObject (void) const {
    return (cPtr_attributeInCollection *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_attributeInCollection * previousObject (void) const {
    return (cPtr_attributeInCollection *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_attributeInCollection * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_attributeInCollection ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@mapDeclaration'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mMapTypeName ;
  public : GGS__list_attributeInCollection  mAttributeList ;
  public : GGS__list_mapMethod  mInsertMethodList ;
  public : GGS__list_mapMethod  mSearchMethodList ;
  public : GGS__list_mapMethod  mRemoveMethodList ;
//--- Constructor
  public : cPtr_mapDeclaration (const GGS_lstring & ,
                                const GGS__list_attributeInCollection & ,
                                const GGS__list_mapMethod & ,
                                const GGS__list_mapMethod & ,
                                const GGS__list_mapMethod & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_mapDeclaration * nextObject (void) const {
    return (cPtr_mapDeclaration *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_mapDeclaration * previousObject (void) const {
    return (cPtr_mapDeclaration *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_mapDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_mapDeclaration ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of list '@mapMethod'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapMethod : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_lstring  mGetIDMethodName ;
  public : GGS_lstring  mErrorMessage ;
  public : GGS_lstring  mShadowErrorMessage ;
//--- Constructor
  public : cPtr_mapMethod (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_mapMethod * nextObject (void) const {
    return (cPtr_mapMethod *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_mapMethod * previousObject (void) const {
    return (cPtr_mapMethod *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_mapMethod * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_mapMethod ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@mapindexDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapindexDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mMapIndexName ;
  public : GGS_lstring  mMapTypeName ;
  public : GGS_lstring  mSearchMethodName ;
  public : GGS_lstring  mSearchMethodErrorMessage ;
//--- Constructor
  public : cPtr_mapindexDeclaration (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_mapindexDeclaration * nextObject (void) const {
    return (cPtr_mapindexDeclaration *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_mapindexDeclaration * previousObject (void) const {
    return (cPtr_mapindexDeclaration *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_mapindexDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_mapindexDeclaration ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@classDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_bool mIsAbstract ;
  public : GGS_lstring  mClassTypeName ;
  public : GGS_lstring  mSuperClassName ;
  public : GGS__list_attributeInCollection  mAttributeList ;
  public : GGS__list_abstractMethodDefinition  mAbstractMethodList ;
  public : GGS__list_overridenMethodDefinition  mOverridenMethodList ;
  public : GGS__list_methodDefinition  mMethodList ;
  public : GGS__list_classMessageDefinition  mMessageList ;
  public : GGS_string mClassMessage ;
//--- Constructor
  public : cPtr_classDeclaration (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS__list_attributeInCollection & ,
                                const GGS__list_abstractMethodDefinition & ,
                                const GGS__list_overridenMethodDefinition & ,
                                const GGS__list_methodDefinition & ,
                                const GGS__list_classMessageDefinition & ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_classDeclaration * nextObject (void) const {
    return (cPtr_classDeclaration *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_classDeclaration * previousObject (void) const {
    return (cPtr_classDeclaration *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_classDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_classDeclaration ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@abstractMethodDefinition'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_abstractMethodDefinition : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameters  mSignature ;
//--- Constructor
  public : cPtr_abstractMethodDefinition (const GGS_lstring & ,
                                const GGS_formalParameters & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_abstractMethodDefinition * nextObject (void) const {
    return (cPtr_abstractMethodDefinition *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_abstractMethodDefinition * previousObject (void) const {
    return (cPtr_abstractMethodDefinition *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_abstractMethodDefinition * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_abstractMethodDefinition ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@overridenMethodDefinition'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_overridenMethodDefinition : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameters  mSignature ;
  public : GGS_semanticInstructions  mInstructionList ;
//--- Constructor
  public : cPtr_overridenMethodDefinition (const GGS_lstring & ,
                                const GGS_formalParameters & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_overridenMethodDefinition * nextObject (void) const {
    return (cPtr_overridenMethodDefinition *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_overridenMethodDefinition * previousObject (void) const {
    return (cPtr_overridenMethodDefinition *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_overridenMethodDefinition * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_overridenMethodDefinition ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@methodDefinition'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_methodDefinition : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameters  mSignature ;
  public : GGS_semanticInstructions  mInstructionList ;
//--- Constructor
  public : cPtr_methodDefinition (const GGS_lstring & ,
                                const GGS_formalParameters & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_methodDefinition * nextObject (void) const {
    return (cPtr_methodDefinition *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_methodDefinition * previousObject (void) const {
    return (cPtr_methodDefinition *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_methodDefinition * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_methodDefinition ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@classMessageDefinition'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classMessageDefinition : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mMessageName ;
  public : GGS_lstring  mMessageValue ;
//--- Constructor
  public : cPtr_classMessageDefinition (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_classMessageDefinition * nextObject (void) const {
    return (cPtr_classMessageDefinition *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_classMessageDefinition * previousObject (void) const {
    return (cPtr_classMessageDefinition *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_classMessageDefinition * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_classMessageDefinition ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@listDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_listDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mListTypeName ;
  public : GGS__list_attributeInCollection  mAttributeList ;
//--- Constructor
  public : cPtr_listDeclaration (const GGS_lstring & ,
                                const GGS__list_attributeInCollection & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_listDeclaration * nextObject (void) const {
    return (cPtr_listDeclaration *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_listDeclaration * previousObject (void) const {
    return (cPtr_listDeclaration *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_listDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_listDeclaration ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@sortedListSortDescriptor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sortedListSortDescriptor : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mSortedAttributeName ;
  public : GGS_bool mAscending ;
//--- Constructor
  public : cPtr_sortedListSortDescriptor (const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_sortedListSortDescriptor * nextObject (void) const {
    return (cPtr_sortedListSortDescriptor *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_sortedListSortDescriptor * previousObject (void) const {
    return (cPtr_sortedListSortDescriptor *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_sortedListSortDescriptor * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_sortedListSortDescriptor ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@sortedListDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sortedListDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mSortedListTypeName ;
  public : GGS__list_attributeInCollection  mAttributeList ;
  public : GGS__list_sortedListSortDescriptor  mSortDescriptorList ;
//--- Constructor
  public : cPtr_sortedListDeclaration (const GGS_lstring & ,
                                const GGS__list_attributeInCollection & ,
                                const GGS__list_sortedListSortDescriptor & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_sortedListDeclaration * nextObject (void) const {
    return (cPtr_sortedListDeclaration *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_sortedListDeclaration * previousObject (void) const {
    return (cPtr_sortedListDeclaration *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_sortedListDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_sortedListDeclaration ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@enumDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_enumDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mEnumTypeName ;
  public : GGS_lstringlist  mConstantList ;
  public : GGS__list_enumMessage  mEnumMessageList ;
//--- Constructor
  public : cPtr_enumDeclaration (const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS__list_enumMessage & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_enumDeclaration * nextObject (void) const {
    return (cPtr_enumDeclaration *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_enumDeclaration * previousObject (void) const {
    return (cPtr_enumDeclaration *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_enumDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_enumDeclaration ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@enumMessage'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_enumMessage : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mEnumMessageName ;
  public : GGS__list_enumMessageAssociation  mMessageAssociationList ;
//--- Constructor
  public : cPtr_enumMessage (const GGS_lstring & ,
                                const GGS__list_enumMessageAssociation & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_enumMessage * nextObject (void) const {
    return (cPtr_enumMessage *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_enumMessage * previousObject (void) const {
    return (cPtr_enumMessage *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_enumMessage * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_enumMessage ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@enumMessageAssociation'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_enumMessageAssociation : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mConstantName ;
  public : GGS_lstring  mMessage ;
//--- Constructor
  public : cPtr_enumMessageAssociation (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_enumMessageAssociation * nextObject (void) const {
    return (cPtr_enumMessageAssociation *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_enumMessageAssociation * previousObject (void) const {
    return (cPtr_enumMessageAssociation *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_enumMessageAssociation * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_enumMessageAssociation ;
} ;

//---------------------------------------------------------------------------*

#endif
