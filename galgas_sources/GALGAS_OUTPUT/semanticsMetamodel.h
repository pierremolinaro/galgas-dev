//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticsMetamodel.h'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 7th, 2010, at 20h49'29"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1

//--- END OF USER ZONE 1

#ifndef semanticsMetamodel_DEFINED
#define semanticsMetamodel_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "instructionMetamodel.h"
#include "lexiqueTypesForAST.h"
#include "optionMetamodel.h"
#include "parameterArgumentMetamodel.h"
#include "syntaxMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_attributeInCollectionList ;
class GGS_listmapDeclaration ;
class cPtr_listmapDeclaration ;
class GGS_mapMethodList ;
class GGS_mapDeclaration ;
class cPtr_mapDeclaration ;
class GGS_mapindexDeclaration ;
class cPtr_mapindexDeclaration ;
class GGS_abstractMethodDefinitionList ;
class GGS_overridenMethodDefinitionList ;
class GGS_methodDefinitionList ;
class GGS_classMessageDefinitionList ;
class GGS_lazyAttributeList ;
class GGS_classDeclaration ;
class cPtr_classDeclaration ;
class GGS_listDeclaration ;
class cPtr_listDeclaration ;
class GGS_structDeclaration ;
class cPtr_structDeclaration ;
class GGS_sortedListSortDescriptorList ;
class GGS_sortedListDeclaration ;
class cPtr_sortedListDeclaration ;
class GGS_enumMessageAssociationList ;
class GGS_enumMessageList ;
class GGS_enumDeclaration ;
class cPtr_enumDeclaration ;
class GGS_filewrapperTemplateList ;
class GGS_filewrapperDeclaration ;
class cPtr_filewrapperDeclaration ;
class GGS_semanticsComponentRoot ;
class cPtr_semanticsComponentRoot ;
class GGS_parsedLexiqueComponentMap ;
class GGS_parsedSemanticsComponentMap ;
class GGS_parsedOptionComponentMap ;
class GGS_parsedSyntaxComponentMap ;
class GGS_parsedComponentStruct ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@attributeInCollectionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeInCollectionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_attributeInCollectionList ;

//---------------------------------------------------------------------------*

class GGS_attributeInCollectionList : public AC_galgas_list {
  public : typedef elementOf_GGS_attributeInCollectionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_attributeInCollectionList constructor_emptyList (void) ;
  public : static GGS_attributeInCollectionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_attributeInCollectionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_attributeInCollectionList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_attributeInCollectionList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_attributeInCollectionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_lstringlist & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_lstringlist & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_lstringlist & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lstringlist & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_attributeInCollectionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_attributeInCollectionList operator_concat (const GGS_attributeInCollectionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mAttributeTypeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist 
  reader_mFeatureListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMAttributeTypeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFeatureListAtIndex (C_Compiler & inLexique,
                              const GGS_lstringlist  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_attributeInCollectionList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_attributeInCollectionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mAttributeTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mAttributeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstringlist   & _mFeatureList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_listmapDeclaration'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_listmapDeclaration ;

//---------------------------------------------------------------------------*

class GGS_listmapDeclaration : public GGS_semanticDeclaration {
//--- Default constructor
  public : inline GGS_listmapDeclaration (void) :
  GGS_semanticDeclaration () {}

//--- Pointer assignment constructor
  public : GGS_listmapDeclaration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_listmapDeclaration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_listmapDeclaration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_listmapDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_listmapDeclaration * getPtr (void) const {
    return (cPtr_listmapDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListmapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAssociatedListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listmapDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listmapDeclaration * operator () (LOCATION_ARGS) const {
      return (cPtr_listmapDeclaration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_listmapDeclaration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__listmapDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@mapMethodList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapMethodList ;

//---------------------------------------------------------------------------*

class GGS_mapMethodList : public AC_galgas_list {
  public : typedef elementOf_GGS_mapMethodList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_mapMethodList constructor_emptyList (void) ;
  public : static GGS_mapMethodList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_mapMethodList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_mapMethodList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_mapMethodList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_mapMethodList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_lstring & _out_2,
                              GGS_lstring & _out_3
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_lstring & _out_2,
                             GGS_lstring & _out_3
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_lstring & _out_2,
                                GGS_lstring & _out_3
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lstring & _out_2,
                                 GGS_lstring & _out_3
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_mapMethodList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3) ;
//--- Handling '.' GALGAS operator
  public : GGS_mapMethodList operator_concat (const GGS_mapMethodList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mAlternateMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mErrorMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mShadowErrorMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAlternateMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMErrorMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMShadowErrorMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapMethodList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_mapMethodList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mAlternateMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mErrorMessage (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mShadowErrorMessage (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_mapDeclaration'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapDeclaration ;

//---------------------------------------------------------------------------*

class GGS_mapDeclaration : public GGS_semanticDeclaration {
//--- Default constructor
  public : inline GGS_mapDeclaration (void) :
  GGS_semanticDeclaration () {}

//--- Pointer assignment constructor
  public : GGS_mapDeclaration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_mapDeclaration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_mapDeclaration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_mapDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_attributeInCollectionList & argument_3,
                                const GGS_mapMethodList & argument_4,
                                const GGS_mapMethodList & argument_5,
                                const GGS_mapMethodList & argument_6
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_mapDeclaration * getPtr (void) const {
    return (cPtr_mapDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAssociatedEnumTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAssociatedTerminaisonMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodList  reader_mInsertMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodList  reader_mSearchMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_mapMethodList  reader_mRemoveMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapDeclaration * operator () (LOCATION_ARGS) const {
      return (cPtr_mapDeclaration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapDeclaration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__mapDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_mapindexDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_mapindexDeclaration ;

//---------------------------------------------------------------------------*

class GGS_mapindexDeclaration : public GGS_semanticDeclaration {
//--- Default constructor
  public : inline GGS_mapindexDeclaration (void) :
  GGS_semanticDeclaration () {}

//--- Pointer assignment constructor
  public : GGS_mapindexDeclaration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_mapindexDeclaration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_mapindexDeclaration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_mapindexDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstring & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_mapindexDeclaration * getPtr (void) const {
    return (cPtr_mapindexDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mMapIndexTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMapTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSearchMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSearchMethodErrorMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_mapindexDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_mapindexDeclaration * operator () (LOCATION_ARGS) const {
      return (cPtr_mapindexDeclaration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_mapindexDeclaration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__mapindexDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@abstractMethodDefinitionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_abstractMethodDefinitionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_abstractMethodDefinitionList ;

//---------------------------------------------------------------------------*

class GGS_abstractMethodDefinitionList : public AC_galgas_list {
  public : typedef elementOf_GGS_abstractMethodDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_abstractMethodDefinitionList constructor_emptyList (void) ;
  public : static GGS_abstractMethodDefinitionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_abstractMethodDefinitionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_abstractMethodDefinitionList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_abstractMethodDefinitionList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_abstractMethodDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalParameterList & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalParameterList & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalParameterList & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalParameterList & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_abstractMethodDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_abstractMethodDefinitionList operator_concat (const GGS_abstractMethodDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterList 
  reader_mSignatureAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSignatureAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_abstractMethodDefinitionList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_abstractMethodDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterList   & _mSignature (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@overridenMethodDefinitionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_overridenMethodDefinitionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_overridenMethodDefinitionList ;

//---------------------------------------------------------------------------*

class GGS_overridenMethodDefinitionList : public AC_galgas_list {
  public : typedef elementOf_GGS_overridenMethodDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_overridenMethodDefinitionList constructor_emptyList (void) ;
  public : static GGS_overridenMethodDefinitionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_overridenMethodDefinitionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_overridenMethodDefinitionList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_overridenMethodDefinitionList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_overridenMethodDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalParameterList & _out_1,
                              GGS_semanticInstructionList & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalParameterList & _out_1,
                             GGS_semanticInstructionList & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalParameterList & _out_1,
                                GGS_semanticInstructionList & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalParameterList & _out_1,
                                 GGS_semanticInstructionList & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_overridenMethodDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_overridenMethodDefinitionList operator_concat (const GGS_overridenMethodDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterList 
  reader_mSignatureAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSignatureAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_overridenMethodDefinitionList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_overridenMethodDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterList   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@methodDefinitionList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_methodDefinitionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_methodDefinitionList ;

//---------------------------------------------------------------------------*

class GGS_methodDefinitionList : public AC_galgas_list {
  public : typedef elementOf_GGS_methodDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_methodDefinitionList constructor_emptyList (void) ;
  public : static GGS_methodDefinitionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_methodDefinitionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_methodDefinitionList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_methodDefinitionList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_methodDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_formalParameterList & _out_1,
                              GGS_semanticInstructionList & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_formalParameterList & _out_1,
                             GGS_semanticInstructionList & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_formalParameterList & _out_1,
                                GGS_semanticInstructionList & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_formalParameterList & _out_1,
                                 GGS_semanticInstructionList & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_methodDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_methodDefinitionList operator_concat (const GGS_methodDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameterList & argument_1,
                                const GGS_semanticInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMethodNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameterList 
  reader_mSignatureAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMethodNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMSignatureAtIndex (C_Compiler & inLexique,
                              const GGS_formalParameterList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_methodDefinitionList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_methodDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMethodName (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalParameterList   & _mSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@classMessageDefinitionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageDefinitionList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classMessageDefinitionList ;

//---------------------------------------------------------------------------*

class GGS_classMessageDefinitionList : public AC_galgas_list {
  public : typedef elementOf_GGS_classMessageDefinitionList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_classMessageDefinitionList constructor_emptyList (void) ;
  public : static GGS_classMessageDefinitionList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_classMessageDefinitionList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_classMessageDefinitionList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_classMessageDefinitionList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_classMessageDefinitionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_classMessageDefinitionList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_classMessageDefinitionList operator_concat (const GGS_classMessageDefinitionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mMessageNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mMessageValueAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMMessageNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMMessageValueAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classMessageDefinitionList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_classMessageDefinitionList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mMessageName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mMessageValue (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@lazyAttributeList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_lazyAttributeList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lazyAttributeList ;

//---------------------------------------------------------------------------*

class GGS_lazyAttributeList : public AC_galgas_list {
  public : typedef elementOf_GGS_lazyAttributeList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_lazyAttributeList constructor_emptyList (void) ;
  public : static GGS_lazyAttributeList constructor_listWithValue (const GGS_location & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_semanticInstructionList & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_lazyAttributeList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_lazyAttributeList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_lazyAttributeList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_lazyAttributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_location & _out_0,
                              GGS_attributeInCollectionList & _out_1,
                              GGS_semanticInstructionList & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_location & _out_0,
                             GGS_attributeInCollectionList & _out_1,
                             GGS_semanticInstructionList & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_location & _out_0,
                                GGS_attributeInCollectionList & _out_1,
                                GGS_semanticInstructionList & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_location & _out_0,
                                 GGS_attributeInCollectionList & _out_1,
                                 GGS_semanticInstructionList & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_lazyAttributeList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_location & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_semanticInstructionList & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_lazyAttributeList operator_concat (const GGS_lazyAttributeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_semanticInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_location & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_semanticInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_location & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_semanticInstructionList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_location 
  reader_mLocationMagicNumberAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList 
  reader_mAttributeListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionList 
  reader_mInstructionListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMLocationMagicNumberAtIndex (C_Compiler & inLexique,
                              const GGS_location  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAttributeListAtIndex (C_Compiler & inLexique,
                              const GGS_attributeInCollectionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMInstructionListAtIndex (C_Compiler & inLexique,
                              const GGS_semanticInstructionList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lazyAttributeList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_lazyAttributeList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_location   & _mLocationMagicNumber (LOCATION_ARGS) const ;
    public : /* const */ GGS_attributeInCollectionList   & _mAttributeList (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticInstructionList   & _mInstructionList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_classDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_classDeclaration ;

//---------------------------------------------------------------------------*

class GGS_classDeclaration : public GGS_semanticDeclaration {
//--- Default constructor
  public : inline GGS_classDeclaration (void) :
  GGS_semanticDeclaration () {}

//--- Pointer assignment constructor
  public : GGS_classDeclaration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_classDeclaration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_classDeclaration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_classDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_lstringlist & argument_3,
                                const GGS_attributeInCollectionList & argument_4,
                                const GGS_abstractMethodDefinitionList & argument_5,
                                const GGS_overridenMethodDefinitionList & argument_6,
                                const GGS_methodDefinitionList & argument_7,
                                const GGS_classMessageDefinitionList & argument_8,
                                const GGS_lazyAttributeList & argument_9,
                                const GGS_string& argument_10
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_classDeclaration * getPtr (void) const {
    return (cPtr_classDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mIsAbstract (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mClassTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mSuperClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mClassFeatureList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_abstractMethodDefinitionList  reader_mAbstractMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_overridenMethodDefinitionList  reader_mOverridenMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_methodDefinitionList  reader_mMethodList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_classMessageDefinitionList  reader_mMessageList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lazyAttributeList  reader_mLazyAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_string reader_mClassMessage (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classDeclaration * operator () (LOCATION_ARGS) const {
      return (cPtr_classDeclaration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_classDeclaration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__classDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_listDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_listDeclaration ;

//---------------------------------------------------------------------------*

class GGS_listDeclaration : public GGS_semanticDeclaration {
//--- Default constructor
  public : inline GGS_listDeclaration (void) :
  GGS_semanticDeclaration () {}

//--- Pointer assignment constructor
  public : GGS_listDeclaration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_listDeclaration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_listDeclaration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_listDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_listDeclaration * getPtr (void) const {
    return (cPtr_listDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_listDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_listDeclaration * operator () (LOCATION_ARGS) const {
      return (cPtr_listDeclaration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_listDeclaration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__listDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_structDeclaration'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_structDeclaration ;

//---------------------------------------------------------------------------*

class GGS_structDeclaration : public GGS_semanticDeclaration {
//--- Default constructor
  public : inline GGS_structDeclaration (void) :
  GGS_semanticDeclaration () {}

//--- Pointer assignment constructor
  public : GGS_structDeclaration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_structDeclaration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_structDeclaration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_structDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_structDeclaration * getPtr (void) const {
    return (cPtr_structDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mStructTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_structDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_structDeclaration * operator () (LOCATION_ARGS) const {
      return (cPtr_structDeclaration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_structDeclaration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__structDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@sortedListSortDescriptorList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_sortedListSortDescriptorList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sortedListSortDescriptorList ;

//---------------------------------------------------------------------------*

class GGS_sortedListSortDescriptorList : public AC_galgas_list {
  public : typedef elementOf_GGS_sortedListSortDescriptorList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_sortedListSortDescriptorList constructor_emptyList (void) ;
  public : static GGS_sortedListSortDescriptorList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_sortedListSortDescriptorList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_sortedListSortDescriptorList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_sortedListSortDescriptorList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_sortedListSortDescriptorList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_bool& _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_bool& _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_bool& _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_bool& _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_sortedListSortDescriptorList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_sortedListSortDescriptorList operator_concat (const GGS_sortedListSortDescriptorList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mSortedAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_bool
  reader_mAscendingAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSortedAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMAscendingAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sortedListSortDescriptorList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_sortedListSortDescriptorList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mSortedAttributeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_bool  & _mAscending (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_sortedListDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sortedListDeclaration ;

//---------------------------------------------------------------------------*

class GGS_sortedListDeclaration : public GGS_semanticDeclaration {
//--- Default constructor
  public : inline GGS_sortedListDeclaration (void) :
  GGS_semanticDeclaration () {}

//--- Pointer assignment constructor
  public : GGS_sortedListDeclaration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sortedListDeclaration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sortedListDeclaration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sortedListDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_attributeInCollectionList & argument_1,
                                const GGS_sortedListSortDescriptorList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sortedListDeclaration * getPtr (void) const {
    return (cPtr_sortedListDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSortedListTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_attributeInCollectionList  reader_mAttributeList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_sortedListSortDescriptorList  reader_mSortDescriptorList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sortedListDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sortedListDeclaration * operator () (LOCATION_ARGS) const {
      return (cPtr_sortedListDeclaration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sortedListDeclaration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sortedListDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@enumMessageAssociationList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageAssociationList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumMessageAssociationList ;

//---------------------------------------------------------------------------*

class GGS_enumMessageAssociationList : public AC_galgas_list {
  public : typedef elementOf_GGS_enumMessageAssociationList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_enumMessageAssociationList constructor_emptyList (void) ;
  public : static GGS_enumMessageAssociationList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_enumMessageAssociationList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_enumMessageAssociationList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_enumMessageAssociationList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_enumMessageAssociationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_enumMessageAssociationList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumMessageAssociationList operator_concat (const GGS_enumMessageAssociationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mConstantNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mMessageAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMConstantNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMMessageAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumMessageAssociationList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_enumMessageAssociationList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mConstantName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mMessage (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@enumMessageList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumMessageList ;

//---------------------------------------------------------------------------*

class GGS_enumMessageList : public AC_galgas_list {
  public : typedef elementOf_GGS_enumMessageList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_enumMessageList constructor_emptyList (void) ;
  public : static GGS_enumMessageList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_enumMessageList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_enumMessageList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_enumMessageList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_enumMessageList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_enumMessageAssociationList & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_enumMessageAssociationList & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_enumMessageAssociationList & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_enumMessageAssociationList & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_enumMessageList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_enumMessageList operator_concat (const GGS_enumMessageList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_enumMessageAssociationList & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mEnumMessageNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_enumMessageAssociationList 
  reader_mMessageAssociationListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMEnumMessageNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMMessageAssociationListAtIndex (C_Compiler & inLexique,
                              const GGS_enumMessageAssociationList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumMessageList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_enumMessageList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mEnumMessageName (LOCATION_ARGS) const ;
    public : /* const */ GGS_enumMessageAssociationList   & _mMessageAssociationList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_enumDeclaration'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_enumDeclaration ;

//---------------------------------------------------------------------------*

class GGS_enumDeclaration : public GGS_semanticDeclaration {
//--- Default constructor
  public : inline GGS_enumDeclaration (void) :
  GGS_semanticDeclaration () {}

//--- Pointer assignment constructor
  public : GGS_enumDeclaration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_enumDeclaration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_enumDeclaration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_enumDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_enumMessageList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_enumDeclaration * getPtr (void) const {
    return (cPtr_enumDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mEnumTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mConstantList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_enumMessageList  reader_mEnumMessageList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_enumDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_enumDeclaration * operator () (LOCATION_ARGS) const {
      return (cPtr_enumDeclaration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_enumDeclaration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__enumDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@filewrapperTemplateList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperTemplateList ;

//---------------------------------------------------------------------------*

class GGS_filewrapperTemplateList : public AC_galgas_list {
  public : typedef elementOf_GGS_filewrapperTemplateList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_filewrapperTemplateList constructor_emptyList (void) ;
  public : static GGS_filewrapperTemplateList constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterList & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_filewrapperTemplateList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_filewrapperTemplateList
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_filewrapperTemplateList
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_filewrapperTemplateList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_formalInputParameterList & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_formalInputParameterList & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_formalInputParameterList & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_formalInputParameterList & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_filewrapperTemplateList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterList & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_filewrapperTemplateList operator_concat (const GGS_filewrapperTemplateList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterList & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_formalInputParameterList & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mFilewrapperTemplateNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mFilewrapperTemplatePathAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_formalInputParameterList 
  reader_mFilewrapperTemplateFormalInputParametersAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMFilewrapperTemplateNameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFilewrapperTemplatePathAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFilewrapperTemplateFormalInputParametersAtIndex (C_Compiler & inLexique,
                              const GGS_formalInputParameterList  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperTemplateList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_filewrapperTemplateList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mFilewrapperTemplateName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mFilewrapperTemplatePath (LOCATION_ARGS) const ;
    public : /* const */ GGS_formalInputParameterList   & _mFilewrapperTemplateFormalInputParameters (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_filewrapperDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperDeclaration ;

//---------------------------------------------------------------------------*

class GGS_filewrapperDeclaration : public GGS_semanticDeclaration {
//--- Default constructor
  public : inline GGS_filewrapperDeclaration (void) :
  GGS_semanticDeclaration () {}

//--- Pointer assignment constructor
  public : GGS_filewrapperDeclaration (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_filewrapperDeclaration (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_filewrapperDeclaration
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_filewrapperDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2,
                                const GGS_filewrapperTemplateList & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_filewrapperDeclaration * getPtr (void) const {
    return (cPtr_filewrapperDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mFilewrapperName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mFilewrapperPath (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mFilewrapperExtensionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_filewrapperTemplateList  reader_mFilewrapperTemplateList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_filewrapperDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_filewrapperDeclaration * operator () (LOCATION_ARGS) const {
      return (cPtr_filewrapperDeclaration *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperDeclaration castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__filewrapperDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_semanticsComponentRoot'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticsComponentRoot ;

//---------------------------------------------------------------------------*

class GGS_semanticsComponentRoot : public AC_galgas_class {
//--- Default constructor
  public : inline GGS_semanticsComponentRoot (void) :
  AC_galgas_class () {}

//--- Pointer assignment constructor
  public : GGS_semanticsComponentRoot (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_semanticsComponentRoot (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_semanticsComponentRoot
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_semanticsComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstringlist & argument_1,
                                const GGS_semanticDeclarationStruct& argument_2,
                                const GGS_location & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_semanticsComponentRoot * getPtr (void) const {
    return (cPtr_semanticsComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mSemanticsComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mImportedComponentFileNameList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticDeclarationStruct reader_mSemanticDeclarations (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mEndOfSourceFile (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticsComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticsComponentRoot * operator () (LOCATION_ARGS) const {
      return (cPtr_semanticsComponentRoot *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticsComponentRoot castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__semanticsComponentRoot ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@parsedLexiqueComponentMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedLexiqueComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedLexiqueComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedLexiqueComponentMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedLexiqueComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedLexiqueComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedLexiqueComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedLexiqueComponentMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedLexiqueComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedLexiqueComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedLexiqueComponentMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lexiqueComponentAST &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lexiqueComponentAST   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lexiqueComponentAST & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lexiqueComponentAST & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedLexiqueComponentMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_parsedLexiqueComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedLexiqueComponentMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedLexiqueComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedLexiqueComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lexiqueComponentAST   & _mRoot (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map '@parsedSemanticsComponentMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedSemanticsComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedSemanticsComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedSemanticsComponentMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedSemanticsComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedSemanticsComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedSemanticsComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedSemanticsComponentMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedSemanticsComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedSemanticsComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedSemanticsComponentMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_semanticsComponentRoot &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_semanticsComponentRoot   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_semanticsComponentRoot & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_semanticsComponentRoot & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedSemanticsComponentMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_parsedSemanticsComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedSemanticsComponentMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedSemanticsComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedSemanticsComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_semanticsComponentRoot   & _mRoot (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@parsedOptionComponentMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedOptionComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedOptionComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedOptionComponentMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedOptionComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedOptionComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedOptionComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedOptionComponentMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedOptionComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedOptionComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedOptionComponentMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_optionComponentRoot &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_optionComponentRoot   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_optionComponentRoot & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_optionComponentRoot & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedOptionComponentMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_parsedOptionComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedOptionComponentMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedOptionComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedOptionComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_optionComponentRoot   & _mOptionComponentRoot (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Map '@parsedSyntaxComponentMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_parsedSyntaxComponentMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedSyntaxComponentMap ;

//---------------------------------------------------------------------------*

class GGS_parsedSyntaxComponentMap : public AC_galgas_map {
//--- Element Class
  public : typedef elementOf_GGS_parsedSyntaxComponentMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_parsedSyntaxComponentMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedSyntaxComponentMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedSyntaxComponentMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_parsedSyntaxComponentMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_parsedSyntaxComponentMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_parsedSyntaxComponentMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_syntaxComponentRoot &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_syntaxComponentRoot   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_syntaxComponentRoot & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_syntaxComponentRoot & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_parsedSyntaxComponentMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_parsedSyntaxComponentMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_parsedSyntaxComponentMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_parsedSyntaxComponentMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_parsedSyntaxComponentMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_syntaxComponentRoot   & _mSyntaxComponentRoot (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@attributeInCollectionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_attributeInCollectionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mAttributeTypeName ;
  public : GGS_lstring  mAttributeName ;
  public : GGS_lstringlist  mFeatureList ;
//--- Constructor
  public : elementOf_GGS_attributeInCollectionList (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_attributeInCollectionList * nextObject (void) const { return (elementOf_GGS_attributeInCollectionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_attributeInCollectionList * previousObject (void) const { return (elementOf_GGS_attributeInCollectionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_attributeInCollectionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_listmapDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_listmapDeclaration : public cPtr_semanticDeclaration {
  private : typedef cPtr_semanticDeclaration inherited ;
//--- Constructor
  public : cPtr_listmapDeclaration (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mListmapTypeName ;
  public : GGS_lstring  mAssociatedListTypeName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@mapMethodList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_mapMethodList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_lstring  mAlternateMethodName ;
  public : GGS_lstring  mErrorMessage ;
  public : GGS_lstring  mShadowErrorMessage ;
//--- Constructor
  public : elementOf_GGS_mapMethodList (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_mapMethodList * nextObject (void) const { return (elementOf_GGS_mapMethodList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_mapMethodList * previousObject (void) const { return (elementOf_GGS_mapMethodList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_mapMethodList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_mapDeclaration'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapDeclaration : public cPtr_semanticDeclaration {
  private : typedef cPtr_semanticDeclaration inherited ;
//--- Constructor
  public : cPtr_mapDeclaration (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_attributeInCollectionList & ,
                                const GGS_mapMethodList & ,
                                const GGS_mapMethodList & ,
                                const GGS_mapMethodList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mMapTypeName ;
  public : GGS_lstring  mAssociatedEnumTypeName ;
  public : GGS_lstring  mAssociatedTerminaisonMethodName ;
  public : GGS_attributeInCollectionList  mAttributeList ;
  public : GGS_mapMethodList  mInsertMethodList ;
  public : GGS_mapMethodList  mSearchMethodList ;
  public : GGS_mapMethodList  mRemoveMethodList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                abstract class 'cPtr_mapindexDeclaration'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_mapindexDeclaration : public cPtr_semanticDeclaration {
  private : typedef cPtr_semanticDeclaration inherited ;
//--- Constructor
  public : cPtr_mapindexDeclaration (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mMapIndexTypeName ;
  public : GGS_lstring  mMapTypeName ;
  public : GGS_lstring  mSearchMethodName ;
  public : GGS_lstring  mSearchMethodErrorMessage ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@abstractMethodDefinitionList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_abstractMethodDefinitionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameterList  mSignature ;
//--- Constructor
  public : elementOf_GGS_abstractMethodDefinitionList (const GGS_lstring & ,
                                const GGS_formalParameterList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_abstractMethodDefinitionList * nextObject (void) const { return (elementOf_GGS_abstractMethodDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_abstractMethodDefinitionList * previousObject (void) const { return (elementOf_GGS_abstractMethodDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_abstractMethodDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@overridenMethodDefinitionList'              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_overridenMethodDefinitionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameterList  mSignature ;
  public : GGS_semanticInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_overridenMethodDefinitionList (const GGS_lstring & ,
                                const GGS_formalParameterList & ,
                                const GGS_semanticInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_overridenMethodDefinitionList * nextObject (void) const { return (elementOf_GGS_overridenMethodDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_overridenMethodDefinitionList * previousObject (void) const { return (elementOf_GGS_overridenMethodDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_overridenMethodDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@methodDefinitionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_methodDefinitionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMethodName ;
  public : GGS_formalParameterList  mSignature ;
  public : GGS_semanticInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_methodDefinitionList (const GGS_lstring & ,
                                const GGS_formalParameterList & ,
                                const GGS_semanticInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_methodDefinitionList * nextObject (void) const { return (elementOf_GGS_methodDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_methodDefinitionList * previousObject (void) const { return (elementOf_GGS_methodDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_methodDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@classMessageDefinitionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_classMessageDefinitionList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mMessageName ;
  public : GGS_lstring  mMessageValue ;
//--- Constructor
  public : elementOf_GGS_classMessageDefinitionList (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_classMessageDefinitionList * nextObject (void) const { return (elementOf_GGS_classMessageDefinitionList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_classMessageDefinitionList * previousObject (void) const { return (elementOf_GGS_classMessageDefinitionList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_classMessageDefinitionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@lazyAttributeList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_lazyAttributeList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_location  mLocationMagicNumber ;
  public : GGS_attributeInCollectionList  mAttributeList ;
  public : GGS_semanticInstructionList  mInstructionList ;
//--- Constructor
  public : elementOf_GGS_lazyAttributeList (const GGS_location & ,
                                const GGS_attributeInCollectionList & ,
                                const GGS_semanticInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_lazyAttributeList * nextObject (void) const { return (elementOf_GGS_lazyAttributeList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_lazyAttributeList * previousObject (void) const { return (elementOf_GGS_lazyAttributeList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_lazyAttributeList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_classDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classDeclaration : public cPtr_semanticDeclaration {
  private : typedef cPtr_semanticDeclaration inherited ;
//--- Constructor
  public : cPtr_classDeclaration (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_attributeInCollectionList & ,
                                const GGS_abstractMethodDefinitionList & ,
                                const GGS_overridenMethodDefinitionList & ,
                                const GGS_methodDefinitionList & ,
                                const GGS_classMessageDefinitionList & ,
                                const GGS_lazyAttributeList & ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_bool mIsAbstract ;
  public : GGS_lstring  mClassTypeName ;
  public : GGS_lstring  mSuperClassName ;
  public : GGS_lstringlist  mClassFeatureList ;
  public : GGS_attributeInCollectionList  mAttributeList ;
  public : GGS_abstractMethodDefinitionList  mAbstractMethodList ;
  public : GGS_overridenMethodDefinitionList  mOverridenMethodList ;
  public : GGS_methodDefinitionList  mMethodList ;
  public : GGS_classMessageDefinitionList  mMessageList ;
  public : GGS_lazyAttributeList  mLazyAttributeList ;
  public : GGS_string mClassMessage ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_listDeclaration'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_listDeclaration : public cPtr_semanticDeclaration {
  private : typedef cPtr_semanticDeclaration inherited ;
//--- Constructor
  public : cPtr_listDeclaration (const GGS_lstring & ,
                                const GGS_attributeInCollectionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mListTypeName ;
  public : GGS_attributeInCollectionList  mAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_structDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_structDeclaration : public cPtr_semanticDeclaration {
  private : typedef cPtr_semanticDeclaration inherited ;
//--- Constructor
  public : cPtr_structDeclaration (const GGS_lstring & ,
                                const GGS_attributeInCollectionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mStructTypeName ;
  public : GGS_attributeInCollectionList  mAttributeList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@sortedListSortDescriptorList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_sortedListSortDescriptorList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mSortedAttributeName ;
  public : GGS_bool mAscending ;
//--- Constructor
  public : elementOf_GGS_sortedListSortDescriptorList (const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_sortedListSortDescriptorList * nextObject (void) const { return (elementOf_GGS_sortedListSortDescriptorList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_sortedListSortDescriptorList * previousObject (void) const { return (elementOf_GGS_sortedListSortDescriptorList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_sortedListSortDescriptorList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_sortedListDeclaration'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sortedListDeclaration : public cPtr_semanticDeclaration {
  private : typedef cPtr_semanticDeclaration inherited ;
//--- Constructor
  public : cPtr_sortedListDeclaration (const GGS_lstring & ,
                                const GGS_attributeInCollectionList & ,
                                const GGS_sortedListSortDescriptorList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mSortedListTypeName ;
  public : GGS_attributeInCollectionList  mAttributeList ;
  public : GGS_sortedListSortDescriptorList  mSortDescriptorList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@enumMessageAssociationList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageAssociationList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mConstantName ;
  public : GGS_lstring  mMessage ;
//--- Constructor
  public : elementOf_GGS_enumMessageAssociationList (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_enumMessageAssociationList * nextObject (void) const { return (elementOf_GGS_enumMessageAssociationList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_enumMessageAssociationList * previousObject (void) const { return (elementOf_GGS_enumMessageAssociationList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_enumMessageAssociationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@enumMessageList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_enumMessageList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mEnumMessageName ;
  public : GGS_enumMessageAssociationList  mMessageAssociationList ;
//--- Constructor
  public : elementOf_GGS_enumMessageList (const GGS_lstring & ,
                                const GGS_enumMessageAssociationList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_enumMessageList * nextObject (void) const { return (elementOf_GGS_enumMessageList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_enumMessageList * previousObject (void) const { return (elementOf_GGS_enumMessageList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_enumMessageList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_enumDeclaration'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_enumDeclaration : public cPtr_semanticDeclaration {
  private : typedef cPtr_semanticDeclaration inherited ;
//--- Constructor
  public : cPtr_enumDeclaration (const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_enumMessageList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mEnumTypeName ;
  public : GGS_lstringlist  mConstantList ;
  public : GGS_enumMessageList  mEnumMessageList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@filewrapperTemplateList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateList : public AC_galgas_list::cListElement {
//--- Attributes
  public : GGS_lstring  mFilewrapperTemplateName ;
  public : GGS_lstring  mFilewrapperTemplatePath ;
  public : GGS_formalInputParameterList  mFilewrapperTemplateFormalInputParameters ;
//--- Constructor
  public : elementOf_GGS_filewrapperTemplateList (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_formalInputParameterList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_filewrapperTemplateList * nextObject (void) const { return (elementOf_GGS_filewrapperTemplateList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_filewrapperTemplateList * previousObject (void) const { return (elementOf_GGS_filewrapperTemplateList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_filewrapperTemplateList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_filewrapperDeclaration'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_filewrapperDeclaration : public cPtr_semanticDeclaration {
  private : typedef cPtr_semanticDeclaration inherited ;
//--- Constructor
  public : cPtr_filewrapperDeclaration (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_filewrapperTemplateList & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mFilewrapperName ;
  public : GGS_lstring  mFilewrapperPath ;
  public : GGS_lstringlist  mFilewrapperExtensionList ;
  public : GGS_filewrapperTemplateList  mFilewrapperTemplateList ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_semanticsComponentRoot'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticsComponentRoot : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_semanticsComponentRoot (const GGS_lstring & ,
                                const GGS_lstringlist & ,
                                const GGS_semanticDeclarationStruct& ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mSemanticsComponentName ;
  public : GGS_lstringlist  mImportedComponentFileNameList ;
  public : GGS_semanticDeclarationStruct mSemanticDeclarations ;
  public : GGS_location  mEndOfSourceFile ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of map '@parsedLexiqueComponentMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedLexiqueComponentMap {
  public : GGS_lexiqueComponentAST  mRoot ;

  public : e_parsedLexiqueComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedLexiqueComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedLexiqueComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedLexiqueComponentMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedLexiqueComponentMap * nextObject (void) const { return (elementOf_GGS_parsedLexiqueComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedLexiqueComponentMap * infObject (void) const { return (elementOf_GGS_parsedLexiqueComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedLexiqueComponentMap * supObject (void) const { return (elementOf_GGS_parsedLexiqueComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedLexiqueComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of map '@parsedSemanticsComponentMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedSemanticsComponentMap {
  public : GGS_semanticsComponentRoot  mRoot ;

  public : e_parsedSemanticsComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedSemanticsComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedSemanticsComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedSemanticsComponentMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedSemanticsComponentMap * nextObject (void) const { return (elementOf_GGS_parsedSemanticsComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedSemanticsComponentMap * infObject (void) const { return (elementOf_GGS_parsedSemanticsComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedSemanticsComponentMap * supObject (void) const { return (elementOf_GGS_parsedSemanticsComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedSemanticsComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@parsedOptionComponentMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedOptionComponentMap {
  public : GGS_optionComponentRoot  mOptionComponentRoot ;

  public : e_parsedOptionComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedOptionComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedOptionComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedOptionComponentMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedOptionComponentMap * nextObject (void) const { return (elementOf_GGS_parsedOptionComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedOptionComponentMap * infObject (void) const { return (elementOf_GGS_parsedOptionComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedOptionComponentMap * supObject (void) const { return (elementOf_GGS_parsedOptionComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedOptionComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of map '@parsedSyntaxComponentMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class e_parsedSyntaxComponentMap {
  public : GGS_syntaxComponentRoot  mSyntaxComponentRoot ;

  public : e_parsedSyntaxComponentMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_parsedSyntaxComponentMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_parsedSyntaxComponentMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_parsedSyntaxComponentMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_parsedSyntaxComponentMap * nextObject (void) const { return (elementOf_GGS_parsedSyntaxComponentMap *) mNextItem ; }
  public : inline elementOf_GGS_parsedSyntaxComponentMap * infObject (void) const { return (elementOf_GGS_parsedSyntaxComponentMap *) mInfPtr ; }
  public : inline elementOf_GGS_parsedSyntaxComponentMap * supObject (void) const { return (elementOf_GGS_parsedSyntaxComponentMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_parsedSyntaxComponentMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Declarations for 'parsedComponentStruct' struct               *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_parsedComponentStruct ;

//---------------------------------------------------------------------------*

class GGS_parsedComponentStruct : public GGS__root {
//--- Default constructor
  public : GGS_parsedComponentStruct (void) ;

//--- Virtual destructor
  public : virtual ~GGS_parsedComponentStruct (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_parsedComponentStruct * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_parsedComponentStruct * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_parsedComponentStruct & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_parsedComponentStruct & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_parsedComponentStruct castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_parsedComponentStruct constructor_new (const GGS_parsedSemanticsComponentMap & argument_0,
                 const GGS_parsedLexiqueComponentMap & argument_1,
                 const GGS_parsedSyntaxComponentMap & argument_2,
                 const GGS_parsedOptionComponentMap & argument_3) ;

//--- Readers
  public : inline GGS_parsedSemanticsComponentMap 
  reader_mParsedSemanticsComponentMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedSemanticsComponentMap ;
  }

  public : inline GGS_parsedLexiqueComponentMap 
  reader_mParsedLexiqueComponentMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedLexiqueComponentMap ;
  }

  public : inline GGS_parsedSyntaxComponentMap 
  reader_mParsedSyntaxComponentMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedSyntaxComponentMap ;
  }

  public : inline GGS_parsedOptionComponentMap 
  reader_mParsedOptionComponentMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mParsedOptionComponentMap ;
  }

//--- Attributes
  public : GGS_parsedSemanticsComponentMap  mParsedSemanticsComponentMap ;
  public : GGS_parsedLexiqueComponentMap  mParsedLexiqueComponentMap ;
  public : GGS_parsedSyntaxComponentMap  mParsedSyntaxComponentMap ;
  public : GGS_parsedOptionComponentMap  mParsedOptionComponentMap ;
} ;

//---------------------------------------------------------------------------*

#endif
