//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'templateAnalysis.cpp'                         *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 23th, 2010, at 13h30'31"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "templateAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "templateAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

cMapElement_templateVariableMap::cMapElement_templateVariableMap (const GALGAS_lstring & inKey,
                                                                  const GALGAS_unifiedTypeMapProxy & in_mTypeProxy,
                                                                  const GALGAS_string & in_mCppName
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mTypeProxy (in_mTypeProxy),
mAttribute_mCppName (in_mCppName) {
}

//---------------------------------------------------------------------------*

bool cMapElement_templateVariableMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTypeProxy.isValid () && mAttribute_mCppName.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_templateVariableMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_templateVariableMap (mAttribute_lkey, mAttribute_mTypeProxy, mAttribute_mCppName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_templateVariableMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
// mAttribute_mTypeProxy.description (ioString, inIndentation) ;
// mAttribute_mCppName.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cMapElement_templateVariableMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_templateVariableMap * operand = (cMapElement_templateVariableMap *) inOperand ;
  enumComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTypeProxy.objectCompare (operand->mAttribute_mTypeProxy) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCppName.objectCompare (operand->mAttribute_mCppName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_templateVariableMap::GALGAS_templateVariableMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_templateVariableMap::GALGAS_templateVariableMap (const GALGAS_templateVariableMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_templateVariableMap & GALGAS_templateVariableMap::operator = (const GALGAS_templateVariableMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_templateVariableMap GALGAS_templateVariableMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_templateVariableMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_templateVariableMap GALGAS_templateVariableMap::constructor_mapWithMapToOverride (const GALGAS_templateVariableMap & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_templateVariableMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_templateVariableMap GALGAS_templateVariableMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_templateVariableMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_templateVariableMap::modifier_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_unifiedTypeMapProxy inArgument0,
                                                     GALGAS_string inArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_templateVariableMap * p = NULL ;
  macroMyNew (p, cMapElement_templateVariableMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' variable is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_templateVariableMap_searchKey = "the '%K' variable is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_templateVariableMap::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMapProxy & outArgument0,
                                                   GALGAS_string & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_templateVariableMap * p = (const cMapElement_templateVariableMap *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_templateVariableMap_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_templateVariableMap) ;
    outArgument0 = p->mAttribute_mTypeProxy ;
    outArgument1 = p->mAttribute_mCppName ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_templateVariableMap::reader_mTypeProxyForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_templateVariableMap * p = (const cMapElement_templateVariableMap *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_templateVariableMap) ;
    result = p->mAttribute_mTypeProxy ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_templateVariableMap::reader_mCppNameForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_templateVariableMap * p = (const cMapElement_templateVariableMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_templateVariableMap) ;
    result = p->mAttribute_mCppName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_templateVariableMap::modifier_setMTypeProxyForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_templateVariableMap * p = (cMapElement_templateVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateVariableMap) ;
    p->mAttribute_mTypeProxy = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_templateVariableMap::modifier_setMCppNameForKey (GALGAS_string inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_templateVariableMap * p = (cMapElement_templateVariableMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateVariableMap) ;
    p->mAttribute_mCppName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_templateVariableMap * GALGAS_templateVariableMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                        const GALGAS_string & inKey
                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_templateVariableMap * result = (cMapElement_templateVariableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_templateVariableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_templateVariableMap * GALGAS_templateVariableMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                           const GALGAS_lstring & inKey
                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_templateVariableMap_searchKey COMMA_THERE) ;
  cMapElement_templateVariableMap * result = (cMapElement_templateVariableMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_templateVariableMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_templateVariableMap::cEnumerator_templateVariableMap (const GALGAS_templateVariableMap & inEnumeratedObject,
                                                                  const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_templateVariableMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_templateVariableMap::current_mTypeProxy (LOCATION_ARGS) const {
  const cMapElement_templateVariableMap * p = (const cMapElement_templateVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_templateVariableMap) ;
  return p->mAttribute_mTypeProxy ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_templateVariableMap::current_mCppName (LOCATION_ARGS) const {
  const cMapElement_templateVariableMap * p = (const cMapElement_templateVariableMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_templateVariableMap) ;
  return p->mAttribute_mCppName ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @templateVariableMap type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_templateVariableMap ("templateVariableMap",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_templateVariableMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_templateVariableMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_templateVariableMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_templateVariableMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_templateVariableMap GALGAS_templateVariableMap::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_templateVariableMap result ;
  const GALGAS_templateVariableMap * p = (const GALGAS_templateVariableMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_templateVariableMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "templateVariableMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_templateAnalysisContext::GALGAS_templateAnalysisContext (void) :
mAttribute_mSemanticContext (),
mAttribute_mPredefinedTypes (),
mAttribute_mTemplateVariableMap () {
}

//---------------------------------------------------------------------------*

GALGAS_templateAnalysisContext::~ GALGAS_templateAnalysisContext (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_templateAnalysisContext::GALGAS_templateAnalysisContext (const GALGAS_templateAnalysisContext & inSource) :
//mAttribute_mSemanticContext (inSource.mAttribute_mSemanticContext),
//mAttribute_mPredefinedTypes (inSource.mAttribute_mPredefinedTypes),
//mAttribute_mTemplateVariableMap (inSource.mAttribute_mTemplateVariableMap) {
} */

//---------------------------------------------------------------------------*

GALGAS_templateAnalysisContext::GALGAS_templateAnalysisContext (const GALGAS_semanticContext & inOperand0,
                                                                const GALGAS_predefinedTypes & inOperand1,
                                                                const GALGAS_templateVariableMap & inOperand2) :
mAttribute_mSemanticContext (inOperand0),
mAttribute_mPredefinedTypes (inOperand1),
mAttribute_mTemplateVariableMap (inOperand2) {
}

//---------------------------------------------------------------------------*

/* GALGAS_templateAnalysisContext & GALGAS_templateAnalysisContext::operator = (const GALGAS_templateAnalysisContext & inOperand) {
  mAttribute_mSemanticContext = inOperand.mAttribute_mSemanticContext ;
  mAttribute_mPredefinedTypes = inOperand.mAttribute_mPredefinedTypes ;
  mAttribute_mTemplateVariableMap = inOperand.mAttribute_mTemplateVariableMap ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_templateAnalysisContext GALGAS_templateAnalysisContext::constructor_new (const GALGAS_semanticContext & inOperand0,
                                                                                const GALGAS_predefinedTypes & inOperand1,
                                                                                const GALGAS_templateVariableMap & inOperand2 
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_templateAnalysisContext result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_templateAnalysisContext (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_templateAnalysisContext::objectCompare (const GALGAS_templateAnalysisContext & inOperand) const {
   enumComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mSemanticContext.objectCompare (inOperand.mAttribute_mSemanticContext) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPredefinedTypes.objectCompare (inOperand.mAttribute_mPredefinedTypes) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTemplateVariableMap.objectCompare (inOperand.mAttribute_mTemplateVariableMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_templateAnalysisContext::isValid (void) const {
  return mAttribute_mSemanticContext.isValid () && mAttribute_mPredefinedTypes.isValid () && mAttribute_mTemplateVariableMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_templateAnalysisContext::drop (void) {
  mAttribute_mSemanticContext.drop () ;
  mAttribute_mPredefinedTypes.drop () ;
  mAttribute_mTemplateVariableMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_templateAnalysisContext::description (C_String & ioString,
                                                  const PMSInt32 inIndentation) const {
  ioString << "<struct @templateAnalysisContext:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mSemanticContext.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPredefinedTypes.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTemplateVariableMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_templateAnalysisContext::reader_mSemanticContext (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSemanticContext ;
}

//---------------------------------------------------------------------------*

GALGAS_predefinedTypes GALGAS_templateAnalysisContext::reader_mPredefinedTypes (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPredefinedTypes ;
}

//---------------------------------------------------------------------------*

GALGAS_templateVariableMap GALGAS_templateAnalysisContext::reader_mTemplateVariableMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTemplateVariableMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @templateAnalysisContext type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_templateAnalysisContext ("templateAnalysisContext",
                                                NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_templateAnalysisContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_templateAnalysisContext ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_templateAnalysisContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_templateAnalysisContext (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_templateAnalysisContext GALGAS_templateAnalysisContext::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler,
                                                                              const GALGAS_location & inErrorLocation
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_templateAnalysisContext result ;
  const GALGAS_templateAnalysisContext * p = (const GALGAS_templateAnalysisContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_templateAnalysisContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "templateAnalysisContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'templateInstructionListAnalysis'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_templateInstructionListAnalysis (const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                              const GALGAS_templateInstructionListAST constinArgument_inInstructionList,
                                              GALGAS_templateInstructionListForGeneration & ioArgument_ioInstructionList,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @foreachInstructionForGeneration
  cEnumerator_templateInstructionListAST enumerator_50361 (constinArgument_inInstructionList, true) ;
  //--- simple foreach instruction
  while (enumerator_50361.hasCurrentObject ()) {
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_templateInstructionAnalysis ((const cPtr_templateInstructionAST *) enumerator_50361.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, ioArgument_ioInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1264)) ;
    //-------- END @methodCallInstructionForGeneration
    enumerator_50361.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@templateExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_templateExpressionAST_templateExpressionAnalysis> gCategoryMethodTable_templateExpressionAST_templateExpressionAnalysis ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_templateExpressionAnalysis (const PMSInt32 inClassIndex,
                                                     categoryMethodSignature_templateExpressionAST_templateExpressionAnalysis inMethod) {
  gCategoryMethodTable_templateExpressionAST_templateExpressionAnalysis.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_templateExpressionAST_templateExpressionAnalysis (void) {
  gCategoryMethodTable_templateExpressionAST_templateExpressionAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateExpressionAST_templateExpressionAnalysis (NULL,
                                                                             freeCategoryMethod_templateExpressionAST_templateExpressionAnalysis) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                    const GALGAS_templateAnalysisContext constin_inAnalysisContext,
                                                    GALGAS_semanticExpressionForGeneration & out_outExpression,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outExpression.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_templateExpressionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_templateExpressionAST_templateExpressionAnalysis f = NULL ;
    if (classIndex < gCategoryMethodTable_templateExpressionAST_templateExpressionAnalysis.count ()) {
      f = gCategoryMethodTable_templateExpressionAST_templateExpressionAnalysis (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_templateExpressionAST_templateExpressionAnalysis.count ()) {
           f = gCategoryMethodTable_templateExpressionAST_templateExpressionAnalysis (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_templateExpressionAST_templateExpressionAnalysis.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    f (inObject, constin_inAnalysisContext, out_outExpression, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateReaderCallInExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateReaderCallInExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                         const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                         GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateReaderCallInExpressionAST * object = (const cPtr_templateReaderCallInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateReaderCallInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_receiverExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mReceiverExpression.ptr (), constinArgument_inAnalysisContext, var_receiverExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (67)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_receiverType = var_receiverExpression.reader_mType (SOURCE_FILE_AT_LINE (68)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_readerMap var_readerMap = var_receiverType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (70)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_readerFormalArgumentTypeList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_isCategory ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_hasCompilerArgument ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_fieldList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (76)) ;
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_readerMap * objectArray_3980 = (const cMapElement_readerMap *) var_readerMap.readAccessForWithInstruction_hasKey (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (77))) ;
  if (NULL != objectArray_3980) {
      macroValidSharedObject (objectArray_3980, const cMapElement_readerMap) ;
    //-------- @assignmentInstructionForGeneration
    var_readerFormalArgumentTypeList = objectArray_3980->mAttribute_mArgumentTypeList ;
    //-------- @assignmentInstructionForGeneration
    var_hasCompilerArgument = objectArray_3980->mAttribute_mHasCompilerArgument ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = objectArray_3980->mAttribute_mReturnedType ;
    //-------- @assignmentInstructionForGeneration
    var_isCategory = objectArray_3980->mAttribute_mIsCategory ;
  }else{
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_uint var_matchingReaderCount = GALGAS_uint ((PMUInt32) 0U) ;
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsEqual, var_receiverType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (84)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (84)))).isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      var_readerFormalArgumentTypeList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (85)) ;
      //-------- @assignmentInstructionForGeneration
      var_hasCompilerArgument = GALGAS_bool (true) ;
      //-------- @assignmentInstructionForGeneration
      var_returnedType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (87)) ;
      //-------- @assignmentInstructionForGeneration
      var_isCategory = GALGAS_bool (true) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_typedAttributeList enumerator_4552 (var_receiverType.reader_mCurrentTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (89)), true) ;
      //--- simple foreach instruction
      while (enumerator_4552.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_unifiedTypeMapProxy var_attributeType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (enumerator_4552.current_mAttributeTypeProxy (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (90)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (90)), inCompiler COMMA_SOURCE_FILE_AT_LINE (90)) ;
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_readerMap var_aMap = var_attributeType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (91)) ;
        //-------- @readOnlyWithInstructionForGeneration
        const cMapElement_readerMap * objectArray_4892 = (const cMapElement_readerMap *) var_aMap.readAccessForWithInstruction_hasKey (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (93))) ;
        if (NULL != objectArray_4892) {
            macroValidSharedObject (objectArray_4892, const cMapElement_readerMap) ;
          //-------- @incrementInstructionForGeneration
          var_matchingReaderCount.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (94)) ;
          //-------- @assignmentInstructionForGeneration
          var_readerFormalArgumentTypeList = objectArray_4892->mAttribute_mArgumentTypeList ;
          //-------- @assignmentInstructionForGeneration
          var_hasCompilerArgument = objectArray_4892->mAttribute_mHasCompilerArgument ;
          //-------- @assignmentInstructionForGeneration
          var_returnedType = objectArray_4892->mAttribute_mReturnedType ;
          //-------- @assignmentInstructionForGeneration
          var_isCategory = objectArray_4892->mAttribute_mIsCategory ;
          //-------- @addAssignInstructionForGeneration
          var_fieldList.addAssign_operation (enumerator_4552.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (99)) COMMA_SOURCE_FILE_AT_LINE (99)) ;
        }
        enumerator_4552.gotoNextObject () ;
      }
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, var_matchingReaderCount.objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_0 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_0, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (104)) COMMA_SOURCE_FILE_AT_LINE (104)).operator_concat (GALGAS_string ("' struct type does not define the '") COMMA_SOURCE_FILE_AT_LINE (104)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (104)) COMMA_SOURCE_FILE_AT_LINE (104)).operator_concat (GALGAS_string ("' reader, and none of its fields defines it") COMMA_SOURCE_FILE_AT_LINE (105)) COMMA_SOURCE_FILE_AT_LINE (103)) ;
        var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
        var_hasCompilerArgument.drop () ; // Release error dropped variable
        var_returnedType.drop () ; // Release error dropped variable
        var_isCategory.drop () ; // Release error dropped variable
      }else{
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsStrictSup, var_matchingReaderCount.objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_s = GALGAS_string ("") ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_stringlist enumerator_5671 (var_fieldList, true) ;
          //--- simple foreach instruction
          while (enumerator_5671.hasCurrentObject ()) {
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (enumerator_5671.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (111)) ;
            if (enumerator_5671.hasNextObject ()) {
              //-------- @appendInstructionForGeneration
              var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (112)) ;
            }
            enumerator_5671.gotoNextObject () ;
          }
          //-------- @errorInstructionForGeneration
          GALGAS_location location_1 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (115)) COMMA_SOURCE_FILE_AT_LINE (115)).operator_concat (GALGAS_string ("' struct type does not define the '") COMMA_SOURCE_FILE_AT_LINE (115)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (115)) COMMA_SOURCE_FILE_AT_LINE (115)).operator_concat (GALGAS_string ("' reader, and several of its fields defines it:") COMMA_SOURCE_FILE_AT_LINE (116)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (116)).operator_concat (GALGAS_string (" (exactly one field should define it)") COMMA_SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (114)) ;
          var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
          var_hasCompilerArgument.drop () ; // Release error dropped variable
          var_returnedType.drop () ; // Release error dropped variable
          var_isCategory.drop () ; // Release error dropped variable
        }
      }
    }else{
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (120)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_2 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (122)) COMMA_SOURCE_FILE_AT_LINE (122)).operator_concat (GALGAS_string ("' type does not define any reader") COMMA_SOURCE_FILE_AT_LINE (122)) COMMA_SOURCE_FILE_AT_LINE (121)) ;
        var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
        var_hasCompilerArgument.drop () ; // Release error dropped variable
        var_returnedType.drop () ; // Release error dropped variable
        var_isCategory.drop () ; // Release error dropped variable
      }else{
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string ("") ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_readerMap enumerator_6371 (var_readerMap, true) ;
        //--- simple foreach instruction
        while (enumerator_6371.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - ").operator_concat (enumerator_6371.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (128)) COMMA_SOURCE_FILE_AT_LINE (128)) COMMA_SOURCE_FILE_AT_LINE (128)) ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_unifiedTypeMapProxyList enumerator_6439 (enumerator_6371.current_mArgumentTypeList (HERE), true) ;
          //--- simple foreach instruction
          while (enumerator_6439.hasCurrentObject ()) {
            //-------- @appendInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_6439.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (130)) COMMA_SOURCE_FILE_AT_LINE (130)) COMMA_SOURCE_FILE_AT_LINE (130)) ;
            enumerator_6439.gotoNextObject () ;
          }
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_6371.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (132)) COMMA_SOURCE_FILE_AT_LINE (132)) COMMA_SOURCE_FILE_AT_LINE (132)) ;
          enumerator_6371.gotoNextObject () ;
        }
        //-------- @errorInstructionForGeneration
        //--- @ifExpressionForGeneration
        GALGAS_string temp_3 ;
        if (GALGAS_bool (kIsStrictSup, var_readerMap.reader_count (SOURCE_FILE_AT_LINE (136)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
          temp_3 = GALGAS_string ("readers are") ;
        }else{
          temp_3 = GALGAS_string ("reader is") ;
        }
        GALGAS_location location_4 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the '@").operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (135)) COMMA_SOURCE_FILE_AT_LINE (135)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (135)).operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (135)) COMMA_SOURCE_FILE_AT_LINE (135)).operator_concat (GALGAS_string ("' reader; available ") COMMA_SOURCE_FILE_AT_LINE (135)).operator_concat (temp_3 COMMA_SOURCE_FILE_AT_LINE (136)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (137)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (137)) COMMA_SOURCE_FILE_AT_LINE (134)) ;
        var_readerFormalArgumentTypeList.drop () ; // Release error dropped variable
        var_hasCompilerArgument.drop () ; // Release error dropped variable
        var_returnedType.drop () ; // Release error dropped variable
        var_isCategory.drop () ; // Release error dropped variable
      }
    }
  }
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressionList.reader_length (SOURCE_FILE_AT_LINE (143)).objectCompare (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (143)))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_5 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (144)) COMMA_SOURCE_FILE_AT_LINE (144)).operator_concat (GALGAS_string ("' reader of '@") COMMA_SOURCE_FILE_AT_LINE (144)).operator_concat (var_receiverType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (144)) COMMA_SOURCE_FILE_AT_LINE (144)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (144)).operator_concat (var_readerFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (145)).reader_string (SOURCE_FILE_AT_LINE (145)) COMMA_SOURCE_FILE_AT_LINE (145)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (145)).operator_concat (object->mAttribute_mExpressionList.reader_length (SOURCE_FILE_AT_LINE (146)).reader_string (SOURCE_FILE_AT_LINE (146)) COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (146)) COMMA_SOURCE_FILE_AT_LINE (144)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (148)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_templateExpressionListAST enumerator_7406 (object->mAttribute_mExpressionList, true) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_7438 (var_readerFormalArgumentTypeList, true) ;
    //--- simple foreach instruction
    while (enumerator_7406.hasCurrentObject () && enumerator_7438.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_exp ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) enumerator_7406.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (151)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_7438.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (152)), enumerator_7406.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (152)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @addAssignInstructionForGeneration
      var_constructorEffectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (153)) ;
      enumerator_7406.gotoNextObject () ;
      enumerator_7438.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_readerCallExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mReaderName.reader_location (SOURCE_FILE_AT_LINE (157)), var_isCategory, var_receiverExpression, var_fieldList, object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (161)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (155)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateReaderCallInExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateReaderCallInExpressionAST.mSlotID,
                                                  categoryMethod_templateReaderCallInExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateReaderCallInExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateReaderCallInExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateConstructorAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateConstructorAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                              const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateConstructorAST * object = (const cPtr_templateConstructorAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateConstructorAST) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_constructorType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (176)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_constructorMap var_constructorMap = var_constructorType.reader_mConstructorMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (178)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_hasCompilerArgument ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_constructorFormalArgumentTypeList ;
  //-------- @readOnlyWithInstructionForGeneration
  const cMapElement_constructorMap * objectArray_8836 = (const cMapElement_constructorMap *) var_constructorMap.readAccessForWithInstruction_hasKey (object->mAttribute_mConstructorName.reader_string (SOURCE_FILE_AT_LINE (183))) ;
  if (NULL != objectArray_8836) {
      macroValidSharedObject (objectArray_8836, const cMapElement_constructorMap) ;
    //-------- @assignmentInstructionForGeneration
    var_constructorFormalArgumentTypeList = objectArray_8836->mAttribute_mArgumentTypeList ;
    //-------- @assignmentInstructionForGeneration
    var_hasCompilerArgument = objectArray_8836->mAttribute_mHasCompilerArgument ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = objectArray_8836->mAttribute_mReturnedType ;
  }else{
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsEqual, var_constructorMap.reader_count (SOURCE_FILE_AT_LINE (188)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_0 (object->mAttribute_mConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_0, GALGAS_string ("the '@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (190)) COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (GALGAS_string ("' type does not define any constructor") COMMA_SOURCE_FILE_AT_LINE (190)) COMMA_SOURCE_FILE_AT_LINE (189)) ;
      var_constructorFormalArgumentTypeList.drop () ; // Release error dropped variable
      var_hasCompilerArgument.drop () ; // Release error dropped variable
      var_returnedType.drop () ; // Release error dropped variable
    }else{
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("") ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_constructorMap enumerator_9317 (var_constructorMap, true) ;
      //--- simple foreach instruction
      while (enumerator_9317.hasCurrentObject ()) {
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_9317.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (196)) COMMA_SOURCE_FILE_AT_LINE (196)) COMMA_SOURCE_FILE_AT_LINE (196)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_unifiedTypeMapProxyList enumerator_9385 (enumerator_9317.current_mArgumentTypeList (HERE), true) ;
        //--- simple foreach instruction
        while (enumerator_9385.hasCurrentObject ()) {
          //-------- @appendInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string (" \?@").operator_concat (enumerator_9385.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (198)) COMMA_SOURCE_FILE_AT_LINE (198)) COMMA_SOURCE_FILE_AT_LINE (198)) ;
          enumerator_9385.gotoNextObject () ;
        }
        //-------- @appendInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string (" -> @").operator_concat (enumerator_9317.current_mReturnedType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (200)) COMMA_SOURCE_FILE_AT_LINE (200)) COMMA_SOURCE_FILE_AT_LINE (200)) ;
        enumerator_9317.gotoNextObject () ;
      }
      //-------- @errorInstructionForGeneration
      //--- @ifExpressionForGeneration
      GALGAS_string temp_1 ;
      if (GALGAS_bool (kIsStrictSup, var_constructorMap.reader_count (SOURCE_FILE_AT_LINE (204)).objectCompare (GALGAS_uint ((PMUInt32) 1U))).isValidAndTrue ()) {
        temp_1 = GALGAS_string ("available constructors are") ;
      }else{
        temp_1 = GALGAS_string ("available constructor is") ;
      }
      GALGAS_location location_2 (object->mAttribute_mConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the '@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (203)) COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (GALGAS_string ("' type does not define the '") COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (object->mAttribute_mConstructorName.reader_string (SOURCE_FILE_AT_LINE (203)) COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (GALGAS_string ("' constructor; ") COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (temp_1 COMMA_SOURCE_FILE_AT_LINE (204)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (205)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (205)) COMMA_SOURCE_FILE_AT_LINE (202)) ;
      var_constructorFormalArgumentTypeList.drop () ; // Release error dropped variable
      var_hasCompilerArgument.drop () ; // Release error dropped variable
      var_returnedType.drop () ; // Release error dropped variable
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionListForGeneration var_constructorEffectiveParameterList ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, object->mAttribute_mExpressionList.reader_length (SOURCE_FILE_AT_LINE (212)).objectCompare (var_constructorFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (212)))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_3 (object->mAttribute_mConstructorName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("calling the '").operator_concat (object->mAttribute_mConstructorName.reader_string (SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (214)).operator_concat (GALGAS_string ("' constructor of '@") COMMA_SOURCE_FILE_AT_LINE (214)).operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (214)).operator_concat (GALGAS_string ("' requires ") COMMA_SOURCE_FILE_AT_LINE (214)).operator_concat (var_constructorFormalArgumentTypeList.reader_length (SOURCE_FILE_AT_LINE (215)).reader_string (SOURCE_FILE_AT_LINE (215)) COMMA_SOURCE_FILE_AT_LINE (215)).operator_concat (GALGAS_string (" parameter(s), while this call has ") COMMA_SOURCE_FILE_AT_LINE (215)).operator_concat (object->mAttribute_mExpressionList.reader_length (SOURCE_FILE_AT_LINE (216)).reader_string (SOURCE_FILE_AT_LINE (216)) COMMA_SOURCE_FILE_AT_LINE (216)).operator_concat (GALGAS_string (" parameter(s)") COMMA_SOURCE_FILE_AT_LINE (216)) COMMA_SOURCE_FILE_AT_LINE (213)) ;
    var_constructorEffectiveParameterList.drop () ; // Release error dropped variable
  }else{
    //-------- @assignmentInstructionForGeneration
    var_constructorEffectiveParameterList = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (219)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_templateExpressionListAST enumerator_10500 (object->mAttribute_mExpressionList, true) ;
    cEnumerator_unifiedTypeMapProxyList enumerator_10537 (var_constructorFormalArgumentTypeList, true) ;
    //--- simple foreach instruction
    while (enumerator_10500.hasCurrentObject () && enumerator_10537.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_exp ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) enumerator_10500.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, var_exp, inCompiler COMMA_SOURCE_FILE_AT_LINE (222)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_10537.current_mType (HERE), var_exp.reader_mType (SOURCE_FILE_AT_LINE (223)), enumerator_10500.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (223)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @addAssignInstructionForGeneration
      var_constructorEffectiveParameterList.addAssign_operation (var_exp COMMA_SOURCE_FILE_AT_LINE (224)) ;
      enumerator_10500.gotoNextObject () ;
      enumerator_10537.gotoNextObject () ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_constructorExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mConstructorName.reader_location (SOURCE_FILE_AT_LINE (230)), var_constructorType, object->mAttribute_mConstructorName.reader_string (SOURCE_FILE_AT_LINE (232)), var_constructorEffectiveParameterList, var_hasCompilerArgument COMMA_SOURCE_FILE_AT_LINE (228)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateConstructorAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateConstructorAST.mSlotID,
                                                  categoryMethod_templateConstructorAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateConstructorAST_templateExpressionAnalysis (defineCategoryMethod_templateConstructorAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateFileWrapperWithStaticPathAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateFileWrapperWithStaticPathAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                            const GALGAS_templateAnalysisContext /* constinArgument_inAnalysisContext */,
                                                                                            GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateFileWrapperWithStaticPathAST * object = (const cPtr_templateFileWrapperWithStaticPathAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateFileWrapperWithStaticPathAST) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mFileWrapperName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("unhandled @templateFileWrapperWithStaticPathAST templateExpressionAnalysis") COMMA_SOURCE_FILE_AT_LINE (246)) ;
  outArgument_outExpression.drop () ; // Release error dropped variable
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateFileWrapperWithStaticPathAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateFileWrapperWithStaticPathAST.mSlotID,
                                                  categoryMethod_templateFileWrapperWithStaticPathAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateFileWrapperWithStaticPathAST_templateExpressionAnalysis (defineCategoryMethod_templateFileWrapperWithStaticPathAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateFileWrapperTemplateCallAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateFileWrapperTemplateCallAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                          const GALGAS_templateAnalysisContext /* constinArgument_inAnalysisContext */,
                                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateFileWrapperTemplateCallAST * object = (const cPtr_templateFileWrapperTemplateCallAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateFileWrapperTemplateCallAST) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mFileWrapperName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("unhandled @templateFileWrapperTemplateCallAST templateExpressionAnalysis") COMMA_SOURCE_FILE_AT_LINE (262)) ;
  outArgument_outExpression.drop () ; // Release error dropped variable
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateFileWrapperTemplateCallAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateFileWrapperTemplateCallAST.mSlotID,
                                                  categoryMethod_templateFileWrapperTemplateCallAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateFileWrapperTemplateCallAST_templateExpressionAnalysis (defineCategoryMethod_templateFileWrapperTemplateCallAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateAndOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateAndOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                               const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateAndOperationAST * object = (const cPtr_templateAndOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateAndOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (291)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (294)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (296)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (299)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (300)).operator_and (function_binaryAndOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (300)) COMMA_SOURCE_FILE_AT_LINE (300)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("&"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (297)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_andExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (306)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateAndOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateAndOperationAST.mSlotID,
                                                  categoryMethod_templateAndOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateAndOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateAndOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateOrOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateOrOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                              const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateOrOperationAST * object = (const cPtr_templateOrOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateOrOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (322)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (325)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (327)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (330)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (331)).operator_and (function_binaryOrOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (331)) COMMA_SOURCE_FILE_AT_LINE (331)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("|"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (328)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_orExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (337)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateOrOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateOrOperationAST.mSlotID,
                                                  categoryMethod_templateOrOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateOrOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateOrOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateXorOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateXorOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                               const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateXorOperationAST * object = (const cPtr_templateXorOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateXorOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (353)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (356)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (358)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (361)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (362)).operator_and (function_binaryXorOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (362)) COMMA_SOURCE_FILE_AT_LINE (362)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("^"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (359)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_xorExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (368)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateXorOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateXorOperationAST.mSlotID,
                                                  categoryMethod_templateXorOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateXorOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateXorOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateConcatOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateConcatOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                  const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateConcatOperationAST * object = (const cPtr_templateConcatOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateConcatOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (384)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (387)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (389)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (392)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (393)).operator_and (function_binaryConcatOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (393)) COMMA_SOURCE_FILE_AT_LINE (393)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("."), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (390)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_concatExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (399)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateConcatOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateConcatOperationAST.mSlotID,
                                                  categoryMethod_templateConcatOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateConcatOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateConcatOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateTrueBoolAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateTrueBoolAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                           const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                           GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateTrueBoolAST * object = (const cPtr_templateTrueBoolAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateTrueBoolAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_trueExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mLocation COMMA_SOURCE_FILE_AT_LINE (413)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateTrueBoolAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateTrueBoolAST.mSlotID,
                                                  categoryMethod_templateTrueBoolAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateTrueBoolAST_templateExpressionAnalysis (defineCategoryMethod_templateTrueBoolAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateFalseBoolAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateFalseBoolAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                            const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateFalseBoolAST * object = (const cPtr_templateFalseBoolAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateFalseBoolAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_falseExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mLocation COMMA_SOURCE_FILE_AT_LINE (422)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateFalseBoolAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateFalseBoolAST.mSlotID,
                                                  categoryMethod_templateFalseBoolAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateFalseBoolAST_templateExpressionAnalysis (defineCategoryMethod_templateFalseBoolAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateLiteralStringExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateLiteralStringExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                          const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateLiteralStringExpressionAST * object = (const cPtr_templateLiteralStringExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateLiteralStringExpressionAST) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_s = GALGAS_string ("") ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_stringlist enumerator_18347 (object->mAttribute_mLiteralStringList, true) ;
  //--- simple foreach instruction
  while (enumerator_18347.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    var_s.dotAssign_operation (enumerator_18347.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (433)) ;
    enumerator_18347.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalStringExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mLocation, var_s COMMA_SOURCE_FILE_AT_LINE (435)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateLiteralStringExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateLiteralStringExpressionAST.mSlotID,
                                                  categoryMethod_templateLiteralStringExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateLiteralStringExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateLiteralStringExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateLiteralUIntExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateLiteralUIntExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                        const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                        GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateLiteralUIntExpressionAST * object = (const cPtr_templateLiteralUIntExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateLiteralUIntExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalUIntExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType, object->mAttribute_mLiteralInt.reader_location (SOURCE_FILE_AT_LINE (446)), object->mAttribute_mLiteralInt.reader_uint (SOURCE_FILE_AT_LINE (447)) COMMA_SOURCE_FILE_AT_LINE (444)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateLiteralUIntExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateLiteralUIntExpressionAST.mSlotID,
                                                  categoryMethod_templateLiteralUIntExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateLiteralUIntExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateLiteralUIntExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateLiteralSIntExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateLiteralSIntExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                        const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                        GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateLiteralSIntExpressionAST * object = (const cPtr_templateLiteralSIntExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateLiteralSIntExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalSIntExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mSIntType, object->mAttribute_mLiteralInt.reader_location (SOURCE_FILE_AT_LINE (459)), object->mAttribute_mLiteralInt.reader_sint (SOURCE_FILE_AT_LINE (460)) COMMA_SOURCE_FILE_AT_LINE (457)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateLiteralSIntExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateLiteralSIntExpressionAST.mSlotID,
                                                  categoryMethod_templateLiteralSIntExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateLiteralSIntExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateLiteralSIntExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateLiteralUInt64ExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateLiteralUInt_36__34_ExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                                const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                                GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                                C_Compiler * /* inCompiler */
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateLiteralUInt_36__34_ExpressionAST * object = (const cPtr_templateLiteralUInt_36__34_ExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateLiteralUInt_36__34_ExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalUInt_36__34_ExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUInt_36__34_Type, object->mAttribute_mLiteralInt.reader_location (SOURCE_FILE_AT_LINE (472)), object->mAttribute_mLiteralInt.reader_uint_36__34_ (SOURCE_FILE_AT_LINE (473)) COMMA_SOURCE_FILE_AT_LINE (470)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateLiteralUInt_36__34_ExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateLiteralUInt_36__34_ExpressionAST.mSlotID,
                                                  categoryMethod_templateLiteralUInt_36__34_ExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateLiteralUInt_36__34_ExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateLiteralUInt_36__34_ExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateLiteralSInt64ExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateLiteralSInt_36__34_ExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                                const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                                GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                                C_Compiler * /* inCompiler */
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateLiteralSInt_36__34_ExpressionAST * object = (const cPtr_templateLiteralSInt_36__34_ExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateLiteralSInt_36__34_ExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalSInt_36__34_ExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mSInt_36__34_Type, object->mAttribute_mLiteralInt.reader_location (SOURCE_FILE_AT_LINE (485)), object->mAttribute_mLiteralInt.reader_sint_36__34_ (SOURCE_FILE_AT_LINE (486)) COMMA_SOURCE_FILE_AT_LINE (483)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateLiteralSInt_36__34_ExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateLiteralSInt_36__34_ExpressionAST.mSlotID,
                                                  categoryMethod_templateLiteralSInt_36__34_ExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateLiteralSInt_36__34_ExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateLiteralSInt_36__34_ExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateLiteralCharExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateLiteralCharExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                        const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                        GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateLiteralCharExpressionAST * object = (const cPtr_templateLiteralCharExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateLiteralCharExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalCharExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mCharType, object->mAttribute_mLiteralChar.reader_location (SOURCE_FILE_AT_LINE (498)), object->mAttribute_mLiteralChar.reader_char (SOURCE_FILE_AT_LINE (499)) COMMA_SOURCE_FILE_AT_LINE (496)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateLiteralCharExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateLiteralCharExpressionAST.mSlotID,
                                                  categoryMethod_templateLiteralCharExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateLiteralCharExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateLiteralCharExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateLiteralDoubleExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateLiteralDoubleExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                          const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                          GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateLiteralDoubleExpressionAST * object = (const cPtr_templateLiteralDoubleExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateLiteralDoubleExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalDoubleExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mDoubleType, object->mAttribute_mLiteralDouble.reader_location (SOURCE_FILE_AT_LINE (511)), object->mAttribute_mLiteralDouble.reader_double (SOURCE_FILE_AT_LINE (512)) COMMA_SOURCE_FILE_AT_LINE (509)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateLiteralDoubleExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateLiteralDoubleExpressionAST.mSlotID,
                                                  categoryMethod_templateLiteralDoubleExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateLiteralDoubleExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateLiteralDoubleExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateIfThenElseExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateIfThenElseExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                       const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateIfThenElseExpressionAST * object = (const cPtr_templateIfThenElseExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateIfThenElseExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_if_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mIfExpression.ptr (), constinArgument_inAnalysisContext, var_if_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (524)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_then_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mThenExpression.ptr (), constinArgument_inAnalysisContext, var_then_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (527)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_else_5F_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mElseExpression.ptr (), constinArgument_inAnalysisContext, var_else_5F_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (530)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, var_if_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (532)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (532)).objectCompare (GALGAS_string ("bool"))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("the test expression type is '@").operator_concat (var_if_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (534)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (534)) COMMA_SOURCE_FILE_AT_LINE (534)).operator_concat (GALGAS_string ("', it should be '@bool'") COMMA_SOURCE_FILE_AT_LINE (534)) COMMA_SOURCE_FILE_AT_LINE (533)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_then_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (537)).objectCompare (var_else_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (537)))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand expression types are '@").operator_concat (var_then_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (539)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (539)) COMMA_SOURCE_FILE_AT_LINE (539)).operator_concat (GALGAS_string ("' and '@") COMMA_SOURCE_FILE_AT_LINE (539)).operator_concat (var_else_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (539)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (539)) COMMA_SOURCE_FILE_AT_LINE (539)).operator_concat (GALGAS_string ("': they should be the same") COMMA_SOURCE_FILE_AT_LINE (539)) COMMA_SOURCE_FILE_AT_LINE (538)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else{
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_ifExpressionForGeneration::constructor_new (var_then_5F_expression.reader_mType (SOURCE_FILE_AT_LINE (545)), object->mAttribute_mOperatorLocation, var_if_5F_expression, var_then_5F_expression, var_else_5F_expression COMMA_SOURCE_FILE_AT_LINE (544)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateIfThenElseExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateIfThenElseExpressionAST.mSlotID,
                                                  categoryMethod_templateIfThenElseExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateIfThenElseExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateIfThenElseExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateNotOperatorAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateNotOperatorAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                              const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                              GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateNotOperatorAST * object = (const cPtr_templateNotOperatorAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateNotOperatorAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (562)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (564)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_type.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (565)).operator_and (function_unaryNotOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (565)) COMMA_SOURCE_FILE_AT_LINE (565)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand type is '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (567)) COMMA_SOURCE_FILE_AT_LINE (567)).operator_concat (GALGAS_string ("' and does not support the 'not' operator") COMMA_SOURCE_FILE_AT_LINE (567)) COMMA_SOURCE_FILE_AT_LINE (566)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_notExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (572)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateNotOperatorAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateNotOperatorAST.mSlotID,
                                                  categoryMethod_templateNotOperatorAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateNotOperatorAST_templateExpressionAnalysis (defineCategoryMethod_templateNotOperatorAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateLogicalNegateAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateLogicalNegateAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateLogicalNegateAST * object = (const cPtr_templateLogicalNegateAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateLogicalNegateAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (588)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (590)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_type.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (591)).operator_and (function_unaryTildeOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (591)) COMMA_SOURCE_FILE_AT_LINE (591)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand type is '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (593)) COMMA_SOURCE_FILE_AT_LINE (593)).operator_concat (GALGAS_string ("' and does not support the '~' operator") COMMA_SOURCE_FILE_AT_LINE (593)) COMMA_SOURCE_FILE_AT_LINE (592)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_tildeExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (598)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateLogicalNegateAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateLogicalNegateAST.mSlotID,
                                                  categoryMethod_templateLogicalNegateAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateLogicalNegateAST_templateExpressionAnalysis (defineCategoryMethod_templateLogicalNegateAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateOptionAccessAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateOptionAccessAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                               const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateOptionAccessAST * object = (const cPtr_templateOptionAccessAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateOptionAccessAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_commandLineOptionMap var_boolOptionMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_commandLineOptionMap var_uintOptionMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_commandLineOptionMap var_stringOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis.method_searchKey (object->mAttribute_mOptionComponentName, var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (615)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = var_boolOptionMap.reader_hasKey (object->mAttribute_mOptionName.reader_string (SOURCE_FILE_AT_LINE (621)) COMMA_SOURCE_FILE_AT_LINE (621)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_returnedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType ;
  //-------- @ifInstructionForGeneration
  if (var_found.operator_not (SOURCE_FILE_AT_LINE (623)).isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    var_found = var_uintOptionMap.reader_hasKey (object->mAttribute_mOptionName.reader_string (SOURCE_FILE_AT_LINE (624)) COMMA_SOURCE_FILE_AT_LINE (624)) ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType ;
  }
  //-------- @ifInstructionForGeneration
  if (var_found.operator_not (SOURCE_FILE_AT_LINE (627)).isValidAndTrue ()) {
    //-------- @assignmentInstructionForGeneration
    var_found = var_stringOptionMap.reader_hasKey (object->mAttribute_mOptionName.reader_string (SOURCE_FILE_AT_LINE (628)) COMMA_SOURCE_FILE_AT_LINE (628)) ;
    //-------- @assignmentInstructionForGeneration
    var_returnedType = constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType ;
  }
  //-------- @ifInstructionForGeneration
  if (var_found.isValidAndTrue ()) {
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsEqual, object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (632)).objectCompare (GALGAS_string ("value"))).isValidAndTrue ()) {
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_optionValueExpressionForGeneration::constructor_new (var_returnedType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (635)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (636)), object->mAttribute_mOptionName.reader_string (SOURCE_FILE_AT_LINE (637)) COMMA_SOURCE_FILE_AT_LINE (633)) ;
    }else{
      //-------- @ifInstructionForGeneration
      if (GALGAS_bool (kIsEqual, object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (639)).objectCompare (GALGAS_string ("char"))).isValidAndTrue ()) {
        //-------- @assignmentInstructionForGeneration
        outArgument_outExpression = GALGAS_optionCharExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mCharType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (642)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (643)), object->mAttribute_mOptionName.reader_string (SOURCE_FILE_AT_LINE (644)) COMMA_SOURCE_FILE_AT_LINE (640)) ;
      }else{
        //-------- @ifInstructionForGeneration
        if (GALGAS_bool (kIsEqual, object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (646)).objectCompare (GALGAS_string ("string"))).isValidAndTrue ()) {
          //-------- @assignmentInstructionForGeneration
          outArgument_outExpression = GALGAS_optionStringExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (649)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (650)), object->mAttribute_mOptionName.reader_string (SOURCE_FILE_AT_LINE (651)) COMMA_SOURCE_FILE_AT_LINE (647)) ;
        }else{
          //-------- @ifInstructionForGeneration
          if (GALGAS_bool (kIsEqual, object->mAttribute_mReaderName.reader_string (SOURCE_FILE_AT_LINE (653)).objectCompare (GALGAS_string ("comment"))).isValidAndTrue ()) {
            //-------- @assignmentInstructionForGeneration
            outArgument_outExpression = GALGAS_optionCommentExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mStringType, object->mAttribute_mOptionComponentName.reader_location (SOURCE_FILE_AT_LINE (656)), object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (657)), object->mAttribute_mOptionName.reader_string (SOURCE_FILE_AT_LINE (658)) COMMA_SOURCE_FILE_AT_LINE (654)) ;
          }else{
            //-------- @errorInstructionForGeneration
            GALGAS_location location_0 (object->mAttribute_mReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_0, GALGAS_string ("only the 'value', 'char', 'string' and 'comment' readers are defined for an option") COMMA_SOURCE_FILE_AT_LINE (661)) ;
            outArgument_outExpression.drop () ; // Release error dropped variable
          }
        }
      }
    }
  }else{
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = GALGAS_string ("") ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_commandLineOptionMap enumerator_26798 (var_boolOptionMap, true) ;
    //--- simple foreach instruction
    while (enumerator_26798.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (enumerator_26798.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (666)) COMMA_SOURCE_FILE_AT_LINE (666)).operator_concat (GALGAS_string ("' @bool option;") COMMA_SOURCE_FILE_AT_LINE (666)) COMMA_SOURCE_FILE_AT_LINE (666)) ;
      enumerator_26798.gotoNextObject () ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_commandLineOptionMap enumerator_26894 (var_uintOptionMap, true) ;
    //--- simple foreach instruction
    while (enumerator_26894.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (enumerator_26894.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (669)) COMMA_SOURCE_FILE_AT_LINE (669)).operator_concat (GALGAS_string ("' @uint option;") COMMA_SOURCE_FILE_AT_LINE (669)) COMMA_SOURCE_FILE_AT_LINE (669)) ;
      enumerator_26894.gotoNextObject () ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_commandLineOptionMap enumerator_26992 (var_stringOptionMap, true) ;
    //--- simple foreach instruction
    while (enumerator_26992.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (enumerator_26992.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (672)) COMMA_SOURCE_FILE_AT_LINE (672)).operator_concat (GALGAS_string ("' @string option;") COMMA_SOURCE_FILE_AT_LINE (672)) COMMA_SOURCE_FILE_AT_LINE (672)) ;
      enumerator_26992.gotoNextObject () ;
    }
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mOptionName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (object->mAttribute_mOptionComponentName.reader_string (SOURCE_FILE_AT_LINE (675)) COMMA_SOURCE_FILE_AT_LINE (675)).operator_concat (GALGAS_string ("' option component does not define the '") COMMA_SOURCE_FILE_AT_LINE (675)).operator_concat (object->mAttribute_mOptionName.reader_string (SOURCE_FILE_AT_LINE (675)) COMMA_SOURCE_FILE_AT_LINE (675)).operator_concat (GALGAS_string ("' option; available options:") COMMA_SOURCE_FILE_AT_LINE (675)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (675)) COMMA_SOURCE_FILE_AT_LINE (674)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateOptionAccessAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateOptionAccessAST.mSlotID,
                                                  categoryMethod_templateOptionAccessAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateOptionAccessAST_templateExpressionAnalysis (defineCategoryMethod_templateOptionAccessAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateFunctionCallAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateFunctionCallAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                               const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateFunctionCallAST * object = (const cPtr_templateFunctionCallAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateFunctionCallAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxyList var_functionSignature ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_resultType ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mFunctionMap.method_searchKey (object->mAttribute_mFunctionName, var_functionSignature, var_resultType, inCompiler COMMA_SOURCE_FILE_AT_LINE (692)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, var_functionSignature.reader_length (SOURCE_FILE_AT_LINE (694)).objectCompare (object->mAttribute_mExpressionList.reader_length (SOURCE_FILE_AT_LINE (694)))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_0 (object->mAttribute_mFunctionName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_0, GALGAS_string ("the '").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (696)) COMMA_SOURCE_FILE_AT_LINE (696)).operator_concat (GALGAS_string ("' function header declares ") COMMA_SOURCE_FILE_AT_LINE (696)).operator_concat (var_functionSignature.reader_length (SOURCE_FILE_AT_LINE (696)).reader_string (SOURCE_FILE_AT_LINE (696)) COMMA_SOURCE_FILE_AT_LINE (696)).operator_concat (GALGAS_string (" formal parameter(s), but this function call names ") COMMA_SOURCE_FILE_AT_LINE (697)).operator_concat (object->mAttribute_mExpressionList.reader_length (SOURCE_FILE_AT_LINE (697)).reader_string (SOURCE_FILE_AT_LINE (697)) COMMA_SOURCE_FILE_AT_LINE (697)).operator_concat (GALGAS_string (" effective argument(s)") COMMA_SOURCE_FILE_AT_LINE (698)) COMMA_SOURCE_FILE_AT_LINE (695)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_semanticExpressionListForGeneration var_semanticExpressionListForGeneration = GALGAS_semanticExpressionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (702)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_unifiedTypeMapProxyList enumerator_28404 (var_functionSignature, true) ;
    cEnumerator_templateExpressionListAST enumerator_28423 (object->mAttribute_mExpressionList, true) ;
    //--- simple foreach instruction
    while (enumerator_28404.hasCurrentObject () && enumerator_28423.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_semanticExpressionForGeneration var_expression ;
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) enumerator_28423.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (705)) ;
      //-------- END @methodCallInstructionForGeneration
      { //-------- @routineCallInstructionForGeneration
      routine_checkAssignmentTypes (enumerator_28404.current_mType (HERE), var_expression.reader_mType (SOURCE_FILE_AT_LINE (706)), enumerator_28423.current_mEndOfExpressionLocation (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (706)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @addAssignInstructionForGeneration
      var_semanticExpressionListForGeneration.addAssign_operation (var_expression COMMA_SOURCE_FILE_AT_LINE (707)) ;
      enumerator_28404.gotoNextObject () ;
      enumerator_28423.gotoNextObject () ;
    }
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_functionCallExpressionForGeneration::constructor_new (var_resultType, object->mAttribute_mFunctionName.reader_location (SOURCE_FILE_AT_LINE (711)), object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (712)), var_semanticExpressionListForGeneration COMMA_SOURCE_FILE_AT_LINE (709)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateFunctionCallAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateFunctionCallAST.mSlotID,
                                                  categoryMethod_templateFunctionCallAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateFunctionCallAST_templateExpressionAnalysis (defineCategoryMethod_templateFunctionCallAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateCategoryTemplateCallAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateCategoryTemplateCallAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                       const GALGAS_templateAnalysisContext /* constinArgument_inAnalysisContext */,
                                                                                       GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateCategoryTemplateCallAST * object = (const cPtr_templateCategoryTemplateCallAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateCategoryTemplateCallAST) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mTemplateName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("INTERNAL ERROR: @templateCategoryTemplateCallAST templateExpressionAnalysis not implemented yet") COMMA_SOURCE_FILE_AT_LINE (726)) ;
  outArgument_outExpression.drop () ; // Release error dropped variable
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateCategoryTemplateCallAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateCategoryTemplateCallAST.mSlotID,
                                                  categoryMethod_templateCategoryTemplateCallAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateCategoryTemplateCallAST_templateExpressionAnalysis (defineCategoryMethod_templateCategoryTemplateCallAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateVarInExpressionAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateVarInExpressionAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                  const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateVarInExpressionAST * object = (const cPtr_templateVarInExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateVarInExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_unifiedTypeMapProxy var_type ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_sourceVariableCppName ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inAnalysisContext.mAttribute_mTemplateVariableMap.method_searchKey (object->mAttribute_mVarName, var_type, var_sourceVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (742)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @foreachInstructionForGeneration
  cEnumerator_lstringlist enumerator_30106 (object->mAttribute_mStructAttributeList, true) ;
  //--- simple foreach instruction
  while (enumerator_30106.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_attributeMap var_attributeMap = var_type.reader_mAttributeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (744)) ;
    //-------- @methodCallInstructionForGeneration
    var_attributeMap.method_searchKey (enumerator_30106.current_mValue (HERE), var_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (745)) ;
    //-------- END @methodCallInstructionForGeneration
    enumerator_30106.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_varInExpressionForGeneration::constructor_new (var_type, object->mAttribute_mVarName.reader_location (SOURCE_FILE_AT_LINE (749)), var_sourceVariableCppName, var_sourceVariableCppName, object->mAttribute_mStructAttributeList COMMA_SOURCE_FILE_AT_LINE (747)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateVarInExpressionAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateVarInExpressionAST.mSlotID,
                                                  categoryMethod_templateVarInExpressionAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateVarInExpressionAST_templateExpressionAnalysis (defineCategoryMethod_templateVarInExpressionAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateAddOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateAddOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                               const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateAddOperationAST * object = (const cPtr_templateAddOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateAddOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (766)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (769)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (771)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (774)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (775)).operator_and (function_binaryAddOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (775)) COMMA_SOURCE_FILE_AT_LINE (775)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("+"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (772)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_addExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (781)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateAddOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateAddOperationAST.mSlotID,
                                                  categoryMethod_templateAddOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateAddOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateAddOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateSubOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateSubOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                               const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateSubOperationAST * object = (const cPtr_templateSubOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateSubOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (799)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (802)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (804)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (807)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (808)).operator_and (function_binarySubOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (808)) COMMA_SOURCE_FILE_AT_LINE (808)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("-"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (805)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_subExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (814)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateSubOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateSubOperationAST.mSlotID,
                                                  categoryMethod_templateSubOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateSubOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateSubOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateMultiplyOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateMultiplyOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                    const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateMultiplyOperationAST * object = (const cPtr_templateMultiplyOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateMultiplyOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (832)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (835)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (837)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (840)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (841)).operator_and (function_binaryMulOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (841)) COMMA_SOURCE_FILE_AT_LINE (841)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("*"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (838)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_multiplicationExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (847)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateMultiplyOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateMultiplyOperationAST.mSlotID,
                                                  categoryMethod_templateMultiplyOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateMultiplyOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateMultiplyOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateDivideOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateDivideOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                  const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateDivideOperationAST * object = (const cPtr_templateDivideOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateDivideOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (865)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (868)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (870)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (873)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (874)).operator_and (function_binaryDivOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (874)) COMMA_SOURCE_FILE_AT_LINE (874)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("/"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (871)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_divisionExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (880)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateDivideOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateDivideOperationAST.mSlotID,
                                                  categoryMethod_templateDivideOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateDivideOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateDivideOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateModuloOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateModuloOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                  const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                  GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateModuloOperationAST * object = (const cPtr_templateModuloOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateModuloOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (898)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (901)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (903)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkDiadicOperator (var_leftType, var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (906)), GALGAS_bool (kIsNotEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (907)).operator_and (function_binaryModOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (907)) COMMA_SOURCE_FILE_AT_LINE (907)).objectCompare (GALGAS_uint ((PMUInt32) 0U))), GALGAS_string ("mod"), object->mAttribute_mOperatorLocation, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (904)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_moduloExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (913)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateModuloOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateModuloOperationAST.mSlotID,
                                                  categoryMethod_templateModuloOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateModuloOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateModuloOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateUnaryMinusOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateUnaryMinusOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                      const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                      GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateUnaryMinusOperationAST * object = (const cPtr_templateUnaryMinusOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateUnaryMinusOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (931)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_type = var_expression.reader_mType (SOURCE_FILE_AT_LINE (933)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_type.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (934)).operator_and (function_unaryMinusOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (934)) COMMA_SOURCE_FILE_AT_LINE (934)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("operand type is '@").operator_concat (var_type.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (936)) COMMA_SOURCE_FILE_AT_LINE (936)).operator_concat (GALGAS_string ("' and does not support the unary minus operator") COMMA_SOURCE_FILE_AT_LINE (936)) COMMA_SOURCE_FILE_AT_LINE (935)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_unaryMinusExpressionForGeneration::constructor_new (var_type, object->mAttribute_mOperatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (941)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateUnaryMinusOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateUnaryMinusOperationAST.mSlotID,
                                                  categoryMethod_templateUnaryMinusOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateUnaryMinusOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateUnaryMinusOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateEqualTestAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateEqualTestAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                            const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                            GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateEqualTestAST * object = (const cPtr_templateEqualTestAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateEqualTestAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (959)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (962)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (964)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (965)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, var_leftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (966)).reader_string (SOURCE_FILE_AT_LINE (966)).objectCompare (var_rightType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (966)).reader_string (SOURCE_FILE_AT_LINE (966)))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (968)).reader_string (SOURCE_FILE_AT_LINE (968)) COMMA_SOURCE_FILE_AT_LINE (968)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (968)).operator_concat (var_rightType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (968)).reader_string (SOURCE_FILE_AT_LINE (968)) COMMA_SOURCE_FILE_AT_LINE (968)).operator_concat (GALGAS_string ("': '==' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (968)) COMMA_SOURCE_FILE_AT_LINE (967)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_equalExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (973)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateEqualTestAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateEqualTestAST.mSlotID,
                                                  categoryMethod_templateEqualTestAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateEqualTestAST_templateExpressionAnalysis (defineCategoryMethod_templateEqualTestAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateNonEqualTestAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateNonEqualTestAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                               const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                               GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateNonEqualTestAST * object = (const cPtr_templateNonEqualTestAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateNonEqualTestAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (990)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (993)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (995)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (996)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, var_leftType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (997)).reader_string (SOURCE_FILE_AT_LINE (997)).objectCompare (var_rightType.reader_lkey (inCompiler COMMA_SOURCE_FILE_AT_LINE (997)).reader_string (SOURCE_FILE_AT_LINE (997)))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (999)) COMMA_SOURCE_FILE_AT_LINE (999)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (999)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (999)) COMMA_SOURCE_FILE_AT_LINE (999)).operator_concat (GALGAS_string ("': '!=' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (999)) COMMA_SOURCE_FILE_AT_LINE (998)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_notEqualExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1004)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateNonEqualTestAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateNonEqualTestAST.mSlotID,
                                                  categoryMethod_templateNonEqualTestAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateNonEqualTestAST_templateExpressionAnalysis (defineCategoryMethod_templateNonEqualTestAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateStrictInfTestAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateStrictInfTestAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateStrictInfTestAST * object = (const cPtr_templateStrictInfTestAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateStrictInfTestAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1021)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1024)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1026)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1027)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1028)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1028)) COMMA_SOURCE_FILE_AT_LINE (1028)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1030)) COMMA_SOURCE_FILE_AT_LINE (1030)).operator_concat (GALGAS_string ("' and does not support the '<' operator") COMMA_SOURCE_FILE_AT_LINE (1030)) COMMA_SOURCE_FILE_AT_LINE (1029)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1033)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1033)))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1035)) COMMA_SOURCE_FILE_AT_LINE (1035)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1035)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1035)) COMMA_SOURCE_FILE_AT_LINE (1035)).operator_concat (GALGAS_string ("': '<' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1035)) COMMA_SOURCE_FILE_AT_LINE (1034)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else{
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_strictLowerExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1040)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateStrictInfTestAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateStrictInfTestAST.mSlotID,
                                                  categoryMethod_templateStrictInfTestAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateStrictInfTestAST_templateExpressionAnalysis (defineCategoryMethod_templateStrictInfTestAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateInfOrEqualTestAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateInfOrEqualTestAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                 const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateInfOrEqualTestAST * object = (const cPtr_templateInfOrEqualTestAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateInfOrEqualTestAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1057)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1060)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1062)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1063)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1064)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1064)) COMMA_SOURCE_FILE_AT_LINE (1064)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1066)) COMMA_SOURCE_FILE_AT_LINE (1066)).operator_concat (GALGAS_string ("' and does not support the '<=' operator") COMMA_SOURCE_FILE_AT_LINE (1066)) COMMA_SOURCE_FILE_AT_LINE (1065)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1069)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1069)))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1071)) COMMA_SOURCE_FILE_AT_LINE (1071)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1071)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1071)) COMMA_SOURCE_FILE_AT_LINE (1071)).operator_concat (GALGAS_string ("': '<=' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1071)) COMMA_SOURCE_FILE_AT_LINE (1070)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else{
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_lowerOrEqualExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1076)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateInfOrEqualTestAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateInfOrEqualTestAST.mSlotID,
                                                  categoryMethod_templateInfOrEqualTestAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateInfOrEqualTestAST_templateExpressionAnalysis (defineCategoryMethod_templateInfOrEqualTestAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateStrictSupTestAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateStrictSupTestAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateStrictSupTestAST * object = (const cPtr_templateStrictSupTestAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateStrictSupTestAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1093)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1096)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1098)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1099)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1100)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1100)) COMMA_SOURCE_FILE_AT_LINE (1100)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1102)) COMMA_SOURCE_FILE_AT_LINE (1102)).operator_concat (GALGAS_string ("' and does not support the '>' operator") COMMA_SOURCE_FILE_AT_LINE (1102)) COMMA_SOURCE_FILE_AT_LINE (1101)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1105)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1105)))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1107)) COMMA_SOURCE_FILE_AT_LINE (1107)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1107)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1107)) COMMA_SOURCE_FILE_AT_LINE (1107)).operator_concat (GALGAS_string ("': '>' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1107)) COMMA_SOURCE_FILE_AT_LINE (1106)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else{
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_strictGreaterExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1112)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateStrictSupTestAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateStrictSupTestAST.mSlotID,
                                                  categoryMethod_templateStrictSupTestAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateStrictSupTestAST_templateExpressionAnalysis (defineCategoryMethod_templateStrictSupTestAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateSupOrEqualTestAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateSupOrEqualTestAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                 const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateSupOrEqualTestAST * object = (const cPtr_templateSupOrEqualTestAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateSupOrEqualTestAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1129)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1132)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1134)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1135)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1136)).operator_and (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1136)) COMMA_SOURCE_FILE_AT_LINE (1136)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1138)) COMMA_SOURCE_FILE_AT_LINE (1138)).operator_concat (GALGAS_string ("' and does not support the '>=' operator") COMMA_SOURCE_FILE_AT_LINE (1138)) COMMA_SOURCE_FILE_AT_LINE (1137)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1141)).objectCompare (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1141)))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1143)) COMMA_SOURCE_FILE_AT_LINE (1143)).operator_concat (GALGAS_string ("', right operand type is '@") COMMA_SOURCE_FILE_AT_LINE (1143)).operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1143)) COMMA_SOURCE_FILE_AT_LINE (1143)).operator_concat (GALGAS_string ("': '>=' operator requires the types are the same") COMMA_SOURCE_FILE_AT_LINE (1143)) COMMA_SOURCE_FILE_AT_LINE (1142)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else{
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_greaterOrEqualExpressionForGeneration::constructor_new (constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mBoolType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1148)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateSupOrEqualTestAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateSupOrEqualTestAST.mSlotID,
                                                  categoryMethod_templateSupOrEqualTestAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateSupOrEqualTestAST_templateExpressionAnalysis (defineCategoryMethod_templateSupOrEqualTestAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateLeftShiftOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateLeftShiftOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                     const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                     GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateLeftShiftOperationAST * object = (const cPtr_templateLeftShiftOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateLeftShiftOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1165)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1168)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1170)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1171)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1172)).operator_and (function_binaryShiftOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1172)) COMMA_SOURCE_FILE_AT_LINE (1172)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1174)) COMMA_SOURCE_FILE_AT_LINE (1174)).operator_concat (GALGAS_string ("' and does not support a shift operator") COMMA_SOURCE_FILE_AT_LINE (1174)) COMMA_SOURCE_FILE_AT_LINE (1173)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1177)).objectCompare (GALGAS_string ("uint"))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("for a shift operator, right operand type should be '@uint': it is '@").operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1179)) COMMA_SOURCE_FILE_AT_LINE (1179)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1179)) COMMA_SOURCE_FILE_AT_LINE (1178)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else{
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_leftShiftExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1184)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateLeftShiftOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateLeftShiftOperationAST.mSlotID,
                                                  categoryMethod_templateLeftShiftOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateLeftShiftOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateLeftShiftOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateRightShiftOperationAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateRightShiftOperationAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                      const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                      GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateRightShiftOperationAST * object = (const cPtr_templateRightShiftOperationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateRightShiftOperationAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_leftExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mLeftExpression.ptr (), constinArgument_inAnalysisContext, var_leftExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1201)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_rightExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mRightExpression.ptr (), constinArgument_inAnalysisContext, var_rightExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1204)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_leftType = var_leftExpression.reader_mType (SOURCE_FILE_AT_LINE (1206)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_unifiedTypeMapProxy var_rightType = var_rightExpression.reader_mType (SOURCE_FILE_AT_LINE (1207)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_leftType.reader_mHandledOperatorFlags (inCompiler COMMA_SOURCE_FILE_AT_LINE (1208)).operator_and (function_binaryShiftOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (1208)) COMMA_SOURCE_FILE_AT_LINE (1208)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("left operand type is '@").operator_concat (var_leftType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1210)) COMMA_SOURCE_FILE_AT_LINE (1210)).operator_concat (GALGAS_string ("' and does not support a shift operator") COMMA_SOURCE_FILE_AT_LINE (1210)) COMMA_SOURCE_FILE_AT_LINE (1209)) ;
    outArgument_outExpression.drop () ; // Release error dropped variable
  }else{
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1213)).objectCompare (GALGAS_string ("uint"))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mOperatorLocation, GALGAS_string ("for a shift operator, right operand type should be '@uint': it is '@").operator_concat (var_rightType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1215)) COMMA_SOURCE_FILE_AT_LINE (1215)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1215)) COMMA_SOURCE_FILE_AT_LINE (1214)) ;
      outArgument_outExpression.drop () ; // Release error dropped variable
    }else{
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_rightShiftExpressionForGeneration::constructor_new (var_leftType, object->mAttribute_mOperatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (1220)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateRightShiftOperationAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateRightShiftOperationAST.mSlotID,
                                                  categoryMethod_templateRightShiftOperationAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateRightShiftOperationAST_templateExpressionAnalysis (defineCategoryMethod_templateRightShiftOperationAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateClassToTypeOperandAST templateExpressionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateClassToTypeOperandAST_templateExpressionAnalysis (const cPtr_templateExpressionAST * inObject,
                                                                                     const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                     GALGAS_semanticExpressionForGeneration & outArgument_outExpression,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateClassToTypeOperandAST * object = (const cPtr_templateClassToTypeOperandAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateClassToTypeOperandAST) ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_49227_20 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_49227_19 ; // Joker input parameter
  GALGAS_typeKindEnum joker_49227_18 ; // Joker input parameter
  GALGAS_typedAttributeList joker_49227_17 ; // Joker input parameter
  GALGAS_attributeMap joker_49227_16 ; // Joker input parameter
  GALGAS_typedAttributeList joker_49227_15 ; // Joker input parameter
  GALGAS_constructorMap joker_49227_14 ; // Joker input parameter
  GALGAS_readerMap joker_49227_13 ; // Joker input parameter
  GALGAS_modifierMap joker_49227_12 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_49227_11 ; // Joker input parameter
  GALGAS_classMethodMap joker_49227_10 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_49227_9 ; // Joker input parameter
  GALGAS_uint joker_49227_8 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyList joker_49227_7 ; // Joker input parameter
  GALGAS_stringset joker_49227_6 ; // Joker input parameter
  GALGAS_lstringlist joker_49227_5 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_49227_4 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_49227_3 ; // Joker input parameter
  GALGAS_withAccessorMap joker_49227_2 ; // Joker input parameter
  GALGAS_bool joker_49227_1 ; // Joker input parameter
  constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mTypeName, joker_49227_20, joker_49227_19, joker_49227_18, joker_49227_17, joker_49227_16, joker_49227_15, joker_49227_14, joker_49227_13, joker_49227_12, joker_49227_11, joker_49227_10, joker_49227_9, joker_49227_8, joker_49227_7, joker_49227_6, joker_49227_5, joker_49227_4, joker_49227_3, joker_49227_2, joker_49227_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1236)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_literalTypeInExpressionForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("type"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1239)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1239)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (1240)), object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1241)) COMMA_SOURCE_FILE_AT_LINE (1238)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateClassToTypeOperandAST_templateExpressionAnalysis (void) {
  enterCategoryMethod_templateExpressionAnalysis (kTypeDescriptor_GALGAS_templateClassToTypeOperandAST.mSlotID,
                                                  categoryMethod_templateClassToTypeOperandAST_templateExpressionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateClassToTypeOperandAST_templateExpressionAnalysis (defineCategoryMethod_templateClassToTypeOperandAST_templateExpressionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category method '@templateInstructionAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_templateInstructionAST_templateInstructionAnalysis> gCategoryMethodTable_templateInstructionAST_templateInstructionAnalysis ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_templateInstructionAnalysis (const PMSInt32 inClassIndex,
                                                      categoryMethodSignature_templateInstructionAST_templateInstructionAnalysis inMethod) {
  gCategoryMethodTable_templateInstructionAST_templateInstructionAnalysis.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_templateInstructionAST_templateInstructionAnalysis (void) {
  gCategoryMethodTable_templateInstructionAST_templateInstructionAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateInstructionAST_templateInstructionAnalysis (NULL,
                                                                               freeCategoryMethod_templateInstructionAST_templateInstructionAnalysis) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_templateInstructionAnalysis (const cPtr_templateInstructionAST * inObject,
                                                     const GALGAS_templateAnalysisContext constin_inAnalysisContext,
                                                     GALGAS_templateInstructionListForGeneration & io_ioInstructionList,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_templateInstructionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_templateInstructionAST_templateInstructionAnalysis f = NULL ;
    if (classIndex < gCategoryMethodTable_templateInstructionAST_templateInstructionAnalysis.count ()) {
      f = gCategoryMethodTable_templateInstructionAST_templateInstructionAnalysis (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_templateInstructionAST_templateInstructionAnalysis.count ()) {
           f = gCategoryMethodTable_templateInstructionAST_templateInstructionAnalysis (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_templateInstructionAST_templateInstructionAnalysis.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    f (inObject, constin_inAnalysisContext, io_ioInstructionList, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateInstructionStringAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateInstructionStringAST_templateInstructionAnalysis (const cPtr_templateInstructionAST * inObject,
                                                                                     const GALGAS_templateAnalysisContext /* constinArgument_inAnalysisContext */,
                                                                                     GALGAS_templateInstructionListForGeneration & ioArgument_ioInstructionList,
                                                                                     C_Compiler * /* inCompiler */
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateInstructionStringAST * object = (const cPtr_templateInstructionStringAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateInstructionStringAST) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionList.addAssign_operation (GALGAS_templateInstructionStringForGeneration::constructor_new (object->mAttribute_mTemplateString COMMA_SOURCE_FILE_AT_LINE (1274)) COMMA_SOURCE_FILE_AT_LINE (1274)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateInstructionStringAST_templateInstructionAnalysis (void) {
  enterCategoryMethod_templateInstructionAnalysis (kTypeDescriptor_GALGAS_templateInstructionStringAST.mSlotID,
                                                   categoryMethod_templateInstructionStringAST_templateInstructionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateInstructionStringAST_templateInstructionAnalysis (defineCategoryMethod_templateInstructionStringAST_templateInstructionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateInstructionExpressionAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateInstructionExpressionAST_templateInstructionAnalysis (const cPtr_templateInstructionAST * inObject,
                                                                                         const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                         GALGAS_templateInstructionListForGeneration & ioArgument_ioInstructionList,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateInstructionExpressionAST * object = (const cPtr_templateInstructionExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateInstructionExpressionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1284)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1285)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1285)).objectCompare (GALGAS_string ("string"))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mLocation, GALGAS_string ("expression type should be '@string' (it is '@").operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1286)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1286)) COMMA_SOURCE_FILE_AT_LINE (1286)).operator_concat (GALGAS_string ("')") COMMA_SOURCE_FILE_AT_LINE (1286)) COMMA_SOURCE_FILE_AT_LINE (1286)) ;
  }
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionList.addAssign_operation (GALGAS_templateInstructionExpressionForGeneration::constructor_new (var_expression COMMA_SOURCE_FILE_AT_LINE (1288)) COMMA_SOURCE_FILE_AT_LINE (1288)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateInstructionExpressionAST_templateInstructionAnalysis (void) {
  enterCategoryMethod_templateInstructionAnalysis (kTypeDescriptor_GALGAS_templateInstructionExpressionAST.mSlotID,
                                                   categoryMethod_templateInstructionExpressionAST_templateInstructionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateInstructionExpressionAST_templateInstructionAnalysis (defineCategoryMethod_templateInstructionExpressionAST_templateInstructionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateBlockInstructionAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateBlockInstructionAST_templateInstructionAnalysis (const cPtr_templateInstructionAST * inObject,
                                                                                    const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                    GALGAS_templateInstructionListForGeneration & ioArgument_ioInstructionList,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateBlockInstructionAST * object = (const cPtr_templateBlockInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateBlockInstructionAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1298)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1299)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1299)).objectCompare (GALGAS_string ("uint"))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mLocation, GALGAS_string ("expression type should be '@uint' (it is '@").operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1300)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1300)) COMMA_SOURCE_FILE_AT_LINE (1300)).operator_concat (GALGAS_string ("')") COMMA_SOURCE_FILE_AT_LINE (1300)) COMMA_SOURCE_FILE_AT_LINE (1300)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListForGeneration var_blockInstructionList = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1302)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_templateInstructionListAnalysis (constinArgument_inAnalysisContext, object->mAttribute_mBlockInstructionList, var_blockInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1303)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionList.addAssign_operation (GALGAS_templateBlockInstructionForGeneration::constructor_new (var_expression, object->mAttribute_mLocation, var_blockInstructionList COMMA_SOURCE_FILE_AT_LINE (1304)) COMMA_SOURCE_FILE_AT_LINE (1304)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateBlockInstructionAST_templateInstructionAnalysis (void) {
  enterCategoryMethod_templateInstructionAnalysis (kTypeDescriptor_GALGAS_templateBlockInstructionAST.mSlotID,
                                                   categoryMethod_templateBlockInstructionAST_templateInstructionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateBlockInstructionAST_templateInstructionAnalysis (defineCategoryMethod_templateBlockInstructionAST_templateInstructionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateInstructionGetColumnLocationAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateInstructionGetColumnLocationAST_templateInstructionAnalysis (const cPtr_templateInstructionAST * /* inObject */,
                                                                                                const GALGAS_templateAnalysisContext /* constinArgument_inAnalysisContext */,
                                                                                                GALGAS_templateInstructionListForGeneration & ioArgument_ioInstructionList,
                                                                                                C_Compiler * /* inCompiler */
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionList.addAssign_operation (GALGAS_templateInstructionGetColumnLocationForGeneration::constructor_new (SOURCE_FILE_AT_LINE (1313)) COMMA_SOURCE_FILE_AT_LINE (1313)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateInstructionGetColumnLocationAST_templateInstructionAnalysis (void) {
  enterCategoryMethod_templateInstructionAnalysis (kTypeDescriptor_GALGAS_templateInstructionGetColumnLocationAST.mSlotID,
                                                   categoryMethod_templateInstructionGetColumnLocationAST_templateInstructionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateInstructionGetColumnLocationAST_templateInstructionAnalysis (defineCategoryMethod_templateInstructionGetColumnLocationAST_templateInstructionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateInstructionGotoColumnLocationAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateInstructionGotoColumnLocationAST_templateInstructionAnalysis (const cPtr_templateInstructionAST * /* inObject */,
                                                                                                 const GALGAS_templateAnalysisContext /* constinArgument_inAnalysisContext */,
                                                                                                 GALGAS_templateInstructionListForGeneration & ioArgument_ioInstructionList,
                                                                                                 C_Compiler * /* inCompiler */
                                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionList.addAssign_operation (GALGAS_templateInstructionGotoColumnLocationForGeneration::constructor_new (SOURCE_FILE_AT_LINE (1322)) COMMA_SOURCE_FILE_AT_LINE (1322)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateInstructionGotoColumnLocationAST_templateInstructionAnalysis (void) {
  enterCategoryMethod_templateInstructionAnalysis (kTypeDescriptor_GALGAS_templateInstructionGotoColumnLocationAST.mSlotID,
                                                   categoryMethod_templateInstructionGotoColumnLocationAST_templateInstructionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateInstructionGotoColumnLocationAST_templateInstructionAnalysis (defineCategoryMethod_templateInstructionGotoColumnLocationAST_templateInstructionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateInstructionForeachAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateInstructionForeachAST_templateInstructionAnalysis (const cPtr_templateInstructionAST * inObject,
                                                                                      const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                      GALGAS_templateInstructionListForGeneration & ioArgument_ioInstructionList,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateInstructionForeachAST * object = (const cPtr_templateInstructionForeachAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateInstructionForeachAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_expression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mExpression.ptr (), constinArgument_inAnalysisContext, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1333)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_enumerationDescriptorList var_enumerationDescriptor = var_expression.reader_mType (SOURCE_FILE_AT_LINE (1335)).reader_mEnumerationDescriptor (inCompiler COMMA_SOURCE_FILE_AT_LINE (1335)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsEqual, var_enumerationDescriptor.reader_length (SOURCE_FILE_AT_LINE (1336)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (var_expression.reader_mLocation (SOURCE_FILE_AT_LINE (1337)), GALGAS_string ("expression of '@").operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1337)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1337)) COMMA_SOURCE_FILE_AT_LINE (1337)).operator_concat (GALGAS_string ("' cannot be enumerated") COMMA_SOURCE_FILE_AT_LINE (1337)) COMMA_SOURCE_FILE_AT_LINE (1337)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListForGeneration var_beforeInstructionList = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1340)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_templateInstructionListAnalysis (constinArgument_inAnalysisContext, object->mAttribute_mBeforeInstructionList, var_beforeInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1341)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_enumeratorCppName = GALGAS_string ("enumerator_").operator_concat (object->mAttribute_mIndexIdentifier.reader_location (SOURCE_FILE_AT_LINE (1343)).reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1343)).reader_string (SOURCE_FILE_AT_LINE (1343)) COMMA_SOURCE_FILE_AT_LINE (1343)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_templateVariableMap var_doVariableMap = constinArgument_inAnalysisContext.mAttribute_mTemplateVariableMap ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_cppIndexVarName = GALGAS_string ("index_").operator_concat (object->mAttribute_mIndexIdentifier.reader_location (SOURCE_FILE_AT_LINE (1345)).reader_locationIndex (inCompiler COMMA_SOURCE_FILE_AT_LINE (1345)).reader_string (SOURCE_FILE_AT_LINE (1345)) COMMA_SOURCE_FILE_AT_LINE (1345)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (1345)).operator_concat (object->mAttribute_mIndexIdentifier.reader_string (SOURCE_FILE_AT_LINE (1345)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1345)) COMMA_SOURCE_FILE_AT_LINE (1345)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, object->mAttribute_mIndexIdentifier.reader_string (SOURCE_FILE_AT_LINE (1346)).objectCompare (GALGAS_string (""))).isValidAndTrue ()) {
    { //-------- @modifierCallInstructionForGeneration
    var_doVariableMap.modifier_insertKey (object->mAttribute_mIndexIdentifier, constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes.mAttribute_mUIntType, var_cppIndexVarName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1347)) ;
    } //-------- END @typeMethodInstructionForGeneration
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_enumerationDescriptorList enumerator_54650 (var_enumerationDescriptor, true) ;
  //--- simple foreach instruction
  while (enumerator_54650.hasCurrentObject ()) {
    { //-------- @modifierCallInstructionForGeneration
    var_doVariableMap.modifier_insertKey (GALGAS_lstring::constructor_new (object->mAttribute_mPrefix.operator_concat (enumerator_54650.current_mEnumerationName (HERE) COMMA_SOURCE_FILE_AT_LINE (1351)), var_expression.reader_mLocation (SOURCE_FILE_AT_LINE (1351)) COMMA_SOURCE_FILE_AT_LINE (1351)), enumerator_54650.current_mEnumeratedType (HERE), var_enumeratorCppName.operator_concat (GALGAS_string (".current_") COMMA_SOURCE_FILE_AT_LINE (1353)).operator_concat (enumerator_54650.current_mEnumerationName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1353)) COMMA_SOURCE_FILE_AT_LINE (1353)).operator_concat (GALGAS_string (" (HERE)") COMMA_SOURCE_FILE_AT_LINE (1353)), inCompiler COMMA_SOURCE_FILE_AT_LINE (1350)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_54650.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateAnalysisContext var_doAnalysisContext = GALGAS_templateAnalysisContext::constructor_new (constinArgument_inAnalysisContext.mAttribute_mSemanticContext, constinArgument_inAnalysisContext.mAttribute_mPredefinedTypes, var_doVariableMap COMMA_SOURCE_FILE_AT_LINE (1356)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListForGeneration var_doInstructionList = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1361)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_templateInstructionListAnalysis (var_doAnalysisContext, object->mAttribute_mDoInstructionList, var_doInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1362)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListForGeneration var_betweenInstructionList = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1364)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_templateInstructionListAnalysis (constinArgument_inAnalysisContext, object->mAttribute_mBetweenInstructionList, var_betweenInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1365)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListForGeneration var_afterInstructionList = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1367)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_templateInstructionListAnalysis (constinArgument_inAnalysisContext, object->mAttribute_mAfterInstructionList, var_afterInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1368)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionList.addAssign_operation (GALGAS_templateInstructionForeachForGeneration::constructor_new (object->mAttribute_mIsAscending, var_expression, var_enumeratorCppName, var_beforeInstructionList, var_doInstructionList, var_cppIndexVarName, var_betweenInstructionList, var_afterInstructionList COMMA_SOURCE_FILE_AT_LINE (1370)) COMMA_SOURCE_FILE_AT_LINE (1370)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateInstructionForeachAST_templateInstructionAnalysis (void) {
  enterCategoryMethod_templateInstructionAnalysis (kTypeDescriptor_GALGAS_templateInstructionForeachAST.mSlotID,
                                                   categoryMethod_templateInstructionForeachAST_templateInstructionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateInstructionForeachAST_templateInstructionAnalysis (defineCategoryMethod_templateInstructionForeachAST_templateInstructionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateInstructionIfAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateInstructionIfAST_templateInstructionAnalysis (const cPtr_templateInstructionAST * inObject,
                                                                                 const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                 GALGAS_templateInstructionListForGeneration & ioArgument_ioInstructionList,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateInstructionIfAST * object = (const cPtr_templateInstructionIfAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateInstructionIfAST) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionIfBranchListForGeneration var_templateInstructionIfBranchList = GALGAS_templateInstructionIfBranchListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1388)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_templateInstructionIfBranchListAST enumerator_56311 (object->mAttribute_mTemplateInstructionIfBranchList, true) ;
  //--- simple foreach instruction
  while (enumerator_56311.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_semanticExpressionForGeneration var_expression ;
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) enumerator_56311.current_mExpression (HERE).ptr (), constinArgument_inAnalysisContext, var_expression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1391)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @ifInstructionForGeneration
    if (GALGAS_bool (kIsNotEqual, var_expression.reader_mType (SOURCE_FILE_AT_LINE (1392)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1392)).objectCompare (GALGAS_string ("bool"))).isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (var_expression.reader_mLocation (SOURCE_FILE_AT_LINE (1393)), GALGAS_string ("'if' expression type should be '@bool' (it is '@").operator_concat (var_expression.reader_mType (SOURCE_FILE_AT_LINE (1393)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1393)) COMMA_SOURCE_FILE_AT_LINE (1393)).operator_concat (GALGAS_string ("')") COMMA_SOURCE_FILE_AT_LINE (1393)) COMMA_SOURCE_FILE_AT_LINE (1393)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_templateInstructionListForGeneration var_instructionList = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1395)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_templateInstructionListAnalysis (constinArgument_inAnalysisContext, enumerator_56311.current_mInstructionList (HERE), var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1396)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @addAssignInstructionForGeneration
    var_templateInstructionIfBranchList.addAssign_operation (var_expression, var_instructionList COMMA_SOURCE_FILE_AT_LINE (1397)) ;
    enumerator_56311.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListForGeneration var_elseInstructionList = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1400)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_templateInstructionListAnalysis (constinArgument_inAnalysisContext, object->mAttribute_mElseInstructionList, var_elseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1401)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionList.addAssign_operation (GALGAS_templateInstructionIfForGeneration::constructor_new (var_templateInstructionIfBranchList, var_elseInstructionList COMMA_SOURCE_FILE_AT_LINE (1403)) COMMA_SOURCE_FILE_AT_LINE (1403)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateInstructionIfAST_templateInstructionAnalysis (void) {
  enterCategoryMethod_templateInstructionAnalysis (kTypeDescriptor_GALGAS_templateInstructionIfAST.mSlotID,
                                                   categoryMethod_templateInstructionIfAST_templateInstructionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateInstructionIfAST_templateInstructionAnalysis (defineCategoryMethod_templateInstructionIfAST_templateInstructionAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@templateInstructionSwitchAST templateInstructionAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_templateInstructionSwitchAST_templateInstructionAnalysis (const cPtr_templateInstructionAST * inObject,
                                                                                     const GALGAS_templateAnalysisContext constinArgument_inAnalysisContext,
                                                                                     GALGAS_templateInstructionListForGeneration & ioArgument_ioInstructionList,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_templateInstructionSwitchAST * object = (const cPtr_templateInstructionSwitchAST *) inObject ;
  macroValidSharedObject (object, const cPtr_templateInstructionSwitchAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticExpressionForGeneration var_switchExpression ;
  //-------- @methodCallInstructionForGeneration
  callCategoryMethod_templateExpressionAnalysis ((const cPtr_templateExpressionAST *) object->mAttribute_mSwitchExpression.ptr (), constinArgument_inAnalysisContext, var_switchExpression, inCompiler COMMA_SOURCE_FILE_AT_LINE (1417)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsNotEqual, var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (1418)).reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1418)).objectCompare (GALGAS_typeKindEnum::constructor_enumType (SOURCE_FILE_AT_LINE (1418)))).isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (var_switchExpression.reader_mLocation (SOURCE_FILE_AT_LINE (1419)), GALGAS_string ("'switch' expression type should be an enumeration (it is a ").operator_concat (var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (1419)).reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1419)).reader_kind (SOURCE_FILE_AT_LINE (1419)) COMMA_SOURCE_FILE_AT_LINE (1419)).operator_concat (GALGAS_string (" type)") COMMA_SOURCE_FILE_AT_LINE (1419)) COMMA_SOURCE_FILE_AT_LINE (1419)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_stringset var_enumConstantSet = var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (1421)).reader_mEnumConstantSet (inCompiler COMMA_SOURCE_FILE_AT_LINE (1421)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionSwitchBranchListForGeneration var_templateInstructionSwitchBranchList = GALGAS_templateInstructionSwitchBranchListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1423)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringset var_namedConstantSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1424)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_templateInstructionSwitchBranchListAST enumerator_58153 (object->mAttribute_mTemplateInstructionSwitchBranchList, true) ;
  //--- simple foreach instruction
  while (enumerator_58153.hasCurrentObject ()) {
    //-------- @foreachInstructionForGeneration
    cEnumerator_lstringlist enumerator_58182 (enumerator_58153.current_mConstantList (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_58182.hasCurrentObject ()) {
      //-------- @ifInstructionForGeneration
      if (var_enumConstantSet.reader_hasKey (enumerator_58182.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1427)) COMMA_SOURCE_FILE_AT_LINE (1427)).operator_not (SOURCE_FILE_AT_LINE (1427)).isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_0 (enumerator_58182.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_0, GALGAS_string ("the '").operator_concat (enumerator_58182.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1428)) COMMA_SOURCE_FILE_AT_LINE (1428)).operator_concat (GALGAS_string ("' is not a contant of '@") COMMA_SOURCE_FILE_AT_LINE (1428)).operator_concat (var_switchExpression.reader_mType (SOURCE_FILE_AT_LINE (1428)).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1428)) COMMA_SOURCE_FILE_AT_LINE (1428)).operator_concat (GALGAS_string ("' enumeration type") COMMA_SOURCE_FILE_AT_LINE (1428)) COMMA_SOURCE_FILE_AT_LINE (1428)) ;
      }
      //-------- @ifInstructionForGeneration
      if (var_namedConstantSet.reader_hasKey (enumerator_58182.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1430)) COMMA_SOURCE_FILE_AT_LINE (1430)).isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_1 (enumerator_58182.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_58182.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1431)) COMMA_SOURCE_FILE_AT_LINE (1431)).operator_concat (GALGAS_string ("' constant is already named in the switch instruction") COMMA_SOURCE_FILE_AT_LINE (1431)) COMMA_SOURCE_FILE_AT_LINE (1431)) ;
      }
      //-------- @addAssignInstructionForGeneration
      var_namedConstantSet.addAssign_operation (enumerator_58182.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1433)) COMMA_SOURCE_FILE_AT_LINE (1433)) ;
      enumerator_58182.gotoNextObject () ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_templateInstructionListForGeneration var_instructionList = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1435)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_templateInstructionListAnalysis (constinArgument_inAnalysisContext, enumerator_58153.current_mInstructionList (HERE), var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1436)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @addAssignInstructionForGeneration
    var_templateInstructionSwitchBranchList.addAssign_operation (enumerator_58153.current_mConstantList (HERE), var_instructionList COMMA_SOURCE_FILE_AT_LINE (1437)) ;
    enumerator_58153.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_stringset var_missingConstants = var_enumConstantSet.substract_operation (var_namedConstantSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (1440)) ;
  //-------- @ifInstructionForGeneration
  if (GALGAS_bool (kIsStrictSup, var_missingConstants.reader_count (SOURCE_FILE_AT_LINE (1441)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_m = GALGAS_string ("all constants should be named in a switch instruction; the following constants are missing:") ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_stringset enumerator_59166 (var_missingConstants, true) ;
    //--- simple foreach instruction
    while (enumerator_59166.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      var_m.dotAssign_operation (GALGAS_string ("\n"
        "  - '").operator_concat (enumerator_59166.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (1444)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1444)) COMMA_SOURCE_FILE_AT_LINE (1444)) ;
      enumerator_59166.gotoNextObject () ;
    }
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (inCompiler->here (), var_m COMMA_SOURCE_FILE_AT_LINE (1446)) ;
  }
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionList.addAssign_operation (GALGAS_templateInstructionSwitchForGeneration::constructor_new (var_switchExpression, var_templateInstructionSwitchBranchList COMMA_SOURCE_FILE_AT_LINE (1449)) COMMA_SOURCE_FILE_AT_LINE (1449)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_templateInstructionSwitchAST_templateInstructionAnalysis (void) {
  enterCategoryMethod_templateInstructionAnalysis (kTypeDescriptor_GALGAS_templateInstructionSwitchAST.mSlotID,
                                                   categoryMethod_templateInstructionSwitchAST_templateInstructionAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_templateInstructionSwitchAST_templateInstructionAnalysis (defineCategoryMethod_templateInstructionSwitchAST_templateInstructionAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


