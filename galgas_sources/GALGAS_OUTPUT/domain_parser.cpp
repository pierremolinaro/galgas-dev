//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'domain_parser.cpp'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 25th, 2010, at 18h10'38"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "domain_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "domain_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'domain_declaration'           *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_declaration_i0_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer) {
  GGS_stringset  var_cas_propertyNameSet = GGS_stringset ::constructor_emptySet () ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_domain) COMMA_HERE) ;
  GGS_lstring  var_cas_domainTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_domainTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  GGS_domainAttributeMap  var_cas_attributeMap = GGS_domainAttributeMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
  GGS_domainModifierMap  var_cas_domainModifierMap = GGS_domainModifierMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
  GGS_L_EXsignature  var_cas_domainModifierAttributeList = GGS_L_EXsignature ::constructor_emptyList () ;
  var_cas_domainModifierAttributeList.addAssign_operation (GGS_typeGalgas_string ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (105)), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (106))) ;
  GGS_domainRelationMap  var_cas_relationMap = GGS_domainRelationMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
        GGS_lstring  var_cas_attributeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        const GGS_bool cond_4809 = var_cas_propertyNameSet.reader_hasKey (var_cas_attributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (112))) ;
        if (cond_4809.isBuiltAndTrue ()) {
          var_cas_attributeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the domain has already a property named '")).operator_concat (var_cas_attributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (113)))).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (114)) ;
        }else if (cond_4809.isBuiltAndFalse ()) {
          var_cas_propertyNameSet.addAssign_operation (var_cas_attributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115))) ;
          var_cas_attributeMap.modifier_insertKey (inLexique, var_cas_attributeName COMMA_SOURCE_FILE_AT_LINE (116)) ;
          GGS_lstring  var_cas_addModifierName = GGS_lstring ::constructor_new (inLexique, (GGS_string ("addTo")).operator_concat (var_cas_attributeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ()), var_cas_attributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (117)) COMMA_SOURCE_FILE_AT_LINE (117)) ;
          var_cas_domainModifierMap.modifier_insertKey (inLexique, var_cas_addModifierName, var_cas_domainModifierAttributeList COMMA_SOURCE_FILE_AT_LINE (118)) ;
        }
      switch (select_domain_5F_parser_0 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_domain_5F_parser_1 (inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_relationTypeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_relationTypeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
          GGS_L_EXsignature  var_cas_relationModifierAttributeList = GGS_L_EXsignature ::constructor_emptyList () ;
          GGS_stringlist  var_cas_domains = GGS_stringlist ::constructor_emptyList () ;
          { bool syntaxRepeat_2 = true ;
            while (syntaxRepeat_2) {
                GGS_lstring  var_cas_attributeName ;
                inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                const GGS_domainAttributeMap  temp_5492 = var_cas_attributeMap ;
                if (temp_5492.isBuilt ()) {
                  temp_5492 (HERE)->method_searchKey (inLexique, var_cas_attributeName COMMA_SOURCE_FILE_AT_LINE (135)) ;
                }
                var_cas_domains.addAssign_operation (var_cas_attributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136))) ;
                var_cas_relationModifierAttributeList.addAssign_operation (GGS_typeGalgas_uint ::constructor_new (inLexique COMMA_SOURCE_FILE_AT_LINE (138)), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_SOURCE_FILE_AT_LINE (139))) ;
              switch (select_domain_5F_parser_2 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_2 = false ;
                  break ;
              }
            }
          }
          const GGS_bool cond_5913 = var_cas_propertyNameSet.reader_hasKey (var_cas_relationTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (144))) ;
          if (cond_5913.isBuiltAndTrue ()) {
            var_cas_relationTypeName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the domain has already a property named '")).operator_concat (var_cas_relationTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (145)))).operator_concat (GGS_string ("'")) COMMA_SOURCE_FILE_AT_LINE (146)) ;
          }else if (cond_5913.isBuiltAndFalse ()) {
            var_cas_relationMap.modifier_insertKey (inLexique, var_cas_relationTypeName, var_cas_domains COMMA_SOURCE_FILE_AT_LINE (147)) ;
            var_cas_propertyNameSet.addAssign_operation (var_cas_relationTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (148))) ;
            GGS_lstring  var_cas_addModifierName = GGS_lstring ::constructor_new (inLexique, (GGS_string ("addTo")).operator_concat (var_cas_relationTypeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ()), var_cas_relationTypeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (149)) COMMA_SOURCE_FILE_AT_LINE (149)) ;
            var_cas_domainModifierMap.modifier_insertKey (inLexique, var_cas_addModifierName, var_cas_relationModifierAttributeList COMMA_SOURCE_FILE_AT_LINE (150)) ;
            var_cas_addModifierName = GGS_lstring ::constructor_new (inLexique, (GGS_string ("reset")).operator_concat (var_cas_relationTypeName.ggs_string ().reader_stringByCapitalizingFirstCharacter ()), var_cas_relationTypeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (151)) COMMA_SOURCE_FILE_AT_LINE (151)) ;
            var_cas_domainModifierMap.modifier_insertKey (inLexique, var_cas_addModifierName, GGS_L_EXsignature ::constructor_emptyList () COMMA_SOURCE_FILE_AT_LINE (152)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
  GGS_AC_galgasType  var_cas_t = GGS_typeGalgasDomainType ::constructor_new (inLexique, var_cas_domainTypeName, var_cas_attributeMap, var_cas_domainModifierMap, var_cas_relationMap COMMA_SOURCE_FILE_AT_LINE (157)) ;
  GGS_AC_semanticsEntity  var_cas_theEntity = GGS_typeEntiteType ::constructor_new (inLexique, var_cas_t COMMA_SOURCE_FILE_AT_LINE (163)) ;
  var_cas_ioComponentSemanticsEntitiesMap.modifier_insertKey (inLexique, var_cas_domainTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (164)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_typeEntityToGenerate  var_cas_def = GGS_C_domainToImplement ::constructor_new (inLexique, var_cas_domainTypeName, var_cas_attributeMap, var_cas_relationMap COMMA_SOURCE_FILE_AT_LINE (167)) ;
  var_cas_listeEntitesAengendrer.addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_declaration_i0_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_domain) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_domain_5F_parser_0 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_1 = true ;
    while (syntaxRepeat_1) {
      switch (select_domain_5F_parser_1 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
          { bool syntaxRepeat_2 = true ;
            while (syntaxRepeat_2) {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
              switch (select_domain_5F_parser_2 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_2 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_1 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'semantics_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_semantics_5F_declaration_i1_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                const GGS_M_optionComponents  /* var_cas_ioOptionsComponentsMapForUse */,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  nt_domain_5F_declaration_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_semantics_5F_declaration_i1_importSemantics (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_ModelMap  &/* var_cas_ioModelMap */,
                                GGS_ActionMap  &/* var_cas_ioExternActionMap */,
                                GGS_M_semanticsEntitiesForUse  &var_cas_ioComponentSemanticsEntitiesMap,
                                GGS_typeTableNomRoutinesDeclarees  &/* var_cas_tableNomRoutinesDeclarees */,
                                GGS_typeTableEnAvant  &/* var_cas_tableEnAvant */,
                                GGS_typeTableRoutinesAimplementer  &/* var_cas_tableRoutinesAimplementer */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList () ;
  nt_domain_5F_declaration_ (inLexique, var_cas_ioComponentSemanticsEntitiesMap, var_cas_listeEntitesAengendrer) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_semantics_5F_declaration_i1_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_domain_5F_declaration_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_semantic_5F_instruction_i2_ (C_Lexique_galgas_5F_scanner & inLexique,
                                const GGS_typeTableEnAvant  /* var_cas_inTableEnAvant */,
                                const GGS_M_semanticsEntitiesForUse  /* var_cas_ioComponentSemanticsEntitiesMap */,
                                const GGS_M_optionComponents  /* var_cas_inOptionsComponentsMapForUse */,
                                GGS_typeVariablesMap  &/* var_cas_ioVariablesMap */,
                                GGS_typeInstructionList  &/* var_cas_ioInstructionList */,
                                const GGS_EXsemanticContext /* var_cas_inSemanticContext */) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_domain) COMMA_HERE) ;
  GGS_lstring  var_cas_domainName ;
  inLexique.assignFromAttribute_tokenString (var_cas_domainName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_3 = true ;
    while (syntaxRepeat_3) {
        nt_domain_5F_instruction_ (inLexique) ;
      switch (select_domain_5F_parser_3 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_3 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_semantic_5F_instruction_i2_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_domain) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_3 = true ;
    while (syntaxRepeat_3) {
        nt_domain_5F_instruction_parse (inLexique) ;
      switch (select_domain_5F_parser_3 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_3 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'domain_instruction'           *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_instruction_i3_ (C_Lexique_galgas_5F_scanner & inLexique) {
  GGS_lstring  var_cas_relationName ;
  inLexique.assignFromAttribute_tokenString (var_cas_relationName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  { bool syntaxRepeat_4 = true ;
    while (syntaxRepeat_4) {
        GGS_lstring  var_cas_domainName ;
        inLexique.assignFromAttribute_tokenString (var_cas_domainName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        GGS_lstring  var_cas_variableName ;
        inLexique.assignFromAttribute_tokenString (var_cas_variableName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_domain_5F_parser_4 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_4 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  switch (select_domain_5F_parser_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_domain_5F_expression_ (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_instruction_i3_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  { bool syntaxRepeat_4 = true ;
    while (syntaxRepeat_4) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_domain_5F_parser_4 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_4 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  switch (select_domain_5F_parser_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A__3D_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2B__3D_) COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_domain_5F_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'domain_expression'            *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_expression_i4_ (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_domain_5F_term_ (inLexique) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
      switch (select_domain_5F_parser_6 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7C_) COMMA_HERE) ;
          nt_domain_5F_term_ (inLexique) ;
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_expression_i4_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_domain_5F_term_parse (inLexique) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
      switch (select_domain_5F_parser_6 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7C_) COMMA_HERE) ;
          nt_domain_5F_term_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'domain_term'               *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_term_i5_ (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_domain_5F_factor_ (inLexique) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
      switch (select_domain_5F_parser_7 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__26_) COMMA_HERE) ;
          nt_domain_5F_factor_ (inLexique) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_term_i5_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  nt_domain_5F_factor_parse (inLexique) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
      switch (select_domain_5F_parser_7 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__26_) COMMA_HERE) ;
          nt_domain_5F_factor_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'domain_factor'              *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i6_ (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7E_) COMMA_HERE) ;
  nt_domain_5F_factor_ (inLexique) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i6_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7E_) COMMA_HERE) ;
  nt_domain_5F_factor_parse (inLexique) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'domain_factor'              *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i7_ (C_Lexique_galgas_5F_scanner & inLexique) {
  GGS_lstring  var_cas_relationName ;
  inLexique.assignFromAttribute_tokenString (var_cas_relationName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
        GGS_lstring  var_cas_domainName ;
        inLexique.assignFromAttribute_tokenString (var_cas_domainName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_domain_5F_parser_8 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i7_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5B_) COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      switch (select_domain_5F_parser_8 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__5D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'domain_factor'              *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i8_ (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  nt_domain_5F_expression_ (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i8_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  nt_domain_5F_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'domain_factor'              *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i9_ (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
  GGS_lstring  var_cas_domainName ;
  inLexique.assignFromAttribute_tokenString (var_cas_domainName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_variableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_variableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  nt_domain_5F_expression_ (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i9_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  nt_domain_5F_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'domain_factor'              *
//                                                                           *
//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i10_ (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
  GGS_lstring  var_cas_domainName ;
  inLexique.assignFromAttribute_tokenString (var_cas_domainName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_variableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_variableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  nt_domain_5F_expression_ (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void domain_parser::rule_domain_5F_parser_domain_5F_factor_i10_parse (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__21_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  nt_domain_5F_expression_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

