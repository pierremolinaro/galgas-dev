//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'projectModelBuilder.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 1st, 2010, at 9h56'25"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "projectModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "projectModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'project_component_start_symbol'     *
//                                                                           *
//---------------------------------------------------------------------------*

void projectModelBuilder::rule_projectModelBuilder_project_5F_component_5F_start_5F_symbol_i0_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_projectComponentAST &var_cas_outProjectComponentAST) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_project) COMMA_HERE) ;
  GGS_lstring  var_cas_projectName ;
  inLexique.assignFromAttribute_tokenString (var_cas_projectName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_targetName ;
  inLexique.assignFromAttribute_tokenString (var_cas_targetName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_projectSourceList  var_cas_projectSourceList = GGS_projectSourceList ::constructor_emptyList () ;
  GGS_lstringlist  var_cas_generateFeatureList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_projectModelBuilder_0 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
          GGS_lstring  var_cas_featureName ;
          inLexique.assignFromAttribute_tokenString (var_cas_featureName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          var_cas_generateFeatureList.addAssign_operation (var_cas_featureName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          GGS_sourceFileKind var_cas_sourceFileKind ;
          switch (select_projectModelBuilder_1 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extern) COMMA_HERE) ;
              var_cas_sourceFileKind = GGS_sourceFileKind::constructor_externSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (55)) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_gui) COMMA_HERE) ;
              var_cas_sourceFileKind = GGS_sourceFileKind::constructor_guiSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (58)) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_lexique) COMMA_HERE) ;
              var_cas_sourceFileKind = GGS_sourceFileKind::constructor_lexiqueSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (61)) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_option) COMMA_HERE) ;
              var_cas_sourceFileKind = GGS_sourceFileKind::constructor_optionSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
              } break ;
            case 5 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_semantics) COMMA_HERE) ;
              var_cas_sourceFileKind = GGS_sourceFileKind::constructor_semanticsSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (67)) ;
              } break ;
            case 6 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_syntax) COMMA_HERE) ;
              var_cas_sourceFileKind = GGS_sourceFileKind::constructor_syntaxSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
              } break ;
            case 7 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_grammar) COMMA_HERE) ;
              var_cas_sourceFileKind = GGS_sourceFileKind::constructor_grammarSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) ;
              } break ;
            case 8 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_program) COMMA_HERE) ;
              var_cas_sourceFileKind = GGS_sourceFileKind::constructor_programSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) ;
              } break ;
            default :
              break ;
          }
          GGS_lstring  var_cas_filePath ;
          inLexique.assignFromAttribute_tokenString (var_cas_filePath) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_projectSourceList.addAssign_operation (var_cas_sourceFileKind, var_cas_filePath) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  var_cas_outProjectComponentAST = GGS_projectComponentAST::constructor_new (var_cas_projectSourceList, var_cas_generateFeatureList, var_cas_projectName, var_cas_targetName, GGS_location (inLexique)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_project) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

