//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsClassMethods.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       march 8th, 2010, at 23h7'28"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsClassMethods.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsClassMethods.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@ACGalgasType.classMethodMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__ACGalgasType__classMethodMap (C_Compiler & inLexique,
                                const cPtr_ACGalgasType * operand_1667
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_1667 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Virtual Table for category reader '@ACGalgasType.classMethodMap'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__classMethodMap> gDispatchTableForReader__ACGalgasType__classMethodMap ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__classMethodMap (typeCategoryReader__ACGalgasType__classMethodMap inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__classMethodMap.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__ACGalgasType_defaultReader_classMethodMap (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_modifierMap  () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__classMethodMap
findCategoryReader__ACGalgasType__classMethodMap (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__classMethodMap result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__classMethodMap.count ()) {
    result = gDispatchTableForReader__ACGalgasType__classMethodMap (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__classMethodMap (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__classMethodMap.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_classMethodMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of once function "classMethodMapFor_location"        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_classMethodMapFor_location ;
static bool gCacheFlagForOnceFunction_classMethodMapFor_location = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_classMethodMapFor_location (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_classMethodMapFor_location) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_classMethodMapFor_location at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_classMethodMapFor_location\n") ;
    #endif
    gCacheFlagForOnceFunction_classMethodMapFor_location = true ;
    gCachedResultForOnceFunction_classMethodMapFor_location = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_classMethodMapFor_location ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_classMethodMapFor_location (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_classMethodMapFor_location (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_classMethodMapFor_location ("classMethodMapFor_location",
                              functionForGenericCall_classMethodMapFor_location,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Category reader '@locationGalgasType.classMethodMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__locationGalgasType__classMethodMap (C_Compiler & inLexique,
                                const cPtr_locationGalgasType * operand_2090
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_2090 != NULL) {
    var_cas_outModifierMap = function_classMethodMapFor_location (inLexique COMMA_SOURCE_FILE_AT_LINE (39)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of once function "classMethodMapFor_string"         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap  gCachedResultForOnceFunction_classMethodMapFor_string ;
static bool gCacheFlagForOnceFunction_classMethodMapFor_string = false ;

//---------------------------------------------------------------------------*

GGS_modifierMap  function_classMethodMapFor_string (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_classMethodMapFor_string) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_classMethodMapFor_string at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_modifierMap  var_cas_outModifierMap ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterModifierWithStringInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("deleteFile"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (46)) ;
    ::routine_enterModifierWithStringInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("deleteFileIfExists"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (47)) ;
    ::routine_enterModifierWithStringInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("removeEmptyDirectory"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (48)) ;
    ::routine_enterModifierWithStringInputArgument (inLexique,  var_cas_outModifierMap,  GGS_string ("removeDirectoryRecursively"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (49)) ;
    GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
    var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("generateFile"), GGS_location (inLexique) COMMA_HERE), var_cas_argList, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (58)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_classMethodMapFor_string\n") ;
    #endif
    gCacheFlagForOnceFunction_classMethodMapFor_string = true ;
    gCachedResultForOnceFunction_classMethodMapFor_string = var_cas_outModifierMap ;
  }
  return gCachedResultForOnceFunction_classMethodMapFor_string ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_classMethodMapFor_string (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_modifierMap  result = function_classMethodMapFor_string (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptorEX kFunction_descriptor_classMethodMapFor_string ("classMethodMapFor_string",
                              functionForGenericCall_classMethodMapFor_string,
                              & kTypeDescriptor_GGS_modifierMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@stringGalgasType.classMethodMap'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__stringGalgasType__classMethodMap (C_Compiler & inLexique,
                                const cPtr_stringGalgasType * operand_3656
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_3656 != NULL) {
    var_cas_outModifierMap = function_classMethodMapFor_string (inLexique COMMA_SOURCE_FILE_AT_LINE (68)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@mapindexType.classMethodMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_modifierMap 
category_reader__mapindexType__classMethodMap (C_Compiler & inLexique,
                                const cPtr_mapindexType * operand_3876
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_modifierMap  var_cas_outModifierMap ;
  if (operand_3876 != NULL) {
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    GGS_formalParameterSignature  var_cas_argList = GGS_formalParameterSignature ::constructor_emptyList () ;
    GGS_ACGalgasType  var_cas_tSelf = operand_3876 ;
    GGS_ACGalgasType  var_cas_t ;
    GGS_lstring  automatic_var_4090_0 ;
    const GGS_typeMapIndex  temp_4083 = operand_3876->mIndexOfMapType ;
    if (temp_4083.isBuilt ()) {
      temp_4083 (HERE)->method_searchKey (inLexique, automatic_var_4090_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (77)) ;
    }
    var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE), GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)) ;
    var_cas_argList.addAssign_operation (var_cas_t, GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)) ;
    var_cas_argList.addAssign_operation (var_cas_tSelf, GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)) ;
    var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("makeRegularIndex"), GGS_location (inLexique) COMMA_HERE), var_cas_argList, GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (81)) ;
  }
  return var_cas_outModifierMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsClassMethods (void) {
  enterCategoryReader__ACGalgasType__classMethodMap (category_reader__ACGalgasType__classMethodMap, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__classMethodMap ((typeCategoryReader__ACGalgasType__classMethodMap) category_reader__locationGalgasType__classMethodMap, gClassInfoFor__locationGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__classMethodMap ((typeCategoryReader__ACGalgasType__classMethodMap) category_reader__stringGalgasType__classMethodMap, gClassInfoFor__stringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__classMethodMap ((typeCategoryReader__ACGalgasType__classMethodMap) category_reader__mapindexType__classMethodMap, gClassInfoFor__mapindexType.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsClassMethods (void) {
  gDispatchTableForReader__ACGalgasType__classMethodMap.free () ;
  gCachedResultForOnceFunction_classMethodMapFor_location.drop () ;
  gCachedResultForOnceFunction_classMethodMapFor_string.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsClassMethods (prologueRoutineFor_semanticsClassMethods, epilogueRoutineFor_semanticsClassMethods) ;

//---------------------------------------------------------------------------*

