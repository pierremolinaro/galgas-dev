//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'guiModelBuilder.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 10th, 2009, at 15h17'52"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "guiModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "guiModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'gui_component_start_symbol'       *
//                                                                           *
//---------------------------------------------------------------------------*

void guiModelBuilder::
pr_gui_component_start_symbol_guiModelBuilder_39_33_ (galgas_scanner & inLexique,
                                GGS_guiComponentRoot  &var_cas_outGuiComponentRoot) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_gui) COMMA_HERE) ;
  GGS_lstring  var_cas_mGUIName ;
  inLexique._assignFromAttribute_tokenString (var_cas_mGUIName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_mGUIClass ;
  inLexique._assignFromAttribute_tokenString (var_cas_mGUIClass) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_guiModelBuilder_0 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import_5F__5F_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          switch (select_guiModelBuilder_1 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lexique) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_syntax) COMMA_HERE) ;
              } break ;
            case 5 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  GGS_guiAttributeList  var_cas_mAttributes ;
  var_cas_mAttributes = GGS_guiAttributeList ::constructor_emptyList () ;
  GGS_guiLabelList  var_cas_mLabels ;
  var_cas_mLabels = GGS_guiLabelList ::constructor_emptyList () ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_repeat_guiModelBuilder_2 (inLexique)) {
        case 2 : {
          nt_gui_attribute_ (inLexique, var_cas_mAttributes) ;
          } break ;
        case 3 : {
          nt_gui_label_ (inLexique, var_cas_mLabels) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_gui) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outGuiComponentRoot = GGS_guiComponentRoot ::constructor_new (inLexique, var_cas_mGUIName, var_cas_mGUIClass, var_cas_mAttributes, var_cas_mLabels COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'gui_attribute'              *
//                                                                           *
//---------------------------------------------------------------------------*

void guiModelBuilder::
pr_gui_attribute_guiModelBuilder_94_20_ (galgas_scanner & inLexique,
                                GGS_guiAttributeList  &var_cas_ioAttributes) {
  GGS_lstring  var_cas_mKey ;
  inLexique._assignFromAttribute_tokenString (var_cas_mKey) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_attributeString ;
  switch (select_guiModelBuilder_3 (inLexique)) {
    case 1 : {
      var_cas_attributeString = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique._assignFromAttribute_tokenString (var_cas_attributeString) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_lstring  var_cas_mValue ;
  var_cas_mValue = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
  { bool syntaxRepeat_4 = true ;
    while (syntaxRepeat_4) {
        GGS_lstring  var_cas_value ;
        inLexique._assignFromAttribute_tokenString (var_cas_value) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
        var_cas_mValue = GGS_lstring ::constructor_new (inLexique, (var_cas_mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (106))).operator_concat (var_cas_value.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (106))), var_cas_value.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) COMMA_HERE) ;
      switch (select_repeat_guiModelBuilder_4 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_4 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioAttributes._addAssign_operation (var_cas_mKey, var_cas_attributeString, var_cas_mValue) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'gui_label'                *
//                                                                           *
//---------------------------------------------------------------------------*

void guiModelBuilder::
pr_gui_label_guiModelBuilder_115_16_ (galgas_scanner & inLexique,
                                GGS_guiLabelList  &var_cas_ioLabels) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
  GGS_lstring  var_cas_mAttribute1 ;
  inLexique._assignFromAttribute_tokenString (var_cas_mAttribute1) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
  GGS_lstring  var_cas_mAttribute2 ;
  inLexique._assignFromAttribute_tokenString (var_cas_mAttribute2) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioLabels._addAssign_operation (var_cas_mAttribute1, var_cas_mAttribute2) ;
}

//---------------------------------------------------------------------------*

