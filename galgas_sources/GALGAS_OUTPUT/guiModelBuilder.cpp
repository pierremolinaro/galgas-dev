//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'guiModelBuilder.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 27th, 2009, at 21h48'27"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "guiModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "guiModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'gui_component_start_symbol'       *
//                                                                           *
//---------------------------------------------------------------------------*

void guiModelBuilder::
pr_gui_component_start_symbol_guiModelBuilder_35_33_ (galgas_scanner & inLexique,
                                GGS_guiComponentRoot  &var_cas_outGuiComponentRoot) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_gui) COMMA_HERE) ;
  GGS_lstring  var_cas_mGUIName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mGUIName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_mGUIClass ;
  inLexique.assignFromAttribute_tokenString (var_cas_mGUIClass) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_repeat_guiModelBuilder_0 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import_5F__5F_) COMMA_HERE) ;
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("when source file extension is '.gGui', the 'import__' construct is obsolete and has no effect: you can delete it") COMMA_SOURCE_FILE_AT_LINE (47)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_import) COMMA_HERE) ;
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("when source file extension is '.gGui', the 'import' construct is obsolete and has no effect: you can delete it") COMMA_SOURCE_FILE_AT_LINE (52)) ;
          switch (select_guiModelBuilder_1 (inLexique)) {
            case 1 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_semantics) COMMA_HERE) ;
              } break ;
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lexique) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
              } break ;
            case 4 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_syntax) COMMA_HERE) ;
              } break ;
            case 5 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  GGS_guiSimpleAttributeList  var_cas_simpleGlobalAttributes ;
  var_cas_simpleGlobalAttributes = GGS_guiSimpleAttributeList ::constructor_emptyList () ;
  GGS_withLexiqueList  var_cas_withLexiqueList ;
  var_cas_withLexiqueList = GGS_withLexiqueList ::constructor_emptyList () ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_repeat_guiModelBuilder_2 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("when source file extension is '.gGui', this construct outside a 'with lexique' is obsolete and has no effect: you can delete it") COMMA_SOURCE_FILE_AT_LINE (75)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
          { bool syntaxRepeat_3 = true ;
            while (syntaxRepeat_3) {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
              switch (select_repeat_guiModelBuilder_3 (inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_3 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          GGS_lstring  var_cas_mKey ;
          inLexique.assignFromAttribute_tokenString (var_cas_mKey) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
          GGS_lstring  var_cas_mValue ;
          var_cas_mValue = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
          { bool syntaxRepeat_4 = true ;
            while (syntaxRepeat_4) {
                GGS_lstring  var_cas_value ;
                inLexique.assignFromAttribute_tokenString (var_cas_value) ;
                inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
                var_cas_mValue = GGS_lstring ::constructor_new (inLexique, (var_cas_mValue.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89))).operator_concat (var_cas_value.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89))), var_cas_value.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) COMMA_HERE) ;
              switch (select_repeat_guiModelBuilder_4 (inLexique)) {
                case 2 : {
                  } break ;
                default :
                  syntaxRepeat_4 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
          var_cas_simpleGlobalAttributes._addAssign_operation (var_cas_mKey, var_cas_mValue) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("when source file extension is '.gGui', the 'label' construct outside a 'with lexique' is obsolete and has no effect: you can delete it") COMMA_SOURCE_FILE_AT_LINE (96)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_with) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_lexique) COMMA_HERE) ;
          GGS_lstring  var_cas_lexiqueReference ;
          inLexique.assignFromAttribute_tokenString (var_cas_lexiqueReference) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
          GGS_guiLabelList  var_cas_labels ;
          var_cas_labels = GGS_guiLabelList ::constructor_emptyList () ;
          GGS_guiSimpleAttributeList  var_cas_simpleAttributes ;
          var_cas_simpleAttributes = GGS_guiSimpleAttributeList ::constructor_emptyList () ;
          GGS_guiCompoundAttributeList  var_cas_compoundAttributes ;
          var_cas_compoundAttributes = GGS_guiCompoundAttributeList ::constructor_emptyList () ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B_) COMMA_HERE) ;
          { bool syntaxRepeat_5 = true ;
            while (syntaxRepeat_5) {
              switch (select_repeat_guiModelBuilder_5 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
                  GGS_lstring  var_cas_terminal1 ;
                  inLexique.assignFromAttribute_tokenString (var_cas_terminal1) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
                  GGS_lstring  var_cas_terminal2 ;
                  inLexique.assignFromAttribute_tokenString (var_cas_terminal2) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_terminal) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
                  var_cas_labels._addAssign_operation (var_cas_terminal1, var_cas_terminal2) ;
                  } break ;
                case 3 : {
                  GGS_lstring  var_cas_key ;
                  inLexique.assignFromAttribute_tokenString (var_cas_key) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  GGS_lstring  var_cas_name ;
                  inLexique.assignFromAttribute_tokenString (var_cas_name) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
                  GGS_lstring  var_cas_value ;
                  var_cas_value = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
                  { bool syntaxRepeat_6 = true ;
                    while (syntaxRepeat_6) {
                        GGS_lstring  var_cas_v ;
                        inLexique.assignFromAttribute_tokenString (var_cas_v) ;
                        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
                        var_cas_value = GGS_lstring ::constructor_new (inLexique, (var_cas_value.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124))).operator_concat (var_cas_v.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (124))), var_cas_v.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (124)) COMMA_HERE) ;
                      switch (select_repeat_guiModelBuilder_6 (inLexique)) {
                        case 2 : {
                          } break ;
                        default :
                          syntaxRepeat_6 = false ;
                          break ;
                      }
                    }
                  }
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
                  var_cas_compoundAttributes._addAssign_operation (var_cas_key, var_cas_name, var_cas_value) ;
                  } break ;
                case 4 : {
                  GGS_lstring  var_cas_name ;
                  inLexique.assignFromAttribute_tokenString (var_cas_name) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
                  GGS_lstring  var_cas_value ;
                  inLexique.assignFromAttribute_tokenString (var_cas_value) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
                  var_cas_simpleAttributes._addAssign_operation (var_cas_name, var_cas_value) ;
                  } break ;
                default :
                  syntaxRepeat_5 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D_) COMMA_HERE) ;
          var_cas_withLexiqueList._addAssign_operation (var_cas_lexiqueReference, var_cas_labels, var_cas_simpleAttributes, var_cas_compoundAttributes) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_gui) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outGuiComponentRoot = GGS_guiComponentRoot ::constructor_new (inLexique, var_cas_mGUIName, var_cas_mGUIClass, var_cas_simpleGlobalAttributes, var_cas_withLexiqueList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

