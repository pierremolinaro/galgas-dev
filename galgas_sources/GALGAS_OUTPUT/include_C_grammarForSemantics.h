//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'include_C_grammarForSemantics.h'                   *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 5th, 2007, at 21h16'41"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_C_grammarForSemantics'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_C_grammarForSemantics : public cPtr_AC_semanticsEntity {
  private : typedef cPtr_AC_semanticsEntity inherited ;
//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_C_grammarForSemantics (const GGS_M_nonterminalSymbolAlts & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_C_grammarForSemantics (void) {}
  #endif

//--- Attributes
  public : GGS_M_nonterminalSymbolAlts  mGrammarAltMap ;
  public : GGS_lstring  mLexiqueClassName ;
  public : virtual const char * message_messageTypeEntite (void) const ;
  public : static const char * static_string_message_messageTypeEntite (void) ;
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Lexique & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool isEqualToObject (const C_GGS_Object * inOperand) const ;
} ;

//---------------------------------------------------------------------------*

