//---------------------------------------------------------------------------*
//                                                                           *
//                File 'semanticDeclarationModelBuilder.cpp'                 *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     february 7th, 2010, at 20h52'33"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticDeclarationModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticDeclarationModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'attribute_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_attribute_declaration_semanticDeclarationModelBuilder_61_28_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_attributeInCollectionList  &var_cas_ioAttributeInCollectionList) {
  GGS_lstring  var_cas_mAttributeTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mAttributeTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mAttributeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mAttributeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstringlist  var_cas_featureList = GGS_lstringlist ::constructor_emptyList () ;
  switch (select_semanticDeclarationModelBuilder_0 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
      { bool syntaxRepeat_1 = true ;
        while (syntaxRepeat_1) {
            GGS_lstring  var_cas_featureName ;
            inLexique.assignFromAttribute_tokenString (var_cas_featureName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_featureList.addAssign_operation (var_cas_featureName) ;
          switch (select_semanticDeclarationModelBuilder_1 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_1 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioAttributeInCollectionList.addAssign_operation (var_cas_mAttributeTypeName, var_cas_mAttributeName, var_cas_featureList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_85_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_listmap) COMMA_HERE) ;
  GGS_lstring  var_cas_mListmapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mListmapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  GGS_lstring  var_cas_mAssociatedListTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mAssociatedListTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_listmapDeclaration ::constructor_new (inLexique, var_cas_mListmapTypeName, var_cas_mAssociatedListTypeName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_obsolete_declaration_semanticDeclarationModelBuilder_107_27_ (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'map_method_declaration'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_map_method_declaration_semanticDeclarationModelBuilder_119_29_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_mapMethodList  &var_cas_ioMapMethodList) {
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_mAlternateMethodName ;
  switch (select_semanticDeclarationModelBuilder_2 (inLexique)) {
    case 1 : {
      var_cas_mAlternateMethodName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_mAlternateMethodName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  GGS_lstring  var_cas_mErrorMessage ;
  inLexique.assignFromAttribute_tokenString (var_cas_mErrorMessage) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  GGS_lstring  var_cas_mShadowErrorMessage ;
  switch (select_semanticDeclarationModelBuilder_3 (inLexique)) {
    case 1 : {
      var_cas_mShadowErrorMessage = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_mShadowErrorMessage) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioMapMethodList.addAssign_operation (var_cas_mMethodName, var_cas_mAlternateMethodName, var_cas_mErrorMessage, var_cas_mShadowErrorMessage) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_149_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  GGS_lstring  var_cas_mMapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mAssociatedEnumTypeName ;
  GGS_lstring  var_cas_mAssociatedTerminaisonMethodName ;
  switch (select_semanticDeclarationModelBuilder_4 (inLexique)) {
    case 1 : {
      var_cas_mAssociatedEnumTypeName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      var_cas_mAssociatedTerminaisonMethodName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_mAssociatedEnumTypeName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_mAssociatedTerminaisonMethodName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  GGS_mapMethodList  var_cas_mInsertMethodList = GGS_mapMethodList ::constructor_emptyList () ;
  GGS_mapMethodList  var_cas_mSearchMethodList = GGS_mapMethodList ::constructor_emptyList () ;
  GGS_mapMethodList  var_cas_mRemoveMethodList = GGS_mapMethodList ::constructor_emptyList () ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
      switch (select_semanticDeclarationModelBuilder_5 (inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (inLexique, var_cas_mAttributeList) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
          nt_map_method_declaration_ (inLexique, var_cas_mInsertMethodList) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
          nt_map_method_declaration_ (inLexique, var_cas_mSearchMethodList) ;
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_remove) COMMA_HERE) ;
          nt_map_method_declaration_ (inLexique, var_cas_mRemoveMethodList) ;
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_mapDeclaration ::constructor_new (inLexique, var_cas_mMapTypeName, var_cas_mAssociatedEnumTypeName, var_cas_mAssociatedTerminaisonMethodName, var_cas_mAttributeList, var_cas_mInsertMethodList, var_cas_mSearchMethodList, var_cas_mRemoveMethodList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_obsolete_declaration_semanticDeclarationModelBuilder_205_27_ (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_mapindex) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_213_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_mapindex) COMMA_HERE) ;
  GGS_lstring  var_cas_mMapIndexName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMapIndexName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
  GGS_lstring  var_cas_mMapTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMapTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
  GGS_lstring  var_cas_mSearchMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mSearchMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  GGS_lstring  var_cas_mSearchMethodErrorMessage ;
  inLexique.assignFromAttribute_tokenString (var_cas_mSearchMethodErrorMessage) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_mapindexDeclaration ::constructor_new (inLexique, var_cas_mMapIndexName, var_cas_mMapTypeName, var_cas_mSearchMethodName, var_cas_mSearchMethodErrorMessage COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_obsolete_declaration_semanticDeclarationModelBuilder_243_27_ (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_map) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
      switch (select_semanticDeclarationModelBuilder_6 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_insert) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_search) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_error) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_block) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
          { bool syntaxRepeat_7 = true ;
            while (syntaxRepeat_7) {
              switch (select_semanticDeclarationModelBuilder_7 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_7 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__28_) COMMA_HERE) ;
          { bool syntaxRepeat_8 = true ;
            while (syntaxRepeat_8) {
              switch (select_semanticDeclarationModelBuilder_8 (inLexique)) {
                case 2 : {
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3F_) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
                  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_8 = false ;
                  break ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__29_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'class_message_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_class_message_declaration_semanticDeclarationModelBuilder_300_32_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_classMessageDefinitionList  &var_cas_ioClassMessageDefinitionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
  GGS_lstring  var_cas_mMessageName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMessageName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_mMessageValue ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMessageValue) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioClassMessageDefinitionList.addAssign_operation (var_cas_mMessageName, var_cas_mMessageValue) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'class_abstract_method_declaration'    *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_class_abstract_method_declaration_semanticDeclarationModelBuilder_316_40_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_abstractMethodDefinitionList  &var_cas_ioAbstractMethodDefinitionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mSignature ;
  nt_formal_parameter_list_ (inLexique, var_cas_mSignature) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioAbstractMethodDefinitionList.addAssign_operation (var_cas_mMethodName, var_cas_mSignature) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of production rule 'class_overriden_method_declaration'   *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_class_overriden_method_declaration_semanticDeclarationModelBuilder_336_41_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_overridenMethodDefinitionList  &var_cas_ioOverridenMethodDefinitionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mSignature ;
  nt_formal_parameter_list_ (inLexique, var_cas_mSignature) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioOverridenMethodDefinitionList.addAssign_operation (var_cas_mMethodName, var_cas_mSignature, var_cas_mInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'class_method_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_class_method_declaration_semanticDeclarationModelBuilder_363_31_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_methodDefinitionList  &var_cas_ioMethodDefinitionList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mSignature ;
  nt_formal_parameter_list_ (inLexique, var_cas_mSignature) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioMethodDefinitionList.addAssign_operation (var_cas_mMethodName, var_cas_mSignature, var_cas_mInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'lazy_attribute_declaration'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_lazy_attribute_declaration_semanticDeclarationModelBuilder_387_33_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_lazyAttributeList  &var_cas_ioLazyAttributeList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_attributeTypeAndNameList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
        GGS_lstring  var_cas_attributeTypeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_attributeTypeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
        GGS_lstring  var_cas_attributeName ;
        inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_attributeTypeAndNameList.addAssign_operation (var_cas_attributeTypeName, var_cas_attributeName, GGS_lstringlist ::constructor_emptyList ()) ;
      switch (select_semanticDeclarationModelBuilder_9 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_once) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioLazyAttributeList.addAssign_operation (GGS_location (inLexique), var_cas_attributeTypeAndNameList, var_cas_mInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_411_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  GGS_bool var_cas_mIsAbstract ;
  switch (select_semanticDeclarationModelBuilder_10 (inLexique)) {
    case 1 : {
      var_cas_mIsAbstract = GGS_bool (false) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
      var_cas_mIsAbstract = GGS_bool (true) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_class) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mClassTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mSuperClassName ;
  switch (select_semanticDeclarationModelBuilder_11 (inLexique)) {
    case 1 : {
      var_cas_mSuperClassName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_extends) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_mSuperClassName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstringlist  var_cas_classFeatureList = GGS_lstringlist ::constructor_emptyList () ;
  switch (select_semanticDeclarationModelBuilder_12 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_feature) COMMA_HERE) ;
      { bool syntaxRepeat_13 = true ;
        while (syntaxRepeat_13) {
            GGS_lstring  var_cas_classFeatureName ;
            inLexique.assignFromAttribute_tokenString (var_cas_classFeatureName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
            var_cas_classFeatureList.addAssign_operation (var_cas_classFeatureName) ;
          switch (select_semanticDeclarationModelBuilder_13 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_13 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_string var_cas_mClassMessage = GGS_string ("") ;
  GGS_attributeInCollectionList  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  GGS_abstractMethodDefinitionList  var_cas_mAbstractMethodList = GGS_abstractMethodDefinitionList ::constructor_emptyList () ;
  GGS_overridenMethodDefinitionList  var_cas_mOverridenMethodList = GGS_overridenMethodDefinitionList ::constructor_emptyList () ;
  GGS_methodDefinitionList  var_cas_mMethodList = GGS_methodDefinitionList ::constructor_emptyList () ;
  GGS_classMessageDefinitionList  var_cas_mMessageList = GGS_classMessageDefinitionList ::constructor_emptyList () ;
  GGS_lazyAttributeList  var_cas_mLazyAttributeList = GGS_lazyAttributeList ::constructor_emptyList () ;
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
      switch (select_semanticDeclarationModelBuilder_14 (inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (inLexique, var_cas_mAttributeList) ;
          } break ;
        case 3 : {
          nt_class_abstract_method_declaration_ (inLexique, var_cas_mAbstractMethodList) ;
          } break ;
        case 4 : {
          nt_class_overriden_method_declaration_ (inLexique, var_cas_mOverridenMethodList) ;
          } break ;
        case 5 : {
          nt_class_method_declaration_ (inLexique, var_cas_mMethodList) ;
          } break ;
        case 6 : {
          nt_class_message_declaration_ (inLexique, var_cas_mMessageList) ;
          } break ;
        case 7 : {
          nt_lazy_attribute_declaration_ (inLexique, var_cas_mLazyAttributeList) ;
          } break ;
        case 8 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_message) COMMA_HERE) ;
          const GGS_bool cond_14910 = (var_cas_mClassMessage.reader_length ()).operator_strictSup (GGS_uint (0U)) ;
          if (cond_14910.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message is already defined") COMMA_SOURCE_FILE_AT_LINE (467)) ;
          }
          GGS_lstring  var_cas_classMessage ;
          inLexique.assignFromAttribute_tokenString (var_cas_classMessage) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          const GGS_bool cond_15103 = (var_cas_classMessage.ggs_string ().reader_length ()).operator_isEqual (GGS_uint (0U)) ;
          if (cond_15103.isBuiltAndTrue ()) {
            var_cas_classMessage.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("the class message string should be not empty") COMMA_SOURCE_FILE_AT_LINE (472)) ;
          }
          var_cas_mClassMessage = var_cas_classMessage.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (473)) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_classDeclaration ::constructor_new (inLexique, var_cas_mIsAbstract, var_cas_mClassTypeName, var_cas_mSuperClassName, var_cas_classFeatureList, var_cas_mAttributeList, var_cas_mAbstractMethodList, var_cas_mOverridenMethodList, var_cas_mMethodList, var_cas_mMessageList, var_cas_mLazyAttributeList, var_cas_mClassMessage COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_499_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_struct) COMMA_HERE) ;
  GGS_lstring  var_cas_mListTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mListTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  { bool syntaxRepeat_15 = true ;
    while (syntaxRepeat_15) {
      switch (select_semanticDeclarationModelBuilder_15 (inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (inLexique, var_cas_mAttributeList) ;
          } break ;
        default :
          syntaxRepeat_15 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_structDeclaration ::constructor_new (inLexique, var_cas_mListTypeName, var_cas_mAttributeList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_523_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  GGS_lstring  var_cas_mListTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mListTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  { bool syntaxRepeat_16 = true ;
    while (syntaxRepeat_16) {
      switch (select_semanticDeclarationModelBuilder_16 (inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (inLexique, var_cas_mAttributeList) ;
          } break ;
        default :
          syntaxRepeat_16 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_listDeclaration ::constructor_new (inLexique, var_cas_mListTypeName, var_cas_mAttributeList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_obsolete_declaration_semanticDeclarationModelBuilder_543_27_ (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_list) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'obsolete_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_obsolete_declaration_semanticDeclarationModelBuilder_555_27_ (C_Lexique_galgas_5F_scanner & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_sortedlist) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'sortedlist_sort_descriptor'       *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_sortedlist_sort_descriptor_semanticDeclarationModelBuilder_567_33_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_sortedListSortDescriptorList  &var_cas_ioSortedListSortDescriptorList) {
  GGS_lstring  var_cas_mSortedAttributeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mSortedAttributeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_bool var_cas_mAscending ;
  switch (select_semanticDeclarationModelBuilder_17 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3C_) COMMA_HERE) ;
      var_cas_mAscending = GGS_bool (true) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3E_) COMMA_HERE) ;
      var_cas_mAscending = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioSortedListSortDescriptorList.addAssign_operation (var_cas_mSortedAttributeName, var_cas_mAscending) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_582_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_sortedlist) COMMA_HERE) ;
  GGS_lstring  var_cas_mSortedListTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mSortedListTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_attributeInCollectionList  var_cas_mAttributeList = GGS_attributeInCollectionList ::constructor_emptyList () ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
      switch (select_semanticDeclarationModelBuilder_18 (inLexique)) {
        case 2 : {
          nt_attribute_declaration_ (inLexique, var_cas_mAttributeList) ;
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_sortedListSortDescriptorList  var_cas_mSortDescriptorList = GGS_sortedListSortDescriptorList ::constructor_emptyList () ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
        nt_sortedlist_sort_descriptor_ (inLexique, var_cas_mSortDescriptorList) ;
      switch (select_semanticDeclarationModelBuilder_19 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_sortedListDeclaration ::constructor_new (inLexique, var_cas_mSortedListTypeName, var_cas_mAttributeList, var_cas_mSortDescriptorList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'enum_message_declaration'        *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_enum_message_declaration_semanticDeclarationModelBuilder_619_31_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_enumMessageList  &var_cas_ioEnumMessageList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_mEnumMessageName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mEnumMessageName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_enumMessageAssociationList  var_cas_mMessageAssociationList = GGS_enumMessageAssociationList ::constructor_emptyList () ;
  { bool syntaxRepeat_20 = true ;
    while (syntaxRepeat_20) {
        GGS_lstring  var_cas_mConstantName ;
        inLexique.assignFromAttribute_tokenString (var_cas_mConstantName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
        GGS_lstring  var_cas_mMessage ;
        inLexique.assignFromAttribute_tokenString (var_cas_mMessage) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
        var_cas_mMessageAssociationList.addAssign_operation (var_cas_mConstantName, var_cas_mMessage) ;
      switch (select_semanticDeclarationModelBuilder_20 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_20 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioEnumMessageList.addAssign_operation (var_cas_mEnumMessageName, var_cas_mMessageAssociationList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_643_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_enum) COMMA_HERE) ;
  GGS_lstring  var_cas_mEnumTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mEnumTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_lstringlist  var_cas_mConstantList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_21 = true ;
    while (syntaxRepeat_21) {
        GGS_lstring  var_cas_constantName ;
        inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
        var_cas_mConstantList.addAssign_operation (var_cas_constantName) ;
      switch (select_semanticDeclarationModelBuilder_21 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_21 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_enumMessageList  var_cas_mEnumMessageList = GGS_enumMessageList ::constructor_emptyList () ;
  { bool syntaxRepeat_22 = true ;
    while (syntaxRepeat_22) {
      switch (select_semanticDeclarationModelBuilder_22 (inLexique)) {
        case 2 : {
          nt_enum_message_declaration_ (inLexique, var_cas_mEnumMessageList) ;
          } break ;
        default :
          syntaxRepeat_22 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_enumDeclaration ::constructor_new (inLexique, var_cas_mEnumTypeName, var_cas_mConstantList, var_cas_mEnumMessageList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_677_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_filewrapper) COMMA_HERE) ;
  GGS_lstring  var_cas_mFilewrapperName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mFilewrapperName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_in) COMMA_HERE) ;
  GGS_lstring  var_cas_mFilewrapperPath ;
  inLexique.assignFromAttribute_tokenString (var_cas_mFilewrapperPath) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_lstringlist  var_cas_mFilewrapperExtensionList = GGS_lstringlist ::constructor_emptyList () ;
  switch (select_semanticDeclarationModelBuilder_23 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      { bool syntaxRepeat_24 = true ;
        while (syntaxRepeat_24) {
            GGS_lstring  var_cas_extension ;
            inLexique.assignFromAttribute_tokenString (var_cas_extension) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
            var_cas_mFilewrapperExtensionList.addAssign_operation (var_cas_extension) ;
          switch (select_semanticDeclarationModelBuilder_24 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_24 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7B_) COMMA_HERE) ;
  GGS_filewrapperTemplateList  var_cas_mFilewrapperTemplateList = GGS_filewrapperTemplateList ::constructor_emptyList () ;
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
      switch (select_semanticDeclarationModelBuilder_25 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_template) COMMA_HERE) ;
          GGS_lstring  var_cas_mFilewrapperTemplateName ;
          inLexique.assignFromAttribute_tokenString (var_cas_mFilewrapperTemplateName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
          GGS_lstring  var_cas_mFilewrapperTemplatePath ;
          inLexique.assignFromAttribute_tokenString (var_cas_mFilewrapperTemplatePath) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_literal_5F_string) COMMA_HERE) ;
          GGS_formalInputParameterList  var_cas_mFilewrapperTemplateFormalInputParameters ;
          nt_formal_input_parameter_list_ (inLexique, var_cas_mFilewrapperTemplateFormalInputParameters) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
          var_cas_mFilewrapperTemplateList.addAssign_operation (var_cas_mFilewrapperTemplateName, var_cas_mFilewrapperTemplatePath, var_cas_mFilewrapperTemplateFormalInputParameters) ;
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__7D_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_filewrapperDeclaration ::constructor_new (inLexique, var_cas_mFilewrapperName, var_cas_mFilewrapperPath, var_cas_mFilewrapperExtensionList, var_cas_mFilewrapperTemplateList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_728_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (inLexique, var_cas_mFormalParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mAbstractCategoryMethodListMap.addAssign_operation (var_cas_mClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (738)), var_cas_mMethodName, var_cas_mFormalParameterList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_747_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (inLexique, var_cas_mFormalParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mRoutineInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mRoutineInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mCategoryMethodListMap.addAssign_operation (var_cas_mClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (762)), var_cas_mMethodName, var_cas_mFormalParameterList, var_cas_mRoutineInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_775_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (inLexique, var_cas_mFormalParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mRoutineInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mRoutineInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_method) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mOverridingCategoryMethodListMap.addAssign_operation (var_cas_mClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (791)), var_cas_mMethodName, var_cas_mFormalParameterList, var_cas_mRoutineInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_804_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_abstract) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mReaderName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReaderName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_formalInputParameterList  var_cas_mFormalInputParameterList ;
  nt_formal_input_parameter_list_ (inLexique, var_cas_mFormalInputParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_mReturnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReturnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mAbstractCategoryReaderListMap.addAssign_operation (var_cas_mClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (818)), var_cas_mReaderName, var_cas_mFormalInputParameterList, var_cas_mReturnedTypeName) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_831_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_formalInputParameterList  var_cas_mFormalInputParameterList ;
  nt_formal_input_parameter_list_ (inLexique, var_cas_mFormalInputParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_mReturnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReturnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mReturnedVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReturnedVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mRoutineInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mRoutineInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mCategoryReaderListMap.addAssign_operation (var_cas_mClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (849)), var_cas_mMethodName, var_cas_mFormalInputParameterList, var_cas_mReturnedTypeName, var_cas_mReturnedVariableName, var_cas_mRoutineInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticDeclarationModelBuilder::
pr_semantic_declaration_semanticDeclarationModelBuilder_864_27_ (C_Lexique_galgas_5F_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_override) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  GGS_lstring  var_cas_mClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  GGS_formalInputParameterList  var_cas_mFormalInputParameterList ;
  nt_formal_input_parameter_list_ (inLexique, var_cas_mFormalInputParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_mReturnedTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReturnedTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mReturnedVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReturnedVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mRoutineInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mRoutineInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken_reader) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgas_5F_scanner::kToken__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mOverridingCategoryReaderListMap.addAssign_operation (var_cas_mClassName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (883)), var_cas_mMethodName, var_cas_mFormalInputParameterList, var_cas_mReturnedTypeName, var_cas_mReturnedVariableName, var_cas_mRoutineInstructionList) ;
}

//---------------------------------------------------------------------------*

