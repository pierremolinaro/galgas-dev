//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'projectMetamodel.h'                          *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                        may 1st, 2010, at 17h22'2"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef projectMetamodel_DEFINED
#define projectMetamodel_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sourceFileKind ;
class GGS_projectSourceList ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Class for 'sourceFileKind' Enumeration                   *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sourceFileKind ;

//---------------------------------------------------------------------------*

class GGS_sourceFileKind : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_externSourceFile, enum_grammarSourceFile, enum_guiSourceFile, enum_lexiqueSourceFile, enum_optionSourceFile, enum_programSourceFile, enum_semanticsSourceFile, enum_syntaxSourceFile} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_sourceFileKind (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_sourceFileKind (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 4 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sourceFileKind castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_sourceFileKind  constructor_externSourceFile (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_sourceFileKind (enum_externSourceFile) ;
  }
  public : static inline GGS_sourceFileKind  constructor_grammarSourceFile (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_sourceFileKind (enum_grammarSourceFile) ;
  }
  public : static inline GGS_sourceFileKind  constructor_guiSourceFile (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_sourceFileKind (enum_guiSourceFile) ;
  }
  public : static inline GGS_sourceFileKind  constructor_lexiqueSourceFile (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_sourceFileKind (enum_lexiqueSourceFile) ;
  }
  public : static inline GGS_sourceFileKind  constructor_optionSourceFile (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_sourceFileKind (enum_optionSourceFile) ;
  }
  public : static inline GGS_sourceFileKind  constructor_programSourceFile (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_sourceFileKind (enum_programSourceFile) ;
  }
  public : static inline GGS_sourceFileKind  constructor_semanticsSourceFile (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_sourceFileKind (enum_semanticsSourceFile) ;
  }
  public : static inline GGS_sourceFileKind  constructor_syntaxSourceFile (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_sourceFileKind (enum_syntaxSourceFile) ;
  }

//--- Readers

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_sourceFileKind inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_sourceFileKind inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_sourceFileKind inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_sourceFileKind inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_sourceFileKind inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_sourceFileKind inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@projectSourceList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_projectSourceList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_projectSourceList ;

//---------------------------------------------------------------------------*

class GGS_projectSourceList : public AC_GGS_list {
  public : typedef elementOf_GGS_projectSourceList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_projectSourceList constructor_emptyList (void) ;
  public : static GGS_projectSourceList constructor_listWithValue (const GGS_sourceFileKind& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_projectSourceList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_projectSourceList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_projectSourceList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_projectSourceList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_sourceFileKind& _out_0,
                              GGS_lstring & _out_1,
                              GGS_lstringlist & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_sourceFileKind& _out_0,
                             GGS_lstring & _out_1,
                             GGS_lstringlist & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_sourceFileKind& _out_0,
                                GGS_lstring & _out_1,
                                GGS_lstringlist & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_sourceFileKind& _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lstringlist & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_projectSourceList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_sourceFileKind& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_projectSourceList operator_concat (const GGS_projectSourceList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_sourceFileKind& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_sourceFileKind& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_sourceFileKind& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_sourceFileKind
  reader_mSourceKindAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mFilePathAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist 
  reader_mTargetListAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSourceKindAtIndex (C_CompilerEx & inLexique,
                              const GGS_sourceFileKind & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMFilePathAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMTargetListAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstringlist  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_projectSourceList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_projectSourceList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_sourceFileKind  & _mSourceKind (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mFilePath (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstringlist   & _mTargetList (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@projectSourceList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_projectSourceList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_sourceFileKind mSourceKind ;
  public : GGS_lstring  mFilePath ;
  public : GGS_lstringlist  mTargetList ;
//--- Constructor
  public : elementOf_GGS_projectSourceList (const GGS_sourceFileKind& ,
                                const GGS_lstring & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_projectSourceList * nextObject (void) const { return (elementOf_GGS_projectSourceList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_projectSourceList * previousObject (void) const { return (elementOf_GGS_projectSourceList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_projectSourceList ;
} ;

//---------------------------------------------------------------------------*

#endif
