//---------------------------------------------------------------------------*
//                                                                           *
//                           File 'cocoaGalgas.m'                            *
//             Generated by version version GALGAS_BETA_VERSION              *
//                       march 2nd, 2012, at 11h24'4"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1


#import "OC_Token.h"
#import "F_CocoaWrapperForGalgas.h"
#import "galgas_scanner-cocoa.m"
#import "galgasTemplateScanner-cocoa.m"
#import "GGSUpdateCocoaGalgas.h"

#ifdef USER_DEFAULT_COLORS_DEFINED
  #import "user_default_colors.h"
#endif

//---------------------------------------------------------------------------*

#pragma mark Nibs

//---------------------------------------------------------------------------*
//                                                                           *
//          N I B S   A N D   T H E I R   M A I N   C L A S S E S            *
//                                                                           *
//---------------------------------------------------------------------------*

NSArray * nibsAndClasses (void) {
  return [NSArray arrayWithObjects:
    [NSArray arrayWithObjects:@"galgasUpdate", [GGSUpdateCocoaGalgas class], nil],
    nil
  ] ;
}

//---------------------------------------------------------------------------*

#pragma mark Command Line Options

//---------------------------------------------------------------------------*
//                                                                           *
//                       Command Line Options                                *
//                                                                           *
//---------------------------------------------------------------------------*

#import "galgas_cli_options-cocoa.m"

//---------------------------------------------------------------------------*

void enterOptions (NSMutableArray * ioBoolOptionArray,
                   NSMutableArray * ioUIntOptionArray,
                   NSMutableArray * ioStringOptionArray) {
  enterOptionsFor_galgas_5F_cli_5F_options (ioBoolOptionArray, ioUIntOptionArray, ioStringOptionArray) ;
}

//---------------------------------------------------------------------------*

#pragma mark Lexique galgas_scanner

//---------------------------------------------------------------------------*
//                                                                           *
//                     P O P    U P    L I S T    D A T A                    *
//                                                                           *
//---------------------------------------------------------------------------*

static const UInt16 gPopUpData_galgas_5F_scanner_1896 [3] = {
  galgas_scanner_1_before,
  galgas_scanner_1__7B_,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_1919 [3] = {
  galgas_scanner_1_after,
  galgas_scanner_1__7B_,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_1948 [3] = {
  galgas_scanner_1_map,
  galgas_scanner_1_type_5F_name,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_1983 [3] = {
  galgas_scanner_1_uniquemap,
  galgas_scanner_1_type_5F_name,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2013 [3] = {
  galgas_scanner_1_list,
  galgas_scanner_1_type_5F_name,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2049 [3] = {
  galgas_scanner_1_sortedlist,
  galgas_scanner_1_type_5F_name,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2079 [3] = {
  galgas_scanner_1_enum,
  galgas_scanner_1_type_5F_name,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2110 [3] = {
  galgas_scanner_1_class,
  galgas_scanner_1_type_5F_name,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2142 [3] = {
  galgas_scanner_1_struct,
  galgas_scanner_1_type_5F_name,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2189 [3] = {
  galgas_scanner_1_nonterminal,
  galgas_scanner_1_non_5F_terminal_5F_symbol,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2229 [3] = {
  galgas_scanner_1_rule,
  galgas_scanner_1_non_5F_terminal_5F_symbol,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2263 [3] = {
  galgas_scanner_1_routine,
  galgas_scanner_1_identifier,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2298 [3] = {
  galgas_scanner_1_function,
  galgas_scanner_1_identifier,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2329 [3] = {
  galgas_scanner_1_once,
  galgas_scanner_1_identifier,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2373 [4] = {
  galgas_scanner_1_filewrapper,
  galgas_scanner_1_identifier,
  galgas_scanner_1_in,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2431 [5] = {
  galgas_scanner_1_abstract,
  galgas_scanner_1_method,
  galgas_scanner_1_type_5F_name,
  galgas_scanner_1_identifier,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2489 [5] = {
  galgas_scanner_1_override,
  galgas_scanner_1_method,
  galgas_scanner_1_type_5F_name,
  galgas_scanner_1_identifier,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2535 [4] = {
  galgas_scanner_1_method,
  galgas_scanner_1_type_5F_name,
  galgas_scanner_1_identifier,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2593 [5] = {
  galgas_scanner_1_abstract,
  galgas_scanner_1_reader,
  galgas_scanner_1_type_5F_name,
  galgas_scanner_1_identifier,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2651 [5] = {
  galgas_scanner_1_override,
  galgas_scanner_1_reader,
  galgas_scanner_1_type_5F_name,
  galgas_scanner_1_identifier,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2697 [4] = {
  galgas_scanner_1_reader,
  galgas_scanner_1_type_5F_name,
  galgas_scanner_1_identifier,
  0
} ;

static const UInt16 gPopUpData_galgas_5F_scanner_2744 [4] = {
  galgas_scanner_1_when,
  galgas_scanner_1__2E_,
  galgas_scanner_1_literal_5F_string,
  0
} ;

static const UInt16 * gPopUpData_galgas_5F_scanner [23] = {
  gPopUpData_galgas_5F_scanner_1896,
  gPopUpData_galgas_5F_scanner_1919,
  gPopUpData_galgas_5F_scanner_1948,
  gPopUpData_galgas_5F_scanner_1983,
  gPopUpData_galgas_5F_scanner_2013,
  gPopUpData_galgas_5F_scanner_2049,
  gPopUpData_galgas_5F_scanner_2079,
  gPopUpData_galgas_5F_scanner_2110,
  gPopUpData_galgas_5F_scanner_2142,
  gPopUpData_galgas_5F_scanner_2189,
  gPopUpData_galgas_5F_scanner_2229,
  gPopUpData_galgas_5F_scanner_2263,
  gPopUpData_galgas_5F_scanner_2298,
  gPopUpData_galgas_5F_scanner_2329,
  gPopUpData_galgas_5F_scanner_2373,
  gPopUpData_galgas_5F_scanner_2431,
  gPopUpData_galgas_5F_scanner_2489,
  gPopUpData_galgas_5F_scanner_2535,
  gPopUpData_galgas_5F_scanner_2593,
  gPopUpData_galgas_5F_scanner_2651,
  gPopUpData_galgas_5F_scanner_2697,
  gPopUpData_galgas_5F_scanner_2744,
  NULL
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Lexique interface                              *
//                                                                           *
//---------------------------------------------------------------------------*

@interface OC_Tokenizer_galgas_scanner : OC_Lexique_galgas_scanner {

}

- (NSString *) blockComment ;

- (const UInt16 * *) popupListData ;

- (UInt32) textMacroCount ;

- (NSString *) textMacroTitleAtIndex: (const UInt32) inIndex ;

- (NSString *) textMacroContentAtIndex: (const UInt32) inIndex ;

- (NSString *) tabItemTitle ;

@end

//---------------------------------------------------------------------------*

@implementation OC_Tokenizer_galgas_scanner

//---------------------------------------------------------------------------*

- (NSString *) blockComment {
  return @"#" ;
}

//---------------------------------------------------------------------------*

- (const UInt16 * *) popupListData {
  return gPopUpData_galgas_5F_scanner ;
}

//---------------------------------------------------------------------------*

- (UInt32) textMacroCount {
  return 7 ;
}

//---------------------------------------------------------------------------*

- (NSString *) tabItemTitle {
  return @"Source" ;
}

//---------------------------------------------------------------------------*

- (NSString *) textMacroTitleAtIndex: (const UInt32) inIndex {
  static NSString * kTextMacroTitle [8] = {
    @"Types/Class",
    @"Types/Enum",
    @"Types/List",
    @"Types/List Map",
    @"Types/Map",
    @"Types/Sorted List",
    @"Types/Struct",
    NULL
  } ;
  return kTextMacroTitle [inIndex] ;
}

//---------------------------------------------------------------------------*

- (NSString *) textMacroContentAtIndex: (const UInt32) inIndex {
  static NSString * kTextMacroContent [8] = {
    @"class @aClassName : extends @superClassName {\n"
  "  @aType mAnAttribute ;\n"
  "  override method myMethod !@string outResult :\n"
  "    outResult := \"a string\" ;\n"
  "  end method ;\n"
  "}\n",
    @"enum @aType {\n"
  "  constructor constant1 ;\n"
  "  constructor constant2 ;\n"
  "}{\n"
  "  reader actualArgumentMessage :\n"
  "    constant1 -> \"message for constant1\" ;\n"
  "    constant2 -> \"message for constant2\" ;\n"
  "  end reader ;\n"
  "}\n",
    @"list @type {\n"
  "  @aType mAnAttribute ;\n"
  "}\n",
    @"list @type {\n"
  "  @aType mAnAttribute ;\n"
  "}\n"
  "listmap @myListMap (@aList) ;\n",
    @"map @type {\n"
  "  @aType mAnAttribute ;\n"
  "  insert insertKey error message \"the '%K' key is already declared in %L\" ;\n"
  "  search searchKey error message \"there is no '%K' key\" ;\n"
  "}\n",
    @"sortedlist @type {\n"
  "  @string mFirstAttribute ;\n"
  "  @bool mSecondAttribute ;\n"
  "}{\n"
  "mFirstAttribute >, mSecondAttribute <\n"
  "}\n",
    @"struct @type {\n"
  "  @aType mAnAttribute ;\n"
  "}\n",
    NULL
  } ;
  return kTextMacroContent [inIndex] ;
}

//---------------------------------------------------------------------------*

@end

//---------------------------------------------------------------------------*

#pragma mark Lexique galgasTemplateScanner

//---------------------------------------------------------------------------*
//                                                                           *
//                     P O P    U P    L I S T    D A T A                    *
//                                                                           *
//---------------------------------------------------------------------------*

static const UInt16 * gPopUpData_galgasTemplateScanner [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Lexique interface                              *
//                                                                           *
//---------------------------------------------------------------------------*

@interface OC_Tokenizer_galgasTemplateScanner : OC_Lexique_galgasTemplateScanner {

}

- (NSString *) blockComment ;

- (const UInt16 * *) popupListData ;

- (UInt32) textMacroCount ;

- (NSString *) textMacroTitleAtIndex: (const UInt32) inIndex ;

- (NSString *) textMacroContentAtIndex: (const UInt32) inIndex ;

- (NSString *) tabItemTitle ;

@end

//---------------------------------------------------------------------------*

@implementation OC_Tokenizer_galgasTemplateScanner

//---------------------------------------------------------------------------*

- (NSString *) blockComment {
  return @"" ;
}

//---------------------------------------------------------------------------*

- (const UInt16 * *) popupListData {
  return gPopUpData_galgasTemplateScanner ;
}

//---------------------------------------------------------------------------*

- (UInt32) textMacroCount {
  return 0 ;
}

//---------------------------------------------------------------------------*

- (NSString *) tabItemTitle {
  return @"Template" ;
}

//---------------------------------------------------------------------------*

- (NSString *) textMacroTitleAtIndex: (const UInt32) inIndex {
  static NSString * kTextMacroTitle [1] = {
    NULL
  } ;
  return kTextMacroTitle [inIndex] ;
}

//---------------------------------------------------------------------------*

- (NSString *) textMacroContentAtIndex: (const UInt32) inIndex {
  static NSString * kTextMacroContent [1] = {
    NULL
  } ;
  return kTextMacroContent [inIndex] ;
}

//---------------------------------------------------------------------------*

@end



//---------------------------------------------------------------------------*

OC_Lexique * tokenizerForExtension (const NSString * inExtension) {
  OC_Lexique * result = nil ;
  if ([inExtension isEqualToString:@"gGrammar"]) {
    result = [[[OC_Tokenizer_galgas_scanner alloc] init] autorelease] ;
  }else if ([inExtension isEqualToString:@"gGui"]) {
    result = [[[OC_Tokenizer_galgas_scanner alloc] init] autorelease] ;
  }else if ([inExtension isEqualToString:@"gLexique"]) {
    result = [[[OC_Tokenizer_galgas_scanner alloc] init] autorelease] ;
  }else if ([inExtension isEqualToString:@"gOption"]) {
    result = [[[OC_Tokenizer_galgas_scanner alloc] init] autorelease] ;
  }else if ([inExtension isEqualToString:@"gProgram"]) {
    result = [[[OC_Tokenizer_galgas_scanner alloc] init] autorelease] ;
  }else if ([inExtension isEqualToString:@"gProject"]) {
    result = [[[OC_Tokenizer_galgas_scanner alloc] init] autorelease] ;
  }else if ([inExtension isEqualToString:@"gSemantics"]) {
    result = [[[OC_Tokenizer_galgas_scanner alloc] init] autorelease] ;
  }else if ([inExtension isEqualToString:@"gSyntax"]) {
    result = [[[OC_Tokenizer_galgas_scanner alloc] init] autorelease] ;
  }else if ([inExtension isEqualToString:@"gTemplate"]) {
    result = [[[OC_Tokenizer_galgasTemplateScanner alloc] init] autorelease] ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

NSArray * tokenizers (void) {
  return [NSArray arrayWithObjects:
    [[[OC_Tokenizer_galgas_scanner alloc] init] autorelease],
    [[[OC_Tokenizer_galgasTemplateScanner alloc] init] autorelease],
    nil
  ] ;
}

//---------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2



