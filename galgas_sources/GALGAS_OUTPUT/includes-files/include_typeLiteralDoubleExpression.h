//---------------------------------------------------------------------------*
//                                                                           *
//               File 'include_typeLiteralDoubleExpression.h'                *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 23th, 2010, at 19h1'46"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_typeLiteralDoubleExpression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeLiteralDoubleExpression : public cPtr_typeExpression {
  private : typedef cPtr_typeExpression inherited ;
//--- START OF USER ZONE 2

  public : virtual void
  generateExpression (AC_OutputStream & inCppFile) const ;

  public : virtual bool
  isLexiqueFormalArgumentUsedForTest (void) const  ;

  public : virtual bool
  formalArgumentIsUsedForTest (const GGS_typeCplusPlusName & inArgumentCppName) const ;

  public : virtual bool 
  formalCurrentObjectArgumentIsUsedForTest (void) const ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeLiteralDoubleExpression (const GGS_ldouble & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_ldouble  mLiteralDouble ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

