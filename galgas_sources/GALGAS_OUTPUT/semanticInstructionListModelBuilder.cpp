//---------------------------------------------------------------------------*
//                                                                           *
//              File 'semanticInstructionListModelBuilder.cpp'               *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       april 4th, 2007, at 14h57'7"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "semanticInstructionListModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticInstructionListModelBuilder.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instruction_list'        *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticInstructions semanticInstructionListModelBuilder::
semanticInstructionListModelBuilder::
pr_semantic_instruction_list_semanticInstructionListModelBuilder_30_6_ (galgas_scanner & _inLexique) {
  GGS_semanticInstructionList  var_cas_mInstruction ;
  var_cas_mInstruction = GGS_semanticInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_semanticInstructionListModelBuilder_0 (_inLexique)) {
        case 2 : {
          var_cas_mInstruction._addModel (nt_semantic_instruction_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  GGS_semanticInstructions _entityInstance = GGS_semanticInstructions::constructor_new (_inLexique, var_cas_mInstruction COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_localVariableDeclaration semanticInstructionListModelBuilder::
semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_43_6_ (galgas_scanner & _inLexique) {
  GGS_lstring  var_cas_mTypeName ;
  GGS_lstring  var_cas_mVariableName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mTypeName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mVariableName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_localVariableDeclaration _entityInstance = GGS_localVariableDeclaration::constructor_new (_inLexique, var_cas_mTypeName, var_cas_mVariableName COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*

