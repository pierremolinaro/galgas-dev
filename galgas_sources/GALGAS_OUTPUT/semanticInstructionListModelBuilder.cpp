//---------------------------------------------------------------------------*
//                                                                           *
//              File 'semanticInstructionListModelBuilder.cpp'               *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    december 14th, 2009, at 18h42'40"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1

//#define DEBUG_TRACE_ENABLED


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticInstructionListModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticInstructionListModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'semantic_instruction_list'        *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_list_semanticInstructionListModelBuilder_56_32_ (galgas_scanner & inLexique,
                                GGS_semanticInstructionList  &var_cas_outInstructionsList) {
  var_cas_outInstructionsList = GGS_semanticInstructionList ::constructor_emptyList () ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_semanticInstructionListModelBuilder_0 (inLexique)) {
        case 2 : {
          GGS_semanticInstruction  var_cas_instruction ;
          nt_semantic_instruction_ (inLexique, var_cas_instruction) ;
          var_cas_outInstructionsList.addAssign_operation (var_cas_instruction) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_declaration_semanticInstructionListModelBuilder_72_27_ (galgas_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_mRoutineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mRoutineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (inLexique, var_cas_mFormalParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mRoutineInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mRoutineInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_routineDeclaration ::constructor_new (inLexique, var_cas_mRoutineName, var_cas_mFormalParameterList, var_cas_mRoutineInstructionList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_declaration_semanticInstructionListModelBuilder_98_27_ (galgas_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_mActionName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mActionName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (inLexique, var_cas_mFormalParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_externRoutineDeclaration ::constructor_new (inLexique, var_cas_mActionName, var_cas_mFormalParameterList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_declaration_semanticInstructionListModelBuilder_119_27_ (galgas_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_routine) COMMA_HERE) ;
  GGS_lstring  var_cas_mActionName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mActionName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (inLexique, var_cas_mFormalParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_routinePrototypeDeclaration ::constructor_new (inLexique, var_cas_mActionName, var_cas_mFormalParameterList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_declaration_semanticInstructionListModelBuilder_139_27_ (galgas_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
  GGS_lstring  var_cas_mRoutineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mRoutineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (inLexique, var_cas_mFormalParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_resultTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_resultTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_resultVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_resultVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mRoutineInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mRoutineInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_functionDeclaration ::constructor_new (inLexique, var_cas_mRoutineName, var_cas_mFormalParameterList, var_cas_resultTypeName, var_cas_resultVariableName, var_cas_mRoutineInstructionList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_declaration_semanticInstructionListModelBuilder_170_27_ (galgas_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_once) COMMA_HERE) ;
  GGS_lstring  var_cas_mRoutineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mRoutineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_resultTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_resultTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_resultVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_resultVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mRoutineInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mRoutineInstructionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_once) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_onceFunctionDeclaration ::constructor_new (inLexique, var_cas_mRoutineName, var_cas_resultTypeName, var_cas_resultVariableName, var_cas_mRoutineInstructionList COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_declaration'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_declaration_semanticInstructionListModelBuilder_198_27_ (galgas_scanner & inLexique,
                                GGS_semanticDeclarationStruct &var_cas_ioSemanticDeclarations) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extern) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_function) COMMA_HERE) ;
  GGS_lstring  var_cas_mActionName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mActionName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_formalParameterList  var_cas_mFormalParameterList ;
  nt_formal_parameter_list_ (inLexique, var_cas_mFormalParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3E_) COMMA_HERE) ;
  GGS_lstring  var_cas_resultTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_resultTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_resultVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_resultVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_ioSemanticDeclarations.mSemanticDeclarationList.addAssign_operation (GGS_externFunctionDeclaration ::constructor_new (inLexique, var_cas_mActionName, var_cas_mFormalParameterList, var_cas_resultTypeName, var_cas_resultVariableName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_224_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  GGS_lstring  var_cas_typeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_typeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_variableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_variableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semanticInstructionListModelBuilder_1 (inLexique)) {
    case 1 : {
      var_cas_outInstruction = GGS_localVariableDeclaration ::constructor_new (inLexique, var_cas_typeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (228)), var_cas_typeName, var_cas_variableName COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A__3D_) COMMA_HERE) ;
      GGS_semanticExpression  var_cas_sourceExpression ;
      nt_expression_ (inLexique, var_cas_sourceExpression) ;
      var_cas_outInstruction = GGS_localVariableDeclarationWithAssignment ::constructor_new (inLexique, var_cas_typeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (233)), var_cas_typeName, var_cas_variableName, var_cas_sourceExpression COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B_) COMMA_HERE) ;
      GGS_lstring  var_cas_constructorName ;
      inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_outExpressionList  var_cas_expressionList ;
      nt_output_expression_list_ (inLexique, var_cas_expressionList) ;
      var_cas_outInstruction = GGS_localVariableDeclarationWithInitialization ::constructor_new (inLexique, var_cas_typeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (240)), var_cas_typeName, var_cas_variableName, var_cas_constructorName, var_cas_expressionList COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_252_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_const) COMMA_HERE) ;
  GGS_lstring  var_cas_typeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_typeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_variableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_variableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_semanticInstructionListModelBuilder_2 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A__3D_) COMMA_HERE) ;
      GGS_semanticExpression  var_cas_sourceExpression ;
      nt_expression_ (inLexique, var_cas_sourceExpression) ;
      var_cas_outInstruction = GGS_localConstantDeclarationWithSourceExpression ::constructor_new (inLexique, var_cas_typeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (260)), var_cas_typeName, var_cas_variableName, var_cas_sourceExpression COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B_) COMMA_HERE) ;
      GGS_lstring  var_cas_constructorName ;
      inLexique.assignFromAttribute_tokenString (var_cas_constructorName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_outExpressionList  var_cas_expressionList ;
      nt_output_expression_list_ (inLexique, var_cas_expressionList) ;
      var_cas_outInstruction = GGS_localConstantDeclarationWithConstructorCall ::constructor_new (inLexique, var_cas_typeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (267)), var_cas_typeName, var_cas_variableName, var_cas_constructorName, var_cas_expressionList COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_279_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  GGS_lstring  var_cas_mTargetVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mTargetVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstringlist  var_cas_mStructAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_3 = true ;
    while (syntaxRepeat_3) {
      switch (select_semanticInstructionListModelBuilder_3 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_) COMMA_HERE) ;
          GGS_lstring  var_cas_attributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_mStructAttributeList.addAssign_operation (var_cas_attributeName) ;
          } break ;
        default :
          syntaxRepeat_3 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A__3D_) COMMA_HERE) ;
  GGS_semanticExpression  var_cas_mSourceExpression ;
  nt_expression_ (inLexique, var_cas_mSourceExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_assignmentInstruction ::constructor_new (inLexique, var_cas_mTargetVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (293)), var_cas_mTargetVariableName, var_cas_mStructAttributeList, var_cas_mSourceExpression COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_306_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  GGS_lstring  var_cas_mReceiverName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReceiverName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B__2B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_incrementInstruction ::constructor_new (inLexique, var_cas_mReceiverName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (310)), var_cas_mReceiverName COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_319_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  GGS_lstring  var_cas_mReceiverName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReceiverName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__2D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_decrementInstruction ::constructor_new (inLexique, var_cas_mReceiverName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (323)), var_cas_mReceiverName COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'foreach_enumerated_object'        *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_foreach_enumerated_object_semanticInstructionListModelBuilder_338_32_ (galgas_scanner & inLexique,
                                GGS_foreachInstructionEnumeratedObjectList  &var_cas_ioForeachInstructionEnumeratedObjectList) {
  GGS_bool var_cas_ascending ;
  switch (select_semanticInstructionListModelBuilder_4 (inLexique)) {
    case 1 : {
      var_cas_ascending = GGS_bool (true) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C_) COMMA_HERE) ;
      var_cas_ascending = GGS_bool (true) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_) COMMA_HERE) ;
      var_cas_ascending = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  GGS_semanticExpression  var_cas_mEnumeratedExpression ;
  nt_expression_ (inLexique, var_cas_mEnumeratedExpression) ;
  GGS_foreachInstructionEnumeratedObjectElementList  var_cas_mElementList = GGS_foreachInstructionEnumeratedObjectElementList ::constructor_emptyList () ;
  GGS_bool var_cas_mEndsWithEllipsis ;
  GGS_lstring  var_cas_prefix ;
  switch (select_semanticInstructionListModelBuilder_5 (inLexique)) {
    case 1 : {
      var_cas_mEndsWithEllipsis = GGS_bool (false) ;
      var_cas_prefix = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_prefixedby) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_prefix) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_mEndsWithEllipsis = GGS_bool (false) ;
      } break ;
    case 3 : {
      var_cas_prefix = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28_) COMMA_HERE) ;
      { bool syntaxRepeat_6 = true ;
        while (syntaxRepeat_6) {
          switch (select_semanticInstructionListModelBuilder_6 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A_) COMMA_HERE) ;
              var_cas_mElementList.addAssign_operation (GGS_foreachInstructionJoker ::constructor_new (inLexique COMMA_HERE)) ;
              } break ;
            case 3 : {
              GGS_luint  var_cas_count ;
              inLexique.assignFromAttribute_uint32value (var_cas_count) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A_) COMMA_HERE) ;
              GGS_uint  var_cas_n = var_cas_count.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (374)) ;
              const GGS_bool cond_15147 = (var_cas_n).operator_isEqual (GGS_uint (0U)) ;
              if (cond_15147.isBuiltAndTrue ()) {
                var_cas_count.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this value should be > 0") COMMA_SOURCE_FILE_AT_LINE (377)) ;
              }
              GGS_uint _variant_15271 = var_cas_n ;
              GGS_bool _condition_15271 (_variant_15271.isBuilt (), true) ;
              while (_condition_15271.isBuiltAndTrue ()) {
                _condition_15271 = (var_cas_n).operator_strictSup (GGS_uint (0U)) ;
                if (_condition_15271.isBuiltAndTrue ()) {
                  if (_variant_15271.uintValue () == 0) {
                    inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (382)) ;
                    _condition_15271 = GGS_bool (false) ;
                  }else{
                    _variant_15271.decrement_operation (inLexique COMMA_HERE) ;
                    var_cas_mElementList.addAssign_operation (GGS_foreachInstructionJoker ::constructor_new (inLexique COMMA_HERE)) ;
                    var_cas_n.decrement_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (381)) ;
                  }
                }
              }
              } break ;
            case 4 : {
              GGS_lstring  var_cas_typeName ;
              inLexique.assignFromAttribute_tokenString (var_cas_typeName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
              GGS_lstring  var_cas_constantName ;
              inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_foreachInstructionEnumeratedConstant  var_cas_c = GGS_foreachInstructionEnumeratedConstant ::constructor_new (inLexique, var_cas_typeName, var_cas_constantName COMMA_HERE) ;
              var_cas_mElementList.addAssign_operation (var_cas_c) ;
              } break ;
            default :
              syntaxRepeat_6 = false ;
              break ;
          }
        }
      }
      switch (select_semanticInstructionListModelBuilder_7 (inLexique)) {
        case 1 : {
          var_cas_mEndsWithEllipsis = GGS_bool (false) ;
          } break ;
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E__2E__2E_) COMMA_HERE) ;
          var_cas_mEndsWithEllipsis = GGS_bool (true) ;
          } break ;
        default :
          break ;
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  var_cas_ioForeachInstructionEnumeratedObjectList.addAssign_operation (var_cas_ascending, var_cas_mEnumeratedExpression, var_cas_mElementList, var_cas_mEndsWithEllipsis, var_cas_prefix) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_410_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_foreachInstructionEnumeratedObjectList  var_cas_mEnumeratedObjectList = GGS_foreachInstructionEnumeratedObjectList ::constructor_emptyList () ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
        nt_foreach_enumerated_object_ (inLexique, var_cas_mEnumeratedObjectList) ;
      switch (select_semanticInstructionListModelBuilder_8 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  GGS_lstring  var_cas_mIndexVariableName ;
  switch (select_semanticInstructionListModelBuilder_9 (inLexique)) {
    case 1 : {
      var_cas_mIndexVariableName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_mIndexVariableName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_semanticExpression  var_cas_mWhileExpression ;
  switch (select_semanticInstructionListModelBuilder_10 (inLexique)) {
    case 1 : {
      var_cas_mWhileExpression = GGS_trueExpression ::constructor_new (inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
      nt_expression_ (inLexique, var_cas_mWhileExpression) ;
      } break ;
    default :
      break ;
  }
  GGS_semanticInstructionList  var_cas_mBeforeInstructionList ;
  switch (select_semanticInstructionListModelBuilder_11 (inLexique)) {
    case 1 : {
      var_cas_mBeforeInstructionList = GGS_semanticInstructionList ::constructor_emptyList () ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_before) COMMA_HERE) ;
      nt_semantic_instruction_list_ (inLexique, var_cas_mBeforeInstructionList) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mDoInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mDoInstructionList) ;
  GGS_semanticInstructionList  var_cas_mBetweenInstructionList ;
  switch (select_semanticInstructionListModelBuilder_12 (inLexique)) {
    case 1 : {
      var_cas_mBetweenInstructionList = GGS_semanticInstructionList ::constructor_emptyList () ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_between) COMMA_HERE) ;
      nt_semantic_instruction_list_ (inLexique, var_cas_mBetweenInstructionList) ;
      } break ;
    default :
      break ;
  }
  GGS_semanticInstructionList  var_cas_mAfterInstructionList ;
  switch (select_semanticInstructionListModelBuilder_13 (inLexique)) {
    case 1 : {
      var_cas_mAfterInstructionList = GGS_semanticInstructionList ::constructor_emptyList () ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_after) COMMA_HERE) ;
      nt_semantic_instruction_list_ (inLexique, var_cas_mAfterInstructionList) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_foreach) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_foreachInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mEnumeratedObjectList, var_cas_mIndexVariableName, var_cas_mWhileExpression, var_cas_mBeforeInstructionList, var_cas_mBetweenInstructionList, var_cas_mDoInstructionList, var_cas_mAfterInstructionList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_478_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_send) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_semanticExpression  var_cas_expression ;
  nt_expression_ (inLexique, var_cas_expression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_sendInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_expression COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_496_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_ifBranchList  var_cas_mBranchList = GGS_ifBranchList ::constructor_emptyList () ;
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
        GGS_semanticExpression  var_cas_mIFexpressionList ;
        nt_expression_ (inLexique, var_cas_mIFexpressionList) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_then) COMMA_HERE) ;
        GGS_semanticInstructionList  var_cas_mIFinstructionList ;
        nt_semantic_instruction_list_ (inLexique, var_cas_mIFinstructionList) ;
        var_cas_mBranchList.addAssign_operation (var_cas_mIFexpressionList, var_cas_mIFinstructionList) ;
      switch (select_semanticInstructionListModelBuilder_14 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_elsif) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
  GGS_semanticInstructionList  var_cas_mElseInstructionList ;
  switch (select_semanticInstructionListModelBuilder_15 (inLexique)) {
    case 1 : {
      var_cas_mElseInstructionList = GGS_semanticInstructionList ::constructor_emptyList () ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instruction_list_ (inLexique, var_cas_mElseInstructionList) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_ifInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mBranchList, var_cas_mElseInstructionList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_533_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B_) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_semanticExpression  var_cas_mReceiverExpression ;
  nt_expression_ (inLexique, var_cas_mReceiverExpression) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_actualParameterList  var_cas_mActualParameterList ;
  nt_actual_parameter_list_ (inLexique, var_cas_mActualParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_methodCallInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mReceiverExpression, var_cas_mMethodName, var_cas_mActualParameterList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_557_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B_) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21__3F_) COMMA_HERE) ;
  GGS_lstring  var_cas_mReceiverName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReceiverName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstringlist  var_cas_mReceiverStructAttributes = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_16 = true ;
    while (syntaxRepeat_16) {
      switch (select_semanticInstructionListModelBuilder_16 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_) COMMA_HERE) ;
          GGS_lstring  var_cas_structAttribute ;
          inLexique.assignFromAttribute_tokenString (var_cas_structAttribute) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_mReceiverStructAttributes.addAssign_operation (var_cas_structAttribute) ;
          } break ;
        default :
          syntaxRepeat_16 = false ;
          break ;
      }
    }
  }
  GGS_lstring  var_cas_mModifierName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mModifierName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_actualParameterList  var_cas_mActualParameterList ;
  nt_actual_parameter_list_ (inLexique, var_cas_mActualParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_modifierCallInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mReceiverName, var_cas_mReceiverStructAttributes, var_cas_mModifierName, var_cas_mActualParameterList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_589_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_semanticExpression  var_cas_mReceiverExpression ;
  nt_expression_ (inLexique, var_cas_mReceiverExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_semanticExpression  var_cas_mErrorExpression ;
  nt_expression_ (inLexique, var_cas_mErrorExpression) ;
  GGS_lstringlist  var_cas_mBuiltVariableList = GGS_lstringlist ::constructor_emptyList () ;
  switch (select_semanticInstructionListModelBuilder_17 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3E_) COMMA_HERE) ;
      { bool syntaxRepeat_18 = true ;
        while (syntaxRepeat_18) {
            GGS_lstring  var_cas_builtVariableName ;
            inLexique.assignFromAttribute_tokenString (var_cas_builtVariableName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_mBuiltVariableList.addAssign_operation (var_cas_builtVariableName) ;
          switch (select_semanticInstructionListModelBuilder_18 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_18 = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_errorInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mReceiverExpression, var_cas_mErrorExpression, var_cas_mBuiltVariableList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_624_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_semanticExpression  var_cas_mReceiverExpression ;
  nt_expression_ (inLexique, var_cas_mReceiverExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_semanticExpression  var_cas_mWarningExpression ;
  nt_expression_ (inLexique, var_cas_mWarningExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_warningInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mReceiverExpression, var_cas_mWarningExpression COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_646_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  GGS_lstring  var_cas_mRoutineName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mRoutineName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_actualParameterList  var_cas_mActualParameterList ;
  nt_actual_parameter_list_ (inLexique, var_cas_mActualParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_routineCallInstruction ::constructor_new (inLexique, var_cas_mRoutineName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (652)), var_cas_mRoutineName, var_cas_mActualParameterList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_664_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_with) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_lstring  var_cas_withPrefix ;
  switch (select_semanticInstructionListModelBuilder_19 (inLexique)) {
    case 1 : {
      var_cas_withPrefix = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.assignFromAttribute_tokenString (var_cas_withPrefix) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21__3F_) COMMA_HERE) ;
  GGS_lstring  var_cas_mTargetObjectName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mTargetObjectName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstringlist  var_cas_structAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_20 = true ;
    while (syntaxRepeat_20) {
      switch (select_semanticInstructionListModelBuilder_20 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_) COMMA_HERE) ;
          GGS_lstring  var_cas_mStructFieldName ;
          inLexique.assignFromAttribute_tokenString (var_cas_mStructFieldName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_structAttributeList.addAssign_operation (var_cas_mStructFieldName) ;
          } break ;
        default :
          syntaxRepeat_20 = false ;
          break ;
      }
    }
  }
  GGS_lstring  var_cas_mSearchMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mSearchMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_) COMMA_HERE) ;
  GGS_semanticExpression  var_cas_mKeyExpression ;
  nt_expression_ (inLexique, var_cas_mKeyExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mDoBranchInstructions ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mDoBranchInstructions) ;
  GGS_semanticInstructionList  var_cas_mElseBranchInstructions ;
  switch (select_semanticInstructionListModelBuilder_21 (inLexique)) {
    case 1 : {
      var_cas_mElseBranchInstructions = GGS_semanticInstructionList ::constructor_emptyList () ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instruction_list_ (inLexique, var_cas_mElseBranchInstructions) ;
      } break ;
    default :
      break ;
  }
  var_cas_outInstruction = GGS_withInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_withPrefix, var_cas_mTargetObjectName, var_cas_structAttributeList, var_cas_mSearchMethodName, var_cas_mKeyExpression, var_cas_mDoBranchInstructions, var_cas_mElseBranchInstructions COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_with) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'match_entry'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_match_entry_semanticInstructionListModelBuilder_722_18_ (galgas_scanner & inLexique,
                                GGS_matchEntryList  &var_cas_ioMatchEntryList) {
  GGS_lstring  var_cas_mConstantName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mConstantName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_ioMatchEntryList.addAssign_operation (GGS_constantMatchEntry ::constructor_new (inLexique, var_cas_mConstantName COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'match_entry'               *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_match_entry_semanticInstructionListModelBuilder_729_18_ (galgas_scanner & inLexique,
                                GGS_matchEntryList  &var_cas_ioMatchEntryList) {
  GGS_lstring  var_cas_mClassName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mClassName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28_) COMMA_HERE) ;
  GGS_foreachInstructionEnumeratedObjectElementList  var_cas_mElements = GGS_foreachInstructionEnumeratedObjectElementList ::constructor_emptyList () ;
  { bool syntaxRepeat_22 = true ;
    while (syntaxRepeat_22) {
      switch (select_semanticInstructionListModelBuilder_22 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A_) COMMA_HERE) ;
          var_cas_mElements.addAssign_operation (GGS_foreachInstructionJoker ::constructor_new (inLexique COMMA_HERE)) ;
          } break ;
        case 3 : {
          GGS_luint  var_cas_count ;
          inLexique.assignFromAttribute_uint32value (var_cas_count) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5F_literal_5F_integer) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A_) COMMA_HERE) ;
          GGS_uint  var_cas_n = var_cas_count.reader_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (741)) ;
          const GGS_bool cond_27118 = (var_cas_n).operator_isEqual (GGS_uint (0U)) ;
          if (cond_27118.isBuiltAndTrue ()) {
            var_cas_count.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("this value should be > 0") COMMA_SOURCE_FILE_AT_LINE (744)) ;
          }
          GGS_uint _variant_27229 = var_cas_n ;
          GGS_bool _condition_27229 (_variant_27229.isBuilt (), true) ;
          while (_condition_27229.isBuiltAndTrue ()) {
            _condition_27229 = (var_cas_n).operator_strictSup (GGS_uint (0U)) ;
            if (_condition_27229.isBuiltAndTrue ()) {
              if (_variant_27229.uintValue () == 0) {
                inLexique.onTheFlyRunTimeError ("loop variant error" COMMA_SOURCE_FILE_AT_LINE (749)) ;
                _condition_27229 = GGS_bool (false) ;
              }else{
                _variant_27229.decrement_operation (inLexique COMMA_HERE) ;
                var_cas_mElements.addAssign_operation (GGS_foreachInstructionJoker ::constructor_new (inLexique COMMA_HERE)) ;
                var_cas_n.decrement_operation (inLexique COMMA_SOURCE_FILE_AT_LINE (748)) ;
              }
            }
          }
          } break ;
        case 4 : {
          GGS_lstring  var_cas_typeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_typeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
          GGS_lstring  var_cas_constantName ;
          inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_foreachInstructionEnumeratedConstant  var_cas_c = GGS_foreachInstructionEnumeratedConstant ::constructor_new (inLexique, var_cas_typeName, var_cas_constantName COMMA_HERE) ;
          var_cas_mElements.addAssign_operation (var_cas_c) ;
          } break ;
        default :
          syntaxRepeat_22 = false ;
          break ;
      }
    }
  }
  GGS_bool var_cas_mEndsWithEllipsis ;
  switch (select_semanticInstructionListModelBuilder_23 (inLexique)) {
    case 1 : {
      var_cas_mEndsWithEllipsis = GGS_bool (false) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E__2E__2E_) COMMA_HERE) ;
      var_cas_mEndsWithEllipsis = GGS_bool (true) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29_) COMMA_HERE) ;
  var_cas_ioMatchEntryList.addAssign_operation (GGS_classMatchEntry ::constructor_new (inLexique, var_cas_mClassName, var_cas_mElements, var_cas_mEndsWithEllipsis COMMA_HERE)) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'match_instruction_branch'        *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_match_instruction_branch_semanticInstructionListModelBuilder_779_31_ (galgas_scanner & inLexique,
                                GGS_matchInstructionBranchList  &var_cas_ioMatchInstructionBranchList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  GGS_matchEntryList  var_cas_mMatchEntryList = GGS_matchEntryList ::constructor_emptyList () ;
  { bool syntaxRepeat_24 = true ;
    while (syntaxRepeat_24) {
        nt_match_entry_ (inLexique, var_cas_mMatchEntryList) ;
      switch (select_semanticInstructionListModelBuilder_24 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A__3A_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_24 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mMatchBranchInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mMatchBranchInstructionList) ;
  var_cas_ioMatchInstructionBranchList.addAssign_operation (var_cas_mMatchEntryList, var_cas_mMatchBranchInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_798_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_lstring  var_cas_matchedVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_matchedVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstringlist  var_cas_mMatchedVariableNameList = GGS_lstringlist ::constructor_emptyList () ;
  var_cas_mMatchedVariableNameList.addAssign_operation (var_cas_matchedVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A__3A_) COMMA_HERE) ;
  { bool syntaxRepeat_25 = true ;
    while (syntaxRepeat_25) {
        inLexique.assignFromAttribute_tokenString (var_cas_matchedVariableName) ;
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
        var_cas_mMatchedVariableNameList.addAssign_operation (var_cas_matchedVariableName) ;
      switch (select_semanticInstructionListModelBuilder_25 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A__3A_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_25 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_matchInstructionBranchList  var_cas_mMatchInstructionBranchList = GGS_matchInstructionBranchList ::constructor_emptyList () ;
  { bool syntaxRepeat_26 = true ;
    while (syntaxRepeat_26) {
        nt_match_instruction_branch_ (inLexique, var_cas_mMatchInstructionBranchList) ;
      switch (select_semanticInstructionListModelBuilder_26 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_26 = false ;
          break ;
      }
    }
  }
  GGS_semanticInstructionList  var_cas_mElseInstructionList ;
  switch (select_semanticInstructionListModelBuilder_27 (inLexique)) {
    case 1 : {
      var_cas_mElseInstructionList = GGS_semanticInstructionList ::constructor_emptyList () ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      nt_semantic_instruction_list_ (inLexique, var_cas_mElseInstructionList) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_match) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_matchInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mMatchedVariableNameList, var_cas_mMatchInstructionBranchList, var_cas_mElseInstructionList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'cast_instruction_branch'         *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_cast_instruction_branch_semanticInstructionListModelBuilder_846_30_ (galgas_scanner & inLexique,
                                GGS_castInstructionBranchList  &var_cas_ioCastInstructionBranchList) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  GGS_bool var_cas_mUseKindOfClass ;
  switch (select_semanticInstructionListModelBuilder_28 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E__3D_) COMMA_HERE) ;
      var_cas_mUseKindOfClass = GGS_bool (true) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D__3D_) COMMA_HERE) ;
      var_cas_mUseKindOfClass = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  var_cas_mTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mConstantVarName ;
  GGS_bool var_cas_mConstantVarNameIsUnused ;
  switch (select_semanticInstructionListModelBuilder_29 (inLexique)) {
    case 1 : {
      inLexique.assignFromAttribute_tokenString (var_cas_mConstantVarName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_mConstantVarNameIsUnused = GGS_bool (false) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unused) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_mConstantVarName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      var_cas_mConstantVarNameIsUnused = GGS_bool (true) ;
      } break ;
    case 3 : {
      var_cas_mConstantVarName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      var_cas_mConstantVarNameIsUnused = GGS_bool (true) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mCastBranchInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mCastBranchInstructionList) ;
  var_cas_ioCastInstructionBranchList.addAssign_operation (var_cas_mUseKindOfClass, var_cas_mTypeName, var_cas_mConstantVarName, var_cas_mConstantVarNameIsUnused, var_cas_mCastBranchInstructionList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'cast_else_or_default'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_cast_else_or_default_semanticInstructionListModelBuilder_888_27_ (galgas_scanner & inLexique,
                                GGS_elseOrDefaultForCastInstruction  &var_cas_outElseOrDefault) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mElseInstructionList ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mElseInstructionList) ;
  var_cas_outElseOrDefault = GGS_elseForCastInstruction ::constructor_new (inLexique, var_cas_mElseInstructionList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'cast_else_or_default'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_cast_else_or_default_semanticInstructionListModelBuilder_898_27_ (galgas_scanner & inLexique,
                                GGS_elseOrDefaultForCastInstruction  &var_cas_outElseOrDefault) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_default) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_semanticExpression  var_cas_mErrorLocationExpression ;
  nt_expression_ (inLexique, var_cas_mErrorLocationExpression) ;
  var_cas_outElseOrDefault = GGS_defaultForCastInstruction ::constructor_new (inLexique, var_cas_mErrorLocationExpression COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_908_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_semanticExpression  var_cas_mExpression ;
  nt_expression_ (inLexique, var_cas_mExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_castInstructionBranchList  var_cas_mCastInstructionBranchList = GGS_castInstructionBranchList ::constructor_emptyList () ;
  { bool syntaxRepeat_30 = true ;
    while (syntaxRepeat_30) {
        nt_cast_instruction_branch_ (inLexique, var_cas_mCastInstructionBranchList) ;
      switch (select_semanticInstructionListModelBuilder_30 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_30 = false ;
          break ;
      }
    }
  }
  GGS_elseOrDefaultForCastInstruction  var_cas_mElseOrDefault ;
  nt_cast_else_or_default_ (inLexique, var_cas_mElseOrDefault) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_castInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mExpression, var_cas_mCastInstructionBranchList, var_cas_mElseOrDefault COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_938_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  GGS_lstring  var_cas_mReceiverName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReceiverName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_lstringlist  var_cas_mStructAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_31 = true ;
    while (syntaxRepeat_31) {
      switch (select_semanticInstructionListModelBuilder_31 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_) COMMA_HERE) ;
          GGS_lstring  var_cas_attributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_mStructAttributeList.addAssign_operation (var_cas_attributeName) ;
          } break ;
        default :
          syntaxRepeat_31 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B__3D_) COMMA_HERE) ;
  GGS_outExpressionList  var_cas_mExpressionList ;
  nt_output_expression_list_ (inLexique, var_cas_mExpressionList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_addInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mReceiverName, var_cas_mStructAttributeList, var_cas_mExpressionList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_967_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  GGS_lstring  var_cas_mReceiverName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mReceiverName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_lstringlist  var_cas_mStructAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_32 = true ;
    while (syntaxRepeat_32) {
      switch (select_semanticInstructionListModelBuilder_32 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_) COMMA_HERE) ;
          GGS_lstring  var_cas_attributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_mStructAttributeList.addAssign_operation (var_cas_attributeName) ;
          } break ;
        default :
          syntaxRepeat_32 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_) COMMA_HERE) ;
  GGS_semanticExpression  var_cas_mExpression ;
  nt_expression_ (inLexique, var_cas_mExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_removeInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mReceiverName, var_cas_mStructAttributeList, var_cas_mExpression COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_997_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  GGS_lstring  var_cas_mTargetVariableName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mTargetVariableName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstringlist  var_cas_mStructAttributeList = GGS_lstringlist ::constructor_emptyList () ;
  { bool syntaxRepeat_33 = true ;
    while (syntaxRepeat_33) {
      switch (select_semanticInstructionListModelBuilder_33 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E_) COMMA_HERE) ;
          GGS_lstring  var_cas_attributeName ;
          inLexique.assignFromAttribute_tokenString (var_cas_attributeName) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_mStructAttributeList.addAssign_operation (var_cas_attributeName) ;
          } break ;
        default :
          syntaxRepeat_33 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E__3D_) COMMA_HERE) ;
  GGS_semanticExpression  var_cas_mSourceExpression ;
  nt_expression_ (inLexique, var_cas_mSourceExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_appendInstruction ::constructor_new (inLexique, var_cas_mTargetVariableName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1011)), var_cas_mTargetVariableName, var_cas_mStructAttributeList, var_cas_mSourceExpression COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_1024_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_semanticExpression  var_cas_mVariantExpression ;
  nt_expression_ (inLexique, var_cas_mVariantExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mFirstInstructions ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mFirstInstructions) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_while) COMMA_HERE) ;
  GGS_semanticExpression  var_cas_mLoopExpression ;
  nt_expression_ (inLexique, var_cas_mLoopExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_do) COMMA_HERE) ;
  GGS_semanticInstructionList  var_cas_mSecondInstructions ;
  nt_semantic_instruction_list_ (inLexique, var_cas_mSecondInstructions) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_loop) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_loopInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mVariantExpression, var_cas_mFirstInstructions, var_cas_mLoopExpression, var_cas_mSecondInstructions COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_1056_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_semanticExpression  var_cas_mExpression ;
  nt_expression_ (inLexique, var_cas_mExpression) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_messageInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mExpression COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_1074_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_logList  var_cas_logList = GGS_logList ::constructor_emptyList () ;
  { bool syntaxRepeat_34 = true ;
    while (syntaxRepeat_34) {
        switch (select_semanticInstructionListModelBuilder_35 (inLexique)) {
          case 1 : {
            GGS_lstring  var_cas_loggedVariableName ;
            inLexique.assignFromAttribute_tokenString (var_cas_loggedVariableName) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_logList.addAssign_operation (var_cas_loggedVariableName, GGS_varInExpression ::constructor_new (inLexique, var_cas_loggedVariableName COMMA_HERE)) ;
            } break ;
          case 2 : {
            GGS_lstring  var_cas_logMessage ;
            inLexique.assignFromAttribute_tokenString (var_cas_logMessage) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5F_string) COMMA_HERE) ;
            inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
            GGS_semanticExpression  var_cas_logExpression ;
            nt_expression_ (inLexique, var_cas_logExpression) ;
            var_cas_logList.addAssign_operation (var_cas_logMessage, var_cas_logExpression) ;
            } break ;
          default :
            break ;
        }
      switch (select_semanticInstructionListModelBuilder_34 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_34 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_logInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_logList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_1105_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_lstring  var_cas_mGrammarComponentName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mGrammarComponentName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_mLabelName ;
  switch (select_semanticInstructionListModelBuilder_36 (inLexique)) {
    case 1 : {
      var_cas_mLabelName = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_label) COMMA_HERE) ;
      inLexique.assignFromAttribute_tokenString (var_cas_mLabelName) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_bool var_cas_sourceExpressionIsFile ;
  switch (select_semanticInstructionListModelBuilder_37 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      var_cas_sourceExpressionIsFile = GGS_bool (true) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_on) COMMA_HERE) ;
      var_cas_sourceExpressionIsFile = GGS_bool (false) ;
      } break ;
    default :
      break ;
  }
  GGS_semanticExpression  var_cas_mSourceExpression ;
  nt_expression_ (inLexique, var_cas_mSourceExpression) ;
  GGS_actualParameterList  var_cas_mActualParameterList ;
  nt_actual_parameter_list_ (inLexique, var_cas_mActualParameterList) ;
  switch (select_semanticInstructionListModelBuilder_38 (inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_dependency) COMMA_HERE) ;
      GGS_semanticExpression  automatic_var_39723_0 ;
      nt_expression_ (inLexique, automatic_var_39723_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_in) COMMA_HERE) ;
      GGS_semanticExpression  automatic_var_39757_0 ;
      nt_expression_ (inLexique, automatic_var_39757_0) ;
      } break ;
    default :
      break ;
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_grammarInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mGrammarComponentName, var_cas_mLabelName, var_cas_mSourceExpression, var_cas_sourceExpressionIsFile, var_cas_mActualParameterList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_1152_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_semanticExpression  var_cas_switchExpression ;
  nt_expression_ (inLexique, var_cas_switchExpression) ;
  GGS_switchBranches  var_cas_switchBranches = GGS_switchBranches ::constructor_emptyList () ;
  { bool syntaxRepeat_39 = true ;
    while (syntaxRepeat_39) {
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
        GGS_lstringlist  var_cas_constantNameList = GGS_lstringlist ::constructor_emptyList () ;
        { bool syntaxRepeat_40 = true ;
          while (syntaxRepeat_40) {
              GGS_lstring  var_cas_constantName ;
              inLexique.assignFromAttribute_tokenString (var_cas_constantName) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_constantNameList.addAssign_operation (var_cas_constantName) ;
            switch (select_semanticInstructionListModelBuilder_40 (inLexique)) {
              case 2 : {
                inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C_) COMMA_HERE) ;
                } break ;
              default :
                syntaxRepeat_40 = false ;
                break ;
            }
          }
        }
        inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A_) COMMA_HERE) ;
        GGS_semanticInstructionList  var_cas_instructions ;
        nt_semantic_instruction_list_ (inLexique, var_cas_instructions) ;
        var_cas_switchBranches.addAssign_operation (var_cas_constantNameList, var_cas_instructions) ;
      switch (select_semanticInstructionListModelBuilder_39 (inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat_39 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_switch) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_switchInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_switchExpression, var_cas_switchBranches COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'semantic_instruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

void semanticInstructionListModelBuilder::
pr_semantic_instruction_semanticInstructionListModelBuilder_1189_27_ (galgas_scanner & inLexique,
                                GGS_semanticInstruction  &var_cas_outInstruction) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B_) COMMA_HERE) ;
  const GGS_location  var_cas_instructionLocation = GGS_location (inLexique) ;
  GGS_lstring  var_cas_mTypeName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mTypeName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5F_name) COMMA_HERE) ;
  GGS_lstring  var_cas_mMethodName ;
  inLexique.assignFromAttribute_tokenString (var_cas_mMethodName) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_actualParameterList  var_cas_mActualParameterList ;
  nt_actual_parameter_list_ (inLexique, var_cas_mActualParameterList) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B_) COMMA_HERE) ;
  var_cas_outInstruction = GGS_typeMethodInstruction ::constructor_new (inLexique, var_cas_instructionLocation, var_cas_mTypeName, var_cas_mMethodName, var_cas_mActualParameterList COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

