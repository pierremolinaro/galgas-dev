//---------------------------------------------------------------------------*
//                                                                           *
//        File 'include_typeStructuredExtractInstructionWithElse.h'          *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 20th, 2007, at 12h37'14"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//      abstract class 'cPtr_typeStructuredExtractInstructionWithElse'       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeStructuredExtractInstructionWithElse : public cPtr_typeInstruction {
  private : typedef cPtr_typeInstruction inherited ;
//--- START OF USER ZONE 2

  public : virtual void
  generateInstruction (AC_OutputStream & inCppFile,
                       const C_String & inTargetFileName,
                       sint32 & ioPrototypeIndex,
                       const bool inGenerateDebug,
                       const bool inGenerateSemanticInstructions) const ;

 public : virtual bool isLexiqueFormalArgumentUsed (const bool inGenerateSemanticInstructions) const ;
public : virtual bool formalArgumentIsUsed (const GGS_typeCplusPlusName & inArgumentCppName,
                                            const bool inGenerateSemanticInstructions) const ;

  public : virtual bool
  formalCurrentObjectArgumentIsUsed (void) const ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeStructuredExtractInstructionWithElse (const GGS_typeCplusPlusName & ,
                                const GGS_typeStructuredExtractCasesList & ,
                                const GGS_typeInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeStructuredExtractInstructionWithElse (void) {}
  #endif

//--- Attributes
  public : GGS_typeCplusPlusName  mVariableName ;
  public : GGS_typeStructuredExtractCasesList  mCasesList ;
  public : GGS_typeInstructionList  mElseInstructionList ;
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Compiler & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (C_Compiler & inLexique,
                   const C_GGS_Object * inOperand
                   COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

