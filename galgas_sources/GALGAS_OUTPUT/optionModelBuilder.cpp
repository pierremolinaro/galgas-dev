//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'optionModelBuilder.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       may 17th, 2007, at 18h5'48"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "optionModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "optionModelBuilder.ggs", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//#define DEBUG_TRACE_ENABLED

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'option_component_start_symbol'      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_optionComponentRoot optionModelBuilder::
optionModelBuilder::
pr_option_component_start_symbol_optionModelBuilder_30_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<option_component_start_symbol>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mOptionComponentName ;
  GGS_commandLineOptionList  var_cas_mOptions ;
  var_cas_mOptions = GGS_commandLineOptionList::constructor_emptyList (_inLexique COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$option$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mOptionComponentName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_optionModelBuilder_0 (_inLexique)) {
        case 2 : {
          var_cas_mOptions._addModel (nt_option_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$end$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$option$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_optionComponentRoot _entityInstance = GGS_optionComponentRoot::constructor_new (_inLexique, var_cas_mOptionComponentName, var_cas_mOptions COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'option'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_commandLineOption optionModelBuilder::
optionModelBuilder::
pr_option_optionModelBuilder_47_6_ (galgas_scanner & _inLexique) {
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.enterProduction ("<option>", NULL, "") ;
  #endif
  GGS_lstring  var_cas_mOptionTypeName ;
  GGS_lstring  var_cas_mOptionInternalName ;
  GGS_lchar  var_cas_mOptionInvocationLetter ;
  GGS_lstring  var_cas_mOptionInvocationString ;
  GGS_lstring  var_cas_mOptionComment ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mOptionTypeName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$type_name$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mOptionInternalName) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$identifier$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$:$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  _inLexique._assignFromAttribute_charValue (var_cas_mOptionInvocationLetter) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_charValue () ;
      _inLexique.didParseTerminal ("$literal_char$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fchar) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$,$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mOptionInvocationString) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$->$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D_3E) COMMA_HERE) ;
  _inLexique._assignFromAttribute_tokenString (var_cas_mOptionComment) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ (" ?") ;
      message_ << ' ' << _inLexique._attributeValue_tokenString () ;
      _inLexique.didParseTerminal ("$literal_string$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    { C_String message_ ;
      _inLexique.didParseTerminal ("$;$", message_) ;
    }
  #endif
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    _inLexique.exitProduction () ;
  #endif
  GGS_commandLineOption _entityInstance = GGS_commandLineOption::constructor_new (_inLexique, var_cas_mOptionTypeName, var_cas_mOptionInternalName, var_cas_mOptionInvocationLetter, var_cas_mOptionInvocationString, var_cas_mOptionComment COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*

