//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'grammarMetamodel.h'                          *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      june 26th, 2007, at 19h32'17"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef grammarMetamodel_METAMODEL_DEFINED
#define grammarMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"
#include "commonSemantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

sint32 _metamodel_index_for_grammarMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_startSymbolLabelFormalParameter ;
class GGS_startSymbolLabelFormalParameter ;
class cPtr_startSymbolLabelFormalParameter ;
class GGS__list_grammarLabel ;
class GGS_grammarLabel ;
class cPtr_grammarLabel ;
class GGS__list_grammarComponentRoot ;
class GGS_grammarComponentRoot ;
class cPtr_grammarComponentRoot ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS entity '@startSymbolLabelFormalParameter'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_startSymbolLabelFormalParameter : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_startSymbolLabelFormalParameter constructor_new (C_Compiler & inLexique,
                                const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_startSymbolLabelFormalParameter * getPtr (void) const {
    return (cPtr_startSymbolLabelFormalParameter *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_formalArgumentPassingMode reader_mFormalAgumentPassingMode (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_startSymbolLabelFormalParameter * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_startSymbolLabelFormalParameter * operator () (void) const {
      return (cPtr_startSymbolLabelFormalParameter *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS list of entity '@startSymbolLabelFormalParameter'          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_startSymbolLabelFormalParameter : public AC_galgas_entity_list {
  public : typedef cPtr_startSymbolLabelFormalParameter element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_startSymbolLabelFormalParameter constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_startSymbolLabelFormalParameter
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_startSymbolLabelFormalParameter & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_startSymbolLabelFormalParameter * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_startSymbolLabelFormalParameter & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_startSymbolLabelFormalParameter & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_startSymbolLabelFormalParameter & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_startSymbolLabelFormalParameter & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_startSymbolLabelFormalParameter & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_startSymbolLabelFormalParameter _operator_concat (const GGS__list_startSymbolLabelFormalParameter & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_startSymbolLabelFormalParameter & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_startSymbolLabelFormalParameter & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS entity '@grammarLabel'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_grammarLabel : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_grammarLabel constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS__list_startSymbolLabelFormalParameter & argument_1,
                                const GGS_lstring & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_grammarLabel * getPtr (void) const {
    return (cPtr_grammarLabel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mLabelName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_startSymbolLabelFormalParameter  reader_mFormalParameters (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMetamodelName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_grammarLabel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_grammarLabel * operator () (void) const {
      return (cPtr_grammarLabel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS list of entity '@grammarLabel'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_grammarLabel : public AC_galgas_entity_list {
  public : typedef cPtr_grammarLabel element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_grammarLabel constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_grammarLabel
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_grammarLabel & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_grammarLabel * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_grammarLabel & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_grammarLabel & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_grammarLabel & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_grammarLabel & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_grammarLabel & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_grammarLabel _operator_concat (const GGS__list_grammarLabel & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_grammarLabel & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS__list_startSymbolLabelFormalParameter & argument_1,
                                const GGS_lstring & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS__list_startSymbolLabelFormalParameter & argument_1,
                                const GGS_lstring & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_grammarLabel & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@grammarComponentRoot'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_grammarComponentRoot : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_grammarComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS__list_grammarLabel & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_grammarComponentRoot * getPtr (void) const {
    return (cPtr_grammarComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mGrammarName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mGrammarClass (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mStartSymbol (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS__list_grammarLabel  reader_mLabels (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_grammarComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_grammarComponentRoot * operator () (void) const {
      return (cPtr_grammarComponentRoot *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@grammarComponentRoot'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_grammarComponentRoot : public AC_galgas_entity_list {
  public : typedef cPtr_grammarComponentRoot element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_grammarComponentRoot constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_grammarComponentRoot
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_grammarComponentRoot & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_grammarComponentRoot * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_grammarComponentRoot & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_grammarComponentRoot & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_grammarComponentRoot & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_grammarComponentRoot & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_grammarComponentRoot & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_grammarComponentRoot _operator_concat (const GGS__list_grammarComponentRoot & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_grammarComponentRoot & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS__list_grammarLabel & argument_3) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS__list_grammarLabel & argument_3) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_grammarComponentRoot & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@startSymbolLabelFormalParameter'             *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_startSymbolLabelFormalParameter : public cPtr_entity {
//--- Attributes
  public : GGS_formalArgumentPassingMode mFormalAgumentPassingMode ;
  public : GGS_lstring  mTypeName ;
//--- Constructor
  public : cPtr_startSymbolLabelFormalParameter (const GGS_formalArgumentPassingMode& ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_startSymbolLabelFormalParameter * nextObject (void) const {
    return (cPtr_startSymbolLabelFormalParameter *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_startSymbolLabelFormalParameter * previousObject (void) const {
    return (cPtr_startSymbolLabelFormalParameter *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_startSymbolLabelFormalParameter * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_startSymbolLabelFormalParameter ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@grammarLabel'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_grammarLabel : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mLabelName ;
  public : GGS__list_startSymbolLabelFormalParameter  mFormalParameters ;
  public : GGS_lstring  mMetamodelName ;
//--- Constructor
  public : cPtr_grammarLabel (const GGS_lstring & ,
                                const GGS__list_startSymbolLabelFormalParameter & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_grammarLabel * nextObject (void) const {
    return (cPtr_grammarLabel *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_grammarLabel * previousObject (void) const {
    return (cPtr_grammarLabel *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_grammarLabel * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_grammarLabel ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@grammarComponentRoot'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_grammarComponentRoot : public cPtr_entity {
//--- Attributes
  public : GGS_lstring  mGrammarName ;
  public : GGS_lstring  mGrammarClass ;
  public : GGS_lstring  mStartSymbol ;
  public : GGS__list_grammarLabel  mLabels ;
//--- Constructor
  public : cPtr_grammarComponentRoot (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS__list_grammarLabel & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_grammarComponentRoot * nextObject (void) const {
    return (cPtr_grammarComponentRoot *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_grammarComponentRoot * previousObject (void) const {
    return (cPtr_grammarComponentRoot *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_grammarComponentRoot * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_grammarComponentRoot ;
} ;

//---------------------------------------------------------------------------*

#endif
