//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'program_parser.cpp'                          *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 5th, 2007, at 22h39'14"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "program_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "program_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_115_6_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &var_cas_ioOptionsComponentsMap,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  GGS_lstring  var_cas_nomPRGMprincipal ;
  _inLexique._assignFromAttribute_tokenString (var_cas_nomPRGMprincipal) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstring  var_cas_versionString ;
  _inLexique._assignFromAttribute_tokenString (var_cas_versionString) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  GGS_entityToImplementMap  var_cas_allMetamodelClassMap ;
  GGS_M_optionComponents  var_cas_optionsComponentsMap ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioGrammarComponentsMap, var_cas_ioOptionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMap, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_allMetamodelClassMap) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  GGS_luint  var_cas_nombreMaxErreurs ;
  _inLexique._assignFromAttribute_uint32value (var_cas_nombreMaxErreurs) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  GGS_luint  var_cas_nombreMaxAlertes ;
  _inLexique._assignFromAttribute_uint32value (var_cas_nombreMaxAlertes) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  GGS_L_grammarDescriptorForProgram  var_cas_grammarDescriptorForProgramList ;
  var_cas_grammarDescriptorForProgramList = GGS_L_grammarDescriptorForProgram::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_ruleDescriptorForProgramList  var_cas_ruleDescriptorForProgramList ;
  var_cas_ruleDescriptorForProgramList = GGS_ruleDescriptorForProgramList::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
        GGS_lstring  var_cas_sourceExtension ;
        _inLexique._assignFromAttribute_tokenString (var_cas_sourceExtension) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        if (((var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (184)).reader_length (_inLexique SOURCE_FILE_AT_LINE (184))) == (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
          var_cas_sourceExtension.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the source extension should not be empty") SOURCE_FILE_AT_LINE (186)) ;
        }else{
          GGS_uint  var_cas_index ;
          var_cas_index = GGS_uint (true, 0U) ;
          GGS_bool var_cas_ok ;
          var_cas_ok = GGS_bool (true, true) ;
          GGS_uint _variant_7517 = var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (189)).reader_length (_inLexique SOURCE_FILE_AT_LINE (189))._add_operation (_inLexique, GGS_uint (true, 1U) SOURCE_FILE_AT_LINE (189)) ;
          GGS_bool _condition_7517 (_variant_7517._isBuilt (), true) ;
          while (_condition_7517.isBuiltAndTrue ()) {
            _condition_7517 = (((var_cas_index) < (var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (190)).reader_length (_inLexique SOURCE_FILE_AT_LINE (190)))) & (var_cas_ok)) ;
            if (_condition_7517.isBuiltAndTrue ()) {
              if (_variant_7517.uintValue () == 0) {
                _inLexique.onTheFlyRunTimeError ("loop variant error" SOURCE_FILE_AT_LINE (194)) ;
                _condition_7517 = GGS_bool (true, false) ;
              }else{
                _variant_7517._decrement_operation (_inLexique COMMA_HERE) ;
                GGS_char var_cas_c ;
                var_cas_c = var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (191)).reader_characterAtIndex (_inLexique, var_cas_index SOURCE_FILE_AT_LINE (191)) ;
                var_cas_ok = (((((((((var_cas_c) >= (GGS_char (true, 'a'))) & ((var_cas_c) <= (GGS_char (true, 'z'))))) | ((((var_cas_c) >= (GGS_char (true, 'A'))) & ((var_cas_c) <= (GGS_char (true, 'Z'))))))) | ((((var_cas_c) >= (GGS_char (true, '0'))) & ((var_cas_c) <= (GGS_char (true, '9'))))))) | ((var_cas_c) == (GGS_char (true, '_')))) ;
                var_cas_index._increment_operation (_inLexique SOURCE_FILE_AT_LINE (193)) ;
              }
            }
          }
          if (((! (var_cas_ok))).isBuiltAndTrue ()) {
            var_cas_sourceExtension.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the source extension should contains only lower case letters, upper case letters, digits and underscore characters") SOURCE_FILE_AT_LINE (197)) ;
          }
        }
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            GGS_string var_cas_helpMessage ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
            GGS_lstring  var_cas_messageString ;
            _inLexique._assignFromAttribute_tokenString (var_cas_messageString) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
            var_cas_helpMessage = var_cas_messageString.reader_string (_inLexique SOURCE_FILE_AT_LINE (205)) ;
            GGS_typeVariablesMap  var_cas_variablesMap ;
            var_cas_variablesMap = GGS_typeVariablesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
            GGS_lstring  var_cas_parameterTypeName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_parameterTypeName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
            if (((var_cas_parameterTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (211))) != (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
              var_cas_parameterTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "only the '@lstring' type is allowed here") SOURCE_FILE_AT_LINE (213)) ;
            }
            GGS_lstring  var_cas_argumentName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_argumentName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_variablesMap.modifier_insertConstInArgument (_inLexique, var_cas_argumentName, GGS_typeGalgas_lstring::constructor_new (_inLexique COMMA_HERE), GGS_typeAutomaticName::constructor_new (_inLexique, var_cas_argumentName COMMA_HERE) SOURCE_FILE_AT_LINE (216)) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
            GGS_typeInstructionList  var_cas_instructionList ;
            var_cas_instructionList = GGS_typeInstructionList::constructor_emptyList (_inLexique COMMA_HERE) ;
            GGS_typeTableEnAvant  var_cas_tableEnAvant ;
            var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
            GGS_entityToImplementMap  var_cas_metamodelEntityMap ;
            var_cas_metamodelEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
            GGS_entityPropertyMap  var_cas_currentTreewalkingRoutinePropertyMap ;
            var_cas_currentTreewalkingRoutinePropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
            GGS_treewalkingRoutineHeaderMap  var_cas_treewalkingRoutineHeaderMap ;
            var_cas_treewalkingRoutineHeaderMap = GGS_treewalkingRoutineHeaderMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
            nt_semantic_instructions_list_ (_inLexique, var_cas_treewalkingRoutineHeaderMap, var_cas_tableEnAvant, var_cas_componentEntitiesMap, var_cas_optionsComponentsMap, var_cas_variablesMap, var_cas_instructionList, var_cas_currentTreewalkingRoutinePropertyMap, var_cas_metamodelEntityMap) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
            var_cas_ruleDescriptorForProgramList._addAssign_operation (var_cas_sourceExtension, var_cas_helpMessage, var_cas_argumentName, var_cas_instructionList) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
            GGS_string var_cas_helpMessage ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                var_cas_helpMessage = GGS_string (true, "") ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
                GGS_lstring  var_cas_messageString ;
                _inLexique._assignFromAttribute_tokenString (var_cas_messageString) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                var_cas_helpMessage = var_cas_messageString.reader_string (_inLexique SOURCE_FILE_AT_LINE (254)) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
            GGS_lstring  var_cas_grammarName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_grammarName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            GGS_AC_semanticsEntity  var_cas_e ;
            if (var_cas_componentEntitiesMap._isBuilt ()) {
              var_cas_componentEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_grammarName, var_cas_e SOURCE_FILE_AT_LINE (260)) ;
            }
            GGS_M_nonterminalSymbolAlts  var_cas_grammarAltMap ;
            GGS_lstring  var_cas_lexiqueClassName ;
            { cPtr_C_grammarForSemantics * ptrExtraire_ = dynamic_cast <cPtr_C_grammarForSemantics *> (var_cas_e.getPtr ()) ;
              if (ptrExtraire_ == NULL) {
                var_cas_grammarAltMap._drop_operation () ;
                var_cas_lexiqueClassName._drop_operation () ;
                if (var_cas_e.getPtr () != NULL) {
                  TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
                  C_String message2_ ;
                  message1_ (0 COMMA_HERE) << cPtr_C_grammarForSemantics::static_string_message_messageTypeEntite () ;
                  message2_ << var_cas_e (HERE)->message_messageTypeEntite () ;
                  var_cas_grammarName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (263)) ;
                }
              }else{
                macroValidPointer (ptrExtraire_) ;
                var_cas_grammarAltMap = ptrExtraire_->mGrammarAltMap ;
                var_cas_lexiqueClassName = ptrExtraire_->mLexiqueClassName ;
              }
            }
            GGS_lstring  var_cas_altName ;
            var_cas_altName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
            GGS_L_EXsignature  var_cas_startSymbolSignature ;
            GGS_lstring  var_cas_returnedMetamodel ;
            if (var_cas_grammarAltMap._isBuilt ()) {
              var_cas_grammarAltMap (HERE)->method_searchKey (_inLexique, var_cas_altName, var_cas_startSymbolSignature, var_cas_returnedMetamodel SOURCE_FILE_AT_LINE (267)) ;
            }
            GGS_L_lstringList  var_cas_grammarAttributeList ;
            GGS_stringset  var_cas_grammarAttributeSet ;
            nt_program_attributes_declaration_ (_inLexique, var_cas_grammarAttributeList, var_cas_grammarAttributeSet) ;
            GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticWarning (_inLexique, ((((((((((((((((((GGS_string (true, "old style construct; now use:\n")) + (GGS_string (true, "  when . \"")))) + (var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (276))))) + (GGS_string (true, "\" message \"an '.")))) + (var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (276))))) + (GGS_string (true, "' source file\" \?\?@lstring inSourceFile {\n")))) + (GGS_string (true, "    grammar ")))) + (var_cas_grammarName.reader_string (_inLexique SOURCE_FILE_AT_LINE (277))))) + (GGS_string (true, " in inSourceFile;\n")))) + (GGS_string (true, "  }\n"))) SOURCE_FILE_AT_LINE (278)) ;
            if (((var_cas_grammarAttributeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (280))) < (var_cas_startSymbolSignature.reader_length (_inLexique SOURCE_FILE_AT_LINE (280)))).isBuiltAndTrue ()) {
              GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "one or more parameters missing") SOURCE_FILE_AT_LINE (282)) ;
            }else if (((var_cas_grammarAttributeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (282))) > (var_cas_startSymbolSignature.reader_length (_inLexique SOURCE_FILE_AT_LINE (282)))).isBuiltAndTrue ()) {
              GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "too much parameters") SOURCE_FILE_AT_LINE (284)) ;
            }
            GGS_string var_cas_postfix ;
            var_cas_postfix = GGS_string (true, "") ;
            GGS_lstring  var_cas_metamodelName ;
            GGS_lstring  var_cas_rootEntityName ;
            GGS_stringset  var_cas_contraintStringsetForMetamodel ;
            var_cas_contraintStringsetForMetamodel = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                var_cas_metamodelName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
                var_cas_rootEntityName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
                _inLexique._assignFromAttribute_tokenString (var_cas_metamodelName) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_program_parser_4 (_inLexique)) {
                  case 1 : {
                    } break ;
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
                    { bool syntaxRepeat = true ;
                      while (syntaxRepeat) {
                          GGS_lstring  var_cas_constraintComponentName ;
                          _inLexique._assignFromAttribute_tokenString (var_cas_constraintComponentName) ;
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                          var_cas_contraintStringsetForMetamodel._addAssign_operation (var_cas_constraintComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (302))) ;
                        switch (select_repeat_program_parser_5 (_inLexique)) {
                          case 2 : {
                            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                            } break ;
                          default :
                            syntaxRepeat = false ;
                            break ;
                        }
                      }
                    }
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
                    } break ;
                  default :
                    break ;
                }
                if (((var_cas_metamodelName.reader_string (_inLexique SOURCE_FILE_AT_LINE (308))) != (var_cas_returnedMetamodel.reader_string (_inLexique SOURCE_FILE_AT_LINE (308)))).isBuiltAndTrue ()) {
                  var_cas_metamodelName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (var_cas_returnedMetamodel.reader_string (_inLexique SOURCE_FILE_AT_LINE (309))))) + (GGS_string (true, "' metamodel was expected here"))) SOURCE_FILE_AT_LINE (310)) ;
                }
                GGS_entityToImplementMap  automatic_var_0 ;
                GGS_stringset  automatic_var_1 ;
                if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
                  var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelName, var_cas_rootEntityName, automatic_var_0, automatic_var_1 SOURCE_FILE_AT_LINE (311)) ;
                }
                } break ;
              default :
                break ;
            }
            GGS_loggableObjectList  var_cas_loggableObjectList ;
            var_cas_loggableObjectList = GGS_loggableObjectList::constructor_emptyList (_inLexique COMMA_HERE) ;
            { bool syntaxRepeat = true ;
              while (syntaxRepeat) {
                switch (select_repeat_program_parser_6 (_inLexique)) {
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
                    GGS_lstring  var_cas_loggedObjectName ;
                    _inLexique._assignFromAttribute_tokenString (var_cas_loggedObjectName) ;
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                    if (((var_cas_metamodelName.reader_string (_inLexique SOURCE_FILE_AT_LINE (319))) == (var_cas_loggedObjectName.reader_string (_inLexique SOURCE_FILE_AT_LINE (319)))).isBuiltAndTrue ()) {
                      var_cas_loggableObjectList._addAssign_operation (GGS_loggableMetamodel::constructor_new (_inLexique, var_cas_loggedObjectName COMMA_HERE)) ;
                    }else if ((var_cas_contraintStringsetForMetamodel.reader_hasKey (_inLexique, var_cas_loggedObjectName.reader_string (_inLexique SOURCE_FILE_AT_LINE (321)) SOURCE_FILE_AT_LINE (321))).isBuiltAndTrue ()) {
                      var_cas_loggableObjectList._addAssign_operation (GGS_loggableConstraint::constructor_new (_inLexique, var_cas_metamodelName, var_cas_loggedObjectName COMMA_HERE)) ;
                    }else if ((var_cas_grammarAttributeSet.reader_hasKey (_inLexique, var_cas_loggedObjectName.reader_string (_inLexique SOURCE_FILE_AT_LINE (323)) SOURCE_FILE_AT_LINE (323))).isBuiltAndTrue ()) {
                      var_cas_loggableObjectList._addAssign_operation (GGS_loggableAttribute::constructor_new (_inLexique, var_cas_loggedObjectName COMMA_HERE)) ;
                    }else{
                      var_cas_loggedObjectName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object cannot be logged") SOURCE_FILE_AT_LINE (327)) ;
                    }
                    } break ;
                  default :
                    syntaxRepeat = false ;
                    break ;
                }
              }
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
            var_cas_grammarDescriptorForProgramList._addAssign_operation (var_cas_postfix, var_cas_grammarName, var_cas_startSymbolSignature, var_cas_grammarAttributeList, var_cas_lexiqueClassName, var_cas_returnedMetamodel, var_cas_rootEntityName, var_cas_sourceExtension, var_cas_helpMessage, var_cas_optionsComponentsMap, var_cas_loggableObjectList) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (var_cas_nomPRGMprincipal._isBuilt () &&
      var_cas_versionString._isBuilt () &&
      var_cas_grammarDescriptorForProgramList._isBuilt () &&
      var_cas_ruleDescriptorForProgramList._isBuilt () &&
      var_cas_nombreMaxErreurs._isBuilt () &&
      var_cas_nombreMaxAlertes._isBuilt ()) {
    ::routine_generatePRGM (_inLexique,  var_cas_nomPRGMprincipal,  var_cas_versionString,  var_cas_grammarDescriptorForProgramList,  var_cas_ruleDescriptorForProgramList,  var_cas_nombreMaxErreurs,  var_cas_nombreMaxAlertes SOURCE_FILE_AT_LINE (349)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_115_6_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
            nt_semantic_instructions_list_parse (_inLexique) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            nt_program_attributes_declaration_parse (_inLexique) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_program_parser_4 (_inLexique)) {
                  case 1 : {
                    } break ;
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
                    { bool syntaxRepeat = true ;
                      while (syntaxRepeat) {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                        switch (select_repeat_program_parser_5 (_inLexique)) {
                          case 2 : {
                            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                            } break ;
                          default :
                            syntaxRepeat = false ;
                            break ;
                        }
                      }
                    }
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
                    } break ;
                  default :
                    break ;
                }
                } break ;
              default :
                break ;
            }
            { bool syntaxRepeat = true ;
              while (syntaxRepeat) {
                switch (select_repeat_program_parser_6 (_inLexique)) {
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                    } break ;
                  default :
                    syntaxRepeat = false ;
                    break ;
                }
              }
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_115_6_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
            nt_semantic_instructions_list_parse (_inLexique) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            nt_program_attributes_declaration_parse (_inLexique) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_program_parser_4 (_inLexique)) {
                  case 1 : {
                    } break ;
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
                    { bool syntaxRepeat = true ;
                      while (syntaxRepeat) {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                        switch (select_repeat_program_parser_5 (_inLexique)) {
                          case 2 : {
                            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                            } break ;
                          default :
                            syntaxRepeat = false ;
                            break ;
                        }
                      }
                    }
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
                    } break ;
                  default :
                    break ;
                }
                } break ;
              default :
                break ;
            }
            { bool syntaxRepeat = true ;
              while (syntaxRepeat) {
                switch (select_repeat_program_parser_6 (_inLexique)) {
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                    } break ;
                  default :
                    syntaxRepeat = false ;
                    break ;
                }
              }
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_115_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
            nt_semantic_instructions_list_parse (_inLexique) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            nt_program_attributes_declaration_parse (_inLexique) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_program_parser_4 (_inLexique)) {
                  case 1 : {
                    } break ;
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
                    { bool syntaxRepeat = true ;
                      while (syntaxRepeat) {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                        switch (select_repeat_program_parser_5 (_inLexique)) {
                          case 2 : {
                            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                            } break ;
                          default :
                            syntaxRepeat = false ;
                            break ;
                        }
                      }
                    }
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
                    } break ;
                  default :
                    break ;
                }
                } break ;
              default :
                break ;
            }
            { bool syntaxRepeat = true ;
              while (syntaxRepeat) {
                switch (select_repeat_program_parser_6 (_inLexique)) {
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                    } break ;
                  default :
                    syntaxRepeat = false ;
                    break ;
                }
              }
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_115_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
            nt_semantic_instructions_list_parse (_inLexique) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            nt_program_attributes_declaration_parse (_inLexique) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_program_parser_4 (_inLexique)) {
                  case 1 : {
                    } break ;
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
                    { bool syntaxRepeat = true ;
                      while (syntaxRepeat) {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                        switch (select_repeat_program_parser_5 (_inLexique)) {
                          case 2 : {
                            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                            } break ;
                          default :
                            syntaxRepeat = false ;
                            break ;
                        }
                      }
                    }
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
                    } break ;
                  default :
                    break ;
                }
                } break ;
              default :
                break ;
            }
            { bool syntaxRepeat = true ;
              while (syntaxRepeat) {
                switch (select_repeat_program_parser_6 (_inLexique)) {
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                    } break ;
                  default :
                    syntaxRepeat = false ;
                    break ;
                }
              }
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_115_6_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_warning) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3F_3F) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
            nt_semantic_instructions_list_parse (_inLexique) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_message) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_grammar) COMMA_HERE) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            nt_program_attributes_declaration_parse (_inLexique) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                switch (select_program_parser_4 (_inLexique)) {
                  case 1 : {
                    } break ;
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
                    { bool syntaxRepeat = true ;
                      while (syntaxRepeat) {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                        switch (select_repeat_program_parser_5 (_inLexique)) {
                          case 2 : {
                            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                            } break ;
                          default :
                            syntaxRepeat = false ;
                            break ;
                        }
                      }
                    }
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
                    } break ;
                  default :
                    break ;
                }
                } break ;
              default :
                break ;
            }
            { bool syntaxRepeat = true ;
              while (syntaxRepeat) {
                switch (select_repeat_program_parser_6 (_inLexique)) {
                  case 2 : {
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_log) COMMA_HERE) ;
                    _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                    } break ;
                  default :
                    syntaxRepeat = false ;
                    break ;
                }
              }
            }
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_when) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_program) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'program_attributes_declaration'     *
//                                                                           *
//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_program_attributes_declaration_program_parser_735_6_ (galgas_scanner & _inLexique,
                                GGS_L_lstringList  &var_cas_outAttributeList,
                                GGS_stringset  &var_cas_outAttributeSet) {
  var_cas_outAttributeList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outAttributeSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  switch (select_program_parser_7 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_attributeName ;
            _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_outAttributeList._addAssign_operation (var_cas_attributeName) ;
            var_cas_outAttributeSet._addAssign_operation (var_cas_attributeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (748))) ;
          switch (select_repeat_program_parser_8 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void program_parser::
pr_program_attributes_declaration_program_parser_735_6_parse (galgas_scanner & _inLexique) {
  switch (select_program_parser_7 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_program_parser_8 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

