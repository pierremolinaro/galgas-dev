//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'program_parser.cpp'                          *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                    november 28th, 2006, at 15h31'49"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "program_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "program_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_84_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &var_cas_ioSemanticsComponentsMap,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &var_cas_ioGrammarComponentsMap,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &var_cas_ioConstraintComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  GGS_lstring  var_cas_nomPRGMprincipal ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_nomPRGMprincipal.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_lstring  var_cas_versionString ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  var_cas_versionString.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
  var_cas_grammarComponentsMap = var_cas_ioGrammarComponentsMap ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
            GGS_lstring  var_cas_grammarName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_grammarName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                GGS_lstring  var_cas_sourceFileName ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                var_cas_sourceFileName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                nt_parse_grammar_component_for_importing_ (_inLexique, var_cas_sourceFileName, var_cas_grammarComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            GGS_lstring  var_cas_metamodelComponentName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_metamodelComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                GGS_lstring  var_cas_sourceFile ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                nt_parse_semantics_component_for_importing_ (_inLexique, var_cas_sourceFile, var_cas_ioSemanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_ioConstraintComponentMap) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
            GGS_lstring  var_cas_constraintComponentName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_constraintComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            switch (select_program_parser_4 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                GGS_lstring  var_cas_sourceFile ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                var_cas_sourceFile.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  GGS_luint  var_cas_nombreMaxErreurs ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  var_cas_nombreMaxErreurs.defineAttributeFromScanner (_inLexique.uint32value, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  GGS_luint  var_cas_nombreMaxAlertes ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  var_cas_nombreMaxAlertes.defineAttributeFromScanner (_inLexique.uint32value, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  GGS_L_grammarDescriptorForProgram  var_cas_grammarDescriptorForProgramList ;
  var_cas_grammarDescriptorForProgramList = GGS_L_grammarDescriptorForProgram::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
        GGS_lstring  var_cas_sourceExtension ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
        var_cas_sourceExtension.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        if (((var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (174)).reader_length (_inLexique SOURCE_FILE_AT_LINE (174))) == (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
          var_cas_sourceExtension.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the source extension should not be empty") SOURCE_FILE_AT_LINE (176)) ;
        }else{
          GGS_uint  var_cas_index ;
          var_cas_index = GGS_uint (true, 0U) ;
          GGS_bool var_cas_ok ;
          var_cas_ok = GGS_bool (true, true) ;
          GGS_uint _variant_6405 = var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (179)).reader_length (_inLexique SOURCE_FILE_AT_LINE (179))._add_operation (_inLexique, GGS_uint (true, 1U) SOURCE_FILE_AT_LINE (179)) ;
          GGS_bool _condition_6405 (_variant_6405._isBuilt (), true) ;
          while (_condition_6405.isBuiltAndTrue ()) {
            _condition_6405 = (((var_cas_index) < (var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (180)).reader_length (_inLexique SOURCE_FILE_AT_LINE (180)))) & (var_cas_ok)) ;
            if (_condition_6405.isBuiltAndTrue ()) {
              if (_variant_6405.uintValue () == 0) {
                _inLexique.onTheFlyRunTimeError ("loop variant error" SOURCE_FILE_AT_LINE (184)) ;
                _condition_6405 = GGS_bool (true, false) ;
              }else{
                _variant_6405._decrement_operation (_inLexique COMMA_HERE) ;
                GGS_char var_cas_c ;
                var_cas_c = var_cas_sourceExtension.reader_string (_inLexique SOURCE_FILE_AT_LINE (181)).reader_characterAtIndex (_inLexique, var_cas_index SOURCE_FILE_AT_LINE (181)) ;
                var_cas_ok = (((((((((var_cas_c) >= (GGS_char (true, 'a'))) & ((var_cas_c) <= (GGS_char (true, 'z'))))) | ((((var_cas_c) >= (GGS_char (true, 'A'))) & ((var_cas_c) <= (GGS_char (true, 'Z'))))))) | ((((var_cas_c) >= (GGS_char (true, '0'))) & ((var_cas_c) <= (GGS_char (true, '9'))))))) | ((var_cas_c) == (GGS_char (true, '_')))) ;
                var_cas_index._increment_operation (_inLexique SOURCE_FILE_AT_LINE (183)) ;
              }
            }
          }
          if (((! (var_cas_ok))).isBuiltAndTrue ()) {
            var_cas_sourceExtension.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the source extension should contains only lower case letters, upper case letters, digits and underscore characters") SOURCE_FILE_AT_LINE (187)) ;
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
        GGS_string var_cas_helpMessage ;
        switch (select_program_parser_6 (_inLexique)) {
          case 1 : {
            var_cas_helpMessage = GGS_string (true, "") ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
            GGS_lstring  var_cas_messageString ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            var_cas_messageString.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_helpMessage = var_cas_messageString.reader_string (_inLexique SOURCE_FILE_AT_LINE (197)) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
        GGS_lstring  var_cas_grammarName ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_grammarName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
        GGS_lstring  var_cas_lexiqueClassName ;
        GGS_M_nonterminalSymbolAltsForGrammar  var_cas_nonterminalSymbolParametersMap ;
        GGS_M_optionComponents  var_cas_optionsComponentsMap ;
        if (var_cas_grammarComponentsMap._isBuilt ()) {
          var_cas_grammarComponentsMap (HERE)->method_searchKey (_inLexique, var_cas_grammarName, var_cas_nonterminalSymbolParametersMap, var_cas_lexiqueClassName, var_cas_optionsComponentsMap SOURCE_FILE_AT_LINE (205)) ;
        }
        GGS_lstring  var_cas_altName ;
        var_cas_altName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
        GGS_L_signature  var_cas_startSymbolSignature ;
        GGS_lstring  var_cas_returnedMetamodel ;
        if (var_cas_nonterminalSymbolParametersMap._isBuilt ()) {
          var_cas_nonterminalSymbolParametersMap (HERE)->method_searchKey (_inLexique, var_cas_altName, var_cas_startSymbolSignature, var_cas_returnedMetamodel SOURCE_FILE_AT_LINE (209)) ;
        }
        GGS_L_lstringList  var_cas_grammarAttributeList ;
        GGS_stringset  var_cas_grammarAttributeSet ;
        nt_program_attributes_declaration_ (_inLexique, var_cas_grammarAttributeList, var_cas_grammarAttributeSet) ;
        if (((var_cas_grammarAttributeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (218))) < (var_cas_startSymbolSignature.reader_length (_inLexique SOURCE_FILE_AT_LINE (218)))).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "one or more parameters missing") SOURCE_FILE_AT_LINE (220)) ;
        }else if (((var_cas_grammarAttributeList.reader_length (_inLexique SOURCE_FILE_AT_LINE (220))) > (var_cas_startSymbolSignature.reader_length (_inLexique SOURCE_FILE_AT_LINE (220)))).isBuiltAndTrue ()) {
          GGS_location (_inLexique).reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "too much parameters") SOURCE_FILE_AT_LINE (222)) ;
        }
        GGS_string var_cas_postfix ;
        var_cas_postfix = GGS_string (true, "") ;
        GGS_lstring  var_cas_metamodelName ;
        GGS_lstring  var_cas_rootEntityName ;
        GGS_L_lstringList  var_cas_contraintListForMetamodel ;
        var_cas_contraintListForMetamodel = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
        GGS_stringset  var_cas_contraintStringsetForMetamodel ;
        var_cas_contraintStringsetForMetamodel = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
        switch (select_program_parser_7 (_inLexique)) {
          case 1 : {
            var_cas_metamodelName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
            var_cas_rootEntityName = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_metamodelName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            switch (select_program_parser_8 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
                { bool syntaxRepeat = true ;
                  while (syntaxRepeat) {
                      GGS_lstring  var_cas_constraintComponentName ;
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                      var_cas_constraintComponentName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                      var_cas_contraintListForMetamodel._addAssign_operation (var_cas_constraintComponentName) ;
                      var_cas_contraintStringsetForMetamodel._addAssign_operation (var_cas_constraintComponentName.reader_string (_inLexique SOURCE_FILE_AT_LINE (242))) ;
                    switch (select_repeat_program_parser_9 (_inLexique)) {
                      case 2 : {
                        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                        } break ;
                      default :
                        syntaxRepeat = false ;
                        break ;
                    }
                  }
                }
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
                } break ;
              default :
                break ;
            }
            if (((var_cas_metamodelName.reader_string (_inLexique SOURCE_FILE_AT_LINE (248))) != (var_cas_returnedMetamodel.reader_string (_inLexique SOURCE_FILE_AT_LINE (248)))).isBuiltAndTrue ()) {
              var_cas_metamodelName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '")) + (var_cas_returnedMetamodel.reader_string (_inLexique SOURCE_FILE_AT_LINE (249))))) + (GGS_string (true, "' metamodel was expected here"))) SOURCE_FILE_AT_LINE (250)) ;
            }
            GGS_entityToImplementMap  automatic_var_0 ;
            GGS_stringset  automatic_var_1 ;
            if (var_cas_ioMetamodelComponentMap._isBuilt ()) {
              var_cas_ioMetamodelComponentMap (HERE)->method_searchKey (_inLexique, var_cas_metamodelName, var_cas_rootEntityName, automatic_var_0, automatic_var_1 SOURCE_FILE_AT_LINE (251)) ;
            }
            } break ;
          default :
            break ;
        }
        GGS_loggableObjectList  var_cas_loggableObjectList ;
        var_cas_loggableObjectList = GGS_loggableObjectList::constructor_emptyList (_inLexique COMMA_HERE) ;
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_program_parser_10 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_log) ;
                GGS_lstring  var_cas_loggedObjectName ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                var_cas_loggedObjectName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
                if (((var_cas_metamodelName.reader_string (_inLexique SOURCE_FILE_AT_LINE (259))) == (var_cas_loggedObjectName.reader_string (_inLexique SOURCE_FILE_AT_LINE (259)))).isBuiltAndTrue ()) {
                  var_cas_loggableObjectList._addAssign_operation (GGS_loggableMetamodel::constructor_new (_inLexique, var_cas_loggedObjectName COMMA_HERE)) ;
                }else if ((var_cas_contraintStringsetForMetamodel.reader_hasKey (_inLexique, var_cas_loggedObjectName.reader_string (_inLexique SOURCE_FILE_AT_LINE (261)) SOURCE_FILE_AT_LINE (261))).isBuiltAndTrue ()) {
                  var_cas_loggableObjectList._addAssign_operation (GGS_loggableConstraint::constructor_new (_inLexique, var_cas_metamodelName, var_cas_loggedObjectName COMMA_HERE)) ;
                }else if ((var_cas_grammarAttributeSet.reader_hasKey (_inLexique, var_cas_loggedObjectName.reader_string (_inLexique SOURCE_FILE_AT_LINE (263)) SOURCE_FILE_AT_LINE (263))).isBuiltAndTrue ()) {
                  var_cas_loggableObjectList._addAssign_operation (GGS_loggableAttribute::constructor_new (_inLexique, var_cas_loggedObjectName COMMA_HERE)) ;
                }else{
                  var_cas_loggedObjectName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "this object cannot be logged") SOURCE_FILE_AT_LINE (267)) ;
                }
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
        var_cas_grammarDescriptorForProgramList._addAssign_operation (var_cas_postfix, var_cas_grammarName, var_cas_startSymbolSignature, var_cas_grammarAttributeList, var_cas_lexiqueClassName, var_cas_returnedMetamodel, var_cas_rootEntityName, var_cas_contraintListForMetamodel, var_cas_sourceExtension, var_cas_helpMessage, var_cas_optionsComponentsMap, var_cas_loggableObjectList) ;
      switch (select_repeat_program_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  if (var_cas_nomPRGMprincipal._isBuilt () &&
      var_cas_versionString._isBuilt () &&
      var_cas_grammarDescriptorForProgramList._isBuilt () &&
      var_cas_nombreMaxErreurs._isBuilt () &&
      var_cas_nombreMaxAlertes._isBuilt ()) {
    ::routine_generatePRGM (_inLexique,  var_cas_nomPRGMprincipal,  var_cas_versionString,  var_cas_grammarDescriptorForProgramList,  var_cas_nombreMaxErreurs,  var_cas_nombreMaxAlertes SOURCE_FILE_AT_LINE (290)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_84_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_4 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
        switch (select_program_parser_6 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        nt_program_attributes_declaration_parse (_inLexique) ;
        switch (select_program_parser_7 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_8 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
                { bool syntaxRepeat = true ;
                  while (syntaxRepeat) {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    switch (select_repeat_program_parser_9 (_inLexique)) {
                      case 2 : {
                        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                        } break ;
                      default :
                        syntaxRepeat = false ;
                        break ;
                    }
                  }
                }
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
                } break ;
              default :
                break ;
            }
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_program_parser_10 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_log) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      switch (select_repeat_program_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_84_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_4 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
        switch (select_program_parser_6 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        nt_program_attributes_declaration_parse (_inLexique) ;
        switch (select_program_parser_7 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_8 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
                { bool syntaxRepeat = true ;
                  while (syntaxRepeat) {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    switch (select_repeat_program_parser_9 (_inLexique)) {
                      case 2 : {
                        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                        } break ;
                      default :
                        syntaxRepeat = false ;
                        break ;
                    }
                  }
                }
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
                } break ;
              default :
                break ;
            }
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_program_parser_10 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_log) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      switch (select_repeat_program_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_84_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_4 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
        switch (select_program_parser_6 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        nt_program_attributes_declaration_parse (_inLexique) ;
        switch (select_program_parser_7 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_8 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
                { bool syntaxRepeat = true ;
                  while (syntaxRepeat) {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    switch (select_repeat_program_parser_9 (_inLexique)) {
                      case 2 : {
                        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                        } break ;
                      default :
                        syntaxRepeat = false ;
                        break ;
                    }
                  }
                }
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
                } break ;
              default :
                break ;
            }
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_program_parser_10 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_log) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      switch (select_repeat_program_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_84_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &/* var_cas_ioMetamodelComponentMap */,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_4 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
        switch (select_program_parser_6 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        nt_program_attributes_declaration_parse (_inLexique) ;
        switch (select_program_parser_7 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_8 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
                { bool syntaxRepeat = true ;
                  while (syntaxRepeat) {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    switch (select_repeat_program_parser_9 (_inLexique)) {
                      case 2 : {
                        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                        } break ;
                      default :
                        syntaxRepeat = false ;
                        break ;
                    }
                  }
                }
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
                } break ;
              default :
                break ;
            }
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_program_parser_10 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_log) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      switch (select_repeat_program_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_galgas_component_program_parser_84_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_program_parser_1 (_inLexique)) {
          case 1 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_2 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_grammar_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_3 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                nt_parse_semantics_component_for_importing_parse (_inLexique) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          case 3 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_constraint) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_4 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
                } break ;
              default :
                break ;
            }
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_program_parser_0 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_import) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_warning) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
        switch (select_program_parser_6 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
            } break ;
          default :
            break ;
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_grammar) ;
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        nt_program_attributes_declaration_parse (_inLexique) ;
        switch (select_program_parser_7 (_inLexique)) {
          case 1 : {
            } break ;
          case 2 : {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            switch (select_program_parser_8 (_inLexique)) {
              case 1 : {
                } break ;
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
                { bool syntaxRepeat = true ;
                  while (syntaxRepeat) {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                    switch (select_repeat_program_parser_9 (_inLexique)) {
                      case 2 : {
                        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                        } break ;
                      default :
                        syntaxRepeat = false ;
                        break ;
                    }
                  }
                }
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
                } break ;
              default :
                break ;
            }
            } break ;
          default :
            break ;
        }
        { bool syntaxRepeat = true ;
          while (syntaxRepeat) {
            switch (select_repeat_program_parser_10 (_inLexique)) {
              case 2 : {
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_log) ;
                _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                } break ;
              default :
                syntaxRepeat = false ;
                break ;
            }
          }
        }
        _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
      switch (select_repeat_program_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_when) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_program) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of production rule 'program_attributes_declaration'     *
//                                                                           *
//---------------------------------------------------------------------------*

void program_parser::
program_parser::
pr_program_attributes_declaration_program_parser_772_38_ (galgas_scanner & _inLexique,
                                GGS_L_lstringList  &var_cas_outAttributeList,
                                GGS_stringset  &var_cas_outAttributeSet) {
  var_cas_outAttributeList = GGS_L_lstringList::constructor_emptyList (_inLexique COMMA_HERE) ;
  var_cas_outAttributeSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  switch (select_program_parser_11 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_attributeName ;
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_attributeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
            var_cas_outAttributeList._addAssign_operation (var_cas_attributeName) ;
            var_cas_outAttributeSet._addAssign_operation (var_cas_attributeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (785))) ;
          switch (select_repeat_program_parser_12 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void program_parser::
pr_program_attributes_declaration_program_parser_772_38_parse (galgas_scanner & _inLexique) {
  switch (select_program_parser_11 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_program_parser_12 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

