//-----------------------------------------------------------------------------*
//                                                                             *
//              File 'galgas3SemanticDeclarationCompilation.cpp'               *
//                         Generated by version 2.6.0                          *
//                       july 11th, 2014, at 19h39'20"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas3SemanticDeclarationCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "galgas3SemanticDeclarationCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                Routine 'compileSemanticDeclarationsGalgas3'                 *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSemanticDeclarationsGalgas_33_ (const GALGAS_string constinArgument_inProjectSourceFile,
                                                    const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                                    const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                                    const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                                    const GALGAS_galgas_33_LexiqueComponentListAST constinArgument_inLexiqueComponentList,
                                                    const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                    GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                    GALGAS_semanticContext & outArgument_outSemanticContext,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  inCompiler->printMessage (GALGAS_string ("*** Building context\n") COMMA_SOURCE_FILE_AT_LINE (37)) ;
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = constinArgument_inSemanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler COMMA_SOURCE_FILE_AT_LINE (40)) ;
  }
  GALGAS_semanticDeclarationListAST var_sortedSemanticDeclarationListAST ;
  {
  routine_buildGalgas_33_SemanticContext (constinArgument_inProjectSourceFile, var_semanticDeclarationListWithPredefinedTypes, constinArgument_inEndOfProjectSourceFile, outArgument_outSemanticContext, var_sortedSemanticDeclarationListAST, inCompiler COMMA_SOURCE_FILE_AT_LINE (42)) ;
  }
  GALGAS_stringlist var_implementationFileIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (50)) ;
  GALGAS_optionComponentMapForSemanticAnalysis var_optionComponentMapForSemanticAnalysis ;
  {
  routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (constinArgument_inOptionComponentList, var_optionComponentMapForSemanticAnalysis, inCompiler COMMA_SOURCE_FILE_AT_LINE (51)) ;
  }
  outArgument_outSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis = var_optionComponentMapForSemanticAnalysis ;
  cEnumerator_optionComponentMapForSemanticAnalysis enumerator_2970 (var_optionComponentMapForSemanticAnalysis, kEnumeration_up) ;
  while (enumerator_2970.hasCurrentObject ()) {
    const enumGalgasBool test_0 = enumerator_2970.current_mIsPredefined (HERE).operator_not (SOURCE_FILE_AT_LINE (57)).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_implementationFileIncludeList.addAssign_operation (GALGAS_string ("option-").add_operation (enumerator_2970.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (58)) COMMA_SOURCE_FILE_AT_LINE (58)) ;
    }
    enumerator_2970.gotoNextObject () ;
  }
  cEnumerator_galgas_33_LexiqueComponentListAST enumerator_3193 (constinArgument_inLexiqueComponentList, kEnumeration_up) ;
  while (enumerator_3193.hasCurrentObject ()) {
    GALGAS_terminalMap var_terminalMap ;
    {
    routine_buildTerminalMap (enumerator_3193.current (HERE), var_terminalMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (63)) ;
    }
    {
    outArgument_outSemanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_3193.current (HERE).mAttribute_mLexiqueComponentName, var_terminalMap, enumerator_3193.current (HERE).mAttribute_mIndexingListAST, enumerator_3193.current (HERE).mAttribute_mIndexingDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (64)) ;
    }
    enumerator_3193.gotoNextObject () ;
  }
  {
  routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (constinArgument_inGrammarComponentList, outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (72)) ;
  }
  inCompiler->printMessage (GALGAS_string ("*** Semantic analysis\n") COMMA_SOURCE_FILE_AT_LINE (78)) ;
  cEnumerator_lstringlist enumerator_3827 (outArgument_outSemanticContext.mAttribute_mTypeMap.reader_unsolvedProxyList (SOURCE_FILE_AT_LINE (80)), kEnumeration_up) ;
  while (enumerator_3827.hasCurrentObject ()) {
    GALGAS_location location_1 (enumerator_3827.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_3827.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (81)) COMMA_SOURCE_FILE_AT_LINE (81)).operator_concat (GALGAS_string ("' type is undefined") COMMA_SOURCE_FILE_AT_LINE (81)) COMMA_SOURCE_FILE_AT_LINE (81)) ;
    enumerator_3827.gotoNextObject () ;
  }
  GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE_AT_LINE (84)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (85)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (86)) ;
    cEnumerator_semanticDeclarationListAST enumerator_4194 (var_sortedSemanticDeclarationListAST, kEnumeration_up) ;
    while (enumerator_4194.hasCurrentObject ()) {
      callCategoryMethod_semanticAnalysis ((const cPtr_semanticDeclarationAST *) enumerator_4194.current_mSemanticDeclaration (HERE).ptr (), outArgument_outSemanticContext, var_predefinedTypes, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (88)) ;
      enumerator_4194.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (96)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    const enumGalgasBool test_4 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_4) {
      inCompiler->printMessage (GALGAS_string ("*** Perform global checkings\n") COMMA_SOURCE_FILE_AT_LINE (98)) ;
    }
    {
    routine_performGalgas_33_ProjectGlobalCheckings (outArgument_outSemanticContext, constinArgument_inSemanticDeclarationList, constinArgument_inProjectSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (100)) ;
    }
  }
  inCompiler->printMessage (GALGAS_string ("*** Generating files\n") COMMA_SOURCE_FILE_AT_LINE (107)) ;
  GALGAS_string var_productDirectory = constinArgument_inProjectSourceFile.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (108)).operator_concat (GALGAS_string ("/build/output") COMMA_SOURCE_FILE_AT_LINE (108)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (110)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_5) {
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_5026 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_5026.hasCurrentObject ()) {
      const enumGalgasBool test_6 = enumerator_5026.current_mIsPredefined (HERE).operator_not (SOURCE_FILE_AT_LINE (113)).boolEnum () ;
      if (kBoolTrue == test_6) {
        GALGAS_string var_headerString = GALGAS_string ("#ifndef ").operator_concat (callCategoryReader_headerFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5026.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (114)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (114)) COMMA_SOURCE_FILE_AT_LINE (114)).operator_concat (GALGAS_string ("_DEFINED\n") COMMA_SOURCE_FILE_AT_LINE (114)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#define ").operator_concat (callCategoryReader_headerFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5026.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (115)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (115)) COMMA_SOURCE_FILE_AT_LINE (115)).operator_concat (GALGAS_string ("_DEFINED\n"
          "\n") COMMA_SOURCE_FILE_AT_LINE (115)) COMMA_SOURCE_FILE_AT_LINE (115)) ;
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_5026.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (116)) COMMA_SOURCE_FILE_AT_LINE (116)) ;
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_5026.current_mDeclaration (HERE).ptr (), var_productDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (117)) COMMA_SOURCE_FILE_AT_LINE (117)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#endif\n"
          "\n") COMMA_SOURCE_FILE_AT_LINE (118)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("//-----------------------------------------------------------------------------*\n"
          "\n") COMMA_SOURCE_FILE_AT_LINE (119)) ;
        {
        GALGAS_string::class_method_generateFileWithPattern (var_productDirectory, callCategoryReader_headerFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5026.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (122)).operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (122)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_headerString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (120)) ;
        }
      }
      enumerator_5026.gotoNextObject () ;
    }
    GALGAS_stringlist var_headerInclusionList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (132)) ;
    GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, GALGAS_string ("AZERTYUIOP"), var_headerInclusionList, GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (141)) COMMA_SOURCE_FILE_AT_LINE (138))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_6358 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_6358.hasCurrentObject ()) {
      const enumGalgasBool test_7 = enumerator_6358.current_mIsPredefined (HERE).operator_not (SOURCE_FILE_AT_LINE (144)).boolEnum () ;
      if (kBoolTrue == test_7) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_6358.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (145)) COMMA_SOURCE_FILE_AT_LINE (145)) ;
      }
      enumerator_6358.gotoNextObject () ;
    }
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_6536 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_6536.hasCurrentObject ()) {
      const enumGalgasBool test_8 = enumerator_6536.current_mIsPredefined (HERE).operator_not (SOURCE_FILE_AT_LINE (149)).boolEnum () ;
      if (kBoolTrue == test_8) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_6536.current_mDeclaration (HERE).ptr (), var_productDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (150)) COMMA_SOURCE_FILE_AT_LINE (150)) ;
      }
      enumerator_6536.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (var_productDirectory, GALGAS_string ("AZERTYUIOP.h"), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_headerString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (153)) ;
    }
  }
  const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (164)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_9) {
    ioArgument_ioToolProductFileList.addAssign_operation (GALGAS_string ("AZERTYUIOP.cpp") COMMA_SOURCE_FILE_AT_LINE (165)) ;
    cEnumerator_grammarMap enumerator_7067 (outArgument_outSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
    while (enumerator_7067.hasCurrentObject ()) {
      var_implementationFileIncludeList.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_7067.current_lkey (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (167)) COMMA_SOURCE_FILE_AT_LINE (167)) ;
      enumerator_7067.gotoNextObject () ;
    }
    GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, GALGAS_string ("AZERTYUIOP"), var_implementationFileIncludeList COMMA_SOURCE_FILE_AT_LINE (169))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_7374 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_7374.hasCurrentObject ()) {
      const enumGalgasBool test_10 = enumerator_7374.current_mIsPredefined (HERE).operator_not (SOURCE_FILE_AT_LINE (174)).boolEnum () ;
      if (kBoolTrue == test_10) {
        var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7374.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (175)) COMMA_SOURCE_FILE_AT_LINE (175)) ;
        var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7374.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (176)) COMMA_SOURCE_FILE_AT_LINE (176)) ;
      }
      enumerator_7374.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (var_productDirectory, GALGAS_string ("AZERTYUIOP.cpp"), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_implementationString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (179)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//        Routine 'buildGalgas3GrammarComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                                    GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_galgas_33_GrammarComponentListAST enumerator_8164 (constinArgument_inGrammarComponentList, kEnumeration_up) ;
  while (enumerator_8164.hasCurrentObject ()) {
    GALGAS_grammarLabelMap var_grammarLabelMap = GALGAS_grammarLabelMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (200)) ;
    cEnumerator_nonTerminalLabelListAST enumerator_8286 (enumerator_8164.current_mStartSymbolLabelList (HERE), kEnumeration_up) ;
    while (enumerator_8286.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (203)) ;
      cEnumerator_formalParameterListAST enumerator_8415 (enumerator_8286.current_mFormalArgumentList (HERE), kEnumeration_up) ;
      while (enumerator_8415.hasCurrentObject ()) {
        var_formalArgumentList.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_8415.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (206)), enumerator_8415.current_mFormalArgumentPassingMode (HERE), enumerator_8415.current_mFormalArgumentName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (205)) ;
        enumerator_8415.gotoNextObject () ;
      }
      {
      var_grammarLabelMap.modifier_insertKey (enumerator_8286.current_mLabelName (HERE), var_formalArgumentList, inCompiler COMMA_SOURCE_FILE_AT_LINE (211)) ;
      }
      enumerator_8286.gotoNextObject () ;
    }
    {
    ioArgument_ioSemanticContext.mAttribute_mGrammarMap.modifier_insertGrammar (enumerator_8164.current_mGrammarComponentName (HERE), var_grammarLabelMap, enumerator_8164.current_mHasIndexing (HERE).mAttribute_bool, enumerator_8164.current_mHasTranslateFeature (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (217)) ;
    }
    enumerator_8164.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                    Routine 'buildGalgas3SemanticContext'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_SemanticContext (const GALGAS_string constinArgument_inProjectSourceFile,
                                             const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                             const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                             GALGAS_semanticContext & outArgument_outSemanticContext,
                                             GALGAS_semanticDeclarationListAST & outArgument_outSortedSemanticDeclarationListAST,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release 'out' argument
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSemanticDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_9851 (constinArgument_inSemanticDeclarationList, kEnumeration_up) ;
  while (enumerator_9851.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_9851.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE_AT_LINE (242)) ;
    enumerator_9851.gotoNextObject () ;
  }
  GALGAS_semanticTypePrecedenceGraph var_semanticTypePrecedenceGraph = GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (SOURCE_FILE_AT_LINE (248)) ;
  GALGAS_categoryMethodMapForBuildingContext var_categoryMethodMapForBuildingContext = GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (249)) ;
  GALGAS_categoryReaderMapForBuildingContext var_categoryReaderMapForBuildingContext = GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (250)) ;
  GALGAS_categoryModifierMapForBuildingContext var_categoryModifierMapForBuildingContext = GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (251)) ;
  GALGAS_semanticDeclarationListAST var_categoryOverrideDefinitionList = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (252)) ;
  cEnumerator_semanticDeclarationListAST enumerator_10584 (var_semanticDeclarationList, kEnumeration_up) ;
  while (enumerator_10584.hasCurrentObject ()) {
    callCategoryMethod_enterDeclarationInGraph ((const cPtr_semanticDeclarationAST *) enumerator_10584.current_mSemanticDeclaration (HERE).ptr (), var_semanticTypePrecedenceGraph, var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, var_categoryOverrideDefinitionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (254)) ;
    enumerator_10584.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_semanticTypePrecedenceGraph.reader_undefinedNodeCount (SOURCE_FILE_AT_LINE (262)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_lstringlist enumerator_11004 (var_semanticTypePrecedenceGraph.reader_undefinedNodeReferenceList (SOURCE_FILE_AT_LINE (263)), kEnumeration_up) ;
    while (enumerator_11004.hasCurrentObject ()) {
      GALGAS_location location_1 (enumerator_11004.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_11004.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (264)) COMMA_SOURCE_FILE_AT_LINE (264)).operator_concat (GALGAS_string ("' type is not defined") COMMA_SOURCE_FILE_AT_LINE (264)) COMMA_SOURCE_FILE_AT_LINE (264)) ;
      enumerator_11004.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, GALGAS_string ("semantic analysis not performed, due to undefined type error(s)") COMMA_SOURCE_FILE_AT_LINE (266)) ;
    outArgument_outSemanticContext.drop () ; // Release error dropped variable
    outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticDeclarationListAST var_unsortedSemanticDeclarationListAST ;
    GALGAS_lstringlist var_unsortedNodeKeyList ;
    GALGAS_lstringlist joker_11361_0 ; // Joker input parameter
    var_semanticTypePrecedenceGraph.method_topologicalSort (outArgument_outSortedSemanticDeclarationListAST, joker_11361_0, var_unsortedSemanticDeclarationListAST, var_unsortedNodeKeyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (268)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (274)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("semantic analysis not performed, ").operator_concat (var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (275)).reader_string (SOURCE_FILE_AT_LINE (275)) COMMA_SOURCE_FILE_AT_LINE (275)).operator_concat (GALGAS_string (" declarations are involved in circular definition:") COMMA_SOURCE_FILE_AT_LINE (275)) ;
      cEnumerator_semanticDeclarationListAST enumerator_11756 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_11756.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (callCategoryReader_keyRepresentation ((const cPtr_semanticDeclarationAST *) enumerator_11756.current_mSemanticDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (277)) COMMA_SOURCE_FILE_AT_LINE (277)) COMMA_SOURCE_FILE_AT_LINE (277)) ;
        enumerator_11756.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, var_s COMMA_SOURCE_FILE_AT_LINE (279)) ;
      outArgument_outSemanticContext.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      outArgument_outSortedSemanticDeclarationListAST.dotAssign_operation (var_categoryOverrideDefinitionList COMMA_SOURCE_FILE_AT_LINE (282)) ;
      outArgument_outSemanticContext = GALGAS_semanticContext::constructor_new (constinArgument_inProjectSourceFile, GALGAS_unifiedTypeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (286)), GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (287)), GALGAS_functionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (288)), GALGAS_filewrapperMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (289)), GALGAS_grammarMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (290)), GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (291)), GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (292)), GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (293)) COMMA_SOURCE_FILE_AT_LINE (284)) ;
      cEnumerator_semanticDeclarationListAST enumerator_12584 (outArgument_outSortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_12584.hasCurrentObject ()) {
        callCategoryMethod_enterInSemanticContext ((const cPtr_semanticDeclarationAST *) enumerator_12584.current_mSemanticDeclaration (HERE).ptr (), var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (297)) ;
        enumerator_12584.gotoNextObject () ;
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//         Routine 'buildGalgas3OptionComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                                                   GALGAS_optionComponentMapForSemanticAnalysis & outArgument_outOptionComponentMapForSemanticAnalysis,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOptionComponentMapForSemanticAnalysis.drop () ; // Release 'out' argument
  outArgument_outOptionComponentMapForSemanticAnalysis = GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (318)) ;
  cEnumerator_galgas_33_OptionComponentListAST enumerator_13570 (constinArgument_inOptionComponentList, kEnumeration_up) ;
  while (enumerator_13570.hasCurrentObject ()) {
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (320)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (321)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (322)) ;
    GALGAS_stringset var_optionNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (323)) ;
    cEnumerator_commandLineOptionListAST enumerator_13818 (enumerator_13570.current_mOptions (HERE), kEnumeration_up) ;
    while (enumerator_13818.hasCurrentObject ()) {
      const enumGalgasBool test_0 = var_optionNameSet.reader_hasKey (enumerator_13818.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE_AT_LINE (325)) COMMA_SOURCE_FILE_AT_LINE (325)).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_location location_1 (enumerator_13818.current_mOptionInternalName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").add_operation (enumerator_13818.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE_AT_LINE (326)), inCompiler COMMA_SOURCE_FILE_AT_LINE (326)).add_operation (GALGAS_string ("' command line option has been already declared"), inCompiler COMMA_SOURCE_FILE_AT_LINE (326)) COMMA_SOURCE_FILE_AT_LINE (326)) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_13818.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (327)).objectCompare (GALGAS_string ("bool"))).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          var_boolOptionMap.modifier_insertKey (enumerator_13818.current_mOptionInternalName (HERE), enumerator_13818.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE_AT_LINE (330)), enumerator_13818.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE_AT_LINE (331)), enumerator_13818.current_mOptionComment (HERE).reader_string (SOURCE_FILE_AT_LINE (332)), GALGAS_string ("false"), inCompiler COMMA_SOURCE_FILE_AT_LINE (328)) ;
          }
          const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_13818.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_noDefaultValue (SOURCE_FILE_AT_LINE (335)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (enumerator_13818.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("an @bool option cannot have a default value (default value is allways false)") COMMA_SOURCE_FILE_AT_LINE (336)) ;
          }
        }else if (kBoolFalse == test_2) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_13818.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (338)).objectCompare (GALGAS_string ("uint"))).boolEnum () ;
          if (kBoolTrue == test_5) {
            {
            //--- @ifExpressionForGeneration
            GALGAS_string temp_6 ;
            const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, enumerator_13818.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE_AT_LINE (344)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
            if (kBoolTrue == test_7) {
              temp_6 = GALGAS_string ("0") ;
            }else if (kBoolFalse == test_7) {
              temp_6 = enumerator_13818.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE_AT_LINE (344)) ;
            }
            var_uintOptionMap.modifier_insertKey (enumerator_13818.current_mOptionInternalName (HERE), enumerator_13818.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE_AT_LINE (341)), enumerator_13818.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE_AT_LINE (342)), enumerator_13818.current_mOptionComment (HERE).reader_string (SOURCE_FILE_AT_LINE (343)), temp_6, inCompiler COMMA_SOURCE_FILE_AT_LINE (339)) ;
            }
            const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_13818.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_stringDefaultValue (SOURCE_FILE_AT_LINE (346)))).boolEnum () ;
            if (kBoolTrue == test_8) {
              GALGAS_location location_9 (enumerator_13818.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_9, GALGAS_string ("an @uint option default value cannot be an @string value") COMMA_SOURCE_FILE_AT_LINE (347)) ;
            }
          }else if (kBoolFalse == test_5) {
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, enumerator_13818.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (349)).objectCompare (GALGAS_string ("string"))).boolEnum () ;
            if (kBoolTrue == test_10) {
              {
              var_stringOptionMap.modifier_insertKey (enumerator_13818.current_mOptionInternalName (HERE), enumerator_13818.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE_AT_LINE (352)), enumerator_13818.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE_AT_LINE (353)), enumerator_13818.current_mOptionComment (HERE).reader_string (SOURCE_FILE_AT_LINE (354)), enumerator_13818.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE_AT_LINE (355)), inCompiler COMMA_SOURCE_FILE_AT_LINE (350)) ;
              }
              const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_13818.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_unsignedDefaultValue (SOURCE_FILE_AT_LINE (357)))).boolEnum () ;
              if (kBoolTrue == test_11) {
                GALGAS_location location_12 (enumerator_13818.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_12, GALGAS_string ("an @string option default value cannot be an @uint value") COMMA_SOURCE_FILE_AT_LINE (358)) ;
              }
            }else if (kBoolFalse == test_10) {
              GALGAS_location location_13 (enumerator_13818.current_mOptionTypeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_13, GALGAS_string ("only the @bool, @uint or @string types are allowed here") COMMA_SOURCE_FILE_AT_LINE (361)) ;
            }
          }
        }
      }
      var_optionNameSet.addAssign_operation (enumerator_13818.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE_AT_LINE (363)) COMMA_SOURCE_FILE_AT_LINE (363)) ;
      enumerator_13818.gotoNextObject () ;
    }
    {
    outArgument_outOptionComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_13570.current_mOptionComponentName (HERE), GALGAS_bool (false), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (365)) ;
    }
    enumerator_13570.gotoNextObject () ;
  }
  const enumGalgasBool test_14 = outArgument_outOptionComponentMapForSemanticAnalysis.reader_hasKey (GALGAS_string ("galgas_builtin_options") COMMA_SOURCE_FILE_AT_LINE (374)).operator_not (SOURCE_FILE_AT_LINE (374)).boolEnum () ;
  if (kBoolTrue == test_14) {
    GALGAS__32_stringlist var_optionNameList = GALGAS_application::constructor_boolOptionNameList (SOURCE_FILE_AT_LINE (375)) ;
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (376)) ;
    cEnumerator__32_stringlist enumerator_16255 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_16255.hasCurrentObject ()) {
      {
      var_boolOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_16255.current_mValue_31_ (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (379)), GALGAS_application::constructor_boolOptionInvocationLetter (enumerator_16255.current_mValue_30_ (HERE), enumerator_16255.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (380)), GALGAS_application::constructor_boolOptionInvocationString (enumerator_16255.current_mValue_30_ (HERE), enumerator_16255.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (381)), GALGAS_application::constructor_boolOptionCommentString (enumerator_16255.current_mValue_30_ (HERE), enumerator_16255.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (382)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (378)) ;
      }
      enumerator_16255.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_uintOptionNameList (SOURCE_FILE_AT_LINE (387)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (388)) ;
    cEnumerator__32_stringlist enumerator_16731 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_16731.hasCurrentObject ()) {
      {
      var_uintOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_16731.current_mValue_31_ (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (391)), GALGAS_application::constructor_uintOptionInvocationLetter (enumerator_16731.current_mValue_30_ (HERE), enumerator_16731.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (392)), GALGAS_application::constructor_uintOptionInvocationString (enumerator_16731.current_mValue_30_ (HERE), enumerator_16731.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (393)), GALGAS_application::constructor_uintOptionCommentString (enumerator_16731.current_mValue_30_ (HERE), enumerator_16731.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (394)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (390)) ;
      }
      enumerator_16731.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_stringOptionNameList (SOURCE_FILE_AT_LINE (399)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (400)) ;
    cEnumerator__32_stringlist enumerator_17211 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_17211.hasCurrentObject ()) {
      {
      var_stringOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_17211.current_mValue_31_ (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (403)), GALGAS_application::constructor_stringOptionInvocationLetter (enumerator_17211.current_mValue_30_ (HERE), enumerator_17211.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (404)), GALGAS_application::constructor_stringOptionInvocationString (enumerator_17211.current_mValue_30_ (HERE), enumerator_17211.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (405)), GALGAS_application::constructor_stringOptionCommentString (enumerator_17211.current_mValue_30_ (HERE), enumerator_17211.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (406)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (402)) ;
      }
      enumerator_17211.gotoNextObject () ;
    }
    {
    outArgument_outOptionComponentMapForSemanticAnalysis.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("galgas_builtin_options"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (412)), GALGAS_bool (true), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (411)) ;
    }
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


