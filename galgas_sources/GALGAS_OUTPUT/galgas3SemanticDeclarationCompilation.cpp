//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  File 'galgas3SemanticDeclarationCompilation.cpp'                                   *
//                                             Generated by version 3.0.0                                              *
//                                          october 5th, 2014, at 10h55'57"                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "lexiqueLL1grammar.h"
#include "galgas_cli_options.h"
#include "templateGrammar.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "semanticsSLRgrammar.h"
#include "galgas3SemanticDeclarationCompilation.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    Routine 'compileSemanticDeclarationsGalgas3'                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_compileSemanticDeclarationsGalgas_33_ (const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                                    const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                                    const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                    GALGAS_semanticContext & outArgument_outSemanticContext,
                                                    GALGAS_semanticDeclarationSortedListForGeneration & outArgument_outSemanticDeclarationSortedListForGeneration,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  outArgument_outSemanticDeclarationSortedListForGeneration.drop () ; // Release 'out' argument
  inCompiler->printMessage (GALGAS_string ("*** Building context\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 35)) ;
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = constinArgument_inSemanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 38)) ;
  }
  GALGAS_commandLineOptionListAST var_options = GALGAS_commandLineOptionListAST::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 40)) ;
  cEnumerator__32_stringlist enumerator_2372 (GALGAS_application::constructor_boolOptionNameList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 41)), kEnumeration_up) ;
  while (enumerator_2372.hasCurrentObject ()) {
    var_options.addAssign_operation (GALGAS_string ("bool").reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 43)), GALGAS_lstring::constructor_new (enumerator_2372.current_mValue_31_ (HERE), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 44)), GALGAS_lchar::constructor_new (GALGAS_application::constructor_boolOptionInvocationLetter (enumerator_2372.current_mValue_30_ (HERE), enumerator_2372.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 45)), GALGAS_location::constructor_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 45))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 45)), GALGAS_application::constructor_boolOptionInvocationString (enumerator_2372.current_mValue_30_ (HERE), enumerator_2372.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 46)).reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 46)), GALGAS_application::constructor_boolOptionCommentString (enumerator_2372.current_mValue_30_ (HERE), enumerator_2372.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 47)).reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 47)), GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 48)), GALGAS_optionDefaultValueEnumAST::constructor_noDefaultValue (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 49))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 42)) ;
    enumerator_2372.gotoNextObject () ;
  }
  cEnumerator__32_stringlist enumerator_2841 (GALGAS_application::constructor_uintOptionNameList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 52)), kEnumeration_up) ;
  while (enumerator_2841.hasCurrentObject ()) {
    var_options.addAssign_operation (GALGAS_string ("uint").reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 54)), GALGAS_lstring::constructor_new (enumerator_2841.current_mValue_31_ (HERE), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 55)), GALGAS_lchar::constructor_new (GALGAS_application::constructor_boolOptionInvocationLetter (enumerator_2841.current_mValue_30_ (HERE), enumerator_2841.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 56)), GALGAS_location::constructor_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 56))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 56)), GALGAS_application::constructor_boolOptionInvocationString (enumerator_2841.current_mValue_30_ (HERE), enumerator_2841.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 57)).reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 57)), GALGAS_application::constructor_boolOptionCommentString (enumerator_2841.current_mValue_30_ (HERE), enumerator_2841.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 58)).reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 58)), GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 59)), GALGAS_optionDefaultValueEnumAST::constructor_noDefaultValue (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 60))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 53)) ;
    enumerator_2841.gotoNextObject () ;
  }
  cEnumerator__32_stringlist enumerator_3312 (GALGAS_application::constructor_stringOptionNameList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 63)), kEnumeration_up) ;
  while (enumerator_3312.hasCurrentObject ()) {
    var_options.addAssign_operation (GALGAS_string ("string").reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 65)), GALGAS_lstring::constructor_new (enumerator_3312.current_mValue_31_ (HERE), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 66)), GALGAS_lchar::constructor_new (GALGAS_application::constructor_boolOptionInvocationLetter (enumerator_3312.current_mValue_30_ (HERE), enumerator_3312.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 67)), GALGAS_location::constructor_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 67))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 67)), GALGAS_application::constructor_boolOptionInvocationString (enumerator_3312.current_mValue_30_ (HERE), enumerator_3312.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 68)).reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 68)), GALGAS_application::constructor_boolOptionCommentString (enumerator_3312.current_mValue_30_ (HERE), enumerator_3312.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 69)).reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 69)), GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 70)), GALGAS_optionDefaultValueEnumAST::constructor_noDefaultValue (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 71))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 64)) ;
    enumerator_3312.gotoNextObject () ;
  }
  var_semanticDeclarationListWithPredefinedTypes.addAssign_operation (GALGAS_optionComponentDeclarationAST::constructor_new (GALGAS_bool (true), GALGAS_string ("galgas_builtin_options").reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 76)), var_options  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 74))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 74)) ;
  GALGAS_semanticDeclarationListAST var_sortedSemanticDeclarationListAST ;
  {
  routine_buildGalgas_33_SemanticContext (var_semanticDeclarationListWithPredefinedTypes, constinArgument_inEndOfProjectSourceFile, outArgument_outSemanticContext, var_sortedSemanticDeclarationListAST, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 80)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->printMessage (GALGAS_string ("*** Semantic analysis\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 88)) ;
  }
  {
  routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (constinArgument_inGrammarComponentList, outArgument_outSemanticContext, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 101)) ;
  }
  cEnumerator_lstringlist enumerator_4915 (outArgument_outSemanticContext.mAttribute_mTypeMap.reader_unsolvedProxyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 106)), kEnumeration_up) ;
  while (enumerator_4915.hasCurrentObject ()) {
    GALGAS_location location_1 (enumerator_4915.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_4915.current_mValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 107))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 107)).operator_concat (GALGAS_string ("' type is undefined")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 107))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 107)) ;
    enumerator_4915.gotoNextObject () ;
  }
  outArgument_outSemanticDeclarationSortedListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 110)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 111)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 112)) ;
    cEnumerator_semanticDeclarationListAST enumerator_5307 (var_sortedSemanticDeclarationListAST, kEnumeration_up) ;
    while (enumerator_5307.hasCurrentObject ()) {
      callCategoryMethod_semanticAnalysis ((const cPtr_semanticDeclarationAST *) enumerator_5307.current_mSemanticDeclaration (HERE).ptr (), outArgument_outSemanticContext, var_predefinedTypes, outArgument_outSemanticDeclarationSortedListForGeneration, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 114)) ;
      enumerator_5307.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Routine 'buildGalgas3GrammarComponentMapForSemanticAnalysis'                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                                    GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_galgas_33_GrammarComponentListAST enumerator_5842 (constinArgument_inGrammarComponentList, kEnumeration_up) ;
  while (enumerator_5842.hasCurrentObject ()) {
    GALGAS_grammarLabelMap var_grammarLabelMap = GALGAS_grammarLabelMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 132)) ;
    cEnumerator_nonTerminalLabelListAST enumerator_5964 (enumerator_5842.current_mStartSymbolLabelList (HERE), kEnumeration_up) ;
    while (enumerator_5964.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 135)) ;
      cEnumerator_formalParameterListAST enumerator_6093 (enumerator_5964.current_mFormalArgumentList (HERE), kEnumeration_up) ;
      while (enumerator_6093.hasCurrentObject ()) {
        var_formalArgumentList.addAssign_operation (enumerator_6093.current_mFormalSelector (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_6093.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 139)), enumerator_6093.current_mFormalArgumentPassingMode (HERE), enumerator_6093.current_mFormalArgumentName (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 137)) ;
        enumerator_6093.gotoNextObject () ;
      }
      {
      var_grammarLabelMap.modifier_insertKey (enumerator_5964.current_mLabelName (HERE), var_formalArgumentList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 144)) ;
      }
      enumerator_5964.gotoNextObject () ;
    }
    {
    ioArgument_ioSemanticContext.mAttribute_mGrammarMap.modifier_insertGrammar (enumerator_5842.current_mGrammarComponentName (HERE), var_grammarLabelMap, enumerator_5842.current_mHasIndexing (HERE).mAttribute_bool, enumerator_5842.current_mHasTranslateFeature (HERE), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 150)) ;
    }
    enumerator_5842.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'buildGalgas3SemanticContext'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_buildGalgas_33_SemanticContext (const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                             const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                             GALGAS_semanticContext & outArgument_outSemanticContext,
                                             GALGAS_semanticDeclarationListAST & outArgument_outSortedSemanticDeclarationListAST,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release 'out' argument
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSemanticDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_7524 (constinArgument_inSemanticDeclarationList, kEnumeration_up) ;
  while (enumerator_7524.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_7524.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 174)) ;
    enumerator_7524.gotoNextObject () ;
  }
  GALGAS_semanticTypePrecedenceGraph var_semanticTypePrecedenceGraph = GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 180)) ;
  GALGAS_categoryMethodMapForBuildingContext var_categoryMethodMapForBuildingContext = GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 181)) ;
  GALGAS_categoryReaderMapForBuildingContext var_categoryReaderMapForBuildingContext = GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 182)) ;
  GALGAS_categoryModifierMapForBuildingContext var_categoryModifierMapForBuildingContext = GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 183)) ;
  GALGAS_semanticDeclarationListAST var_categoryOverrideDefinitionList = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 184)) ;
  cEnumerator_semanticDeclarationListAST enumerator_8257 (var_semanticDeclarationList, kEnumeration_up) ;
  while (enumerator_8257.hasCurrentObject ()) {
    callCategoryMethod_enterDeclarationInGraph ((const cPtr_semanticDeclarationAST *) enumerator_8257.current_mSemanticDeclaration (HERE).ptr (), var_semanticTypePrecedenceGraph, var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, var_categoryOverrideDefinitionList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 186)) ;
    enumerator_8257.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_semanticTypePrecedenceGraph.reader_undefinedNodeCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 194)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_lstringlist enumerator_8677 (var_semanticTypePrecedenceGraph.reader_undefinedNodeReferenceList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 195)), kEnumeration_up) ;
    while (enumerator_8677.hasCurrentObject ()) {
      GALGAS_location location_1 (enumerator_8677.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_8677.current_mValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 196))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 196)).operator_concat (GALGAS_string ("' type is not defined")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 196))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 196)) ;
      enumerator_8677.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, GALGAS_string ("semantic analysis not performed, due to undefined type error(s)")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 198)) ;
    outArgument_outSemanticContext.drop () ; // Release error dropped variable
    outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticDeclarationListAST var_unsortedSemanticDeclarationListAST ;
    GALGAS_lstringlist var_unsortedNodeKeyList ;
    GALGAS_lstringlist joker_9034_0 ; // Joker input parameter
    var_semanticTypePrecedenceGraph.method_topologicalSort (outArgument_outSortedSemanticDeclarationListAST, joker_9034_0, var_unsortedSemanticDeclarationListAST, var_unsortedNodeKeyList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 200)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 206)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("semantic analysis not performed, ").operator_concat (var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 207)).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 207))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 207)).operator_concat (GALGAS_string (" declarations are involved in circular definition:")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 207)) ;
      cEnumerator_semanticDeclarationListAST enumerator_9429 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_9429.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (callCategoryReader_keyRepresentation ((const cPtr_semanticDeclarationAST *) enumerator_9429.current_mSemanticDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 209))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 209))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 209)) ;
        enumerator_9429.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, var_s  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 211)) ;
      outArgument_outSemanticContext.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      outArgument_outSortedSemanticDeclarationListAST.dotAssign_operation (var_categoryOverrideDefinitionList  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 214)) ;
      outArgument_outSemanticContext = GALGAS_semanticContext::constructor_new (GALGAS_unifiedTypeMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 217)), GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 218)), GALGAS_functionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 219)), GALGAS_filewrapperMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 220)), GALGAS_grammarMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 221)), GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 222)), GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 223))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 216)) ;
      cEnumerator_semanticDeclarationListAST enumerator_10178 (outArgument_outSortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_10178.hasCurrentObject ()) {
        callCategoryMethod_enterInSemanticContext ((const cPtr_semanticDeclarationAST *) enumerator_10178.current_mSemanticDeclaration (HERE).ptr (), var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 227)) ;
        enumerator_10178.gotoNextObject () ;
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Once function 'definitionGroupAmount'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_uint onceFunction_definitionGroupAmount (C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_uint result_outResult ; // Returned variable
  result_outResult = GALGAS_uint ((uint32_t) 100U) ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------------------------------------------------*
//  Function implementation                                                                                            *
//---------------------------------------------------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_definitionGroupAmount = false ;
static GALGAS_uint gOnceFunctionResult_definitionGroupAmount ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint function_definitionGroupAmount (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_definitionGroupAmount) {
    gOnceFunctionResult_definitionGroupAmount = onceFunction_definitionGroupAmount (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_definitionGroupAmount = true ;
  }
  return gOnceFunctionResult_definitionGroupAmount ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void releaseOnceFunctionResult_definitionGroupAmount (void) {
  gOnceFunctionResult_definitionGroupAmount.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_definitionGroupAmount (NULL,
                                                                   releaseOnceFunctionResult_definitionGroupAmount) ;

//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_definitionGroupAmount [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_definitionGroupAmount (C_Compiler * inCompiler,
                                                                      const cObjectArray & /* inEffectiveParameterArray */,
                                                                      const GALGAS_location & /* inErrorLocation */
                                                                      COMMA_LOCATION_ARGS) {
  return function_definitionGroupAmount (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_definitionGroupAmount ("definitionGroupAmount",
                                                                       functionWithGenericHeader_definitionGroupAmount,
                                                                       & kTypeDescriptor_GALGAS_uint,
                                                                       0,
                                                                       functionArgs_definitionGroupAmount) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    Routine 'generateSemanticDeclarationsGalgas3'                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateSemanticDeclarationsGalgas_33_ (const GALGAS_string constinArgument_inProductDirectory,
                                                     const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                     const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                                     GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                     GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                                     C_Compiler * inCompiler
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_16199 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_16199.hasCurrentObject ()) {
    callCategoryMethod_appendSpecificFiles ((const cPtr_semanticDeclarationForGeneration *) enumerator_16199.current_mDeclaration (HERE).ptr (), constinArgument_inProductDirectory, ioArgument_ioAllProductFileSet, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 370)) ;
    enumerator_16199.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 375)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateOneHeader.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_1) {
      {
      routine_generateOneBigHeader (constinArgument_inProductDirectory, constinArgument_inSemanticDeclarationSortedListForGeneration, ioArgument_ioAllProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 377)) ;
      }
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_2 = function_generateFewHeaderFiles (inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 382)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 382)).boolEnum () ;
      if (kBoolTrue == test_2) {
        {
        routine_generateManyHeaders (constinArgument_inProductDirectory, constinArgument_inSemanticDeclarationSortedListForGeneration, ioArgument_ioAllProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 390)) ;
        }
      }
    }
    const enumGalgasBool test_3 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateManyFiles.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_3) {
      {
      routine_generateManyImplementationFiles (constinArgument_inProductDirectory, constinArgument_inSemanticContext, constinArgument_inSemanticDeclarationSortedListForGeneration, ioArgument_ioToolProductFileList, ioArgument_ioAllProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 397)) ;
      }
    }else if (kBoolFalse == test_3) {
      const enumGalgasBool test_4 = function_generateFewHeaderFiles (inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 404)).boolEnum () ;
      if (kBoolTrue == test_4) {
        {
        routine_generateFewImplementationFilesWithFewHeaders (constinArgument_inProductDirectory, constinArgument_inSemanticContext, constinArgument_inSemanticDeclarationSortedListForGeneration, ioArgument_ioToolProductFileList, ioArgument_ioAllProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 405)) ;
        }
      }else if (kBoolFalse == test_4) {
        {
        routine_generateFewImplementationFiles (constinArgument_inProductDirectory, constinArgument_inSemanticContext, constinArgument_inSemanticDeclarationSortedListForGeneration, ioArgument_ioToolProductFileList, ioArgument_ioAllProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 413)) ;
        }
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'generateManyHeaders'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateManyHeaders (const GALGAS_string constinArgument_inProductDirectory,
                                  const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                  GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringlist var_headerInclusionList_31_ = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 432)) ;
  GALGAS_stringlist var_headerInclusionList_32_ = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 433)) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_18241 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_18241.hasCurrentObject ()) {
    const enumGalgasBool test_0 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 435)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 435)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_stringset var_inclusionSet_31_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 436)) ;
      GALGAS_string var_headerDef_31_ ;
      callCategoryMethod_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), var_inclusionSet_31_, var_headerDef_31_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 437)) ;
      GALGAS_string var_headerIncludes_31_ = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_18483 (var_inclusionSet_31_, kEnumeration_up) ;
      while (enumerator_18483.hasCurrentObject ()) {
        var_headerIncludes_31_.dotAssign_operation (GALGAS_string ("#include \"").operator_concat (enumerator_18483.current_key (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 440)).operator_concat (GALGAS_string (".h\"\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 440))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 440)) ;
        enumerator_18483.gotoNextObject () ;
      }
      var_headerIncludes_31_.dotAssign_operation (var_headerDef_31_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 442)) ;
      GALGAS_stringset var_inclusionSet_32_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 443)) ;
      GALGAS_string var_headerDef_32_ ;
      callCategoryMethod_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), GALGAS_bool (true), constinArgument_inProductDirectory, var_inclusionSet_32_, var_headerDef_32_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 444)) ;
      GALGAS_string var_headerIncludes_32_ = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_18819 (var_inclusionSet_32_, kEnumeration_up) ;
      while (enumerator_18819.hasCurrentObject ()) {
        var_headerIncludes_32_.dotAssign_operation (GALGAS_string ("#include \"").operator_concat (enumerator_18819.current_key (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 447)).operator_concat (GALGAS_string (".h\"\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 447))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 447)) ;
        enumerator_18819.gotoNextObject () ;
      }
      var_headerIncludes_32_.dotAssign_operation (var_headerDef_32_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 449)) ;
      if (callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 451)).isValid ()) {
        switch (callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 451)).enumValue ()) {
        case GALGAS_headerKind::kNotBuilt:
          break ;
        case GALGAS_headerKind::kEnum_noHeader: {
          const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_headerIncludes_31_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_1) {
            GALGAS_location location_2 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 454)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_2, GALGAS_string ("'noHeader' setting for the '").operator_concat (enumerator_18241.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 454)).operator_concat (GALGAS_string ("' declaration, and 'headerIncludes1' string is not empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 454))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 454)) ;
          }
          const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_headerIncludes_32_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 457)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("'noHeader' setting for the '").operator_concat (enumerator_18241.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 457)).operator_concat (GALGAS_string ("' declaration, and 'headerIncludes2' string is not empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 457))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 457)) ;
          }
          } break ;
        case GALGAS_headerKind::kEnum_oneHeader: {
          const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_headerIncludes_31_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_5) {
            GALGAS_location location_6 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 461)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_6, GALGAS_string ("'oneHeader' setting for the '").operator_concat (enumerator_18241.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 461)).operator_concat (GALGAS_string ("' declaration, and 'headerIncludes1' string is empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 461))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 461)) ;
          }
          const enumGalgasBool test_7 = GALGAS_bool (kIsNotEqual, var_headerIncludes_32_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_7) {
            GALGAS_location location_8 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 464)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticWarning (location_8, GALGAS_string ("'oneHeader' setting for the '").operator_concat (enumerator_18241.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 464)).operator_concat (GALGAS_string ("' declaration, and 'headerIncludes2' string is not empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 464))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 464)) ;
          }
          } break ;
        case GALGAS_headerKind::kEnum_twoHeaders: {
          const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, var_headerIncludes_31_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_9) {
            GALGAS_location location_10 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 468)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticWarning (location_10, GALGAS_string ("'twoHeaders' setting for the '").operator_concat (enumerator_18241.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 468)).operator_concat (GALGAS_string ("' declaration, and 'headerIncludes1' string is empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 468))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 468)) ;
          }
          const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, var_headerIncludes_32_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_11) {
            GALGAS_location location_12 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 471)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticWarning (location_12, GALGAS_string ("'twoHeaders' setting for the '").operator_concat (enumerator_18241.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 471)).operator_concat (GALGAS_string ("' declaration, and 'headerIncludes2' string is empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 471))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 471)) ;
          }
          } break ;
        }
      }
      const enumGalgasBool test_13 = GALGAS_bool (kIsNotEqual, callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 475)).objectCompare (GALGAS_headerKind::constructor_noHeader (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 475)))).boolEnum () ;
      if (kBoolTrue == test_13) {
        GALGAS_string var_headerString = GALGAS_string ("#ifndef ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 476)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 476))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 476)).operator_concat (GALGAS_string ("_1_DEFINED\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 476)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#define ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 477)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 477))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 477)).operator_concat (GALGAS_string ("_1_DEFINED\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 477))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 477)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 478)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#include \"galgas2/predefined-types.h\"\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 479)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 480)) ;
        var_headerString.dotAssign_operation (var_headerIncludes_31_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 481)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 482)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 483)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#endif\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 484)) ;
        GALGAS_string temp_14 ;
        const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 485)).objectCompare (GALGAS_headerKind::constructor_twoHeaders (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 485)))).boolEnum () ;
        if (kBoolTrue == test_15) {
          temp_14 = GALGAS_string ("-1") ;
        }else if (kBoolFalse == test_15) {
          temp_14 = GALGAS_string::makeEmptyString () ;
        }
        GALGAS_string var_headerFileName = callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 485)).add_operation (temp_14, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 485)) ;
        var_headerInclusionList_31_.addAssign_operation (var_headerFileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 486)) ;
        ioArgument_ioAllProductFileSet.addAssign_operation (var_headerFileName.operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 487))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 487)) ;
        {
        GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, var_headerFileName.operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 490)), var_headerString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 488)) ;
        }
      }
      const enumGalgasBool test_16 = GALGAS_bool (kIsEqual, callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 495)).objectCompare (GALGAS_headerKind::constructor_twoHeaders (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 495)))).boolEnum () ;
      if (kBoolTrue == test_16) {
        GALGAS_string var_headerString = GALGAS_string ("#ifndef ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 496)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 496))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 496)).operator_concat (GALGAS_string ("_DEFINED\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 496)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#define ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 497)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 497))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 497)).operator_concat (GALGAS_string ("_DEFINED\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 497))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 497)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 498)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#include \"").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 499))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 499)).operator_concat (GALGAS_string ("-1.h\"\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 499))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 499)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("\n"
          "//---------------------------------------------------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 500)) ;
        var_headerString.dotAssign_operation (var_headerIncludes_32_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 501)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 502)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 503)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#endif\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 504)) ;
        var_headerInclusionList_32_.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 505))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 505)) ;
        ioArgument_ioAllProductFileSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 506)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 506))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 506)) ;
        {
        GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_18241.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 509)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 509)), var_headerString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 507)) ;
        }
      }
    }
    enumerator_18241.gotoNextObject () ;
  }
  GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, GALGAS_string ("all-declarations"), var_headerInclusionList_31_.add_operation (var_headerInclusionList_32_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 518)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 516))) ;
  ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("all-declarations.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 520)) ;
  {
  GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, GALGAS_string ("all-declarations.h"), var_headerString.add_operation (GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 524)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 521)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Routine 'generateOneBigHeader'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateOneBigHeader (const GALGAS_string constinArgument_inProductDirectory,
                                   const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                   GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, GALGAS_string ("all-declarations"), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 537)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 535))) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_23857 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_23857.hasCurrentObject ()) {
    const enumGalgasBool test_0 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_23857.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 541)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 541)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_stringset var_inclusionSet_31_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 542)) ;
      GALGAS_string var_headerString_31_ ;
      callCategoryMethod_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_23857.current_mDeclaration (HERE).ptr (), var_inclusionSet_31_, var_headerString_31_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 543)) ;
      var_headerString.dotAssign_operation (var_headerString_31_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 544)) ;
    }
    enumerator_23857.gotoNextObject () ;
  }
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_24178 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_24178.hasCurrentObject ()) {
    const enumGalgasBool test_1 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_24178.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 549)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 549)).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_stringset var_inclusionSet_32_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 550)) ;
      GALGAS_string var_headerString_32_ ;
      callCategoryMethod_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_24178.current_mDeclaration (HERE).ptr (), GALGAS_bool (true), constinArgument_inProductDirectory, var_inclusionSet_32_, var_headerString_32_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 551)) ;
      var_headerString.dotAssign_operation (var_headerString_32_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 552)) ;
    }
    enumerator_24178.gotoNextObject () ;
  }
  ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("all-declarations.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 555)) ;
  {
  GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, GALGAS_string ("all-declarations.h"), var_headerString.add_operation (GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 559)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 556)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*

cMapElement_headerCompositionMap::cMapElement_headerCompositionMap (const GALGAS_lstring & inKey,
                                                                    const GALGAS_stringset & in_mInclusion,
                                                                    const GALGAS_string & in_mHeaderString
                                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mInclusion (in_mInclusion),
mAttribute_mHeaderString (in_mHeaderString) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_headerCompositionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mInclusion.isValid () && mAttribute_mHeaderString.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_headerCompositionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_headerCompositionMap (mAttribute_lkey, mAttribute_mInclusion, mAttribute_mHeaderString COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_headerCompositionMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInclusion" ":" ;
  mAttribute_mInclusion.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHeaderString" ":" ;
  mAttribute_mHeaderString.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_headerCompositionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_headerCompositionMap * operand = (cMapElement_headerCompositionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mInclusion.objectCompare (operand->mAttribute_mInclusion) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHeaderString.objectCompare (operand->mAttribute_mHeaderString) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap::GALGAS_headerCompositionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap::GALGAS_headerCompositionMap (const GALGAS_headerCompositionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap & GALGAS_headerCompositionMap::operator = (const GALGAS_headerCompositionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap GALGAS_headerCompositionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_headerCompositionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap GALGAS_headerCompositionMap::constructor_mapWithMapToOverride (const GALGAS_headerCompositionMap & inMapToOverride
                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_headerCompositionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap GALGAS_headerCompositionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  GALGAS_headerCompositionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerCompositionMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                       const GALGAS_stringset & inArgument0,
                                                       const GALGAS_string & inArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_headerCompositionMap * p = NULL ;
  macroMyNew (p, cMapElement_headerCompositionMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@headerCompositionMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerCompositionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                      GALGAS_stringset inArgument0,
                                                      GALGAS_string inArgument1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_headerCompositionMap * p = NULL ;
  macroMyNew (p, cMapElement_headerCompositionMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' key is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_headerCompositionMap_searchKey = "there is no '%K' key" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerCompositionMap::method_searchKey (GALGAS_lstring inKey,
                                                    GALGAS_stringset & outArgument0,
                                                    GALGAS_string & outArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  const cMapElement_headerCompositionMap * p = (const cMapElement_headerCompositionMap *) performSearch (inKey,
                                                                                                           inCompiler,
                                                                                                           kSearchErrorMessage_headerCompositionMap_searchKey
                                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_headerCompositionMap) ;
    outArgument0 = p->mAttribute_mInclusion ;
    outArgument1 = p->mAttribute_mHeaderString ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_headerCompositionMap::reader_mInclusionForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_headerCompositionMap * p = (const cMapElement_headerCompositionMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_headerCompositionMap) ;
    result = p->mAttribute_mInclusion ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_headerCompositionMap::reader_mHeaderStringForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_headerCompositionMap * p = (const cMapElement_headerCompositionMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_headerCompositionMap) ;
    result = p->mAttribute_mHeaderString ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerCompositionMap::modifier_setMInclusionForKey (GALGAS_stringset inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_headerCompositionMap * p = (cMapElement_headerCompositionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_headerCompositionMap) ;
    p->mAttribute_mInclusion = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerCompositionMap::modifier_setMHeaderStringForKey (GALGAS_string inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_headerCompositionMap * p = (cMapElement_headerCompositionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_headerCompositionMap) ;
    p->mAttribute_mHeaderString = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_headerCompositionMap * GALGAS_headerCompositionMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                   const GALGAS_string & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_headerCompositionMap * result = (cMapElement_headerCompositionMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_headerCompositionMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_headerCompositionMap::cEnumerator_headerCompositionMap (const GALGAS_headerCompositionMap & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap_2D_element cEnumerator_headerCompositionMap::current (LOCATION_ARGS) const {
  const cMapElement_headerCompositionMap * p = (const cMapElement_headerCompositionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_headerCompositionMap) ;
  return GALGAS_headerCompositionMap_2D_element (p->mAttribute_lkey, p->mAttribute_mInclusion, p->mAttribute_mHeaderString) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_headerCompositionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_headerCompositionMap::current_mInclusion (LOCATION_ARGS) const {
  const cMapElement_headerCompositionMap * p = (const cMapElement_headerCompositionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_headerCompositionMap) ;
  return p->mAttribute_mInclusion ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_headerCompositionMap::current_mHeaderString (LOCATION_ARGS) const {
  const cMapElement_headerCompositionMap * p = (const cMapElement_headerCompositionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_headerCompositionMap) ;
  return p->mAttribute_mHeaderString ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @headerCompositionMap type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_headerCompositionMap ("headerCompositionMap",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_headerCompositionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_headerCompositionMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_headerCompositionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_headerCompositionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap GALGAS_headerCompositionMap::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_headerCompositionMap result ;
  const GALGAS_headerCompositionMap * p = (const GALGAS_headerCompositionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_headerCompositionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("headerCompositionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_headerRepartitionMap::cMapElement_headerRepartitionMap (const GALGAS_lstring & inKey,
                                                                    const GALGAS_string & in_mHeaderFileName
                                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mHeaderFileName (in_mHeaderFileName) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_headerRepartitionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mHeaderFileName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_headerRepartitionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_headerRepartitionMap (mAttribute_lkey, mAttribute_mHeaderFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_headerRepartitionMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHeaderFileName" ":" ;
  mAttribute_mHeaderFileName.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_headerRepartitionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_headerRepartitionMap * operand = (cMapElement_headerRepartitionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mHeaderFileName.objectCompare (operand->mAttribute_mHeaderFileName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap::GALGAS_headerRepartitionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap::GALGAS_headerRepartitionMap (const GALGAS_headerRepartitionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap & GALGAS_headerRepartitionMap::operator = (const GALGAS_headerRepartitionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap GALGAS_headerRepartitionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_headerRepartitionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap GALGAS_headerRepartitionMap::constructor_mapWithMapToOverride (const GALGAS_headerRepartitionMap & inMapToOverride
                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_headerRepartitionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap GALGAS_headerRepartitionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  GALGAS_headerRepartitionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerRepartitionMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                       const GALGAS_string & inArgument0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_headerRepartitionMap * p = NULL ;
  macroMyNew (p, cMapElement_headerRepartitionMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@headerRepartitionMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerRepartitionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                      GALGAS_string inArgument0,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_headerRepartitionMap * p = NULL ;
  macroMyNew (p, cMapElement_headerRepartitionMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' key is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_headerRepartitionMap_searchKey = "there is no '%K' key" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerRepartitionMap::method_searchKey (GALGAS_lstring inKey,
                                                    GALGAS_string & outArgument0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) const {
  const cMapElement_headerRepartitionMap * p = (const cMapElement_headerRepartitionMap *) performSearch (inKey,
                                                                                                           inCompiler,
                                                                                                           kSearchErrorMessage_headerRepartitionMap_searchKey
                                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_headerRepartitionMap) ;
    outArgument0 = p->mAttribute_mHeaderFileName ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_headerRepartitionMap::reader_mHeaderFileNameForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_headerRepartitionMap * p = (const cMapElement_headerRepartitionMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_headerRepartitionMap) ;
    result = p->mAttribute_mHeaderFileName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerRepartitionMap::modifier_setMHeaderFileNameForKey (GALGAS_string inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_headerRepartitionMap * p = (cMapElement_headerRepartitionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_headerRepartitionMap) ;
    p->mAttribute_mHeaderFileName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_headerRepartitionMap * GALGAS_headerRepartitionMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                   const GALGAS_string & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement_headerRepartitionMap * result = (cMapElement_headerRepartitionMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_headerRepartitionMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_headerRepartitionMap::cEnumerator_headerRepartitionMap (const GALGAS_headerRepartitionMap & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap_2D_element cEnumerator_headerRepartitionMap::current (LOCATION_ARGS) const {
  const cMapElement_headerRepartitionMap * p = (const cMapElement_headerRepartitionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_headerRepartitionMap) ;
  return GALGAS_headerRepartitionMap_2D_element (p->mAttribute_lkey, p->mAttribute_mHeaderFileName) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_headerRepartitionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_headerRepartitionMap::current_mHeaderFileName (LOCATION_ARGS) const {
  const cMapElement_headerRepartitionMap * p = (const cMapElement_headerRepartitionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_headerRepartitionMap) ;
  return p->mAttribute_mHeaderFileName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @headerRepartitionMap type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_headerRepartitionMap ("headerRepartitionMap",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_headerRepartitionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_headerRepartitionMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_headerRepartitionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_headerRepartitionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap GALGAS_headerRepartitionMap::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_headerRepartitionMap result ;
  const GALGAS_headerRepartitionMap * p = (const GALGAS_headerRepartitionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_headerRepartitionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("headerRepartitionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                Routine 'buildHeader'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_buildHeader (const GALGAS_headerCompositionMap constinArgument_inHeaderCompositionMap,
                          const GALGAS_string constinArgument_inHeaderFileName,
                          const GALGAS_string constinArgument_inDeclarationName,
                          GALGAS_headerRepartitionMap & ioArgument_ioHeaderRepartitionMap,
                          GALGAS_string & ioArgument_ioHeaderString,
                          C_Compiler * inCompiler
                          COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = ioArgument_ioHeaderRepartitionMap.reader_hasKey (constinArgument_inDeclarationName COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 590)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 590)).boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    ioArgument_ioHeaderRepartitionMap.modifier_insertKey (constinArgument_inDeclarationName.reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 591)), constinArgument_inHeaderFileName, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 591)) ;
    }
    const enumGalgasBool test_1 = constinArgument_inHeaderCompositionMap.reader_hasKey (constinArgument_inDeclarationName COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 592)).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_stringset var_inclusionSet ;
      GALGAS_string var_headerString ;
      constinArgument_inHeaderCompositionMap.method_searchKey (constinArgument_inDeclarationName.reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 594)), var_inclusionSet, var_headerString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 593)) ;
      ioArgument_ioHeaderString.dotAssign_operation (GALGAS_string ("//START--- ").add_operation (constinArgument_inDeclarationName, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 598)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 598))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 598)) ;
      cEnumerator_stringset enumerator_25957 (var_inclusionSet, kEnumeration_up) ;
      while (enumerator_25957.hasCurrentObject ()) {
        {
        routine_buildHeader (constinArgument_inHeaderCompositionMap, constinArgument_inHeaderFileName, enumerator_25957.current_key (HERE), ioArgument_ioHeaderRepartitionMap, ioArgument_ioHeaderString, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 600)) ;
        }
        enumerator_25957.gotoNextObject () ;
      }
      ioArgument_ioHeaderString.dotAssign_operation (GALGAS_string ("//--- ").add_operation (constinArgument_inDeclarationName, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 608)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 608))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 608)) ;
      cEnumerator_stringset enumerator_26235 (var_inclusionSet, kEnumeration_up) ;
      while (enumerator_26235.hasCurrentObject ()) {
        ioArgument_ioHeaderString.dotAssign_operation (GALGAS_string ("  // ").add_operation (enumerator_26235.current_key (HERE), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 610)).add_operation (GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 610))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 610)) ;
        enumerator_26235.gotoNextObject () ;
      }
      ioArgument_ioHeaderString.dotAssign_operation (var_headerString  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 612)) ;
    }else if (kBoolFalse == test_1) {
      ioArgument_ioHeaderString.dotAssign_operation (GALGAS_string ("#include \"").add_operation (constinArgument_inDeclarationName, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 614)).add_operation (GALGAS_string (".h\"\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 614))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 614)) ;
    }
  }else if (kBoolFalse == test_0) {
    ioArgument_ioHeaderString.dotAssign_operation (GALGAS_string ("//--- ").add_operation (constinArgument_inDeclarationName, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 617)).add_operation (GALGAS_string (" already included\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 617))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 617)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'generateFewImplementationFiles'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateFewImplementationFiles (const GALGAS_string constinArgument_inProductDirectory,
                                             const GALGAS_semanticContext constinArgument_inSemanticContext,
                                             const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                             GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                             GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool var_useOneHugeHeader = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateOneHeader.reader_value ()) ;
  GALGAS_uint var_n = GALGAS_uint ((uint32_t) 0U) ;
  GALGAS_uint var_fileIdx = GALGAS_uint ((uint32_t) 0U) ;
  GALGAS_string var_implementationString = GALGAS_string::makeEmptyString () ;
  GALGAS_stringset var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 762)) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_32207 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_32207.hasCurrentObject ()) {
    const enumGalgasBool test_0 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_32207.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 764)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 764)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_code ;
      callCategoryMethod_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_32207.current_mDeclaration (HERE).ptr (), var_inclusionSet, var_code, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 765)) ;
      var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 766)) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_32207.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 767))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 767)) ;
      var_n.increment_operation (inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 768)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_n.objectCompare (function_definitionGroupAmount (inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 769)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        const enumGalgasBool test_2 = var_useOneHugeHeader.boolEnum () ;
        if (kBoolTrue == test_2) {
          var_inclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 771)) ;
        }
        cEnumerator_grammarMap enumerator_32791 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
        while (enumerator_32791.hasCurrentObject ()) {
          var_inclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_32791.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 776))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 776)) ;
          enumerator_32791.gotoNextObject () ;
        }
        GALGAS_string var_header = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, var_inclusionSet.reader_stringList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 779)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 778))) ;
        GALGAS_string var_fileName = GALGAS_string ("all-declarations-").operator_concat (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 781))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 781)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 781)) ;
        ioArgument_ioToolProductFileList = GALGAS_stringlist::constructor_listWithValue (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 782)).add_operation (ioArgument_ioToolProductFileList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 782)) ;
        ioArgument_ioAllProductFileSet.addAssign_operation (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 783)) ;
        {
        GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, var_fileName, var_header.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 787)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 784)) ;
        }
        var_n = GALGAS_uint ((uint32_t) 0U) ;
        var_fileIdx.increment_operation (inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 790)) ;
        var_implementationString = GALGAS_string::makeEmptyString () ;
        var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 792)) ;
      }
    }
    enumerator_32207.gotoNextObject () ;
  }
  const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_implementationString.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_3) {
    const enumGalgasBool test_4 = var_useOneHugeHeader.boolEnum () ;
    if (kBoolTrue == test_4) {
      var_inclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 799)) ;
    }
    cEnumerator_grammarMap enumerator_33728 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
    while (enumerator_33728.hasCurrentObject ()) {
      var_inclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_33728.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 802))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 802)) ;
      enumerator_33728.gotoNextObject () ;
    }
    GALGAS_string var_header = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, var_inclusionSet.reader_stringList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 806)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 804))) ;
    GALGAS_string var_fileName = GALGAS_string ("all-declarations-").operator_concat (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 808))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 808)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 808)) ;
    ioArgument_ioToolProductFileList = GALGAS_stringlist::constructor_listWithValue (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 809)).add_operation (ioArgument_ioToolProductFileList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 809)) ;
    ioArgument_ioAllProductFileSet.addAssign_operation (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 810)) ;
    {
    GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, var_fileName, var_header.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 814)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 811)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               Routine 'generateFewImplementationFilesWithFewHeaders'                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateFewImplementationFilesWithFewHeaders (const GALGAS_string constinArgument_inProductDirectory,
                                                           const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                           const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                                           GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                           GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                                           C_Compiler * inCompiler
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool var_useOneHugeHeader = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateOneHeader.reader_value ()) ;
  GALGAS_headerCompositionMap var_headerCompositionMap = GALGAS_headerCompositionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 829)) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_34938 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_34938.hasCurrentObject ()) {
    const enumGalgasBool test_0 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_34938.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 831)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 831)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_stringset var_inclusionSet_31_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 832)) ;
      GALGAS_string var_headerString_31_ ;
      callCategoryMethod_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_34938.current_mDeclaration (HERE).ptr (), var_inclusionSet_31_, var_headerString_31_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 833)) ;
      GALGAS_stringset var_inclusionSet_32_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 834)) ;
      GALGAS_string var_headerString_32_ ;
      callCategoryMethod_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_34938.current_mDeclaration (HERE).ptr (), GALGAS_bool (true), constinArgument_inProductDirectory, var_inclusionSet_32_, var_headerString_32_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 835)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_34938.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 836)).objectCompare (GALGAS_headerKind::constructor_noHeader (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 836)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_string temp_2 ;
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_34938.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 837)).objectCompare (GALGAS_headerKind::constructor_twoHeaders (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 837)))).boolEnum () ;
        if (kBoolTrue == test_3) {
          temp_2 = GALGAS_string ("-1") ;
        }else if (kBoolFalse == test_3) {
          temp_2 = GALGAS_string::makeEmptyString () ;
        }
        GALGAS_string var_headerFileName = callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_34938.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 837)).add_operation (temp_2, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 837)) ;
        {
        var_headerCompositionMap.modifier_insertKey (var_headerFileName.reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 839)), var_inclusionSet_31_, var_headerString_31_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 838)) ;
        }
      }
      const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_34938.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 844)).objectCompare (GALGAS_headerKind::constructor_twoHeaders (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 844)))).boolEnum () ;
      if (kBoolTrue == test_4) {
        {
        GALGAS_stringset temp_5 = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 847)) ;
        temp_5.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_34938.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 847)).add_operation (GALGAS_string ("-1"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 847))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 847)) ;
        var_headerCompositionMap.modifier_insertKey (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_34938.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 846)).reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 846)), var_inclusionSet_32_.operator_or (temp_5 COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 847)), var_headerString_32_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 845)) ;
        }
      }
    }
    enumerator_34938.gotoNextObject () ;
  }
  GALGAS_headerRepartitionMap var_headerRepartitionMap = GALGAS_headerRepartitionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 854)) ;
  GALGAS_uint var_fileIdx = GALGAS_uint ((uint32_t) 0U) ;
  GALGAS_string var_implementationString = GALGAS_string::makeEmptyString () ;
  GALGAS_string var_headerString = GALGAS_string::makeEmptyString () ;
  GALGAS_stringset var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 858)) ;
  GALGAS_string var_headerFileName = GALGAS_string ("all-declarations-").add_operation (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 859)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 859)) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_36313 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_36313.hasCurrentObject ()) {
    const enumGalgasBool test_6 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_36313.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 861)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 861)).boolEnum () ;
    if (kBoolTrue == test_6) {
      const enumGalgasBool test_7 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_36313.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 862)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 862)).boolEnum () ;
      if (kBoolTrue == test_7) {
        const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_36313.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 863)).objectCompare (GALGAS_headerKind::constructor_twoHeaders (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 863)))).boolEnum () ;
        if (kBoolTrue == test_8) {
          {
          routine_buildHeader (var_headerCompositionMap, var_headerFileName, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_36313.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 864)).add_operation (GALGAS_string ("-1"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 864)), var_headerRepartitionMap, var_headerString, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 864)) ;
          }
          {
          routine_buildHeader (var_headerCompositionMap, var_headerFileName, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_36313.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 865)), var_headerRepartitionMap, var_headerString, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 865)) ;
          }
        }else if (kBoolFalse == test_8) {
          const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_36313.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 866)).objectCompare (GALGAS_headerKind::constructor_oneHeader (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 866)))).boolEnum () ;
          if (kBoolTrue == test_9) {
            {
            routine_buildHeader (var_headerCompositionMap, var_headerFileName, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_36313.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 867)), var_headerRepartitionMap, var_headerString, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 867)) ;
            }
          }
        }
      }
      GALGAS_string var_code ;
      callCategoryMethod_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_36313.current_mDeclaration (HERE).ptr (), var_inclusionSet, var_code, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 870)) ;
      cEnumerator_stringset enumerator_37124 (var_inclusionSet, kEnumeration_up) ;
      while (enumerator_37124.hasCurrentObject ()) {
        {
        routine_buildHeader (var_headerCompositionMap, var_headerFileName, enumerator_37124.current_key (HERE), var_headerRepartitionMap, var_headerString, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 872)) ;
        }
        enumerator_37124.gotoNextObject () ;
      }
      var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 874)) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_36313.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 875))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 875)) ;
      const enumGalgasBool test_10 = GALGAS_bool (kIsStrictSup, var_implementationString.reader_length (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 876)).objectCompare (GALGAS_uint ((uint32_t) 1000000U))).boolEnum () ;
      if (kBoolTrue == test_10) {
        const enumGalgasBool test_11 = var_useOneHugeHeader.boolEnum () ;
        if (kBoolTrue == test_11) {
          var_inclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 878)) ;
        }else if (kBoolFalse == test_11) {
          GALGAS_stringset temp_12 = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 881)) ;
          temp_12.addAssign_operation (GALGAS_string ("all-declarations-").operator_concat (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 881))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 881))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 881)) ;
          var_inclusionSet = temp_12 ;
        }
        cEnumerator_grammarMap enumerator_37708 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
        while (enumerator_37708.hasCurrentObject ()) {
          var_inclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_37708.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 884))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 884)) ;
          enumerator_37708.gotoNextObject () ;
        }
        GALGAS_string var_cppHeader = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, var_inclusionSet.reader_stringList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 888)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 887))) ;
        GALGAS_string var_fileName = GALGAS_string ("all-declarations-").operator_concat (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 890))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 890)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 890)) ;
        ioArgument_ioToolProductFileList = GALGAS_stringlist::constructor_listWithValue (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 891)).add_operation (ioArgument_ioToolProductFileList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 891)) ;
        ioArgument_ioAllProductFileSet.addAssign_operation (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 892)) ;
        {
        GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, var_fileName, var_cppHeader.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 896)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 893)) ;
        }
        ioArgument_ioAllProductFileSet.addAssign_operation (var_headerFileName.add_operation (GALGAS_string (".h"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 899))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 899)) ;
        GALGAS_stringlist temp_13 ;
        const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, var_fileIdx.objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_14) {
          temp_13 = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 902)) ;
        }else if (kBoolFalse == test_14) {
          GALGAS_stringlist temp_15 = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 902)) ;
          temp_15.addAssign_operation (GALGAS_string ("all-declarations-").add_operation (var_fileIdx.substract_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 902)).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 902)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 902))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 902)) ;
          temp_13 = temp_15 ;
        }
        GALGAS_string var_startOfHeader = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, var_headerFileName, temp_13 COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 900))) ;
        {
        GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, var_headerFileName.add_operation (GALGAS_string (".h"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 906)), var_startOfHeader.add_operation (var_headerString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 907)).add_operation (GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 907)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 904)) ;
        }
        var_fileIdx.increment_operation (inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 910)) ;
        var_implementationString = GALGAS_string::makeEmptyString () ;
        var_headerString = GALGAS_string::makeEmptyString () ;
        var_headerFileName = GALGAS_string ("all-declarations-").add_operation (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 913)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 913)) ;
        var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 914)) ;
      }
    }
    enumerator_36313.gotoNextObject () ;
  }
  const enumGalgasBool test_16 = GALGAS_bool (kIsNotEqual, var_implementationString.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_16) {
    const enumGalgasBool test_17 = var_useOneHugeHeader.boolEnum () ;
    if (kBoolTrue == test_17) {
      var_inclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 922)) ;
    }
    cEnumerator_grammarMap enumerator_39272 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
    while (enumerator_39272.hasCurrentObject ()) {
      var_inclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_39272.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 925))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 925)) ;
      enumerator_39272.gotoNextObject () ;
    }
    GALGAS_stringlist temp_18 = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 929)) ;
    temp_18.addAssign_operation (GALGAS_string ("all-declarations-").operator_concat (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 929))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 929))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 929)) ;
    GALGAS_string var_header = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, temp_18 COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 927))) ;
    GALGAS_string var_fileName = GALGAS_string ("all-declarations-").operator_concat (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 931))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 931)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 931)) ;
    ioArgument_ioToolProductFileList = GALGAS_stringlist::constructor_listWithValue (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 932)).add_operation (ioArgument_ioToolProductFileList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 932)) ;
    ioArgument_ioAllProductFileSet.addAssign_operation (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 933)) ;
    {
    GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, var_fileName, var_header.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 937)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 934)) ;
    }
    ioArgument_ioAllProductFileSet.addAssign_operation (var_headerFileName.add_operation (GALGAS_string (".h"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 940))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 940)) ;
    GALGAS_stringlist temp_19 ;
    const enumGalgasBool test_20 = GALGAS_bool (kIsEqual, var_fileIdx.objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_20) {
      temp_19 = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 943)) ;
    }else if (kBoolFalse == test_20) {
      GALGAS_stringlist temp_21 = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 943)) ;
      temp_21.addAssign_operation (GALGAS_string ("all-declarations-").add_operation (var_fileIdx.substract_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 943)).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 943)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 943))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 943)) ;
      temp_19 = temp_21 ;
    }
    GALGAS_string var_startOfHeader = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, var_headerFileName, temp_19 COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 941))) ;
    {
    GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, var_headerFileName.add_operation (GALGAS_string (".h"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 947)), var_startOfHeader.add_operation (var_headerString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 948)).add_operation (GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 948)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 945)) ;
    }
  }
  ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("all-declarations.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 952)) ;
  GALGAS_stringlist temp_22 = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 955)) ;
  temp_22.addAssign_operation (GALGAS_string ("all-declarations-").add_operation (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 955)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 955))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 955)) ;
  GALGAS_string var_startOfAllDeclarationsHeader = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, var_headerFileName, temp_22 COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 953))) ;
  {
  GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, GALGAS_string ("all-declarations.h"), var_startOfAllDeclarationsHeader.add_operation (GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 960)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 957)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'generateManyImplementationFiles'                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateManyImplementationFiles (const GALGAS_string constinArgument_inProductDirectory,
                                              const GALGAS_semanticContext constinArgument_inSemanticContext,
                                              const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                              GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                              GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool var_useOneHugeHeader = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateOneHeader.reader_value ()) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_41189 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_41189.hasCurrentObject ()) {
    GALGAS_stringset var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 975)) ;
    const enumGalgasBool test_0 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_41189.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 976)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 976)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_implementationString ;
      callCategoryMethod_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_41189.current_mDeclaration (HERE).ptr (), var_inclusionSet, var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 977)) ;
      const enumGalgasBool test_1 = callCategoryReader_hasCppHeaderFile ((const cPtr_semanticDeclarationForGeneration *) enumerator_41189.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 978)).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_inclusionSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_41189.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 979))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 979)) ;
      }
      const enumGalgasBool test_2 = var_useOneHugeHeader.boolEnum () ;
      if (kBoolTrue == test_2) {
        var_inclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 982)) ;
        cEnumerator_grammarMap enumerator_41663 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
        while (enumerator_41663.hasCurrentObject ()) {
          var_inclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_41663.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 984))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 984)) ;
          enumerator_41663.gotoNextObject () ;
        }
      }
      GALGAS_string var_header = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, var_inclusionSet.reader_stringList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 988)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 987))) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_41189.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 990))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 990)) ;
      ioArgument_ioAllProductFileSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_41189.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 991)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 991))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 991)) ;
      {
      GALGAS_string::class_method_generateFile (constinArgument_inProductDirectory, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_41189.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 994)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 994)), var_header.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 995)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 992)) ;
      }
      ioArgument_ioToolProductFileList.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_41189.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 997)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 997))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 997)) ;
    }
    enumerator_41189.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap_2D_element::GALGAS_headerCompositionMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mInclusion (),
mAttribute_mHeaderString () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap_2D_element::~ GALGAS_headerCompositionMap_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap_2D_element::GALGAS_headerCompositionMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                const GALGAS_stringset & inOperand1,
                                                                                const GALGAS_string & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mInclusion (inOperand1),
mAttribute_mHeaderString (inOperand2) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap_2D_element GALGAS_headerCompositionMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_headerCompositionMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                 GALGAS_stringset::constructor_emptySet (HERE),
                                                 GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap_2D_element GALGAS_headerCompositionMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                const GALGAS_stringset & inOperand1,
                                                                                                const GALGAS_string & inOperand2 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_headerCompositionMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_headerCompositionMap_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_headerCompositionMap_2D_element::objectCompare (const GALGAS_headerCompositionMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInclusion.objectCompare (inOperand.mAttribute_mInclusion) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHeaderString.objectCompare (inOperand.mAttribute_mHeaderString) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_headerCompositionMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mInclusion.isValid () && mAttribute_mHeaderString.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerCompositionMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mInclusion.drop () ;
  mAttribute_mHeaderString.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerCompositionMap_2D_element::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "<struct @headerCompositionMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInclusion.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHeaderString.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_headerCompositionMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_headerCompositionMap_2D_element::reader_mInclusion (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInclusion ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_headerCompositionMap_2D_element::reader_mHeaderString (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHeaderString ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @headerCompositionMap-element type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_headerCompositionMap_2D_element ("headerCompositionMap-element",
                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_headerCompositionMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_headerCompositionMap_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_headerCompositionMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_headerCompositionMap_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerCompositionMap_2D_element GALGAS_headerCompositionMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_headerCompositionMap_2D_element result ;
  const GALGAS_headerCompositionMap_2D_element * p = (const GALGAS_headerCompositionMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_headerCompositionMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("headerCompositionMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap_2D_element::GALGAS_headerRepartitionMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mHeaderFileName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap_2D_element::~ GALGAS_headerRepartitionMap_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap_2D_element::GALGAS_headerRepartitionMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                const GALGAS_string & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mHeaderFileName (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap_2D_element GALGAS_headerRepartitionMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_headerRepartitionMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                 GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap_2D_element GALGAS_headerRepartitionMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                const GALGAS_string & inOperand1 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_headerRepartitionMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_headerRepartitionMap_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_headerRepartitionMap_2D_element::objectCompare (const GALGAS_headerRepartitionMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHeaderFileName.objectCompare (inOperand.mAttribute_mHeaderFileName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_headerRepartitionMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mHeaderFileName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerRepartitionMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mHeaderFileName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_headerRepartitionMap_2D_element::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "<struct @headerRepartitionMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHeaderFileName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_headerRepartitionMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_headerRepartitionMap_2D_element::reader_mHeaderFileName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHeaderFileName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @headerRepartitionMap-element type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_headerRepartitionMap_2D_element ("headerRepartitionMap-element",
                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_headerRepartitionMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_headerRepartitionMap_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_headerRepartitionMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_headerRepartitionMap_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_headerRepartitionMap_2D_element GALGAS_headerRepartitionMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_headerRepartitionMap_2D_element result ;
  const GALGAS_headerRepartitionMap_2D_element * p = (const GALGAS_headerRepartitionMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_headerRepartitionMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("headerRepartitionMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


