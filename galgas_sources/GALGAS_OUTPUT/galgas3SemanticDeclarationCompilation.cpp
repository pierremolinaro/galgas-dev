//-----------------------------------------------------------------------------*
//                                                                             *
//              File 'galgas3SemanticDeclarationCompilation.cpp'               *
//                         Generated by version 2.6.0                          *
//                        july 8th, 2014, at 15h18'10"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas3SemanticDeclarationCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "galgas3SemanticDeclarationCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                    Routine 'compileSemanticDeclarations'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSemanticDeclarations (const GALGAS_string constinArgument_inProjectSourceFile,
                                          const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                          const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                          const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                          const GALGAS_galgas_33_LexiqueComponentListAST constinArgument_inLexiqueComponentList,
                                          const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  inCompiler->printMessage (GALGAS_string ("** Building context\n") COMMA_SOURCE_FILE_AT_LINE (33)) ;
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = constinArgument_inSemanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler COMMA_SOURCE_FILE_AT_LINE (36)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildGalgas_33_SemanticContext (constinArgument_inProjectSourceFile, var_semanticDeclarationListWithPredefinedTypes, constinArgument_inEndOfProjectSourceFile, var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (38)) ;
  }
  {
  routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (constinArgument_inOptionComponentList, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler COMMA_SOURCE_FILE_AT_LINE (45)) ;
  }
  cEnumerator_galgas_33_LexiqueComponentListAST enumerator_2593 (constinArgument_inLexiqueComponentList, kEnumeration_up) ;
  while (enumerator_2593.hasCurrentObject ()) {
    {
    var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_2593.current_mLexiqueComponentName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (51)) ;
    }
    enumerator_2593.gotoNextObject () ;
  }
  {
  routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (constinArgument_inGrammarComponentList, var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (54)) ;
  }
  inCompiler->printMessage (GALGAS_string ("** Semantic analysis\n") COMMA_SOURCE_FILE_AT_LINE (59)) ;
  GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
  {
  routine_performSemanticAnalysis (constinArgument_inSemanticDeclarationList, var_semanticContext, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (60)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//        Routine 'buildGalgas3GrammarComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                                    GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_galgas_33_GrammarComponentListAST enumerator_3574 (constinArgument_inGrammarComponentList, kEnumeration_up) ;
  while (enumerator_3574.hasCurrentObject ()) {
    GALGAS_grammarLabelMap var_grammarLabelMap = GALGAS_grammarLabelMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (78)) ;
    cEnumerator_nonTerminalLabelListAST enumerator_3696 (enumerator_3574.current_mStartSymbolLabelList (HERE), kEnumeration_up) ;
    while (enumerator_3696.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (81)) ;
      cEnumerator_formalParameterListAST enumerator_3825 (enumerator_3696.current_mFormalArgumentList (HERE), kEnumeration_up) ;
      while (enumerator_3825.hasCurrentObject ()) {
        var_formalArgumentList.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_3825.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (84)), enumerator_3825.current_mFormalArgumentPassingMode (HERE), enumerator_3825.current_mFormalArgumentName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (83)) ;
        enumerator_3825.gotoNextObject () ;
      }
      {
      var_grammarLabelMap.modifier_insertKey (enumerator_3696.current_mLabelName (HERE), var_formalArgumentList, inCompiler COMMA_SOURCE_FILE_AT_LINE (89)) ;
      }
      enumerator_3696.gotoNextObject () ;
    }
    {
    ioArgument_ioSemanticContext.mAttribute_mGrammarMap.modifier_insertGrammar (enumerator_3574.current_mGrammarComponentName (HERE), var_grammarLabelMap, enumerator_3574.current_mHasIndexing (HERE).mAttribute_bool, enumerator_3574.current_mHasTranslateFeature (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (95)) ;
    }
    enumerator_3574.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                    Routine 'buildGalgas3SemanticContext'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_SemanticContext (const GALGAS_string constinArgument_inProjectSourceFile,
                                             const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                             const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                             GALGAS_semanticContext & outArgument_outSemanticContext,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSemanticDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_5194 (constinArgument_inSemanticDeclarationList, kEnumeration_up) ;
  while (enumerator_5194.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_5194.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE_AT_LINE (119)) ;
    enumerator_5194.gotoNextObject () ;
  }
  GALGAS_semanticTypePrecedenceGraph var_semanticTypePrecedenceGraph = GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (SOURCE_FILE_AT_LINE (125)) ;
  GALGAS_categoryMethodMapForBuildingContext var_categoryMethodMapForBuildingContext = GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (126)) ;
  GALGAS_categoryReaderMapForBuildingContext var_categoryReaderMapForBuildingContext = GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (127)) ;
  GALGAS_categoryModifierMapForBuildingContext var_categoryModifierMapForBuildingContext = GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (128)) ;
  GALGAS_semanticDeclarationListAST var_categoryOverrideDefinitionList = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (129)) ;
  cEnumerator_semanticDeclarationListAST enumerator_5927 (var_semanticDeclarationList, kEnumeration_up) ;
  while (enumerator_5927.hasCurrentObject ()) {
    callCategoryMethod_enterDeclarationInGraph ((const cPtr_semanticDeclarationAST *) enumerator_5927.current_mSemanticDeclaration (HERE).ptr (), var_semanticTypePrecedenceGraph, var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, var_categoryOverrideDefinitionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (131)) ;
    enumerator_5927.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_semanticTypePrecedenceGraph.reader_undefinedNodeCount (SOURCE_FILE_AT_LINE (139)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_lstringlist enumerator_6347 (var_semanticTypePrecedenceGraph.reader_undefinedNodeReferenceList (SOURCE_FILE_AT_LINE (140)), kEnumeration_up) ;
    while (enumerator_6347.hasCurrentObject ()) {
      GALGAS_location location_1 (enumerator_6347.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_6347.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (141)) COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (GALGAS_string ("' type is not defined") COMMA_SOURCE_FILE_AT_LINE (141)) COMMA_SOURCE_FILE_AT_LINE (141)) ;
      enumerator_6347.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, GALGAS_string ("semantic analysis not performed, due to undefined type error(s)") COMMA_SOURCE_FILE_AT_LINE (143)) ;
    outArgument_outSemanticContext.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticDeclarationListAST var_sortedSemanticDeclarationListAST ;
    GALGAS_semanticDeclarationListAST var_unsortedSemanticDeclarationListAST ;
    GALGAS_lstringlist var_unsortedNodeKeyList ;
    GALGAS_lstringlist joker_6692_0 ; // Joker input parameter
    var_semanticTypePrecedenceGraph.method_topologicalSort (var_sortedSemanticDeclarationListAST, joker_6692_0, var_unsortedSemanticDeclarationListAST, var_unsortedNodeKeyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (145)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (151)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("semantic analysis not performed, ").operator_concat (var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (152)).reader_string (SOURCE_FILE_AT_LINE (152)) COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (GALGAS_string (" declarations are involved in circular definition:") COMMA_SOURCE_FILE_AT_LINE (152)) ;
      cEnumerator_semanticDeclarationListAST enumerator_7087 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_7087.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (callCategoryReader_keyRepresentation ((const cPtr_semanticDeclarationAST *) enumerator_7087.current_mSemanticDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (154)) COMMA_SOURCE_FILE_AT_LINE (154)) COMMA_SOURCE_FILE_AT_LINE (154)) ;
        enumerator_7087.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, var_s COMMA_SOURCE_FILE_AT_LINE (156)) ;
      outArgument_outSemanticContext.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      var_sortedSemanticDeclarationListAST.dotAssign_operation (var_categoryOverrideDefinitionList COMMA_SOURCE_FILE_AT_LINE (159)) ;
      outArgument_outSemanticContext = GALGAS_semanticContext::constructor_new (constinArgument_inProjectSourceFile, GALGAS_unifiedTypeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (163)), GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (164)), GALGAS_functionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (165)), GALGAS_filewrapperMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (166)), GALGAS_grammarMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (167)), GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (168)), GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (169)), GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (170)) COMMA_SOURCE_FILE_AT_LINE (161)) ;
      cEnumerator_semanticDeclarationListAST enumerator_7909 (var_sortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_7909.hasCurrentObject ()) {
        callCategoryMethod_enterInSemanticContext ((const cPtr_semanticDeclarationAST *) enumerator_7909.current_mSemanticDeclaration (HERE).ptr (), var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (174)) ;
        enumerator_7909.gotoNextObject () ;
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//         Routine 'buildGalgas3OptionComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                                                   GALGAS_optionComponentMapForSemanticAnalysis & ioArgument_ioOptionComponentMapForSemanticAnalysis,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_galgas_33_OptionComponentListAST enumerator_8797 (constinArgument_inOptionComponentList, kEnumeration_up) ;
  while (enumerator_8797.hasCurrentObject ()) {
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (196)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (197)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (198)) ;
    GALGAS_stringset var_optionNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (199)) ;
    cEnumerator_commandLineOptionListAST enumerator_9045 (enumerator_8797.current_mOptions (HERE), kEnumeration_up) ;
    while (enumerator_9045.hasCurrentObject ()) {
      const enumGalgasBool test_0 = var_optionNameSet.reader_hasKey (enumerator_9045.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE_AT_LINE (201)) COMMA_SOURCE_FILE_AT_LINE (201)).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_location location_1 (enumerator_9045.current_mOptionInternalName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").add_operation (enumerator_9045.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE_AT_LINE (202)), inCompiler COMMA_SOURCE_FILE_AT_LINE (202)).add_operation (GALGAS_string ("' command line option has been already declared"), inCompiler COMMA_SOURCE_FILE_AT_LINE (202)) COMMA_SOURCE_FILE_AT_LINE (202)) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_9045.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (203)).objectCompare (GALGAS_string ("bool"))).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          var_boolOptionMap.modifier_insertKey (enumerator_9045.current_mOptionInternalName (HERE), enumerator_9045.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE_AT_LINE (206)), enumerator_9045.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE_AT_LINE (207)), enumerator_9045.current_mOptionComment (HERE).reader_string (SOURCE_FILE_AT_LINE (208)), GALGAS_string ("false"), inCompiler COMMA_SOURCE_FILE_AT_LINE (204)) ;
          }
          const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_9045.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_noDefaultValue (SOURCE_FILE_AT_LINE (211)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (enumerator_9045.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("an @bool option cannot have a default value (default value is allways false)") COMMA_SOURCE_FILE_AT_LINE (212)) ;
          }
        }else if (kBoolFalse == test_2) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_9045.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (214)).objectCompare (GALGAS_string ("uint"))).boolEnum () ;
          if (kBoolTrue == test_5) {
            {
            //--- @ifExpressionForGeneration
            GALGAS_string temp_6 ;
            const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, enumerator_9045.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE_AT_LINE (220)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
            if (kBoolTrue == test_7) {
              temp_6 = GALGAS_string ("0") ;
            }else if (kBoolFalse == test_7) {
              temp_6 = enumerator_9045.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE_AT_LINE (220)) ;
            }
            var_uintOptionMap.modifier_insertKey (enumerator_9045.current_mOptionInternalName (HERE), enumerator_9045.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE_AT_LINE (217)), enumerator_9045.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE_AT_LINE (218)), enumerator_9045.current_mOptionComment (HERE).reader_string (SOURCE_FILE_AT_LINE (219)), temp_6, inCompiler COMMA_SOURCE_FILE_AT_LINE (215)) ;
            }
            const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_9045.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_stringDefaultValue (SOURCE_FILE_AT_LINE (222)))).boolEnum () ;
            if (kBoolTrue == test_8) {
              GALGAS_location location_9 (enumerator_9045.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_9, GALGAS_string ("an @uint option default value cannot be an @string value") COMMA_SOURCE_FILE_AT_LINE (223)) ;
            }
          }else if (kBoolFalse == test_5) {
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, enumerator_9045.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (225)).objectCompare (GALGAS_string ("string"))).boolEnum () ;
            if (kBoolTrue == test_10) {
              {
              var_stringOptionMap.modifier_insertKey (enumerator_9045.current_mOptionInternalName (HERE), enumerator_9045.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE_AT_LINE (228)), enumerator_9045.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE_AT_LINE (229)), enumerator_9045.current_mOptionComment (HERE).reader_string (SOURCE_FILE_AT_LINE (230)), enumerator_9045.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE_AT_LINE (231)), inCompiler COMMA_SOURCE_FILE_AT_LINE (226)) ;
              }
              const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_9045.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_unsignedDefaultValue (SOURCE_FILE_AT_LINE (233)))).boolEnum () ;
              if (kBoolTrue == test_11) {
                GALGAS_location location_12 (enumerator_9045.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_12, GALGAS_string ("an @string option default value cannot be an @uint value") COMMA_SOURCE_FILE_AT_LINE (234)) ;
              }
            }else if (kBoolFalse == test_10) {
              GALGAS_location location_13 (enumerator_9045.current_mOptionTypeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_13, GALGAS_string ("only the @bool, @uint or @string types are allowed here") COMMA_SOURCE_FILE_AT_LINE (237)) ;
            }
          }
        }
      }
      var_optionNameSet.addAssign_operation (enumerator_9045.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE_AT_LINE (239)) COMMA_SOURCE_FILE_AT_LINE (239)) ;
      enumerator_9045.gotoNextObject () ;
    }
    {
    ioArgument_ioOptionComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_8797.current_mOptionComponentName (HERE), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (241)) ;
    }
    enumerator_8797.gotoNextObject () ;
  }
  const enumGalgasBool test_14 = ioArgument_ioOptionComponentMapForSemanticAnalysis.reader_hasKey (GALGAS_string ("galgas_builtin_options") COMMA_SOURCE_FILE_AT_LINE (249)).operator_not (SOURCE_FILE_AT_LINE (249)).boolEnum () ;
  if (kBoolTrue == test_14) {
    GALGAS__32_stringlist var_optionNameList = GALGAS_application::constructor_boolOptionNameList (SOURCE_FILE_AT_LINE (250)) ;
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (251)) ;
    cEnumerator__32_stringlist enumerator_11447 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_11447.hasCurrentObject ()) {
      {
      var_boolOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_11447.current_mValue_31_ (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (254)), GALGAS_application::constructor_boolOptionInvocationLetter (enumerator_11447.current_mValue_30_ (HERE), enumerator_11447.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (255)), GALGAS_application::constructor_boolOptionInvocationString (enumerator_11447.current_mValue_30_ (HERE), enumerator_11447.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (256)), GALGAS_application::constructor_boolOptionCommentString (enumerator_11447.current_mValue_30_ (HERE), enumerator_11447.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (257)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (253)) ;
      }
      enumerator_11447.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_uintOptionNameList (SOURCE_FILE_AT_LINE (262)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (263)) ;
    cEnumerator__32_stringlist enumerator_11923 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_11923.hasCurrentObject ()) {
      {
      var_uintOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_11923.current_mValue_31_ (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (266)), GALGAS_application::constructor_uintOptionInvocationLetter (enumerator_11923.current_mValue_30_ (HERE), enumerator_11923.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (267)), GALGAS_application::constructor_uintOptionInvocationString (enumerator_11923.current_mValue_30_ (HERE), enumerator_11923.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (268)), GALGAS_application::constructor_uintOptionCommentString (enumerator_11923.current_mValue_30_ (HERE), enumerator_11923.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (269)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (265)) ;
      }
      enumerator_11923.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_stringOptionNameList (SOURCE_FILE_AT_LINE (274)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (275)) ;
    cEnumerator__32_stringlist enumerator_12403 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_12403.hasCurrentObject ()) {
      {
      var_stringOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_12403.current_mValue_31_ (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (278)), GALGAS_application::constructor_stringOptionInvocationLetter (enumerator_12403.current_mValue_30_ (HERE), enumerator_12403.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (279)), GALGAS_application::constructor_stringOptionInvocationString (enumerator_12403.current_mValue_30_ (HERE), enumerator_12403.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (280)), GALGAS_application::constructor_stringOptionCommentString (enumerator_12403.current_mValue_30_ (HERE), enumerator_12403.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (281)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (277)) ;
      }
      enumerator_12403.gotoNextObject () ;
    }
    {
    ioArgument_ioOptionComponentMapForSemanticAnalysis.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("galgas_builtin_options"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (287)), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (286)) ;
    }
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


