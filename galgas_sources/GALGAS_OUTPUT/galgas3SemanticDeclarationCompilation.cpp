//-----------------------------------------------------------------------------*
//                                                                             *
//              File 'galgas3SemanticDeclarationCompilation.cpp'               *
//                         Generated by version 2.7.0                          *
//                       july 16th, 2014, at 12h35'32"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "galgas3SemanticDeclarationCompilation.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//                Routine 'compileSemanticDeclarationsGalgas3'                 *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSemanticDeclarationsGalgas_33_ (const GALGAS_string constinArgument_inProjectSourceFile,
                                                    const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                                    const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                                    const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                                    const GALGAS_galgas_33_LexiqueComponentListAST constinArgument_inLexiqueComponentList,
                                                    const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                    GALGAS_semanticContext & outArgument_outSemanticContext,
                                                    GALGAS_semanticDeclarationSortedListForGeneration & outArgument_outSemanticDeclarationSortedListForGeneration,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  outArgument_outSemanticDeclarationSortedListForGeneration.drop () ; // Release 'out' argument
  inCompiler->printMessage (GALGAS_string ("*** Building context\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 43)) ;
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = constinArgument_inSemanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 46)) ;
  }
  GALGAS_semanticDeclarationListAST var_sortedSemanticDeclarationListAST ;
  {
  routine_buildGalgas_33_SemanticContext (constinArgument_inProjectSourceFile, var_semanticDeclarationListWithPredefinedTypes, constinArgument_inEndOfProjectSourceFile, outArgument_outSemanticContext, var_sortedSemanticDeclarationListAST, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 48)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->printMessage (GALGAS_string ("*** Semantic analysis\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 57)) ;
  }
  GALGAS_stringlist var_implementationFileIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 60)) ;
  GALGAS_optionComponentMapForSemanticAnalysis var_optionComponentMapForSemanticAnalysis ;
  {
  routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (constinArgument_inOptionComponentList, var_optionComponentMapForSemanticAnalysis, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 61)) ;
  }
  outArgument_outSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis = var_optionComponentMapForSemanticAnalysis ;
  cEnumerator_optionComponentMapForSemanticAnalysis enumerator_3269 (var_optionComponentMapForSemanticAnalysis, kEnumeration_up) ;
  while (enumerator_3269.hasCurrentObject ()) {
    const enumGalgasBool test_1 = enumerator_3269.current_mIsPredefined (HERE).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 67)).boolEnum () ;
    if (kBoolTrue == test_1) {
      var_implementationFileIncludeList.addAssign_operation (GALGAS_string ("option-").add_operation (enumerator_3269.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 68))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 68)) ;
    }
    enumerator_3269.gotoNextObject () ;
  }
  cEnumerator_galgas_33_LexiqueComponentListAST enumerator_3492 (constinArgument_inLexiqueComponentList, kEnumeration_up) ;
  while (enumerator_3492.hasCurrentObject ()) {
    GALGAS_terminalMap var_terminalMap ;
    {
    routine_buildTerminalMap (enumerator_3492.current (HERE), var_terminalMap, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 73)) ;
    }
    {
    outArgument_outSemanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_3492.current (HERE).mAttribute_mLexiqueComponentName, var_terminalMap, enumerator_3492.current (HERE).mAttribute_mIndexingListAST, enumerator_3492.current (HERE).mAttribute_mIndexingDirectory, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 74)) ;
    }
    enumerator_3492.gotoNextObject () ;
  }
  {
  routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (constinArgument_inGrammarComponentList, outArgument_outSemanticContext, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 82)) ;
  }
  cEnumerator_lstringlist enumerator_4085 (outArgument_outSemanticContext.mAttribute_mTypeMap.reader_unsolvedProxyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 88)), kEnumeration_up) ;
  while (enumerator_4085.hasCurrentObject ()) {
    GALGAS_location location_2 (enumerator_4085.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_4085.current_mValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 89))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 89)).operator_concat (GALGAS_string ("' type is undefined")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 89))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 89)) ;
    enumerator_4085.gotoNextObject () ;
  }
  outArgument_outSemanticDeclarationSortedListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 92)) ;
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 93)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 94)) ;
    cEnumerator_semanticDeclarationListAST enumerator_4456 (var_sortedSemanticDeclarationListAST, kEnumeration_up) ;
    while (enumerator_4456.hasCurrentObject ()) {
      callCategoryMethod_semanticAnalysis ((const cPtr_semanticDeclarationAST *) enumerator_4456.current_mSemanticDeclaration (HERE).ptr (), outArgument_outSemanticContext, var_predefinedTypes, outArgument_outSemanticDeclarationSortedListForGeneration, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 96)) ;
      enumerator_4456.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 104)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_4) {
    {
    routine_performGalgas_33_ProjectGlobalCheckings (outArgument_outSemanticContext, constinArgument_inSemanticDeclarationList, constinArgument_inProjectSourceFile, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 105)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//        Routine 'buildGalgas3GrammarComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                                    GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_galgas_33_GrammarComponentListAST enumerator_5230 (constinArgument_inGrammarComponentList, kEnumeration_up) ;
  while (enumerator_5230.hasCurrentObject ()) {
    GALGAS_grammarLabelMap var_grammarLabelMap = GALGAS_grammarLabelMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 122)) ;
    cEnumerator_nonTerminalLabelListAST enumerator_5352 (enumerator_5230.current_mStartSymbolLabelList (HERE), kEnumeration_up) ;
    while (enumerator_5352.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 125)) ;
      cEnumerator_formalParameterListAST enumerator_5481 (enumerator_5352.current_mFormalArgumentList (HERE), kEnumeration_up) ;
      while (enumerator_5481.hasCurrentObject ()) {
        var_formalArgumentList.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_5481.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 128)), enumerator_5481.current_mFormalArgumentPassingMode (HERE), enumerator_5481.current_mFormalArgumentName (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 127)) ;
        enumerator_5481.gotoNextObject () ;
      }
      {
      var_grammarLabelMap.modifier_insertKey (enumerator_5352.current_mLabelName (HERE), var_formalArgumentList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 133)) ;
      }
      enumerator_5352.gotoNextObject () ;
    }
    {
    ioArgument_ioSemanticContext.mAttribute_mGrammarMap.modifier_insertGrammar (enumerator_5230.current_mGrammarComponentName (HERE), var_grammarLabelMap, enumerator_5230.current_mHasIndexing (HERE).mAttribute_bool, enumerator_5230.current_mHasTranslateFeature (HERE), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 139)) ;
    }
    enumerator_5230.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                    Routine 'buildGalgas3SemanticContext'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_SemanticContext (const GALGAS_string constinArgument_inProjectSourceFile,
                                             const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                             const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                             GALGAS_semanticContext & outArgument_outSemanticContext,
                                             GALGAS_semanticDeclarationListAST & outArgument_outSortedSemanticDeclarationListAST,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release 'out' argument
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSemanticDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_6917 (constinArgument_inSemanticDeclarationList, kEnumeration_up) ;
  while (enumerator_6917.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_6917.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 164)) ;
    enumerator_6917.gotoNextObject () ;
  }
  GALGAS_semanticTypePrecedenceGraph var_semanticTypePrecedenceGraph = GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 170)) ;
  GALGAS_categoryMethodMapForBuildingContext var_categoryMethodMapForBuildingContext = GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 171)) ;
  GALGAS_categoryReaderMapForBuildingContext var_categoryReaderMapForBuildingContext = GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 172)) ;
  GALGAS_categoryModifierMapForBuildingContext var_categoryModifierMapForBuildingContext = GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 173)) ;
  GALGAS_semanticDeclarationListAST var_categoryOverrideDefinitionList = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 174)) ;
  cEnumerator_semanticDeclarationListAST enumerator_7650 (var_semanticDeclarationList, kEnumeration_up) ;
  while (enumerator_7650.hasCurrentObject ()) {
    callCategoryMethod_enterDeclarationInGraph ((const cPtr_semanticDeclarationAST *) enumerator_7650.current_mSemanticDeclaration (HERE).ptr (), var_semanticTypePrecedenceGraph, var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, var_categoryOverrideDefinitionList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 176)) ;
    enumerator_7650.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_semanticTypePrecedenceGraph.reader_undefinedNodeCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 184)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_lstringlist enumerator_8070 (var_semanticTypePrecedenceGraph.reader_undefinedNodeReferenceList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 185)), kEnumeration_up) ;
    while (enumerator_8070.hasCurrentObject ()) {
      GALGAS_location location_1 (enumerator_8070.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_8070.current_mValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 186))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 186)).operator_concat (GALGAS_string ("' type is not defined")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 186))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 186)) ;
      enumerator_8070.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, GALGAS_string ("semantic analysis not performed, due to undefined type error(s)")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 188)) ;
    outArgument_outSemanticContext.drop () ; // Release error dropped variable
    outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticDeclarationListAST var_unsortedSemanticDeclarationListAST ;
    GALGAS_lstringlist var_unsortedNodeKeyList ;
    GALGAS_lstringlist joker_8427_0 ; // Joker input parameter
    var_semanticTypePrecedenceGraph.method_topologicalSort (outArgument_outSortedSemanticDeclarationListAST, joker_8427_0, var_unsortedSemanticDeclarationListAST, var_unsortedNodeKeyList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 190)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 196)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("semantic analysis not performed, ").operator_concat (var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 197)).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 197))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 197)).operator_concat (GALGAS_string (" declarations are involved in circular definition:")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 197)) ;
      cEnumerator_semanticDeclarationListAST enumerator_8822 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_8822.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (callCategoryReader_keyRepresentation ((const cPtr_semanticDeclarationAST *) enumerator_8822.current_mSemanticDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 199))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 199))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 199)) ;
        enumerator_8822.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, var_s  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 201)) ;
      outArgument_outSemanticContext.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      outArgument_outSortedSemanticDeclarationListAST.dotAssign_operation (var_categoryOverrideDefinitionList  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 204)) ;
      outArgument_outSemanticContext = GALGAS_semanticContext::constructor_new (constinArgument_inProjectSourceFile, GALGAS_unifiedTypeMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 208)), GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 209)), GALGAS_functionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 210)), GALGAS_filewrapperMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 211)), GALGAS_grammarMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 212)), GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 213)), GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 214))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 206)) ;
      cEnumerator_semanticDeclarationListAST enumerator_9600 (outArgument_outSortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_9600.hasCurrentObject ()) {
        callCategoryMethod_enterInSemanticContext ((const cPtr_semanticDeclarationAST *) enumerator_9600.current_mSemanticDeclaration (HERE).ptr (), var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 218)) ;
        enumerator_9600.gotoNextObject () ;
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//         Routine 'buildGalgas3OptionComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                                                   GALGAS_optionComponentMapForSemanticAnalysis & outArgument_outOptionComponentMapForSemanticAnalysis,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOptionComponentMapForSemanticAnalysis.drop () ; // Release 'out' argument
  outArgument_outOptionComponentMapForSemanticAnalysis = GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 239)) ;
  cEnumerator_galgas_33_OptionComponentListAST enumerator_10586 (constinArgument_inOptionComponentList, kEnumeration_up) ;
  while (enumerator_10586.hasCurrentObject ()) {
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 241)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 242)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 243)) ;
    GALGAS_stringset var_optionNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 244)) ;
    cEnumerator_commandLineOptionListAST enumerator_10834 (enumerator_10586.current_mOptions (HERE), kEnumeration_up) ;
    while (enumerator_10834.hasCurrentObject ()) {
      const enumGalgasBool test_0 = var_optionNameSet.reader_hasKey (enumerator_10834.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 246)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 246)).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_location location_1 (enumerator_10834.current_mOptionInternalName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").add_operation (enumerator_10834.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 247)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 247)).add_operation (GALGAS_string ("' command line option has been already declared"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 247))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 247)) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_10834.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 248)).objectCompare (GALGAS_string ("bool"))).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          var_boolOptionMap.modifier_insertKey (enumerator_10834.current_mOptionInternalName (HERE), enumerator_10834.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 251)), enumerator_10834.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 252)), enumerator_10834.current_mOptionComment (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 253)), GALGAS_string ("false"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 249)) ;
          }
          const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_10834.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_noDefaultValue (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 256)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (enumerator_10834.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("an @bool option cannot have a default value (default value is allways false)")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 257)) ;
          }
        }else if (kBoolFalse == test_2) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_10834.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 259)).objectCompare (GALGAS_string ("uint"))).boolEnum () ;
          if (kBoolTrue == test_5) {
            {
            GALGAS_string temp_6 ;
            const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, enumerator_10834.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 265)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
            if (kBoolTrue == test_7) {
              temp_6 = GALGAS_string ("0") ;
            }else if (kBoolFalse == test_7) {
              temp_6 = enumerator_10834.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 265)) ;
            }
            var_uintOptionMap.modifier_insertKey (enumerator_10834.current_mOptionInternalName (HERE), enumerator_10834.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 262)), enumerator_10834.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 263)), enumerator_10834.current_mOptionComment (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 264)), temp_6, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 260)) ;
            }
            const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_10834.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_stringDefaultValue (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 267)))).boolEnum () ;
            if (kBoolTrue == test_8) {
              GALGAS_location location_9 (enumerator_10834.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_9, GALGAS_string ("an @uint option default value cannot be an @string value")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 268)) ;
            }
          }else if (kBoolFalse == test_5) {
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, enumerator_10834.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 270)).objectCompare (GALGAS_string ("string"))).boolEnum () ;
            if (kBoolTrue == test_10) {
              {
              var_stringOptionMap.modifier_insertKey (enumerator_10834.current_mOptionInternalName (HERE), enumerator_10834.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 273)), enumerator_10834.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 274)), enumerator_10834.current_mOptionComment (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 275)), enumerator_10834.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 276)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 271)) ;
              }
              const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_10834.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_unsignedDefaultValue (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 278)))).boolEnum () ;
              if (kBoolTrue == test_11) {
                GALGAS_location location_12 (enumerator_10834.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_12, GALGAS_string ("an @string option default value cannot be an @uint value")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 279)) ;
              }
            }else if (kBoolFalse == test_10) {
              GALGAS_location location_13 (enumerator_10834.current_mOptionTypeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_13, GALGAS_string ("only the @bool, @uint or @string types are allowed here")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 282)) ;
            }
          }
        }
      }
      var_optionNameSet.addAssign_operation (enumerator_10834.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 284))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 284)) ;
      enumerator_10834.gotoNextObject () ;
    }
    {
    outArgument_outOptionComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_10586.current_mOptionComponentName (HERE), GALGAS_bool (false), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 286)) ;
    }
    enumerator_10586.gotoNextObject () ;
  }
  const enumGalgasBool test_14 = outArgument_outOptionComponentMapForSemanticAnalysis.reader_hasKey (GALGAS_string ("galgas_builtin_options") COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 295)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 295)).boolEnum () ;
  if (kBoolTrue == test_14) {
    GALGAS__32_stringlist var_optionNameList = GALGAS_application::constructor_boolOptionNameList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 296)) ;
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 297)) ;
    cEnumerator__32_stringlist enumerator_13271 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_13271.hasCurrentObject ()) {
      {
      var_boolOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_13271.current_mValue_31_ (HERE), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 300)), GALGAS_application::constructor_boolOptionInvocationLetter (enumerator_13271.current_mValue_30_ (HERE), enumerator_13271.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 301)), GALGAS_application::constructor_boolOptionInvocationString (enumerator_13271.current_mValue_30_ (HERE), enumerator_13271.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 302)), GALGAS_application::constructor_boolOptionCommentString (enumerator_13271.current_mValue_30_ (HERE), enumerator_13271.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 303)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 299)) ;
      }
      enumerator_13271.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_uintOptionNameList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 308)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 309)) ;
    cEnumerator__32_stringlist enumerator_13747 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_13747.hasCurrentObject ()) {
      {
      var_uintOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_13747.current_mValue_31_ (HERE), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 312)), GALGAS_application::constructor_uintOptionInvocationLetter (enumerator_13747.current_mValue_30_ (HERE), enumerator_13747.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 313)), GALGAS_application::constructor_uintOptionInvocationString (enumerator_13747.current_mValue_30_ (HERE), enumerator_13747.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 314)), GALGAS_application::constructor_uintOptionCommentString (enumerator_13747.current_mValue_30_ (HERE), enumerator_13747.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 315)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 311)) ;
      }
      enumerator_13747.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_stringOptionNameList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 320)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 321)) ;
    cEnumerator__32_stringlist enumerator_14227 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_14227.hasCurrentObject ()) {
      {
      var_stringOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_14227.current_mValue_31_ (HERE), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 324)), GALGAS_application::constructor_stringOptionInvocationLetter (enumerator_14227.current_mValue_30_ (HERE), enumerator_14227.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 325)), GALGAS_application::constructor_stringOptionInvocationString (enumerator_14227.current_mValue_30_ (HERE), enumerator_14227.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 326)), GALGAS_application::constructor_stringOptionCommentString (enumerator_14227.current_mValue_30_ (HERE), enumerator_14227.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 327)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 323)) ;
      }
      enumerator_14227.gotoNextObject () ;
    }
    {
    outArgument_outOptionComponentMapForSemanticAnalysis.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("galgas_builtin_options"), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 333)), GALGAS_bool (true), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 332)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                Routine 'generateSemanticDeclarationsGalgas3'                *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_generateSemanticDeclarationsGalgas_33_ (const GALGAS_string constinArgument_inProductDirectory,
                                                     const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                     const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                                     GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                     GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                                     C_Compiler * inCompiler
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 353)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateOneHeader.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_1) {
      {
      routine_generateOneBigHeader (constinArgument_inProductDirectory, constinArgument_inSemanticDeclarationSortedListForGeneration, ioArgument_ioAllProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 355)) ;
      }
    }else if (kBoolFalse == test_1) {
      {
      routine_generateManyHeaders (constinArgument_inProductDirectory, constinArgument_inSemanticDeclarationSortedListForGeneration, ioArgument_ioAllProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 361)) ;
      }
    }
    const enumGalgasBool test_2 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateManyFiles.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_2) {
      {
      routine_generateManyImplementationFiles (constinArgument_inProductDirectory, constinArgument_inSemanticContext, constinArgument_inSemanticDeclarationSortedListForGeneration, ioArgument_ioToolProductFileList, ioArgument_ioAllProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 368)) ;
      }
    }else if (kBoolFalse == test_2) {
      {
      routine_generateFewImplementationFiles (constinArgument_inProductDirectory, constinArgument_inSemanticContext, constinArgument_inSemanticDeclarationSortedListForGeneration, ioArgument_ioToolProductFileList, ioArgument_ioAllProductFileSet, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 376)) ;
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'generateManyHeaders'                        *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_generateManyHeaders (const GALGAS_string constinArgument_inProductDirectory,
                                  const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                  GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringlist var_headerInclusionList_31_ = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 395)) ;
  GALGAS_stringlist var_headerInclusionList_32_ = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 396)) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_16676 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_16676.hasCurrentObject ()) {
    const enumGalgasBool test_0 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 398)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 398)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_stringset var_inclusionSet_31_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 399)) ;
      GALGAS_string var_headerString_31_ ;
      callCategoryMethod_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), var_inclusionSet_31_, var_headerString_31_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 400)) ;
      GALGAS_stringset var_inclusionSet_32_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 401)) ;
      GALGAS_string var_headerString_32_ ;
      callCategoryMethod_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), GALGAS_bool (true), constinArgument_inProductDirectory, var_inclusionSet_32_, var_headerString_32_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 402)) ;
      if (callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 404)).isValid ()) {
        switch (callCategoryReader_headerKind ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 404)).enumValue ()) {
        case GALGAS_headerKind::kNotBuilt:
          break ;
        case GALGAS_headerKind::kEnum_noHeader: {
          const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_headerString_31_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_1) {
            GALGAS_location location_2 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 407)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_2, GALGAS_string ("'noHeader' setting for the '").operator_concat (enumerator_16676.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 407)).operator_concat (GALGAS_string ("' declaration, and 'headerString1' string is not empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 407))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 407)) ;
          }
          const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_headerString_32_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 410)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("'noHeader' setting for the '").operator_concat (enumerator_16676.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 410)).operator_concat (GALGAS_string ("' declaration, and 'headerString2' string is not empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 410))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 410)) ;
          }
          } break ;
        case GALGAS_headerKind::kEnum_oneHeader: {
          const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_headerString_31_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_5) {
            GALGAS_location location_6 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 414)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_6, GALGAS_string ("'oneHeader' setting for the '").operator_concat (enumerator_16676.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 414)).operator_concat (GALGAS_string ("' declaration, and 'headerString1' string is empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 414))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 414)) ;
          }
          const enumGalgasBool test_7 = GALGAS_bool (kIsNotEqual, var_headerString_32_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_7) {
            GALGAS_location location_8 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 417)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticWarning (location_8, GALGAS_string ("'oneHeader' setting for the '").operator_concat (enumerator_16676.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 417)).operator_concat (GALGAS_string ("' declaration, and 'headerString2' string is not empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 417))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 417)) ;
          }
          } break ;
        case GALGAS_headerKind::kEnum_twoHeaders: {
          const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, var_headerString_31_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_9) {
            GALGAS_location location_10 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 421)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticWarning (location_10, GALGAS_string ("'twoHeaders' setting for the '").operator_concat (enumerator_16676.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 421)).operator_concat (GALGAS_string ("' declaration, and 'headerString1' string is empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 421))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 421)) ;
          }
          const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, var_headerString_32_.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
          if (kBoolTrue == test_11) {
            GALGAS_location location_12 (GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 424)).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticWarning (location_12, GALGAS_string ("'twoHeaders' setting for the '").operator_concat (enumerator_16676.current_mMessage (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 424)).operator_concat (GALGAS_string ("' declaration, and 'headerString2' string is empty")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 424))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 424)) ;
          }
          } break ;
        }
      }
      GALGAS_string var_headerString = GALGAS_string ("#ifndef ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 428)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 428))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 428)).operator_concat (GALGAS_string ("_1_DEFINED\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 428)) ;
      var_headerString.dotAssign_operation (GALGAS_string ("#define ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 429)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 429))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 429)).operator_concat (GALGAS_string ("_1_DEFINED\n"
        "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 429))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 429)) ;
      var_headerString.dotAssign_operation (GALGAS_string ("//-----------------------------------------------------------------------------*\n"
        "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 430)) ;
      callCategoryMethod_addHeaderInclusions ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), var_headerString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 431)) ;
      cEnumerator_stringset enumerator_18741 (var_inclusionSet_31_, kEnumeration_up) ;
      while (enumerator_18741.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (GALGAS_string ("#include \"").operator_concat (enumerator_18741.current_key (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 433)).operator_concat (GALGAS_string (".h\"\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 433))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 433)) ;
        enumerator_18741.gotoNextObject () ;
      }
      var_headerString.dotAssign_operation (GALGAS_string ("#include \"galgas2/predefined-types.h\"\n"
        "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 435)) ;
      var_headerString.dotAssign_operation (GALGAS_string ("//-----------------------------------------------------------------------------*\n"
        "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 436)) ;
      var_headerString.dotAssign_operation (var_headerString_31_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 437)) ;
      var_headerString.dotAssign_operation (GALGAS_string ("#endif\n"
        "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 438)) ;
      ioArgument_ioAllProductFileSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 439)).operator_concat (GALGAS_string ("-1.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 439))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 439)) ;
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inProductDirectory, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 442)).operator_concat (GALGAS_string ("-1.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 442)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_headerString, GALGAS_string ("\n"
        "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 440)) ;
      }
      var_headerInclusionList_31_.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 449)).operator_concat (GALGAS_string ("-1")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 449))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 449)) ;
      var_headerString = GALGAS_string ("#ifndef ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 451)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 451))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 451)).operator_concat (GALGAS_string ("_DEFINED\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 451)) ;
      var_headerString.dotAssign_operation (GALGAS_string ("#define ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 452)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 452))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 452)).operator_concat (GALGAS_string ("_DEFINED\n"
        "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 452))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 452)) ;
      var_headerString.dotAssign_operation (GALGAS_string ("//-----------------------------------------------------------------------------*\n"
        "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 453)) ;
      cEnumerator_stringset enumerator_19894 (var_inclusionSet_32_, kEnumeration_up) ;
      while (enumerator_19894.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (GALGAS_string ("#include \"").operator_concat (enumerator_19894.current_key (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 455)).operator_concat (GALGAS_string (".h\"\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 455))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 455)) ;
        enumerator_19894.gotoNextObject () ;
      }
      var_headerString.dotAssign_operation (GALGAS_string ("#include \"").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 457))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 457)).operator_concat (GALGAS_string ("-1.h\"\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 457))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 457)) ;
      callCategoryMethod_addHeaderInclusions ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), var_headerString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 458)) ;
      var_headerString.dotAssign_operation (GALGAS_string ("\n"
        "//-----------------------------------------------------------------------------*\n"
        "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 459)) ;
      var_headerString.dotAssign_operation (var_headerString_32_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 460)) ;
      var_headerString.dotAssign_operation (GALGAS_string ("#endif\n"
        "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 461)) ;
      ioArgument_ioAllProductFileSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 462)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 462))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 462)) ;
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inProductDirectory, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 465)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 465)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_headerString, GALGAS_string ("\n"
        "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 463)) ;
      }
      var_headerInclusionList_32_.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_16676.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 472))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 472)) ;
    }
    enumerator_16676.gotoNextObject () ;
  }
  GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, GALGAS_string ("all-declarations"), var_headerInclusionList_31_.add_operation (var_headerInclusionList_32_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 563)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 561))) ;
  ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("all-declarations.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 565)) ;
  {
  GALGAS_string::class_method_generateFileWithPattern (constinArgument_inProductDirectory, GALGAS_string ("all-declarations.h"), GALGAS_string ("//"), GALGAS_string ("\n"
    "\n"), var_headerString, GALGAS_string ("\n"
    "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 566)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                       Routine 'generateOneBigHeader'                        *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_generateOneBigHeader (const GALGAS_string constinArgument_inProductDirectory,
                                   const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                   GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, GALGAS_string ("all-declarations"), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 586)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 584))) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_26759 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_26759.hasCurrentObject ()) {
    const enumGalgasBool test_0 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_26759.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 590)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 590)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_stringset var_inclusionSet_31_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 591)) ;
      GALGAS_string var_headerString_31_ ;
      callCategoryMethod_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_26759.current_mDeclaration (HERE).ptr (), var_inclusionSet_31_, var_headerString_31_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 592)) ;
      var_headerString.dotAssign_operation (var_headerString_31_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 593)) ;
    }
    enumerator_26759.gotoNextObject () ;
  }
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_27080 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_27080.hasCurrentObject ()) {
    const enumGalgasBool test_1 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_27080.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 598)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 598)).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_stringset var_inclusionSet_32_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 599)) ;
      GALGAS_string var_headerString_32_ ;
      callCategoryMethod_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_27080.current_mDeclaration (HERE).ptr (), GALGAS_bool (true), constinArgument_inProductDirectory, var_inclusionSet_32_, var_headerString_32_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 600)) ;
      var_headerString.dotAssign_operation (var_headerString_32_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 601)) ;
    }
    enumerator_27080.gotoNextObject () ;
  }
  ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("all-declarations.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 604)) ;
  {
  GALGAS_string::class_method_generateFileWithPattern (constinArgument_inProductDirectory, GALGAS_string ("all-declarations.h"), GALGAS_string ("//"), GALGAS_string ("\n"
    "\n"), var_headerString, GALGAS_string ("\n"
    "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 605)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'generateFewImplementationFiles'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_generateFewImplementationFiles (const GALGAS_string constinArgument_inProductDirectory,
                                             const GALGAS_semanticContext constinArgument_inSemanticContext,
                                             const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                             GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                             GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool var_useOneHugeHeader = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateOneHeader.reader_value ()) ;
  GALGAS_uint var_n = GALGAS_uint ((uint32_t) 0U) ;
  GALGAS_uint var_fileIdx = GALGAS_uint ((uint32_t) 0U) ;
  GALGAS_string var_implementationString = GALGAS_string::makeEmptyString () ;
  GALGAS_stringset var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 631)) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_28320 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_28320.hasCurrentObject ()) {
    const enumGalgasBool test_0 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_28320.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 633)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 633)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_code ;
      callCategoryMethod_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_28320.current_mDeclaration (HERE).ptr (), var_inclusionSet, var_code, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 634)) ;
      var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 642)) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_28320.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 643))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 643)) ;
      var_n.increment_operation (inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 644)) ;
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_n.objectCompare (GALGAS_uint ((uint32_t) 100U))).boolEnum () ;
      if (kBoolTrue == test_1) {
        const enumGalgasBool test_2 = var_useOneHugeHeader.boolEnum () ;
        if (kBoolTrue == test_2) {
          var_inclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 647)) ;
        }
        cEnumerator_optionComponentMapForSemanticAnalysis enumerator_29067 (constinArgument_inSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, kEnumeration_up) ;
        while (enumerator_29067.hasCurrentObject ()) {
          const enumGalgasBool test_3 = enumerator_29067.current_mIsPredefined (HERE).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 650)).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_inclusionSet.addAssign_operation (GALGAS_string ("option-").add_operation (enumerator_29067.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 651))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 651)) ;
          }
          enumerator_29067.gotoNextObject () ;
        }
        cEnumerator_grammarMap enumerator_29247 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
        while (enumerator_29247.hasCurrentObject ()) {
          var_inclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_29247.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 655))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 655)) ;
          enumerator_29247.gotoNextObject () ;
        }
        GALGAS_string var_header = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, var_inclusionSet.reader_stringList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 658)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 657))) ;
        GALGAS_string var_fileName = GALGAS_string ("all-declarations-").operator_concat (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 660))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 660)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 660)) ;
        ioArgument_ioToolProductFileList = GALGAS_stringlist::constructor_listWithValue (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 661)).add_operation (ioArgument_ioToolProductFileList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 661)) ;
        ioArgument_ioAllProductFileSet.addAssign_operation (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 662)) ;
        {
        GALGAS_string::class_method_generateFileWithPattern (constinArgument_inProductDirectory, var_fileName, GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_header.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 668)), GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 663)) ;
        }
        var_n = GALGAS_uint ((uint32_t) 0U) ;
        var_fileIdx.increment_operation (inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 673)) ;
        var_implementationString = GALGAS_string::makeEmptyString () ;
        var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 675)) ;
      }
    }
    enumerator_28320.gotoNextObject () ;
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_implementationString.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    const enumGalgasBool test_5 = var_useOneHugeHeader.boolEnum () ;
    if (kBoolTrue == test_5) {
      var_inclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 683)) ;
    }
    cEnumerator_optionComponentMapForSemanticAnalysis enumerator_30421 (constinArgument_inSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, kEnumeration_up) ;
    while (enumerator_30421.hasCurrentObject ()) {
      const enumGalgasBool test_6 = enumerator_30421.current_mIsPredefined (HERE).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 686)).boolEnum () ;
      if (kBoolTrue == test_6) {
        var_inclusionSet.addAssign_operation (GALGAS_string ("option-").add_operation (enumerator_30421.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 687))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 687)) ;
      }
      enumerator_30421.gotoNextObject () ;
    }
    cEnumerator_grammarMap enumerator_30581 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
    while (enumerator_30581.hasCurrentObject ()) {
      var_inclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_30581.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 691))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 691)) ;
      enumerator_30581.gotoNextObject () ;
    }
    GALGAS_string var_header = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, var_inclusionSet.reader_stringList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 694)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 693))) ;
    GALGAS_string var_fileName = GALGAS_string ("all-declarations-").operator_concat (var_fileIdx.reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 696))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 696)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 696)) ;
    ioArgument_ioToolProductFileList = GALGAS_stringlist::constructor_listWithValue (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 697)).add_operation (ioArgument_ioToolProductFileList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 697)) ;
    ioArgument_ioAllProductFileSet.addAssign_operation (var_fileName  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 698)) ;
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inProductDirectory, var_fileName, GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_header.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 704)), GALGAS_string ("\n"
      "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 699)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'generateManyImplementationFiles'                  *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_generateManyImplementationFiles (const GALGAS_string constinArgument_inProductDirectory,
                                              const GALGAS_semanticContext constinArgument_inSemanticContext,
                                              const GALGAS_semanticDeclarationSortedListForGeneration constinArgument_inSemanticDeclarationSortedListForGeneration,
                                              GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                              GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool var_useOneHugeHeader = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateOneHeader.reader_value ()) ;
  cEnumerator_semanticDeclarationSortedListForGeneration enumerator_31712 (constinArgument_inSemanticDeclarationSortedListForGeneration, kEnumeration_up) ;
  while (enumerator_31712.hasCurrentObject ()) {
    GALGAS_stringset var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 722)) ;
    const enumGalgasBool test_0 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_31712.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 723)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 723)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_implementationString ;
      callCategoryMethod_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_31712.current_mDeclaration (HERE).ptr (), var_inclusionSet, var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 724)) ;
      const enumGalgasBool test_1 = callCategoryReader_hasCppHeaderFile ((const cPtr_semanticDeclarationForGeneration *) enumerator_31712.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 725)).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_inclusionSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_31712.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 726))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 726)) ;
      }
      const enumGalgasBool test_2 = var_useOneHugeHeader.boolEnum () ;
      if (kBoolTrue == test_2) {
        var_inclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 729)) ;
        cEnumerator_optionComponentMapForSemanticAnalysis enumerator_32212 (constinArgument_inSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, kEnumeration_up) ;
        while (enumerator_32212.hasCurrentObject ()) {
          const enumGalgasBool test_3 = enumerator_32212.current_mIsPredefined (HERE).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 731)).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_inclusionSet.addAssign_operation (GALGAS_string ("option-").add_operation (enumerator_32212.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 732))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 732)) ;
          }
          enumerator_32212.gotoNextObject () ;
        }
        cEnumerator_grammarMap enumerator_32392 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
        while (enumerator_32392.hasCurrentObject ()) {
          var_inclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_32392.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 736))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 736)) ;
          enumerator_32392.gotoNextObject () ;
        }
      }
      GALGAS_string var_header = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, var_inclusionSet.reader_stringList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 740)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 739))) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_31712.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 742))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 742)) ;
      ioArgument_ioAllProductFileSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_31712.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 743)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 743))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 743)) ;
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inProductDirectory, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_31712.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 746)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 746)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_header.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 749)), GALGAS_string ("\n"
        "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 744)) ;
      }
      ioArgument_ioToolProductFileList.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_31712.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 753)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 753))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 753)) ;
    }
    enumerator_31712.gotoNextObject () ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


