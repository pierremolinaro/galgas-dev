//-----------------------------------------------------------------------------*
//                                                                             *
//              File 'galgas3SemanticDeclarationCompilation.cpp'               *
//                         Generated by version 2.6.0                          *
//                       july 15th, 2014, at 11h51'12"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas3SemanticDeclarationCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//                Routine 'compileSemanticDeclarationsGalgas3'                 *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSemanticDeclarationsGalgas_33_ (const GALGAS_string constinArgument_inProjectSourceFile,
                                                    const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                                    const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                                    const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                                    const GALGAS_galgas_33_LexiqueComponentListAST constinArgument_inLexiqueComponentList,
                                                    const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                    GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                    GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                                    GALGAS_semanticContext & outArgument_outSemanticContext,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  inCompiler->printMessage (GALGAS_string ("*** Building context\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 38)) ;
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = constinArgument_inSemanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 41)) ;
  }
  GALGAS_semanticDeclarationListAST var_sortedSemanticDeclarationListAST ;
  {
  routine_buildGalgas_33_SemanticContext (constinArgument_inProjectSourceFile, var_semanticDeclarationListWithPredefinedTypes, constinArgument_inEndOfProjectSourceFile, outArgument_outSemanticContext, var_sortedSemanticDeclarationListAST, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 43)) ;
  }
  GALGAS_stringlist var_implementationFileIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 51)) ;
  GALGAS_optionComponentMapForSemanticAnalysis var_optionComponentMapForSemanticAnalysis ;
  {
  routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (constinArgument_inOptionComponentList, var_optionComponentMapForSemanticAnalysis, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 52)) ;
  }
  outArgument_outSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis = var_optionComponentMapForSemanticAnalysis ;
  cEnumerator_optionComponentMapForSemanticAnalysis enumerator_3005 (var_optionComponentMapForSemanticAnalysis, kEnumeration_up) ;
  while (enumerator_3005.hasCurrentObject ()) {
    const enumGalgasBool test_0 = enumerator_3005.current_mIsPredefined (HERE).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 58)).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_implementationFileIncludeList.addAssign_operation (GALGAS_string ("option-").add_operation (enumerator_3005.current_lkey (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 59))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 59)) ;
    }
    enumerator_3005.gotoNextObject () ;
  }
  cEnumerator_galgas_33_LexiqueComponentListAST enumerator_3228 (constinArgument_inLexiqueComponentList, kEnumeration_up) ;
  while (enumerator_3228.hasCurrentObject ()) {
    GALGAS_terminalMap var_terminalMap ;
    {
    routine_buildTerminalMap (enumerator_3228.current (HERE), var_terminalMap, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 64)) ;
    }
    {
    outArgument_outSemanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_3228.current (HERE).mAttribute_mLexiqueComponentName, var_terminalMap, enumerator_3228.current (HERE).mAttribute_mIndexingListAST, enumerator_3228.current (HERE).mAttribute_mIndexingDirectory, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 65)) ;
    }
    enumerator_3228.gotoNextObject () ;
  }
  {
  routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (constinArgument_inGrammarComponentList, outArgument_outSemanticContext, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 73)) ;
  }
  inCompiler->printMessage (GALGAS_string ("*** Semantic analysis\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 79)) ;
  cEnumerator_lstringlist enumerator_3862 (outArgument_outSemanticContext.mAttribute_mTypeMap.reader_unsolvedProxyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 81)), kEnumeration_up) ;
  while (enumerator_3862.hasCurrentObject ()) {
    GALGAS_location location_1 (enumerator_3862.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_3862.current_mValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 82))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 82)).operator_concat (GALGAS_string ("' type is undefined")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 82))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 82)) ;
    enumerator_3862.gotoNextObject () ;
  }
  GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 85)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 86)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 87)) ;
    cEnumerator_semanticDeclarationListAST enumerator_4229 (var_sortedSemanticDeclarationListAST, kEnumeration_up) ;
    while (enumerator_4229.hasCurrentObject ()) {
      callCategoryMethod_semanticAnalysis ((const cPtr_semanticDeclarationAST *) enumerator_4229.current_mSemanticDeclaration (HERE).ptr (), outArgument_outSemanticContext, var_predefinedTypes, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 89)) ;
      enumerator_4229.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 97)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    const enumGalgasBool test_4 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_4) {
      inCompiler->printMessage (GALGAS_string ("*** Perform global checkings\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 99)) ;
    }
    {
    routine_performGalgas_33_ProjectGlobalCheckings (outArgument_outSemanticContext, constinArgument_inSemanticDeclarationList, constinArgument_inProjectSourceFile, inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 101)) ;
    }
  }
  inCompiler->printMessage (GALGAS_string ("*** Generating files\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 108)) ;
  GALGAS_string var_productDirectory = constinArgument_inProjectSourceFile.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 109)).operator_concat (GALGAS_string ("/build/output")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 109)) ;
  const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 111)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_5) {
    GALGAS_stringlist var_headerInclusionList_31_ = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 113)) ;
    GALGAS_stringlist var_headerInclusionList_32_ = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 114)) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_5177 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_5177.hasCurrentObject ()) {
      const enumGalgasBool test_6 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 116)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 116)).boolEnum () ;
      if (kBoolTrue == test_6) {
        GALGAS_string var_headerString_31_ = callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 117)) ;
        GALGAS_string var_headerString_32_ = callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), var_productDirectory, GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 118)) ;
        GALGAS_string var_headerString = GALGAS_string ("#ifndef ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 120)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 120))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 120)).operator_concat (GALGAS_string ("_1_DEFINED\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 120)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#define ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 121)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 121))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 121)).operator_concat (GALGAS_string ("_1_DEFINED\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 121))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 121)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("//-----------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 122)) ;
        callCategoryMethod_addHeaderInclusions ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), var_headerString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 123)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#include \"galgas2/predefined-types.h\"\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 124)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("//-----------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 125)) ;
        var_headerString.dotAssign_operation (var_headerString_31_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 126)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#endif\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 127)) ;
        ioArgument_ioAllProductFileSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 128)).operator_concat (GALGAS_string ("-1.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 128))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 128)) ;
        {
        GALGAS_string::class_method_generateFileWithPattern (var_productDirectory, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 131)).operator_concat (GALGAS_string ("-1.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 131)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_headerString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 129)) ;
        }
        var_headerInclusionList_31_.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 138)).operator_concat (GALGAS_string ("-1")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 138))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 138)) ;
        var_headerString = GALGAS_string ("#ifndef ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 140)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 140))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 140)).operator_concat (GALGAS_string ("_DEFINED\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 140)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#define ").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 141)).reader_identifierRepresentation (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 141))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 141)).operator_concat (GALGAS_string ("_DEFINED\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 141))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 141)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("//-----------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 142)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#include \"").operator_concat (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 143))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 143)).operator_concat (GALGAS_string ("-1.h\"\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 143))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 143)) ;
        callCategoryMethod_addHeaderInclusions ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), var_headerString, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 144)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("\n"
          "//-----------------------------------------------------------------------------*\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 145)) ;
        var_headerString.dotAssign_operation (var_headerString_32_  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 146)) ;
        var_headerString.dotAssign_operation (GALGAS_string ("#endif\n"
          "\n")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 147)) ;
        ioArgument_ioAllProductFileSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 148)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 148))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 148)) ;
        {
        GALGAS_string::class_method_generateFileWithPattern (var_productDirectory, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 151)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 151)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_headerString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 149)) ;
        }
        var_headerInclusionList_32_.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_5177.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 158))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 158)) ;
      }
      enumerator_5177.gotoNextObject () ;
    }
    GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, GALGAS_string ("all-declarations"), var_headerInclusionList_31_.add_operation (var_headerInclusionList_32_, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 249)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 250)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 247))) ;
    ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("all-declarations.h")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 252)) ;
    {
    GALGAS_string::class_method_generateFileWithPattern (var_productDirectory, GALGAS_string ("all-declarations.h"), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_headerString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 253)) ;
    }
  }
  const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 264)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_7) {
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_13436 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_13436.hasCurrentObject ()) {
      const enumGalgasBool test_8 = callCategoryReader_isPredefined ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 267)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 267)).boolEnum () ;
      if (kBoolTrue == test_8) {
        GALGAS_stringlist var_implementationFileIncludes = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 268)) ;
        const enumGalgasBool test_9 = callCategoryReader_hasCppHeaderFile ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 269)).boolEnum () ;
        if (kBoolTrue == test_9) {
          var_implementationFileIncludes.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 270))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 270)) ;
        }
        callCategoryMethod_addInclusionForCPPFile ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), var_implementationFileIncludes, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 272)) ;
        GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 274)), var_implementationFileIncludes COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 273))) ;
        var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 277))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 277)) ;
        var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 278))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 278)) ;
        ioArgument_ioAllProductFileSet.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 279)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 279))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 279)) ;
        {
        GALGAS_string::class_method_generateFileWithPattern (var_productDirectory, callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 282)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 282)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_implementationString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 280)) ;
        }
        ioArgument_ioToolProductFileList.addAssign_operation (callCategoryReader_implementationCppFileName ((const cPtr_semanticDeclarationForGeneration *) enumerator_13436.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 289)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 289))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 289)) ;
      }
      enumerator_13436.gotoNextObject () ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//        Routine 'buildGalgas3GrammarComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                                    GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_galgas_33_GrammarComponentListAST enumerator_15911 (constinArgument_inGrammarComponentList, kEnumeration_up) ;
  while (enumerator_15911.hasCurrentObject ()) {
    GALGAS_grammarLabelMap var_grammarLabelMap = GALGAS_grammarLabelMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 329)) ;
    cEnumerator_nonTerminalLabelListAST enumerator_16033 (enumerator_15911.current_mStartSymbolLabelList (HERE), kEnumeration_up) ;
    while (enumerator_16033.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 332)) ;
      cEnumerator_formalParameterListAST enumerator_16162 (enumerator_16033.current_mFormalArgumentList (HERE), kEnumeration_up) ;
      while (enumerator_16162.hasCurrentObject ()) {
        var_formalArgumentList.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_16162.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 335)), enumerator_16162.current_mFormalArgumentPassingMode (HERE), enumerator_16162.current_mFormalArgumentName (HERE).mAttribute_string  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 334)) ;
        enumerator_16162.gotoNextObject () ;
      }
      {
      var_grammarLabelMap.modifier_insertKey (enumerator_16033.current_mLabelName (HERE), var_formalArgumentList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 340)) ;
      }
      enumerator_16033.gotoNextObject () ;
    }
    {
    ioArgument_ioSemanticContext.mAttribute_mGrammarMap.modifier_insertGrammar (enumerator_15911.current_mGrammarComponentName (HERE), var_grammarLabelMap, enumerator_15911.current_mHasIndexing (HERE).mAttribute_bool, enumerator_15911.current_mHasTranslateFeature (HERE), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 346)) ;
    }
    enumerator_15911.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                    Routine 'buildGalgas3SemanticContext'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_SemanticContext (const GALGAS_string constinArgument_inProjectSourceFile,
                                             const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                             const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                             GALGAS_semanticContext & outArgument_outSemanticContext,
                                             GALGAS_semanticDeclarationListAST & outArgument_outSortedSemanticDeclarationListAST,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release 'out' argument
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSemanticDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_17598 (constinArgument_inSemanticDeclarationList, kEnumeration_up) ;
  while (enumerator_17598.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_17598.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 371)) ;
    enumerator_17598.gotoNextObject () ;
  }
  GALGAS_semanticTypePrecedenceGraph var_semanticTypePrecedenceGraph = GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 377)) ;
  GALGAS_categoryMethodMapForBuildingContext var_categoryMethodMapForBuildingContext = GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 378)) ;
  GALGAS_categoryReaderMapForBuildingContext var_categoryReaderMapForBuildingContext = GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 379)) ;
  GALGAS_categoryModifierMapForBuildingContext var_categoryModifierMapForBuildingContext = GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 380)) ;
  GALGAS_semanticDeclarationListAST var_categoryOverrideDefinitionList = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 381)) ;
  cEnumerator_semanticDeclarationListAST enumerator_18331 (var_semanticDeclarationList, kEnumeration_up) ;
  while (enumerator_18331.hasCurrentObject ()) {
    callCategoryMethod_enterDeclarationInGraph ((const cPtr_semanticDeclarationAST *) enumerator_18331.current_mSemanticDeclaration (HERE).ptr (), var_semanticTypePrecedenceGraph, var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, var_categoryOverrideDefinitionList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 383)) ;
    enumerator_18331.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_semanticTypePrecedenceGraph.reader_undefinedNodeCount (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 391)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_lstringlist enumerator_18751 (var_semanticTypePrecedenceGraph.reader_undefinedNodeReferenceList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 392)), kEnumeration_up) ;
    while (enumerator_18751.hasCurrentObject ()) {
      GALGAS_location location_1 (enumerator_18751.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_18751.current_mValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 393))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 393)).operator_concat (GALGAS_string ("' type is not defined")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 393))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 393)) ;
      enumerator_18751.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, GALGAS_string ("semantic analysis not performed, due to undefined type error(s)")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 395)) ;
    outArgument_outSemanticContext.drop () ; // Release error dropped variable
    outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticDeclarationListAST var_unsortedSemanticDeclarationListAST ;
    GALGAS_lstringlist var_unsortedNodeKeyList ;
    GALGAS_lstringlist joker_19108_0 ; // Joker input parameter
    var_semanticTypePrecedenceGraph.method_topologicalSort (outArgument_outSortedSemanticDeclarationListAST, joker_19108_0, var_unsortedSemanticDeclarationListAST, var_unsortedNodeKeyList, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 397)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 403)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("semantic analysis not performed, ").operator_concat (var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 404)).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 404))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 404)).operator_concat (GALGAS_string (" declarations are involved in circular definition:")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 404)) ;
      cEnumerator_semanticDeclarationListAST enumerator_19503 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_19503.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (callCategoryReader_keyRepresentation ((const cPtr_semanticDeclarationAST *) enumerator_19503.current_mSemanticDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 406))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 406))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 406)) ;
        enumerator_19503.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, var_s  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 408)) ;
      outArgument_outSemanticContext.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      outArgument_outSortedSemanticDeclarationListAST.dotAssign_operation (var_categoryOverrideDefinitionList  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 411)) ;
      outArgument_outSemanticContext = GALGAS_semanticContext::constructor_new (constinArgument_inProjectSourceFile, GALGAS_unifiedTypeMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 415)), GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 416)), GALGAS_functionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 417)), GALGAS_filewrapperMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 418)), GALGAS_grammarMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 419)), GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 420)), GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 421)), GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 422))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 413)) ;
      cEnumerator_semanticDeclarationListAST enumerator_20331 (outArgument_outSortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_20331.hasCurrentObject ()) {
        callCategoryMethod_enterInSemanticContext ((const cPtr_semanticDeclarationAST *) enumerator_20331.current_mSemanticDeclaration (HERE).ptr (), var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 426)) ;
        enumerator_20331.gotoNextObject () ;
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//         Routine 'buildGalgas3OptionComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                                                   GALGAS_optionComponentMapForSemanticAnalysis & outArgument_outOptionComponentMapForSemanticAnalysis,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOptionComponentMapForSemanticAnalysis.drop () ; // Release 'out' argument
  outArgument_outOptionComponentMapForSemanticAnalysis = GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 447)) ;
  cEnumerator_galgas_33_OptionComponentListAST enumerator_21317 (constinArgument_inOptionComponentList, kEnumeration_up) ;
  while (enumerator_21317.hasCurrentObject ()) {
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 449)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 450)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 451)) ;
    GALGAS_stringset var_optionNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 452)) ;
    cEnumerator_commandLineOptionListAST enumerator_21565 (enumerator_21317.current_mOptions (HERE), kEnumeration_up) ;
    while (enumerator_21565.hasCurrentObject ()) {
      const enumGalgasBool test_0 = var_optionNameSet.reader_hasKey (enumerator_21565.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 454)) COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 454)).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_location location_1 (enumerator_21565.current_mOptionInternalName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").add_operation (enumerator_21565.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 455)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 455)).add_operation (GALGAS_string ("' command line option has been already declared"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 455))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 455)) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_21565.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 456)).objectCompare (GALGAS_string ("bool"))).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          var_boolOptionMap.modifier_insertKey (enumerator_21565.current_mOptionInternalName (HERE), enumerator_21565.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 459)), enumerator_21565.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 460)), enumerator_21565.current_mOptionComment (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 461)), GALGAS_string ("false"), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 457)) ;
          }
          const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_21565.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_noDefaultValue (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 464)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (enumerator_21565.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("an @bool option cannot have a default value (default value is allways false)")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 465)) ;
          }
        }else if (kBoolFalse == test_2) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_21565.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 467)).objectCompare (GALGAS_string ("uint"))).boolEnum () ;
          if (kBoolTrue == test_5) {
            {
            GALGAS_string temp_6 ;
            const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, enumerator_21565.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 473)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
            if (kBoolTrue == test_7) {
              temp_6 = GALGAS_string ("0") ;
            }else if (kBoolFalse == test_7) {
              temp_6 = enumerator_21565.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 473)) ;
            }
            var_uintOptionMap.modifier_insertKey (enumerator_21565.current_mOptionInternalName (HERE), enumerator_21565.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 470)), enumerator_21565.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 471)), enumerator_21565.current_mOptionComment (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 472)), temp_6, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 468)) ;
            }
            const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_21565.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_stringDefaultValue (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 475)))).boolEnum () ;
            if (kBoolTrue == test_8) {
              GALGAS_location location_9 (enumerator_21565.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_9, GALGAS_string ("an @uint option default value cannot be an @string value")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 476)) ;
            }
          }else if (kBoolFalse == test_5) {
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, enumerator_21565.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 478)).objectCompare (GALGAS_string ("string"))).boolEnum () ;
            if (kBoolTrue == test_10) {
              {
              var_stringOptionMap.modifier_insertKey (enumerator_21565.current_mOptionInternalName (HERE), enumerator_21565.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 481)), enumerator_21565.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 482)), enumerator_21565.current_mOptionComment (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 483)), enumerator_21565.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 484)), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 479)) ;
              }
              const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_21565.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_unsignedDefaultValue (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 486)))).boolEnum () ;
              if (kBoolTrue == test_11) {
                GALGAS_location location_12 (enumerator_21565.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_12, GALGAS_string ("an @string option default value cannot be an @uint value")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 487)) ;
              }
            }else if (kBoolFalse == test_10) {
              GALGAS_location location_13 (enumerator_21565.current_mOptionTypeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_13, GALGAS_string ("only the @bool, @uint or @string types are allowed here")  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 490)) ;
            }
          }
        }
      }
      var_optionNameSet.addAssign_operation (enumerator_21565.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 492))  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 492)) ;
      enumerator_21565.gotoNextObject () ;
    }
    {
    outArgument_outOptionComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_21317.current_mOptionComponentName (HERE), GALGAS_bool (false), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 494)) ;
    }
    enumerator_21317.gotoNextObject () ;
  }
  const enumGalgasBool test_14 = outArgument_outOptionComponentMapForSemanticAnalysis.reader_hasKey (GALGAS_string ("galgas_builtin_options") COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 503)).operator_not (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 503)).boolEnum () ;
  if (kBoolTrue == test_14) {
    GALGAS__32_stringlist var_optionNameList = GALGAS_application::constructor_boolOptionNameList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 504)) ;
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 505)) ;
    cEnumerator__32_stringlist enumerator_24002 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_24002.hasCurrentObject ()) {
      {
      var_boolOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_24002.current_mValue_31_ (HERE), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 508)), GALGAS_application::constructor_boolOptionInvocationLetter (enumerator_24002.current_mValue_30_ (HERE), enumerator_24002.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 509)), GALGAS_application::constructor_boolOptionInvocationString (enumerator_24002.current_mValue_30_ (HERE), enumerator_24002.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 510)), GALGAS_application::constructor_boolOptionCommentString (enumerator_24002.current_mValue_30_ (HERE), enumerator_24002.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 511)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 507)) ;
      }
      enumerator_24002.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_uintOptionNameList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 516)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 517)) ;
    cEnumerator__32_stringlist enumerator_24478 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_24478.hasCurrentObject ()) {
      {
      var_uintOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_24478.current_mValue_31_ (HERE), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 520)), GALGAS_application::constructor_uintOptionInvocationLetter (enumerator_24478.current_mValue_30_ (HERE), enumerator_24478.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 521)), GALGAS_application::constructor_uintOptionInvocationString (enumerator_24478.current_mValue_30_ (HERE), enumerator_24478.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 522)), GALGAS_application::constructor_uintOptionCommentString (enumerator_24478.current_mValue_30_ (HERE), enumerator_24478.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 523)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 519)) ;
      }
      enumerator_24478.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_stringOptionNameList (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 528)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 529)) ;
    cEnumerator__32_stringlist enumerator_24958 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_24958.hasCurrentObject ()) {
      {
      var_stringOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_24958.current_mValue_31_ (HERE), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 532)), GALGAS_application::constructor_stringOptionInvocationLetter (enumerator_24958.current_mValue_30_ (HERE), enumerator_24958.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 533)), GALGAS_application::constructor_stringOptionInvocationString (enumerator_24958.current_mValue_30_ (HERE), enumerator_24958.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 534)), GALGAS_application::constructor_stringOptionCommentString (enumerator_24958.current_mValue_30_ (HERE), enumerator_24958.current_mValue_31_ (HERE)  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 535)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 531)) ;
      }
      enumerator_24958.gotoNextObject () ;
    }
    {
    outArgument_outOptionComponentMapForSemanticAnalysis.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("galgas_builtin_options"), inCompiler->here ()  COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 541)), GALGAS_bool (true), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE ("galgas3SemanticDeclarationCompilation.gSemantics", 540)) ;
    }
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


