//-----------------------------------------------------------------------------*
//                                                                             *
//              File 'galgas3SemanticDeclarationCompilation.cpp'               *
//                         Generated by version 2.6.0                          *
//                        july 8th, 2014, at 21h14'32"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas3SemanticDeclarationCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "galgas3SemanticDeclarationCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                    Routine 'compileSemanticDeclarations'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSemanticDeclarations (const GALGAS_string constinArgument_inProjectSourceFile,
                                          const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                          const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                          const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                          const GALGAS_galgas_33_LexiqueComponentListAST constinArgument_inLexiqueComponentList,
                                          const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                          GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  inCompiler->printMessage (GALGAS_string ("*** Building context\n") COMMA_SOURCE_FILE_AT_LINE (36)) ;
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = constinArgument_inSemanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler COMMA_SOURCE_FILE_AT_LINE (39)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  GALGAS_semanticDeclarationListAST var_sortedSemanticDeclarationListAST ;
  {
  routine_buildGalgas_33_SemanticContext (constinArgument_inProjectSourceFile, var_semanticDeclarationListWithPredefinedTypes, constinArgument_inEndOfProjectSourceFile, var_semanticContext, var_sortedSemanticDeclarationListAST, inCompiler COMMA_SOURCE_FILE_AT_LINE (41)) ;
  }
  {
  routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (constinArgument_inOptionComponentList, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler COMMA_SOURCE_FILE_AT_LINE (49)) ;
  }
  cEnumerator_galgas_33_LexiqueComponentListAST enumerator_2787 (constinArgument_inLexiqueComponentList, kEnumeration_up) ;
  while (enumerator_2787.hasCurrentObject ()) {
    {
    var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_2787.current_mLexiqueComponentName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (55)) ;
    }
    enumerator_2787.gotoNextObject () ;
  }
  {
  routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (constinArgument_inGrammarComponentList, var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (58)) ;
  }
  inCompiler->printMessage (GALGAS_string ("*** Semantic analysis\n") COMMA_SOURCE_FILE_AT_LINE (63)) ;
  cEnumerator_lstringlist enumerator_3231 (var_semanticContext.mAttribute_mTypeMap.reader_unsolvedProxyList (SOURCE_FILE_AT_LINE (65)), kEnumeration_up) ;
  while (enumerator_3231.hasCurrentObject ()) {
    GALGAS_location location_0 (enumerator_3231.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_0, GALGAS_string ("the '").operator_concat (enumerator_3231.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66)).operator_concat (GALGAS_string ("' type is undefined") COMMA_SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66)) ;
    enumerator_3231.gotoNextObject () ;
  }
  GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE_AT_LINE (69)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (70)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (71)) ;
    cEnumerator_semanticDeclarationListAST enumerator_3595 (var_sortedSemanticDeclarationListAST, kEnumeration_up) ;
    while (enumerator_3595.hasCurrentObject ()) {
      callCategoryMethod_semanticAnalysis ((const cPtr_semanticDeclarationAST *) enumerator_3595.current_mSemanticDeclaration (HERE).ptr (), var_semanticContext, var_predefinedTypes, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (73)) ;
      enumerator_3595.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (81)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    const enumGalgasBool test_3 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
    if (kBoolTrue == test_3) {
      inCompiler->printMessage (GALGAS_string ("*** Perform global checkings\n") COMMA_SOURCE_FILE_AT_LINE (83)) ;
    }
    {
    routine_performGalgas_33_ProjectGlobalCheckings (var_semanticContext, constinArgument_inSemanticDeclarationList, constinArgument_inProjectSourceFile, inCompiler COMMA_SOURCE_FILE_AT_LINE (85)) ;
    }
  }
  inCompiler->printMessage (GALGAS_string ("*** Generating files\n") COMMA_SOURCE_FILE_AT_LINE (92)) ;
  GALGAS_string var_productDirectory = constinArgument_inProjectSourceFile.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (93)).operator_concat (GALGAS_string ("/build/output") COMMA_SOURCE_FILE_AT_LINE (93)) ;
  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (95)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_4) {
    ioArgument_ioToolProductFileList.addAssign_operation (GALGAS_string ("AZERTYUIOP.cpp") COMMA_SOURCE_FILE_AT_LINE (96)) ;
    GALGAS_stringlist var_typeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (97)) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_4488 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_4488.hasCurrentObject ()) {
      const enumGalgasBool test_5 = enumerator_4488.current_mIsPredefined (HERE).operator_not (SOURCE_FILE_AT_LINE (99)).boolEnum () ;
      if (kBoolTrue == test_5) {
        callCategoryMethod_addCppTypeForPredeclarationInHeaderFile ((const cPtr_semanticDeclarationForGeneration *) enumerator_4488.current_mDeclaration (HERE).ptr (), var_typeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (100)) ;
      }
      enumerator_4488.gotoNextObject () ;
    }
    GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileHeader (inCompiler, GALGAS_string ("AZERTYUIOP"), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (105)), var_typeList COMMA_SOURCE_FILE_AT_LINE (103))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_4844 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_4844.hasCurrentObject ()) {
      const enumGalgasBool test_6 = enumerator_4844.current_mIsPredefined (HERE).operator_not (SOURCE_FILE_AT_LINE (109)).boolEnum () ;
      if (kBoolTrue == test_6) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_4844.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (110)) COMMA_SOURCE_FILE_AT_LINE (110)) ;
      }
      enumerator_4844.gotoNextObject () ;
    }
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_5022 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_5022.hasCurrentObject ()) {
      const enumGalgasBool test_7 = enumerator_5022.current_mIsPredefined (HERE).operator_not (SOURCE_FILE_AT_LINE (114)).boolEnum () ;
      if (kBoolTrue == test_7) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_5022.current_mDeclaration (HERE).ptr (), var_productDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (115)) COMMA_SOURCE_FILE_AT_LINE (115)) ;
      }
      enumerator_5022.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (var_productDirectory, GALGAS_string ("AZERTYUIOP.h"), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_headerString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (118)) ;
    }
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (129)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_8) {
    GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_semanticFileGenerationTemplate_semanticFileImplementation (inCompiler, GALGAS_string ("AZERTYUIOP"), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (132)) COMMA_SOURCE_FILE_AT_LINE (130))) ;
    cEnumerator_semanticDeclarationSortedListForGeneration enumerator_5675 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
    while (enumerator_5675.hasCurrentObject ()) {
      var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_5675.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (135)) COMMA_SOURCE_FILE_AT_LINE (135)) ;
      var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_5675.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (136)) COMMA_SOURCE_FILE_AT_LINE (136)) ;
      enumerator_5675.gotoNextObject () ;
    }
    {
    GALGAS_string::class_method_generateFileWithPattern (var_productDirectory, GALGAS_string ("AZERTYUIOP.cpp"), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_implementationString, GALGAS_string ("\n"
      "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (138)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//        Routine 'buildGalgas3GrammarComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_GrammarComponentMapForSemanticAnalysis (const GALGAS_galgas_33_GrammarComponentListAST constinArgument_inGrammarComponentList,
                                                                    GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_galgas_33_GrammarComponentListAST enumerator_6414 (constinArgument_inGrammarComponentList, kEnumeration_up) ;
  while (enumerator_6414.hasCurrentObject ()) {
    GALGAS_grammarLabelMap var_grammarLabelMap = GALGAS_grammarLabelMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (159)) ;
    cEnumerator_nonTerminalLabelListAST enumerator_6536 (enumerator_6414.current_mStartSymbolLabelList (HERE), kEnumeration_up) ;
    while (enumerator_6536.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (162)) ;
      cEnumerator_formalParameterListAST enumerator_6665 (enumerator_6536.current_mFormalArgumentList (HERE), kEnumeration_up) ;
      while (enumerator_6665.hasCurrentObject ()) {
        var_formalArgumentList.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_6665.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (165)), enumerator_6665.current_mFormalArgumentPassingMode (HERE), enumerator_6665.current_mFormalArgumentName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (164)) ;
        enumerator_6665.gotoNextObject () ;
      }
      {
      var_grammarLabelMap.modifier_insertKey (enumerator_6536.current_mLabelName (HERE), var_formalArgumentList, inCompiler COMMA_SOURCE_FILE_AT_LINE (170)) ;
      }
      enumerator_6536.gotoNextObject () ;
    }
    {
    ioArgument_ioSemanticContext.mAttribute_mGrammarMap.modifier_insertGrammar (enumerator_6414.current_mGrammarComponentName (HERE), var_grammarLabelMap, enumerator_6414.current_mHasIndexing (HERE).mAttribute_bool, enumerator_6414.current_mHasTranslateFeature (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (176)) ;
    }
    enumerator_6414.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                    Routine 'buildGalgas3SemanticContext'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_SemanticContext (const GALGAS_string constinArgument_inProjectSourceFile,
                                             const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                             const GALGAS_location constinArgument_inEndOfProjectSourceFile,
                                             GALGAS_semanticContext & outArgument_outSemanticContext,
                                             GALGAS_semanticDeclarationListAST & outArgument_outSortedSemanticDeclarationListAST,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release 'out' argument
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSemanticDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_8101 (constinArgument_inSemanticDeclarationList, kEnumeration_up) ;
  while (enumerator_8101.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_8101.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE_AT_LINE (201)) ;
    enumerator_8101.gotoNextObject () ;
  }
  GALGAS_semanticTypePrecedenceGraph var_semanticTypePrecedenceGraph = GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (SOURCE_FILE_AT_LINE (207)) ;
  GALGAS_categoryMethodMapForBuildingContext var_categoryMethodMapForBuildingContext = GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (208)) ;
  GALGAS_categoryReaderMapForBuildingContext var_categoryReaderMapForBuildingContext = GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (209)) ;
  GALGAS_categoryModifierMapForBuildingContext var_categoryModifierMapForBuildingContext = GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (210)) ;
  GALGAS_semanticDeclarationListAST var_categoryOverrideDefinitionList = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (211)) ;
  cEnumerator_semanticDeclarationListAST enumerator_8834 (var_semanticDeclarationList, kEnumeration_up) ;
  while (enumerator_8834.hasCurrentObject ()) {
    callCategoryMethod_enterDeclarationInGraph ((const cPtr_semanticDeclarationAST *) enumerator_8834.current_mSemanticDeclaration (HERE).ptr (), var_semanticTypePrecedenceGraph, var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, var_categoryOverrideDefinitionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (213)) ;
    enumerator_8834.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_semanticTypePrecedenceGraph.reader_undefinedNodeCount (SOURCE_FILE_AT_LINE (221)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_lstringlist enumerator_9254 (var_semanticTypePrecedenceGraph.reader_undefinedNodeReferenceList (SOURCE_FILE_AT_LINE (222)), kEnumeration_up) ;
    while (enumerator_9254.hasCurrentObject ()) {
      GALGAS_location location_1 (enumerator_9254.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_9254.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (223)) COMMA_SOURCE_FILE_AT_LINE (223)).operator_concat (GALGAS_string ("' type is not defined") COMMA_SOURCE_FILE_AT_LINE (223)) COMMA_SOURCE_FILE_AT_LINE (223)) ;
      enumerator_9254.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, GALGAS_string ("semantic analysis not performed, due to undefined type error(s)") COMMA_SOURCE_FILE_AT_LINE (225)) ;
    outArgument_outSemanticContext.drop () ; // Release error dropped variable
    outArgument_outSortedSemanticDeclarationListAST.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticDeclarationListAST var_unsortedSemanticDeclarationListAST ;
    GALGAS_lstringlist var_unsortedNodeKeyList ;
    GALGAS_lstringlist joker_9611_0 ; // Joker input parameter
    var_semanticTypePrecedenceGraph.method_topologicalSort (outArgument_outSortedSemanticDeclarationListAST, joker_9611_0, var_unsortedSemanticDeclarationListAST, var_unsortedNodeKeyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (227)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (233)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("semantic analysis not performed, ").operator_concat (var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (234)).reader_string (SOURCE_FILE_AT_LINE (234)) COMMA_SOURCE_FILE_AT_LINE (234)).operator_concat (GALGAS_string (" declarations are involved in circular definition:") COMMA_SOURCE_FILE_AT_LINE (234)) ;
      cEnumerator_semanticDeclarationListAST enumerator_10006 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_10006.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (callCategoryReader_keyRepresentation ((const cPtr_semanticDeclarationAST *) enumerator_10006.current_mSemanticDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (236)) COMMA_SOURCE_FILE_AT_LINE (236)) COMMA_SOURCE_FILE_AT_LINE (236)) ;
        enumerator_10006.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (constinArgument_inEndOfProjectSourceFile, var_s COMMA_SOURCE_FILE_AT_LINE (238)) ;
      outArgument_outSemanticContext.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      outArgument_outSortedSemanticDeclarationListAST.dotAssign_operation (var_categoryOverrideDefinitionList COMMA_SOURCE_FILE_AT_LINE (241)) ;
      outArgument_outSemanticContext = GALGAS_semanticContext::constructor_new (constinArgument_inProjectSourceFile, GALGAS_unifiedTypeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (245)), GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (246)), GALGAS_functionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (247)), GALGAS_filewrapperMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (248)), GALGAS_grammarMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (249)), GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (250)), GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (251)), GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (252)) COMMA_SOURCE_FILE_AT_LINE (243)) ;
      cEnumerator_semanticDeclarationListAST enumerator_10834 (outArgument_outSortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_10834.hasCurrentObject ()) {
        callCategoryMethod_enterInSemanticContext ((const cPtr_semanticDeclarationAST *) enumerator_10834.current_mSemanticDeclaration (HERE).ptr (), var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (256)) ;
        enumerator_10834.gotoNextObject () ;
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//         Routine 'buildGalgas3OptionComponentMapForSemanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildGalgas_33_OptionComponentMapForSemanticAnalysis (const GALGAS_galgas_33_OptionComponentListAST constinArgument_inOptionComponentList,
                                                                   GALGAS_optionComponentMapForSemanticAnalysis & ioArgument_ioOptionComponentMapForSemanticAnalysis,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_galgas_33_OptionComponentListAST enumerator_11722 (constinArgument_inOptionComponentList, kEnumeration_up) ;
  while (enumerator_11722.hasCurrentObject ()) {
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (278)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (279)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (280)) ;
    GALGAS_stringset var_optionNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (281)) ;
    cEnumerator_commandLineOptionListAST enumerator_11970 (enumerator_11722.current_mOptions (HERE), kEnumeration_up) ;
    while (enumerator_11970.hasCurrentObject ()) {
      const enumGalgasBool test_0 = var_optionNameSet.reader_hasKey (enumerator_11970.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE_AT_LINE (283)) COMMA_SOURCE_FILE_AT_LINE (283)).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_location location_1 (enumerator_11970.current_mOptionInternalName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").add_operation (enumerator_11970.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE_AT_LINE (284)), inCompiler COMMA_SOURCE_FILE_AT_LINE (284)).add_operation (GALGAS_string ("' command line option has been already declared"), inCompiler COMMA_SOURCE_FILE_AT_LINE (284)) COMMA_SOURCE_FILE_AT_LINE (284)) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_11970.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (285)).objectCompare (GALGAS_string ("bool"))).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          var_boolOptionMap.modifier_insertKey (enumerator_11970.current_mOptionInternalName (HERE), enumerator_11970.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE_AT_LINE (288)), enumerator_11970.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE_AT_LINE (289)), enumerator_11970.current_mOptionComment (HERE).reader_string (SOURCE_FILE_AT_LINE (290)), GALGAS_string ("false"), inCompiler COMMA_SOURCE_FILE_AT_LINE (286)) ;
          }
          const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_11970.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_noDefaultValue (SOURCE_FILE_AT_LINE (293)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (enumerator_11970.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("an @bool option cannot have a default value (default value is allways false)") COMMA_SOURCE_FILE_AT_LINE (294)) ;
          }
        }else if (kBoolFalse == test_2) {
          const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, enumerator_11970.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (296)).objectCompare (GALGAS_string ("uint"))).boolEnum () ;
          if (kBoolTrue == test_5) {
            {
            //--- @ifExpressionForGeneration
            GALGAS_string temp_6 ;
            const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, enumerator_11970.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE_AT_LINE (302)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
            if (kBoolTrue == test_7) {
              temp_6 = GALGAS_string ("0") ;
            }else if (kBoolFalse == test_7) {
              temp_6 = enumerator_11970.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE_AT_LINE (302)) ;
            }
            var_uintOptionMap.modifier_insertKey (enumerator_11970.current_mOptionInternalName (HERE), enumerator_11970.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE_AT_LINE (299)), enumerator_11970.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE_AT_LINE (300)), enumerator_11970.current_mOptionComment (HERE).reader_string (SOURCE_FILE_AT_LINE (301)), temp_6, inCompiler COMMA_SOURCE_FILE_AT_LINE (297)) ;
            }
            const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_11970.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_stringDefaultValue (SOURCE_FILE_AT_LINE (304)))).boolEnum () ;
            if (kBoolTrue == test_8) {
              GALGAS_location location_9 (enumerator_11970.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_9, GALGAS_string ("an @uint option default value cannot be an @string value") COMMA_SOURCE_FILE_AT_LINE (305)) ;
            }
          }else if (kBoolFalse == test_5) {
            const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, enumerator_11970.current_mOptionTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (307)).objectCompare (GALGAS_string ("string"))).boolEnum () ;
            if (kBoolTrue == test_10) {
              {
              var_stringOptionMap.modifier_insertKey (enumerator_11970.current_mOptionInternalName (HERE), enumerator_11970.current_mOptionInvocationLetter (HERE).reader_char (SOURCE_FILE_AT_LINE (310)), enumerator_11970.current_mOptionInvocationString (HERE).reader_string (SOURCE_FILE_AT_LINE (311)), enumerator_11970.current_mOptionComment (HERE).reader_string (SOURCE_FILE_AT_LINE (312)), enumerator_11970.current_mOptionDefaultValue (HERE).reader_string (SOURCE_FILE_AT_LINE (313)), inCompiler COMMA_SOURCE_FILE_AT_LINE (308)) ;
              }
              const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_11970.current_mOptionDefaultValueKind (HERE).objectCompare (GALGAS_optionDefaultValueEnumAST::constructor_unsignedDefaultValue (SOURCE_FILE_AT_LINE (315)))).boolEnum () ;
              if (kBoolTrue == test_11) {
                GALGAS_location location_12 (enumerator_11970.current_mOptionDefaultValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_12, GALGAS_string ("an @string option default value cannot be an @uint value") COMMA_SOURCE_FILE_AT_LINE (316)) ;
              }
            }else if (kBoolFalse == test_10) {
              GALGAS_location location_13 (enumerator_11970.current_mOptionTypeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_13, GALGAS_string ("only the @bool, @uint or @string types are allowed here") COMMA_SOURCE_FILE_AT_LINE (319)) ;
            }
          }
        }
      }
      var_optionNameSet.addAssign_operation (enumerator_11970.current_mOptionInternalName (HERE).reader_string (SOURCE_FILE_AT_LINE (321)) COMMA_SOURCE_FILE_AT_LINE (321)) ;
      enumerator_11970.gotoNextObject () ;
    }
    {
    ioArgument_ioOptionComponentMapForSemanticAnalysis.modifier_insertKey (enumerator_11722.current_mOptionComponentName (HERE), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (323)) ;
    }
    enumerator_11722.gotoNextObject () ;
  }
  const enumGalgasBool test_14 = ioArgument_ioOptionComponentMapForSemanticAnalysis.reader_hasKey (GALGAS_string ("galgas_builtin_options") COMMA_SOURCE_FILE_AT_LINE (331)).operator_not (SOURCE_FILE_AT_LINE (331)).boolEnum () ;
  if (kBoolTrue == test_14) {
    GALGAS__32_stringlist var_optionNameList = GALGAS_application::constructor_boolOptionNameList (SOURCE_FILE_AT_LINE (332)) ;
    GALGAS_commandLineOptionMap var_boolOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (333)) ;
    cEnumerator__32_stringlist enumerator_14372 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_14372.hasCurrentObject ()) {
      {
      var_boolOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_14372.current_mValue_31_ (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (336)), GALGAS_application::constructor_boolOptionInvocationLetter (enumerator_14372.current_mValue_30_ (HERE), enumerator_14372.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (337)), GALGAS_application::constructor_boolOptionInvocationString (enumerator_14372.current_mValue_30_ (HERE), enumerator_14372.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (338)), GALGAS_application::constructor_boolOptionCommentString (enumerator_14372.current_mValue_30_ (HERE), enumerator_14372.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (339)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (335)) ;
      }
      enumerator_14372.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_uintOptionNameList (SOURCE_FILE_AT_LINE (344)) ;
    GALGAS_commandLineOptionMap var_uintOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (345)) ;
    cEnumerator__32_stringlist enumerator_14848 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_14848.hasCurrentObject ()) {
      {
      var_uintOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_14848.current_mValue_31_ (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (348)), GALGAS_application::constructor_uintOptionInvocationLetter (enumerator_14848.current_mValue_30_ (HERE), enumerator_14848.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (349)), GALGAS_application::constructor_uintOptionInvocationString (enumerator_14848.current_mValue_30_ (HERE), enumerator_14848.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (350)), GALGAS_application::constructor_uintOptionCommentString (enumerator_14848.current_mValue_30_ (HERE), enumerator_14848.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (351)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (347)) ;
      }
      enumerator_14848.gotoNextObject () ;
    }
    var_optionNameList = GALGAS_application::constructor_stringOptionNameList (SOURCE_FILE_AT_LINE (356)) ;
    GALGAS_commandLineOptionMap var_stringOptionMap = GALGAS_commandLineOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (357)) ;
    cEnumerator__32_stringlist enumerator_15328 (var_optionNameList, kEnumeration_up) ;
    while (enumerator_15328.hasCurrentObject ()) {
      {
      var_stringOptionMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_15328.current_mValue_31_ (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (360)), GALGAS_application::constructor_stringOptionInvocationLetter (enumerator_15328.current_mValue_30_ (HERE), enumerator_15328.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (361)), GALGAS_application::constructor_stringOptionInvocationString (enumerator_15328.current_mValue_30_ (HERE), enumerator_15328.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (362)), GALGAS_application::constructor_stringOptionCommentString (enumerator_15328.current_mValue_30_ (HERE), enumerator_15328.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (363)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (359)) ;
      }
      enumerator_15328.gotoNextObject () ;
    }
    {
    ioArgument_ioOptionComponentMapForSemanticAnalysis.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("galgas_builtin_options"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (369)), var_boolOptionMap, var_uintOptionMap, var_stringOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (368)) ;
    }
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


