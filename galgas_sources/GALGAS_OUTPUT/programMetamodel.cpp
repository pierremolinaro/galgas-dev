//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'programMetamodel.cpp'                         *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 27th, 2010, at 18h24'19"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "programMetamodel.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "programMetamodel.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//               Class for element of '@programRuleList' list                *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_programRuleList : public cCollectionElement {
//--- List attributes
  public : GALGAS_lstring mAttribute_mSourceFileExtension ;
  public : GALGAS_lstring mAttribute_mSourceFileHelp ;
  public : GALGAS_lstring mAttribute_mSourceFileVariableName ;
  public : GALGAS_bool mAttribute_mSourceFileVariableNameIsUnused ;
  public : GALGAS_lstring mAttribute_mIndexingGrammar ;
  public : GALGAS_semanticInstructionListAST mAttribute_mInstructionList ;
  public : GALGAS_location mAttribute_mEndOfInstructionList ;

//--- Constructor
  public : cCollectionElement_programRuleList (const GALGAS_lstring & in_mSourceFileExtension,
                                               const GALGAS_lstring & in_mSourceFileHelp,
                                               const GALGAS_lstring & in_mSourceFileVariableName,
                                               const GALGAS_bool & in_mSourceFileVariableNameIsUnused,
                                               const GALGAS_lstring & in_mIndexingGrammar,
                                               const GALGAS_semanticInstructionListAST & in_mInstructionList,
                                               const GALGAS_location & in_mEndOfInstructionList
                                               COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual enumComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_programRuleList::cCollectionElement_programRuleList (const GALGAS_lstring & in_mSourceFileExtension,
                                                                        const GALGAS_lstring & in_mSourceFileHelp,
                                                                        const GALGAS_lstring & in_mSourceFileVariableName,
                                                                        const GALGAS_bool & in_mSourceFileVariableNameIsUnused,
                                                                        const GALGAS_lstring & in_mIndexingGrammar,
                                                                        const GALGAS_semanticInstructionListAST & in_mInstructionList,
                                                                        const GALGAS_location & in_mEndOfInstructionList
                                                                        COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mSourceFileExtension (in_mSourceFileExtension),
mAttribute_mSourceFileHelp (in_mSourceFileHelp),
mAttribute_mSourceFileVariableName (in_mSourceFileVariableName),
mAttribute_mSourceFileVariableNameIsUnused (in_mSourceFileVariableNameIsUnused),
mAttribute_mIndexingGrammar (in_mIndexingGrammar),
mAttribute_mInstructionList (in_mInstructionList),
mAttribute_mEndOfInstructionList (in_mEndOfInstructionList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_programRuleList::isValid (void) const {
  return mAttribute_mSourceFileExtension.isValid () && mAttribute_mSourceFileHelp.isValid () && mAttribute_mSourceFileVariableName.isValid () && mAttribute_mSourceFileVariableNameIsUnused.isValid () && mAttribute_mIndexingGrammar.isValid () && mAttribute_mInstructionList.isValid () && mAttribute_mEndOfInstructionList.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_programRuleList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_programRuleList (mAttribute_mSourceFileExtension, mAttribute_mSourceFileHelp, mAttribute_mSourceFileVariableName, mAttribute_mSourceFileVariableNameIsUnused, mAttribute_mIndexingGrammar, mAttribute_mInstructionList, mAttribute_mEndOfInstructionList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_programRuleList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSourceFileExtension" ":" ;
  mAttribute_mSourceFileExtension.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSourceFileHelp" ":" ;
  mAttribute_mSourceFileHelp.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSourceFileVariableName" ":" ;
  mAttribute_mSourceFileVariableName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSourceFileVariableNameIsUnused" ":" ;
  mAttribute_mSourceFileVariableNameIsUnused.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIndexingGrammar" ":" ;
  mAttribute_mIndexingGrammar.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInstructionList" ":" ;
  mAttribute_mInstructionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEndOfInstructionList" ":" ;
  mAttribute_mEndOfInstructionList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

enumComparisonResult cCollectionElement_programRuleList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_programRuleList * operand = (cCollectionElement_programRuleList *) inOperand ;
  enumComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mSourceFileExtension.objectCompare (operand->mAttribute_mSourceFileExtension) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSourceFileHelp.objectCompare (operand->mAttribute_mSourceFileHelp) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSourceFileVariableName.objectCompare (operand->mAttribute_mSourceFileVariableName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSourceFileVariableNameIsUnused.objectCompare (operand->mAttribute_mSourceFileVariableNameIsUnused) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIndexingGrammar.objectCompare (operand->mAttribute_mIndexingGrammar) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInstructionList.objectCompare (operand->mAttribute_mInstructionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEndOfInstructionList.objectCompare (operand->mAttribute_mEndOfInstructionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_programRuleList::GALGAS_programRuleList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_programRuleList::GALGAS_programRuleList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_programRuleList GALGAS_programRuleList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_programRuleList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_programRuleList GALGAS_programRuleList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                          const GALGAS_lstring & inOperand1,
                                                                          const GALGAS_lstring & inOperand2,
                                                                          const GALGAS_bool & inOperand3,
                                                                          const GALGAS_lstring & inOperand4,
                                                                          const GALGAS_semanticInstructionListAST & inOperand5,
                                                                          const GALGAS_location & inOperand6
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_programRuleList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_programRuleList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                        const GALGAS_lstring & in_mSourceFileExtension,
                                                        const GALGAS_lstring & in_mSourceFileHelp,
                                                        const GALGAS_lstring & in_mSourceFileVariableName,
                                                        const GALGAS_bool & in_mSourceFileVariableNameIsUnused,
                                                        const GALGAS_lstring & in_mIndexingGrammar,
                                                        const GALGAS_semanticInstructionListAST & in_mInstructionList,
                                                        const GALGAS_location & in_mEndOfInstructionList
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement_programRuleList * p = NULL ;
  macroMyNew (p, cCollectionElement_programRuleList (in_mSourceFileExtension,
                                                        in_mSourceFileHelp,
                                                        in_mSourceFileVariableName,
                                                        in_mSourceFileVariableNameIsUnused,
                                                        in_mIndexingGrammar,
                                                        in_mInstructionList,
                                                        in_mEndOfInstructionList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                  const GALGAS_lstring & inOperand1,
                                                  const GALGAS_lstring & inOperand2,
                                                  const GALGAS_bool & inOperand3,
                                                  const GALGAS_lstring & inOperand4,
                                                  const GALGAS_semanticInstructionListAST & inOperand5,
                                                  const GALGAS_location & inOperand6
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_programRuleList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_prependValue (GALGAS_lstring inOperand0,
                                                    GALGAS_lstring inOperand1,
                                                    GALGAS_lstring inOperand2,
                                                    GALGAS_bool inOperand3,
                                                    GALGAS_lstring inOperand4,
                                                    GALGAS_semanticInstructionListAST inOperand5,
                                                    GALGAS_location inOperand6
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_programRuleList (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                GALGAS_lstring & outOperand1,
                                                GALGAS_lstring & outOperand2,
                                                GALGAS_bool & outOperand3,
                                                GALGAS_lstring & outOperand4,
                                                GALGAS_semanticInstructionListAST & outOperand5,
                                                GALGAS_location & outOperand6,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    outOperand0 = p->mAttribute_mSourceFileExtension ;
    outOperand1 = p->mAttribute_mSourceFileHelp ;
    outOperand2 = p->mAttribute_mSourceFileVariableName ;
    outOperand3 = p->mAttribute_mSourceFileVariableNameIsUnused ;
    outOperand4 = p->mAttribute_mIndexingGrammar ;
    outOperand5 = p->mAttribute_mInstructionList ;
    outOperand6 = p->mAttribute_mEndOfInstructionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_popLast (GALGAS_lstring & outOperand0,
                                               GALGAS_lstring & outOperand1,
                                               GALGAS_lstring & outOperand2,
                                               GALGAS_bool & outOperand3,
                                               GALGAS_lstring & outOperand4,
                                               GALGAS_semanticInstructionListAST & outOperand5,
                                               GALGAS_location & outOperand6,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    outOperand0 = p->mAttribute_mSourceFileExtension ;
    outOperand1 = p->mAttribute_mSourceFileHelp ;
    outOperand2 = p->mAttribute_mSourceFileVariableName ;
    outOperand3 = p->mAttribute_mSourceFileVariableNameIsUnused ;
    outOperand4 = p->mAttribute_mIndexingGrammar ;
    outOperand5 = p->mAttribute_mInstructionList ;
    outOperand6 = p->mAttribute_mEndOfInstructionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::method_first (GALGAS_lstring & outOperand0,
                                           GALGAS_lstring & outOperand1,
                                           GALGAS_lstring & outOperand2,
                                           GALGAS_bool & outOperand3,
                                           GALGAS_lstring & outOperand4,
                                           GALGAS_semanticInstructionListAST & outOperand5,
                                           GALGAS_location & outOperand6,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    outOperand0 = p->mAttribute_mSourceFileExtension ;
    outOperand1 = p->mAttribute_mSourceFileHelp ;
    outOperand2 = p->mAttribute_mSourceFileVariableName ;
    outOperand3 = p->mAttribute_mSourceFileVariableNameIsUnused ;
    outOperand4 = p->mAttribute_mIndexingGrammar ;
    outOperand5 = p->mAttribute_mInstructionList ;
    outOperand6 = p->mAttribute_mEndOfInstructionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::method_last (GALGAS_lstring & outOperand0,
                                          GALGAS_lstring & outOperand1,
                                          GALGAS_lstring & outOperand2,
                                          GALGAS_bool & outOperand3,
                                          GALGAS_lstring & outOperand4,
                                          GALGAS_semanticInstructionListAST & outOperand5,
                                          GALGAS_location & outOperand6,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    outOperand0 = p->mAttribute_mSourceFileExtension ;
    outOperand1 = p->mAttribute_mSourceFileHelp ;
    outOperand2 = p->mAttribute_mSourceFileVariableName ;
    outOperand3 = p->mAttribute_mSourceFileVariableNameIsUnused ;
    outOperand4 = p->mAttribute_mIndexingGrammar ;
    outOperand5 = p->mAttribute_mInstructionList ;
    outOperand6 = p->mAttribute_mEndOfInstructionList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_programRuleList GALGAS_programRuleList::operator_concat (const GALGAS_programRuleList & inOperand
                                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_programRuleList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_programRuleList GALGAS_programRuleList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                        const GALGAS_uint & inLength,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_programRuleList result = GALGAS_programRuleList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_programRuleList GALGAS_programRuleList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_programRuleList result = GALGAS_programRuleList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::dotAssign_operation (const GALGAS_programRuleList inOperand
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_setMSourceFileExtensionAtIndex (GALGAS_lstring inOperand,
                                                                      GALGAS_uint inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    p->mAttribute_mSourceFileExtension = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_setMSourceFileHelpAtIndex (GALGAS_lstring inOperand,
                                                                 GALGAS_uint inIndex,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    p->mAttribute_mSourceFileHelp = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_setMSourceFileVariableNameAtIndex (GALGAS_lstring inOperand,
                                                                         GALGAS_uint inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    p->mAttribute_mSourceFileVariableName = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_setMSourceFileVariableNameIsUnusedAtIndex (GALGAS_bool inOperand,
                                                                                 GALGAS_uint inIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    p->mAttribute_mSourceFileVariableNameIsUnused = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_setMIndexingGrammarAtIndex (GALGAS_lstring inOperand,
                                                                  GALGAS_uint inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    p->mAttribute_mIndexingGrammar = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_setMInstructionListAtIndex (GALGAS_semanticInstructionListAST inOperand,
                                                                  GALGAS_uint inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    p->mAttribute_mInstructionList = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_programRuleList::modifier_setMEndOfInstructionListAtIndex (GALGAS_location inOperand,
                                                                       GALGAS_uint inIndex,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    p->mAttribute_mEndOfInstructionList = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_programRuleList::reader_mSourceFileExtensionAtIndex (const GALGAS_uint & inIndex,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    result = p->mAttribute_mSourceFileExtension ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_programRuleList::reader_mSourceFileHelpAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    result = p->mAttribute_mSourceFileHelp ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_programRuleList::reader_mSourceFileVariableNameAtIndex (const GALGAS_uint & inIndex,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    result = p->mAttribute_mSourceFileVariableName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_programRuleList::reader_mSourceFileVariableNameIsUnusedAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    result = p->mAttribute_mSourceFileVariableNameIsUnused ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_programRuleList::reader_mIndexingGrammarAtIndex (const GALGAS_uint & inIndex,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    result = p->mAttribute_mIndexingGrammar ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListAST GALGAS_programRuleList::reader_mInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  GALGAS_semanticInstructionListAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    result = p->mAttribute_mInstructionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_programRuleList::reader_mEndOfInstructionListAtIndex (const GALGAS_uint & inIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_programRuleList * p = (cCollectionElement_programRuleList *) attributes.ptr () ;
  GALGAS_location result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_programRuleList) ;
    result = p->mAttribute_mEndOfInstructionList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_programRuleList::cEnumerator_programRuleList (const GALGAS_programRuleList & inEnumeratedObject,
                                                          const bool inAscending) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inAscending) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_programRuleList::current_mSourceFileExtension (LOCATION_ARGS) const {
  const cCollectionElement_programRuleList * p = (const cCollectionElement_programRuleList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_programRuleList) ;
  return p->mAttribute_mSourceFileExtension ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_programRuleList::current_mSourceFileHelp (LOCATION_ARGS) const {
  const cCollectionElement_programRuleList * p = (const cCollectionElement_programRuleList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_programRuleList) ;
  return p->mAttribute_mSourceFileHelp ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_programRuleList::current_mSourceFileVariableName (LOCATION_ARGS) const {
  const cCollectionElement_programRuleList * p = (const cCollectionElement_programRuleList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_programRuleList) ;
  return p->mAttribute_mSourceFileVariableName ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_programRuleList::current_mSourceFileVariableNameIsUnused (LOCATION_ARGS) const {
  const cCollectionElement_programRuleList * p = (const cCollectionElement_programRuleList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_programRuleList) ;
  return p->mAttribute_mSourceFileVariableNameIsUnused ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_programRuleList::current_mIndexingGrammar (LOCATION_ARGS) const {
  const cCollectionElement_programRuleList * p = (const cCollectionElement_programRuleList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_programRuleList) ;
  return p->mAttribute_mIndexingGrammar ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListAST cEnumerator_programRuleList::current_mInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_programRuleList * p = (const cCollectionElement_programRuleList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_programRuleList) ;
  return p->mAttribute_mInstructionList ;
}

//---------------------------------------------------------------------------*

GALGAS_location cEnumerator_programRuleList::current_mEndOfInstructionList (LOCATION_ARGS) const {
  const cCollectionElement_programRuleList * p = (const cCollectionElement_programRuleList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_programRuleList) ;
  return p->mAttribute_mEndOfInstructionList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                           @programRuleList type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_programRuleList ("programRuleList",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_programRuleList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_programRuleList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_programRuleList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_programRuleList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_programRuleList GALGAS_programRuleList::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_programRuleList result ;
  const GALGAS_programRuleList * p = (const GALGAS_programRuleList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_programRuleList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "programRuleList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_programComponentAST::GALGAS_programComponentAST (void) :
mAttribute_mProgramComponentName (),
mAttribute_mVersionString (),
mAttribute_mImportedComponentFileNameList (),
mAttribute_mPrologueInstructionList (),
mAttribute_mEndOfPrologue (),
mAttribute_mEpilogueInstructionList (),
mAttribute_mEndOfEpilogue (),
mAttribute_mProgramRules (),
mAttribute_mSemanticDeclarationList (),
mAttribute_mEndOfSourceFile () {
}

//---------------------------------------------------------------------------*

GALGAS_programComponentAST::~ GALGAS_programComponentAST (void) {
}

//---------------------------------------------------------------------------*

/* GALGAS_programComponentAST::GALGAS_programComponentAST (const GALGAS_programComponentAST & inSource) :
//mAttribute_mProgramComponentName (inSource.mAttribute_mProgramComponentName),
//mAttribute_mVersionString (inSource.mAttribute_mVersionString),
//mAttribute_mImportedComponentFileNameList (inSource.mAttribute_mImportedComponentFileNameList),
//mAttribute_mPrologueInstructionList (inSource.mAttribute_mPrologueInstructionList),
//mAttribute_mEndOfPrologue (inSource.mAttribute_mEndOfPrologue),
//mAttribute_mEpilogueInstructionList (inSource.mAttribute_mEpilogueInstructionList),
//mAttribute_mEndOfEpilogue (inSource.mAttribute_mEndOfEpilogue),
//mAttribute_mProgramRules (inSource.mAttribute_mProgramRules),
//mAttribute_mSemanticDeclarationList (inSource.mAttribute_mSemanticDeclarationList),
//mAttribute_mEndOfSourceFile (inSource.mAttribute_mEndOfSourceFile) {
} */

//---------------------------------------------------------------------------*

GALGAS_programComponentAST::GALGAS_programComponentAST (const GALGAS_lstring & inOperand0,
                                                        const GALGAS_lstring & inOperand1,
                                                        const GALGAS_lstringlist & inOperand2,
                                                        const GALGAS_semanticInstructionListAST & inOperand3,
                                                        const GALGAS_location & inOperand4,
                                                        const GALGAS_semanticInstructionListAST & inOperand5,
                                                        const GALGAS_location & inOperand6,
                                                        const GALGAS_programRuleList & inOperand7,
                                                        const GALGAS_semanticDeclarationListAST & inOperand8,
                                                        const GALGAS_location & inOperand9) :
mAttribute_mProgramComponentName (inOperand0),
mAttribute_mVersionString (inOperand1),
mAttribute_mImportedComponentFileNameList (inOperand2),
mAttribute_mPrologueInstructionList (inOperand3),
mAttribute_mEndOfPrologue (inOperand4),
mAttribute_mEpilogueInstructionList (inOperand5),
mAttribute_mEndOfEpilogue (inOperand6),
mAttribute_mProgramRules (inOperand7),
mAttribute_mSemanticDeclarationList (inOperand8),
mAttribute_mEndOfSourceFile (inOperand9) {
}

//---------------------------------------------------------------------------*

/* GALGAS_programComponentAST & GALGAS_programComponentAST::operator = (const GALGAS_programComponentAST & inOperand) {
  mAttribute_mProgramComponentName = inOperand.mAttribute_mProgramComponentName ;
  mAttribute_mVersionString = inOperand.mAttribute_mVersionString ;
  mAttribute_mImportedComponentFileNameList = inOperand.mAttribute_mImportedComponentFileNameList ;
  mAttribute_mPrologueInstructionList = inOperand.mAttribute_mPrologueInstructionList ;
  mAttribute_mEndOfPrologue = inOperand.mAttribute_mEndOfPrologue ;
  mAttribute_mEpilogueInstructionList = inOperand.mAttribute_mEpilogueInstructionList ;
  mAttribute_mEndOfEpilogue = inOperand.mAttribute_mEndOfEpilogue ;
  mAttribute_mProgramRules = inOperand.mAttribute_mProgramRules ;
  mAttribute_mSemanticDeclarationList = inOperand.mAttribute_mSemanticDeclarationList ;
  mAttribute_mEndOfSourceFile = inOperand.mAttribute_mEndOfSourceFile ;
  return *this ;
} */

//---------------------------------------------------------------------------*

GALGAS_programComponentAST GALGAS_programComponentAST::constructor_new (const GALGAS_lstring & inOperand0,
                                                                        const GALGAS_lstring & inOperand1,
                                                                        const GALGAS_lstringlist & inOperand2,
                                                                        const GALGAS_semanticInstructionListAST & inOperand3,
                                                                        const GALGAS_location & inOperand4,
                                                                        const GALGAS_semanticInstructionListAST & inOperand5,
                                                                        const GALGAS_location & inOperand6,
                                                                        const GALGAS_programRuleList & inOperand7,
                                                                        const GALGAS_semanticDeclarationListAST & inOperand8,
                                                                        const GALGAS_location & inOperand9 
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_programComponentAST result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid ()) {
    result = GALGAS_programComponentAST (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

enumComparisonResult GALGAS_programComponentAST::objectCompare (const GALGAS_programComponentAST & inOperand) const {
   enumComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mProgramComponentName.objectCompare (inOperand.mAttribute_mProgramComponentName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mVersionString.objectCompare (inOperand.mAttribute_mVersionString) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImportedComponentFileNameList.objectCompare (inOperand.mAttribute_mImportedComponentFileNameList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPrologueInstructionList.objectCompare (inOperand.mAttribute_mPrologueInstructionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEndOfPrologue.objectCompare (inOperand.mAttribute_mEndOfPrologue) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEpilogueInstructionList.objectCompare (inOperand.mAttribute_mEpilogueInstructionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEndOfEpilogue.objectCompare (inOperand.mAttribute_mEndOfEpilogue) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mProgramRules.objectCompare (inOperand.mAttribute_mProgramRules) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSemanticDeclarationList.objectCompare (inOperand.mAttribute_mSemanticDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEndOfSourceFile.objectCompare (inOperand.mAttribute_mEndOfSourceFile) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_programComponentAST::isValid (void) const {
  return mAttribute_mProgramComponentName.isValid () && mAttribute_mVersionString.isValid () && mAttribute_mImportedComponentFileNameList.isValid () && mAttribute_mPrologueInstructionList.isValid () && mAttribute_mEndOfPrologue.isValid () && mAttribute_mEpilogueInstructionList.isValid () && mAttribute_mEndOfEpilogue.isValid () && mAttribute_mProgramRules.isValid () && mAttribute_mSemanticDeclarationList.isValid () && mAttribute_mEndOfSourceFile.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_programComponentAST::drop (void) {
  mAttribute_mProgramComponentName.drop () ;
  mAttribute_mVersionString.drop () ;
  mAttribute_mImportedComponentFileNameList.drop () ;
  mAttribute_mPrologueInstructionList.drop () ;
  mAttribute_mEndOfPrologue.drop () ;
  mAttribute_mEpilogueInstructionList.drop () ;
  mAttribute_mEndOfEpilogue.drop () ;
  mAttribute_mProgramRules.drop () ;
  mAttribute_mSemanticDeclarationList.drop () ;
  mAttribute_mEndOfSourceFile.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_programComponentAST::description (C_String & ioString,
                                              const PMSInt32 inIndentation) const {
  ioString << "<struct @programComponentAST:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mProgramComponentName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mVersionString.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImportedComponentFileNameList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPrologueInstructionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEndOfPrologue.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEpilogueInstructionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEndOfEpilogue.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mProgramRules.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSemanticDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEndOfSourceFile.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_programComponentAST::reader_mProgramComponentName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mProgramComponentName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_programComponentAST::reader_mVersionString (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mVersionString ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_programComponentAST::reader_mImportedComponentFileNameList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImportedComponentFileNameList ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListAST GALGAS_programComponentAST::reader_mPrologueInstructionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPrologueInstructionList ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_programComponentAST::reader_mEndOfPrologue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEndOfPrologue ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListAST GALGAS_programComponentAST::reader_mEpilogueInstructionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEpilogueInstructionList ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_programComponentAST::reader_mEndOfEpilogue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEndOfEpilogue ;
}

//---------------------------------------------------------------------------*

GALGAS_programRuleList GALGAS_programComponentAST::reader_mProgramRules (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mProgramRules ;
}

//---------------------------------------------------------------------------*

GALGAS_semanticDeclarationListAST GALGAS_programComponentAST::reader_mSemanticDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSemanticDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_location GALGAS_programComponentAST::reader_mEndOfSourceFile (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEndOfSourceFile ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @programComponentAST type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_programComponentAST ("programComponentAST",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_programComponentAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_programComponentAST ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_programComponentAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_programComponentAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_programComponentAST GALGAS_programComponentAST::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_programComponentAST result ;
  const GALGAS_programComponentAST * p = (const GALGAS_programComponentAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_programComponentAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "programComponentAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


