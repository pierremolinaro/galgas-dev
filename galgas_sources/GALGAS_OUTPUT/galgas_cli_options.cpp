//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'galgas_cli_options.cpp'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     january 5th, 2006, at 17h18'38"                       *
//                                                                           *
// This file is free software; you can redistribute it and/or modify it      *
// under the terms of the GNU Lesser General Public License as published     *
// by the Free Software Foundation; either version 2 of the License, or      *
// (at your option) any later version.                                       *
//                                                                           *
// This file is distributed in the hope it will be useful, but WITHOUT       *
// ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or     *
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       *
// License for more details.                                                 *
//                                                                           *
// You should have received a copy of the GNU General Public License along   *
// with this program; if not, write to the Free Software Foundation          *
// Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA            *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include <string.h>

#include "galgas_cli_options.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          C O N S T R U C T O R                            *
//                                                                           *
//---------------------------------------------------------------------------*

galgas_cli_options::galgas_cli_options (void)
:mStringValue (1 COMMA_HERE) {
  mBoolOptionValues [0] = 0 ;
  mBoolOptionValues [1] = 0 ;
  mBoolOptionValues [2] = 0 ;
  mBoolOptionValues [3] = 0 ;
  mBoolOptionValues [4] = false ; // Extra unused entry
  mUintOptionValues [0] = 0 ; // Extra unused entry
}

//---------------------------------------------------------------------------*
//                                                                           *
//              G E T    B O O L    O P T I O N S    C O U N T               *
//                                                                           *
//---------------------------------------------------------------------------*

sint32 galgas_cli_options::getBoolOptionsCount (void) const {
  return 4 ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               G E T    B O O L    O P T I O N    V A L U E                *
//                                                                           *
//---------------------------------------------------------------------------*

bool galgas_cli_options::getBoolOptionValue (const sint32 inIndex) const {
  return ((inIndex >= 0) && (inIndex < 4)) ? mBoolOptionValues [inIndex] : false ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               S E T    B O O L    O P T I O N    V A L U E                *
//                                                                           *
//---------------------------------------------------------------------------*

void galgas_cli_options::setBoolOptionValue (const sint32 inIndex, const bool inValue) {
  if ((inIndex >= 0) && (inIndex < 4)) {
    mBoolOptionValues [inIndex] = inValue ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           G E T    B O O L    O P T I O N    C H A R A C T E R            *
//                                                                           *
//---------------------------------------------------------------------------*

char galgas_cli_options::getBoolOptionChar (const sint32 inIndex) const {
  const char kCharArray [5] = {'n', 'H', 'p', 'g', '\0'} ;
  return ((inIndex >= 0) && (inIndex < 4)) ? kCharArray [inIndex] : '\0' ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              G E T    B O O L    O P T I O N    S T R I N G               *
//                                                                           *
//---------------------------------------------------------------------------*

const char * galgas_cli_options::getBoolOptionString (const sint32 inIndex) const {
  const char * kStringArray [5] = {"no_file_generation",
    "output-html-grammar-file",
    "parseonly",
    "generate_debug",
    ""} ;
  return ((inIndex >= 0) && (inIndex < 4)) ? kStringArray [inIndex] : "" ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         G E T    B O O L    O P T I O N    D E S C R I P T I O N          *
//                                                                           *
//---------------------------------------------------------------------------*

const char * galgas_cli_options::getBoolOptionDescription (const sint32 inIndex) const {
  const char * kDescriptionArray [5] = {"Do not generate any file",
    "Output a HTML file for every grammar component",
    "Parse only input files",
    "Generate Debug Information on terminals and non-terminals symbols ",
    ""} ;
  return ((inIndex >= 0) && (inIndex < 4)) ? kDescriptionArray [inIndex] : "" ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    G E T    B O O L    O P T I O N    V A L U E    F R O M    K E Y S     *
//                                                                           *
//---------------------------------------------------------------------------*

bool galgas_cli_options::
boolOptionValueFromKeys (const char * inModuleName,
                         const char * inOptionName,
                         bool * outFound) const {
  const char * kKeyArray [5] = {"doNotGenerateFiles",
    "outputHTMLgrammarFile",
    "parse_only",
    "generate_debug",
    ""} ;
  bool result = false ;
  bool found = strcmp (inModuleName, "galgas_cli_options") == 0 ;
  if (found) {
    found = false ;
    sint32 index = 0 ;
    while ((index < 4) && ! found) {
      found = strcmp (inOptionName, kKeyArray [index]) == 0 ;
      if (found) {
        result = mBoolOptionValues [index] ;
      }
      index ++ ;
    }
  }
  if (outFound != NULL) {
    * outFound = found ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              G E T    U I N T    O P T I O N S    C O U N T               *
//                                                                           *
//---------------------------------------------------------------------------*

sint32 galgas_cli_options::getUintOptionsCount (void) const {
  return 0 ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               G E T    U I N T    O P T I O N    V A L U E                *
//                                                                           *
//---------------------------------------------------------------------------*

uint32 galgas_cli_options::getUintOptionValue (const sint32 inIndex) const {
  return ((inIndex >= 0) && (inIndex < 0)) ? mUintOptionValues [inIndex] : 0 ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      G E T    U I N T    O P T I O N    D E F A U L T    V A L U E        *
//                                                                           *
//---------------------------------------------------------------------------*

uint32 galgas_cli_options::getUintOptionDefaultValue (const sint32 inIndex) const {
  static const uint32 kDefaultValues [1] = {
  0} ;
  return ((inIndex >= 0) && (inIndex < 0)) ? kDefaultValues [inIndex] : 0 ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               S E T    U I N T    O P T I O N    V A L U E                *
//                                                                           *
//---------------------------------------------------------------------------*

void galgas_cli_options::setUintOptionValue (const sint32 inIndex, const uint32 inValue) {
  if ((inIndex >= 0) && (inIndex < 0)) {
    mUintOptionValues [inIndex] = inValue ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//           G E T    U I N T    O P T I O N    C H A R A C T E R            *
//                                                                           *
//---------------------------------------------------------------------------*

char galgas_cli_options::getUintOptionChar (const sint32 inIndex) const {
  static const char kCharArray [1] = {'\0'} ;
  return ((inIndex >= 0) && (inIndex < 0)) ? kCharArray [inIndex] : '\0' ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              G E T    U I N T    O P T I O N    S T R I N G               *
//                                                                           *
//---------------------------------------------------------------------------*

const char * galgas_cli_options::getUintOptionString (const sint32 inIndex) const {
  static const char * kStringArray [1] = {""} ;
  return ((inIndex >= 0) && (inIndex < 0)) ? kStringArray [inIndex] : "" ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         G E T   U I N T    O P T I O N    D E S C R I P T I O N           *
//                                                                           *
//---------------------------------------------------------------------------*

const char * galgas_cli_options::getUintOptionDescription (const sint32 inIndex) const {
  static const char * kDescriptionArray [1] = {""} ;
  return ((inIndex >= 0) && (inIndex < 0)) ? kDescriptionArray [inIndex] : "" ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    G E T    U I N T    O P T I O N    V A L U E    F R O M    K E Y S     *
//                                                                           *
//---------------------------------------------------------------------------*

uint32 galgas_cli_options::
uintOptionValueFromKeys (const char * inModuleName,
                         const char * inOptionName,
                         bool * outFound) const {
  static const char * kKeyArray [1] = {""} ;
  uint32 result = 0 ;
  bool found = strcmp (inModuleName, "galgas_cli_options") == 0 ;
  if (found) {
    found = false ;
    sint32 index = 0 ;
    while ((index < 0) && ! found) {
      found = strcmp (inOptionName, kKeyArray [index]) == 0 ;
      if (found) {
        result = mUintOptionValues [index] ;
      }
      index ++ ;
    }
  }
  if (outFound != NULL) {
    * outFound = found ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            G E T    S T R I N G    O P T I O N S    C O U N T             *
//                                                                           *
//---------------------------------------------------------------------------*

sint32 galgas_cli_options::
getStringOptionsCount (void) const {
  return 1 ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            G E T    S T R I N G    O P T I O N S    V A L U E             *
//                                                                           *
//---------------------------------------------------------------------------*

C_String galgas_cli_options::
getStringOptionValue (const sint32 inIndex) const {
  return ((inIndex >= 0) && (inIndex < 1)) ? mStringOptionValues [inIndex] : C_String () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            S E T    S T R I N G    O P T I O N S    V A L U E             *
//                                                                           *
//---------------------------------------------------------------------------*

void galgas_cli_options::
setStringOptionValue (const sint32 inIndex, const C_String & inValue) {
  if ((inIndex >= 0) && (inIndex < 1)) {
     mStringOptionValues [inIndex] = inValue ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              G E T    S T R I N G    O P T I O N    C H A R               *
//                                                                           *
//---------------------------------------------------------------------------*

char galgas_cli_options::
getStringOptionChar (const sint32 inIndex) const {
  static const char kCharArray [2] = {'\0', '\0'} ;
  return ((inIndex >= 0) && (inIndex < 1)) ? kCharArray [inIndex] : '\0' ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            G E T    S T R I N G    O P T I O N    S T R I N G             *
//                                                                           *
//---------------------------------------------------------------------------*

const char * galgas_cli_options::
getStringOptionString (const sint32 inIndex) const {
  static const char * kStringArray [2] = {"create",
    ""} ;
  return ((inIndex >= 0) && (inIndex < 1)) ? kStringArray [inIndex] : "" ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       G E T    S T R I N G    O P T I O N    D E S C R I P T I O N        *
//                                                                           *
//---------------------------------------------------------------------------*

const char * galgas_cli_options::
getStringOptionDescription (const sint32 inIndex) const {
  static const char * kDescriptionArray [2] = {"Create a new GALGAS Project",
    ""} ;
  return ((inIndex >= 0) && (inIndex < 1)) ? kDescriptionArray [inIndex] : "" ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   G E T    S T R I N G    O P T I O N    V A L U E   F R O M   K E Y S    *
//                                                                           *
//---------------------------------------------------------------------------*

C_String galgas_cli_options::
stringOptionValueFromKeys (const char * inModuleName,
                              const char * inOptionName,
                              bool * outFound) const {
  static const char * kKeyArray [2] = {"generate_project",
    ""} ;
  C_String result ;
  bool found = strcmp (inModuleName, "galgas_cli_options") == 0 ;
  if (found) {
    found = false ;
    sint32 index = 0 ;
    while ((index < 1) && ! found) {
      found = strcmp (inOptionName, kKeyArray [index]) == 0 ;
      if (found) {
        result = mStringOptionValues [index] ;
      }
      index ++ ;
    }
  }
  if (outFound != NULL) {
    * outFound = found ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

