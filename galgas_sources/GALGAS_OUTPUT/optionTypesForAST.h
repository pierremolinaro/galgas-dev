//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'optionTypesForAST.h'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 10th, 2010, at 10h0'31"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef optionTypesForAST_DEFINED
#define optionTypesForAST_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_optionDefaultValueEnumAST ;
class GGS_commandLineOptionListAST ;
class GGS_optionComponentAST ;
class cPtr_optionComponentAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Class for 'optionDefaultValueEnumAST' Enumeration              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_optionDefaultValueEnumAST ;

//---------------------------------------------------------------------------*

class GGS_optionDefaultValueEnumAST : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_noDefaultValue, enum_stringDefaultValue, enum_unsignedDefaultValue} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_optionDefaultValueEnumAST (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_optionDefaultValueEnumAST (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_optionDefaultValueEnumAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_optionDefaultValueEnumAST  constructor_noDefaultValue (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_optionDefaultValueEnumAST (enum_noDefaultValue) ;
  }
  public : static inline GGS_optionDefaultValueEnumAST  constructor_stringDefaultValue (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_optionDefaultValueEnumAST (enum_stringDefaultValue) ;
  }
  public : static inline GGS_optionDefaultValueEnumAST  constructor_unsignedDefaultValue (C_CompilerEx & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_optionDefaultValueEnumAST (enum_unsignedDefaultValue) ;
  }

//--- Readers

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_optionDefaultValueEnumAST inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_optionDefaultValueEnumAST inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_optionDefaultValueEnumAST inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_optionDefaultValueEnumAST inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_optionDefaultValueEnumAST inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_optionDefaultValueEnumAST inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@commandLineOptionListAST'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_commandLineOptionListAST ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_commandLineOptionListAST ;

//---------------------------------------------------------------------------*

class GGS_commandLineOptionListAST : public AC_GGS_list {
  public : typedef elementOf_GGS_commandLineOptionListAST cElement ;

//--- Constructor 'emptyList'
  public : static GGS_commandLineOptionListAST constructor_emptyList (void) ;
  public : static GGS_commandLineOptionListAST constructor_listWithValue (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lchar & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_optionDefaultValueEnumAST& argument_6) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_commandLineOptionListAST & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_commandLineOptionListAST
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_commandLineOptionListAST
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_commandLineOptionListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1,
                              GGS_lchar & _out_2,
                              GGS_lstring & _out_3,
                              GGS_lstring & _out_4,
                              GGS_lstring & _out_5,
                              GGS_optionDefaultValueEnumAST& _out_6
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1,
                             GGS_lchar & _out_2,
                             GGS_lstring & _out_3,
                             GGS_lstring & _out_4,
                             GGS_lstring & _out_5,
                             GGS_optionDefaultValueEnumAST& _out_6
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1,
                                GGS_lchar & _out_2,
                                GGS_lstring & _out_3,
                                GGS_lstring & _out_4,
                                GGS_lstring & _out_5,
                                GGS_optionDefaultValueEnumAST& _out_6
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1,
                                 GGS_lchar & _out_2,
                                 GGS_lstring & _out_3,
                                 GGS_lstring & _out_4,
                                 GGS_lstring & _out_5,
                                 GGS_optionDefaultValueEnumAST& _out_6
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_commandLineOptionListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lchar & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_optionDefaultValueEnumAST& argument_6) ;
//--- Handling '.' GALGAS operator
  public : GGS_commandLineOptionListAST operator_concat (const GGS_commandLineOptionListAST & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lchar & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_optionDefaultValueEnumAST& argument_6
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lchar & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_optionDefaultValueEnumAST& argument_6
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lchar & argument_2,
                                const GGS_lstring & argument_3,
                                const GGS_lstring & argument_4,
                                const GGS_lstring & argument_5,
                                const GGS_optionDefaultValueEnumAST& argument_6
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_mOptionTypeNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mOptionInternalNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lchar 
  reader_mOptionInvocationLetterAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mOptionInvocationStringAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mOptionCommentAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring 
  reader_mOptionDefaultValueAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_optionDefaultValueEnumAST
  reader_mOptionDefaultValueKindAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMOptionTypeNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOptionInternalNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOptionInvocationLetterAtIndex (C_CompilerEx & inLexique,
                              const GGS_lchar  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOptionInvocationStringAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOptionCommentAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOptionDefaultValueAtIndex (C_CompilerEx & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMOptionDefaultValueKindAtIndex (C_CompilerEx & inLexique,
                              const GGS_optionDefaultValueEnumAST & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_commandLineOptionListAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_commandLineOptionListAST & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mOptionTypeName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mOptionInternalName (LOCATION_ARGS) const ;
    public : /* const */ GGS_lchar   & _mOptionInvocationLetter (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mOptionInvocationString (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mOptionComment (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mOptionDefaultValue (LOCATION_ARGS) const ;
    public : /* const */ GGS_optionDefaultValueEnumAST  & _mOptionDefaultValueKind (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_optionComponentAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_optionComponentAST ;

//---------------------------------------------------------------------------*

class GGS_optionComponentAST : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_optionComponentAST (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_optionComponentAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_optionComponentAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_optionComponentAST
  castFrom (C_CompilerEx & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_optionComponentAST constructor_new (C_CompilerEx & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_commandLineOptionListAST & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_optionComponentAST * getPtr (void) const {
    return (cPtr_optionComponentAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mOptionComponentName (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_commandLineOptionListAST  reader_mOptions (C_CompilerEx & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_optionComponentAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_optionComponentAST * operator () (LOCATION_ARGS) const {
      return (cPtr_optionComponentAST *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_optionComponentAST castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__optionComponentAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@commandLineOptionListAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_commandLineOptionListAST : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  mOptionTypeName ;
  public : GGS_lstring  mOptionInternalName ;
  public : GGS_lchar  mOptionInvocationLetter ;
  public : GGS_lstring  mOptionInvocationString ;
  public : GGS_lstring  mOptionComment ;
  public : GGS_lstring  mOptionDefaultValue ;
  public : GGS_optionDefaultValueEnumAST mOptionDefaultValueKind ;
//--- Constructor
  public : elementOf_GGS_commandLineOptionListAST (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lchar & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_optionDefaultValueEnumAST& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_commandLineOptionListAST * nextObject (void) const { return (elementOf_GGS_commandLineOptionListAST *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_commandLineOptionListAST * previousObject (void) const { return (elementOf_GGS_commandLineOptionListAST *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_commandLineOptionListAST ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_optionComponentAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_optionComponentAST : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_optionComponentAST (const GGS_lstring & ,
                                const GGS_commandLineOptionListAST & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  mOptionComponentName ;
  public : GGS_commandLineOptionListAST  mOptions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

#endif
