//---------------------------------------------------------------------------*
//                                                                           *
//               File 'include_typeDescriptionInExpression.h'                *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 20th, 2007, at 12h37'14"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//            abstract class 'cPtr_typeDescriptionInExpression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeDescriptionInExpression : public cPtr_typeExpression {
  private : typedef cPtr_typeExpression inherited ;
//--- START OF USER ZONE 2

  public : virtual void
  generateExpression (AC_OutputStream & inCppFile) const ;

  public : virtual bool
  isLexiqueFormalArgumentUsedForTest (void) const  ;

  public : virtual bool
  formalArgumentIsUsedForTest (const GGS_typeCplusPlusName & inArgumentCppName) const ;

  public : virtual bool 
  formalCurrentObjectArgumentIsUsedForTest (void) const ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeDescriptionInExpression (const GGS_typeExpression & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeDescriptionInExpression (void) {}
  #endif

//--- Attributes
  public : GGS_typeExpression  mExpressionValue ;
  public : GGS_location  mOperatorLocation ;
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Compiler & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (C_Compiler & inLexique,
                   const C_GGS_Object * inOperand
                   COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

