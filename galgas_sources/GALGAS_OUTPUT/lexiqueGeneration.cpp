//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'lexiqueGeneration.cpp'                        *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 26th, 2010, at 11h48'35"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "lexiqueGeneration.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "lexiqueGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//  Abstract category reader '@lexicalExpressionAST generateConditionCode'   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_lexicalExpressionAST_generateConditionCode> gCategoryReaderTable_lexicalExpressionAST_generateConditionCode ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateConditionCode (const PMSInt32 inClassIndex,
                                                categoryReaderSignature_lexicalExpressionAST_generateConditionCode inReader) {
  gCategoryReaderTable_lexicalExpressionAST_generateConditionCode.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_lexicalExpressionAST_generateConditionCode (void) {
  gCategoryReaderTable_lexicalExpressionAST_generateConditionCode.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalExpressionAST_generateConditionCode (NULL,
                                                                       freeCategoryReader_lexicalExpressionAST_generateConditionCode) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateConditionCode (const cPtr_lexicalExpressionAST * inObject,
                                                        const GALGAS_lexiqueAnalysisContext & constin_inLexiqueAnalysisContext,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_lexicalExpressionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_lexicalExpressionAST_generateConditionCode f = NULL ;
    if (classIndex < gCategoryReaderTable_lexicalExpressionAST_generateConditionCode.count ()) {
      f = gCategoryReaderTable_lexicalExpressionAST_generateConditionCode (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_lexicalExpressionAST_generateConditionCode.count ()) {
           f = gCategoryReaderTable_lexicalExpressionAST_generateConditionCode (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_lexicalExpressionAST_generateConditionCode.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, constin_inLexiqueAnalysisContext, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalOrExpressionAST generateConditionCode' *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalOrExpressionAST_generateConditionCode (const cPtr_lexicalExpressionAST * inObject,
                                                                                  const GALGAS_lexiqueAnalysisContext & inArgument_inLexiqueAnalysisContext,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalOrExpressionAST * object = (const cPtr_lexicalOrExpressionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalOrExpressionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = callCategoryReader_generateConditionCode ((const cPtr_lexicalExpressionAST *) object->mAttribute_mLeftOperand.ptr (), inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (38)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (" || ") COMMA_SOURCE_FILE_AT_LINE (39)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (callCategoryReader_generateConditionCode ((const cPtr_lexicalExpressionAST *) object->mAttribute_mRightOperand.ptr (), inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (40)) COMMA_SOURCE_FILE_AT_LINE (40)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalOrExpressionAST_generateConditionCode (void) {
  enterCategoryReader_generateConditionCode (kTypeDescriptor_GALGAS_lexicalOrExpressionAST.mSlotID,
                                             categoryReader_lexicalOrExpressionAST_generateConditionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalOrExpressionAST_generateConditionCode (defineCategoryReader_lexicalOrExpressionAST_generateConditionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalCharacterIntervalMatchAST generateConditionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalCharacterIntervalMatchAST_generateConditionCode (const cPtr_lexicalExpressionAST * inObject,
                                                                                            const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                            C_Compiler * /* inCompiler */
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalCharacterIntervalMatchAST * object = (const cPtr_lexicalCharacterIntervalMatchAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalCharacterIntervalMatchAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string::makeEmptyString () ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("testForInputUTF32CharRange (") ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (object->mAttribute_mLowerBound.reader_char (SOURCE_FILE_AT_LINE (51)).reader_utf_33__32_CharConstantRepresentation (SOURCE_FILE_AT_LINE (51)) COMMA_SOURCE_FILE_AT_LINE (51)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (52)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (object->mAttribute_mUpperBound.reader_char (SOURCE_FILE_AT_LINE (53)).reader_utf_33__32_CharConstantRepresentation (SOURCE_FILE_AT_LINE (53)) COMMA_SOURCE_FILE_AT_LINE (53)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (54)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalCharacterIntervalMatchAST_generateConditionCode (void) {
  enterCategoryReader_generateConditionCode (kTypeDescriptor_GALGAS_lexicalCharacterIntervalMatchAST.mSlotID,
                                             categoryReader_lexicalCharacterIntervalMatchAST_generateConditionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalCharacterIntervalMatchAST_generateConditionCode (defineCategoryReader_lexicalCharacterIntervalMatchAST_generateConditionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category reader '@lexicalStringMatchAST generateConditionCode' *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalStringMatchAST_generateConditionCode (const cPtr_lexicalExpressionAST * inObject,
                                                                                 const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalStringMatchAST * object = (const cPtr_lexicalStringMatchAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalStringMatchAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("testForInputUTF32String (kUnicodeString_").operator_concat (object->mAttribute_mString.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (63)) COMMA_SOURCE_FILE_AT_LINE (63)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (64)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (object->mAttribute_mString.mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (65)).reader_string (SOURCE_FILE_AT_LINE (65)) COMMA_SOURCE_FILE_AT_LINE (65)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (", true)") COMMA_SOURCE_FILE_AT_LINE (66)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalStringMatchAST_generateConditionCode (void) {
  enterCategoryReader_generateConditionCode (kTypeDescriptor_GALGAS_lexicalStringMatchAST.mSlotID,
                                             categoryReader_lexicalStringMatchAST_generateConditionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalStringMatchAST_generateConditionCode (defineCategoryReader_lexicalStringMatchAST_generateConditionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalStringNotMatchAST generateConditionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalStringNotMatchAST_generateConditionCode (const cPtr_lexicalExpressionAST * inObject,
                                                                                    const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalStringNotMatchAST * object = (const cPtr_lexicalStringNotMatchAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalStringNotMatchAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("notTestForInputUTF32String (kUnicodeString_") ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (object->mAttribute_mString.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (76)) COMMA_SOURCE_FILE_AT_LINE (76)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (77)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (object->mAttribute_mString.mAttribute_string.reader_length (SOURCE_FILE_AT_LINE (78)).reader_string (SOURCE_FILE_AT_LINE (78)) COMMA_SOURCE_FILE_AT_LINE (78)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (", gLexicalMessage_") COMMA_SOURCE_FILE_AT_LINE (79)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (object->mAttribute_mErrorMessage.reader_string (SOURCE_FILE_AT_LINE (80)) COMMA_SOURCE_FILE_AT_LINE (80)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (" COMMA_LINE_AND_SOURCE_FILE)") COMMA_SOURCE_FILE_AT_LINE (81)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalStringNotMatchAST_generateConditionCode (void) {
  enterCategoryReader_generateConditionCode (kTypeDescriptor_GALGAS_lexicalStringNotMatchAST.mSlotID,
                                             categoryReader_lexicalStringNotMatchAST_generateConditionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalStringNotMatchAST_generateConditionCode (defineCategoryReader_lexicalStringNotMatchAST_generateConditionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalCharacterMatchAST generateConditionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalCharacterMatchAST_generateConditionCode (const cPtr_lexicalExpressionAST * inObject,
                                                                                    const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalCharacterMatchAST * object = (const cPtr_lexicalCharacterMatchAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalCharacterMatchAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("testForInputUTF32Char (") ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (object->mAttribute_mCharacter.reader_char (SOURCE_FILE_AT_LINE (91)).reader_utf_33__32_CharConstantRepresentation (SOURCE_FILE_AT_LINE (91)) COMMA_SOURCE_FILE_AT_LINE (91)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (92)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalCharacterMatchAST_generateConditionCode (void) {
  enterCategoryReader_generateConditionCode (kTypeDescriptor_GALGAS_lexicalCharacterMatchAST.mSlotID,
                                             categoryReader_lexicalCharacterMatchAST_generateConditionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalCharacterMatchAST_generateConditionCode (defineCategoryReader_lexicalCharacterMatchAST_generateConditionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalCharacterSetMatchAST generateConditionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalCharacterSetMatchAST_generateConditionCode (const cPtr_lexicalExpressionAST * inObject,
                                                                                       const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalCharacterSetMatchAST * object = (const cPtr_lexicalCharacterSetMatchAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalCharacterSetMatchAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("testForCharWithFunction (") ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (object->mAttribute_mCharacterSetName.reader_string (SOURCE_FILE_AT_LINE (102)) COMMA_SOURCE_FILE_AT_LINE (102)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (103)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalCharacterSetMatchAST_generateConditionCode (void) {
  enterCategoryReader_generateConditionCode (kTypeDescriptor_GALGAS_lexicalCharacterSetMatchAST.mSlotID,
                                             categoryReader_lexicalCharacterSetMatchAST_generateConditionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalCharacterSetMatchAST_generateConditionCode (defineCategoryReader_lexicalCharacterSetMatchAST_generateConditionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category reader '@lexicalRoutineOrFunctionFormalInputArgumentAST generateRoutineOrFunctionArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument> gCategoryReaderTable_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateRoutineOrFunctionArgument (const PMSInt32 inClassIndex,
                                                            categoryReaderSignature_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument inReader) {
  gCategoryReaderTable_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument (void) {
  gCategoryReaderTable_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument (NULL,
                                                                                                             freeCategoryReader_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateRoutineOrFunctionArgument (const cPtr_lexicalRoutineOrFunctionFormalInputArgumentAST * inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_lexicalRoutineOrFunctionFormalInputArgumentAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument f = NULL ;
    if (classIndex < gCategoryReaderTable_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument.count ()) {
      f = gCategoryReaderTable_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument.count ()) {
           f = gCategoryReaderTable_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_lexicalRoutineOrFunctionFormalInputArgumentAST_generateRoutineOrFunctionArgument.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalAttributeInputArgumentAST generateRoutineOrFunctionArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalAttributeInputArgumentAST_generateRoutineOrFunctionArgument (const cPtr_lexicalRoutineOrFunctionFormalInputArgumentAST * inObject,
                                                                                                        C_Compiler * /* inCompiler */
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalAttributeInputArgumentAST * object = (const cPtr_lexicalAttributeInputArgumentAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalAttributeInputArgumentAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("token.mLexicalAttribute_").operator_concat (object->mAttribute_mAttributeName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (119)) COMMA_SOURCE_FILE_AT_LINE (119)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalAttributeInputArgumentAST_generateRoutineOrFunctionArgument (void) {
  enterCategoryReader_generateRoutineOrFunctionArgument (kTypeDescriptor_GALGAS_lexicalAttributeInputArgumentAST.mSlotID,
                                                         categoryReader_lexicalAttributeInputArgumentAST_generateRoutineOrFunctionArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalAttributeInputArgumentAST_generateRoutineOrFunctionArgument (defineCategoryReader_lexicalAttributeInputArgumentAST_generateRoutineOrFunctionArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalCharacterInputArgumentAST generateRoutineOrFunctionArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalCharacterInputArgumentAST_generateRoutineOrFunctionArgument (const cPtr_lexicalRoutineOrFunctionFormalInputArgumentAST * inObject,
                                                                                                        C_Compiler * /* inCompiler */
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalCharacterInputArgumentAST * object = (const cPtr_lexicalCharacterInputArgumentAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalCharacterInputArgumentAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = object->mAttribute_mCharacter.reader_char (SOURCE_FILE_AT_LINE (127)).reader_utf_33__32_CharConstantRepresentation (SOURCE_FILE_AT_LINE (127)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalCharacterInputArgumentAST_generateRoutineOrFunctionArgument (void) {
  enterCategoryReader_generateRoutineOrFunctionArgument (kTypeDescriptor_GALGAS_lexicalCharacterInputArgumentAST.mSlotID,
                                                         categoryReader_lexicalCharacterInputArgumentAST_generateRoutineOrFunctionArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalCharacterInputArgumentAST_generateRoutineOrFunctionArgument (defineCategoryReader_lexicalCharacterInputArgumentAST_generateRoutineOrFunctionArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalUnsignedInputArgumentAST generateRoutineOrFunctionArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalUnsignedInputArgumentAST_generateRoutineOrFunctionArgument (const cPtr_lexicalRoutineOrFunctionFormalInputArgumentAST * inObject,
                                                                                                       C_Compiler * /* inCompiler */
                                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalUnsignedInputArgumentAST * object = (const cPtr_lexicalUnsignedInputArgumentAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalUnsignedInputArgumentAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = object->mAttribute_mUnsigned.reader_uint (SOURCE_FILE_AT_LINE (135)).reader_string (SOURCE_FILE_AT_LINE (135)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalUnsignedInputArgumentAST_generateRoutineOrFunctionArgument (void) {
  enterCategoryReader_generateRoutineOrFunctionArgument (kTypeDescriptor_GALGAS_lexicalUnsignedInputArgumentAST.mSlotID,
                                                         categoryReader_lexicalUnsignedInputArgumentAST_generateRoutineOrFunctionArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalUnsignedInputArgumentAST_generateRoutineOrFunctionArgument (defineCategoryReader_lexicalUnsignedInputArgumentAST_generateRoutineOrFunctionArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalCurrentCharacterInputArgumentAST generateRoutineOrFunctionArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalCurrentCharacterInputArgumentAST_generateRoutineOrFunctionArgument (const cPtr_lexicalRoutineOrFunctionFormalInputArgumentAST * /* inObject */,
                                                                                                               C_Compiler * /* inCompiler */
                                                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("previousChar ()") ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalCurrentCharacterInputArgumentAST_generateRoutineOrFunctionArgument (void) {
  enterCategoryReader_generateRoutineOrFunctionArgument (kTypeDescriptor_GALGAS_lexicalCurrentCharacterInputArgumentAST.mSlotID,
                                                         categoryReader_lexicalCurrentCharacterInputArgumentAST_generateRoutineOrFunctionArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalCurrentCharacterInputArgumentAST_generateRoutineOrFunctionArgument (defineCategoryReader_lexicalCurrentCharacterInputArgumentAST_generateRoutineOrFunctionArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalFunctionInputArgumentAST generateRoutineOrFunctionArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalFunctionInputArgumentAST_generateRoutineOrFunctionArgument (const cPtr_lexicalRoutineOrFunctionFormalInputArgumentAST * inObject,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalFunctionInputArgumentAST * object = (const cPtr_lexicalFunctionInputArgumentAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalFunctionInputArgumentAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("::scanner_function_").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (151)) COMMA_SOURCE_FILE_AT_LINE (151)).operator_concat (GALGAS_string (" (*this") COMMA_SOURCE_FILE_AT_LINE (151)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_lexicalFunctionCallActualArgumentListAST enumerator_6491 (object->mAttribute_mFunctionActualArgumentList, true) ;
  //--- simple foreach instruction
  while (enumerator_6491.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string (", ").operator_concat (callCategoryReader_generateRoutineOrFunctionArgument ((const cPtr_lexicalRoutineOrFunctionFormalInputArgumentAST *) enumerator_6491.current_mLexicalActualInputArgument (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (153)) COMMA_SOURCE_FILE_AT_LINE (153)) COMMA_SOURCE_FILE_AT_LINE (153)) ;
    enumerator_6491.gotoNextObject () ;
  }
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (155)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalFunctionInputArgumentAST_generateRoutineOrFunctionArgument (void) {
  enterCategoryReader_generateRoutineOrFunctionArgument (kTypeDescriptor_GALGAS_lexicalFunctionInputArgumentAST.mSlotID,
                                                         categoryReader_lexicalFunctionInputArgumentAST_generateRoutineOrFunctionArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalFunctionInputArgumentAST_generateRoutineOrFunctionArgument (defineCategoryReader_lexicalFunctionInputArgumentAST_generateRoutineOrFunctionArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category reader '@abstractLexicalRoutineActualArgumentAST generateRoutineArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument> gCategoryReaderTable_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateRoutineArgument (const PMSInt32 inClassIndex,
                                                  categoryReaderSignature_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument inReader) {
  gCategoryReaderTable_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument (void) {
  gCategoryReaderTable_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument (NULL,
                                                                                            freeCategoryReader_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateRoutineArgument (const cPtr_abstractLexicalRoutineActualArgumentAST * inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractLexicalRoutineActualArgumentAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument.count ()) {
      f = gCategoryReaderTable_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument.count ()) {
           f = gCategoryReaderTable_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractLexicalRoutineActualArgumentAST_generateRoutineArgument.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalAttributeInputOutputArgumentAST generateRoutineArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalAttributeInputOutputArgumentAST_generateRoutineArgument (const cPtr_abstractLexicalRoutineActualArgumentAST * inObject,
                                                                                                    C_Compiler * /* inCompiler */
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalAttributeInputOutputArgumentAST * object = (const cPtr_lexicalAttributeInputOutputArgumentAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalAttributeInputOutputArgumentAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("token.mLexicalAttribute_").operator_concat (object->mAttribute_mAttributeName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (171)) COMMA_SOURCE_FILE_AT_LINE (171)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalAttributeInputOutputArgumentAST_generateRoutineArgument (void) {
  enterCategoryReader_generateRoutineArgument (kTypeDescriptor_GALGAS_lexicalAttributeInputOutputArgumentAST.mSlotID,
                                               categoryReader_lexicalAttributeInputOutputArgumentAST_generateRoutineArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalAttributeInputOutputArgumentAST_generateRoutineArgument (defineCategoryReader_lexicalAttributeInputOutputArgumentAST_generateRoutineArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalFormalInputArgumentAST generateRoutineArgument'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalFormalInputArgumentAST_generateRoutineArgument (const cPtr_abstractLexicalRoutineActualArgumentAST * inObject,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalFormalInputArgumentAST * object = (const cPtr_lexicalFormalInputArgumentAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalFormalInputArgumentAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = callCategoryReader_generateRoutineOrFunctionArgument ((const cPtr_lexicalRoutineOrFunctionFormalInputArgumentAST *) object->mAttribute_mRoutineOrFunctionFormalInputArgument.ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (179)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalFormalInputArgumentAST_generateRoutineArgument (void) {
  enterCategoryReader_generateRoutineArgument (kTypeDescriptor_GALGAS_lexicalFormalInputArgumentAST.mSlotID,
                                               categoryReader_lexicalFormalInputArgumentAST_generateRoutineArgument) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalFormalInputArgumentAST_generateRoutineArgument (defineCategoryReader_lexicalFormalInputArgumentAST_generateRoutineArgument, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category reader '@lexicalSendDefaultActionAST generateDefaultSendCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_lexicalSendDefaultActionAST_generateDefaultSendCode> gCategoryReaderTable_lexicalSendDefaultActionAST_generateDefaultSendCode ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateDefaultSendCode (const PMSInt32 inClassIndex,
                                                  categoryReaderSignature_lexicalSendDefaultActionAST_generateDefaultSendCode inReader) {
  gCategoryReaderTable_lexicalSendDefaultActionAST_generateDefaultSendCode.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_lexicalSendDefaultActionAST_generateDefaultSendCode (void) {
  gCategoryReaderTable_lexicalSendDefaultActionAST_generateDefaultSendCode.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalSendDefaultActionAST_generateDefaultSendCode (NULL,
                                                                                freeCategoryReader_lexicalSendDefaultActionAST_generateDefaultSendCode) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateDefaultSendCode (const cPtr_lexicalSendDefaultActionAST * inObject,
                                                          const GALGAS_string & constin_inScannerClassName,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_lexicalSendDefaultActionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_lexicalSendDefaultActionAST_generateDefaultSendCode f = NULL ;
    if (classIndex < gCategoryReaderTable_lexicalSendDefaultActionAST_generateDefaultSendCode.count ()) {
      f = gCategoryReaderTable_lexicalSendDefaultActionAST_generateDefaultSendCode (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_lexicalSendDefaultActionAST_generateDefaultSendCode.count ()) {
           f = gCategoryReaderTable_lexicalSendDefaultActionAST_generateDefaultSendCode (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_lexicalSendDefaultActionAST_generateDefaultSendCode.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, constin_inScannerClassName, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalSendTerminalByDefaultAST generateDefaultSendCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalSendTerminalByDefaultAST_generateDefaultSendCode (const cPtr_lexicalSendDefaultActionAST * inObject,
                                                                                             const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                             C_Compiler * /* inCompiler */
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalSendTerminalByDefaultAST * object = (const cPtr_lexicalSendTerminalByDefaultAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalSendTerminalByDefaultAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("token.mTokenCode = kToken_").operator_concat (object->mAttribute_mDefaultSentTerminal.reader_string (SOURCE_FILE_AT_LINE (197)) COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string (" ;\n") COMMA_SOURCE_FILE_AT_LINE (197)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalSendTerminalByDefaultAST_generateDefaultSendCode (void) {
  enterCategoryReader_generateDefaultSendCode (kTypeDescriptor_GALGAS_lexicalSendTerminalByDefaultAST.mSlotID,
                                               categoryReader_lexicalSendTerminalByDefaultAST_generateDefaultSendCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalSendTerminalByDefaultAST_generateDefaultSendCode (defineCategoryReader_lexicalSendTerminalByDefaultAST_generateDefaultSendCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalErrorByDefaultAST generateDefaultSendCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalErrorByDefaultAST_generateDefaultSendCode (const cPtr_lexicalSendDefaultActionAST * inObject,
                                                                                      const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalErrorByDefaultAST * object = (const cPtr_lexicalErrorByDefaultAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalErrorByDefaultAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("lexicalError (gLexicalMessage_").operator_concat (object->mAttribute_mDefaultErrorMessageName.reader_string (SOURCE_FILE_AT_LINE (206)) COMMA_SOURCE_FILE_AT_LINE (206)).operator_concat (GALGAS_string (" COMMA_LINE_AND_SOURCE_FILE) ;\n") COMMA_SOURCE_FILE_AT_LINE (206)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalErrorByDefaultAST_generateDefaultSendCode (void) {
  enterCategoryReader_generateDefaultSendCode (kTypeDescriptor_GALGAS_lexicalErrorByDefaultAST.mSlotID,
                                               categoryReader_lexicalErrorByDefaultAST_generateDefaultSendCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalErrorByDefaultAST_generateDefaultSendCode (defineCategoryReader_lexicalErrorByDefaultAST_generateDefaultSendCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Abstract category reader '@lexicalInstructionAST generateInstructionCode' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_lexicalInstructionAST_generateInstructionCode> gCategoryReaderTable_lexicalInstructionAST_generateInstructionCode ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateInstructionCode (const PMSInt32 inClassIndex,
                                                  categoryReaderSignature_lexicalInstructionAST_generateInstructionCode inReader) {
  gCategoryReaderTable_lexicalInstructionAST_generateInstructionCode.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_lexicalInstructionAST_generateInstructionCode (void) {
  gCategoryReaderTable_lexicalInstructionAST_generateInstructionCode.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalInstructionAST_generateInstructionCode (NULL,
                                                                          freeCategoryReader_lexicalInstructionAST_generateInstructionCode) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                          const GALGAS_string & constin_inScannerClassName,
                                                          const GALGAS_lexiqueAnalysisContext & constin_inLexiqueAnalysisContext,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_lexicalInstructionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_lexicalInstructionAST_generateInstructionCode f = NULL ;
    if (classIndex < gCategoryReaderTable_lexicalInstructionAST_generateInstructionCode.count ()) {
      f = gCategoryReaderTable_lexicalInstructionAST_generateInstructionCode (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_lexicalInstructionAST_generateInstructionCode.count ()) {
           f = gCategoryReaderTable_lexicalInstructionAST_generateInstructionCode (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_lexicalInstructionAST_generateInstructionCode.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, constin_inScannerClassName, constin_inLexiqueAnalysisContext, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalStructuredSendInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalStructuredSendInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                                                                 const GALGAS_string & inArgument_inScannerClassName,
                                                                                                 const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalStructuredSendInstructionAST * object = (const cPtr_lexicalStructuredSendInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalStructuredSendInstructionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_lexicalSendSearchListAST enumerator_9378 (object->mAttribute_mLexicalSendSearchList, true) ;
  //--- simple foreach instruction
  while (enumerator_9378.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("if (token.mTokenCode == -1) {\n") COMMA_SOURCE_FILE_AT_LINE (228)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("  token.mTokenCode = search_into_").operator_concat (enumerator_9378.current_mSearchListName (HERE).reader_string (SOURCE_FILE_AT_LINE (229)) COMMA_SOURCE_FILE_AT_LINE (229)).operator_concat (GALGAS_string (" (token.mLexicalAttribute_") COMMA_SOURCE_FILE_AT_LINE (229)).operator_concat (enumerator_9378.current_mAttributeName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (229)) COMMA_SOURCE_FILE_AT_LINE (229)).operator_concat (GALGAS_string (") ;\n") COMMA_SOURCE_FILE_AT_LINE (229)) COMMA_SOURCE_FILE_AT_LINE (229)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (230)) ;
    enumerator_9378.gotoNextObject () ;
  }
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("if (token.mTokenCode == -1) {\n") COMMA_SOURCE_FILE_AT_LINE (232)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("  ").operator_concat (callCategoryReader_generateDefaultSendCode ((const cPtr_lexicalSendDefaultActionAST *) object->mAttribute_mLexicalSendDefaultAction.ptr (), inArgument_inScannerClassName, inCompiler COMMA_SOURCE_FILE_AT_LINE (233)) COMMA_SOURCE_FILE_AT_LINE (233)) COMMA_SOURCE_FILE_AT_LINE (233)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (234)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("enterToken (token) ;\n") COMMA_SOURCE_FILE_AT_LINE (235)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalStructuredSendInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalStructuredSendInstructionAST.mSlotID,
                                               categoryReader_lexicalStructuredSendInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalStructuredSendInstructionAST_generateInstructionCode (defineCategoryReader_lexicalStructuredSendInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalSimpleSendInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalSimpleSendInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                                                             const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                             const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                             C_Compiler * /* inCompiler */
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalSimpleSendInstructionAST * object = (const cPtr_lexicalSimpleSendInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalSimpleSendInstructionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("token.mTokenCode = kToken_").operator_concat (object->mAttribute_mSentTerminal.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (245)) COMMA_SOURCE_FILE_AT_LINE (245)).operator_concat (GALGAS_string (" ;\n") COMMA_SOURCE_FILE_AT_LINE (245)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("enterToken (token) ;\n") COMMA_SOURCE_FILE_AT_LINE (246)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalSimpleSendInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalSimpleSendInstructionAST.mSlotID,
                                               categoryReader_lexicalSimpleSendInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalSimpleSendInstructionAST_generateInstructionCode (defineCategoryReader_lexicalSimpleSendInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalRepeatInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalRepeatInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                                                         const GALGAS_string & inArgument_inScannerClassName,
                                                                                         const GALGAS_lexiqueAnalysisContext & inArgument_inLexiqueAnalysisContext,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalRepeatInstructionAST * object = (const cPtr_lexicalRepeatInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalRepeatInstructionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("do {\n") ;
  { //-------- @modifierCallInstructionForGeneration
  result_string.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (257)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @foreachInstructionForGeneration
  cEnumerator_lexicalInstructionListAST enumerator_10755 (object->mAttribute_mRepeatedInstructionList, true) ;
  //--- simple foreach instruction
  while (enumerator_10755.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (callCategoryReader_generateInstructionCode ((const cPtr_lexicalInstructionAST *) enumerator_10755.current_mInstruction (HERE).ptr (), inArgument_inScannerClassName, inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (260)) COMMA_SOURCE_FILE_AT_LINE (260)) ;
    enumerator_10755.gotoNextObject () ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_lexicalWhileBranchListAST enumerator_10926 (object->mAttribute_mLexicalWhileBranchList, true) ;
  //--- simple foreach instruction
  while (enumerator_10926.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("if (") COMMA_SOURCE_FILE_AT_LINE (265)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (callCategoryReader_generateConditionCode ((const cPtr_lexicalExpressionAST *) enumerator_10926.current_mWhileExpression (HERE).ptr (), inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (266)) COMMA_SOURCE_FILE_AT_LINE (266)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string (") {\n") COMMA_SOURCE_FILE_AT_LINE (267)) ;
    { //-------- @modifierCallInstructionForGeneration
    result_string.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (268)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @foreachInstructionForGeneration
    cEnumerator_lexicalInstructionListAST enumerator_11168 (enumerator_10926.current_mWhileInstructionList (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_11168.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      result_string.dotAssign_operation (callCategoryReader_generateInstructionCode ((const cPtr_lexicalInstructionAST *) enumerator_11168.current_mInstruction (HERE).ptr (), inArgument_inScannerClassName, inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (270)) COMMA_SOURCE_FILE_AT_LINE (270)) ;
      enumerator_11168.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    result_string.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (272)) ;
    } //-------- END @typeMethodInstructionForGeneration
    if (enumerator_10926.hasNextObject ()) {
      //-------- @appendInstructionForGeneration
      result_string.dotAssign_operation (GALGAS_string ("}else ") COMMA_SOURCE_FILE_AT_LINE (274)) ;
    }
    enumerator_10926.gotoNextObject () ;
  }
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("}else{\n"
    "  mLoop = false ;\n"
    "}\n") COMMA_SOURCE_FILE_AT_LINE (276)) ;
  { //-------- @modifierCallInstructionForGeneration
  result_string.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (279)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("}while (mLoop) ;\n"
    "mLoop = true ;\n") COMMA_SOURCE_FILE_AT_LINE (280)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalRepeatInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalRepeatInstructionAST.mSlotID,
                                               categoryReader_lexicalRepeatInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalRepeatInstructionAST_generateInstructionCode (defineCategoryReader_lexicalRepeatInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalSelectInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalSelectInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                                                         const GALGAS_string & inArgument_inScannerClassName,
                                                                                         const GALGAS_lexiqueAnalysisContext & inArgument_inLexiqueAnalysisContext,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalSelectInstructionAST * object = (const cPtr_lexicalSelectInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalSelectInstructionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_lexicalSelectBranchListAST enumerator_11989 (object->mAttribute_mLexicalSelectBranchList, true) ;
  //--- simple foreach instruction
  while (enumerator_11989.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("if (") COMMA_SOURCE_FILE_AT_LINE (295)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (callCategoryReader_generateConditionCode ((const cPtr_lexicalExpressionAST *) enumerator_11989.current_mSelectExpression (HERE).ptr (), inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (296)) COMMA_SOURCE_FILE_AT_LINE (296)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string (") {\n") COMMA_SOURCE_FILE_AT_LINE (297)) ;
    { //-------- @modifierCallInstructionForGeneration
    result_string.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (298)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @foreachInstructionForGeneration
    cEnumerator_lexicalInstructionListAST enumerator_12233 (enumerator_11989.current_mSelectInstructionList (HERE), true) ;
    //--- simple foreach instruction
    while (enumerator_12233.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      result_string.dotAssign_operation (callCategoryReader_generateInstructionCode ((const cPtr_lexicalInstructionAST *) enumerator_12233.current_mInstruction (HERE).ptr (), inArgument_inScannerClassName, inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (300)) COMMA_SOURCE_FILE_AT_LINE (300)) ;
      enumerator_12233.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    result_string.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (302)) ;
    } //-------- END @typeMethodInstructionForGeneration
    if (enumerator_11989.hasNextObject ()) {
      //-------- @appendInstructionForGeneration
      result_string.dotAssign_operation (GALGAS_string ("}else ") COMMA_SOURCE_FILE_AT_LINE (304)) ;
    }
    enumerator_11989.gotoNextObject () ;
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsStrictSup, object->mAttribute_mDefaultInstructionList.reader_length (SOURCE_FILE_AT_LINE (307)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("}else{\n") COMMA_SOURCE_FILE_AT_LINE (308)) ;
    { //-------- @modifierCallInstructionForGeneration
    result_string.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (309)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @foreachInstructionForGeneration
    cEnumerator_lexicalInstructionListAST enumerator_12658 (object->mAttribute_mDefaultInstructionList, true) ;
    //--- simple foreach instruction
    while (enumerator_12658.hasCurrentObject ()) {
      //-------- @appendInstructionForGeneration
      result_string.dotAssign_operation (callCategoryReader_generateInstructionCode ((const cPtr_lexicalInstructionAST *) enumerator_12658.current_mInstruction (HERE).ptr (), inArgument_inScannerClassName, inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (311)) COMMA_SOURCE_FILE_AT_LINE (311)) ;
      enumerator_12658.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    result_string.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (313)) ;
    } //-------- END @typeMethodInstructionForGeneration
  }
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("}\n") COMMA_SOURCE_FILE_AT_LINE (315)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalSelectInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalSelectInstructionAST.mSlotID,
                                               categoryReader_lexicalSelectInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalSelectInstructionAST_generateInstructionCode (defineCategoryReader_lexicalSelectInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalRoutineInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalRoutineInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                                                          const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                          const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalRoutineInstructionAST * object = (const cPtr_lexicalRoutineInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalRoutineInstructionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("::scanner_routine_").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (325)) COMMA_SOURCE_FILE_AT_LINE (325)).operator_concat (GALGAS_string (" (*this") COMMA_SOURCE_FILE_AT_LINE (325)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_lexicalRoutineCallActualArgumentListAST enumerator_13271 (object->mAttribute_mActualArgumentList, true) ;
  //--- simple foreach instruction
  while (enumerator_13271.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string (", ").operator_concat (callCategoryReader_generateRoutineArgument ((const cPtr_abstractLexicalRoutineActualArgumentAST *) enumerator_13271.current_mLexicalRoutineActualArgument (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (327)) COMMA_SOURCE_FILE_AT_LINE (327)) COMMA_SOURCE_FILE_AT_LINE (327)) ;
    enumerator_13271.gotoNextObject () ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_lstringlist enumerator_13407 (object->mAttribute_mErrorMessageList, true) ;
  //--- simple foreach instruction
  while (enumerator_13407.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string (", gLexicalMessage_").operator_concat (enumerator_13407.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (330)) COMMA_SOURCE_FILE_AT_LINE (330)) COMMA_SOURCE_FILE_AT_LINE (330)) ;
    enumerator_13407.gotoNextObject () ;
  }
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (") ;\n") COMMA_SOURCE_FILE_AT_LINE (332)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalRoutineInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalRoutineInstructionAST.mSlotID,
                                               categoryReader_lexicalRoutineInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalRoutineInstructionAST_generateInstructionCode (defineCategoryReader_lexicalRoutineInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalDropInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalDropInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * /* inObject */,
                                                                                       const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                       const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string::makeEmptyString () ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalDropInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalDropInstructionAST.mSlotID,
                                               categoryReader_lexicalDropInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalDropInstructionAST_generateInstructionCode (defineCategoryReader_lexicalDropInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalErrorInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalErrorInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                                                        const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                        const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalErrorInstructionAST * object = (const cPtr_lexicalErrorInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalErrorInstructionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("lexicalError (gLexicalMessage_").operator_concat (object->mAttribute_mErrorMessageName.reader_string (SOURCE_FILE_AT_LINE (352)) COMMA_SOURCE_FILE_AT_LINE (352)).operator_concat (GALGAS_string (" COMMA_LINE_AND_SOURCE_FILE) ;\n") COMMA_SOURCE_FILE_AT_LINE (352)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalErrorInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalErrorInstructionAST.mSlotID,
                                               categoryReader_lexicalErrorInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalErrorInstructionAST_generateInstructionCode (defineCategoryReader_lexicalErrorInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalWarningInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalWarningInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                                                          const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                          const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalWarningInstructionAST * object = (const cPtr_lexicalWarningInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalWarningInstructionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("lexicalWarning (gLexicalMessage_").operator_concat (object->mAttribute_mWarningMessageName.reader_string (SOURCE_FILE_AT_LINE (362)) COMMA_SOURCE_FILE_AT_LINE (362)).operator_concat (GALGAS_string (" COMMA_LINE_AND_SOURCE_FILE) ;\n") COMMA_SOURCE_FILE_AT_LINE (362)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalWarningInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalWarningInstructionAST.mSlotID,
                                               categoryReader_lexicalWarningInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalWarningInstructionAST_generateInstructionCode (defineCategoryReader_lexicalWarningInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalTagInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalTagInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                                                      const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                      const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalTagInstructionAST * object = (const cPtr_lexicalTagInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalTagInstructionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("const C_LocationInSource locationForTag_").operator_concat (object->mAttribute_mLexicalTagName.reader_string (SOURCE_FILE_AT_LINE (372)) COMMA_SOURCE_FILE_AT_LINE (372)).operator_concat (GALGAS_string (" = mCurrentLocation ;\n") COMMA_SOURCE_FILE_AT_LINE (372)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalTagInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalTagInstructionAST.mSlotID,
                                               categoryReader_lexicalTagInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalTagInstructionAST_generateInstructionCode (defineCategoryReader_lexicalTagInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalRewindInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalRewindInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * inObject,
                                                                                         const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                         const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalRewindInstructionAST * object = (const cPtr_lexicalRewindInstructionAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalRewindInstructionAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("mCurrentLocation = locationForTag_").operator_concat (object->mAttribute_mLexicalTagName.reader_string (SOURCE_FILE_AT_LINE (382)) COMMA_SOURCE_FILE_AT_LINE (382)).operator_concat (GALGAS_string (" ;\n") COMMA_SOURCE_FILE_AT_LINE (382)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("token.mTokenCode = kToken_").operator_concat (object->mAttribute_mTerminalName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (383)) COMMA_SOURCE_FILE_AT_LINE (383)).operator_concat (GALGAS_string (" ;\n") COMMA_SOURCE_FILE_AT_LINE (383)) COMMA_SOURCE_FILE_AT_LINE (383)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("enterToken (token) ;\n") COMMA_SOURCE_FILE_AT_LINE (384)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalRewindInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalRewindInstructionAST.mSlotID,
                                               categoryReader_lexicalRewindInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalRewindInstructionAST_generateInstructionCode (defineCategoryReader_lexicalRewindInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@lexicalLogInstructionAST generateInstructionCode'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalLogInstructionAST_generateInstructionCode (const cPtr_lexicalInstructionAST * /* inObject */,
                                                                                      const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                                      const GALGAS_lexiqueAnalysisContext & /* inArgument_inLexiqueAnalysisContext */,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("lexicalLog (LINE_AND_SOURCE_FILE) ;\n") ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalLogInstructionAST_generateInstructionCode (void) {
  enterCategoryReader_generateInstructionCode (kTypeDescriptor_GALGAS_lexicalLogInstructionAST.mSlotID,
                                               categoryReader_lexicalLogInstructionAST_generateInstructionCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalLogInstructionAST_generateInstructionCode (defineCategoryReader_lexicalLogInstructionAST_generateInstructionCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Abstract category reader '@abstractLexicalRuleAST generateCode'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractLexicalRuleAST_generateCode> gCategoryReaderTable_abstractLexicalRuleAST_generateCode ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateCode (const PMSInt32 inClassIndex,
                                       categoryReaderSignature_abstractLexicalRuleAST_generateCode inReader) {
  gCategoryReaderTable_abstractLexicalRuleAST_generateCode.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_abstractLexicalRuleAST_generateCode (void) {
  gCategoryReaderTable_abstractLexicalRuleAST_generateCode.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractLexicalRuleAST_generateCode (NULL,
                                                                freeCategoryReader_abstractLexicalRuleAST_generateCode) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateCode (const cPtr_abstractLexicalRuleAST * inObject,
                                               const GALGAS_string & constin_inScannerClassName,
                                               const GALGAS_lexiqueAnalysisContext & constin_inLexiqueAnalysisContext,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractLexicalRuleAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_abstractLexicalRuleAST_generateCode f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractLexicalRuleAST_generateCode.count ()) {
      f = gCategoryReaderTable_abstractLexicalRuleAST_generateCode (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractLexicalRuleAST_generateCode.count ()) {
           f = gCategoryReaderTable_abstractLexicalRuleAST_generateCode (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractLexicalRuleAST_generateCode.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, constin_inScannerClassName, constin_inLexiqueAnalysisContext, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@lexicalImplicitRuleAST generateCode'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalImplicitRuleAST_generateCode (const cPtr_abstractLexicalRuleAST * inObject,
                                                                         const GALGAS_string & /* inArgument_inScannerClassName */,
                                                                         const GALGAS_lexiqueAnalysisContext & inArgument_inLexiqueAnalysisContext,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalImplicitRuleAST * object = (const cPtr_lexicalImplicitRuleAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalImplicitRuleAST) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_tokenSortedlist var_tokenSortedList ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_lexicalExplicitTokenListMap joker_16730_0 ; // Joker input parameter
  GALGAS_bool joker_16750_0 ; // Joker input parameter
  inArgument_inLexiqueAnalysisContext.reader_mLexicalTokenListMap (SOURCE_FILE_AT_LINE (415)).method_searchKey (object->mAttribute_mListName, joker_16730_0, var_tokenSortedList, joker_16750_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (415)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_tokenSortedlist enumerator_16811 (var_tokenSortedList, false) ;
  //--- simple foreach instruction
  while (enumerator_16811.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("if (testForInputUTF32String (kUnicodeString_") COMMA_SOURCE_FILE_AT_LINE (418)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (enumerator_16811.current_mName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (419)) COMMA_SOURCE_FILE_AT_LINE (419)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (420)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (enumerator_16811.current_mName (HERE).reader_length (SOURCE_FILE_AT_LINE (421)).reader_string (SOURCE_FILE_AT_LINE (421)) COMMA_SOURCE_FILE_AT_LINE (421)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string (", true)) {\n") COMMA_SOURCE_FILE_AT_LINE (422)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("  token.mTokenCode = kToken_").operator_concat (enumerator_16811.current_mTerminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (423)) COMMA_SOURCE_FILE_AT_LINE (423)).operator_concat (GALGAS_string (" ;\n") COMMA_SOURCE_FILE_AT_LINE (423)) COMMA_SOURCE_FILE_AT_LINE (423)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("  enterToken (token) ;\n") COMMA_SOURCE_FILE_AT_LINE (424)) ;
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (GALGAS_string ("}else ") COMMA_SOURCE_FILE_AT_LINE (425)) ;
    enumerator_16811.gotoNextObject () ;
  }
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalImplicitRuleAST_generateCode (void) {
  enterCategoryReader_generateCode (kTypeDescriptor_GALGAS_lexicalImplicitRuleAST.mSlotID,
                                    categoryReader_lexicalImplicitRuleAST_generateCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalImplicitRuleAST_generateCode (defineCategoryReader_lexicalImplicitRuleAST_generateCode, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@lexicalExplicitRuleAST generateCode'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_lexicalExplicitRuleAST_generateCode (const cPtr_abstractLexicalRuleAST * inObject,
                                                                         const GALGAS_string & inArgument_inScannerClassName,
                                                                         const GALGAS_lexiqueAnalysisContext & inArgument_inLexiqueAnalysisContext,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_string ; // Returned variable
  const cPtr_lexicalExplicitRuleAST * object = (const cPtr_lexicalExplicitRuleAST *) inObject ;
  macroValidSharedObject (object, const cPtr_lexicalExplicitRuleAST) ;
  //-------- @assignmentInstructionForGeneration
  result_string = GALGAS_string ("if (") ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (callCategoryReader_generateConditionCode ((const cPtr_lexicalExpressionAST *) object->mAttribute_mLexicalRuleExpression.ptr (), inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (437)) COMMA_SOURCE_FILE_AT_LINE (437)) ;
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string (") {\n") COMMA_SOURCE_FILE_AT_LINE (438)) ;
  { //-------- @modifierCallInstructionForGeneration
  result_string.modifier_incIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (439)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @foreachInstructionForGeneration
  cEnumerator_lexicalInstructionListAST enumerator_17771 (object->mAttribute_mInstructionList, true) ;
  //--- simple foreach instruction
  while (enumerator_17771.hasCurrentObject ()) {
    //-------- @appendInstructionForGeneration
    result_string.dotAssign_operation (callCategoryReader_generateInstructionCode ((const cPtr_lexicalInstructionAST *) enumerator_17771.current_mInstruction (HERE).ptr (), inArgument_inScannerClassName, inArgument_inLexiqueAnalysisContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (441)) COMMA_SOURCE_FILE_AT_LINE (441)) ;
    enumerator_17771.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  result_string.modifier_decIndentation (GALGAS_uint ((PMUInt32) 2U), inCompiler COMMA_SOURCE_FILE_AT_LINE (443)) ;
  } //-------- END @typeMethodInstructionForGeneration
  //-------- @appendInstructionForGeneration
  result_string.dotAssign_operation (GALGAS_string ("}else ") COMMA_SOURCE_FILE_AT_LINE (444)) ;
//---
  return result_string ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_lexicalExplicitRuleAST_generateCode (void) {
  enterCategoryReader_generateCode (kTypeDescriptor_GALGAS_lexicalExplicitRuleAST.mSlotID,
                                    categoryReader_lexicalExplicitRuleAST_generateCode) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_lexicalExplicitRuleAST_generateCode (defineCategoryReader_lexicalExplicitRuleAST_generateCode, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


