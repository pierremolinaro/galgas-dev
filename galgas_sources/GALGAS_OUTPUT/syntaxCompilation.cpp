//-----------------------------------------------------------------------------*
//                                                                             *
//                        File 'syntaxCompilation.cpp'                         *
//                         Generated by version 2.6.0                          *
//                       july 15th, 2014, at 19h26'52"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "syntaxCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//                   Routine 'compileSyntaxComponentFromAST'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromAST (const GALGAS_lstring constinArgument_inSourceFile,
                                            const GALGAS_string constinArgument_inOutputDirectory,
                                            const GALGAS_galgas_33_SyntaxComponentListAST_2E_element constinArgument_inSyntaxComponentRoot,
                                            GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 36)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 36)) ;
  GALGAS_lstring var_componentName = constinArgument_inSyntaxComponentRoot.reader_mSyntaxComponentName (SOURCE_FILE ("syntaxCompilation.gSemantics", 38)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 39)).objectCompare (var_basename)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (var_componentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("GALGAS checks the component name ('").operator_concat (var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 41))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 41)).operator_concat (GALGAS_string ("') against the source file base name ('")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 41)).operator_concat (var_basename  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 42)).operator_concat (GALGAS_string ("'): they should be identical")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 42))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 40)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 46)) ;
  GALGAS_stringset var_parsedFileSet = GALGAS_stringset::constructor_setWithString (constinArgument_inSourceFile.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 47)) COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 47)) ;
  GALGAS_lstringlist var_optionComponentFileNameList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 48)) ;
  GALGAS_grammarComponentASTList var_grammarComponentASTList = GALGAS_grammarComponentASTList::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 49)) ;
  GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 50)) ;
  GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 51)) ;
  {
  routine_recursivelyImportSemanticComponentAndCheckNoCircularityInImportSemantics (constinArgument_inSourceFile, ioArgument_ioParsedComponentStruct, var_optionComponentFileNameList, var_grammarComponentASTList, var_semanticDeclarationList, var_parsedFileSet, var_headerIncludeList, var_implementationIncludeList, constinArgument_inSyntaxComponentRoot.reader_mImportedComponentFileNameList (SOURCE_FILE ("syntaxCompilation.gSemantics", 61)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 62)), inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 52)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = var_semanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 66)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildSemanticContext (constinArgument_inSourceFile.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 70)), var_semanticDeclarationListWithPredefinedTypes, constinArgument_inSyntaxComponentRoot.reader_mEndOfSourceFile (SOURCE_FILE ("syntaxCompilation.gSemantics", 72)), var_semanticContext, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 69)) ;
  }
  {
  routine_buildGrammarComponentMapForSemanticAnalysis (var_grammarComponentASTList, var_semanticContext, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 76)) ;
  }
  {
  routine_buildOptionComponentMapForSemanticAnalysis (var_optionComponentFileNameList, ioArgument_ioParsedComponentStruct, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 81)) ;
  }
  GALGAS_lexiqueComponentMapForSemanticAnalysis var_lexiqueMap ;
  {
  routine_buildLexiqueComponentMapForSemanticAnalysis (ioArgument_ioParsedComponentStruct, var_lexiqueMap, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 87)) ;
  }
  var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis = var_lexiqueMap ;
  GALGAS_lstring var_lexiqueFilePath = GALGAS_lstring::constructor_new (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 94)).mAttribute_string.reader_absolutePathFromPath (constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 94)) COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 94)), constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 95)).reader_location (SOURCE_FILE ("syntaxCompilation.gSemantics", 95))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 93)) ;
  GALGAS_galgas_33_LexiqueComponentListAST_2E_element var_lexiqueComponentRoot ;
  {
  routine_parseLexiqueComponent (var_lexiqueFilePath, ioArgument_ioParsedComponentStruct, var_lexiqueComponentRoot, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 98)) ;
  }
  GALGAS_terminalMap var_terminalMap ;
  {
  routine_buildTerminalMap (var_lexiqueComponentRoot, var_terminalMap, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 105)) ;
  }
  GALGAS_stringset var_indexNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 107)) ;
  cEnumerator_indexingListAST enumerator_5202 (var_lexiqueComponentRoot.reader_mIndexingListAST (SOURCE_FILE ("syntaxCompilation.gSemantics", 108)), kEnumeration_up) ;
  while (enumerator_5202.hasCurrentObject ()) {
    var_indexNameSet.addAssign_operation (enumerator_5202.current_mIndexName (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 109))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 109)) ;
    enumerator_5202.gotoNextObject () ;
  }
  GALGAS_bool var_hasIndexing = var_lexiqueComponentRoot.reader_mIndexingDirectory (SOURCE_FILE ("syntaxCompilation.gSemantics", 111)).mAttribute_location.reader_isNowhere (SOURCE_FILE ("syntaxCompilation.gSemantics", 111)).operator_not (SOURCE_FILE ("syntaxCompilation.gSemantics", 111)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 113)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_string var_lexiqueName = constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 114)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 114)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 114)) ;
    GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (var_semanticContext, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 116)) ;
    GALGAS_syntaxDeclarationForGeneration var_syntaxDeclarationForGeneration ;
    {
    routine_semanticAnalysisOfSyntaxComponent (constinArgument_inSyntaxComponentRoot.reader_mNonterminalDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 119)), constinArgument_inSyntaxComponentRoot.reader_mRuleList (SOURCE_FILE ("syntaxCompilation.gSemantics", 120)), var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 121)), var_lexiqueName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 122)), var_semanticContext, var_predefinedTypes, var_terminalMap, var_indexNameSet, var_hasIndexing, constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_syntaxDeclarationForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 118)) ;
    }
    {
    routine_performSemanticAnalysis (constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 133)), var_semanticContext, var_decoratedDeclarationListForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 132)) ;
    }
    var_decoratedDeclarationListForGeneration.addAssign_operation (var_syntaxDeclarationForGeneration, GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 137)) ;
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 143)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeader (inCompiler, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 145)), var_lexiqueName, var_headerIncludeList, var_semanticContext.mAttribute_mTypeMap.reader_allKeyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 148)) COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 144))) ;
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_6897 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_6897.hasCurrentObject ()) {
        GALGAS_stringset var_unusedInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 151)) ;
        GALGAS_string var_code ;
        callCategoryMethod_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_6897.current_mDeclaration (HERE).ptr (), var_unusedInclusionSet, var_code, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 152)) ;
        var_headerString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 153)) ;
        enumerator_6897.gotoNextObject () ;
      }
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_7141 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_7141.hasCurrentObject ()) {
        GALGAS_stringset var_inclusionSet_32_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 156)) ;
        GALGAS_string var_headerString_32_ ;
        callCategoryMethod_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_7141.current_mDeclaration (HERE).ptr (), GALGAS_bool (false), constinArgument_inOutputDirectory, var_inclusionSet_32_, var_headerString_32_, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 157)) ;
        var_headerString.dotAssign_operation (var_headerString_32_  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 158)) ;
        enumerator_7141.gotoNextObject () ;
      }
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 162)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 162)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_headerString, GALGAS_string ("\n"
        "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 160)) ;
      }
      const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 170)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementation (inCompiler, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 172)), var_implementationIncludeList COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 171))) ;
        cEnumerator_semanticDeclarationSortedListForGeneration enumerator_7927 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
        while (enumerator_7927.hasCurrentObject ()) {
          var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7927.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 176))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 176)) ;
          var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7927.current_mDeclaration (HERE).ptr (), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 177))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 177)) ;
          enumerator_7927.gotoNextObject () ;
        }
        GALGAS_string var_lexiqueCppName = GALGAS_string ("C_Lexique_").operator_concat (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 180)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 180)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 180)).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 180))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 179)) ;
        GALGAS_stringset var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 181)) ;
        cEnumerator_ruleDeclarationList enumerator_8437 (var_syntaxDeclarationForGeneration.reader_mRuleDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 182)), kEnumeration_up) ;
        while (enumerator_8437.hasCurrentObject ()) {
          cEnumerator_ruleLabelImplementationList enumerator_8531 (enumerator_8437.current_mLabelImplementationList (HERE), kEnumeration_up) ;
          while (enumerator_8531.hasCurrentObject ()) {
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 185))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 185)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 185)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 186))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 186)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 186)).operator_concat (enumerator_8437.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 187))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 186)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 187)).operator_concat (enumerator_8437.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 188))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 188)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 188)).operator_concat (enumerator_8531.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 188))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 188)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 190)) ;
            GALGAS_string var_code ;
            {
            routine_generateProcedure (var_ruleName, var_inclusionSet, enumerator_8531.current_mSignatureForGeneration (HERE), enumerator_8531.current_mInstructionListForGeneration (HERE), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 191)) ;
            }
            var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 203)) ;
            enumerator_8531.gotoNextObject () ;
          }
          GALGAS_semanticInstructionListForGeneration var_instructionList ;
          GALGAS_lstring joker_9638_0 ; // Joker input parameter
          GALGAS_formalParameterListForGeneration joker_9641_0 ; // Joker input parameter
          GALGAS_formalParameterSignature joker_9644_0 ; // Joker input parameter
          GALGAS_location joker_9647_0 ; // Joker input parameter
          enumerator_8437.current_mLabelImplementationList (HERE).method_first (joker_9638_0, joker_9641_0, joker_9644_0, joker_9647_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 207)) ;
          GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 208))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 208)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 208)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 209))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 209)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 209)).operator_concat (enumerator_8437.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 210))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 209)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 210)).operator_concat (enumerator_8437.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 211))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 211)).operator_concat (GALGAS_string ("_parse")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 211)) ;
          var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
            "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 212)) ;
          GALGAS_string var_code ;
          {
          routine_generateProcedure (var_ruleName, var_inclusionSet, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 216)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 217)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (true), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 213)) ;
          }
          var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 225)) ;
          const enumGalgasBool test_5 = var_hasIndexing.boolEnum () ;
          if (kBoolTrue == test_5) {
            GALGAS_semanticInstructionListForGeneration var_instructionList ;
            GALGAS_lstring joker_10738_0 ; // Joker input parameter
            GALGAS_formalParameterListForGeneration joker_10741_0 ; // Joker input parameter
            GALGAS_formalParameterSignature joker_10744_0 ; // Joker input parameter
            GALGAS_location joker_10747_0 ; // Joker input parameter
            enumerator_8437.current_mLabelImplementationList (HERE).method_first (joker_10738_0, joker_10741_0, joker_10744_0, joker_10747_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 229)) ;
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 230))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 230)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 230)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 231))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 231)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 231)).operator_concat (enumerator_8437.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 232))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 231)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 232)).operator_concat (enumerator_8437.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 233))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 233)).operator_concat (GALGAS_string ("_indexing")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 233)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 234)) ;
            GALGAS_string var_code ;
            {
            routine_generateProcedure (var_ruleName, var_inclusionSet, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 238)), function_syntaxSignatureOfInstructionList (GALGAS_string ("indexing"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 239)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), GALGAS_bool (false), var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 235)) ;
            }
            var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 247)) ;
          }
          enumerator_8437.gotoNextObject () ;
        }
        {
        GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 252)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 252)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_implementationString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 250)) ;
        }
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//               Routine 'compileSyntaxComponentFromSourceFile'                *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromSourceFile (const GALGAS_lstring constinArgument_inSourceFile,
                                                   const GALGAS_string constinArgument_inOutputDirectory,
                                                   GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 272)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 272)) ;
  GALGAS_lstring var_basenameKey = GALGAS_lstring::constructor_new (var_basename, inCompiler->here ()  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 273)) ;
  GALGAS_galgas_33_SyntaxComponentListAST_2E_element var_syntaxComponentRoot ;
  const enumGalgasBool test_0 = ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE ("syntaxCompilation.gSemantics", 275)).reader_hasKey (var_basename COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 275)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring joker_12715_0 ; // Joker input parameter
    ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE ("syntaxCompilation.gSemantics", 276)).method_searchKey (var_basenameKey, joker_12715_0, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 276)) ;
  }else if (kBoolFalse == test_0) {
    var_syntaxComponentRoot.drop () ;
    C_String syntaxDirectedTranslationResult_12776 ;
    cGrammar_syntaxSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_12776, constinArgument_inSourceFile, var_syntaxComponentRoot  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 278)) ;
    {
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedSyntaxComponentMap.modifier_insertKey (var_basenameKey, constinArgument_inSourceFile, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 279)) ;
    }
  }
  {
  routine_compileSyntaxComponentFromAST (constinArgument_inSourceFile, constinArgument_inOutputDirectory, var_syntaxComponentRoot, ioArgument_ioParsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 282)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                   Routine 'compileSyntaxComponentGalgas3'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSyntaxComponentGalgas_33_ (const GALGAS_galgas_33_SyntaxComponentListAST_2E_element constinArgument_inSyntaxComponentRoot,
                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                               GALGAS_parsedSyntaxComponentMap & ioArgument_ioParsedSyntaxComponentMap,
                                               GALGAS_syntaxListForGeneration & ioArgument_ioSyntaxListForGeneration,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_componentName = constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName.mAttribute_string ;
  GALGAS_terminalMap var_terminalMap ;
  GALGAS_indexingListAST var_indexingListAST ;
  GALGAS_lstring var_indexingDirectory ;
  constinArgument_inSemanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.method_searchKey (constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath, var_terminalMap, var_indexingListAST, var_indexingDirectory, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 304)) ;
  GALGAS_stringset var_indexNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 311)) ;
  cEnumerator_indexingListAST enumerator_14244 (var_indexingListAST, kEnumeration_up) ;
  while (enumerator_14244.hasCurrentObject ()) {
    var_indexNameSet.addAssign_operation (enumerator_14244.current_mIndexName (HERE).mAttribute_string  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 313)) ;
    enumerator_14244.gotoNextObject () ;
  }
  GALGAS_bool var_hasIndexing = var_indexingDirectory.mAttribute_location.reader_isNowhere (SOURCE_FILE ("syntaxCompilation.gSemantics", 315)).operator_not (SOURCE_FILE ("syntaxCompilation.gSemantics", 315)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 317)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_lexiqueName = constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string ;
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (constinArgument_inSemanticContext, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 319)) ;
    GALGAS_syntaxDeclarationForGeneration var_syntaxDeclarationForGeneration ;
    {
    routine_semanticAnalysisOfSyntaxComponent (constinArgument_inSyntaxComponentRoot.mAttribute_mNonterminalDeclarationList, constinArgument_inSyntaxComponentRoot.mAttribute_mRuleList, var_componentName, var_lexiqueName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 324)), constinArgument_inSemanticContext, var_predefinedTypes, var_terminalMap, var_indexNameSet, var_hasIndexing, constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_syntaxDeclarationForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 320)) ;
    }
    ioArgument_ioSyntaxListForGeneration.addAssign_operation (constinArgument_inSyntaxComponentRoot, var_syntaxDeclarationForGeneration, var_hasIndexing  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 333)) ;
    {
    ioArgument_ioParsedSyntaxComponentMap.modifier_insertKey (constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName, constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName, constinArgument_inSyntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 339)) ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'generateSyntaxComponentGalgas3'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_generateSyntaxComponentGalgas_33_ (const GALGAS_string constinArgument_inOutputDirectory,
                                                const GALGAS_bool constinArgument_inUseOneBigHeader,
                                                const GALGAS_syntaxListForGeneration_2E_element constinArgument_inSyntaxStructForGeneration,
                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_componentName = constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mSyntaxComponentName.mAttribute_string ;
  GALGAS_string var_lexiqueName = constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string ;
  GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeaderGalgas_33_ (inCompiler, var_componentName COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 360))) ;
  GALGAS_stringset var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 363)) ;
  GALGAS_string var_code ;
  callCategoryMethod_appendDeclaration_31_ ((const cPtr_syntaxDeclarationForGeneration *) constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.ptr (), var_inclusionSet, var_code, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 364)) ;
  var_headerString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 370)) ;
  GALGAS_stringset var_inclusionSet_32_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 371)) ;
  GALGAS_string var_headerString_32_ ;
  callCategoryMethod_appendDeclaration_32_ ((const cPtr_syntaxDeclarationForGeneration *) constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.ptr (), GALGAS_bool (true), constinArgument_inOutputDirectory, var_inclusionSet_32_, var_headerString_32_, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 372)) ;
  const enumGalgasBool test_0 = constinArgument_inUseOneBigHeader.operator_not (SOURCE_FILE ("syntaxCompilation.gSemantics", 373)).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_stringset enumerator_16715 (var_inclusionSet_32_, kEnumeration_up) ;
    while (enumerator_16715.hasCurrentObject ()) {
      var_headerString.dotAssign_operation (GALGAS_string ("#include \"").operator_concat (enumerator_16715.current_key (HERE)  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 375)).operator_concat (GALGAS_string (".h\"\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 375))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 375)) ;
      enumerator_16715.gotoNextObject () ;
    }
  }
  var_headerString.dotAssign_operation (var_headerString_32_  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 378)) ;
  ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 379)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 379))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 379)) ;
  {
  GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 382)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 382)), GALGAS_string ("//"), GALGAS_string ("\n"
    "\n"), var_headerString, GALGAS_string ("\n"
    "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 380)) ;
  }
  GALGAS_string var_lexiqueCppName = GALGAS_string ("C_Lexique_").operator_concat (constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 395))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 395)) ;
  GALGAS_string var_implementationString = callCategoryReader_appendTypeGenericImplementation ((const cPtr_syntaxDeclarationForGeneration *) constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.ptr (), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 400)) ;
  var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_syntaxDeclarationForGeneration *) constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.ptr (), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 401))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 401)) ;
  cEnumerator_ruleDeclarationList enumerator_17929 (constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.reader_mRuleDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 402)), kEnumeration_up) ;
  while (enumerator_17929.hasCurrentObject ()) {
    cEnumerator_ruleLabelImplementationList enumerator_18011 (enumerator_17929.current_mLabelImplementationList (HERE), kEnumeration_up) ;
    while (enumerator_18011.hasCurrentObject ()) {
      GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 405))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 405)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 405)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 406))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 406)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 406)).operator_concat (enumerator_17929.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 407))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 406)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 407)).operator_concat (enumerator_17929.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 408))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 408)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 408)).operator_concat (enumerator_18011.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 408))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 408)) ;
      var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
        "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 410)) ;
      GALGAS_string var_code ;
      {
      routine_generateProcedure (var_ruleName, var_inclusionSet, enumerator_18011.current_mSignatureForGeneration (HERE), enumerator_18011.current_mInstructionListForGeneration (HERE), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 411)) ;
      }
      var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 423)) ;
      enumerator_18011.gotoNextObject () ;
    }
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    GALGAS_lstring joker_19008_0 ; // Joker input parameter
    GALGAS_formalParameterListForGeneration joker_19011_0 ; // Joker input parameter
    GALGAS_formalParameterSignature joker_19014_0 ; // Joker input parameter
    GALGAS_location joker_19017_0 ; // Joker input parameter
    enumerator_17929.current_mLabelImplementationList (HERE).method_first (joker_19008_0, joker_19011_0, joker_19014_0, joker_19017_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 427)) ;
    GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 428))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 428)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 428)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 429))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 429)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 429)).operator_concat (enumerator_17929.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 430))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 429)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 430)).operator_concat (enumerator_17929.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 431))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 431)).operator_concat (GALGAS_string ("_parse")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 431)) ;
    var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
      "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 432)) ;
    GALGAS_string var_code ;
    {
    routine_generateProcedure (var_ruleName, var_inclusionSet, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 436)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 437)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (true), constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 433)) ;
    }
    var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 445)) ;
    const enumGalgasBool test_1 = constinArgument_inSyntaxStructForGeneration.mAttribute_mHasIndexing.boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_semanticInstructionListForGeneration var_instructionList ;
      GALGAS_lstring joker_20034_0 ; // Joker input parameter
      GALGAS_formalParameterListForGeneration joker_20037_0 ; // Joker input parameter
      GALGAS_formalParameterSignature joker_20040_0 ; // Joker input parameter
      GALGAS_location joker_20043_0 ; // Joker input parameter
      enumerator_17929.current_mLabelImplementationList (HERE).method_first (joker_20034_0, joker_20037_0, joker_20040_0, joker_20043_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 449)) ;
      GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 450))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 450)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 450)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 451))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 451)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 451)).operator_concat (enumerator_17929.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 452))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 451)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 452)).operator_concat (enumerator_17929.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 453))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 453)).operator_concat (GALGAS_string ("_indexing")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 453)) ;
      var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
        "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 454)) ;
      GALGAS_string var_code ;
      {
      routine_generateProcedure (var_ruleName, var_inclusionSet, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 458)), function_syntaxSignatureOfInstructionList (GALGAS_string ("indexing"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 459)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), GALGAS_bool (false), var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 455)) ;
      }
      var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 467)) ;
    }
    enumerator_17929.gotoNextObject () ;
  }
  const enumGalgasBool test_2 = constinArgument_inUseOneBigHeader.boolEnum () ;
  if (kBoolTrue == test_2) {
    var_inclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 472)) ;
  }
  var_inclusionSet.addAssign_operation (GALGAS_string ("lexique-").add_operation (var_lexiqueName, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 474))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 474)) ;
  cEnumerator_grammarMap enumerator_21166 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
  while (enumerator_21166.hasCurrentObject ()) {
    var_inclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_21166.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 476))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 476)) ;
    enumerator_21166.gotoNextObject () ;
  }
  cEnumerator_optionComponentMapForSemanticAnalysis enumerator_21299 (constinArgument_inSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, kEnumeration_up) ;
  while (enumerator_21299.hasCurrentObject ()) {
    const enumGalgasBool test_3 = enumerator_21299.current_mIsPredefined (HERE).operator_not (SOURCE_FILE ("syntaxCompilation.gSemantics", 479)).boolEnum () ;
    if (kBoolTrue == test_3) {
      var_inclusionSet.addAssign_operation (GALGAS_string ("option-").operator_concat (enumerator_21299.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 480))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 480)) ;
    }
    enumerator_21299.gotoNextObject () ;
  }
  GALGAS_string var_header = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementationGalgas_33_ (inCompiler, var_componentName, var_inclusionSet COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 483))) ;
  ioArgument_ioToolProductFileList.addAssign_operation (GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 488)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 488))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 488)) ;
  ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 489)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 489))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 489)) ;
  {
  GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 492)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 492)), GALGAS_string ("//"), GALGAS_string ("\n"
    "\n"), var_header.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 495)), GALGAS_string ("\n"
    "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 490)) ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


