//-----------------------------------------------------------------------------*
//                                                                             *
//                        File 'syntaxCompilation.cpp'                         *
//                         Generated by version 2.6.0                          *
//                       july 14th, 2014, at 11h36'31"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "syntaxCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//                   Routine 'compileSyntaxComponentFromAST'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromAST (const GALGAS_lstring constinArgument_inSourceFile,
                                            const GALGAS_string constinArgument_inOutputDirectory,
                                            const GALGAS_galgas_33_SyntaxComponentListAST_2E_element constinArgument_inSyntaxComponentRoot,
                                            GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 36)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 36)) ;
  GALGAS_lstring var_componentName = constinArgument_inSyntaxComponentRoot.reader_mSyntaxComponentName (SOURCE_FILE ("syntaxCompilation.gSemantics", 38)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 39)).objectCompare (var_basename)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (var_componentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("GALGAS checks the component name ('").operator_concat (var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 41))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 41)).operator_concat (GALGAS_string ("') against the source file base name ('")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 41)).operator_concat (var_basename  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 42)).operator_concat (GALGAS_string ("'): they should be identical")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 42))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 40)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 46)) ;
  GALGAS_stringset var_parsedFileSet = GALGAS_stringset::constructor_setWithString (constinArgument_inSourceFile.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 47)) COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 47)) ;
  GALGAS_lstringlist var_optionComponentFileNameList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 48)) ;
  GALGAS_grammarComponentASTList var_grammarComponentASTList = GALGAS_grammarComponentASTList::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 49)) ;
  GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 50)) ;
  GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 51)) ;
  {
  routine_recursivelyImportSemanticComponentAndCheckNoCircularityInImportSemantics (constinArgument_inSourceFile, ioArgument_ioParsedComponentStruct, var_optionComponentFileNameList, var_grammarComponentASTList, var_semanticDeclarationList, var_parsedFileSet, var_headerIncludeList, var_implementationIncludeList, constinArgument_inSyntaxComponentRoot.reader_mImportedComponentFileNameList (SOURCE_FILE ("syntaxCompilation.gSemantics", 61)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 62)), inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 52)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = var_semanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 66)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildSemanticContext (constinArgument_inSourceFile.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 70)), var_semanticDeclarationListWithPredefinedTypes, constinArgument_inSyntaxComponentRoot.reader_mEndOfSourceFile (SOURCE_FILE ("syntaxCompilation.gSemantics", 72)), var_semanticContext, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 69)) ;
  }
  {
  routine_buildGrammarComponentMapForSemanticAnalysis (var_grammarComponentASTList, var_semanticContext, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 76)) ;
  }
  {
  routine_buildOptionComponentMapForSemanticAnalysis (var_optionComponentFileNameList, ioArgument_ioParsedComponentStruct, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 81)) ;
  }
  GALGAS_lexiqueComponentMapForSemanticAnalysis var_lexiqueMap ;
  {
  routine_buildLexiqueComponentMapForSemanticAnalysis (ioArgument_ioParsedComponentStruct, var_lexiqueMap, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 87)) ;
  }
  var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis = var_lexiqueMap ;
  GALGAS_lstring var_lexiqueFilePath = GALGAS_lstring::constructor_new (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 94)).mAttribute_string.reader_absolutePathFromPath (constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 94)) COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 94)), constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 95)).reader_location (SOURCE_FILE ("syntaxCompilation.gSemantics", 95))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 93)) ;
  GALGAS_galgas_33_LexiqueComponentListAST_2E_element var_lexiqueComponentRoot ;
  {
  routine_parseLexiqueComponent (var_lexiqueFilePath, ioArgument_ioParsedComponentStruct, var_lexiqueComponentRoot, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 98)) ;
  }
  GALGAS_terminalMap var_terminalMap ;
  {
  routine_buildTerminalMap (var_lexiqueComponentRoot, var_terminalMap, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 105)) ;
  }
  GALGAS_stringset var_indexNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 107)) ;
  cEnumerator_indexingListAST enumerator_5202 (var_lexiqueComponentRoot.reader_mIndexingListAST (SOURCE_FILE ("syntaxCompilation.gSemantics", 108)), kEnumeration_up) ;
  while (enumerator_5202.hasCurrentObject ()) {
    var_indexNameSet.addAssign_operation (enumerator_5202.current_mIndexName (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 109))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 109)) ;
    enumerator_5202.gotoNextObject () ;
  }
  GALGAS_bool var_hasIndexing = var_lexiqueComponentRoot.reader_mIndexingDirectory (SOURCE_FILE ("syntaxCompilation.gSemantics", 111)).mAttribute_location.reader_isNowhere (SOURCE_FILE ("syntaxCompilation.gSemantics", 111)).operator_not (SOURCE_FILE ("syntaxCompilation.gSemantics", 111)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 113)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_string var_lexiqueName = constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 114)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 114)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 114)) ;
    GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (var_semanticContext, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 116)) ;
    GALGAS_syntaxDeclarationForGeneration var_syntaxDeclarationForGeneration ;
    {
    routine_semanticAnalysisOfSyntaxComponent (constinArgument_inSyntaxComponentRoot.reader_mNonterminalDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 119)), constinArgument_inSyntaxComponentRoot.reader_mRuleList (SOURCE_FILE ("syntaxCompilation.gSemantics", 120)), var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 121)), var_lexiqueName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 122)), var_semanticContext, var_predefinedTypes, var_terminalMap, var_indexNameSet, var_hasIndexing, constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_syntaxDeclarationForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 118)) ;
    }
    {
    routine_performSemanticAnalysis (constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 133)), var_semanticContext, var_decoratedDeclarationListForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 132)) ;
    }
    var_decoratedDeclarationListForGeneration.addAssign_operation (var_syntaxDeclarationForGeneration, GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 137)) ;
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 143)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeader (inCompiler, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 145)), var_lexiqueName, var_headerIncludeList, var_semanticContext.mAttribute_mTypeMap.reader_allKeyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 148)) COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 144))) ;
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_6897 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_6897.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_6897.current_mDeclaration (HERE).ptr (), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 151))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 151)) ;
        enumerator_6897.gotoNextObject () ;
      }
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_7039 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_7039.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_7039.current_mDeclaration (HERE).ptr (), constinArgument_inOutputDirectory, GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 154))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 154)) ;
        enumerator_7039.gotoNextObject () ;
      }
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 158)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 158)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_headerString, GALGAS_string ("\n"
        "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 156)) ;
      }
      const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 166)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementation (inCompiler, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 168)), var_implementationIncludeList COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 167))) ;
        cEnumerator_semanticDeclarationSortedListForGeneration enumerator_7714 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
        while (enumerator_7714.hasCurrentObject ()) {
          var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7714.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 172))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 172)) ;
          var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7714.current_mDeclaration (HERE).ptr (), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 173))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 173)) ;
          enumerator_7714.gotoNextObject () ;
        }
        GALGAS_string var_lexiqueCppName = GALGAS_string ("C_Lexique_").operator_concat (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 176)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 176)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 176)).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 176))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 175)) ;
        cEnumerator_ruleDeclarationList enumerator_8172 (var_syntaxDeclarationForGeneration.reader_mRuleDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 177)), kEnumeration_up) ;
        while (enumerator_8172.hasCurrentObject ()) {
          cEnumerator_ruleLabelImplementationList enumerator_8266 (enumerator_8172.current_mLabelImplementationList (HERE), kEnumeration_up) ;
          while (enumerator_8266.hasCurrentObject ()) {
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 180))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 180)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 180)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 181))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 181)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 181)).operator_concat (enumerator_8172.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 182))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 181)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 182)).operator_concat (enumerator_8172.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 183))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 183)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 183)).operator_concat (enumerator_8266.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 183))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 183)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 185)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_bool (false), enumerator_8266.current_mSignatureForGeneration (HERE), enumerator_8266.current_mInstructionListForGeneration (HERE), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 186))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 186)) ;
            enumerator_8266.gotoNextObject () ;
          }
          GALGAS_semanticInstructionListForGeneration var_instructionList ;
          GALGAS_lstring joker_9321_0 ; // Joker input parameter
          GALGAS_formalParameterListForGeneration joker_9324_0 ; // Joker input parameter
          GALGAS_formalParameterSignature joker_9327_0 ; // Joker input parameter
          GALGAS_location joker_9330_0 ; // Joker input parameter
          enumerator_8172.current_mLabelImplementationList (HERE).method_first (joker_9321_0, joker_9324_0, joker_9327_0, joker_9330_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 200)) ;
          GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 201))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 201)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 201)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 202))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 202)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 202)).operator_concat (enumerator_8172.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 203))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 202)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 203)).operator_concat (enumerator_8172.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 204))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 204)).operator_concat (GALGAS_string ("_parse")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 204)) ;
          var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
            "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 205)) ;
          var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_bool (false), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 209)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 210)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (true), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 206))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 206)) ;
          const enumGalgasBool test_5 = var_hasIndexing.boolEnum () ;
          if (kBoolTrue == test_5) {
            GALGAS_semanticInstructionListForGeneration var_instructionList ;
            GALGAS_lstring joker_10373_0 ; // Joker input parameter
            GALGAS_formalParameterListForGeneration joker_10376_0 ; // Joker input parameter
            GALGAS_formalParameterSignature joker_10379_0 ; // Joker input parameter
            GALGAS_location joker_10382_0 ; // Joker input parameter
            enumerator_8172.current_mLabelImplementationList (HERE).method_first (joker_10373_0, joker_10376_0, joker_10379_0, joker_10382_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 220)) ;
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 221))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 221)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 221)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 222))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 222)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 222)).operator_concat (enumerator_8172.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 223))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 222)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 223)).operator_concat (enumerator_8172.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 224))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 224)).operator_concat (GALGAS_string ("_indexing")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 224)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 225)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_bool (false), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 229)), function_syntaxSignatureOfInstructionList (GALGAS_string ("indexing"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 230)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 226))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 226)) ;
          }
          enumerator_8172.gotoNextObject () ;
        }
        {
        GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 241)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 241)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_implementationString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 239)) ;
        }
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//               Routine 'compileSyntaxComponentFromSourceFile'                *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromSourceFile (const GALGAS_lstring constinArgument_inSourceFile,
                                                   const GALGAS_string constinArgument_inOutputDirectory,
                                                   GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 261)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 261)) ;
  GALGAS_lstring var_basenameKey = GALGAS_lstring::constructor_new (var_basename, inCompiler->here ()  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 262)) ;
  GALGAS_galgas_33_SyntaxComponentListAST_2E_element var_syntaxComponentRoot ;
  const enumGalgasBool test_0 = ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE ("syntaxCompilation.gSemantics", 264)).reader_hasKey (var_basename COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 264)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring joker_12298_0 ; // Joker input parameter
    ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE ("syntaxCompilation.gSemantics", 265)).method_searchKey (var_basenameKey, joker_12298_0, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 265)) ;
  }else if (kBoolFalse == test_0) {
    var_syntaxComponentRoot.drop () ;
    C_String syntaxDirectedTranslationResult_12359 ;
    cGrammar_syntaxSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_12359, constinArgument_inSourceFile, var_syntaxComponentRoot  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 267)) ;
    {
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedSyntaxComponentMap.modifier_insertKey (var_basenameKey, constinArgument_inSourceFile, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 268)) ;
    }
  }
  {
  routine_compileSyntaxComponentFromAST (constinArgument_inSourceFile, constinArgument_inOutputDirectory, var_syntaxComponentRoot, ioArgument_ioParsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 271)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                   Routine 'compileSyntaxComponentGalgas3'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSyntaxComponentGalgas_33_ (const GALGAS_string constinArgument_inOutputDirectory,
                                               const GALGAS_galgas_33_SyntaxComponentListAST_2E_element constinArgument_inSyntaxComponentRoot,
                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                               GALGAS_parsedSyntaxComponentMap & ioArgument_ioParsedSyntaxComponentMap,
                                               GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_componentName = constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName.mAttribute_string ;
  GALGAS_terminalMap var_terminalMap ;
  GALGAS_indexingListAST var_indexingListAST ;
  GALGAS_lstring var_indexingDirectory ;
  constinArgument_inSemanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.method_searchKey (constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath, var_terminalMap, var_indexingListAST, var_indexingDirectory, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 294)) ;
  GALGAS_stringset var_indexNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 301)) ;
  cEnumerator_indexingListAST enumerator_13848 (var_indexingListAST, kEnumeration_up) ;
  while (enumerator_13848.hasCurrentObject ()) {
    var_indexNameSet.addAssign_operation (enumerator_13848.current_mIndexName (HERE).mAttribute_string  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 303)) ;
    enumerator_13848.gotoNextObject () ;
  }
  GALGAS_bool var_hasIndexing = var_indexingDirectory.mAttribute_location.reader_isNowhere (SOURCE_FILE ("syntaxCompilation.gSemantics", 305)).operator_not (SOURCE_FILE ("syntaxCompilation.gSemantics", 305)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 307)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_lexiqueName = constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string ;
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (constinArgument_inSemanticContext, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 309)) ;
    GALGAS_syntaxDeclarationForGeneration var_syntaxDeclarationForGeneration ;
    {
    routine_semanticAnalysisOfSyntaxComponent (constinArgument_inSyntaxComponentRoot.mAttribute_mNonterminalDeclarationList, constinArgument_inSyntaxComponentRoot.mAttribute_mRuleList, var_componentName, var_lexiqueName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 314)), constinArgument_inSemanticContext, var_predefinedTypes, var_terminalMap, var_indexNameSet, var_hasIndexing, constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_syntaxDeclarationForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 310)) ;
    }
    {
    ioArgument_ioParsedSyntaxComponentMap.modifier_insertKey (constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName, constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName, constinArgument_inSyntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 324)) ;
    }
    GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 329)) ;
    var_implementationIncludeList.addAssign_operation (GALGAS_string ("lexique-").add_operation (var_lexiqueName, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 330))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 330)) ;
    var_implementationIncludeList.addAssign_operation (GALGAS_string ("AZERTYUIOP")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 331)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 333)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeaderGalgas_33_ (inCompiler, var_componentName COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 334))) ;
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_syntaxDeclarationForGeneration *) var_syntaxDeclarationForGeneration.ptr (), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 337))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 337)) ;
      var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_syntaxDeclarationForGeneration *) var_syntaxDeclarationForGeneration.ptr (), constinArgument_inOutputDirectory, GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 338))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 338)) ;
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 341)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 341)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_headerString, GALGAS_string ("\n"
        "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 339)) ;
      }
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 349)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_string var_lexiqueCppName = GALGAS_string ("C_Lexique_").operator_concat (constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 350))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 350)) ;
        GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementationGalgas_33_ (inCompiler, var_componentName, var_implementationIncludeList COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 351))) ;
        var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_syntaxDeclarationForGeneration *) var_syntaxDeclarationForGeneration.ptr (), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 355))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 355)) ;
        var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_syntaxDeclarationForGeneration *) var_syntaxDeclarationForGeneration.ptr (), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 356))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 356)) ;
        cEnumerator_ruleDeclarationList enumerator_16371 (var_syntaxDeclarationForGeneration.reader_mRuleDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 357)), kEnumeration_up) ;
        while (enumerator_16371.hasCurrentObject ()) {
          cEnumerator_ruleLabelImplementationList enumerator_16465 (enumerator_16371.current_mLabelImplementationList (HERE), kEnumeration_up) ;
          while (enumerator_16465.hasCurrentObject ()) {
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 360))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 360)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 360)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 361))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 361)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 361)).operator_concat (enumerator_16371.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 362))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 361)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 362)).operator_concat (enumerator_16371.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 363))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 363)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 363)).operator_concat (enumerator_16465.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 363))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 363)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 365)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_bool (false), enumerator_16465.current_mSignatureForGeneration (HERE), enumerator_16465.current_mInstructionListForGeneration (HERE), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 366))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 366)) ;
            enumerator_16465.gotoNextObject () ;
          }
          GALGAS_semanticInstructionListForGeneration var_instructionList ;
          GALGAS_lstring joker_17520_0 ; // Joker input parameter
          GALGAS_formalParameterListForGeneration joker_17523_0 ; // Joker input parameter
          GALGAS_formalParameterSignature joker_17526_0 ; // Joker input parameter
          GALGAS_location joker_17529_0 ; // Joker input parameter
          enumerator_16371.current_mLabelImplementationList (HERE).method_first (joker_17520_0, joker_17523_0, joker_17526_0, joker_17529_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 380)) ;
          GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 381))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 381)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 381)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 382))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 382)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 382)).operator_concat (enumerator_16371.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 383))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 382)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 383)).operator_concat (enumerator_16371.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 384))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 384)).operator_concat (GALGAS_string ("_parse")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 384)) ;
          var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
            "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 385)) ;
          var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_bool (false), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 389)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 390)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (true), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 386))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 386)) ;
          const enumGalgasBool test_3 = var_hasIndexing.boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_semanticInstructionListForGeneration var_instructionList ;
            GALGAS_lstring joker_18572_0 ; // Joker input parameter
            GALGAS_formalParameterListForGeneration joker_18575_0 ; // Joker input parameter
            GALGAS_formalParameterSignature joker_18578_0 ; // Joker input parameter
            GALGAS_location joker_18581_0 ; // Joker input parameter
            enumerator_16371.current_mLabelImplementationList (HERE).method_first (joker_18572_0, joker_18575_0, joker_18578_0, joker_18581_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 400)) ;
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 401))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 401)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 401)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 402))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 402)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 402)).operator_concat (enumerator_16371.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 403))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 402)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 403)).operator_concat (enumerator_16371.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 404))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 404)).operator_concat (GALGAS_string ("_indexing")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 404)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 405)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_bool (false), GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 409)), function_syntaxSignatureOfInstructionList (GALGAS_string ("indexing"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 410)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 406))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 406)) ;
          }
          enumerator_16371.gotoNextObject () ;
        }
        ioArgument_ioToolProductFileList.addAssign_operation (GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 419)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 419))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 419)) ;
        {
        GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 422)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 422)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_implementationString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 420)) ;
        }
      }
    }
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


