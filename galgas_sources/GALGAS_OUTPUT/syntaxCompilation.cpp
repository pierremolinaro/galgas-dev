//-----------------------------------------------------------------------------*
//                                                                             *
//                        File 'syntaxCompilation.cpp'                         *
//                         Generated by version 2.6.0                          *
//                       july 10th, 2014, at 16h36'18"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "syntaxCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "syntaxCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                   Routine 'compileSyntaxComponentFromAST'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromAST (const GALGAS_lstring constinArgument_inSourceFile,
                                            const GALGAS_string constinArgument_inOutputDirectory,
                                            const GALGAS_galgas_33_SyntaxComponentListAST_2E_element constinArgument_inSyntaxComponentRoot,
                                            GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (36)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (36)) ;
  GALGAS_lstring var_componentName = constinArgument_inSyntaxComponentRoot.reader_mSyntaxComponentName (SOURCE_FILE_AT_LINE (38)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_componentName.reader_string (SOURCE_FILE_AT_LINE (39)).objectCompare (var_basename)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (var_componentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("GALGAS checks the component name ('").operator_concat (var_componentName.reader_string (SOURCE_FILE_AT_LINE (41)) COMMA_SOURCE_FILE_AT_LINE (41)).operator_concat (GALGAS_string ("') against the source file base name ('") COMMA_SOURCE_FILE_AT_LINE (41)).operator_concat (var_basename COMMA_SOURCE_FILE_AT_LINE (42)).operator_concat (GALGAS_string ("'): they should be identical") COMMA_SOURCE_FILE_AT_LINE (42)) COMMA_SOURCE_FILE_AT_LINE (40)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE_AT_LINE (46)) ;
  GALGAS_stringset var_parsedFileSet = GALGAS_stringset::constructor_setWithString (constinArgument_inSourceFile.reader_string (SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (47)) ;
  GALGAS_lstringlist var_optionComponentFileNameList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (48)) ;
  GALGAS_grammarComponentASTList var_grammarComponentASTList = GALGAS_grammarComponentASTList::constructor_emptyList (SOURCE_FILE_AT_LINE (49)) ;
  GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (50)) ;
  GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (51)) ;
  {
  routine_recursivelyImportSemanticComponentAndCheckNoCircularityInImportSemantics (constinArgument_inSourceFile, ioArgument_ioParsedComponentStruct, var_optionComponentFileNameList, var_grammarComponentASTList, var_semanticDeclarationList, var_parsedFileSet, var_headerIncludeList, var_implementationIncludeList, constinArgument_inSyntaxComponentRoot.reader_mImportedComponentFileNameList (SOURCE_FILE_AT_LINE (61)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (62)), inCompiler COMMA_SOURCE_FILE_AT_LINE (52)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = var_semanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler COMMA_SOURCE_FILE_AT_LINE (66)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildSemanticContext (constinArgument_inSourceFile.reader_string (SOURCE_FILE_AT_LINE (70)), var_semanticDeclarationListWithPredefinedTypes, constinArgument_inSyntaxComponentRoot.reader_mEndOfSourceFile (SOURCE_FILE_AT_LINE (72)), var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (69)) ;
  }
  {
  routine_buildGrammarComponentMapForSemanticAnalysis (var_grammarComponentASTList, var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (76)) ;
  }
  {
  routine_buildOptionComponentMapForSemanticAnalysis (var_optionComponentFileNameList, ioArgument_ioParsedComponentStruct, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler COMMA_SOURCE_FILE_AT_LINE (81)) ;
  }
  GALGAS_lexiqueComponentMapForSemanticAnalysis var_lexiqueMap ;
  {
  routine_buildLexiqueComponentMapForSemanticAnalysis (ioArgument_ioParsedComponentStruct, var_lexiqueMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (87)) ;
  }
  var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis = var_lexiqueMap ;
  GALGAS_lstring var_lexiqueFilePath = GALGAS_lstring::constructor_new (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE_AT_LINE (94)).mAttribute_string.reader_absolutePathFromPath (constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (94)) COMMA_SOURCE_FILE_AT_LINE (94)), constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE_AT_LINE (95)).reader_location (SOURCE_FILE_AT_LINE (95)) COMMA_SOURCE_FILE_AT_LINE (93)) ;
  GALGAS_galgas_33_LexiqueComponentListAST_2E_element var_lexiqueComponentRoot ;
  {
  routine_parseLexiqueComponent (var_lexiqueFilePath, ioArgument_ioParsedComponentStruct, var_lexiqueComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (98)) ;
  }
  GALGAS_terminalMap var_terminalMap ;
  {
  routine_buildTerminalMap (var_lexiqueComponentRoot, var_terminalMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (105)) ;
  }
  GALGAS_stringset var_indexNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (107)) ;
  cEnumerator_indexingListAST enumerator_5202 (var_lexiqueComponentRoot.reader_mIndexingListAST (SOURCE_FILE_AT_LINE (108)), kEnumeration_up) ;
  while (enumerator_5202.hasCurrentObject ()) {
    var_indexNameSet.addAssign_operation (enumerator_5202.current_mIndexName (HERE).reader_string (SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
    enumerator_5202.gotoNextObject () ;
  }
  GALGAS_bool var_hasIndexing = var_lexiqueComponentRoot.reader_mIndexingDirectory (SOURCE_FILE_AT_LINE (111)).mAttribute_location.reader_isNowhere (SOURCE_FILE_AT_LINE (111)).operator_not (SOURCE_FILE_AT_LINE (111)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (113)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_string var_lexiqueName = constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE_AT_LINE (114)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (114)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (114)) ;
    GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (116)) ;
    GALGAS_syntaxDeclarationForGeneration var_syntaxDeclarationForGeneration ;
    {
    routine_semanticAnalysisOfSyntaxComponent (constinArgument_inSyntaxComponentRoot.reader_mNonterminalDeclarationList (SOURCE_FILE_AT_LINE (119)), constinArgument_inSyntaxComponentRoot.reader_mRuleList (SOURCE_FILE_AT_LINE (120)), var_componentName.reader_string (SOURCE_FILE_AT_LINE (121)), var_lexiqueName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (122)), var_semanticContext, var_predefinedTypes, var_terminalMap, var_indexNameSet, var_hasIndexing, constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_syntaxDeclarationForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (118)) ;
    }
    {
    routine_performSemanticAnalysis (constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE_AT_LINE (133)), var_semanticContext, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (132)) ;
    }
    var_decoratedDeclarationListForGeneration.addAssign_operation (GALGAS_bool (false), var_syntaxDeclarationForGeneration, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (137)) ;
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (139)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeader (inCompiler, var_componentName.reader_string (SOURCE_FILE_AT_LINE (141)), var_lexiqueName, var_headerIncludeList, var_semanticContext.mAttribute_mTypeMap.reader_allKeyList (SOURCE_FILE_AT_LINE (144)) COMMA_SOURCE_FILE_AT_LINE (140))) ;
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_6874 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_6874.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_6874.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (147)) COMMA_SOURCE_FILE_AT_LINE (147)) ;
        enumerator_6874.gotoNextObject () ;
      }
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_7009 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_7009.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_7009.current_mDeclaration (HERE).ptr (), constinArgument_inOutputDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (150)) COMMA_SOURCE_FILE_AT_LINE (150)) ;
        enumerator_7009.gotoNextObject () ;
      }
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE_AT_LINE (154)).operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (154)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_headerString, GALGAS_string ("\n"
        "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (152)) ;
      }
      const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (162)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementation (inCompiler, var_componentName.reader_string (SOURCE_FILE_AT_LINE (164)), var_implementationIncludeList COMMA_SOURCE_FILE_AT_LINE (163))) ;
        cEnumerator_semanticDeclarationSortedListForGeneration enumerator_7677 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
        while (enumerator_7677.hasCurrentObject ()) {
          var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7677.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (168)) COMMA_SOURCE_FILE_AT_LINE (168)) ;
          var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7677.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (169)) COMMA_SOURCE_FILE_AT_LINE (169)) ;
          enumerator_7677.gotoNextObject () ;
        }
        GALGAS_string var_lexiqueCppName = GALGAS_string ("C_Lexique_").operator_concat (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE_AT_LINE (172)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (172)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (172)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (172)) COMMA_SOURCE_FILE_AT_LINE (171)) ;
        cEnumerator_ruleDeclarationList enumerator_8128 (var_syntaxDeclarationForGeneration.reader_mRuleDeclarationList (SOURCE_FILE_AT_LINE (173)), kEnumeration_up) ;
        while (enumerator_8128.hasCurrentObject ()) {
          cEnumerator_ruleLabelImplementationList enumerator_8222 (enumerator_8128.current_mLabelImplementationList (HERE), kEnumeration_up) ;
          while (enumerator_8222.hasCurrentObject ()) {
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (176)) COMMA_SOURCE_FILE_AT_LINE (176)).operator_concat (GALGAS_string ("::rule_") COMMA_SOURCE_FILE_AT_LINE (176)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (177)) COMMA_SOURCE_FILE_AT_LINE (177)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (177)).operator_concat (enumerator_8128.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (178)) COMMA_SOURCE_FILE_AT_LINE (177)).operator_concat (GALGAS_string ("_i") COMMA_SOURCE_FILE_AT_LINE (178)).operator_concat (enumerator_8128.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (179)) COMMA_SOURCE_FILE_AT_LINE (179)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (179)).operator_concat (enumerator_8222.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (179)) COMMA_SOURCE_FILE_AT_LINE (179)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n") COMMA_SOURCE_FILE_AT_LINE (181)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, enumerator_8222.current_mSignatureForGeneration (HERE), enumerator_8222.current_mInstructionListForGeneration (HERE), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, inCompiler COMMA_SOURCE_FILE_AT_LINE (182)) COMMA_SOURCE_FILE_AT_LINE (182)) ;
            enumerator_8222.gotoNextObject () ;
          }
          GALGAS_semanticInstructionListForGeneration var_instructionList ;
          GALGAS_lstring joker_9256_0 ; // Joker input parameter
          GALGAS_formalParameterListForGeneration joker_9259_0 ; // Joker input parameter
          GALGAS_formalParameterSignature joker_9262_0 ; // Joker input parameter
          GALGAS_location joker_9265_0 ; // Joker input parameter
          enumerator_8128.current_mLabelImplementationList (HERE).method_first (joker_9256_0, joker_9259_0, joker_9262_0, joker_9265_0, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (195)) ;
          GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (196)) COMMA_SOURCE_FILE_AT_LINE (196)).operator_concat (GALGAS_string ("::rule_") COMMA_SOURCE_FILE_AT_LINE (196)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (197)) COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (enumerator_8128.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (198)) COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string ("_i") COMMA_SOURCE_FILE_AT_LINE (198)).operator_concat (enumerator_8128.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (199)) COMMA_SOURCE_FILE_AT_LINE (199)).operator_concat (GALGAS_string ("_parse") COMMA_SOURCE_FILE_AT_LINE (199)) ;
          var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
            "\n") COMMA_SOURCE_FILE_AT_LINE (200)) ;
          var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (203)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (204)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (true), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, inCompiler COMMA_SOURCE_FILE_AT_LINE (201)) COMMA_SOURCE_FILE_AT_LINE (201)) ;
          const enumGalgasBool test_5 = var_hasIndexing.boolEnum () ;
          if (kBoolTrue == test_5) {
            GALGAS_semanticInstructionListForGeneration var_instructionList ;
            GALGAS_lstring joker_10289_0 ; // Joker input parameter
            GALGAS_formalParameterListForGeneration joker_10292_0 ; // Joker input parameter
            GALGAS_formalParameterSignature joker_10295_0 ; // Joker input parameter
            GALGAS_location joker_10298_0 ; // Joker input parameter
            enumerator_8128.current_mLabelImplementationList (HERE).method_first (joker_10289_0, joker_10292_0, joker_10295_0, joker_10298_0, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (214)) ;
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (215)) COMMA_SOURCE_FILE_AT_LINE (215)).operator_concat (GALGAS_string ("::rule_") COMMA_SOURCE_FILE_AT_LINE (215)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (216)) COMMA_SOURCE_FILE_AT_LINE (216)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (216)).operator_concat (enumerator_8128.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (217)) COMMA_SOURCE_FILE_AT_LINE (216)).operator_concat (GALGAS_string ("_i") COMMA_SOURCE_FILE_AT_LINE (217)).operator_concat (enumerator_8128.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (218)) COMMA_SOURCE_FILE_AT_LINE (218)).operator_concat (GALGAS_string ("_indexing") COMMA_SOURCE_FILE_AT_LINE (218)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n") COMMA_SOURCE_FILE_AT_LINE (219)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (222)), function_syntaxSignatureOfInstructionList (GALGAS_string ("indexing"), var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (223)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (220)) COMMA_SOURCE_FILE_AT_LINE (220)) ;
          }
          enumerator_8128.gotoNextObject () ;
        }
        {
        GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE_AT_LINE (234)).operator_concat (GALGAS_string (".cpp") COMMA_SOURCE_FILE_AT_LINE (234)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_implementationString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (232)) ;
        }
      }
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//               Routine 'compileSyntaxComponentFromSourceFile'                *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromSourceFile (const GALGAS_lstring constinArgument_inSourceFile,
                                                   const GALGAS_string constinArgument_inOutputDirectory,
                                                   GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (254)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (254)) ;
  GALGAS_lstring var_basenameKey = GALGAS_lstring::constructor_new (var_basename, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (255)) ;
  GALGAS_galgas_33_SyntaxComponentListAST_2E_element var_syntaxComponentRoot ;
  const enumGalgasBool test_0 = ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE_AT_LINE (257)).reader_hasKey (var_basename COMMA_SOURCE_FILE_AT_LINE (257)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring joker_12193_0 ; // Joker input parameter
    ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE_AT_LINE (258)).method_searchKey (var_basenameKey, joker_12193_0, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (258)) ;
  }else if (kBoolFalse == test_0) {
    C_String syntaxDirectedTranslationResult_12254 ;
    cGrammar_syntaxSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_12254, constinArgument_inSourceFile, var_syntaxComponentRoot COMMA_SOURCE_FILE_AT_LINE (260)) ;
    {
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedSyntaxComponentMap.modifier_insertKey (var_basenameKey, constinArgument_inSourceFile, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (261)) ;
    }
  }
  {
  routine_compileSyntaxComponentFromAST (constinArgument_inSourceFile, constinArgument_inOutputDirectory, var_syntaxComponentRoot, ioArgument_ioParsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (264)) ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                   Routine 'compileSyntaxComponentGalgas3'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_compileSyntaxComponentGalgas_33_ (const GALGAS_string constinArgument_inOutputDirectory,
                                               const GALGAS_galgas_33_SyntaxComponentListAST_2E_element constinArgument_inSyntaxComponentRoot,
                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                               GALGAS_parsedSyntaxComponentMap & ioArgument_ioParsedSyntaxComponentMap,
                                               GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_componentName = constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName.mAttribute_string ;
  GALGAS_terminalMap var_terminalMap ;
  GALGAS_indexingListAST var_indexingListAST ;
  GALGAS_lstring var_indexingDirectory ;
  constinArgument_inSemanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.method_searchKey (constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath, var_terminalMap, var_indexingListAST, var_indexingDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (287)) ;
  GALGAS_stringset var_indexNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (294)) ;
  cEnumerator_indexingListAST enumerator_13743 (var_indexingListAST, kEnumeration_up) ;
  while (enumerator_13743.hasCurrentObject ()) {
    var_indexNameSet.addAssign_operation (enumerator_13743.current_mIndexName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (296)) ;
    enumerator_13743.gotoNextObject () ;
  }
  GALGAS_bool var_hasIndexing = var_indexingDirectory.mAttribute_location.reader_isNowhere (SOURCE_FILE_AT_LINE (298)).operator_not (SOURCE_FILE_AT_LINE (298)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (300)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_lexiqueName = constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string ;
    GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (constinArgument_inSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (303)) ;
    GALGAS_syntaxDeclarationForGeneration var_syntaxDeclarationForGeneration ;
    {
    routine_semanticAnalysisOfSyntaxComponent (constinArgument_inSyntaxComponentRoot.mAttribute_mNonterminalDeclarationList, constinArgument_inSyntaxComponentRoot.mAttribute_mRuleList, var_componentName, var_lexiqueName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (309)), constinArgument_inSemanticContext, var_predefinedTypes, var_terminalMap, var_indexNameSet, var_hasIndexing, constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_syntaxDeclarationForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (305)) ;
    }
    {
    ioArgument_ioParsedSyntaxComponentMap.modifier_insertKey (constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName, constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName, constinArgument_inSyntaxComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (319)) ;
    }
    {
    routine_performSemanticAnalysis (GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (326)), constinArgument_inSemanticContext, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (325)) ;
    }
    var_decoratedDeclarationListForGeneration.addAssign_operation (GALGAS_bool (false), var_syntaxDeclarationForGeneration, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (331)) ;
    GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (332)) ;
    var_implementationIncludeList.addAssign_operation (var_lexiqueName COMMA_SOURCE_FILE_AT_LINE (333)) ;
    var_implementationIncludeList.addAssign_operation (GALGAS_string ("AZERTYUIOP") COMMA_SOURCE_FILE_AT_LINE (334)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (336)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeaderGalgas_33_ (inCompiler, var_componentName COMMA_SOURCE_FILE_AT_LINE (337))) ;
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_15662 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_15662.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_15662.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (341)) COMMA_SOURCE_FILE_AT_LINE (341)) ;
        enumerator_15662.gotoNextObject () ;
      }
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_15797 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_15797.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_15797.current_mDeclaration (HERE).ptr (), constinArgument_inOutputDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (344)) COMMA_SOURCE_FILE_AT_LINE (344)) ;
        enumerator_15797.gotoNextObject () ;
      }
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (348)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_headerString, GALGAS_string ("\n"
        "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (346)) ;
      }
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (356)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_string var_lexiqueCppName = GALGAS_string ("C_Lexique_").operator_concat (constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (357)) COMMA_SOURCE_FILE_AT_LINE (357)) ;
        GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementation (inCompiler, var_componentName, var_implementationIncludeList COMMA_SOURCE_FILE_AT_LINE (358))) ;
        cEnumerator_semanticDeclarationSortedListForGeneration enumerator_16572 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
        while (enumerator_16572.hasCurrentObject ()) {
          var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_16572.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (363)) COMMA_SOURCE_FILE_AT_LINE (363)) ;
          var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_16572.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (364)) COMMA_SOURCE_FILE_AT_LINE (364)) ;
          enumerator_16572.gotoNextObject () ;
        }
        cEnumerator_ruleDeclarationList enumerator_16830 (var_syntaxDeclarationForGeneration.reader_mRuleDeclarationList (SOURCE_FILE_AT_LINE (366)), kEnumeration_up) ;
        while (enumerator_16830.hasCurrentObject ()) {
          cEnumerator_ruleLabelImplementationList enumerator_16924 (enumerator_16830.current_mLabelImplementationList (HERE), kEnumeration_up) ;
          while (enumerator_16924.hasCurrentObject ()) {
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (369)) COMMA_SOURCE_FILE_AT_LINE (369)).operator_concat (GALGAS_string ("::rule_") COMMA_SOURCE_FILE_AT_LINE (369)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (370)) COMMA_SOURCE_FILE_AT_LINE (370)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (370)).operator_concat (enumerator_16830.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (371)) COMMA_SOURCE_FILE_AT_LINE (370)).operator_concat (GALGAS_string ("_i") COMMA_SOURCE_FILE_AT_LINE (371)).operator_concat (enumerator_16830.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (372)) COMMA_SOURCE_FILE_AT_LINE (372)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (372)).operator_concat (enumerator_16924.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (372)) COMMA_SOURCE_FILE_AT_LINE (372)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n") COMMA_SOURCE_FILE_AT_LINE (374)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, enumerator_16924.current_mSignatureForGeneration (HERE), enumerator_16924.current_mInstructionListForGeneration (HERE), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, inCompiler COMMA_SOURCE_FILE_AT_LINE (375)) COMMA_SOURCE_FILE_AT_LINE (375)) ;
            enumerator_16924.gotoNextObject () ;
          }
          GALGAS_semanticInstructionListForGeneration var_instructionList ;
          GALGAS_lstring joker_17958_0 ; // Joker input parameter
          GALGAS_formalParameterListForGeneration joker_17961_0 ; // Joker input parameter
          GALGAS_formalParameterSignature joker_17964_0 ; // Joker input parameter
          GALGAS_location joker_17967_0 ; // Joker input parameter
          enumerator_16830.current_mLabelImplementationList (HERE).method_first (joker_17958_0, joker_17961_0, joker_17964_0, joker_17967_0, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (388)) ;
          GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (389)) COMMA_SOURCE_FILE_AT_LINE (389)).operator_concat (GALGAS_string ("::rule_") COMMA_SOURCE_FILE_AT_LINE (389)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (390)) COMMA_SOURCE_FILE_AT_LINE (390)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (390)).operator_concat (enumerator_16830.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (391)) COMMA_SOURCE_FILE_AT_LINE (390)).operator_concat (GALGAS_string ("_i") COMMA_SOURCE_FILE_AT_LINE (391)).operator_concat (enumerator_16830.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (392)) COMMA_SOURCE_FILE_AT_LINE (392)).operator_concat (GALGAS_string ("_parse") COMMA_SOURCE_FILE_AT_LINE (392)) ;
          var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
            "\n") COMMA_SOURCE_FILE_AT_LINE (393)) ;
          var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (396)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (397)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (true), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, inCompiler COMMA_SOURCE_FILE_AT_LINE (394)) COMMA_SOURCE_FILE_AT_LINE (394)) ;
          const enumGalgasBool test_3 = var_hasIndexing.boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_semanticInstructionListForGeneration var_instructionList ;
            GALGAS_lstring joker_18991_0 ; // Joker input parameter
            GALGAS_formalParameterListForGeneration joker_18994_0 ; // Joker input parameter
            GALGAS_formalParameterSignature joker_18997_0 ; // Joker input parameter
            GALGAS_location joker_19000_0 ; // Joker input parameter
            enumerator_16830.current_mLabelImplementationList (HERE).method_first (joker_18991_0, joker_18994_0, joker_18997_0, joker_19000_0, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (407)) ;
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (408)) COMMA_SOURCE_FILE_AT_LINE (408)).operator_concat (GALGAS_string ("::rule_") COMMA_SOURCE_FILE_AT_LINE (408)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (409)) COMMA_SOURCE_FILE_AT_LINE (409)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (409)).operator_concat (enumerator_16830.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (410)) COMMA_SOURCE_FILE_AT_LINE (409)).operator_concat (GALGAS_string ("_i") COMMA_SOURCE_FILE_AT_LINE (410)).operator_concat (enumerator_16830.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (411)) COMMA_SOURCE_FILE_AT_LINE (411)).operator_concat (GALGAS_string ("_indexing") COMMA_SOURCE_FILE_AT_LINE (411)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n") COMMA_SOURCE_FILE_AT_LINE (412)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (415)), function_syntaxSignatureOfInstructionList (GALGAS_string ("indexing"), var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (416)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (413)) COMMA_SOURCE_FILE_AT_LINE (413)) ;
          }
          enumerator_16830.gotoNextObject () ;
        }
        ioArgument_ioToolProductFileList.addAssign_operation (var_componentName.operator_concat (GALGAS_string (".cpp") COMMA_SOURCE_FILE_AT_LINE (425)) COMMA_SOURCE_FILE_AT_LINE (425)) ;
        {
        GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.operator_concat (GALGAS_string (".cpp") COMMA_SOURCE_FILE_AT_LINE (428)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_implementationString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (426)) ;
        }
      }
    }
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


