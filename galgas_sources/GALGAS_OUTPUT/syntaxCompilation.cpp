//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            File 'syntaxCompilation.cpp'                                             *
//                                             Generated by version 3.0.0                                              *
//                                          october 3rd, 2014, at 18h49'15"                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "syntaxCompilation.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Routine 'compileSyntaxComponentFromAST'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromAST (const GALGAS_lstring constinArgument_inSourceFile,
                                            const GALGAS_string constinArgument_inOutputDirectory,
                                            const GALGAS_galgas_33_SyntaxComponentListAST_2D_element constinArgument_inSyntaxComponentRoot,
                                            GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 37)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 37)) ;
  GALGAS_lstring var_componentName = constinArgument_inSyntaxComponentRoot.reader_mSyntaxComponentName (SOURCE_FILE ("syntaxCompilation.gSemantics", 39)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 40)).objectCompare (var_basename)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (var_componentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("GALGAS checks the component name ('").operator_concat (var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 42))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 42)).operator_concat (GALGAS_string ("') against the source file base name ('")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 42)).operator_concat (var_basename  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 43)).operator_concat (GALGAS_string ("'): they should be identical")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 43))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 41)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 47)) ;
  GALGAS_stringset var_parsedFileSet = GALGAS_stringset::constructor_setWithString (constinArgument_inSourceFile.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 48)) COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 48)) ;
  GALGAS_lstringlist var_optionComponentFileNameList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 49)) ;
  GALGAS_grammarComponentASTList var_grammarComponentASTList = GALGAS_grammarComponentASTList::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 50)) ;
  GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 51)) ;
  GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 52)) ;
  {
  routine_recursivelyImportSemanticComponentAndCheckNoCircularityInImportSemantics (constinArgument_inSourceFile, ioArgument_ioParsedComponentStruct, var_optionComponentFileNameList, var_grammarComponentASTList, var_semanticDeclarationList, var_parsedFileSet, var_headerIncludeList, var_implementationIncludeList, constinArgument_inSyntaxComponentRoot.reader_mImportedComponentFileNameList (SOURCE_FILE ("syntaxCompilation.gSemantics", 62)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 63)), inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 53)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = var_semanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 67)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildSemanticContext (var_semanticDeclarationListWithPredefinedTypes, var_semanticContext, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 69)) ;
  }
  {
  routine_buildGrammarComponentMapForSemanticAnalysis (var_grammarComponentASTList, var_semanticContext, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 74)) ;
  }
  {
  routine_buildOptionComponentMapForSemanticAnalysis (var_optionComponentFileNameList, ioArgument_ioParsedComponentStruct, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 79)) ;
  }
  GALGAS_lexiqueComponentMapForSemanticAnalysis var_lexiqueMap ;
  {
  routine_buildLexiqueComponentMapForSemanticAnalysis (ioArgument_ioParsedComponentStruct, var_lexiqueMap, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 85)) ;
  }
  var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis = var_lexiqueMap ;
  GALGAS_lstring var_lexiqueFilePath = GALGAS_lstring::constructor_new (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 92)).mAttribute_string.reader_absolutePathFromPath (constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 92)) COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 92)), constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 93)).reader_location (SOURCE_FILE ("syntaxCompilation.gSemantics", 93))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 91)) ;
  GALGAS_galgas_33_LexiqueComponentListAST_2D_element var_lexiqueComponentRoot ;
  {
  routine_parseLexiqueComponent (var_lexiqueFilePath, ioArgument_ioParsedComponentStruct, var_lexiqueComponentRoot, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 96)) ;
  }
  GALGAS_terminalMap var_terminalMap ;
  {
  routine_buildTerminalMap (var_lexiqueComponentRoot, var_terminalMap, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 103)) ;
  }
  GALGAS_stringset var_indexNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 105)) ;
  cEnumerator_indexingListAST enumerator_5148 (var_lexiqueComponentRoot.reader_mIndexingListAST (SOURCE_FILE ("syntaxCompilation.gSemantics", 106)), kEnumeration_up) ;
  while (enumerator_5148.hasCurrentObject ()) {
    var_indexNameSet.addAssign_operation (enumerator_5148.current_mIndexName (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 107))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 107)) ;
    enumerator_5148.gotoNextObject () ;
  }
  GALGAS_bool var_hasIndexing = var_lexiqueComponentRoot.reader_mIndexingDirectory (SOURCE_FILE ("syntaxCompilation.gSemantics", 109)).mAttribute_location.reader_isNowhere (SOURCE_FILE ("syntaxCompilation.gSemantics", 109)).operator_not (SOURCE_FILE ("syntaxCompilation.gSemantics", 109)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 111)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_string var_lexiqueName = constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 112)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 112)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 112)) ;
    GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (var_semanticContext, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 114)) ;
    GALGAS_syntaxDeclarationForGeneration var_syntaxDeclarationForGeneration ;
    {
    routine_semanticAnalysisOfSyntaxComponent (constinArgument_inSyntaxComponentRoot.reader_mNonterminalDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 117)), constinArgument_inSyntaxComponentRoot.reader_mRuleList (SOURCE_FILE ("syntaxCompilation.gSemantics", 118)), var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 119)), var_lexiqueName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 120)), var_semanticContext, var_predefinedTypes, var_terminalMap, var_indexNameSet, var_hasIndexing, constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_syntaxDeclarationForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 116)) ;
    }
    {
    routine_performSemanticAnalysis (constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 131)), var_semanticContext, var_decoratedDeclarationListForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 130)) ;
    }
    var_decoratedDeclarationListForGeneration.addAssign_operation (GALGAS_string ("syntax"), var_syntaxDeclarationForGeneration, GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 135)) ;
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 141)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeader (inCompiler, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 143)), var_lexiqueName, var_headerIncludeList COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 142))) ;
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_6797 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_6797.hasCurrentObject ()) {
        GALGAS_stringset var_unusedInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 148)) ;
        GALGAS_string var_code ;
        callCategoryMethod_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_6797.current_mDeclaration (HERE).ptr (), var_unusedInclusionSet, var_code, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 149)) ;
        var_headerString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 150)) ;
        enumerator_6797.gotoNextObject () ;
      }
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_7041 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_7041.hasCurrentObject ()) {
        GALGAS_stringset var_inclusionSet_32_ = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 153)) ;
        GALGAS_string var_headerString_32_ ;
        callCategoryMethod_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_7041.current_mDeclaration (HERE).ptr (), GALGAS_bool (false), constinArgument_inOutputDirectory, var_inclusionSet_32_, var_headerString_32_, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 154)) ;
        var_headerString.dotAssign_operation (var_headerString_32_  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 155)) ;
        enumerator_7041.gotoNextObject () ;
      }
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 159)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 159)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_headerString, GALGAS_string ("\n"
        "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 157)) ;
      }
      const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 167)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementation (inCompiler, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 169)), var_implementationIncludeList COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 168))) ;
        cEnumerator_semanticDeclarationSortedListForGeneration enumerator_7827 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
        while (enumerator_7827.hasCurrentObject ()) {
          var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7827.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 173))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 173)) ;
          GALGAS_stringset var_unusedInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 174)) ;
          GALGAS_string var_code ;
          callCategoryMethod_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_7827.current_mDeclaration (HERE).ptr (), var_unusedInclusionSet, var_code, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 175)) ;
          var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 176)) ;
          enumerator_7827.gotoNextObject () ;
        }
        GALGAS_string var_lexiqueCppName = GALGAS_string ("C_Lexique_").operator_concat (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("syntaxCompilation.gSemantics", 180)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 180)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 180)).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 180))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 179)) ;
        GALGAS_stringset var_inclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 181)) ;
        cEnumerator_ruleDeclarationList enumerator_8531 (var_syntaxDeclarationForGeneration.reader_mRuleDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 182)), kEnumeration_up) ;
        while (enumerator_8531.hasCurrentObject ()) {
          cEnumerator_ruleLabelImplementationList enumerator_8625 (enumerator_8531.current_mLabelImplementationList (HERE), kEnumeration_up) ;
          while (enumerator_8625.hasCurrentObject ()) {
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 185))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 185)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 185)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 186))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 186)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 186)).operator_concat (enumerator_8531.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 187))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 186)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 187)).operator_concat (enumerator_8531.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 188))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 188)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 188)).operator_concat (enumerator_8625.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 188))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 188)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
              "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 190)) ;
            GALGAS_string var_code ;
            {
            routine_generateProcedure (GALGAS_bool (false), var_ruleName, var_inclusionSet, enumerator_8625.current_mSignatureForGeneration (HERE), enumerator_8625.current_mInstructionListForGeneration (HERE), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 191)) ;
            }
            var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 204)) ;
            enumerator_8625.gotoNextObject () ;
          }
          GALGAS_semanticInstructionListForGeneration var_instructionList ;
          GALGAS_lstring joker_9802_0 ; // Joker input parameter
          GALGAS_formalParameterListForGeneration joker_9805_0 ; // Joker input parameter
          GALGAS_formalParameterSignature joker_9808_0 ; // Joker input parameter
          GALGAS_location joker_9811_0 ; // Joker input parameter
          enumerator_8531.current_mLabelImplementationList (HERE).method_first (joker_9802_0, joker_9805_0, joker_9808_0, joker_9811_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 208)) ;
          GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 209))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 209)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 209)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 210))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 210)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 210)).operator_concat (enumerator_8531.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 211))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 210)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 211)).operator_concat (enumerator_8531.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 212))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 212)).operator_concat (GALGAS_string ("_parse")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 212)) ;
          var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
            "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 213)) ;
          GALGAS_string var_code ;
          {
          routine_generateProcedure (GALGAS_bool (false), var_ruleName, var_inclusionSet, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 218)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 219)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (true), constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 214)) ;
          }
          var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 227)) ;
          const enumGalgasBool test_5 = var_hasIndexing.boolEnum () ;
          if (kBoolTrue == test_5) {
            GALGAS_semanticInstructionListForGeneration var_instructionList ;
            GALGAS_lstring joker_10970_0 ; // Joker input parameter
            GALGAS_formalParameterListForGeneration joker_10973_0 ; // Joker input parameter
            GALGAS_formalParameterSignature joker_10976_0 ; // Joker input parameter
            GALGAS_location joker_10979_0 ; // Joker input parameter
            enumerator_8531.current_mLabelImplementationList (HERE).method_first (joker_10970_0, joker_10973_0, joker_10976_0, joker_10979_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 231)) ;
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 232))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 232)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 232)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 233))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 233)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 233)).operator_concat (enumerator_8531.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 234))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 233)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 234)).operator_concat (enumerator_8531.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 235))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 235)).operator_concat (GALGAS_string ("_indexing")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 235)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
              "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 236)) ;
            GALGAS_string var_code ;
            {
            routine_generateProcedure (GALGAS_bool (false), var_ruleName, var_inclusionSet, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 241)), function_syntaxSignatureOfInstructionList (GALGAS_string ("indexing"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 242)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), GALGAS_bool (false), var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 237)) ;
            }
            var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 250)) ;
          }
          enumerator_8531.gotoNextObject () ;
        }
        {
        GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 255)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 255)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_implementationString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 253)) ;
        }
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Routine 'compileSyntaxComponentFromSourceFile'                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromSourceFile (const GALGAS_lstring constinArgument_inSourceFile,
                                                   const GALGAS_string constinArgument_inOutputDirectory,
                                                   GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("syntaxCompilation.gSemantics", 275)).reader_stringByDeletingPathExtension (SOURCE_FILE ("syntaxCompilation.gSemantics", 275)) ;
  GALGAS_lstring var_basenameKey = GALGAS_lstring::constructor_new (var_basename, inCompiler->here ()  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 276)) ;
  GALGAS_galgas_33_SyntaxComponentListAST_2D_element var_syntaxComponentRoot ;
  const enumGalgasBool test_0 = ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE ("syntaxCompilation.gSemantics", 278)).reader_hasKey (var_basename COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 278)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring joker_13017_0 ; // Joker input parameter
    ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE ("syntaxCompilation.gSemantics", 279)).method_searchKey (var_basenameKey, joker_13017_0, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 279)) ;
  }else if (kBoolFalse == test_0) {
    var_syntaxComponentRoot.drop () ;
    C_String syntaxDirectedTranslationResult_13078 ;
    cGrammar_syntaxSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_13078, constinArgument_inSourceFile, var_syntaxComponentRoot  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 281)) ;
    {
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedSyntaxComponentMap.modifier_insertKey (var_basenameKey, constinArgument_inSourceFile, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 282)) ;
    }
  }
  {
  routine_compileSyntaxComponentFromAST (constinArgument_inSourceFile, constinArgument_inOutputDirectory, var_syntaxComponentRoot, ioArgument_ioParsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 285)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     Routine 'compileAllSyntaxComponentsGalgas3'                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_compileAllSyntaxComponentsGalgas_33_ (const GALGAS_galgas_33_SyntaxComponentListAST constinArgument_inAllSyntaxComponents,
                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                   GALGAS_parsedSyntaxComponentMap & ioArgument_ioParsedSyntaxComponentMap,
                                                   GALGAS_syntaxListForGeneration & ioArgument_ioSyntaxListForGeneration,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset var_syntaxComponentNames = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 306)) ;
  cEnumerator_galgas_33_SyntaxComponentListAST enumerator_14193 (constinArgument_inAllSyntaxComponents, kEnumeration_up) ;
  while (enumerator_14193.hasCurrentObject ()) {
    var_syntaxComponentNames.addAssign_operation (enumerator_14193.current (HERE).mAttribute_mSyntaxComponentName.mAttribute_string  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 308)) ;
    enumerator_14193.gotoNextObject () ;
  }
  GALGAS_galgas_33_SyntaxComponentListAST var_allGroupedSyntaxComponents = GALGAS_galgas_33_SyntaxComponentListAST::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 310)) ;
  cEnumerator_stringset enumerator_14397 (var_syntaxComponentNames, kEnumeration_up) ;
  while (enumerator_14397.hasCurrentObject ()) {
    GALGAS_lstring var_componentName = GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("syntaxCompilation.gSemantics", 312)) ;
    GALGAS_lstring var_importedLexiqueName = GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("syntaxCompilation.gSemantics", 313)) ;
    GALGAS_nonterminalDeclarationListAST var_nonterminalDeclarationList = GALGAS_nonterminalDeclarationListAST::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 314)) ;
    GALGAS_syntaxRuleListAST var_ruleList = GALGAS_syntaxRuleListAST::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 315)) ;
    GALGAS_bool var_hasTranslateFeature = GALGAS_bool (false) ;
    cEnumerator_galgas_33_SyntaxComponentListAST enumerator_14705 (constinArgument_inAllSyntaxComponents, kEnumeration_up) ;
    while (enumerator_14705.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_14705.current (HERE).mAttribute_mSyntaxComponentName.mAttribute_string.objectCompare (enumerator_14397.current_key (HERE))).boolEnum () ;
      if (kBoolTrue == test_0) {
        var_componentName = enumerator_14705.current (HERE).mAttribute_mSyntaxComponentName ;
        const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_importedLexiqueName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
        if (kBoolTrue == test_1) {
          var_importedLexiqueName = enumerator_14705.current (HERE).mAttribute_mImportedLexiqueFilePath ;
        }else if (kBoolFalse == test_1) {
          const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_14705.current (HERE).mAttribute_mImportedLexiqueFilePath.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).operator_and (GALGAS_bool (kIsNotEqual, var_importedLexiqueName.mAttribute_string.objectCompare (enumerator_14705.current (HERE).mAttribute_mImportedLexiqueFilePath.mAttribute_string)) COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 322)).boolEnum () ;
          if (kBoolTrue == test_2) {
            GALGAS_location location_3 (enumerator_14705.current (HERE).mAttribute_mImportedLexiqueFilePath.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_3, GALGAS_string ("lexique name is different from that previously declared ('").operator_concat (var_importedLexiqueName.reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 323))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 323)).operator_concat (GALGAS_string ("')")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 323))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 323)) ;
            GALGAS_location location_4 (var_importedLexiqueName.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("previously declaration is here")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 324)) ;
          }
        }
        var_nonterminalDeclarationList.dotAssign_operation (enumerator_14705.current (HERE).mAttribute_mNonterminalDeclarationList  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 326)) ;
        var_ruleList.dotAssign_operation (enumerator_14705.current (HERE).mAttribute_mRuleList  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 327)) ;
        const enumGalgasBool test_5 = enumerator_14705.current (HERE).mAttribute_mHasTranslateFeature.boolEnum () ;
        if (kBoolTrue == test_5) {
          var_hasTranslateFeature = GALGAS_bool (true) ;
        }
      }
      enumerator_14705.gotoNextObject () ;
    }
    var_allGroupedSyntaxComponents.addAssign_operation (var_componentName, var_importedLexiqueName, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 336)), var_nonterminalDeclarationList, var_ruleList, GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 339)), var_hasTranslateFeature  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 333)) ;
    enumerator_14397.gotoNextObject () ;
  }
  cEnumerator_galgas_33_SyntaxComponentListAST enumerator_15951 (var_allGroupedSyntaxComponents, kEnumeration_up) ;
  while (enumerator_15951.hasCurrentObject ()) {
    {
    routine_compileSyntaxComponentGalgas_33_ (enumerator_15951.current (HERE), constinArgument_inSemanticContext, ioArgument_ioParsedSyntaxComponentMap, ioArgument_ioSyntaxListForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 345)) ;
    }
    enumerator_15951.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Routine 'compileSyntaxComponentGalgas3'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_compileSyntaxComponentGalgas_33_ (const GALGAS_galgas_33_SyntaxComponentListAST_2D_element constinArgument_inSyntaxComponentRoot,
                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                               GALGAS_parsedSyntaxComponentMap & ioArgument_ioParsedSyntaxComponentMap,
                                               GALGAS_syntaxListForGeneration & ioArgument_ioSyntaxListForGeneration,
                                               C_Compiler * inCompiler
                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_componentName = constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName.mAttribute_string ;
  GALGAS_terminalMap var_terminalMap ;
  GALGAS_indexingListAST var_indexingListAST ;
  GALGAS_lstring var_indexingDirectory ;
  constinArgument_inSemanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.method_searchKey (constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath, var_terminalMap, var_indexingListAST, var_indexingDirectory, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 364)) ;
  GALGAS_stringset var_indexNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 371)) ;
  cEnumerator_indexingListAST enumerator_16967 (var_indexingListAST, kEnumeration_up) ;
  while (enumerator_16967.hasCurrentObject ()) {
    var_indexNameSet.addAssign_operation (enumerator_16967.current_mIndexName (HERE).mAttribute_string  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 373)) ;
    enumerator_16967.gotoNextObject () ;
  }
  GALGAS_bool var_hasIndexing = var_indexingDirectory.mAttribute_location.reader_isNowhere (SOURCE_FILE ("syntaxCompilation.gSemantics", 375)).operator_not (SOURCE_FILE ("syntaxCompilation.gSemantics", 375)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("syntaxCompilation.gSemantics", 377)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_lexiqueName = constinArgument_inSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string ;
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (constinArgument_inSemanticContext, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 379)) ;
    GALGAS_syntaxDeclarationForGeneration var_syntaxDeclarationForGeneration ;
    {
    routine_semanticAnalysisOfSyntaxComponent (constinArgument_inSyntaxComponentRoot.mAttribute_mNonterminalDeclarationList, constinArgument_inSyntaxComponentRoot.mAttribute_mRuleList, var_componentName, var_lexiqueName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 384)), constinArgument_inSemanticContext, var_predefinedTypes, var_terminalMap, var_indexNameSet, var_hasIndexing, constinArgument_inSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_syntaxDeclarationForGeneration, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 380)) ;
    }
    ioArgument_ioSyntaxListForGeneration.addAssign_operation (constinArgument_inSyntaxComponentRoot, var_syntaxDeclarationForGeneration, var_hasIndexing  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 393)) ;
    {
    ioArgument_ioParsedSyntaxComponentMap.modifier_insertKey (constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName, constinArgument_inSyntaxComponentRoot.mAttribute_mSyntaxComponentName, constinArgument_inSyntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 399)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'generateSyntaxComponentGalgas3'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateSyntaxComponentGalgas_33_ (const GALGAS_string constinArgument_inOutputDirectory,
                                                const GALGAS_syntaxListForGeneration_2D_element constinArgument_inSyntaxStructForGeneration,
                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool var_generateOneHugeHeader = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateOneHeader.reader_value ()) ;
  GALGAS_string var_componentName = constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mSyntaxComponentName.mAttribute_string ;
  GALGAS_string var_lexiqueName = constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string ;
  GALGAS_stringset var_headerInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 420)) ;
  GALGAS_string var_headerString ;
  callCategoryMethod_appendDeclaration_31_ ((const cPtr_syntaxDeclarationForGeneration *) constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.ptr (), var_headerInclusionSet, var_headerString, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 421)) ;
  GALGAS_string var_headerString_32_ ;
  callCategoryMethod_appendDeclaration_32_ ((const cPtr_syntaxDeclarationForGeneration *) constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.ptr (), GALGAS_bool (true), constinArgument_inOutputDirectory, var_headerInclusionSet, var_headerString_32_, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 422)) ;
  var_headerString.dotAssign_operation (var_headerString_32_  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 423)) ;
  const enumGalgasBool test_0 = var_generateOneHugeHeader.boolEnum () ;
  if (kBoolTrue == test_0) {
    var_headerInclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("all-declarations")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 425)) ;
  }
  var_headerInclusionSet.addAssign_operation (GALGAS_string ("syntax-").add_operation (var_componentName, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 427))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 427)) ;
  var_headerInclusionSet.addAssign_operation (GALGAS_string ("lexique-").add_operation (var_lexiqueName, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 428))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 428)) ;
  GALGAS_string var_header = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeaderGalgas_33_ (inCompiler, var_componentName, var_headerInclusionSet COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 429))) ;
  ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 433)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 433))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 433)) ;
  {
  GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 436)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 436)), GALGAS_string ("//"), GALGAS_string ("\n"
    "\n"), var_header.add_operation (var_headerString, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 439)), GALGAS_string ("\n"
    "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 434)) ;
  }
  GALGAS_string var_lexiqueCppName = GALGAS_string ("C_Lexique_").operator_concat (constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mImportedLexiqueFilePath.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 444))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 444)) ;
  GALGAS_string var_implementationString = callCategoryReader_appendTypeGenericImplementation ((const cPtr_syntaxDeclarationForGeneration *) constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.ptr (), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 445)) ;
  GALGAS_stringset var_cppInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("syntaxCompilation.gSemantics", 446)) ;
  GALGAS_string var_code ;
  callCategoryMethod_appendSpecificImplementation ((const cPtr_syntaxDeclarationForGeneration *) constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.ptr (), var_cppInclusionSet, var_code, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 447)) ;
  var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 448)) ;
  cEnumerator_ruleDeclarationList enumerator_20515 (constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxGeneration.reader_mRuleDeclarationList (SOURCE_FILE ("syntaxCompilation.gSemantics", 450)), kEnumeration_up) ;
  while (enumerator_20515.hasCurrentObject ()) {
    cEnumerator_ruleLabelImplementationList enumerator_20597 (enumerator_20515.current_mLabelImplementationList (HERE), kEnumeration_up) ;
    while (enumerator_20597.hasCurrentObject ()) {
      GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 453))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 453)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 453)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 454))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 454)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 454)).operator_concat (enumerator_20515.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 455))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 454)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 455)).operator_concat (enumerator_20515.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 456))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 456)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 456)).operator_concat (enumerator_20597.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 456))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 456)) ;
      var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
        "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 458)) ;
      GALGAS_string var_code ;
      {
      routine_generateProcedure (GALGAS_bool (false), var_ruleName, var_cppInclusionSet, enumerator_20597.current_mSignatureForGeneration (HERE), enumerator_20597.current_mInstructionListForGeneration (HERE), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 459)) ;
      }
      var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 472)) ;
      enumerator_20597.gotoNextObject () ;
    }
    GALGAS_semanticInstructionListForGeneration var_instructionList ;
    GALGAS_lstring joker_21661_0 ; // Joker input parameter
    GALGAS_formalParameterListForGeneration joker_21664_0 ; // Joker input parameter
    GALGAS_formalParameterSignature joker_21667_0 ; // Joker input parameter
    GALGAS_location joker_21670_0 ; // Joker input parameter
    enumerator_20515.current_mLabelImplementationList (HERE).method_first (joker_21661_0, joker_21664_0, joker_21667_0, joker_21670_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 476)) ;
    GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 477))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 477)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 477)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 478))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 478)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 478)).operator_concat (enumerator_20515.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 479))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 478)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 479)).operator_concat (enumerator_20515.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 480))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 480)).operator_concat (GALGAS_string ("_parse")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 480)) ;
    var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
      "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 481)) ;
    GALGAS_string var_code ;
    {
    routine_generateProcedure (GALGAS_bool (false), var_ruleName, var_cppInclusionSet, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 486)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 487)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (true), constinArgument_inSyntaxStructForGeneration.mAttribute_mSyntaxComponentRoot.mAttribute_mHasTranslateFeature, var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 482)) ;
    }
    var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 495)) ;
    const enumGalgasBool test_1 = constinArgument_inSyntaxStructForGeneration.mAttribute_mHasIndexing.boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_semanticInstructionListForGeneration var_instructionList ;
      GALGAS_lstring joker_22752_0 ; // Joker input parameter
      GALGAS_formalParameterListForGeneration joker_22755_0 ; // Joker input parameter
      GALGAS_formalParameterSignature joker_22758_0 ; // Joker input parameter
      GALGAS_location joker_22761_0 ; // Joker input parameter
      enumerator_20515.current_mLabelImplementationList (HERE).method_first (joker_22752_0, joker_22755_0, joker_22758_0, joker_22761_0, var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 499)) ;
      GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 500))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 500)).operator_concat (GALGAS_string ("::rule_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 500)).operator_concat (var_componentName.reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 501))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 501)).operator_concat (GALGAS_string ("_")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 501)).operator_concat (enumerator_20515.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE ("syntaxCompilation.gSemantics", 502))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 501)).operator_concat (GALGAS_string ("_i")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 502)).operator_concat (enumerator_20515.current_mRuleIndex (HERE).reader_string (SOURCE_FILE ("syntaxCompilation.gSemantics", 503))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 503)).operator_concat (GALGAS_string ("_indexing")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 503)) ;
      var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------------------------------------------------*\n"
        "\n")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 504)) ;
      GALGAS_string var_code ;
      {
      routine_generateProcedure (GALGAS_bool (false), var_ruleName, var_cppInclusionSet, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("syntaxCompilation.gSemantics", 509)), function_syntaxSignatureOfInstructionList (GALGAS_string ("indexing"), var_instructionList, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 510)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), GALGAS_bool (false), var_code, inCompiler  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 505)) ;
      }
      var_implementationString.dotAssign_operation (var_code  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 518)) ;
    }
    enumerator_20515.gotoNextObject () ;
  }
  const enumGalgasBool test_2 = var_generateOneHugeHeader.boolEnum () ;
  if (kBoolTrue == test_2) {
    var_cppInclusionSet = GALGAS_stringset::constructor_setWithString (GALGAS_string ("syntax-").add_operation (var_componentName, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 523))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 523)) ;
  }
  cEnumerator_grammarMap enumerator_23920 (constinArgument_inSemanticContext.mAttribute_mGrammarMap, kEnumeration_up) ;
  while (enumerator_23920.hasCurrentObject ()) {
    var_cppInclusionSet.addAssign_operation (GALGAS_string ("grammar-").operator_concat (enumerator_23920.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 526))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 526)) ;
    enumerator_23920.gotoNextObject () ;
  }
  cEnumerator_optionComponentMapForSemanticAnalysis enumerator_24057 (constinArgument_inSemanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, kEnumeration_up) ;
  while (enumerator_24057.hasCurrentObject ()) {
    const enumGalgasBool test_3 = enumerator_24057.current_mIsPredefined (HERE).operator_not (SOURCE_FILE ("syntaxCompilation.gSemantics", 529)).boolEnum () ;
    if (kBoolTrue == test_3) {
      var_cppInclusionSet.addAssign_operation (GALGAS_string ("option-").operator_concat (enumerator_24057.current_lkey (HERE).mAttribute_string  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 530))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 530)) ;
    }
    enumerator_24057.gotoNextObject () ;
  }
  GALGAS_string var_headerOfCppFile = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementationGalgas_33_ (inCompiler, var_cppInclusionSet COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 533))) ;
  ioArgument_ioToolProductFileList.addAssign_operation (GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 536)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 536))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 536)) ;
  ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 537)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 537))  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 537)) ;
  {
  GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, GALGAS_string ("syntax-").operator_concat (var_componentName  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 540)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 540)), GALGAS_string ("//"), GALGAS_string ("\n"
    "\n"), var_headerOfCppFile.add_operation (var_implementationString, inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 543)), GALGAS_string ("\n"
    "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("syntaxCompilation.gSemantics", 538)) ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


