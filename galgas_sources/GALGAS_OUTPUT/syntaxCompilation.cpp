//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'syntaxCompilation.cpp'                        *
//                        Generated by version 2.5.4                         *
//                    december 23th, 2013, at 19h50'57"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "syntaxCompilation.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "syntaxCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'buildTerminalMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildTerminalMap (const GALGAS_lexiqueComponentAST constinArgument0,
                               GALGAS_terminalMap & outArgument1,
                               C_Compiler * inCompiler
                               COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'buildTerminalMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildTerminalMap (const GALGAS_lexiqueComponentAST constinArgument_inLexiqueComponentRoot,
                               GALGAS_terminalMap & outArgument_outTerminalMap,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outTerminalMap.drop () ; // Release 'out' argument
  GALGAS_lexicalTypeMap var_lexicalTypeMap = function_buildLexicalTypeMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (35)) ;
  GALGAS_lexicalAttributeMap var_lexicalAttributeMap = GALGAS_lexicalAttributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (36)) ;
  {
  routine_buildLexicalAttributeMap (var_lexicalTypeMap, constinArgument_inLexiqueComponentRoot.reader_mLexicalAttributeList (SOURCE_FILE_AT_LINE (39)), var_lexicalAttributeMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (37)) ;
  }
  outArgument_outTerminalMap = GALGAS_terminalMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (43)) ;
  cEnumerator_terminalDeclarationListAST enumerator_2459 (constinArgument_inLexiqueComponentRoot.reader_mTerminalDeclarationList (SOURCE_FILE_AT_LINE (44)), kEnumeration_up) ;
  while (enumerator_2459.hasCurrentObject ()) {
    GALGAS_lexicalSentValueList var_argumentTypeList = GALGAS_lexicalSentValueList::constructor_emptyList (SOURCE_FILE_AT_LINE (45)) ;
    cEnumerator_lstringlist enumerator_2550 (enumerator_2459.current_mSentAttributeList (HERE), kEnumeration_up) ;
    while (enumerator_2550.hasCurrentObject ()) {
      GALGAS_lexicalTypeEnum var_attributeLexicalType ;
      var_lexicalAttributeMap.method_searchKey (enumerator_2550.current_mValue (HERE), var_attributeLexicalType, inCompiler COMMA_SOURCE_FILE_AT_LINE (48)) ;
      var_argumentTypeList.addAssign_operation (enumerator_2550.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (49)), var_attributeLexicalType COMMA_SOURCE_FILE_AT_LINE (49)) ;
      enumerator_2550.gotoNextObject () ;
    }
    {
    outArgument_outTerminalMap.modifier_insertKey (enumerator_2459.current_mName (HERE), var_argumentTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (51)) ;
    }
    enumerator_2459.gotoNextObject () ;
  }
  cEnumerator_lexicalListDeclarationListAST enumerator_2898 (constinArgument_inLexiqueComponentRoot.reader_mLexicalListDeclarationList (SOURCE_FILE_AT_LINE (54)), kEnumeration_up) ;
  while (enumerator_2898.hasCurrentObject ()) {
    GALGAS_lexicalSentValueList var_argumentTypeList = GALGAS_lexicalSentValueList::constructor_emptyList (SOURCE_FILE_AT_LINE (55)) ;
    cEnumerator_lstringlist enumerator_2989 (enumerator_2898.current_mSentAttributeList (HERE), kEnumeration_up) ;
    while (enumerator_2989.hasCurrentObject ()) {
      GALGAS_lexicalTypeEnum var_attributeLexicalType ;
      var_lexicalAttributeMap.method_searchKey (enumerator_2989.current_mValue (HERE), var_attributeLexicalType, inCompiler COMMA_SOURCE_FILE_AT_LINE (58)) ;
      var_argumentTypeList.addAssign_operation (enumerator_2989.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (59)), var_attributeLexicalType COMMA_SOURCE_FILE_AT_LINE (59)) ;
      enumerator_2989.gotoNextObject () ;
    }
    cEnumerator_lexicalListEntryListAST enumerator_3216 (enumerator_2898.current_mEntryList (HERE), kEnumeration_up) ;
    while (enumerator_3216.hasCurrentObject ()) {
      {
      outArgument_outTerminalMap.modifier_insertKey (enumerator_3216.current_mTerminalSpelling (HERE), var_argumentTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (62)) ;
      }
      enumerator_3216.gotoNextObject () ;
    }
    enumerator_2898.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'compileSyntaxComponentFromAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromAST (const GALGAS_lstring constinArgument_inSourceFile,
                                            const GALGAS_string constinArgument_inOutputDirectory,
                                            const GALGAS_syntaxComponentAST constinArgument_inSyntaxComponentRoot,
                                            GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (79)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (79)) ;
  GALGAS_lstring var_componentName = constinArgument_inSyntaxComponentRoot.reader_mSyntaxComponentName (SOURCE_FILE_AT_LINE (81)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_componentName.reader_string (SOURCE_FILE_AT_LINE (82)).objectCompare (var_basename)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (var_componentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("GALGAS checks the component name ('").operator_concat (var_componentName.reader_string (SOURCE_FILE_AT_LINE (84)) COMMA_SOURCE_FILE_AT_LINE (84)).operator_concat (GALGAS_string ("') against the source file base name ('") COMMA_SOURCE_FILE_AT_LINE (84)).operator_concat (var_basename COMMA_SOURCE_FILE_AT_LINE (85)).operator_concat (GALGAS_string ("'): they should be identical") COMMA_SOURCE_FILE_AT_LINE (85)) COMMA_SOURCE_FILE_AT_LINE (83)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE_AT_LINE (89)) ;
  GALGAS_stringset var_parsedFileSet = GALGAS_stringset::constructor_setWithString (constinArgument_inSourceFile.reader_string (SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (90)) ;
  GALGAS_lstringlist var_optionComponentFileNameList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (91)) ;
  GALGAS_grammarComponentASTList var_grammarComponentASTList = GALGAS_grammarComponentASTList::constructor_emptyList (SOURCE_FILE_AT_LINE (92)) ;
  GALGAS_stringlist var_headerIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (93)) ;
  GALGAS_stringlist var_implementationIncludeList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (94)) ;
  {
  routine_recursivelyImportSemanticComponentAndCheckNoCircularityInImportSemantics (constinArgument_inSourceFile, ioArgument_ioParsedComponentStruct, var_optionComponentFileNameList, var_grammarComponentASTList, var_semanticDeclarationList, var_parsedFileSet, var_headerIncludeList, var_implementationIncludeList, constinArgument_inSyntaxComponentRoot.reader_mImportedComponentFileNameList (SOURCE_FILE_AT_LINE (104)), constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (105)), inCompiler COMMA_SOURCE_FILE_AT_LINE (95)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationListWithPredefinedTypes = var_semanticDeclarationList ;
  {
  routine_appendPredefinedTypesASTs (var_semanticDeclarationListWithPredefinedTypes, inCompiler COMMA_SOURCE_FILE_AT_LINE (109)) ;
  }
  GALGAS_semanticContext var_semanticContext ;
  {
  routine_buildSemanticContext (constinArgument_inSourceFile.reader_string (SOURCE_FILE_AT_LINE (113)), var_semanticDeclarationListWithPredefinedTypes, constinArgument_inSyntaxComponentRoot.reader_mEndOfSourceFile (SOURCE_FILE_AT_LINE (115)), var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (112)) ;
  }
  {
  routine_buildGrammarComponentMapForSemanticAnalysis (var_grammarComponentASTList, var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (119)) ;
  }
  {
  routine_buildOptionComponentMapForSemanticAnalysis (var_optionComponentFileNameList, ioArgument_ioParsedComponentStruct, var_semanticContext.mAttribute_mOptionComponentMapForSemanticAnalysis, inCompiler COMMA_SOURCE_FILE_AT_LINE (124)) ;
  }
  GALGAS_lexiqueComponentMapForSemanticAnalysis var_lexiqueMap ;
  {
  routine_buildLexiqueComponentMapForSemanticAnalysis (ioArgument_ioParsedComponentStruct, var_lexiqueMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (130)) ;
  }
  var_semanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis = var_lexiqueMap ;
  GALGAS_lstring var_lexiqueFilePath = GALGAS_lstring::constructor_new (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE_AT_LINE (137)).mAttribute_string.reader_absolutePathFromPath (constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (137)) COMMA_SOURCE_FILE_AT_LINE (137)), constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE_AT_LINE (138)).reader_location (SOURCE_FILE_AT_LINE (138)) COMMA_SOURCE_FILE_AT_LINE (136)) ;
  GALGAS_lexiqueComponentAST var_lexiqueComponentRoot ;
  {
  routine_parseLexiqueComponent (var_lexiqueFilePath, ioArgument_ioParsedComponentStruct, var_lexiqueComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (141)) ;
  }
  GALGAS_terminalMap var_terminalMap ;
  {
  routine_buildTerminalMap (var_lexiqueComponentRoot, var_terminalMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (148)) ;
  }
  GALGAS_stringset var_indexNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (150)) ;
  cEnumerator_indexingListAST enumerator_7013 (var_lexiqueComponentRoot.reader_mIndexingListAST (SOURCE_FILE_AT_LINE (151)), kEnumeration_up) ;
  while (enumerator_7013.hasCurrentObject ()) {
    var_indexNameSet.addAssign_operation (enumerator_7013.current_mIndexName (HERE).reader_string (SOURCE_FILE_AT_LINE (152)) COMMA_SOURCE_FILE_AT_LINE (152)) ;
    enumerator_7013.gotoNextObject () ;
  }
  GALGAS_bool var_hasIndexing = var_lexiqueComponentRoot.reader_mIndexingDirectory (SOURCE_FILE_AT_LINE (154)).mAttribute_location.reader_isNowhere (SOURCE_FILE_AT_LINE (154)).operator_not (SOURCE_FILE_AT_LINE (154)) ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (156)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_string var_lexiqueName = constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE_AT_LINE (157)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (157)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (157)) ;
    GALGAS_semanticDeclarationSortedListForGeneration var_decoratedDeclarationListForGeneration ;
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (var_semanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (159)) ;
    GALGAS_syntaxDeclarationForGeneration var_syntaxDeclarationForGeneration ;
    {
    routine_semanticAnalysisOfSyntaxComponent (constinArgument_inSyntaxComponentRoot.reader_mNonterminalDeclarationList (SOURCE_FILE_AT_LINE (162)), constinArgument_inSyntaxComponentRoot.reader_mRuleList (SOURCE_FILE_AT_LINE (163)), var_componentName.reader_string (SOURCE_FILE_AT_LINE (164)), var_lexiqueName.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (165)), var_semanticContext, var_predefinedTypes, var_terminalMap, var_indexNameSet, var_hasIndexing, var_syntaxDeclarationForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (161)) ;
    }
    {
    routine_performSemanticAnalysis (constinArgument_inSyntaxComponentRoot.reader_mSemanticDeclarationList (SOURCE_FILE_AT_LINE (175)), var_semanticContext, var_decoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (174)) ;
    }
    var_decoratedDeclarationListForGeneration.addAssign_operation (var_syntaxDeclarationForGeneration, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (179)) ;
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (181)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_string var_headerString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileHeader (inCompiler, var_componentName.reader_string (SOURCE_FILE_AT_LINE (183)), var_lexiqueName, var_headerIncludeList, var_semanticContext.mAttribute_mTypeMap.reader_allKeyList (SOURCE_FILE_AT_LINE (186)) COMMA_SOURCE_FILE_AT_LINE (182))) ;
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_8631 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_8631.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_31_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_8631.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (189)) COMMA_SOURCE_FILE_AT_LINE (189)) ;
        enumerator_8631.gotoNextObject () ;
      }
      cEnumerator_semanticDeclarationSortedListForGeneration enumerator_8766 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
      while (enumerator_8766.hasCurrentObject ()) {
        var_headerString.dotAssign_operation (callCategoryReader_appendDeclaration_32_ ((const cPtr_semanticDeclarationForGeneration *) enumerator_8766.current_mDeclaration (HERE).ptr (), constinArgument_inOutputDirectory, inCompiler COMMA_SOURCE_FILE_AT_LINE (192)) COMMA_SOURCE_FILE_AT_LINE (192)) ;
        enumerator_8766.gotoNextObject () ;
      }
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE_AT_LINE (196)).operator_concat (GALGAS_string (".h") COMMA_SOURCE_FILE_AT_LINE (196)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), var_headerString, GALGAS_string ("\n"
        "\n"), GALGAS_string ("#endif\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (194)) ;
      }
      const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (204)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_string var_implementationString = GALGAS_string (filewrapperTemplate_syntaxFileGenerationTemplate_syntaxFileImplementation (inCompiler, var_componentName.reader_string (SOURCE_FILE_AT_LINE (206)), var_implementationIncludeList COMMA_SOURCE_FILE_AT_LINE (205))) ;
        cEnumerator_semanticDeclarationSortedListForGeneration enumerator_9434 (var_decoratedDeclarationListForGeneration, kEnumeration_up) ;
        while (enumerator_9434.hasCurrentObject ()) {
          var_implementationString.dotAssign_operation (callCategoryReader_appendTypeGenericImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_9434.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (210)) COMMA_SOURCE_FILE_AT_LINE (210)) ;
          var_implementationString.dotAssign_operation (callCategoryReader_appendSpecificImplementation ((const cPtr_semanticDeclarationForGeneration *) enumerator_9434.current_mDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (211)) COMMA_SOURCE_FILE_AT_LINE (211)) ;
          enumerator_9434.gotoNextObject () ;
        }
        GALGAS_string var_lexiqueCppName = GALGAS_string ("C_Lexique_").operator_concat (constinArgument_inSyntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE_AT_LINE (214)).mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (214)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (214)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (213)) ;
        cEnumerator_ruleDeclarationList enumerator_9885 (var_syntaxDeclarationForGeneration.reader_mRuleDeclarationList (SOURCE_FILE_AT_LINE (215)), kEnumeration_up) ;
        while (enumerator_9885.hasCurrentObject ()) {
          cEnumerator_ruleLabelImplementationList enumerator_9979 (enumerator_9885.current_mLabelImplementationList (HERE), kEnumeration_up) ;
          while (enumerator_9979.hasCurrentObject ()) {
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (218)) COMMA_SOURCE_FILE_AT_LINE (218)).operator_concat (GALGAS_string ("::rule_") COMMA_SOURCE_FILE_AT_LINE (218)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (219)) COMMA_SOURCE_FILE_AT_LINE (219)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (219)).operator_concat (enumerator_9885.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (220)) COMMA_SOURCE_FILE_AT_LINE (219)).operator_concat (GALGAS_string ("_i") COMMA_SOURCE_FILE_AT_LINE (220)).operator_concat (enumerator_9885.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (221)) COMMA_SOURCE_FILE_AT_LINE (221)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (221)).operator_concat (enumerator_9979.current_mLabelName (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (221)) COMMA_SOURCE_FILE_AT_LINE (221)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n") COMMA_SOURCE_FILE_AT_LINE (222)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, enumerator_9979.current_mSignatureForGeneration (HERE), enumerator_9979.current_mInstructionListForGeneration (HERE), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (223)) COMMA_SOURCE_FILE_AT_LINE (223)) ;
            enumerator_9979.gotoNextObject () ;
          }
          GALGAS_semanticInstructionListForGeneration var_instructionList ;
          GALGAS_lstring joker_10936_0 ; // Joker input parameter
          GALGAS_formalParameterListForGeneration joker_10939_0 ; // Joker input parameter
          GALGAS_formalParameterSignature joker_10942_0 ; // Joker input parameter
          GALGAS_location joker_10945_0 ; // Joker input parameter
          enumerator_9885.current_mLabelImplementationList (HERE).method_first (joker_10936_0, joker_10939_0, joker_10942_0, joker_10945_0, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (235)) ;
          GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (236)) COMMA_SOURCE_FILE_AT_LINE (236)).operator_concat (GALGAS_string ("::rule_") COMMA_SOURCE_FILE_AT_LINE (236)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (237)) COMMA_SOURCE_FILE_AT_LINE (237)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (237)).operator_concat (enumerator_9885.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (238)) COMMA_SOURCE_FILE_AT_LINE (237)).operator_concat (GALGAS_string ("_i") COMMA_SOURCE_FILE_AT_LINE (238)).operator_concat (enumerator_9885.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (239)) COMMA_SOURCE_FILE_AT_LINE (239)).operator_concat (GALGAS_string ("_parse") COMMA_SOURCE_FILE_AT_LINE (239)) ;
          var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
            "\n") COMMA_SOURCE_FILE_AT_LINE (240)) ;
          var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (243)), function_syntaxSignatureOfInstructionList (GALGAS_string ("parse"), var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (244)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (241)) COMMA_SOURCE_FILE_AT_LINE (241)) ;
          const enumGalgasBool test_5 = var_hasIndexing.boolEnum () ;
          if (kBoolTrue == test_5) {
            GALGAS_semanticInstructionListForGeneration var_instructionList ;
            GALGAS_lstring joker_11912_0 ; // Joker input parameter
            GALGAS_formalParameterListForGeneration joker_11915_0 ; // Joker input parameter
            GALGAS_formalParameterSignature joker_11918_0 ; // Joker input parameter
            GALGAS_location joker_11921_0 ; // Joker input parameter
            enumerator_9885.current_mLabelImplementationList (HERE).method_first (joker_11912_0, joker_11915_0, joker_11918_0, joker_11921_0, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (253)) ;
            GALGAS_string var_ruleName = GALGAS_string ("cParser_").operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (254)) COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (GALGAS_string ("::rule_") COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (var_componentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (255)) COMMA_SOURCE_FILE_AT_LINE (255)).operator_concat (GALGAS_string ("_") COMMA_SOURCE_FILE_AT_LINE (255)).operator_concat (enumerator_9885.current_mNonterminalName (HERE).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (256)) COMMA_SOURCE_FILE_AT_LINE (255)).operator_concat (GALGAS_string ("_i") COMMA_SOURCE_FILE_AT_LINE (256)).operator_concat (enumerator_9885.current_mRuleIndex (HERE).reader_string (SOURCE_FILE_AT_LINE (257)) COMMA_SOURCE_FILE_AT_LINE (257)).operator_concat (GALGAS_string ("_indexing") COMMA_SOURCE_FILE_AT_LINE (257)) ;
            var_implementationString.dotAssign_operation (GALGAS_string ("//---------------------------------------------------------------------------*\n"
              "\n") COMMA_SOURCE_FILE_AT_LINE (258)) ;
            var_implementationString.dotAssign_operation (function_generateProcedure (var_ruleName, GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (261)), function_syntaxSignatureOfInstructionList (GALGAS_string ("indexing"), var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (262)), GALGAS_bool (false), var_lexiqueCppName, GALGAS_bool (false), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (259)) COMMA_SOURCE_FILE_AT_LINE (259)) ;
          }
          enumerator_9885.gotoNextObject () ;
        }
        {
        GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, var_componentName.reader_string (SOURCE_FILE_AT_LINE (272)).operator_concat (GALGAS_string (".cpp") COMMA_SOURCE_FILE_AT_LINE (272)), GALGAS_string ("//"), GALGAS_string ("\n"
          "\n"), var_implementationString, GALGAS_string ("\n"
          "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE_AT_LINE (270)) ;
        }
      }
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//              Routine 'compileSyntaxComponentFromSourceFile'               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSyntaxComponentFromSourceFile (const GALGAS_lstring constinArgument_inSourceFile,
                                                   const GALGAS_string constinArgument_inOutputDirectory,
                                                   GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                                   C_Compiler * inCompiler
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE_AT_LINE (291)).reader_stringByDeletingPathExtension (SOURCE_FILE_AT_LINE (291)) ;
  GALGAS_lstring var_basenameKey = GALGAS_lstring::constructor_new (var_basename, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (292)) ;
  GALGAS_syntaxComponentAST var_syntaxComponentRoot ;
  const enumGalgasBool test_0 = ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE_AT_LINE (294)).reader_hasKey (var_basename COMMA_SOURCE_FILE_AT_LINE (294)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_lstring joker_13721_0 ; // Joker input parameter
    ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE_AT_LINE (295)).method_searchKey (var_basenameKey, joker_13721_0, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (295)) ;
  }else if (kBoolFalse == test_0) {
    {
    cGrammar_syntaxSLRgrammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile, var_syntaxComponentRoot COMMA_SOURCE_FILE_AT_LINE (297)) ;
    }
    {
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedSyntaxComponentMap.modifier_insertKey (var_basenameKey, constinArgument_inSourceFile, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE_AT_LINE (298)) ;
    }
  }
  {
  routine_compileSyntaxComponentFromAST (constinArgument_inSourceFile, constinArgument_inOutputDirectory, var_syntaxComponentRoot, ioArgument_ioParsedComponentStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (301)) ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


