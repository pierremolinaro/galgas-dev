//---------------------------------------------------------------------------*
//                                                                           *
//                File 'include_typeMethodCallInstruction.h'                 *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                    november 18th, 2006, at 17h31'21"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_typeMethodCallInstruction'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeMethodCallInstruction : public cPtr_typeInstruction {
  private : typedef cPtr_typeInstruction inherited ;
//--- START OF USER ZONE 2

public : virtual void generateInstruction (AC_OutputStream & inCppFile,
                                           const C_String & inLexiqueClassName,
                                           const C_String & inTargetFileName,
                                           sint32 & ioPrototypeIndex,
                                           const bool inGenerateDebug,
                                           const bool inGenerateSemanticInstructions) const ;
public : virtual bool isLexiqueFormalArgumentUsed (const bool inGenerateSemanticInstructions) const ;
public : virtual bool formalArgumentIsUsed (const GGS_typeCplusPlusName & inArgumentCppName,
                                            const bool inGenerateSemanticInstructions) const ;

//--- END OF USER ZONE 2

  public : cPtr_typeMethodCallInstruction (const GGS_typeCplusPlusName & ,
                                const GGS_lstring & ,
                                const GGS_typeExpressionList &  COMMA_LOCATION_ARGS) ;
  public : GGS_typeCplusPlusName  aNomCppVariable ;
  public : GGS_lstring  aNomMethodeSimple ;
  public : GGS_typeExpressionList  mExpressionsList ;
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Lexique & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;
//--- Comparison
  public : virtual bool isEqualToObject (const C_GGS_Object * inOperand) const ;
} ;

//---------------------------------------------------------------------------*

