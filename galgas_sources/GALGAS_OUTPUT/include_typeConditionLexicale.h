//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'include_typeConditionLexicale.h'                   *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       may 27th, 2007, at 15h55'39"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1

class cDecoderController ;
class cDecoderTargetState ;
class cDecoderState ;

//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_typeConditionLexicale'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeConditionLexicale : public cPtr__AC_galgas_class {
//--- START OF USER ZONE 2

  public : virtual void
  generateLexicalCondition (AC_OutputStream & inCppFile) = 0 ;

  public : virtual void
  generateDecoderFromCondition (C_Lexique & inLexique,
                                const GGS_tListeInstructionsLexicales & inInstructionList,
                                cDecoderState * ioCurrentState,
                                const sint32 inTargetStateNumber,
                                cDecoderController & ioDecoderController) ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeConditionLexicale (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeConditionLexicale (void) {}
  #endif

//--- Attributes
//--- Class message
  public : virtual const char * _message (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

