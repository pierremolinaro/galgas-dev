//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'include_typeConditionLexicale.h'                   *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     january 21th, 2007, at 20h33'22"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1

class cDecoderController ;
class cDecoderTargetState ;
class cDecoderState ;

//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_typeConditionLexicale'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeConditionLexicale : public C_GGS_Object {
//--- START OF USER ZONE 2

  public : virtual void
  generateLexicalCondition (AC_OutputStream & inCppFile) = 0 ;

  public : virtual void
  generateDecoderFromCondition (C_Lexique & inLexique,
                                const GGS_tListeInstructionsLexicales & inInstructionList,
                                cDecoderState * ioCurrentState,
                                const sint32 inTargetStateNumber,
                                cDecoderController & ioDecoderController) ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeConditionLexicale (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeConditionLexicale (void) {}
  #endif

//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Lexique & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;
//--- Comparison
  public : virtual bool isEqualToObject (const C_GGS_Object * inOperand) const = 0 ;
} ;

//---------------------------------------------------------------------------*

