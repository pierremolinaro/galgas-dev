//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'mda_galgas_routines.cpp'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 8th, 2008, at 12h3'20"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "mda_galgas_routines.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "mda_galgas_routines.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "buildMapsForMetamodel.h"
#include "buildMapsForSemantics.h"
#include "galgas_LL1_grammar.h"
#include "grammarLL1grammar.h"
#include "guiLL1grammar.h"
#include "metamodelLL1grammar.h"
#include "optionHeaderGeneration.h"
#include "optionImplementationGeneration.h"
#include "optionLL1grammar.h"
#include "optionTreewalkingForBuildingOptionMap.h"
#include "programSLRgrammar.h"
#include "projectLL1grammar.h"
#include "semanticsSLRgrammar.h"
#include "syntaxSLRgrammar.h"
#include "treewalkingSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of routine "getOutputDirectory"               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getOutputDirectory (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                GGS_string & var_cas_outOuputDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getOutputDirectory at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outOuputDirectory = var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (60)) ;
  var_cas_outOuputDirectory.writeString ("/GALGAS_OUTPUT_TEMP") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getOutputDirectory\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "compileOptionComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileOptionComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  var_cas_inOutputDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileOptionComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_optionComponentRoot  var_cas_optionComponentRoot ;
  var_cas_optionComponentRoot = optionLL1grammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile
                                  COMMA_SOURCE_FILE_AT_LINE (72)) ;
  GGS_commandLineOptionMap  var_cas_boolOptionMap ;
  GGS_commandLineOptionMap  var_cas_uintOptionMap ;
  GGS_commandLineOptionMap  var_cas_stringOptionMap ;
  _walk_throught_optionTreewalkingForBuildingOptionMap (_inLexique, var_cas_optionComponentRoot, var_cas_boolOptionMap, var_cas_uintOptionMap, var_cas_stringOptionMap) ;
  _walk_throught_optionHeaderGeneration (_inLexique, var_cas_optionComponentRoot, var_cas_inOutputDirectory, var_cas_inSourceFile.ggs_string ().reader_lastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (85)).reader_stringByDeletingPathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (85)), var_cas_boolOptionMap, var_cas_uintOptionMap, var_cas_stringOptionMap) ;
  _walk_throught_optionImplementationGeneration (_inLexique, var_cas_optionComponentRoot, var_cas_inOutputDirectory, var_cas_inSourceFile.ggs_string ().reader_lastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (92)).reader_stringByDeletingPathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (92)), var_cas_boolOptionMap, var_cas_uintOptionMap, var_cas_stringOptionMap) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileOptionComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileMetamodelComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileMetamodelComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  var_cas_inOutputDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileMetamodelComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_metamodelComponentName ;
  var_cas_metamodelComponentName = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (105)).reader_stringByDeletingPathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (105)) ;
  GGS_metamodelComponentRoot  var_cas_metamodelComponentRoot ;
  GGS_location  var_cas_endOfSourceFile ;
  var_cas_metamodelComponentRoot = metamodelLL1grammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile,
                                  var_cas_endOfSourceFile
                                  COMMA_SOURCE_FILE_AT_LINE (108)) ;
  GGS_typeMap  var_cas_typeMap ;
  ::routine_constructBuiltinTypeMap (_inLexique,  var_cas_typeMap COMMA_SOURCE_FILE_AT_LINE (110)) ;
  GGS_stringset  var_cas_importedComponentSet ;
  var_cas_importedComponentSet = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_routineMap  var_cas_routineMap ;
  var_cas_routineMap = GGS_routineMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeList  var_cas_typeList ;
  _walk_throught_buildMapsForMetamodel (_inLexique, var_cas_metamodelComponentRoot, var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (116)), var_cas_endOfSourceFile, var_cas_importedComponentSet, var_cas_typeMap, var_cas_routineMap, var_cas_typeList) ;
  if (((var_cas_typeMap.reader_unsolvedIndexCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (124)))._operator_strictSup (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    GGS_string var_cas_m ;
    var_cas_m = (var_cas_typeMap.reader_unsolvedIndexCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (125)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (125)))._operator_concat (GGS_string (true, " type")) ;
    if (((var_cas_typeMap.reader_unsolvedIndexCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (126)))._operator_isEqual (GGS_uint (true, 1U))).isBuiltAndTrue ()) {
      var_cas_m = GGS_string (true, "1 type is not defined:") ;
    }else{
      var_cas_m = (var_cas_typeMap.reader_unsolvedIndexCount (_inLexique COMMA_SOURCE_FILE_AT_LINE (129)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (129)))._operator_concat (GGS_string (true, " types are not defined:")) ;
    }
    {
      GGS_stringlist::cEnumerator enumerator_6255 (var_cas_typeMap.reader_unsolvedIndexKeyStringList (_inLexique COMMA_SOURCE_FILE_AT_LINE (131)), true) ;
      const GGS_stringlist::cElement * operand_6255 = NULL ;
      while (((operand_6255 = (GGS_stringlist::cElement *) enumerator_6255.nextObject ()))) {
        macroValidPointer (operand_6255) ;
        var_cas_m.writeString ("\n"
          "  - @") ;
        var_cas_m._dotAssign_operation (operand_6255->mValue) ;
      }
    }
    var_cas_endOfSourceFile.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, var_cas_m COMMA_SOURCE_FILE_AT_LINE (134)) ;
  }
  {
    GGS_typeMap::cEnumerator enumerator_6454 (var_cas_typeMap, true) ;
    const GGS_typeMap::cElement * operand_6454 = NULL ;
    while (((operand_6454 = (GGS_typeMap::cElement *) enumerator_6454.nextObject ()))) {
      macroValidPointer (operand_6454) ;
      const GGS_ACGalgasType  _temp_6517 = operand_6454->mInfo.mType ;
      if (_temp_6517._isBuilt ()) {
        _temp_6517 (HERE)->method_checkNoCircularity (_inLexique, var_cas_typeMap.reader_count (_inLexique COMMA_SOURCE_FILE_AT_LINE (138)) COMMA_SOURCE_FILE_AT_LINE (138)) ;
      }
    }
  }
  GGS_sortedTypeList  var_cas_sortedTypeList ;
  var_cas_sortedTypeList = GGS_sortedTypeList ::constructor_emptySortedList (_inLexique COMMA_HERE) ;
  if (((GGS_uint ::constructor_errorCount (_inLexique COMMA_HERE))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    {
      GGS_typeList::cEnumerator enumerator_6736 (var_cas_typeList, true) ;
      const GGS_typeList::cElement * operand_6736 = NULL ;
      while (((operand_6736 = (GGS_typeList::cElement *) enumerator_6736.nextObject ()))) {
        macroValidPointer (operand_6736) ;
        const GGS_ACGalgasType  _temp_6783 = operand_6736->mType ;
        if (_temp_6783._isBuilt ()) {
          _temp_6783 (HERE)->method_enterInSortedList (_inLexique, var_cas_sortedTypeList, var_cas_typeMap COMMA_SOURCE_FILE_AT_LINE (144)) ;
        }
      }
    }
  }
  if (((GGS_uint ::constructor_errorCount (_inLexique COMMA_HERE))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    GGS_string var_cas_generatedUserZone2 ;
    var_cas_generatedUserZone2 = GGS_string (true, "") ;
    var_cas_generatedUserZone2.writeString ("#ifndef ") ;
    var_cas_generatedUserZone2._dotAssign_operation (var_cas_metamodelComponentName) ;
    var_cas_generatedUserZone2.writeString ("_METAMODEL_DEFINED\n"
    "#define ") ;
    var_cas_generatedUserZone2._dotAssign_operation (var_cas_metamodelComponentName) ;
    var_cas_generatedUserZone2.writeString ("_METAMODEL_DEFINED\n"
    "\n"
    "#include <string.h>\n"
    "\n") ;
    var_cas_generatedUserZone2._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
    var_cas_generatedUserZone2.writeString ("#include \"galgas/predefined_types.h\"\n") ;
    {
      GGS_stringset::cEnumerator enumerator_7293 (var_cas_importedComponentSet, true) ;
      const GGS_stringset::cElement * operand_7293 = NULL ;
      while (((operand_7293 = (GGS_stringset::cElement *) enumerator_7293.nextObject ()))) {
        macroValidPointer (operand_7293) ;
        var_cas_generatedUserZone2.writeString ("#include \"") ;
        var_cas_generatedUserZone2._dotAssign_operation (operand_7293->mKey) ;
        var_cas_generatedUserZone2.writeString (".h\"\n") ;
      }
    }
    var_cas_generatedUserZone2.writeString ("\n") ;
    GGS_string var_cas_generatedUserZone3 ;
    var_cas_generatedUserZone3 = GGS_string (true, "") ;
    var_cas_generatedUserZone3.modifier_setCapacity (_inLexique, GGS_uint (true, 50000U) COMMA_SOURCE_FILE_AT_LINE (165)) ;
    var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
    var_cas_generatedUserZone3.writeString ("sint32 _metamodel_index_for_") ;
    var_cas_generatedUserZone3._dotAssign_operation (var_cas_metamodelComponentName) ;
    var_cas_generatedUserZone3.writeString (" (void) ;\n"
      "\n") ;
    var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "Class Predeclarations") COMMA_HERE)) ;
    {
      GGS_sortedTypeList::cEnumerator enumerator_7783 (var_cas_sortedTypeList, true) ;
      const GGS_sortedTypeList::cElement * operand_7783 = NULL ;
      while (((operand_7783 = (GGS_sortedTypeList::cElement *) enumerator_7783.nextObject ()))) {
        macroValidPointer (operand_7783) ;
        const GGS_ACGalgasType  _temp_7856 = operand_7783->mType ;
        if (_temp_7856._isBuilt ()) {
          _temp_7856 (HERE)->method_generatePredeclarationInHeader (_inLexique, var_cas_generatedUserZone3 COMMA_SOURCE_FILE_AT_LINE (171)) ;
        }
      }
    }
    var_cas_generatedUserZone3.writeString ("\n") ;
    {
      GGS_sortedTypeList::cEnumerator enumerator_7974 (var_cas_sortedTypeList, true) ;
      const GGS_sortedTypeList::cElement * operand_7974 = NULL ;
      while (((operand_7974 = (GGS_sortedTypeList::cElement *) enumerator_7974.nextObject ()))) {
        macroValidPointer (operand_7974) ;
        const GGS_ACGalgasType  _temp_8047 = operand_7974->mType ;
        if (_temp_8047._isBuilt ()) {
          _temp_8047 (HERE)->method_generateDeclaration_1_inHeader (_inLexique, var_cas_generatedUserZone3 COMMA_SOURCE_FILE_AT_LINE (175)) ;
        }
      }
    }
    {
      GGS_sortedTypeList::cEnumerator enumerator_8132 (var_cas_sortedTypeList, true) ;
      const GGS_sortedTypeList::cElement * operand_8132 = NULL ;
      while (((operand_8132 = (GGS_sortedTypeList::cElement *) enumerator_8132.nextObject ()))) {
        macroValidPointer (operand_8132) ;
        const GGS_ACGalgasType  _temp_8205 = operand_8132->mType ;
        if (_temp_8205._isBuilt ()) {
          _temp_8205 (HERE)->method_generateDeclaration_2_inHeader (_inLexique, var_cas_generatedUserZone3 COMMA_SOURCE_FILE_AT_LINE (178)) ;
        }
      }
    }
    var_cas_generatedUserZone3._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
    var_cas_generatedUserZone3.writeString ("#endif\n") ;
    GGS_string::class_method_generateFile (_inLexique, var_cas_inOutputDirectory, (var_cas_metamodelComponentName)._operator_concat (GGS_string (true, ".h")), GGS_string (true, "//"), GGS_string (true, "\n"
      "\n"), var_cas_generatedUserZone2, GGS_string (true, "\n"
      "\n"), var_cas_generatedUserZone3 COMMA_SOURCE_FILE_AT_LINE (183)) ;
  }
  if (((GGS_uint ::constructor_errorCount (_inLexique COMMA_HERE))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
    GGS_string var_cas_generatedCode2 ;
    var_cas_generatedCode2 = GGS_string (true, "") ;
    var_cas_generatedCode2._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
    var_cas_generatedCode2.writeString ("#include \"version_libpm.h\"\n"
    "#if LIBPM_VERSION != THE_LIBPM_VERSION\n"
    "  #error \"This file has been compiled with a version of GALGAS different than the version of libpm\"\n"
    "#endif\n"
      "\n"
    "#include \"") ;
    var_cas_generatedCode2._dotAssign_operation (var_cas_metamodelComponentName) ;
    var_cas_generatedCode2.writeString (".h\"\n"
    "#include \"utilities/MF_MemoryControl.h\"\n"
      "\n") ;
    var_cas_generatedCode2._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
    var_cas_generatedCode2.writeString ("#include <typeinfo>\n"
      "\n") ;
    var_cas_generatedCode2._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
    var_cas_generatedCode2.writeString ("#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  #define SOURCE_FILE_AT_LINE(line) \"") ;
    var_cas_generatedCode2._dotAssign_operation (var_cas_metamodelComponentName) ;
    var_cas_generatedCode2.writeString (".gMetamodel\", line\n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)\n"
    "#else\n"
    "  #define SOURCE_FILE_AT_LINE(line)\n"
    "  #define COMMA_SOURCE_FILE_AT_LINE(line)\n"
    "#endif\n"
      "\n") ;
    var_cas_generatedCode2._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
    GGS_string var_cas_generatedCode3 ;
    var_cas_generatedCode3 = GGS_string (true, "") ;
    var_cas_generatedCode3.modifier_setCapacity (_inLexique, GGS_uint (true, 500000U) COMMA_SOURCE_FILE_AT_LINE (218)) ;
    var_cas_generatedCode3._dotAssign_operation (GGS_string::constructor_CppTitleComment (_inLexique, GGS_string (true, "Metamodel Management") COMMA_HERE)) ;
    var_cas_generatedCode3.writeString ("static C_MetamodelManager gMetamodelManager (\"") ;
    var_cas_generatedCode3._dotAssign_operation (var_cas_metamodelComponentName) ;
    var_cas_generatedCode3.writeString ("\", ") ;
    var_cas_generatedCode3._dotAssign_operation (var_cas_sortedTypeList.reader_length (_inLexique COMMA_SOURCE_FILE_AT_LINE (222)).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (222))) ;
    var_cas_generatedCode3.writeString (") ;\n"
      "\n") ;
    var_cas_generatedCode3._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
    var_cas_generatedCode3.writeString ("sint32 _metamodel_index_for_") ;
    var_cas_generatedCode3._dotAssign_operation (var_cas_metamodelComponentName) ;
    var_cas_generatedCode3.writeString (" (void) {\n"
    "  return gMetamodelManager.mMetamodelComponentIndex ;\n"
    "}\n"
      "\n") ;
    {
      GGS_sortedTypeList::cEnumerator enumerator_10120 (var_cas_sortedTypeList, true) ;
      const GGS_sortedTypeList::cElement * operand_10120 = NULL ;
      while (((operand_10120 = (GGS_sortedTypeList::cElement *) enumerator_10120.nextObject ()))) {
        macroValidPointer (operand_10120) ;
        const GGS_ACGalgasType  _temp_10193 = operand_10120->mType ;
        if (_temp_10193._isBuilt ()) {
          _temp_10193 (HERE)->method_generateImplementation (_inLexique, var_cas_generatedCode3 COMMA_SOURCE_FILE_AT_LINE (228)) ;
        }
      }
    }
    var_cas_generatedCode3._dotAssign_operation (GGS_string::constructor_CppLineComment (_inLexique COMMA_HERE)) ;
    GGS_string::class_method_generateFile (_inLexique, var_cas_inOutputDirectory, (var_cas_metamodelComponentName)._operator_concat (GGS_string (true, ".cpp")), GGS_string (true, "//"), GGS_string (true, "\n"
      "\n"), var_cas_generatedCode2, GGS_string (true, "\n"
      "\n"), var_cas_generatedCode3 COMMA_SOURCE_FILE_AT_LINE (232)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileMetamodelComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "compileSemanticsComponent"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSemanticsComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */ COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSemanticsComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticsComponentRoot  var_cas_semanticsComponentRoot ;
  GGS_location  var_cas_endOfSourceFile ;
  var_cas_semanticsComponentRoot = semanticsSLRgrammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile,
                                  var_cas_endOfSourceFile
                                  COMMA_SOURCE_FILE_AT_LINE (263)) ;
  GGS__list_semanticDeclaration  var_cas_semanticDeclarationList ;
  var_cas_semanticDeclarationList = var_cas_semanticsComponentRoot.reader_mSemanticDeclarationList (_inLexique COMMA_SOURCE_FILE_AT_LINE (265)) ;
  GGS_stringset  var_cas_parsedFileSet ;
  var_cas_parsedFileSet = GGS_stringset ::constructor_setWithString (_inLexique, var_cas_inSourceFile.ggs_string ().reader_lastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (266)) COMMA_HERE) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSemanticsComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "compileSyntaxComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSyntaxComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */ COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileSyntaxComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_syntaxComponentRoot  var_cas_syntaxComponentRoot ;
  var_cas_syntaxComponentRoot = syntaxSLRgrammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile
                                  COMMA_SOURCE_FILE_AT_LINE (312)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileSyntaxComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "compileGrammarComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileGrammarComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */ COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileGrammarComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_grammarComponentRoot  var_cas_grammarComponentRoot ;
  grammarLL1grammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile,
                                  var_cas_grammarComponentRoot
                                  COMMA_SOURCE_FILE_AT_LINE (322)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileGrammarComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "compileGuiComponent"               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileGuiComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */ COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileGuiComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_guiComponentRoot  var_cas_guiComponentRoot ;
  var_cas_guiComponentRoot = guiLL1grammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile
                                  COMMA_SOURCE_FILE_AT_LINE (332)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileGuiComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "compileProgramComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileProgramComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */ COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileProgramComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_programComponentRoot  var_cas_programComponentRoot ;
  var_cas_programComponentRoot = programSLRgrammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile
                                  COMMA_SOURCE_FILE_AT_LINE (342)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileProgramComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "compileTreewalkingComponent"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileTreewalkingComponent (C_Compiler & _inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */ COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileTreewalkingComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_treewalkingComponentRoot  var_cas_treewalkingComponentRoot ;
  var_cas_treewalkingComponentRoot = treewalkingSLRgrammar::_performSourceFileParsing_ (_inLexique,
                                  NULL,
                                  var_cas_inSourceFile
                                  COMMA_SOURCE_FILE_AT_LINE (352)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileTreewalkingComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*

