//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'predefinedTypes.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    november 14th, 2010, at 16h49'43"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "predefinedTypes.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "predefinedTypes.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "appendPredefinedListTypeAST"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_appendPredefinedListTypeAST (C_CompilerEx & inLexique,
                                GGS_semanticDeclarationListAST  & var_cas_ioDeclarationListASTs,
                                const GGS_string  var_cas_inElementTypeName
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_appendPredefinedListTypeAST at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_attributeInCollectionListAST  var_cas_attributeList = GGS_attributeInCollectionListAST ::constructor_emptyList () ;
  GGS_lstringlist  var_cas_featureList = GGS_lstringlist ::constructor_emptyList () ;
  var_cas_featureList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("setter"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (33))) ;
  var_cas_attributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, var_cas_inElementTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (35)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mValue"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (36)), var_cas_featureList) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_listDeclarationAST ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_inElementTypeName).operator_concat (GGS_string ("list")), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (40)), var_cas_attributeList COMMA_SOURCE_FILE_AT_LINE (39))) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_appendPredefinedListTypeAST\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "appendPredefined2StringListTypeAST"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_appendPredefined2StringListTypeAST (C_CompilerEx & inLexique,
                                GGS_semanticDeclarationListAST  & var_cas_ioDeclarationListASTs
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_appendPredefined2StringListTypeAST at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_attributeInCollectionListAST  var_cas_attributeList = GGS_attributeInCollectionListAST ::constructor_emptyList () ;
  GGS_lstringlist  var_cas_featureList = GGS_lstringlist ::constructor_emptyList () ;
  var_cas_featureList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("setter"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (52))) ;
  var_cas_attributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("string"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (54)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mValue0"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (55)), var_cas_featureList) ;
  var_cas_attributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("string"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (59)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mValue1"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (60)), var_cas_featureList) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_listDeclarationAST ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("2stringlist"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (64)), var_cas_attributeList COMMA_SOURCE_FILE_AT_LINE (63))) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_appendPredefined2StringListTypeAST\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "appendStructASTForTypeWithLocation"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_appendStructASTForTypeWithLocation (C_CompilerEx & inLexique,
                                GGS_semanticDeclarationListAST  & var_cas_ioDeclarationListASTs,
                                const GGS_string  var_cas_inElementTypeName
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_appendStructASTForTypeWithLocation at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstringlist  var_cas_featureList = GGS_lstringlist ::constructor_emptyList () ;
  GGS_attributeInCollectionListAST  var_cas_attributeList = GGS_attributeInCollectionListAST ::constructor_emptyList () ;
  var_cas_attributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, var_cas_inElementTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (77)), GGS_lstring ::constructor_new (inLexique, var_cas_inElementTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (77)), var_cas_featureList) ;
  var_cas_attributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("location"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (78)), GGS_lstring ::constructor_new (inLexique, GGS_string ("location"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (78)), var_cas_featureList) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_structDeclarationAST ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, (GGS_string ("l")).operator_concat (var_cas_inElementTypeName), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (80)), var_cas_attributeList COMMA_SOURCE_FILE_AT_LINE (79))) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_appendStructASTForTypeWithLocation\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "appendPredefinedTypesASTs"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_appendPredefinedTypesASTs (C_CompilerEx & inLexique,
                                GGS_semanticDeclarationListAST  & var_cas_ioDeclarationListASTs
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_appendPredefinedTypesASTs at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_applicationPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("application"), GGS_predefinedTypeKindEnum::constructor_predefined_application (inLexique COMMA_SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (90))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_filewrapperPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("filewrapper"), GGS_predefinedTypeKindEnum::constructor_predefined_filewrapper (inLexique COMMA_SOURCE_FILE_AT_LINE (91)) COMMA_SOURCE_FILE_AT_LINE (91))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_objectPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("object"), GGS_predefinedTypeKindEnum::constructor_predefined_object (inLexique COMMA_SOURCE_FILE_AT_LINE (92)) COMMA_SOURCE_FILE_AT_LINE (92))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_boolPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("bool"), GGS_predefinedTypeKindEnum::constructor_predefined_bool (inLexique COMMA_SOURCE_FILE_AT_LINE (93)) COMMA_SOURCE_FILE_AT_LINE (93))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_uintPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("uint"), GGS_predefinedTypeKindEnum::constructor_predefined_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (94)) COMMA_SOURCE_FILE_AT_LINE (94))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_uint64PredefinedTypeAST ::constructor_new (inLexique, GGS_string ("uint64"), GGS_predefinedTypeKindEnum::constructor_predefined_uint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (95)) COMMA_SOURCE_FILE_AT_LINE (95))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_sintPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("sint"), GGS_predefinedTypeKindEnum::constructor_predefined_sint (inLexique COMMA_SOURCE_FILE_AT_LINE (96)) COMMA_SOURCE_FILE_AT_LINE (96))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_sint64PredefinedTypeAST ::constructor_new (inLexique, GGS_string ("sint64"), GGS_predefinedTypeKindEnum::constructor_predefined_sint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (97)) COMMA_SOURCE_FILE_AT_LINE (97))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_charPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("char"), GGS_predefinedTypeKindEnum::constructor_predefined_char (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_doublePredefinedTypeAST ::constructor_new (inLexique, GGS_string ("double"), GGS_predefinedTypeKindEnum::constructor_predefined_double (inLexique COMMA_SOURCE_FILE_AT_LINE (99)) COMMA_SOURCE_FILE_AT_LINE (99))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_stringPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("string"), GGS_predefinedTypeKindEnum::constructor_predefined_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) COMMA_SOURCE_FILE_AT_LINE (100))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_locationPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("location"), GGS_predefinedTypeKindEnum::constructor_predefined_location (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) COMMA_SOURCE_FILE_AT_LINE (101))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_stringsetPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("stringset"), GGS_predefinedTypeKindEnum::constructor_predefined_stringset (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) COMMA_SOURCE_FILE_AT_LINE (102))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_functionPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("function"), GGS_predefinedTypeKindEnum::constructor_predefined_function (inLexique COMMA_SOURCE_FILE_AT_LINE (103)) COMMA_SOURCE_FILE_AT_LINE (103))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_typePredefinedTypeAST ::constructor_new (inLexique, GGS_string ("type"), GGS_predefinedTypeKindEnum::constructor_predefined_type (inLexique COMMA_SOURCE_FILE_AT_LINE (104)) COMMA_SOURCE_FILE_AT_LINE (104))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_binarysetPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("binaryset"), GGS_predefinedTypeKindEnum::constructor_predefined_binaryset (inLexique COMMA_SOURCE_FILE_AT_LINE (105)) COMMA_SOURCE_FILE_AT_LINE (105))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_dataPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("data"), GGS_predefinedTypeKindEnum::constructor_predefined_data (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) COMMA_SOURCE_FILE_AT_LINE (106))) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("luint") COMMA_SOURCE_FILE_AT_LINE (108)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("uint") COMMA_SOURCE_FILE_AT_LINE (109)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("uint64") COMMA_SOURCE_FILE_AT_LINE (110)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("function") COMMA_SOURCE_FILE_AT_LINE (111)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("string") COMMA_SOURCE_FILE_AT_LINE (112)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("lstring") COMMA_SOURCE_FILE_AT_LINE (113)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("type") COMMA_SOURCE_FILE_AT_LINE (114)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("object") COMMA_SOURCE_FILE_AT_LINE (115)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (117)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("uint") COMMA_SOURCE_FILE_AT_LINE (118)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("uint64") COMMA_SOURCE_FILE_AT_LINE (119)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("sint") COMMA_SOURCE_FILE_AT_LINE (120)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("sint64") COMMA_SOURCE_FILE_AT_LINE (121)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("char") COMMA_SOURCE_FILE_AT_LINE (122)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("double") COMMA_SOURCE_FILE_AT_LINE (123)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("string") COMMA_SOURCE_FILE_AT_LINE (124)) ;
  ::routine_appendPredefined2StringListTypeAST (inLexique,  var_cas_ioDeclarationListASTs COMMA_SOURCE_FILE_AT_LINE (126)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_appendPredefinedTypesASTs\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of wrapper 'predefinedTypeGenerationTemplate'        *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapperEx * gWrapperAllFiles_predefinedTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapperEx * gWrapperAllDirectories_predefinedTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapperEx gWrapperDirectory_0_predefinedTypeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_predefinedTypeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_predefinedTypeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesImplementation' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_predefinedTypesImplementation (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"predefined-types.h\"\n"
    "#include \"cCollectionElement.h\"\n"
    "#include \"cSortedListElement.h\"\n"
    "#include \"capSortedListElement.h\"\n"
    "#include \"galgas2/C_Compiler.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "cMapElement::cMapElement (const GALGAS_lstring & inLKey\n"
    "                          COMMA_LOCATION_ARGS) :\n"
    "cCollectionElement (THERE),\n"
    "mAttribute_lkey (inLKey) {\n"
    "}\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'primitiveTypesHeaderPrologue' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_primitiveTypesHeaderPrologue (C_CompilerEx & /* inLexique */,
                                const GGS_stringset & var_cas_TYPE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_LIST.isBuilt () ;
  if (isBuilt) {
    result << "\n"
      "#ifndef GALGAS2_PREDEFINED_TYPES\n"
      "#define GALGAS2_PREDEFINED_TYPES\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "#include \"strings/C_String.h\"\n"
      "#include \"galgas2/AC_GALGAS_root.h\"\n"
      "#include \"galgas2/C_galgas_type_descriptor.h\"\n"
      "#include \"galgas2/enumComparisonResult.h\"\n"
      "#include \"galgas2/cGenericAbstractEnumerator.h\"\n"
      "#include \"galgas2/AC_GALGAS_list.h\"\n"
      "#include \"galgas2/AC_GALGAS_sortedlist.h\"\n"
      "#include \"galgas2/AC_GALGAS_map.h\"\n"
      "#include \"galgas2/AC_GALGAS_uniqueMap.h\"\n"
      "#include \"galgas2/AC_GALGAS_class.h\"\n"
      "#include \"galgas2/acPtr_class.h\"\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class C_Compiler ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n" ;
    GGS_stringset::cEnumerator enumerator_776 (var_cas_TYPE_LIST, true) ;
    while (enumerator_776.hasCurrentObject ()) {
      result << "class GALGAS_" ;
      result << enumerator_776._key (HERE).reader_identifierRepresentation () ;
      result << " ;\n" ;
      enumerator_776.next () ;
    }
    result << "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypeSeparation' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_predefinedTypeSeparation (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"galgas2/cCollectionElement.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class cMapElement : public cCollectionElement {\n"
    "//--- Attribut\n"
    "  public : GALGAS_lstring mAttribute_lkey ;\n"
    "\n"
    "//--- Default constructor\n"
    "  public : cMapElement (const GALGAS_lstring & inLKey\n"
    "                        COMMA_LOCATION_ARGS) ;\n"
    "\n"
    "//--- No copy\n"
    "  private : cMapElement (const cMapElement &) ;\n"
    "  private : cMapElement & operator = (const cMapElement &) ;\n"
    "} ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"galgas2/cSortedListElement.h\"\n"
    "#include \"galgas2/capSortedListElement.h\"\n"
    "#include \"galgas2/C_galgas_function_descriptor.h\"\n"
    "#include \"galgas2/cObjectArray.h\"\n"
    "\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'sint_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_sint_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@sint type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_sint : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : PMSInt32 mSIntValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline PMSInt32 sintValue (void) const { return mSIntValue ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_sint (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_sint (const PMSInt32 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'sint64_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_sint64_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@sint64 type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_sint_36__34_ : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : PMSInt64 mSInt64Value ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline PMSInt64 uint64Value (void) const { return mSInt64Value ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_sint_36__34_ (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_sint_36__34_ (const PMSInt64 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'object_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_object_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@object type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class cPtr_object ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_object : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data member\n"
    "  private : cPtr_object * mSharedObject ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mSharedObject != NULL ; }\n"
    "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_object (void) ;\n"
    "\n"
    "//--------------------------------- Constructor from pointer\n"
    "  public : GALGAS_object (AC_GALGAS_root * inObjectPointer\n"
    "                          COMMA_LOCATION_ARGS) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_object (void) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_object (const GALGAS_object & inSource) ;\n"
    "  public : GALGAS_object & operator = (const GALGAS_object & inSource) ;\n"
    "\n"
    "//--------------------------------- Embedded Object\n"
    "  public : const AC_GALGAS_root * embeddedObject (void) const ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'uint_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_uint_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@uint type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_uint : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : PMUInt32 mUIntValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline PMUInt32 uintValue (void) const { return mUIntValue ; }\n"
    "  public : inline void increment (void) { mUIntValue ++ ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_uint (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_uint (const PMUInt32 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'uint64_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_uint64_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@uint64 type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_uint_36__34_ : public AC_GALGAS_root\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : PMUInt64 mUInt64Value ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline PMUInt64 uint64Value (void) const { return mUInt64Value ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_uint_36__34_ (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_uint_36__34_ (const PMUInt64 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'bool_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_bool_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@bool type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_bool : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : bool mBoolValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : inline bool isValidAndTrue (void) const { return mIsValid && mBoolValue ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline bool boolValue (void) const { return mBoolValue ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_bool (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_bool (const bool inValue) ;\n"
    "\n"
    "//--------------------------------- Constructor for comparison result\n"
    "  public : GALGAS_bool (const enumComparisonKind inComparisonKind,\n"
    "                        const enumComparisonResult inComparisonResult) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'binaryset_type' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_binaryset_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@binaryset type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"bdd/C_BDD.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_binaryset : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : C_BDD mBDD ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline C_BDD bddValue (void) const { return mBDD ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_binaryset (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_binaryset (const C_BDD & inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'function_type' template of 'predefinedTypeGenerationTemplate' filewrapper *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_function_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@function type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class C_galgas_function_descriptor ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_function : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data member\n"
    "  private : const C_galgas_function_descriptor * mFunctionDescriptor ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return NULL != mFunctionDescriptor ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mFunctionDescriptor = NULL ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline const C_galgas_function_descriptor * functionValue (void) const { return mFunctionDescriptor ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_function (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_function (void) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_function (const GALGAS_function & inSource) ;\n"
    "  public : GALGAS_function & operator = (const GALGAS_function & inSource) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_function (const C_galgas_function_descriptor * inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'type_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_type_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@type type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_type : public AC_GALGAS_root\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : const C_galgas_type_descriptor * mTypeDescriptor ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : inline bool isValid (void) const { return NULL != mTypeDescriptor ; }\n"
    "  public : inline void drop (void) { mTypeDescriptor = NULL ; }\n"
    "  public : inline const C_galgas_type_descriptor * typeValue (void) const { return mTypeDescriptor ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_type (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_type (void) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_type (const GALGAS_type & inSource) ;\n"
    "  public : GALGAS_type & operator = (const GALGAS_type & inSource) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_type (const C_galgas_type_descriptor * inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'location_type' template of 'predefinedTypeGenerationTemplate' filewrapper *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_location_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@location type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class C_SourceTextInString ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"galgas2/C_LocationInSource.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_location : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : C_LocationInSource mStartLocationInSource ;\n"
    "  private : C_LocationInSource mEndLocationInSource ;\n"
    "  private : C_SourceTextInString * mSourceText ;\n"
    "  private : bool mIsValid ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
    "  public : C_LocationInSource startLocation (void) const { return mStartLocationInSource ; }\n"
    "  public : C_LocationInSource endLocation (void) const { return mEndLocationInSource ; }\n"
    "  public : C_SourceTextInString * sourceText (void) const { return mSourceText ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_location (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_location (void) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_location (const GALGAS_location & inSource) ;\n"
    "  public : GALGAS_location & operator = (const GALGAS_location & inSource) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_location (const C_LocationInSource & inStartLocationInSource,\n"
    "                            const C_LocationInSource & inEndLocationInSource,\n"
    "                            C_SourceTextInString * inSourceText) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'data_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_data_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@data type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_data : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : TC_Array <PMUInt8> mData ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline TC_Array <PMUInt8> dataValue (void) const { return mData ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_data (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_data (const TC_Array <PMUInt8> & inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'char_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_char_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@char type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_char : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : utf32 mCharValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline utf32 charValue (void) const { return mCharValue ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_char (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_char (const utf32 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'double_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_double_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@double type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_double : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : double mDoubleValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline double doubleValue (void) const { return mDoubleValue ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_double (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_double (const double inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'string_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_string_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@string type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "AC_OutputStream & operator << (AC_OutputStream & inStream,\n"
    "                               const GALGAS_string & inString) ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "AC_OutputStream & operator << (AC_OutputStream & inStream,\n"
    "                               const GALGAS_lstring & inString) ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_string : public AC_GALGAS_root\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : C_String mString ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
    "  public : inline C_String stringValue (void) const { return mString ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_string (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_string (const C_String & inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'stringset_type' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_stringset_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@stringset type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class cSharedStringsetRoot ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_stringset : public AC_GALGAS_root\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : cSharedStringsetRoot * mSharedRoot ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mSharedRoot != NULL ; }\n"
    "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_stringset (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_stringset (void) ;\n"
    "\n"
    "//--------------------------------- In debug mode : check method\n"
    "  #ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "    protected : void checkStringset (LOCATION_ARGS) const ;\n"
    "  #endif\n"
    "\n"
    "//--------------------------------- Insulate\n"
    "  protected : void insulate (LOCATION_ARGS) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'filewrapper_type' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_filewrapper_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@uint type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class cRegularFileWrapper {\n"
    "  public : const char * mName ;\n"
    "  public : const char * mExtension ;\n"
    "  public : const char * mContents ;\n"
    "\n"
    "//--- Constructor\n"
    "  public : cRegularFileWrapper (const char * inName,\n"
    "                                const char * inExtension,\n"
    "                                const char * inContents) ;\n"
    "\n"
    "//--- No copy\n"
    "  private : cRegularFileWrapper (const cRegularFileWrapper &) ;\n"
    "  private : cRegularFileWrapper & operator = (const cRegularFileWrapper &) ;\n"
    "} ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class cDirectoryWrapper {\n"
    "  public : const char * mDirectoryName ;\n"
    "  public : const PMUInt32 mFileCount ;\n"
    "  public : const cRegularFileWrapper * * const mFiles ;\n"
    "  public : const PMUInt32 mDirectoryCount ;\n"
    "  public : const cDirectoryWrapper * * mDirectories ;\n"
    "\n"
    "//--- Constructor\n"
    "  public : cDirectoryWrapper (const char * inDirectoryName,\n"
    "                              const PMUInt32 inFileCount,\n"
    "                              const cRegularFileWrapper * * const inFiles,\n"
    "                              const PMUInt32 inDirectoryCount,\n"
    "                              const cDirectoryWrapper * * inDirectories) ;\n"
    "\n"
    "//--- No copy\n"
    "  private : cDirectoryWrapper (const cDirectoryWrapper &) ;\n"
    "  private : cDirectoryWrapper & operator = (const cDirectoryWrapper &) ;\n"
    "} ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_filewrapper : public AC_GALGAS_root {\n"
    "//--------------------------------- Private data members\n"
    "  private : const cDirectoryWrapper * mRootDirectoryPtr ;\n"
    "  private : C_String mCurrentDirectory ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return NULL != mRootDirectoryPtr ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mRootDirectoryPtr = NULL ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_filewrapper (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_filewrapper (const cDirectoryWrapper & inRootDirectory) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_filewrapper (const GALGAS_filewrapper & inSource) ;\n"
    "  public : GALGAS_filewrapper & operator = (const GALGAS_filewrapper & inSource) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'application_type' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_application_type (C_CompilerEx & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@application type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_application : public AC_GALGAS_root\n"
    " {\n"
    "//--------------------------------- Accessors\n"
    "  public : inline bool isValid (void) const { return false ; }\n"
    "  public : inline void drop (void) { }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_application (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_application (void) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_application (const GALGAS_application & inSource) ;\n"
    "  public : GALGAS_application & operator = (const GALGAS_application & inSource) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendPrimitiveTypeDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration * operand_11886
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_11886 != NULL) {
    var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendPrimitiveTypeDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendPrimitiveTypeDeclaration (C_CompilerEx &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration result = NULL ;
  if (NULL != inClassPtr) {
    if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration.count ()) {
      result = gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (inClassPtr->slotID () COMMA_HERE) ;
    }
    if (NULL == result) {
      AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
      if (superClassPtr != NULL) {
        result = findCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (superClassPtr) ;
        gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
      }
    }
    if (NULL == result) {
      result = category_reader__semanticDeclarationForGeneration_defaultReader_appendPrimitiveTypeDeclaration ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@primitiveTypeForGeneration.appendPrimitiveTypeDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__primitiveTypeForGeneration__appendPrimitiveTypeDeclaration (C_CompilerEx & inLexique,
                                const cPtr_primitiveTypeForGeneration * operand_12096
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_12096 != NULL) {
    switch (operand_12096->mKind.enumValue ()) {
    case GGS_predefinedTypeKindEnum::enum_predefined_object:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_object_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_uint:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_uint_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_uint64:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_uint64_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_sint:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_sint_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_sint64:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_sint64_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_char:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_char_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_double:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_double_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_string:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_string_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_stringset:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_stringset_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_bool:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_bool_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_binaryset:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_binaryset_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_function:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_function_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_location:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_location_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_type:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_type_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_data:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_data_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_filewrapper:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_filewrapper_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_application:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_application_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::kNotBuilt:
      break ;
    }
    var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_12096->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (291)), operand_12096->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (292)), operand_12096->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (293)), operand_12096->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (294)), operand_12096->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (295)), operand_12096->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (296)), operand_12096->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (297)), operand_12096->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (298)), operand_12096->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (299)), operand_12096->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (300)), operand_12096->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (301)), operand_12096->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (302)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "generatePredefinedTypeFiles"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generatePredefinedTypeFiles (C_CompilerEx & inLexique,
                                const GGS_string  var_cas_inDirectory
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generatePredefinedTypeFiles at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  const GGS_bool cond_17427 = (var_cas_inDirectory).operator_isNotEqual (GGS_string ("")) ;
  if (cond_17427.isBuiltAndTrue ()) {
    const GGS_bool cond_15075 = (var_cas_inDirectory.reader_directoryExists ()).operator_not () ;
    if (cond_15075.isBuiltAndTrue ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inDirectory)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (316)) ;
    }else if (cond_15075.isBuiltAndFalse ()) {
      GGS_semanticDeclarationListAST  var_cas_predefinedTypeASTlist = GGS_semanticDeclarationListAST ::constructor_emptyList () ;
      ::routine_appendPredefinedTypesASTs (inLexique,  var_cas_predefinedTypeASTlist COMMA_SOURCE_FILE_AT_LINE (319)) ;
      GGS_semanticContext var_cas_semanticContext ;
      ::routine_buildSemanticContext (inLexique,  GGS_string (""),  var_cas_predefinedTypeASTlist,  GGS_location (inLexique),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (322)) ;
      GGS_semanticDeclarationSortedListForGeneration  var_cas_decoratedDeclarationListForGeneration ;
      ::routine_performSemanticAnalysis (inLexique,  var_cas_predefinedTypeASTlist,  var_cas_semanticContext,  var_cas_decoratedDeclarationListForGeneration COMMA_SOURCE_FILE_AT_LINE (330)) ;
      GGS_string var_cas_generatedCode = template_filewrapper_predefinedTypeGenerationTemplate_primitiveTypesHeaderPrologue (inLexique, var_cas_semanticContext.mTypeMap.reader_allKeys (inLexique COMMA_SOURCE_FILE_AT_LINE (337))) ;
      {
        GGS_semanticDeclarationSortedListForGeneration::cEnumerator enumerator_15983 (var_cas_decoratedDeclarationListForGeneration, true) ;
        const GGS_semanticDeclarationSortedListForGeneration::cElement * operand_15983 = NULL ;
        while (((operand_15983 = enumerator_15983.nextObject ()))) {
          macroValidPointer (operand_15983) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (operand_15983->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_15983->mDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (340)))) ;
        }
      }
      {
        GGS_semanticDeclarationSortedListForGeneration::cEnumerator enumerator_16131 (var_cas_decoratedDeclarationListForGeneration, true) ;
        const GGS_semanticDeclarationSortedListForGeneration::cElement * operand_16131 = NULL ;
        while (((operand_16131 = enumerator_16131.nextObject ()))) {
          macroValidPointer (operand_16131) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (operand_16131->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_16131->mDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (343)))) ;
        }
      }
      var_cas_generatedCode.dotAssign_operation (template_filewrapper_predefinedTypeGenerationTemplate_predefinedTypeSeparation (inLexique)) ;
      {
        GGS_semanticDeclarationSortedListForGeneration::cEnumerator enumerator_16364 (var_cas_decoratedDeclarationListForGeneration, true) ;
        const GGS_semanticDeclarationSortedListForGeneration::cElement * operand_16364 = NULL ;
        while (((operand_16364 = enumerator_16364.nextObject ()))) {
          macroValidPointer (operand_16364) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (operand_16364->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_16364->mDeclaration.getPtr (), var_cas_inDirectory COMMA_SOURCE_FILE_AT_LINE (347)))) ;
        }
      }
      const GGS_bool cond_16745 = (GGS_uint ::constructor_errorCount (inLexique COMMA_SOURCE_FILE_AT_LINE (349))).operator_isEqual (GGS_uint (0U)) ;
      if (cond_16745.isBuiltAndTrue ()) {
        GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types.h"), GGS_string ("//"), GGS_string ("\n"
          "\n"), var_cas_generatedCode, GGS_string ("\n"
          "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (350)) ;
      }
      var_cas_generatedCode = template_filewrapper_predefinedTypeGenerationTemplate_predefinedTypesImplementation (inLexique) ;
      {
        GGS_semanticDeclarationSortedListForGeneration::cEnumerator enumerator_16957 (var_cas_decoratedDeclarationListForGeneration, true) ;
        const GGS_semanticDeclarationSortedListForGeneration::cElement * operand_16957 = NULL ;
        while (((operand_16957 = enumerator_16957.nextObject ()))) {
          macroValidPointer (operand_16957) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (operand_16957->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_16957->mDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (363)))) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (operand_16957->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_16957->mDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (364)))) ;
        }
      }
      const GGS_bool cond_17403 = (GGS_uint ::constructor_errorCount (inLexique COMMA_SOURCE_FILE_AT_LINE (366))).operator_isEqual (GGS_uint (0U)) ;
      if (cond_17403.isBuiltAndTrue ()) {
        GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types.cpp"), GGS_string ("//"), GGS_string ("\n"
          "\n"), var_cas_generatedCode, GGS_string ("\n"
          "\n"), GGS_string ("") COMMA_SOURCE_FILE_AT_LINE (367)) ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generatePredefinedTypeFiles\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "printPredefinedTypes"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_printPredefinedTypes (C_CompilerEx & inLexique
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_printPredefinedTypes at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticDeclarationListAST  var_cas_predefinedTypeASTlist = GGS_semanticDeclarationListAST ::constructor_emptyList () ;
  ::routine_appendPredefinedTypesASTs (inLexique,  var_cas_predefinedTypeASTlist COMMA_SOURCE_FILE_AT_LINE (385)) ;
  GGS_semanticContext var_cas_semanticContext ;
  ::routine_buildSemanticContext (inLexique,  GGS_string (""),  var_cas_predefinedTypeASTlist,  GGS_location (inLexique),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (388)) ;
  GGS_string var_cas_s = ((GGS_string ("There are ")).operator_concat (var_cas_semanticContext.mTypeMap.reader_count ().reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (395)))).operator_concat (GGS_string (" predefined types:")) ;
  {
    GGS_unifiedTypeMap::cEnumerator enumerator_18004 (var_cas_semanticContext.mTypeMap, true) ;
    const GGS_unifiedTypeMap::cElement * operand_18004 = NULL ;
    while (((operand_18004 = enumerator_18004.nextObject ()))) {
      macroValidPointer (operand_18004) ;
      var_cas_s.appendCString ("\n"
        "  - @") ;
      var_cas_s.dotAssign_operation (operand_18004->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (397))) ;
    }
  }
  inLexique.printMessage ((var_cas_s).operator_concat (GGS_string ("\n")) COMMA_SOURCE_FILE_AT_LINE (399)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_printPredefinedTypes\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "printFeaturesOfType"               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_printFeaturesOfType (C_CompilerEx & inLexique,
                                const GGS_string  var_cas_inTypeName,
                                const GGS_typeKindEnum  var_cas_inTypeKindEnum,
                                const GGS_typedAttributeList   var_cas_inAllTypedAttributeList,
                                const GGS_constructorMap   var_cas_inConstructorMap,
                                const GGS_readerMap   var_cas_inReaderMap,
                                const GGS_modifierMap   var_cas_inModifierMap,
                                const GGS_instanceMethodMap   var_cas_inInstanceMethodMap,
                                const GGS_classMethodMap   var_cas_inClassMethodMap,
                                const GGS_uint   var_cas_inHandledOperatorFlags,
                                const GGS_unifiedTypeMapProxyList   var_cas_inAddAssignOperatorArguments,
                                const GGS_withAccessorMap   var_cas_inWithAccessorMap
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_printFeaturesOfType at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_s = ((GGS_string ("Features of @")).operator_concat (var_cas_inTypeName)).operator_concat (GGS_string (" type:\n")) ;
  var_cas_s.appendCString (" - kind: ") ;
  var_cas_s.dotAssign_operation (var_cas_inTypeKindEnum.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (418))) ;
  var_cas_s.appendCString (";\n") ;
  {
    GGS_typedAttributeList::cEnumerator enumerator_18774 (var_cas_inAllTypedAttributeList, true) ;
    const GGS_typedAttributeList::cElement * operand_18774 = enumerator_18774.nextObject () ;
    if ((operand_18774 != NULL)) {
      var_cas_s.appendCString (" - attribute(s):\n") ;
      bool _foreach_loop_18774 ;
      do{
        macroValidPointer (operand_18774) ;
        var_cas_s.appendCString ("    @") ;
        var_cas_s.dotAssign_operation (operand_18774->mAttributeTypeProxy.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (424))) ;
        var_cas_s.appendCString (" ") ;
        var_cas_s.dotAssign_operation (operand_18774->mAttributeName) ;
        var_cas_s.appendCString ("\n") ;
        operand_18774 = enumerator_18774.nextObject () ;
        _foreach_loop_18774 = ((operand_18774 != NULL)) ;
        if (_foreach_loop_18774) {
        }
      }while (_foreach_loop_18774) ;
    }
  }
  {
    GGS_constructorMap::cEnumerator enumerator_18945 (var_cas_inConstructorMap, true) ;
    const GGS_constructorMap::cElement * operand_18945 = enumerator_18945.nextObject () ;
    if ((operand_18945 != NULL)) {
      var_cas_s.appendCString (" - constructor(s):\n") ;
      bool _foreach_loop_18945 ;
      do{
        macroValidPointer (operand_18945) ;
        var_cas_s.appendCString ("    ") ;
        var_cas_s.dotAssign_operation (operand_18945->mKey) ;
        {
          GGS_unifiedTypeMapProxyList::cEnumerator enumerator_19048 (operand_18945->mInfo.mArgumentTypeList, true) ;
          const GGS_unifiedTypeMapProxyList::cElement * operand_19048 = NULL ;
          while (((operand_19048 = enumerator_19048.nextObject ()))) {
            macroValidPointer (operand_19048) ;
            var_cas_s.appendCString (" \?@") ;
            var_cas_s.dotAssign_operation (operand_19048->mType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (433))) ;
          }
        }
        var_cas_s.appendCString (" -> @") ;
        var_cas_s.dotAssign_operation (operand_18945->mInfo.mReturnedType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (435))) ;
        var_cas_s.appendCString ("\n") ;
        operand_18945 = enumerator_18945.nextObject () ;
        _foreach_loop_18945 = ((operand_18945 != NULL)) ;
        if (_foreach_loop_18945) {
        }
      }while (_foreach_loop_18945) ;
    }
  }
  {
    GGS_readerMap::cEnumerator enumerator_19193 (var_cas_inReaderMap, true) ;
    const GGS_readerMap::cElement * operand_19193 = enumerator_19193.nextObject () ;
    if ((operand_19193 != NULL)) {
      var_cas_s.appendCString (" - readers(s):\n") ;
      bool _foreach_loop_19193 ;
      do{
        macroValidPointer (operand_19193) ;
        var_cas_s.appendCString ("    ") ;
        var_cas_s.dotAssign_operation (operand_19193->mKey) ;
        {
          GGS_unifiedTypeMapProxyList::cEnumerator enumerator_19292 (operand_19193->mInfo.mArgumentTypeList, true) ;
          const GGS_unifiedTypeMapProxyList::cElement * operand_19292 = NULL ;
          while (((operand_19292 = enumerator_19292.nextObject ()))) {
            macroValidPointer (operand_19292) ;
            var_cas_s.appendCString (" \?@") ;
            var_cas_s.dotAssign_operation (operand_19292->mType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (444))) ;
          }
        }
        var_cas_s.appendCString (" -> @") ;
        var_cas_s.dotAssign_operation (operand_19193->mInfo.mReturnedType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (446))) ;
        var_cas_s.appendCString ("\n") ;
        operand_19193 = enumerator_19193.nextObject () ;
        _foreach_loop_19193 = ((operand_19193 != NULL)) ;
        if (_foreach_loop_19193) {
        }
      }while (_foreach_loop_19193) ;
    }
  }
  {
    GGS_modifierMap::cEnumerator enumerator_19439 (var_cas_inModifierMap, true) ;
    const GGS_modifierMap::cElement * operand_19439 = enumerator_19439.nextObject () ;
    if ((operand_19439 != NULL)) {
      var_cas_s.appendCString (" - modifiers(s):\n") ;
      bool _foreach_loop_19439 ;
      do{
        macroValidPointer (operand_19439) ;
        var_cas_s.appendCString ("    ") ;
        var_cas_s.dotAssign_operation (operand_19439->mKey) ;
        {
          GGS_formalParameterSignature::cEnumerator enumerator_19537 (operand_19439->mInfo.mParameterList, true) ;
          const GGS_formalParameterSignature::cElement * operand_19537 = NULL ;
          while (((operand_19537 = enumerator_19537.nextObject ()))) {
            macroValidPointer (operand_19537) ;
            var_cas_s.appendCString (" ") ;
            var_cas_s.dotAssign_operation (operand_19537->mFormalArgumentPassingMode.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (455))) ;
            var_cas_s.appendCString ("@") ;
            var_cas_s.dotAssign_operation (operand_19537->mFormalArgumentType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (455))) ;
          }
        }
        var_cas_s.appendCString ("\n") ;
        operand_19439 = enumerator_19439.nextObject () ;
        _foreach_loop_19439 = ((operand_19439 != NULL)) ;
        if (_foreach_loop_19439) {
        }
      }while (_foreach_loop_19439) ;
    }
  }
  {
    GGS_instanceMethodMap::cEnumerator enumerator_19714 (var_cas_inInstanceMethodMap, true) ;
    const GGS_instanceMethodMap::cElement * operand_19714 = enumerator_19714.nextObject () ;
    if ((operand_19714 != NULL)) {
      var_cas_s.appendCString (" - instance method(s):\n") ;
      bool _foreach_loop_19714 ;
      do{
        macroValidPointer (operand_19714) ;
        var_cas_s.appendCString ("    ") ;
        var_cas_s.dotAssign_operation (operand_19714->mKey) ;
        {
          GGS_formalParameterSignature::cEnumerator enumerator_19818 (operand_19714->mInfo.mParameterList, true) ;
          const GGS_formalParameterSignature::cElement * operand_19818 = NULL ;
          while (((operand_19818 = enumerator_19818.nextObject ()))) {
            macroValidPointer (operand_19818) ;
            var_cas_s.appendCString (" ") ;
            var_cas_s.dotAssign_operation (operand_19818->mFormalArgumentPassingMode.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (466))) ;
            var_cas_s.appendCString ("@") ;
            var_cas_s.dotAssign_operation (operand_19818->mFormalArgumentType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (466))) ;
          }
        }
        var_cas_s.appendCString ("\n") ;
        operand_19714 = enumerator_19714.nextObject () ;
        _foreach_loop_19714 = ((operand_19714 != NULL)) ;
        if (_foreach_loop_19714) {
        }
      }while (_foreach_loop_19714) ;
    }
  }
  {
    GGS_classMethodMap::cEnumerator enumerator_19992 (var_cas_inClassMethodMap, true) ;
    const GGS_classMethodMap::cElement * operand_19992 = enumerator_19992.nextObject () ;
    if ((operand_19992 != NULL)) {
      var_cas_s.appendCString (" - class method(s):\n") ;
      bool _foreach_loop_19992 ;
      do{
        macroValidPointer (operand_19992) ;
        var_cas_s.appendCString ("    ") ;
        var_cas_s.dotAssign_operation (operand_19992->mKey) ;
        {
          GGS_formalParameterSignature::cEnumerator enumerator_20093 (operand_19992->mInfo.mParameterList, true) ;
          const GGS_formalParameterSignature::cElement * operand_20093 = NULL ;
          while (((operand_20093 = enumerator_20093.nextObject ()))) {
            macroValidPointer (operand_20093) ;
            var_cas_s.appendCString (" ") ;
            var_cas_s.dotAssign_operation (operand_20093->mFormalArgumentPassingMode.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (477))) ;
            var_cas_s.appendCString ("@") ;
            var_cas_s.dotAssign_operation (operand_20093->mFormalArgumentType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (477))) ;
          }
        }
        var_cas_s.appendCString ("\n") ;
        operand_19992 = enumerator_19992.nextObject () ;
        _foreach_loop_19992 = ((operand_19992 != NULL)) ;
        if (_foreach_loop_19992) {
        }
      }while (_foreach_loop_19992) ;
    }
  }
  var_cas_s.appendCString (" - operators(s):\n") ;
  const GGS_bool cond_20423 = ((var_cas_inHandledOperatorFlags).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (483)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_20423.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" + @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_20581 = ((var_cas_inHandledOperatorFlags).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (486)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_20581.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" - @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_20739 = ((var_cas_inHandledOperatorFlags).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (489)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_20739.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" * @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_20897 = ((var_cas_inHandledOperatorFlags).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (492)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_20897.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" / @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_21055 = ((var_cas_inHandledOperatorFlags).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (495)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_21055.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" % @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_21213 = ((var_cas_inHandledOperatorFlags).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (498)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_21213.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" & @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_21370 = ((var_cas_inHandledOperatorFlags).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (501)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_21370.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" | @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_21528 = ((var_cas_inHandledOperatorFlags).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (504)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_21528.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" ^ @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_21689 = ((var_cas_inHandledOperatorFlags).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (507)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_21689.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" . @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_21907 = ((var_cas_inHandledOperatorFlags).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (510)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_21907.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" >> @uint -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" << @uint -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_22045 = ((var_cas_inHandledOperatorFlags).operator_and (function_unaryPlusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (514)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_22045.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    + @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_22184 = ((var_cas_inHandledOperatorFlags).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (517)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_22184.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    - @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_22323 = ((var_cas_inHandledOperatorFlags).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (520)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_22323.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    ~ @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_22462 = ((var_cas_inHandledOperatorFlags).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (523)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_22462.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    not @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_22663 = ((var_cas_inHandledOperatorFlags).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (526)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_22663.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" ++ -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -- -> @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  {
    GGS_unifiedTypeMapProxyList::cEnumerator enumerator_22707 (var_cas_inAddAssignOperatorArguments, true) ;
    const GGS_unifiedTypeMapProxyList::cElement * operand_22707 = enumerator_22707.nextObject () ;
    if ((operand_22707 != NULL)) {
      var_cas_s.appendCString ("    @") ;
      var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
      var_cas_s.appendCString (" +=") ;
      bool _foreach_loop_22707 ;
      do{
        macroValidPointer (operand_22707) ;
        var_cas_s.appendCString (" !@") ;
        var_cas_s.dotAssign_operation (operand_22707->mType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (534))) ;
        operand_22707 = enumerator_22707.nextObject () ;
        _foreach_loop_22707 = ((operand_22707 != NULL)) ;
        if (_foreach_loop_22707) {
        }
      }while (_foreach_loop_22707) ;
      var_cas_s.appendCString ("\n") ;
    }
  }
  const GGS_bool cond_22963 = ((var_cas_inHandledOperatorFlags).operator_and (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (538)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_22963.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" .= @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString ("\n") ;
  }
  const GGS_bool cond_23316 = ((var_cas_inHandledOperatorFlags).operator_and (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (541)))).operator_isNotEqual (GGS_uint (0U)) ;
  if (cond_23316.isBuiltAndTrue ()) {
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" <  @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @bool\n") ;
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" <= @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @bool\n") ;
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" >  @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @bool\n") ;
    var_cas_s.appendCString ("    @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" >= @") ;
    var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
    var_cas_s.appendCString (" -> @bool\n") ;
  }
  var_cas_s.appendCString ("    @") ;
  var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
  var_cas_s.appendCString (" =  @") ;
  var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
  var_cas_s.appendCString (" -> @bool\n") ;
  var_cas_s.appendCString ("    @") ;
  var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
  var_cas_s.appendCString (" != @") ;
  var_cas_s.dotAssign_operation (var_cas_inTypeName) ;
  var_cas_s.appendCString (" -> @bool\n") ;
  {
    GGS_withAccessorMap::cEnumerator enumerator_23492 (var_cas_inWithAccessorMap, true) ;
    const GGS_withAccessorMap::cElement * operand_23492 = enumerator_23492.nextObject () ;
    if ((operand_23492 != NULL)) {
      var_cas_s.appendCString (" - 'with' accessor method(s):\n") ;
      bool _foreach_loop_23492 ;
      do{
        macroValidPointer (operand_23492) ;
        var_cas_s.appendCString ("    ") ;
        var_cas_s.dotAssign_operation (operand_23492->mKey) ;
        var_cas_s.appendCString ("\?@") ;
        var_cas_s.dotAssign_operation (operand_23492->mInfo.mArgumentType.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (554))) ;
        var_cas_s.appendCString ("\n") ;
        operand_23492 = enumerator_23492.nextObject () ;
        _foreach_loop_23492 = ((operand_23492 != NULL)) ;
        if (_foreach_loop_23492) {
        }
      }while (_foreach_loop_23492) ;
    }
  }
  inLexique.printMessage (var_cas_s COMMA_SOURCE_FILE_AT_LINE (557)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_printFeaturesOfType\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "printPredefinedTypeFeature"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_printPredefinedTypeFeature (C_CompilerEx & inLexique,
                                const GGS_string  var_cas_inTypeName
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_printPredefinedTypeFeature at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticDeclarationListAST  var_cas_predefinedTypeASTlist = GGS_semanticDeclarationListAST ::constructor_emptyList () ;
  ::routine_appendPredefinedTypesASTs (inLexique,  var_cas_predefinedTypeASTlist COMMA_SOURCE_FILE_AT_LINE (566)) ;
  GGS_semanticContext var_cas_semanticContext ;
  ::routine_buildSemanticContext (inLexique,  GGS_string (""),  var_cas_predefinedTypeASTlist,  GGS_location (inLexique),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (569)) ;
  const GGS_bool cond_24513 = (var_cas_inTypeName).operator_isEqual (GGS_string ("*")) ;
  if (cond_24513.isBuiltAndTrue ()) {
    {
      GGS_unifiedTypeMap::cEnumerator enumerator_24149 (var_cas_semanticContext.mTypeMap, true) ;
      const GGS_unifiedTypeMap::cElement * operand_24149 = NULL ;
      while (((operand_24149 = enumerator_24149.nextObject ()))) {
        macroValidPointer (operand_24149) ;
        ::routine_printFeaturesOfType (inLexique,  operand_24149->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (579)),  operand_24149->mInfo.mTypeKindEnum,  operand_24149->mInfo.mAllTypedAttributeList,  operand_24149->mInfo.mConstructorMap,  operand_24149->mInfo.mReaderMap,  operand_24149->mInfo.mModifierMap,  operand_24149->mInfo.mInstanceMethodMap,  operand_24149->mInfo.mClassMethodMap,  operand_24149->mInfo.mHandledOperatorFlags,  operand_24149->mInfo.mAddAssignOperatorArguments,  operand_24149->mInfo.mWithAccessorMap COMMA_SOURCE_FILE_AT_LINE (578)) ;
      }
    }
  }else if (cond_24513.isBuiltAndFalse ()) {
    elementOf_GGS_unifiedTypeMap * operand_24548 = (elementOf_GGS_unifiedTypeMap *) var_cas_semanticContext.mTypeMap.searchForReadWithInstruction (var_cas_inTypeName) ;
    if (NULL != operand_24548) {
      ::routine_printFeaturesOfType (inLexique,  var_cas_inTypeName,  operand_24548->mInfo.mTypeKindEnum,  operand_24548->mInfo.mAllTypedAttributeList,  operand_24548->mInfo.mConstructorMap,  operand_24548->mInfo.mReaderMap,  operand_24548->mInfo.mModifierMap,  operand_24548->mInfo.mInstanceMethodMap,  operand_24548->mInfo.mClassMethodMap,  operand_24548->mInfo.mHandledOperatorFlags,  operand_24548->mInfo.mAddAssignOperatorArguments,  operand_24548->mInfo.mWithAccessorMap COMMA_SOURCE_FILE_AT_LINE (594)) ;
    }else{
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("'")).operator_concat (var_cas_inTypeName)).operator_concat (GGS_string ("' is not a predefined type")) COMMA_SOURCE_FILE_AT_LINE (609)) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_printPredefinedTypeFeature\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_predefinedTypes (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (category_reader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration) category_reader__primitiveTypeForGeneration__appendPrimitiveTypeDeclaration, gClassInfoFor__primitiveTypeForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_predefinedTypes (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_predefinedTypes (prologueRoutineFor_predefinedTypes, epilogueRoutineFor_predefinedTypes) ;

//---------------------------------------------------------------------------*

