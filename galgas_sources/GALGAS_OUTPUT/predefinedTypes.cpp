//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'predefinedTypes.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 12th, 2010, at 11h2'50"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "predefinedTypes.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "predefinedTypes.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "appendPredefinedListTypeAST"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_appendPredefinedListTypeAST (C_Compiler & inLexique,
                                GGS_semanticDeclarationListAST  & var_cas_ioDeclarationListASTs,
                                const GGS_string  var_cas_inElementTypeName
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_appendPredefinedListTypeAST at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_attributeInCollectionListAST  var_cas_attributeList = GGS_attributeInCollectionListAST ::constructor_emptyList () ;
  var_cas_attributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, var_cas_inElementTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (33)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mValue"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (34))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_listDeclarationAST ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, (var_cas_inElementTypeName).operator_concat (GGS_string ("list")), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (37)), var_cas_attributeList COMMA_SOURCE_FILE_AT_LINE (36))) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_appendPredefinedListTypeAST\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "appendStructASTForTypeWithLocation"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_appendStructASTForTypeWithLocation (C_Compiler & inLexique,
                                GGS_semanticDeclarationListAST  & var_cas_ioDeclarationListASTs,
                                const GGS_string  var_cas_inElementTypeName
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_appendStructASTForTypeWithLocation at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_attributeInCollectionListAST  var_cas_attributeList = GGS_attributeInCollectionListAST ::constructor_emptyList () ;
  var_cas_attributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, var_cas_inElementTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (49)), GGS_lstring ::constructor_new (inLexique, var_cas_inElementTypeName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (49))) ;
  var_cas_attributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("location"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (50)), GGS_lstring ::constructor_new (inLexique, GGS_string ("location"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (50))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_structDeclarationAST ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, (GGS_string ("l")).operator_concat (var_cas_inElementTypeName), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (52)), var_cas_attributeList COMMA_SOURCE_FILE_AT_LINE (51))) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_appendStructASTForTypeWithLocation\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "appendPredefinedTypesASTs"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_appendPredefinedTypesASTs (C_Compiler & inLexique,
                                GGS_semanticDeclarationListAST  & var_cas_ioDeclarationListASTs
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_appendPredefinedTypesASTs at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_objectPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("object"), GGS_predefinedTypeKindEnum::constructor_predefined_object (inLexique COMMA_SOURCE_FILE_AT_LINE (62)) COMMA_SOURCE_FILE_AT_LINE (62))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_boolPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("bool"), GGS_predefinedTypeKindEnum::constructor_predefined_bool (inLexique COMMA_SOURCE_FILE_AT_LINE (63)) COMMA_SOURCE_FILE_AT_LINE (63))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_uintPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("uint"), GGS_predefinedTypeKindEnum::constructor_predefined_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) COMMA_SOURCE_FILE_AT_LINE (64))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_uint64PredefinedTypeAST ::constructor_new (inLexique, GGS_string ("uint64"), GGS_predefinedTypeKindEnum::constructor_predefined_uint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (65)) COMMA_SOURCE_FILE_AT_LINE (65))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_sintPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("sint"), GGS_predefinedTypeKindEnum::constructor_predefined_sint (inLexique COMMA_SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_sint64PredefinedTypeAST ::constructor_new (inLexique, GGS_string ("sint64"), GGS_predefinedTypeKindEnum::constructor_predefined_sint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (67)) COMMA_SOURCE_FILE_AT_LINE (67))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_charPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("char"), GGS_predefinedTypeKindEnum::constructor_predefined_char (inLexique COMMA_SOURCE_FILE_AT_LINE (68)) COMMA_SOURCE_FILE_AT_LINE (68))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_doublePredefinedTypeAST ::constructor_new (inLexique, GGS_string ("double"), GGS_predefinedTypeKindEnum::constructor_predefined_double (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) COMMA_SOURCE_FILE_AT_LINE (69))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_stringPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("string"), GGS_predefinedTypeKindEnum::constructor_predefined_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) COMMA_SOURCE_FILE_AT_LINE (70))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_locationPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("location"), GGS_predefinedTypeKindEnum::constructor_predefined_location (inLexique COMMA_SOURCE_FILE_AT_LINE (71)) COMMA_SOURCE_FILE_AT_LINE (71))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_stringsetPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("stringset"), GGS_predefinedTypeKindEnum::constructor_predefined_stringset (inLexique COMMA_SOURCE_FILE_AT_LINE (72)) COMMA_SOURCE_FILE_AT_LINE (72))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_functionPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("function"), GGS_predefinedTypeKindEnum::constructor_predefined_function (inLexique COMMA_SOURCE_FILE_AT_LINE (73)) COMMA_SOURCE_FILE_AT_LINE (73))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_typePredefinedTypeAST ::constructor_new (inLexique, GGS_string ("type"), GGS_predefinedTypeKindEnum::constructor_predefined_type (inLexique COMMA_SOURCE_FILE_AT_LINE (74)) COMMA_SOURCE_FILE_AT_LINE (74))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_binarysetPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("binaryset"), GGS_predefinedTypeKindEnum::constructor_predefined_binaryset (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) COMMA_SOURCE_FILE_AT_LINE (75))) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_dataPredefinedTypeAST ::constructor_new (inLexique, GGS_string ("data"), GGS_predefinedTypeKindEnum::constructor_predefined_data (inLexique COMMA_SOURCE_FILE_AT_LINE (76)) COMMA_SOURCE_FILE_AT_LINE (76))) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("luint") COMMA_SOURCE_FILE_AT_LINE (78)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("uint") COMMA_SOURCE_FILE_AT_LINE (79)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("uint64") COMMA_SOURCE_FILE_AT_LINE (80)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("function") COMMA_SOURCE_FILE_AT_LINE (81)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("string") COMMA_SOURCE_FILE_AT_LINE (82)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("lstring") COMMA_SOURCE_FILE_AT_LINE (83)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("type") COMMA_SOURCE_FILE_AT_LINE (84)) ;
  ::routine_appendPredefinedListTypeAST (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("object") COMMA_SOURCE_FILE_AT_LINE (85)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("bool") COMMA_SOURCE_FILE_AT_LINE (87)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("uint") COMMA_SOURCE_FILE_AT_LINE (88)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("uint64") COMMA_SOURCE_FILE_AT_LINE (89)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("sint") COMMA_SOURCE_FILE_AT_LINE (90)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("sint64") COMMA_SOURCE_FILE_AT_LINE (91)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("char") COMMA_SOURCE_FILE_AT_LINE (92)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("double") COMMA_SOURCE_FILE_AT_LINE (93)) ;
  ::routine_appendStructASTForTypeWithLocation (inLexique,  var_cas_ioDeclarationListASTs,  GGS_string ("string") COMMA_SOURCE_FILE_AT_LINE (94)) ;
  GGS_lstringlist  var_cas_constantList = GGS_lstringlist ::constructor_emptyList () ;
  var_cas_constantList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("zero"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (98))) ;
  var_cas_constantList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("un"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (99))) ;
  var_cas_constantList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("deux"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (100))) ;
  GGS_enumMessageAssociationListAST  var_cas_enumMessageAssociationListAST = GGS_enumMessageAssociationListAST ::constructor_emptyList () ;
  var_cas_enumMessageAssociationListAST.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("deux"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (102)), GGS_lstring ::constructor_new (inLexique, GGS_string ("message deux"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (102))) ;
  var_cas_enumMessageAssociationListAST.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("un"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (103)), GGS_lstring ::constructor_new (inLexique, GGS_string ("message un"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (103))) ;
  var_cas_enumMessageAssociationListAST.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("zero"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (104)), GGS_lstring ::constructor_new (inLexique, GGS_string ("message zero"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (104))) ;
  GGS_enumMessageListAST  var_cas_enumMessageListAST = GGS_enumMessageListAST ::constructor_emptyList () ;
  var_cas_enumMessageListAST.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("test"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (106)), var_cas_enumMessageAssociationListAST) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_enumDeclarationAST ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("0enum"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (108)), var_cas_constantList, var_cas_enumMessageListAST COMMA_SOURCE_FILE_AT_LINE (107))) ;
  GGS_attributeInCollectionListAST  var_cas_sortedListAttributeList = GGS_attributeInCollectionListAST ::constructor_emptyList () ;
  var_cas_sortedListAttributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("uint"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (115)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mFirst"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (115))) ;
  var_cas_sortedListAttributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("char"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (116)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mSecond"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (116))) ;
  var_cas_sortedListAttributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("string"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (117)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mThird"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (117))) ;
  GGS_sortedListSortDescriptorListAST  var_cas_sortDescriptorList = GGS_sortedListSortDescriptorListAST ::constructor_emptyList () ;
  var_cas_sortDescriptorList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("mThird"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (119)), GGS_bool (true)) ;
  var_cas_sortDescriptorList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("mFirst"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (120)), GGS_bool (false)) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_sortedListDeclarationAST ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("0sortedlist"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (122)), var_cas_sortedListAttributeList, var_cas_sortDescriptorList COMMA_SOURCE_FILE_AT_LINE (121))) ;
  GGS_attributeInCollectionListAST  var_cas_mapAttributeList = GGS_attributeInCollectionListAST ::constructor_emptyList () ;
  var_cas_mapAttributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("uint"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (129)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mFirst"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (129))) ;
  var_cas_mapAttributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("char"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (130)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mSecond"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (130))) ;
  var_cas_mapAttributeList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("string"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (131)), GGS_lstring ::constructor_new (inLexique, GGS_string ("mThird"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (131))) ;
  GGS_insertMethodListAST  var_cas_insertMethodList = GGS_insertMethodListAST ::constructor_emptyList () ;
  var_cas_insertMethodList.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("insert"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (134)), GGS_lstring ::constructor_new (inLexique, GGS_string ("insert error message"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (135)), GGS_lstring ::constructor_new (inLexique, GGS_string ("shadow error message"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (136)), GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (137))) ;
  GGS_mapSearchMethodListAST  var_cas_mapSearchMethodListAST = GGS_mapSearchMethodListAST ::constructor_emptyList () ;
  var_cas_mapSearchMethodListAST.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("search"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (141)), GGS_lstring ::constructor_new (inLexique, GGS_string ("search error message"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (142)), GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (143))) ;
  GGS_mapRemoveMethodListAST  var_cas_mapRemoveMethodListAST = GGS_mapRemoveMethodListAST ::constructor_emptyList () ;
  var_cas_mapRemoveMethodListAST.addAssign_operation (GGS_lstring ::constructor_new (inLexique, GGS_string ("remove"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (147)), GGS_lstring ::constructor_new (inLexique, GGS_string ("remove error message"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (148))) ;
  GGS_insertOrReplaceDeclarationListAST  var_cas_insertOrReplaceDeclarationListAST = GGS_insertOrReplaceDeclarationListAST ::constructor_listWithValue (GGS_location (inLexique)) ;
  var_cas_ioDeclarationListASTs.addAssign_operation (GGS_mapDeclarationAST ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("0map"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (152)), var_cas_mapAttributeList, var_cas_insertMethodList, var_cas_mapSearchMethodListAST, var_cas_mapRemoveMethodListAST, var_cas_insertOrReplaceDeclarationListAST, GGS_mapStateList ::constructor_emptyList () COMMA_SOURCE_FILE_AT_LINE (151))) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_appendPredefinedTypesASTs\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of wrapper 'predefinedTypeGenerationTemplate'        *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_predefinedTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_predefinedTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_predefinedTypeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_predefinedTypeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_predefinedTypeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesImplementation' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_predefinedTypesImplementation (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"predefined-types.h\"\n"
    "#include \"cCollectionElement.h\"\n"
    "#include \"cSortedListElement.h\"\n"
    "#include \"capSortedListElement.h\"\n"
    "#include \"galgas-utilities/C_Compiler.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "cMapElement::cMapElement (const GALGAS_lstring & inLKey\n"
    "                          COMMA_LOCATION_ARGS) :\n"
    "cCollectionElement (THERE),\n"
    "mAttribute_lkey (inLKey) {\n"
    "}\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'primitiveTypesHeaderPrologue' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_primitiveTypesHeaderPrologue (C_Compiler & /* inLexique */,
                                const GGS_stringset & var_cas_TYPE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_LIST.isBuilt () ;
  if (isBuilt) {
    result << "\n"
      "#ifndef GALGAS2_PRIMITIVE_TYPES\n"
      "#define GALGAS2_PRIMITIVE_TYPES\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "#include \"strings/C_String.h\"\n"
      "#include \"galgas2/GALGAS__root.h\"\n"
      "#include \"galgas2/C_galgas_type_descriptor.h\"\n"
      "#include \"galgas2/enumComparisonResult.h\"\n"
      "#include \"galgas2/cGenericAbstractEnumerator.h\"\n"
      "#include \"galgas2/GALGAS_list.h\"\n"
      "#include \"galgas2/GALGAS_sortedlist.h\"\n"
      "#include \"galgas2/GALGAS_map.h\"\n"
      "#include \"galgas2/cPtr_class.h\"\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class C_Compiler ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n" ;
    GGS_stringset::cEnumerator enumerator_684 (var_cas_TYPE_LIST, true) ;
    while (enumerator_684.hasCurrentObject ()) {
      result << "class GALGAS_" ;
      result << enumerator_684._key (HERE).reader_identifierRepresentation () ;
      result << " ;\n" ;
      enumerator_684.next () ;
    }
    result << "\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypeSeparation' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_predefinedTypeSeparation (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"cCollectionElement.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class cMapElement : public cCollectionElement {\n"
    "//--- Attribut\n"
    "  public : GALGAS_lstring mAttribute_lkey ;\n"
    "\n"
    "//--- Default constructor\n"
    "  public : cMapElement (const GALGAS_lstring & inLKey\n"
    "                        COMMA_LOCATION_ARGS) ;\n"
    "\n"
    "//--- No copy\n"
    "  private : cMapElement (const cMapElement &) ;\n"
    "  private : cMapElement & operator = (const cMapElement &) ;\n"
    "} ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'sint_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_sint_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@sint type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_sint\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : PMSInt32 mSIntValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline PMSInt32 sintValue (void) const { return mSIntValue ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_sint (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_sint (const PMSInt32 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'sint64_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_sint64_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@sint64 type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_sint_36__34_\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : PMSInt64 mSInt64Value ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline PMSInt64 uint64Value (void) const { return mSInt64Value ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_sint_36__34_ (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_sint_36__34_ (const PMSInt64 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'object_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_object_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@object type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_object\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data member\n"
    "  private : C_SharedObject * mObject ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mObject != NULL ; }\n"
    "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_object (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_object (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_object (C_SharedObject * inObject) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_object (const GALGAS_object & inSource) ;\n"
    "  public : GALGAS_object & operator = (const GALGAS_object & inSource) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'uint_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_uint_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@uint type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_uint\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : PMUInt32 mUIntValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline PMUInt32 uintValue (void) const { return mUIntValue ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_uint (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_uint (const PMUInt32 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'uint64_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_uint64_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@uint64 type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_uint_36__34_\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : PMUInt64 mUInt64Value ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline PMUInt64 uint64Value (void) const { return mUInt64Value ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_uint_36__34_ (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_uint_36__34_ (const PMUInt64 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'bool_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_bool_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@bool type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_bool\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : bool mBoolValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : inline bool isValidAndTrue (void) const { return mIsValid && mBoolValue ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline bool boolValue (void) const { return mBoolValue ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_bool (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_bool (const bool inValue) ;\n"
    "\n"
    "//--------------------------------- Constructor for comparison result\n"
    "  public : GALGAS_bool (const enumComparisonKind inComparisonKind,\n"
    "                        const enumComparisonResult inComparisonResult) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'binaryset_type' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_binaryset_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@binaryset type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"bdd/C_BDD.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_binaryset\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : C_BDD mBDD ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline C_BDD bddValue (void) const { return mBDD ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_binaryset (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_binaryset (const C_BDD & inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'function_type' template of 'predefinedTypeGenerationTemplate' filewrapper *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_function_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@function type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class C_galgas_function_descriptor ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_function\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data member\n"
    "  private : const C_galgas_function_descriptor * mFunctionDescriptor ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return NULL != mFunctionDescriptor ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mFunctionDescriptor = NULL ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline const C_galgas_function_descriptor * functionValue (void) const { return mFunctionDescriptor ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_function (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_function (void) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_function (const GALGAS_function & inSource) ;\n"
    "  public : GALGAS_function & operator = (const GALGAS_function & inSource) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_function (const C_galgas_function_descriptor * inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'type_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_type_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@type type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_type\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : const C_galgas_type_descriptor * mTypeDescriptor ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : inline bool isValid (void) const { return NULL != mTypeDescriptor ; }\n"
    "  public : inline void drop (void) { mTypeDescriptor = NULL ; }\n"
    "  public : inline const C_galgas_type_descriptor * typeValue (void) const { return mTypeDescriptor ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_type (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_type (void) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_type (const GALGAS_type & inSource) ;\n"
    "  public : GALGAS_type & operator = (const GALGAS_type & inSource) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_type (const C_galgas_type_descriptor * inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'location_type' template of 'predefinedTypeGenerationTemplate' filewrapper *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_location_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@location type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class C_SourceTextInString ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "#include \"galgas-utilities/C_LocationInSource.h\"\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_location\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : C_LocationInSource mStartLocationInSource ;\n"
    "  private : C_LocationInSource mEndLocationInSource ;\n"
    "  private : C_SourceTextInString * mSourceText ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mSourceText != NULL ; }\n"
    "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
    "  public : C_LocationInSource startLocation (void) const { return mStartLocationInSource ; }\n"
    "  public : C_LocationInSource endLocation (void) const { return mEndLocationInSource ; }\n"
    "  public : C_SourceTextInString * sourceText (void) const { return mSourceText ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_location (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_location (void) ;\n"
    "\n"
    "//--------------------------------- Handle copy\n"
    "  public : GALGAS_location (const GALGAS_location & inSource) ;\n"
    "  public : GALGAS_location & operator = (const GALGAS_location & inSource) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_location (const C_LocationInSource & inStartLocationInSource,\n"
    "                            const C_LocationInSource & inEndLocationInSource,\n"
    "                            C_SourceTextInString * inSourceText) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'data_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_data_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@data type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "typedef TC_Array <PMUInt8> uint8Array ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_data\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : uint8Array mData ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline uint8Array dataValue (void) const { return mData ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_data (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_data (const uint8Array & inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  'char_type' template of 'predefinedTypeGenerationTemplate' filewrapper   *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_char_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@char type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_char\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : utf32 mCharValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline utf32 charValue (void) const { return mCharValue ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_char (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_char (const utf32 inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'double_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_double_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@double type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_double\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : double mDoubleValue ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline double doubleValue (void) const { return mDoubleValue ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_double (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_double (const double inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// 'string_type' template of 'predefinedTypeGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_string_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@string type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_string\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : bool mIsValid ;\n"
    "  private : C_String mString ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mIsValid ; }\n"
    "  public : VIRTUAL_IN_DEBUG inline void drop (void) { mIsValid = false ; }\n"
    "  public : inline C_String stringValue (void) const { return mString ; }\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_string (void) ;\n"
    "\n"
    "//--------------------------------- Native constructor\n"
    "  public : GALGAS_string (const C_String & inValue) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'stringset_type' template of 'predefinedTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_predefinedTypeGenerationTemplate_stringset_type (C_Compiler & /* inLexique */) {
  C_String result ;
  result << "//---------------------------------------------------------------------------*\n"
    "//                                                                           *\n"
    "//" ;
  result << GGS_string ("@stringset type").reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
  result << "*\n"
    "//                                                                           *\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class cSharedStringsetRoot ;\n"
    "\n"
    "//---------------------------------------------------------------------------*\n"
    "\n"
    "class GALGAS_stringset\n"
    "#ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "  : public GALGAS__root\n"
    "#endif\n"
    " {\n"
    "//--------------------------------- Private data members\n"
    "  private : cSharedStringsetRoot * mSharedRoot ;\n"
    "\n"
    "//--------------------------------- Accessors\n"
    "  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return mSharedRoot != NULL ; }\n"
    "  public : VIRTUAL_IN_DEBUG void drop (void) ;\n"
    "\n"
    "//--------------------------------- Default constructor\n"
    "  public : GALGAS_stringset (void) ;\n"
    "\n"
    "//--------------------------------- Destructor (virtual in debug mode)\n"
    "  public : VIRTUAL_IN_DEBUG ~ GALGAS_stringset (void) ;\n"
    "\n"
    "//--------------------------------- In debug mode : check method\n"
    "  #ifndef DO_NOT_GENERATE_CHECKINGS\n"
    "    protected : void checkStringset (LOCATION_ARGS) const ;\n"
    "  #endif\n"
    "\n"
    "//--------------------------------- Insulate\n"
    "  protected : void insulate (LOCATION_ARGS) ;\n"
    "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticDeclarationForGeneration.appendPrimitiveTypeDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration * operand_10511
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_10511 != NULL) {
    var_cas_outHeader = GGS_string ("") ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationForGeneration.appendPrimitiveTypeDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration> gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationForGeneration_defaultReader_appendPrimitiveTypeDeclaration (C_Compiler &,
                                const cPtr_semanticDeclarationForGeneration *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration
findCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration.count ()) {
    result = gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationForGeneration_defaultReader_appendPrimitiveTypeDeclaration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@primitiveTypeForGeneration.appendPrimitiveTypeDeclaration'*
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__primitiveTypeForGeneration__appendPrimitiveTypeDeclaration (C_Compiler & inLexique,
                                const cPtr_primitiveTypeForGeneration * operand_10721
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outHeader ;
  if (operand_10721 != NULL) {
    switch (operand_10721->mKind.enumValue ()) {
    case GGS_predefinedTypeKindEnum::enum_predefined_object:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_object_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_uint:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_uint_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_uint64:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_uint64_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_sint:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_sint_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_sint64:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_sint64_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_char:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_char_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_double:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_double_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_string:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_string_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_stringset:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_stringset_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_bool:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_bool_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_binaryset:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_binaryset_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_function:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_function_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_location:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_location_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_type:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_type_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::enum_predefined_data:
      {
      var_cas_outHeader = template_filewrapper_predefinedTypeGenerationTemplate_data_type (inLexique) ;
      }
      break ;
    case GGS_predefinedTypeKindEnum::kNotBuilt:
      break ;
    }
    var_cas_outHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_unifiedClassBodyForType (inLexique, operand_10721->mTypeIndex.reader_key (inLexique COMMA_SOURCE_FILE_AT_LINE (251)), operand_10721->mTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (252)), operand_10721->mTypeIndex.reader_mIsConcrete (inLexique COMMA_SOURCE_FILE_AT_LINE (253)), operand_10721->mTypeIndex.reader_mConstructorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (254)), operand_10721->mTypeIndex.reader_mReaderMap (inLexique COMMA_SOURCE_FILE_AT_LINE (255)), operand_10721->mTypeIndex.reader_mModifierMap (inLexique COMMA_SOURCE_FILE_AT_LINE (256)), operand_10721->mTypeIndex.reader_mInstanceMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (257)), operand_10721->mTypeIndex.reader_mClassMethodMap (inLexique COMMA_SOURCE_FILE_AT_LINE (258)), operand_10721->mTypeIndex.reader_mEnumerationDescriptor (inLexique COMMA_SOURCE_FILE_AT_LINE (259)), operand_10721->mTypeIndex.reader_mHandledOperatorFlags (inLexique COMMA_SOURCE_FILE_AT_LINE (260)), operand_10721->mTypeIndex.reader_mAddAssignOperatorArguments (inLexique COMMA_SOURCE_FILE_AT_LINE (261)), operand_10721->mTypeIndex.reader_mWithAccessorMap (inLexique COMMA_SOURCE_FILE_AT_LINE (262)))) ;
  }
  return var_cas_outHeader ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "generatePredefinedTypeFiles"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generatePredefinedTypeFiles (C_Compiler & inLexique,
                                const GGS_string  var_cas_inDirectory
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generatePredefinedTypeFiles at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  const GGS_bool cond_15791 = (var_cas_inDirectory).operator_isNotEqual (GGS_string ("")) ;
  if (cond_15791.isBuiltAndTrue ()) {
    const GGS_bool cond_13470 = (var_cas_inDirectory.reader_directoryExists ()).operator_not () ;
    if (cond_13470.isBuiltAndTrue ()) {
      GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inDirectory)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (276)) ;
    }else if (cond_13470.isBuiltAndFalse ()) {
      GGS_semanticDeclarationListAST  var_cas_predefinedTypeASTlist = GGS_semanticDeclarationListAST ::constructor_emptyList () ;
      ::routine_appendPredefinedTypesASTs (inLexique,  var_cas_predefinedTypeASTlist COMMA_SOURCE_FILE_AT_LINE (279)) ;
      GGS_semanticContext var_cas_semanticContext ;
      ::routine_buildSemanticContext (inLexique,  var_cas_predefinedTypeASTlist,  GGS_location (inLexique),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (282)) ;
      GGS_semanticDeclarationListForGeneration  var_cas_decoratedDeclarationListForGeneration ;
      ::routine_performSemanticAnalysis (inLexique,  var_cas_predefinedTypeASTlist,  var_cas_semanticContext,  var_cas_decoratedDeclarationListForGeneration COMMA_SOURCE_FILE_AT_LINE (289)) ;
      GGS_string var_cas_generatedCode = template_filewrapper_predefinedTypeGenerationTemplate_primitiveTypesHeaderPrologue (inLexique, var_cas_semanticContext.mTypeMap.reader_allKeys (inLexique COMMA_SOURCE_FILE_AT_LINE (296))) ;
      {
        GGS_semanticDeclarationListForGeneration::cEnumerator enumerator_14360 (var_cas_decoratedDeclarationListForGeneration, true) ;
        const GGS_semanticDeclarationListForGeneration::cElement * operand_14360 = NULL ;
        while (((operand_14360 = enumerator_14360.nextObject ()))) {
          macroValidPointer (operand_14360) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (operand_14360->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_14360->mDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (299)))) ;
        }
      }
      {
        GGS_semanticDeclarationListForGeneration::cEnumerator enumerator_14508 (var_cas_decoratedDeclarationListForGeneration, true) ;
        const GGS_semanticDeclarationListForGeneration::cElement * operand_14508 = NULL ;
        while (((operand_14508 = enumerator_14508.nextObject ()))) {
          macroValidPointer (operand_14508) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendDeclaration1 (operand_14508->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_14508->mDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (302)))) ;
        }
      }
      var_cas_generatedCode.dotAssign_operation (template_filewrapper_predefinedTypeGenerationTemplate_predefinedTypeSeparation (inLexique)) ;
      {
        GGS_semanticDeclarationListForGeneration::cEnumerator enumerator_14741 (var_cas_decoratedDeclarationListForGeneration, true) ;
        const GGS_semanticDeclarationListForGeneration::cElement * operand_14741 = NULL ;
        while (((operand_14741 = enumerator_14741.nextObject ()))) {
          macroValidPointer (operand_14741) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendDeclaration2 (operand_14741->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_14741->mDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (306)))) ;
        }
      }
      const GGS_bool cond_15109 = (GGS_uint ::constructor_errorCount (inLexique COMMA_SOURCE_FILE_AT_LINE (308))).operator_isEqual (GGS_uint (0U)) ;
      if (cond_15109.isBuiltAndTrue ()) {
        GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types.h"), GGS_string ("//"), GGS_string ("\n"
          "\n"), var_cas_generatedCode, GGS_string ("\n"
          "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (309)) ;
      }
      var_cas_generatedCode = template_filewrapper_predefinedTypeGenerationTemplate_predefinedTypesImplementation (inLexique) ;
      {
        GGS_semanticDeclarationListForGeneration::cEnumerator enumerator_15321 (var_cas_decoratedDeclarationListForGeneration, true) ;
        const GGS_semanticDeclarationListForGeneration::cElement * operand_15321 = NULL ;
        while (((operand_15321 = enumerator_15321.nextObject ()))) {
          macroValidPointer (operand_15321) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendTypeGenericImplementation (operand_15321->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_15321->mDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (322)))) ;
          var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationForGeneration__appendSpecificImplementation (operand_15321->mDeclaration (HERE)->galgasRTTI ()) (inLexique, operand_15321->mDeclaration.getPtr () COMMA_SOURCE_FILE_AT_LINE (323)))) ;
        }
      }
      const GGS_bool cond_15767 = (GGS_uint ::constructor_errorCount (inLexique COMMA_SOURCE_FILE_AT_LINE (325))).operator_isEqual (GGS_uint (0U)) ;
      if (cond_15767.isBuiltAndTrue ()) {
        GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types.cpp"), GGS_string ("//"), GGS_string ("\n"
          "\n"), var_cas_generatedCode, GGS_string ("\n"
          "\n"), GGS_string ("") COMMA_SOURCE_FILE_AT_LINE (326)) ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generatePredefinedTypeFiles\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_predefinedTypes (void) {
  enterCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration (category_reader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration, gClassInfoFor__semanticDeclarationForGeneration.slotID ()) ;
  enterCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration ((typeCategoryReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration) category_reader__primitiveTypeForGeneration__appendPrimitiveTypeDeclaration, gClassInfoFor__primitiveTypeForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_predefinedTypes (void) {
  gDispatchTableForReader__semanticDeclarationForGeneration__appendPrimitiveTypeDeclaration.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_predefinedTypes (prologueRoutineFor_predefinedTypes, epilogueRoutineFor_predefinedTypes) ;

//---------------------------------------------------------------------------*

