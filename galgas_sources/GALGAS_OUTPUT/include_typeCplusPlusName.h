//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'include_typeCplusPlusName.h'                     *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 3rd, 2007, at 19h32'47"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1

#ifndef enumVariableKind_DEFINED
  #define enumVariableKind_DEFINED
  typedef enum {k_me_constant, k_super_constant, k_other_variable} enumVariableKind ;
#endif

//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_typeCplusPlusName'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typeCplusPlusName : public C_GGS_Object {
//--- START OF USER ZONE 2

public : virtual enumVariableKind getVariableKind (void) const = 0 ;
public : virtual void generateVariableAddress (AC_OutputStream & fichier) const = 0 ;
public : virtual void generateCplusPlusName (AC_OutputStream & fichier) const = 0 ;

  public : virtual bool isCurrentObject (void) const ;

//--- END OF USER ZONE 2

//--- Constructor
  public : cPtr_typeCplusPlusName (LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~cPtr_typeCplusPlusName (void) {}
  #endif

//--- Attributes
//--- Method for 'description' reader
  public : virtual void appendForDescription (C_Lexique & _inLexique,
                                              C_String & ioString,
                                              const sint32 inIndentation
                                              COMMA_LOCATION_ARGS) const ;

//--- Comparison
  public : virtual bool isEqualToObject (const C_GGS_Object * inOperand) const = 0 ;
} ;

//---------------------------------------------------------------------------*

