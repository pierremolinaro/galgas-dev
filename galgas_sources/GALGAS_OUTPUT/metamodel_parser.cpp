//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'metamodel_parser.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      june 10th, 2008, at 21h55'47"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "metamodel_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "metamodel_parser.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_126_4_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, true)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_126_4_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_126_4_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_126_4_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */,
                                GGS_stringset  &/* var_cas_ioImportedSemanticsComponentNameSet */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_126_4_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */,
                                GGS_EXsemanticContext &/* var_cas_ioSemanticContext */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_126_4_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_metamodel'             *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_parse_metamodel_metamodel_parser_172_4_ (galgas_scanner & _inLexique,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                const GGS_bool var_cas_inGenerateMetamodelCode) {
  GGS_lstring  var_cas_metamodelName ;
  GGS_lstringlist  var_cas_superMetamodelList ;
  GGS_lstring  var_cas_rootEntityName ;
  switch (select_metamodel_parser_0 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_metamodelName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_metamodel_parser_1 (_inLexique)) {
        case 1 : {
          var_cas_superMetamodelList = GGS_lstringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
          } break ;
        case 2 : {
          var_cas_superMetamodelList = GGS_lstringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
          { bool syntaxRepeat_2 = true ;
            while (syntaxRepeat_2) {
                GGS_lstring  var_cas_superMetamodel ;
                _inLexique._assignFromAttribute_tokenString (var_cas_superMetamodel) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                var_cas_superMetamodelList._addAssign_operation (var_cas_superMetamodel) ;
              switch (select_repeat_metamodel_parser_2 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_2 = false ;
                  break ;
              }
            }
          }
          } break ;
        default :
          break ;
      }
      var_cas_rootEntityName = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_metamodelName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_metamodel_parser_3 (_inLexique)) {
        case 1 : {
          var_cas_superMetamodelList = GGS_lstringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
          } break ;
        case 2 : {
          var_cas_superMetamodelList = GGS_lstringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
          { bool syntaxRepeat_4 = true ;
            while (syntaxRepeat_4) {
                GGS_lstring  var_cas_superMetamodel ;
                _inLexique._assignFromAttribute_tokenString (var_cas_superMetamodel) ;
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
                var_cas_superMetamodelList._addAssign_operation (var_cas_superMetamodel) ;
              switch (select_repeat_metamodel_parser_4 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_4 = false ;
                  break ;
              }
            }
          }
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_root) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_rootEntityName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_lexiqueComponents  var_cas_lexiqueMapForUse ;
  var_cas_lexiqueMapForUse = GGS_M_lexiqueComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsComponents  var_cas_semanticsComponentsMap ;
  var_cas_semanticsComponentsMap = GGS_M_semanticsComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_treewalkingComponents  var_cas_treewalkingComponentMap ;
  var_cas_treewalkingComponentMap = GGS_M_treewalkingComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
  var_cas_grammarComponentsMap = GGS_M_grammarComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_optionComponents  var_cas_optionsComponentsMap ;
  var_cas_optionsComponentsMap = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_semanticsEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  GGS_entityToImplementMap  var_cas_allMetamodelClassMap ;
  GGS_EXsemanticContext var_cas_semanticContext ;
  var_cas_semanticContext = GGS_EXsemanticContext::constructor_new (_inLexique, GGS_M_filewrappers ::constructor_emptyMap (_inLexique COMMA_HERE), GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE), GGS_categoryMethodMap ::constructor_emptyMap (_inLexique COMMA_HERE) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_lexiqueMapForUse, var_cas_semanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_treewalkingComponentMap, var_cas_grammarComponentsMap, var_cas_optionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_semanticsEntitiesMap, var_cas_tableEnAvant, var_cas_allMetamodelClassMap, var_cas_semanticContext) ;
  GGS_stringlist  var_cas_headerInclusionList ;
  var_cas_headerInclusionList = GGS_stringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
  {
    GGS_M_semanticsComponents::cEnumerator enumerator_10047 (var_cas_semanticsComponentsMap, true) ;
    const GGS_M_semanticsComponents::cElement * operand_10047 = NULL ;
    while (((operand_10047 = (GGS_M_semanticsComponents::cElement *) enumerator_10047.nextObject ()))) {
      macroValidPointer (operand_10047) ;
      var_cas_headerInclusionList._addAssign_operation (operand_10047->mKey.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (268))) ;
    }
  }
  GGS_stringset  var_cas_superMetamodels ;
  var_cas_superMetamodels = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap  var_cas_allEntityMap ;
  var_cas_allEntityMap = GGS_entityToImplementMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  {
    GGS_lstringlist::cEnumerator enumerator_10352 (var_cas_superMetamodelList, true) ;
    const GGS_lstringlist::cElement * operand_10352 = NULL ;
    while (((operand_10352 = (GGS_lstringlist::cElement *) enumerator_10352.nextObject ()))) {
      macroValidPointer (operand_10352) ;
      var_cas_headerInclusionList._addAssign_operation (operand_10352->mValue.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (274))) ;
      ::routine_performMetamodelInclusion (_inLexique,  var_cas_ioMetamodelComponentMap,  operand_10352->mValue,  var_cas_superMetamodels,  var_cas_allEntityMap COMMA_SOURCE_FILE_AT_LINE (274)) ;
    }
  }
  GGS_entityToImplementMap  var_cas_entityMap ;
  var_cas_entityMap = GGS_entityToImplementMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList ::constructor_emptyList (_inLexique COMMA_HERE) ;
  nt_entity_declaration_list_ (_inLexique, var_cas_metamodelName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (286)), var_cas_semanticsEntitiesMap, var_cas_entityMap, var_cas_allEntityMap, var_cas_listeEntitesAengendrer) ;
  {
    GGS_entityToImplementMap::cEnumerator enumerator_10940 (var_cas_entityMap, true) ;
    const GGS_entityToImplementMap::cElement * operand_10940 = NULL ;
    while (((operand_10940 = (GGS_entityToImplementMap::cElement *) enumerator_10940.nextObject ()))) {
      macroValidPointer (operand_10940) ;
      {
        GGS_entityPropertyMap::cEnumerator enumerator_11154 (operand_10940->mInfo.mCurrentMetamodelPropertyMap, true) ;
        const GGS_entityPropertyMap::cElement * operand_11154 = NULL ;
        while (((operand_11154 = (GGS_entityPropertyMap::cElement *) enumerator_11154.nextObject ()))) {
          macroValidPointer (operand_11154) ;
          { const GGS_AC_galgasType _var_11533 = operand_11154->mInfo.mPropertyType ; // CAST instruction
            if (_var_11533.getPtr () != NULL) {
              macroValidPointer (_var_11533.getPtr ()) ;
              if (dynamic_cast <cPtr_typeGalgas_singleReferenceEntity *> (_var_11533.getPtr ()) != NULL) {
                const GGS_typeGalgas_singleReferenceEntity var_cas_e (_var_11533.getPtr ()) ;
                GGS_entityPropertyMap  automatic_var_0 ;
                GGS_bool automatic_var_1 ;
                GGS_entityPropertyMap  automatic_var_2 ;
                GGS_lstring  automatic_var_3 ;
                GGS_typeSuperClassesMap  automatic_var_4 ;
                GGS_typeListeAttributsSemantiques  automatic_var_5 ;
                GGS_string automatic_var_6 ;
                GGS_uint  automatic_var_7 ;
                const GGS_entityToImplementMap  _temp_11369 = var_cas_allEntityMap ;
                if (_temp_11369._isBuilt ()) {
                  _temp_11369 (HERE)->method_searchKey (_inLexique, var_cas_e.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (302)), automatic_var_0, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, automatic_var_6, automatic_var_7 COMMA_SOURCE_FILE_AT_LINE (302)) ;
                }
              }else if (dynamic_cast <cPtr_typeGalgas_multipleReferenceEntity *> (_var_11533.getPtr ()) != NULL) {
                const GGS_typeGalgas_multipleReferenceEntity var_cas_e (_var_11533.getPtr ()) ;
                GGS_entityPropertyMap  automatic_var_8 ;
                GGS_bool automatic_var_9 ;
                GGS_entityPropertyMap  automatic_var_10 ;
                GGS_lstring  automatic_var_11 ;
                GGS_typeSuperClassesMap  automatic_var_12 ;
                GGS_typeListeAttributsSemantiques  automatic_var_13 ;
                GGS_string automatic_var_14 ;
                GGS_uint  automatic_var_15 ;
                const GGS_entityToImplementMap  _temp_11484 = var_cas_allEntityMap ;
                if (_temp_11484._isBuilt ()) {
                  _temp_11484 (HERE)->method_searchKey (_inLexique, var_cas_e.reader_mEntityTypeName (_inLexique COMMA_SOURCE_FILE_AT_LINE (304)), automatic_var_8, automatic_var_9, automatic_var_10, automatic_var_11, automatic_var_12, automatic_var_13, automatic_var_14, automatic_var_15 COMMA_SOURCE_FILE_AT_LINE (304)) ;
                }
              }else{
              }
            }
          }
        }
      }
    }
  }
  if ((var_cas_inGenerateMetamodelCode).isBuiltAndTrue ()) {
    if (var_cas_entityMap._isBuilt () &&
        var_cas_metamodelName._isBuilt () &&
        var_cas_listeEntitesAengendrer._isBuilt () &&
        var_cas_rootEntityName._isBuilt () &&
        var_cas_headerInclusionList._isBuilt ()) {
      ::routine_generate_metamodel (_inLexique,  var_cas_entityMap,  var_cas_metamodelName,  var_cas_listeEntitesAengendrer,  var_cas_rootEntityName,  var_cas_headerInclusionList COMMA_SOURCE_FILE_AT_LINE (310)) ;
    }
  }
  if (((var_cas_ioMetamodelComponentMap.reader_hasKey (_inLexique, var_cas_metamodelName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (320)) COMMA_SOURCE_FILE_AT_LINE (320)))._operator_not ()).isBuiltAndTrue ()) {
    var_cas_ioMetamodelComponentMap.modifier_insertKey (_inLexique, var_cas_metamodelName, var_cas_rootEntityName, var_cas_entityMap, var_cas_superMetamodels COMMA_SOURCE_FILE_AT_LINE (321)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_parse_metamodel_metamodel_parser_172_4_parse (galgas_scanner & _inLexique) {
  switch (select_metamodel_parser_0 (_inLexique)) {
    case 1 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_metamodel_parser_1 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
          { bool syntaxRepeat_2 = true ;
            while (syntaxRepeat_2) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_repeat_metamodel_parser_2 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_2 = false ;
                  break ;
              }
            }
          }
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      switch (select_metamodel_parser_3 (_inLexique)) {
        case 1 : {
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
          { bool syntaxRepeat_4 = true ;
            while (syntaxRepeat_4) {
                _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              switch (select_repeat_metamodel_parser_4 (_inLexique)) {
                case 2 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                  } break ;
                default :
                  syntaxRepeat_4 = false ;
                  break ;
              }
            }
          }
          } break ;
        default :
          break ;
      }
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_root) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  nt_entity_declaration_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'entity_declaration_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_list_metamodel_parser_335_4_ (galgas_scanner & _inLexique,
                                const GGS_string var_cas_inCurrentMetamodelName,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inSemanticsEntitiesMap,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_entityToImplementMap  &var_cas_ioAllEntityMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer) {
  GGS_stringset  var_cas_metamodelClassSet ;
  var_cas_metamodelClassSet = GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_12904 = _inLexique.parsingContext () ;
    { bool syntaxRepeat_5 = true ;
      while (syntaxRepeat_5) {
        switch (select_repeat_metamodel_parser_5 (_inLexique)) {
          case 2 : {
            nt_entity_declaration_parseForEnumeratingClasses (_inLexique, var_cas_metamodelClassSet) ;
            } break ;
          default :
            syntaxRepeat_5 = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_12904) ;
    GGS_uint  var_cas_entityID ;
    var_cas_entityID = GGS_uint (true, 0U) ;
    { bool syntaxRepeat_5 = true ;
      while (syntaxRepeat_5) {
        switch (select_repeat_metamodel_parser_5 (_inLexique)) {
          case 2 : {
            nt_entity_declaration_ (_inLexique, var_cas_inCurrentMetamodelName, var_cas_metamodelClassSet, var_cas_inSemanticsEntitiesMap, var_cas_ioEntityMap, var_cas_ioAllEntityMap, var_cas_listeEntitesAengendrer, var_cas_entityID) ;
            } break ;
          default :
            syntaxRepeat_5 = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_list_metamodel_parser_335_4_parse (galgas_scanner & _inLexique) {
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_12904 = _inLexique.parsingContext () ;
    { bool syntaxRepeat_5 = true ;
      while (syntaxRepeat_5) {
        switch (select_repeat_metamodel_parser_5 (_inLexique)) {
          case 2 : {
            nt_entity_declaration_parse (_inLexique) ;
            } break ;
          default :
            syntaxRepeat_5 = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_12904) ;
    { bool syntaxRepeat_5 = true ;
      while (syntaxRepeat_5) {
        switch (select_repeat_metamodel_parser_5 (_inLexique)) {
          case 2 : {
            nt_entity_declaration_parse (_inLexique) ;
            } break ;
          default :
            syntaxRepeat_5 = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'entity_declaration'           *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_370_4_ (galgas_scanner & _inLexique,
                                const GGS_string var_cas_inCurrentMetamodelName,
                                const GGS_stringset  var_cas_inMetamodelClassSet,
                                const GGS_M_semanticsEntitiesForUse  var_cas_inSemanticsEntitiesMap,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_entityToImplementMap  &var_cas_ioAllEntityMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer,
                                GGS_uint  &var_cas_ioEntityID) {
  GGS_bool var_cas_isAbstract ;
  switch (select_metamodel_parser_6 (_inLexique)) {
    case 1 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_entity) COMMA_HERE) ;
  GGS_lstringlist  var_cas_entityNameList ;
  var_cas_entityNameList = GGS_lstringlist ::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
        GGS_lstring  var_cas_entityName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_entityName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        var_cas_entityNameList._addAssign_operation (var_cas_entityName) ;
      switch (select_repeat_metamodel_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
  GGS_entityPropertyMap  var_cas_allMetamodelPropertyMap ;
  GGS_lstring  var_cas_superEntity ;
  GGS_typeSuperClassesMap  var_cas_superEntityMap ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  switch (select_metamodel_parser_8 (_inLexique)) {
    case 1 : {
      var_cas_superEntity = GGS_lstring ::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_allMetamodelPropertyMap = GGS_entityPropertyMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      var_cas_superEntityMap = GGS_typeSuperClassesMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_superEntity) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_bool automatic_var_16 ;
      GGS_entityPropertyMap  automatic_var_17 ;
      GGS_lstring  automatic_var_18 ;
      GGS_string automatic_var_19 ;
      GGS_uint  automatic_var_20 ;
      const GGS_entityToImplementMap  _temp_14212 = var_cas_ioAllEntityMap ;
      if (_temp_14212._isBuilt ()) {
        _temp_14212 (HERE)->method_searchKey (_inLexique, var_cas_superEntity, var_cas_allMetamodelPropertyMap, automatic_var_16, automatic_var_17, automatic_var_18, var_cas_superEntityMap, var_cas_listeTousAttributsSemantiques, automatic_var_19, automatic_var_20 COMMA_SOURCE_FILE_AT_LINE (410)) ;
      }
      var_cas_superEntityMap.modifier_insertKey (_inLexique, var_cas_superEntity COMMA_SOURCE_FILE_AT_LINE (418)) ;
      } break ;
    default :
      break ;
  }
  GGS_entityPropertyMap  var_cas_currentEntityPropertyMap ;
  var_cas_currentEntityPropertyMap = GGS_entityPropertyMap ::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
      switch (select_repeat_metamodel_parser_9 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_propertyOrEntityTypeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_propertyOrEntityTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          switch (select_metamodel_parser_10 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_attributeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_AC_galgasType  var_cas_propertyType ;
              if ((var_cas_inMetamodelClassSet.reader_hasKey (_inLexique, var_cas_propertyOrEntityTypeName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (432)) COMMA_SOURCE_FILE_AT_LINE (432))).isBuiltAndTrue ()) {
                var_cas_propertyType = GGS_typeGalgas_singleReferenceEntity ::constructor_new (_inLexique, var_cas_propertyOrEntityTypeName, GGS_typeListeAttributsSemantiques ::constructor_emptyList (_inLexique COMMA_HERE), GGS_stringset ::constructor_emptySet (_inLexique COMMA_HERE) COMMA_HERE) ;
                var_cas_currentEntityPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType COMMA_SOURCE_FILE_AT_LINE (438)) ;
                var_cas_allMetamodelPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType COMMA_SOURCE_FILE_AT_LINE (439)) ;
              }else{
                GGS_AC_semanticsEntity  var_cas_theEntity ;
                const GGS_M_semanticsEntitiesForUse  _temp_15347 = var_cas_inSemanticsEntitiesMap ;
                if (_temp_15347._isBuilt ()) {
                  _temp_15347 (HERE)->method_searchKey (_inLexique, var_cas_propertyOrEntityTypeName, var_cas_theEntity COMMA_SOURCE_FILE_AT_LINE (442)) ;
                }
                var_cas_propertyType = GGS_typeEntiteType::_castFrom (_inLexique, var_cas_theEntity.getPtr (), true, var_cas_propertyOrEntityTypeName COMMA_SOURCE_FILE_AT_LINE (443)).reader_aDefType (_inLexique COMMA_SOURCE_FILE_AT_LINE (443)) ;
                var_cas_currentEntityPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType COMMA_SOURCE_FILE_AT_LINE (444)) ;
                var_cas_allMetamodelPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType COMMA_SOURCE_FILE_AT_LINE (445)) ;
              }
              var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_propertyType, var_cas_attributeName) ;
              var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_propertyType, var_cas_attributeName) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_lowerBound ;
              GGS_luint  var_cas_higherBound ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
              switch (select_metamodel_parser_11 (_inLexique)) {
                case 1 : {
                  _inLexique._assignFromAttribute_uint32value (var_cas_lowerBound) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                  switch (select_metamodel_parser_12 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                      switch (select_metamodel_parser_13 (_inLexique)) {
                        case 1 : {
                          _inLexique._assignFromAttribute_uint32value (var_cas_higherBound) ;
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                          if ((((var_cas_lowerBound.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (459)))._operator_isEqual (GGS_uint (true, 0U)))._operator_and ((var_cas_higherBound.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (459)))._operator_isEqual (GGS_uint (true, 0U)))).isBuiltAndTrue ()) {
                            var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "if lower bound is zero, higher bound should be greater than zero") COMMA_SOURCE_FILE_AT_LINE (460)) ;
                          }else if ((((var_cas_lowerBound.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (461)))._operator_strictSup (GGS_uint (true, 0U)))._operator_and ((var_cas_higherBound.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (461)))._operator_strictInf (var_cas_lowerBound.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (461))))).isBuiltAndTrue ()) {
                            var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "higher bound should be greater or equal than lower bound") COMMA_SOURCE_FILE_AT_LINE (462)) ;
                          }
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
                          var_cas_higherBound = GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      var_cas_higherBound = var_cas_lowerBound ;
                      if (((var_cas_lowerBound.reader_uint (_inLexique COMMA_SOURCE_FILE_AT_LINE (470)))._operator_isEqual (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                        var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "if higher bound is implicit, lower bound should be greater than zero") COMMA_SOURCE_FILE_AT_LINE (471)) ;
                      }
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  var_cas_lowerBound = GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                  var_cas_higherBound = GGS_luint ::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
              GGS_lstring  var_cas_attributeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_AC_galgasType  var_cas_propertyType ;
              var_cas_propertyType = GGS_typeGalgas_multipleReferenceEntity ::constructor_new (_inLexique, var_cas_propertyOrEntityTypeName, var_cas_lowerBound, var_cas_higherBound COMMA_HERE) ;
              var_cas_currentEntityPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType COMMA_SOURCE_FILE_AT_LINE (486)) ;
              var_cas_allMetamodelPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType COMMA_SOURCE_FILE_AT_LINE (487)) ;
              var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_propertyType, var_cas_attributeName) ;
              var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_propertyType, var_cas_attributeName) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  {
    GGS_lstringlist::cEnumerator enumerator_17511 (var_cas_entityNameList, true) ;
    const GGS_lstringlist::cElement * operand_17511 = NULL ;
    while (((operand_17511 = (GGS_lstringlist::cElement *) enumerator_17511.nextObject ()))) {
      macroValidPointer (operand_17511) ;
      var_cas_ioEntityMap.modifier_insertKey (_inLexique, operand_17511->mValue, var_cas_allMetamodelPropertyMap, var_cas_isAbstract, var_cas_currentEntityPropertyMap, var_cas_superEntity, var_cas_superEntityMap, var_cas_listeTousAttributsSemantiques, var_cas_inCurrentMetamodelName, var_cas_ioEntityID COMMA_SOURCE_FILE_AT_LINE (495)) ;
      var_cas_ioAllEntityMap.modifier_insertKey (_inLexique, operand_17511->mValue, var_cas_allMetamodelPropertyMap, var_cas_isAbstract, var_cas_currentEntityPropertyMap, var_cas_superEntity, var_cas_superEntityMap, var_cas_listeTousAttributsSemantiques, var_cas_inCurrentMetamodelName, var_cas_ioEntityID COMMA_SOURCE_FILE_AT_LINE (506)) ;
      GGS_typeEntityToGenerate  var_cas_def ;
      var_cas_def = GGS_C_metamodelEntityToImplement ::constructor_new (_inLexique, operand_17511->mValue, var_cas_isAbstract, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_superEntity.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (523)), var_cas_ioEntityID COMMA_HERE) ;
      var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
      var_cas_ioEntityID._increment_operation (_inLexique COMMA_SOURCE_FILE_AT_LINE (527)) ;
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_370_4_parseForEnumeratingClasses (galgas_scanner & _inLexique,
                                GGS_stringset  &var_cas_ioMetamodelClassSet) {
  switch (select_metamodel_parser_6 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_entity) COMMA_HERE) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
        GGS_lstring  var_cas_entityName ;
        _inLexique._assignFromAttribute_tokenString (var_cas_entityName) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
        var_cas_ioMetamodelClassSet._addAssign_operation (var_cas_entityName.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (542))) ;
      switch (select_repeat_metamodel_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
  switch (select_metamodel_parser_8 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
      switch (select_repeat_metamodel_parser_9 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          switch (select_metamodel_parser_10 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
              switch (select_metamodel_parser_11 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                  switch (select_metamodel_parser_12 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                      switch (select_metamodel_parser_13 (_inLexique)) {
                        case 1 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_metamodel_parser_370_4_parse (galgas_scanner & _inLexique) {
  switch (select_metamodel_parser_6 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_entity) COMMA_HERE) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      switch (select_repeat_metamodel_parser_7 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
  switch (select_metamodel_parser_8 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
      switch (select_repeat_metamodel_parser_9 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          switch (select_metamodel_parser_10 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
              switch (select_metamodel_parser_11 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                  switch (select_metamodel_parser_12 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                      switch (select_metamodel_parser_13 (_inLexique)) {
                        case 1 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

