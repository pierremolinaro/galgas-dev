//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'metamodel_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 22th, 2006, at 22h25'41"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "metamodel_parser.h"


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_ (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importLexique (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_metamodel_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importSyntax (galgas_scanner & lexique_var_,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importSemantics (galgas_scanner & lexique_var_,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importOptions (galgas_scanner & lexique_var_,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_metamodel_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_metamodel'             *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_parse_metamodel_metamodel_parser_111_23_ (galgas_scanner & lexique_var_,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  GGS_lstring  var_cas_metamodelName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_metamodelName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_stringset  var_cas_primitiveTypeAttributeNameSet ;
  var_cas_primitiveTypeAttributeNameSet = GGS_stringset::constructor_empty (HERE) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "bool")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "char")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "uint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "sint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "double")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "string")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lbool")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lchar")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "luint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lsint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "ldouble")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lstring")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "location")) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  GGS_lstring  var_cas_rootEntityName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_rootEntityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_entityToImplementMap  var_cas_entityMap ;
  var_cas_entityMap = GGS_entityToImplementMap::constructor_empty (HERE) ;
  nt_entity_declaration_list_ (lexique_var_, var_cas_entityMap, var_cas_primitiveTypeAttributeNameSet) ;
  GGS_bool var_cas_isAbstract ;
  GGS_entityPropertyMap  var_cas_5373 ;
  GGS_entityPropertyMap  var_cas_5388 ;
  GGS_lstring  var_cas_5391 ;
  GGS_mapPropertyMap  var_cas_5394 ;
  GGS_contextPropertyMap  var_cas_5397 ;
  GGS_contextPropertyMap  var_cas_5400 ;
  var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_rootEntityName, var_cas_5373, var_cas_isAbstract, var_cas_5388, var_cas_5391, var_cas_5394, var_cas_5397, var_cas_5400) ;
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
      var_cas_rootEntityName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "the root entity cannot be abstract")) ;
  }
  GGS_M_semanticsEntitiesForUse  var_cas_semanticsEntityMap ;
  var_cas_semanticsEntityMap = GGS_M_semanticsEntitiesForUse::constructor_empty (HERE) ;
  GGS_entityToImplementMap::element_type * operand_5612 = var_cas_entityMap.firstObject () ;
  while ((operand_5612 != NULL)) {
    macroValidPointer (operand_5612) ;
    GGS_stringset  var_cas_superEntitySet ;
    var_cas_superEntitySet = GGS_stringset::constructor_empty (HERE) ;
    ::routine_buildSuperEntitySet (lexique_var_,  var_cas_entityMap,  operand_5612->mInfo.mSuperEntityName,  var_cas_superEntitySet) ;
    GGS_AC_galgasType  var_cas_t ;
    var_cas_t = GGS_typeGalgas_singleEntity::constructor_new (operand_5612->mKey, operand_5612->mInfo.mAllPropertiesMap, operand_5612->mInfo.mIsAbstract, operand_5612->mInfo.mEntityPropertiesMap, operand_5612->mInfo.mSuperEntityName, var_cas_superEntitySet COMMA_HERE) ;
    GGS_AC_semanticsEntity  var_cas_e ;
    var_cas_e = GGS_typeEntiteType::constructor_new (var_cas_t COMMA_HERE) ;
    var_cas_semanticsEntityMap.methode_insertKey (lexique_var_, operand_5612->mKey, var_cas_e) ;
    operand_5612 = operand_5612->nextObject () ;
  }
  GGS_stringset  var_cas_multiReferencedEntities ;
  var_cas_multiReferencedEntities = GGS_stringset::constructor_empty (HERE) ;
  GGS_entityToImplementMap::element_type * operand_6496 = var_cas_entityMap.firstObject () ;
  while ((operand_6496 != NULL)) {
    macroValidPointer (operand_6496) ;
    GGS_entityPropertyMap::element_type * operand_6770 = operand_6496->mInfo.mEntityPropertiesMap.firstObject () ;
    while ((operand_6770 != NULL)) {
      macroValidPointer (operand_6770) ;
      if (((((operand_6770->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE))) || ((operand_6770->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE))))).isBuiltAndTrue ()) {
        GGS_contextPropertyMap  var_cas_contextPropertyMap ;
        GGS_entityPropertyMap  var_cas_7243 ;
        GGS_bool var_cas_7246 ;
        GGS_entityPropertyMap  var_cas_7249 ;
        GGS_lstring  var_cas_7252 ;
        GGS_mapPropertyMap  var_cas_7255 ;
        GGS_contextPropertyMap  var_cas_7258 ;
        var_cas_entityMap.methode_searchKey (lexique_var_, operand_6770->mInfo.mTypeName, var_cas_7243, var_cas_7246, var_cas_7249, var_cas_7252, var_cas_7255, var_cas_7258, var_cas_contextPropertyMap) ;
        var_cas_multiReferencedEntities.addAssign_operation (operand_6770->mInfo.mTypeName.reader_value ()) ;
        if (((operand_6770->mInfo.mPropertyOptionPathes.reader_length ()) != (var_cas_contextPropertyMap.reader_count ())).isBuiltAndTrue ()) {
            operand_6770->mKey.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "this reference has ")) + (operand_6770->mInfo.mPropertyOptionPathes.reader_length ().reader_string ()))) + (GGS_string (true, " context parameter(s), while corresponding entity has ")))) + (var_cas_contextPropertyMap.reader_count ().reader_string ()))) + (GGS_string (true, " context attribute(s)")))) ;
        }else{
          GGS_L_ListOfPropertyPathes::element_type * operand_7741 = operand_6770->mInfo.mPropertyOptionPathes.firstObject () ;
          GGS_contextPropertyMap::element_type * operand_7837 = var_cas_contextPropertyMap.firstObject () ;
          while ((operand_7741 != NULL)
              && (operand_7837 != NULL)) {
            macroValidPointer (operand_7741) ;
            macroValidPointer (operand_7837) ;
            GGS_entityPropertyMap  var_cas_currentMap ;
            var_cas_currentMap = operand_6496->mInfo.mEntityPropertiesMap ;
            GGS_lstring  var_cas_typeName ;
            var_cas_typeName = operand_6496->mKey ;
            GGS_L_propertyPath::element_type * operand_8054 = operand_7741->mPath.firstObject () ;
            while ((operand_8054 != NULL)) {
              macroValidPointer (operand_8054) ;
              GGS_metamodelPropertyKind var_cas_kind ;
              GGS_L_ListOfPropertyPathes  var_cas_8198 ;
              var_cas_currentMap.methode_searchKey (lexique_var_, operand_8054->mPathElement, var_cas_kind, var_cas_typeName, var_cas_8198) ;
              GGS_bool var_cas_8263 ;
              GGS_entityPropertyMap  var_cas_8266 ;
              GGS_lstring  var_cas_8269 ;
              GGS_mapPropertyMap  var_cas_8272 ;
              GGS_contextPropertyMap  var_cas_8275 ;
              GGS_contextPropertyMap  var_cas_8278 ;
              var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_typeName, var_cas_currentMap, var_cas_8263, var_cas_8266, var_cas_8269, var_cas_8272, var_cas_8275, var_cas_8278) ;
              operand_8054 = operand_8054->nextObject () ;
            }
            if (((var_cas_typeName.reader_value ()) != (operand_7837->mInfo.mTypeName.reader_value ())).isBuiltAndTrue ()) {
                operand_7741->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "the path entity is '@")) + (var_cas_typeName.reader_value ()))) + (GGS_string (true, "', but its entity should be '@")))) + (operand_7837->mInfo.mTypeName.reader_value ()))) + (GGS_string (true, "'")))) ;
            }
            operand_7741 = operand_7741->nextObject () ;
            operand_7837 = operand_7837->nextObject () ;
          }
        }
      }else if (((operand_6770->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_contextProperty (HERE))).isBuiltAndTrue ()) {
        GGS_entityPropertyMap  var_cas_8788 ;
        GGS_bool var_cas_8791 ;
        GGS_entityPropertyMap  var_cas_8794 ;
        GGS_lstring  var_cas_8797 ;
        GGS_mapPropertyMap  var_cas_8800 ;
        GGS_contextPropertyMap  var_cas_8803 ;
        GGS_contextPropertyMap  var_cas_8806 ;
        var_cas_entityMap.methode_searchKey (lexique_var_, operand_6770->mInfo.mTypeName, var_cas_8788, var_cas_8791, var_cas_8794, var_cas_8797, var_cas_8800, var_cas_8803, var_cas_8806) ;
      }
      operand_6770 = operand_6770->nextObject () ;
    }
    operand_6496 = operand_6496->nextObject () ;
  }
  GGS_entityToImplementMap::element_type * operand_8905 = var_cas_entityMap.firstObject () ;
  while ((operand_8905 != NULL)) {
    macroValidPointer (operand_8905) ;
    GGS_mapPropertyMap::element_type * operand_9203 = operand_8905->mInfo.mMapOfPropertyMaps.firstObject () ;
    while ((operand_9203 != NULL)) {
      macroValidPointer (operand_9203) ;
      GGS_L_ListOfPropertyPathes::element_type * operand_9425 = operand_9203->mInfo.mListOfPropertyPathes.firstObject () ;
      while ((operand_9425 != NULL)) {
        macroValidPointer (operand_9425) ;
        GGS_entityPropertyMap  var_cas_currentMap ;
        var_cas_currentMap = operand_8905->mInfo.mAllPropertiesMap ;
        GGS_lstring  var_cas_lastEntityName ;
        var_cas_lastEntityName = operand_8905->mKey ;
        GGS_string var_cas_returnedTypeName ;
        var_cas_returnedTypeName = GGS_string (true, "") ;
        GGS_L_propertyPath::element_type * operand_9659 = operand_9425->mPath.firstObject () ;
        while ((operand_9659 != NULL)) {
          macroValidPointer (operand_9659) ;
          GGS_metamodelPropertyKind var_cas_kind ;
          GGS_lstring  var_cas_typeName ;
          GGS_L_ListOfPropertyPathes  var_cas_9824 ;
          var_cas_currentMap.methode_searchKey (lexique_var_, operand_9659->mPathElement, var_cas_kind, var_cas_typeName, var_cas_9824) ;
          if (((var_cas_kind) == (GGS_metamodelPropertyKind::constructor_attributeProperty (HERE))).isBuiltAndTrue ()) {
            var_cas_returnedTypeName = var_cas_typeName.reader_value () ;
            var_cas_currentMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
          }else if (((var_cas_kind) == (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE))).isBuiltAndTrue ()) {
            var_cas_lastEntityName = var_cas_typeName ;
            GGS_bool var_cas_10181 ;
            GGS_entityPropertyMap  var_cas_10184 ;
            GGS_lstring  var_cas_10187 ;
            GGS_mapPropertyMap  var_cas_10190 ;
            GGS_contextPropertyMap  var_cas_10193 ;
            GGS_contextPropertyMap  var_cas_10196 ;
            var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_typeName, var_cas_currentMap, var_cas_10181, var_cas_10184, var_cas_10187, var_cas_10190, var_cas_10193, var_cas_10196) ;
          }else if (((var_cas_kind) == (GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE))).isBuiltAndTrue ()) {
            var_cas_lastEntityName = var_cas_typeName ;
            GGS_bool var_cas_10380 ;
            GGS_entityPropertyMap  var_cas_10383 ;
            GGS_lstring  var_cas_10386 ;
            GGS_mapPropertyMap  var_cas_10389 ;
            GGS_contextPropertyMap  var_cas_10392 ;
            GGS_contextPropertyMap  var_cas_10395 ;
            var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_typeName, var_cas_currentMap, var_cas_10380, var_cas_10383, var_cas_10386, var_cas_10389, var_cas_10392, var_cas_10395) ;
          }else if (((var_cas_kind) == (GGS_metamodelPropertyKind::constructor_mapProperty (HERE))).isBuiltAndTrue ()) {
              operand_9659->mPathElement.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "A map property can be named in a property path")) ;
            var_cas_currentMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
          }
          operand_9659 = operand_9659->nextObject () ;
        }
        if (((var_cas_returnedTypeName) != (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
            operand_9425->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "the path does not specify an @lstring attribute")) ;
        }
        GGS_stringset  var_cas_superEntitySet ;
        var_cas_superEntitySet = GGS_stringset::constructor_empty (HERE) ;
        ::routine_buildSuperEntitySet (lexique_var_,  var_cas_entityMap,  var_cas_lastEntityName,  var_cas_superEntitySet) ;
        if (((! var_cas_superEntitySet.reader_hasKey (operand_9203->mInfo.mEntityName.reader_value ()))).isBuiltAndTrue ()) {
            operand_9425->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "the path names an attribute whose owner entity ('@")) + (var_cas_lastEntityName.reader_value ()))) + (GGS_string (true, "') does not inherit from '@")))) + (operand_9203->mInfo.mEntityName.reader_value ()))) + (GGS_string (true, "'")))) ;
        }
        operand_9425 = operand_9425->nextObject () ;
      }
      operand_9203 = operand_9203->nextObject () ;
    }
    operand_8905 = operand_8905->nextObject () ;
  }
  if (var_cas_entityMap.isBuilt () &&
      var_cas_metamodelName.isBuilt () &&
      var_cas_multiReferencedEntities.isBuilt () &&
      var_cas_rootEntityName.isBuilt ()) {
    ::routine_generate_metamodel (lexique_var_,  var_cas_entityMap,  var_cas_metamodelName,  var_cas_multiReferencedEntities,  var_cas_rootEntityName) ;
  }
  if (((! var_cas_ioMetamodelComponentMap.reader_hasKey (var_cas_metamodelName.reader_value ()))).isBuiltAndTrue ()) {
    var_cas_ioMetamodelComponentMap.methode_insertKey (lexique_var_, var_cas_metamodelName, var_cas_rootEntityName, var_cas_semanticsEntityMap) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_parse_metamodel_metamodel_parser_111_23_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_entity_declaration_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'entity_declaration_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_list_metamodel_parser_289_31_ (galgas_scanner & lexique_var_,
                                GGS_entityToImplementMap  &var_cas_outEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet) {
  var_cas_outEntityMap = GGS_entityToImplementMap::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (lexique_var_)) {
        case 2 : {
          nt_entity_declaration_ (lexique_var_, var_cas_outEntityMap, var_cas_ioPrimitiveTypeAttributeNameSet) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_list_metamodel_parser_289_31_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (lexique_var_)) {
        case 2 : {
          nt_entity_declaration_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'entity_declaration'           *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_305_26_ (galgas_scanner & lexique_var_,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet) {
  GGS_bool var_cas_isAbstract ;
  switch (select_metamodel_parser_1 (lexique_var_)) {
    case 1 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_entity) ;
  GGS_lstring  var_cas_entityName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_entityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_contextPropertyMap  var_cas_currentClassContextPropertyMap ;
  var_cas_currentClassContextPropertyMap = GGS_contextPropertyMap::constructor_empty (HERE) ;
  switch (select_metamodel_parser_2 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_entityName ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            var_cas_entityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            GGS_lstring  var_cas_contextPropertyName ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_contextPropertyName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            var_cas_currentClassContextPropertyMap.methode_insertKey (lexique_var_, var_cas_contextPropertyName, var_cas_entityName) ;
          switch (select_repeat_metamodel_parser_3 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  GGS_contextPropertyMap  var_cas_allContextPropertyMap ;
  GGS_entityPropertyMap  var_cas_allPropertyMap ;
  GGS_lstring  var_cas_superEntity ;
  switch (select_metamodel_parser_4 (lexique_var_)) {
    case 1 : {
      var_cas_superEntity = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
      var_cas_allPropertyMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
      var_cas_allContextPropertyMap = GGS_contextPropertyMap::constructor_empty (HERE) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
      var_cas_superEntity.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      GGS_entityPropertyMap  var_cas_13263 ;
      GGS_bool var_cas_13266 ;
      GGS_lstring  var_cas_13285 ;
      GGS_mapPropertyMap  var_cas_13288 ;
      GGS_contextPropertyMap  var_cas_13291 ;
      var_cas_ioEntityMap.methode_searchKey (lexique_var_, var_cas_superEntity, var_cas_13263, var_cas_13266, var_cas_allPropertyMap, var_cas_13285, var_cas_13288, var_cas_13291, var_cas_allContextPropertyMap) ;
      } break ;
    default :
      break ;
  }
  GGS_entityPropertyMap  var_cas_entityPropertyMap ;
  var_cas_entityPropertyMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
  GGS_contextPropertyMap::element_type * operand_13452 = var_cas_currentClassContextPropertyMap.firstObject () ;
  while ((operand_13452 != NULL)) {
    macroValidPointer (operand_13452) ;
    var_cas_allContextPropertyMap.methode_insertKey (lexique_var_, operand_13452->mKey, operand_13452->mInfo.mTypeName) ;
    var_cas_allPropertyMap.methode_insertKey (lexique_var_, operand_13452->mKey, GGS_metamodelPropertyKind::constructor_contextProperty (HERE), operand_13452->mInfo.mTypeName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
    var_cas_entityPropertyMap.methode_insertKey (lexique_var_, operand_13452->mKey, GGS_metamodelPropertyKind::constructor_contextProperty (HERE), operand_13452->mInfo.mTypeName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
    operand_13452 = operand_13452->nextObject () ;
  }
  GGS_mapPropertyMap  var_cas_mapPropertyMap ;
  var_cas_mapPropertyMap = GGS_mapPropertyMap::constructor_empty (HERE) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_5 (lexique_var_)) {
        case 2 : {
          GGS_lstring  var_cas_propertyTypeName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_propertyTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_metamodelPropertyKind var_cas_k ;
          GGS_lstring  var_cas_attributeName ;
          switch (select_metamodel_parser_6 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              if ((var_cas_ioPrimitiveTypeAttributeNameSet.reader_hasKey (var_cas_propertyTypeName.reader_value ())).isBuiltAndTrue ()) {
                  var_cas_propertyTypeName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the '@")) + (var_cas_propertyTypeName.reader_value ()))) + (GGS_string (true, "' is not an entity name, but a predefined type name")))) ;
              }
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              var_cas_k = GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              if ((var_cas_ioPrimitiveTypeAttributeNameSet.reader_hasKey (var_cas_propertyTypeName.reader_value ())).isBuiltAndTrue ()) {
                var_cas_k = GGS_metamodelPropertyKind::constructor_attributeProperty (HERE) ;
              }else{
                var_cas_k = GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE) ;
              }
              } break ;
            default :
              break ;
          }
          GGS_L_ListOfPropertyPathes  var_cas_propertyOptionPathes ;
          var_cas_propertyOptionPathes = GGS_L_ListOfPropertyPathes::constructor_empty (HERE) ;
          switch (select_metamodel_parser_7 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
              GGS_L_propertyPath  var_cas_path ;
              nt_property_path_ (lexique_var_, var_cas_path) ;
              var_cas_propertyOptionPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    switch (select_metamodel_parser_9 (lexique_var_)) {
                      case 1 : {
                        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_self) ;
                        GGS_L_propertyPath  var_cas_path ;
                        var_cas_path = GGS_L_propertyPath::constructor_empty (HERE) ;
                        var_cas_propertyOptionPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
                        } break ;
                      case 2 : {
                        GGS_L_propertyPath  var_cas_path ;
                        nt_property_path_ (lexique_var_, var_cas_path) ;
                        var_cas_propertyOptionPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
                        } break ;
                      default :
                        break ;
                    }
                  switch (select_repeat_metamodel_parser_8 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              } break ;
            default :
              break ;
          }
          var_cas_allPropertyMap.methode_insertKey (lexique_var_, var_cas_attributeName, var_cas_k, var_cas_propertyTypeName, var_cas_propertyOptionPathes) ;
          var_cas_entityPropertyMap.methode_insertKey (lexique_var_, var_cas_attributeName, var_cas_k, var_cas_propertyTypeName, var_cas_propertyOptionPathes) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
          GGS_lstring  var_cas_entityName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_entityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_lstring  var_cas_mapPropertyName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_mapPropertyName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_metamodelPropertyKind var_cas_k ;
          var_cas_k = GGS_metamodelPropertyKind::constructor_mapProperty (HERE) ;
          var_cas_allPropertyMap.methode_insertKey (lexique_var_, var_cas_mapPropertyName, var_cas_k, var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
          var_cas_entityPropertyMap.methode_insertKey (lexique_var_, var_cas_mapPropertyName, var_cas_k, var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          GGS_L_ListOfPropertyPathes  var_cas_listOfPropertyPathes ;
          var_cas_listOfPropertyPathes = GGS_L_ListOfPropertyPathes::constructor_empty (HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_L_propertyPath  var_cas_path ;
                nt_property_path_ (lexique_var_, var_cas_path) ;
                var_cas_listOfPropertyPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
              switch (select_repeat_metamodel_parser_10 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_insertErrorMessage ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_insertErrorMessage.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_searchErrorMessage ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_searchErrorMessage.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_mapPropertyMap.methode_insertKey (lexique_var_, var_cas_mapPropertyName, var_cas_entityName, var_cas_listOfPropertyPathes, var_cas_insertErrorMessage, var_cas_searchErrorMessage) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioEntityMap.methode_insertKey (lexique_var_, var_cas_entityName, var_cas_allPropertyMap, var_cas_isAbstract, var_cas_entityPropertyMap, var_cas_superEntity, var_cas_mapPropertyMap, var_cas_currentClassContextPropertyMap, var_cas_allContextPropertyMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_metamodel_parser_305_26_parse (galgas_scanner & lexique_var_) {
  switch (select_metamodel_parser_1 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_entity) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_metamodel_parser_2 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_metamodel_parser_3 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  switch (select_metamodel_parser_4 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_5 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          switch (select_metamodel_parser_6 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          switch (select_metamodel_parser_7 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
              nt_property_path_parse (lexique_var_) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    switch (select_metamodel_parser_9 (lexique_var_)) {
                      case 1 : {
                        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_self) ;
                        } break ;
                      case 2 : {
                        nt_property_path_parse (lexique_var_) ;
                        } break ;
                      default :
                        break ;
                    }
                  switch (select_repeat_metamodel_parser_8 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                nt_property_path_parse (lexique_var_) ;
              switch (select_repeat_metamodel_parser_10 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'property_path'              *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_property_path_metamodel_parser_491_21_ (galgas_scanner & lexique_var_,
                                GGS_L_propertyPath  &var_cas_outPath) {
  var_cas_outPath = GGS_L_propertyPath::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_pathElement ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_pathElement.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
        var_cas_outPath.addAssign_operation (var_cas_pathElement) ;
      switch (select_repeat_metamodel_parser_11 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_property_path_metamodel_parser_491_21_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      switch (select_repeat_metamodel_parser_11 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

