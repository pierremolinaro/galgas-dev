//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'metamodel_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                    november 15th, 2006, at 15h48'31"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "metamodel_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "metamodel_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_metamodel'             *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_parse_metamodel_metamodel_parser_114_23_ (galgas_scanner & _inLexique,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  GGS_lstring  var_cas_metamodelName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_metamodelName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  GGS_stringset  var_cas_primitiveTypeAttributeNameSet ;
  var_cas_primitiveTypeAttributeNameSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "bool")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "char")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "uint")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "sint")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "double")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "string")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "lbool")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "lchar")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "luint")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "lsint")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "ldouble")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "lstring")) ;
  var_cas_primitiveTypeAttributeNameSet._addAssign_operation (GGS_string (true, "location")) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  GGS_lstring  var_cas_rootEntityName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  var_cas_rootEntityName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_entityToImplementMap  var_cas_entityMap ;
  var_cas_entityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_mapAndEntityUniqueMap  var_cas_mapAndEntityUniqueMap ;
  var_cas_mapAndEntityUniqueMap = GGS_mapAndEntityUniqueMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_entity_declaration_list_ (_inLexique, var_cas_entityMap, var_cas_primitiveTypeAttributeNameSet, var_cas_mapAndEntityUniqueMap) ;
  GGS_bool var_cas_isAbstract ;
  GGS_entityPropertyMap  var_cas_5859 ;
  GGS_entityPropertyMap  var_cas_5874 ;
  GGS_lstring  var_cas_5877 ;
  GGS_entityPropertyMap  var_cas_5880 ;
  GGS_stringset  var_cas_5883 ;
  GGS_entityPropertyMap  var_cas_5886 ;
  GGS_entityPropertyMap  var_cas_5889 ;
  if (var_cas_entityMap._isBuilt ()) {
    var_cas_entityMap (HERE)->method_searchKey (_inLexique, var_cas_rootEntityName, var_cas_5859, var_cas_isAbstract, var_cas_5874, var_cas_5877, var_cas_5880, var_cas_5883, var_cas_5886, var_cas_5889 SOURCE_FILE_AT_LINE (149)) ;
  }
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
    var_cas_rootEntityName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the root entity cannot be abstract") SOURCE_FILE_AT_LINE (152)) ;
  }
  GGS_stringset  var_cas_multiReferencedEntities ;
  var_cas_multiReferencedEntities = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_6082 = var_cas_entityMap.firstObject () ;
  while ((operand_6082 != NULL)) {
    macroValidPointer (operand_6082) ;
    GGS_entityPropertyMap::element_type * operand_6397 = operand_6082->mInfo.mCurrentMetamodelPropertyMap.firstObject () ;
    while ((operand_6397 != NULL)) {
      macroValidPointer (operand_6397) ;
      if (operand_6397->mInfo.mProperty._isBuilt ()) {
        cPtr_metamodelSingleReferenceProperty * operand_6525 = dynamic_cast <cPtr_metamodelSingleReferenceProperty *> (operand_6397->mInfo.mProperty.getPtr ()) ;
        if (operand_6525 != NULL) {
          macroValidPointer (operand_6525) ; 
          GGS_entityPropertyMap  var_cas_6648 ;
          GGS_bool var_cas_6651 ;
          GGS_entityPropertyMap  var_cas_6654 ;
          GGS_lstring  var_cas_6657 ;
          GGS_entityPropertyMap  var_cas_6660 ;
          GGS_stringset  var_cas_6663 ;
          GGS_entityPropertyMap  var_cas_6666 ;
          GGS_entityPropertyMap  var_cas_6669 ;
          if (var_cas_entityMap._isBuilt ()) {
            var_cas_entityMap (HERE)->method_searchKey (_inLexique, operand_6525->mReferenceEntityName, var_cas_6648, var_cas_6651, var_cas_6654, var_cas_6657, var_cas_6660, var_cas_6663, var_cas_6666, var_cas_6669 SOURCE_FILE_AT_LINE (168)) ;
          }
        }else{
          cPtr_metamodelMultipleReferenceProperty * operand_6683 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_6397->mInfo.mProperty.getPtr ()) ;
          if (operand_6683 != NULL) {
            macroValidPointer (operand_6683) ; 
            GGS_entityPropertyMap  var_cas_6812 ;
            GGS_bool var_cas_6815 ;
            GGS_entityPropertyMap  var_cas_6818 ;
            GGS_lstring  var_cas_6821 ;
            GGS_entityPropertyMap  var_cas_6824 ;
            GGS_stringset  var_cas_6827 ;
            GGS_entityPropertyMap  var_cas_6830 ;
            GGS_entityPropertyMap  var_cas_6833 ;
            if (var_cas_entityMap._isBuilt ()) {
              var_cas_entityMap (HERE)->method_searchKey (_inLexique, operand_6683->mReferenceEntityName, var_cas_6812, var_cas_6815, var_cas_6818, var_cas_6821, var_cas_6824, var_cas_6827, var_cas_6830, var_cas_6833 SOURCE_FILE_AT_LINE (170)) ;
            }
            var_cas_multiReferencedEntities._addAssign_operation (operand_6683->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (171))) ;
          }else{ // Else part
          }
        }
      }
      operand_6397 = operand_6397->nextObject () ;
    }
    operand_6082 = operand_6082->nextObject () ;
  }
  if (var_cas_entityMap._isBuilt () &&
      var_cas_metamodelName._isBuilt () &&
      var_cas_multiReferencedEntities._isBuilt () &&
      var_cas_rootEntityName._isBuilt ()) {
    ::routine_generate_metamodel (_inLexique,  var_cas_entityMap,  var_cas_metamodelName,  var_cas_multiReferencedEntities,  var_cas_rootEntityName SOURCE_FILE_AT_LINE (178)) ;
  }
  if (((! (var_cas_ioMetamodelComponentMap.reader_hasKey (_inLexique, var_cas_metamodelName.reader_string (_inLexique SOURCE_FILE_AT_LINE (184)) SOURCE_FILE_AT_LINE (184))))).isBuiltAndTrue ()) {
    var_cas_ioMetamodelComponentMap.method_insertKey (_inLexique, var_cas_metamodelName, var_cas_rootEntityName, var_cas_entityMap, var_cas_multiReferencedEntities SOURCE_FILE_AT_LINE (186)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_parse_metamodel_metamodel_parser_114_23_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_entity_declaration_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'entity_declaration_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_list_metamodel_parser_199_31_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  &var_cas_outEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet,
                                GGS_mapAndEntityUniqueMap  &var_cas_ioMapAndEntityUniqueMap) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (_inLexique)) {
        case 2 : {
          nt_entity_declaration_ (_inLexique, var_cas_outEntityMap, var_cas_ioPrimitiveTypeAttributeNameSet, var_cas_ioMapAndEntityUniqueMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_list_metamodel_parser_199_31_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (_inLexique)) {
        case 2 : {
          nt_entity_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'entity_declaration'           *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_216_26_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet,
                                GGS_mapAndEntityUniqueMap  &var_cas_ioMapAndEntityUniqueMap) {
  GGS_bool var_cas_isAbstract ;
  switch (select_metamodel_parser_1 (_inLexique)) {
    case 1 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  GGS_lstring  var_cas_entityName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  var_cas_entityName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
  var_cas_ioMapAndEntityUniqueMap.method_insertKey (_inLexique, var_cas_entityName SOURCE_FILE_AT_LINE (233)) ;
  GGS_entityPropertyMap  var_cas_allMetamodelPropertyMap ;
  GGS_lstring  var_cas_superEntity ;
  GGS_stringset  var_cas_superEntitySet ;
  switch (select_metamodel_parser_2 (_inLexique)) {
    case 1 : {
      var_cas_superEntity = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_allMetamodelPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      var_cas_superEntitySet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
      var_cas_superEntity.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
      GGS_bool var_cas_8792 ;
      GGS_entityPropertyMap  var_cas_8801 ;
      GGS_lstring  var_cas_8810 ;
      GGS_entityPropertyMap  var_cas_8819 ;
      GGS_entityPropertyMap  var_cas_8850 ;
      GGS_entityPropertyMap  var_cas_8859 ;
      if (var_cas_ioEntityMap._isBuilt ()) {
        var_cas_ioEntityMap (HERE)->method_searchKey (_inLexique, var_cas_superEntity, var_cas_allMetamodelPropertyMap, var_cas_8792, var_cas_8801, var_cas_8810, var_cas_8819, var_cas_superEntitySet, var_cas_8850, var_cas_8859 SOURCE_FILE_AT_LINE (246)) ;
      }
      var_cas_superEntitySet._addAssign_operation (var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (256))) ;
      } break ;
    default :
      break ;
  }
  GGS_entityPropertyMap  var_cas_currentEntityPropertyMap ;
  var_cas_currentEntityPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_3 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_propertyTypeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_propertyTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          if (((! (var_cas_ioPrimitiveTypeAttributeNameSet.reader_hasKey (_inLexique, var_cas_propertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (265)) SOURCE_FILE_AT_LINE (265))))).isBuiltAndTrue ()) {
            var_cas_propertyTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@")) + (var_cas_propertyTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (266))))) + (GGS_string (true, "' is not a predefined type name"))) SOURCE_FILE_AT_LINE (268)) ;
          }
          GGS_lstring  var_cas_attributeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_attributeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_metamodelProperty  var_cas_k ;
          var_cas_k = GGS_metamodelAttributeProperty::constructor_new (_inLexique, var_cas_propertyTypeName COMMA_HERE) ;
          var_cas_currentEntityPropertyMap.method_insertKey (_inLexique, var_cas_attributeName, var_cas_k SOURCE_FILE_AT_LINE (272)) ;
          var_cas_allMetamodelPropertyMap.method_insertKey (_inLexique, var_cas_attributeName, var_cas_k SOURCE_FILE_AT_LINE (273)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          GGS_lstring  var_cas_propertyTypeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
          var_cas_propertyTypeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
          GGS_metamodelProperty  var_cas_k ;
          GGS_lstring  var_cas_attributeName ;
          switch (select_metamodel_parser_4 (_inLexique)) {
            case 1 : {
              GGS_luint  var_cas_lowerBound ;
              GGS_luint  var_cas_higherBound ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              switch (select_metamodel_parser_5 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
                  var_cas_lowerBound.defineAttributeFromScanner (_inLexique.uint32value, _inLexique) ;
                  switch (select_metamodel_parser_6 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      switch (select_metamodel_parser_7 (_inLexique)) {
                        case 1 : {
                          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
                          var_cas_higherBound.defineAttributeFromScanner (_inLexique.uint32value, _inLexique) ;
                          if (((((var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (291))) == (GGS_uint (true, 0U))) & ((var_cas_higherBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (291))) == (GGS_uint (true, 0U))))).isBuiltAndTrue ()) {
                            var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "if lower bound is zero, higher bound should be greater than zero") SOURCE_FILE_AT_LINE (293)) ;
                          }else if (((((var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (293))) > (GGS_uint (true, 0U))) & ((var_cas_higherBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (293))) < (var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (293)))))).isBuiltAndTrue ()) {
                            var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "higher bound should be greater or equal than lower bound") SOURCE_FILE_AT_LINE (295)) ;
                          }
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
                          var_cas_higherBound = GGS_luint::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      var_cas_higherBound = var_cas_lowerBound ;
                      if (((var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (302))) == (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                        var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "if higher bound is implicit, lower bound should be greater than zero") SOURCE_FILE_AT_LINE (304)) ;
                      }
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  var_cas_lowerBound = GGS_luint::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                  var_cas_higherBound = GGS_luint::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_k = GGS_metamodelMultipleReferenceProperty::constructor_new (_inLexique, var_cas_propertyTypeName, var_cas_lowerBound, var_cas_higherBound COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttributeFromScanner (_inLexique.tokenString, _inLexique) ;
              var_cas_k = GGS_metamodelSingleReferenceProperty::constructor_new (_inLexique, var_cas_propertyTypeName COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          var_cas_currentEntityPropertyMap.method_insertKey (_inLexique, var_cas_attributeName, var_cas_k SOURCE_FILE_AT_LINE (318)) ;
          var_cas_allMetamodelPropertyMap.method_insertKey (_inLexique, var_cas_attributeName, var_cas_k SOURCE_FILE_AT_LINE (319)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioEntityMap.method_insertKey (_inLexique, var_cas_entityName, var_cas_allMetamodelPropertyMap, var_cas_isAbstract, var_cas_currentEntityPropertyMap, var_cas_superEntity, GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE), var_cas_superEntitySet, GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE), var_cas_allMetamodelPropertyMap SOURCE_FILE_AT_LINE (324)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_metamodel_parser_216_26_parse (galgas_scanner & _inLexique) {
  switch (select_metamodel_parser_1 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_class) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
  switch (select_metamodel_parser_2 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_3 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) ;
          switch (select_metamodel_parser_4 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              switch (select_metamodel_parser_5 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
                  switch (select_metamodel_parser_6 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      switch (select_metamodel_parser_7 (_inLexique)) {
                        case 1 : {
                          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) ;
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__2A) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

