//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'metamodel_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 23th, 2006, at 16h27'22"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "metamodel_parser.h"


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_ (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importLexique (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_metamodel_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importSyntax (galgas_scanner & lexique_var_,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importSemantics (galgas_scanner & lexique_var_,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importOptions (galgas_scanner & lexique_var_,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_metamodel_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_metamodel'             *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_parse_metamodel_metamodel_parser_111_23_ (galgas_scanner & lexique_var_,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  GGS_lstring  var_cas_metamodelName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_metamodelName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_stringset  var_cas_primitiveTypeAttributeNameSet ;
  var_cas_primitiveTypeAttributeNameSet = GGS_stringset::constructor_empty (HERE) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "bool")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "char")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "uint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "sint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "double")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "string")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lbool")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lchar")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "luint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lsint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "ldouble")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lstring")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "location")) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  GGS_lstring  var_cas_rootEntityName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_rootEntityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_entityToImplementMap  var_cas_entityMap ;
  var_cas_entityMap = GGS_entityToImplementMap::constructor_empty (HERE) ;
  nt_entity_declaration_list_ (lexique_var_, var_cas_entityMap, var_cas_primitiveTypeAttributeNameSet) ;
  GGS_bool var_cas_isAbstract ;
  GGS_entityPropertyMap  var_cas_5373 ;
  GGS_entityPropertyMap  var_cas_5388 ;
  GGS_lstring  var_cas_5391 ;
  GGS_mapPropertyMap  var_cas_5394 ;
  GGS_contextPropertyMap  var_cas_5397 ;
  GGS_fetchedPropertyMap  var_cas_5400 ;
  GGS_fetchedPropertyMap  var_cas_5403 ;
  var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_rootEntityName, var_cas_5373, var_cas_isAbstract, var_cas_5388, var_cas_5391, var_cas_5394, var_cas_5397, var_cas_5400, var_cas_5403) ;
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
      var_cas_rootEntityName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "the root entity cannot be abstract")) ;
  }
  GGS_M_semanticsEntitiesForUse  var_cas_semanticsEntityMap ;
  var_cas_semanticsEntityMap = GGS_M_semanticsEntitiesForUse::constructor_empty (HERE) ;
  GGS_entityToImplementMap::element_type * operand_5615 = var_cas_entityMap.firstObject () ;
  while ((operand_5615 != NULL)) {
    macroValidPointer (operand_5615) ;
    GGS_stringset  var_cas_superEntitySet ;
    var_cas_superEntitySet = GGS_stringset::constructor_empty (HERE) ;
    ::routine_buildSuperEntitySet (lexique_var_,  var_cas_entityMap,  operand_5615->mInfo.mSuperEntityName,  var_cas_superEntitySet) ;
    GGS_AC_galgasType  var_cas_t ;
    var_cas_t = GGS_typeGalgas_singleEntity::constructor_new (operand_5615->mKey, operand_5615->mInfo.mAllPropertiesMap, operand_5615->mInfo.mIsAbstract, operand_5615->mInfo.mEntityPropertiesMap, operand_5615->mInfo.mSuperEntityName, var_cas_superEntitySet COMMA_HERE) ;
    GGS_AC_semanticsEntity  var_cas_e ;
    var_cas_e = GGS_typeEntiteType::constructor_new (var_cas_t COMMA_HERE) ;
    var_cas_semanticsEntityMap.methode_insertKey (lexique_var_, operand_5615->mKey, var_cas_e) ;
    operand_5615 = operand_5615->nextObject () ;
  }
  GGS_stringset  var_cas_multiReferencedEntities ;
  var_cas_multiReferencedEntities = GGS_stringset::constructor_empty (HERE) ;
  GGS_entityToImplementMap::element_type * operand_6498 = var_cas_entityMap.firstObject () ;
  while ((operand_6498 != NULL)) {
    macroValidPointer (operand_6498) ;
    GGS_entityPropertyMap::element_type * operand_6832 = operand_6498->mInfo.mEntityPropertiesMap.firstObject () ;
    while ((operand_6832 != NULL)) {
      macroValidPointer (operand_6832) ;
      if (((((operand_6832->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE))) || ((operand_6832->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE))))).isBuiltAndTrue ()) {
        GGS_contextPropertyMap  var_cas_contextPropertyMap ;
        GGS_entityPropertyMap  var_cas_7305 ;
        GGS_bool var_cas_7308 ;
        GGS_entityPropertyMap  var_cas_7311 ;
        GGS_lstring  var_cas_7314 ;
        GGS_mapPropertyMap  var_cas_7317 ;
        GGS_fetchedPropertyMap  var_cas_7340 ;
        GGS_fetchedPropertyMap  var_cas_7343 ;
        var_cas_entityMap.methode_searchKey (lexique_var_, operand_6832->mInfo.mTypeName, var_cas_7305, var_cas_7308, var_cas_7311, var_cas_7314, var_cas_7317, var_cas_contextPropertyMap, var_cas_7340, var_cas_7343) ;
        var_cas_multiReferencedEntities.addAssign_operation (operand_6832->mInfo.mTypeName.reader_value ()) ;
        if (((operand_6832->mInfo.mPropertyOptionPathes.reader_length ()) != (var_cas_contextPropertyMap.reader_count ())).isBuiltAndTrue ()) {
            operand_6832->mKey.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "this reference has ")) + (operand_6832->mInfo.mPropertyOptionPathes.reader_length ().reader_string ()))) + (GGS_string (true, " context parameter(s), while corresponding entity has ")))) + (var_cas_contextPropertyMap.reader_count ().reader_string ()))) + (GGS_string (true, " context attribute(s)")))) ;
        }else{
          GGS_L_ListOfPropertyPathes::element_type * operand_7806 = operand_6832->mInfo.mPropertyOptionPathes.firstObject () ;
          GGS_contextPropertyMap::element_type * operand_7902 = var_cas_contextPropertyMap.firstObject () ;
          while ((operand_7806 != NULL)
              && (operand_7902 != NULL)) {
            macroValidPointer (operand_7806) ;
            macroValidPointer (operand_7902) ;
            GGS_entityPropertyMap  var_cas_currentMap ;
            var_cas_currentMap = operand_6498->mInfo.mEntityPropertiesMap ;
            GGS_lstring  var_cas_typeName ;
            var_cas_typeName = operand_6498->mKey ;
            GGS_L_propertyPath::element_type * operand_8119 = operand_7806->mPath.firstObject () ;
            while ((operand_8119 != NULL)) {
              macroValidPointer (operand_8119) ;
              GGS_metamodelPropertyKind var_cas_kind ;
              GGS_L_ListOfPropertyPathes  var_cas_8263 ;
              var_cas_currentMap.methode_searchKey (lexique_var_, operand_8119->mPathElement, var_cas_kind, var_cas_typeName, var_cas_8263) ;
              GGS_bool var_cas_8328 ;
              GGS_entityPropertyMap  var_cas_8331 ;
              GGS_lstring  var_cas_8334 ;
              GGS_mapPropertyMap  var_cas_8337 ;
              GGS_contextPropertyMap  var_cas_8340 ;
              GGS_fetchedPropertyMap  var_cas_8343 ;
              GGS_fetchedPropertyMap  var_cas_8346 ;
              var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_typeName, var_cas_currentMap, var_cas_8328, var_cas_8331, var_cas_8334, var_cas_8337, var_cas_8340, var_cas_8343, var_cas_8346) ;
              operand_8119 = operand_8119->nextObject () ;
            }
            if (((var_cas_typeName.reader_value ()) != (operand_7902->mInfo.mTypeName.reader_value ())).isBuiltAndTrue ()) {
                operand_7806->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "the path entity is '@")) + (var_cas_typeName.reader_value ()))) + (GGS_string (true, "', but its entity should be '@")))) + (operand_7902->mInfo.mTypeName.reader_value ()))) + (GGS_string (true, "'")))) ;
            }
            operand_7806 = operand_7806->nextObject () ;
            operand_7902 = operand_7902->nextObject () ;
          }
        }
      }else if (((operand_6832->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_contextProperty (HERE))).isBuiltAndTrue ()) {
        GGS_entityPropertyMap  var_cas_8856 ;
        GGS_bool var_cas_8859 ;
        GGS_entityPropertyMap  var_cas_8862 ;
        GGS_lstring  var_cas_8865 ;
        GGS_mapPropertyMap  var_cas_8868 ;
        GGS_contextPropertyMap  var_cas_8871 ;
        GGS_fetchedPropertyMap  var_cas_8874 ;
        GGS_fetchedPropertyMap  var_cas_8877 ;
        var_cas_entityMap.methode_searchKey (lexique_var_, operand_6832->mInfo.mTypeName, var_cas_8856, var_cas_8859, var_cas_8862, var_cas_8865, var_cas_8868, var_cas_8871, var_cas_8874, var_cas_8877) ;
      }else if (((operand_6832->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_fetchedProperty (HERE))).isBuiltAndTrue ()) {
        GGS_L_ListOfPropertyPathes::element_type * operand_8985 = operand_6832->mInfo.mPropertyOptionPathes.firstObject () ;
        while ((operand_8985 != NULL)) {
          macroValidPointer (operand_8985) ;
          GGS_entityPropertyMap  var_cas_currentMap ;
          var_cas_currentMap = operand_6498->mInfo.mAllPropertiesMap ;
          GGS_lstring  var_cas_typeName ;
          var_cas_typeName = operand_6498->mKey ;
          GGS_metamodelPropertyKind var_cas_kind ;
          var_cas_kind = GGS_metamodelPropertyKind::constructor_attributeProperty (HERE) ;
          GGS_L_propertyPath::element_type * operand_9236 = operand_8985->mPath.firstObject () ;
          while ((operand_9236 != NULL)) {
            macroValidPointer (operand_9236) ;
            GGS_L_ListOfPropertyPathes  var_cas_9333 ;
            var_cas_currentMap.methode_searchKey (lexique_var_, operand_9236->mPathElement, var_cas_kind, var_cas_typeName, var_cas_9333) ;
            GGS_bool var_cas_9396 ;
            GGS_entityPropertyMap  var_cas_9399 ;
            GGS_lstring  var_cas_9402 ;
            GGS_mapPropertyMap  var_cas_9405 ;
            GGS_contextPropertyMap  var_cas_9408 ;
            GGS_fetchedPropertyMap  var_cas_9411 ;
            GGS_fetchedPropertyMap  var_cas_9414 ;
            var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_typeName, var_cas_currentMap, var_cas_9396, var_cas_9399, var_cas_9402, var_cas_9405, var_cas_9408, var_cas_9411, var_cas_9414) ;
            operand_9236 = operand_9236->nextObject () ;
          }
          lexique_var_.printMessage (((var_cas_typeName.reader_description ()) + (var_cas_kind.reader_description ()))) ;
          if (((var_cas_kind) != (GGS_metamodelPropertyKind::constructor_mapProperty (HERE))).isBuiltAndTrue ()) {
              operand_8985->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "this path does define a map property")) ;
          }
          operand_8985 = operand_8985->nextObject () ;
        }
      }
      operand_6832 = operand_6832->nextObject () ;
    }
    operand_6498 = operand_6498->nextObject () ;
  }
  GGS_entityToImplementMap::element_type * operand_9788 = var_cas_entityMap.firstObject () ;
  while ((operand_9788 != NULL)) {
    macroValidPointer (operand_9788) ;
    GGS_entityPropertyMap  var_cas_allPropertiesMap ;
    var_cas_allPropertiesMap = operand_9788->mInfo.mAllPropertiesMap ;
    GGS_fetchedPropertyMap::element_type * operand_10186 = operand_9788->mInfo.mFetchedPropertyMap.firstObject () ;
    while ((operand_10186 != NULL)) {
      macroValidPointer (operand_10186) ;
      GGS_metamodelPropertyKind var_cas_kind ;
      GGS_lstring  var_cas_attributeTypeName ;
      GGS_L_ListOfPropertyPathes  var_cas_10667 ;
      var_cas_allPropertiesMap.methode_searchKey (lexique_var_, operand_10186->mInfo.mAttributeName, var_cas_kind, var_cas_attributeTypeName, var_cas_10667) ;
      if (((var_cas_kind) != (GGS_metamodelPropertyKind::constructor_attributeProperty (HERE))).isBuiltAndTrue ()) {
          operand_10186->mInfo.mAttributeName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "this property is not an attribute")) ;
      }else if (((var_cas_attributeTypeName.reader_value ()) != (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
          operand_10186->mInfo.mAttributeName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "this attribute should be an '@lstring' attribute")) ;
      }
      GGS_entityPropertyMap  var_cas_currentMap ;
      var_cas_currentMap = operand_9788->mInfo.mAllPropertiesMap ;
      GGS_lstring  var_cas_typeName ;
      var_cas_typeName = operand_9788->mKey ;
      var_cas_kind = GGS_metamodelPropertyKind::constructor_attributeProperty (HERE) ;
      GGS_L_propertyPath::element_type * operand_11159 = operand_10186->mInfo.mPath.firstObject () ;
      while ((operand_11159 != NULL)) {
        macroValidPointer (operand_11159) ;
        GGS_L_ListOfPropertyPathes  var_cas_11252 ;
        var_cas_currentMap.methode_searchKey (lexique_var_, operand_11159->mPathElement, var_cas_kind, var_cas_typeName, var_cas_11252) ;
        GGS_bool var_cas_11311 ;
        GGS_entityPropertyMap  var_cas_11314 ;
        GGS_lstring  var_cas_11317 ;
        GGS_mapPropertyMap  var_cas_11320 ;
        GGS_contextPropertyMap  var_cas_11323 ;
        GGS_fetchedPropertyMap  var_cas_11326 ;
        GGS_fetchedPropertyMap  var_cas_11329 ;
        var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_typeName, var_cas_currentMap, var_cas_11311, var_cas_11314, var_cas_11317, var_cas_11320, var_cas_11323, var_cas_11326, var_cas_11329) ;
        operand_11159 = operand_11159->nextObject () ;
      }
      if (((var_cas_kind) != (GGS_metamodelPropertyKind::constructor_mapProperty (HERE))).isBuiltAndTrue ()) {
          operand_10186->mInfo.mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "this path does not designate a map property")) ;
      }else if (((operand_10186->mInfo.mTypeName.reader_value ()) != (var_cas_typeName.reader_value ())).isBuiltAndTrue ()) {
          operand_10186->mInfo.mAttributeName.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "this property has '@")) + (operand_10186->mInfo.mTypeName.reader_value ()))) + (GGS_string (true, "', while '@")))) + (var_cas_typeName.reader_value ()))) + (GGS_string (true, "' was expected")))) ;
      }
      operand_10186 = operand_10186->nextObject () ;
    }
    operand_9788 = operand_9788->nextObject () ;
  }
  GGS_entityToImplementMap::element_type * operand_11807 = var_cas_entityMap.firstObject () ;
  while ((operand_11807 != NULL)) {
    macroValidPointer (operand_11807) ;
    GGS_mapPropertyMap::element_type * operand_12130 = operand_11807->mInfo.mMapOfPropertyMaps.firstObject () ;
    while ((operand_12130 != NULL)) {
      macroValidPointer (operand_12130) ;
      GGS_L_ListOfPropertyPathes::element_type * operand_12352 = operand_12130->mInfo.mListOfPropertyPathes.firstObject () ;
      while ((operand_12352 != NULL)) {
        macroValidPointer (operand_12352) ;
        GGS_entityPropertyMap  var_cas_currentMap ;
        var_cas_currentMap = operand_11807->mInfo.mAllPropertiesMap ;
        GGS_lstring  var_cas_lastEntityName ;
        var_cas_lastEntityName = operand_11807->mKey ;
        GGS_string var_cas_returnedTypeName ;
        var_cas_returnedTypeName = GGS_string (true, "") ;
        GGS_L_propertyPath::element_type * operand_12586 = operand_12352->mPath.firstObject () ;
        while ((operand_12586 != NULL)) {
          macroValidPointer (operand_12586) ;
          GGS_metamodelPropertyKind var_cas_kind ;
          GGS_lstring  var_cas_typeName ;
          GGS_L_ListOfPropertyPathes  var_cas_12751 ;
          var_cas_currentMap.methode_searchKey (lexique_var_, operand_12586->mPathElement, var_cas_kind, var_cas_typeName, var_cas_12751) ;
          if (((var_cas_kind) == (GGS_metamodelPropertyKind::constructor_attributeProperty (HERE))).isBuiltAndTrue ()) {
            var_cas_returnedTypeName = var_cas_typeName.reader_value () ;
            var_cas_currentMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
          }else if (((var_cas_kind) == (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE))).isBuiltAndTrue ()) {
            var_cas_lastEntityName = var_cas_typeName ;
            GGS_bool var_cas_13108 ;
            GGS_entityPropertyMap  var_cas_13111 ;
            GGS_lstring  var_cas_13114 ;
            GGS_mapPropertyMap  var_cas_13117 ;
            GGS_contextPropertyMap  var_cas_13120 ;
            GGS_fetchedPropertyMap  var_cas_13123 ;
            GGS_fetchedPropertyMap  var_cas_13126 ;
            var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_typeName, var_cas_currentMap, var_cas_13108, var_cas_13111, var_cas_13114, var_cas_13117, var_cas_13120, var_cas_13123, var_cas_13126) ;
          }else if (((var_cas_kind) == (GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE))).isBuiltAndTrue ()) {
            var_cas_lastEntityName = var_cas_typeName ;
            GGS_bool var_cas_13310 ;
            GGS_entityPropertyMap  var_cas_13313 ;
            GGS_lstring  var_cas_13316 ;
            GGS_mapPropertyMap  var_cas_13319 ;
            GGS_contextPropertyMap  var_cas_13322 ;
            GGS_fetchedPropertyMap  var_cas_13325 ;
            GGS_fetchedPropertyMap  var_cas_13328 ;
            var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_typeName, var_cas_currentMap, var_cas_13310, var_cas_13313, var_cas_13316, var_cas_13319, var_cas_13322, var_cas_13325, var_cas_13328) ;
          }else if (((var_cas_kind) == (GGS_metamodelPropertyKind::constructor_mapProperty (HERE))).isBuiltAndTrue ()) {
              operand_12586->mPathElement.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "A map property can be named in a property path")) ;
            var_cas_currentMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
          }
          operand_12586 = operand_12586->nextObject () ;
        }
        if (((var_cas_returnedTypeName) != (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
            operand_12352->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "the path does not specify an @lstring attribute")) ;
        }
        GGS_stringset  var_cas_superEntitySet ;
        var_cas_superEntitySet = GGS_stringset::constructor_empty (HERE) ;
        ::routine_buildSuperEntitySet (lexique_var_,  var_cas_entityMap,  var_cas_lastEntityName,  var_cas_superEntitySet) ;
        if (((! var_cas_superEntitySet.reader_hasKey (operand_12130->mInfo.mEntityName.reader_value ()))).isBuiltAndTrue ()) {
            operand_12352->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "the path names an attribute whose owner entity ('@")) + (var_cas_lastEntityName.reader_value ()))) + (GGS_string (true, "') does not inherit from '@")))) + (operand_12130->mInfo.mEntityName.reader_value ()))) + (GGS_string (true, "'")))) ;
        }
        operand_12352 = operand_12352->nextObject () ;
      }
      operand_12130 = operand_12130->nextObject () ;
    }
    operand_11807 = operand_11807->nextObject () ;
  }
  if (var_cas_entityMap.isBuilt () &&
      var_cas_metamodelName.isBuilt () &&
      var_cas_multiReferencedEntities.isBuilt () &&
      var_cas_rootEntityName.isBuilt ()) {
    ::routine_generate_metamodel (lexique_var_,  var_cas_entityMap,  var_cas_metamodelName,  var_cas_multiReferencedEntities,  var_cas_rootEntityName) ;
  }
  if (((! var_cas_ioMetamodelComponentMap.reader_hasKey (var_cas_metamodelName.reader_value ()))).isBuiltAndTrue ()) {
    var_cas_ioMetamodelComponentMap.methode_insertKey (lexique_var_, var_cas_metamodelName, var_cas_rootEntityName, var_cas_semanticsEntityMap) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_parse_metamodel_metamodel_parser_111_23_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_entity_declaration_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'entity_declaration_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_list_metamodel_parser_348_31_ (galgas_scanner & lexique_var_,
                                GGS_entityToImplementMap  &var_cas_outEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet) {
  var_cas_outEntityMap = GGS_entityToImplementMap::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (lexique_var_)) {
        case 2 : {
          nt_entity_declaration_ (lexique_var_, var_cas_outEntityMap, var_cas_ioPrimitiveTypeAttributeNameSet) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_list_metamodel_parser_348_31_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (lexique_var_)) {
        case 2 : {
          nt_entity_declaration_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'entity_declaration'           *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_364_26_ (galgas_scanner & lexique_var_,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet) {
  GGS_bool var_cas_isAbstract ;
  switch (select_metamodel_parser_1 (lexique_var_)) {
    case 1 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_entity) ;
  GGS_lstring  var_cas_entityName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_entityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_entityPropertyMap  var_cas_entityPropertyMap ;
  var_cas_entityPropertyMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
  GGS_fetchedPropertyMap  var_cas_allFetchedPropertyMap ;
  GGS_contextPropertyMap  var_cas_allContextPropertyMap ;
  var_cas_allContextPropertyMap = GGS_contextPropertyMap::constructor_empty (HERE) ;
  GGS_entityPropertyMap  var_cas_allPropertyMap ;
  GGS_lstring  var_cas_superEntity ;
  switch (select_metamodel_parser_2 (lexique_var_)) {
    case 1 : {
      var_cas_superEntity = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
      var_cas_allPropertyMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
      var_cas_allFetchedPropertyMap = GGS_fetchedPropertyMap::constructor_empty (HERE) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
      var_cas_superEntity.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      GGS_entityPropertyMap  var_cas_15933 ;
      GGS_bool var_cas_15942 ;
      GGS_lstring  var_cas_15973 ;
      GGS_mapPropertyMap  var_cas_15982 ;
      GGS_fetchedPropertyMap  var_cas_16020 ;
      var_cas_ioEntityMap.methode_searchKey (lexique_var_, var_cas_superEntity, var_cas_15933, var_cas_15942, var_cas_allPropertyMap, var_cas_15973, var_cas_15982, var_cas_allContextPropertyMap, var_cas_16020, var_cas_allFetchedPropertyMap) ;
      } break ;
    case 3 : {
      var_cas_superEntity = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
      var_cas_allPropertyMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
      var_cas_allFetchedPropertyMap = GGS_fetchedPropertyMap::constructor_empty (HERE) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_entityName ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            var_cas_entityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            GGS_lstring  var_cas_contextPropertyName ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_contextPropertyName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            var_cas_allContextPropertyMap.methode_insertKey (lexique_var_, var_cas_contextPropertyName, var_cas_entityName) ;
            var_cas_allPropertyMap.methode_insertKey (lexique_var_, var_cas_contextPropertyName, GGS_metamodelPropertyKind::constructor_contextProperty (HERE), var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
            var_cas_entityPropertyMap.methode_insertKey (lexique_var_, var_cas_contextPropertyName, GGS_metamodelPropertyKind::constructor_contextProperty (HERE), var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
          switch (select_repeat_metamodel_parser_3 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  GGS_fetchedPropertyMap  var_cas_fetchedPropertyMap ;
  var_cas_fetchedPropertyMap = GGS_fetchedPropertyMap::constructor_empty (HERE) ;
  GGS_mapPropertyMap  var_cas_mapPropertyMap ;
  var_cas_mapPropertyMap = GGS_mapPropertyMap::constructor_empty (HERE) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_4 (lexique_var_)) {
        case 2 : {
          GGS_lstring  var_cas_propertyTypeName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_propertyTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_metamodelPropertyKind var_cas_k ;
          GGS_lstring  var_cas_attributeName ;
          switch (select_metamodel_parser_5 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              if ((var_cas_ioPrimitiveTypeAttributeNameSet.reader_hasKey (var_cas_propertyTypeName.reader_value ())).isBuiltAndTrue ()) {
                  var_cas_propertyTypeName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the '@")) + (var_cas_propertyTypeName.reader_value ()))) + (GGS_string (true, "' is not an entity name, but a predefined type name")))) ;
              }
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              var_cas_k = GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              if ((var_cas_ioPrimitiveTypeAttributeNameSet.reader_hasKey (var_cas_propertyTypeName.reader_value ())).isBuiltAndTrue ()) {
                var_cas_k = GGS_metamodelPropertyKind::constructor_attributeProperty (HERE) ;
              }else{
                var_cas_k = GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE) ;
              }
              } break ;
            default :
              break ;
          }
          GGS_L_ListOfPropertyPathes  var_cas_propertyOptionPathes ;
          var_cas_propertyOptionPathes = GGS_L_ListOfPropertyPathes::constructor_empty (HERE) ;
          switch (select_metamodel_parser_6 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              if (((var_cas_k) != (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "attribute property or multiple reference property cannot accept 'search' construct")) ;
              }
              var_cas_k = GGS_metamodelPropertyKind::constructor_fetchedProperty (HERE) ;
              GGS_lstring  var_cas_fetchedAttributeName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_fetchedAttributeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
              GGS_L_propertyPath  var_cas_path ;
              nt_property_path_ (lexique_var_, var_cas_path) ;
              var_cas_fetchedPropertyMap.methode_insertKey (lexique_var_, var_cas_attributeName, var_cas_propertyTypeName, var_cas_fetchedAttributeName, var_cas_path, GGS_location (lexique_var_)) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              if (((((var_cas_k) != (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE))) && ((var_cas_k) != (GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE))))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "only a reference property accepts context parameters")) ;
              }
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    switch (select_metamodel_parser_8 (lexique_var_)) {
                      case 1 : {
                        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_self) ;
                        GGS_L_propertyPath  var_cas_path ;
                        var_cas_path = GGS_L_propertyPath::constructor_empty (HERE) ;
                        var_cas_propertyOptionPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
                        } break ;
                      case 2 : {
                        GGS_L_propertyPath  var_cas_path ;
                        nt_property_path_ (lexique_var_, var_cas_path) ;
                        var_cas_propertyOptionPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
                        } break ;
                      default :
                        break ;
                    }
                  switch (select_repeat_metamodel_parser_7 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              } break ;
            default :
              break ;
          }
          var_cas_allPropertyMap.methode_insertKey (lexique_var_, var_cas_attributeName, var_cas_k, var_cas_propertyTypeName, var_cas_propertyOptionPathes) ;
          var_cas_entityPropertyMap.methode_insertKey (lexique_var_, var_cas_attributeName, var_cas_k, var_cas_propertyTypeName, var_cas_propertyOptionPathes) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
          GGS_lstring  var_cas_entityName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_entityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_lstring  var_cas_mapPropertyName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_mapPropertyName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_metamodelPropertyKind var_cas_k ;
          var_cas_k = GGS_metamodelPropertyKind::constructor_mapProperty (HERE) ;
          var_cas_allPropertyMap.methode_insertKey (lexique_var_, var_cas_mapPropertyName, var_cas_k, var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
          var_cas_entityPropertyMap.methode_insertKey (lexique_var_, var_cas_mapPropertyName, var_cas_k, var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          GGS_L_ListOfPropertyPathes  var_cas_listOfPropertyPathes ;
          var_cas_listOfPropertyPathes = GGS_L_ListOfPropertyPathes::constructor_empty (HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_L_propertyPath  var_cas_path ;
                nt_property_path_ (lexique_var_, var_cas_path) ;
                var_cas_listOfPropertyPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
              switch (select_repeat_metamodel_parser_9 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_insertErrorMessage ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_insertErrorMessage.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_searchErrorMessage ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_searchErrorMessage.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_mapPropertyMap.methode_insertKey (lexique_var_, var_cas_mapPropertyName, var_cas_entityName, var_cas_listOfPropertyPathes, var_cas_insertErrorMessage, var_cas_searchErrorMessage) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioEntityMap.methode_insertKey (lexique_var_, var_cas_entityName, var_cas_allPropertyMap, var_cas_isAbstract, var_cas_entityPropertyMap, var_cas_superEntity, var_cas_mapPropertyMap, var_cas_allContextPropertyMap, var_cas_fetchedPropertyMap, var_cas_allFetchedPropertyMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_metamodel_parser_364_26_parse (galgas_scanner & lexique_var_) {
  switch (select_metamodel_parser_1 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_entity) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_metamodel_parser_2 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
      } break ;
    case 3 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_metamodel_parser_3 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_4 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          switch (select_metamodel_parser_5 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          switch (select_metamodel_parser_6 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
              nt_property_path_parse (lexique_var_) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    switch (select_metamodel_parser_8 (lexique_var_)) {
                      case 1 : {
                        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_self) ;
                        } break ;
                      case 2 : {
                        nt_property_path_parse (lexique_var_) ;
                        } break ;
                      default :
                        break ;
                    }
                  switch (select_repeat_metamodel_parser_7 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                nt_property_path_parse (lexique_var_) ;
              switch (select_repeat_metamodel_parser_9 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'property_path'              *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_property_path_metamodel_parser_573_21_ (galgas_scanner & lexique_var_,
                                GGS_L_propertyPath  &var_cas_outPath) {
  var_cas_outPath = GGS_L_propertyPath::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_pathElement ;
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
        var_cas_pathElement.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
        var_cas_outPath.addAssign_operation (var_cas_pathElement) ;
      switch (select_repeat_metamodel_parser_10 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_property_path_metamodel_parser_573_21_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      switch (select_repeat_metamodel_parser_10 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

