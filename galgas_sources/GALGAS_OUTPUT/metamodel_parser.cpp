//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'metamodel_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 23th, 2006, at 21h38'46"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "metamodel_parser.h"


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_91_24_ (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_91_24_importLexique (galgas_scanner & lexique_var_,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_metamodel_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_91_24_importSyntax (galgas_scanner & lexique_var_,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_91_24_importSemantics (galgas_scanner & lexique_var_,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_91_24_importGrammarForSemantics (galgas_scanner & lexique_var_,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (lexique_var_, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_91_24_importOptions (galgas_scanner & lexique_var_,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_metamodel_parse (lexique_var_) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_metamodel'             *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_parse_metamodel_metamodel_parser_127_23_ (galgas_scanner & lexique_var_,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  GGS_lstring  var_cas_metamodelName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_metamodelName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_stringset  var_cas_primitiveTypeAttributeNameSet ;
  var_cas_primitiveTypeAttributeNameSet = GGS_stringset::constructor_empty (HERE) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "bool")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "char")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "uint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "sint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "double")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "string")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lbool")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lchar")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "luint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lsint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "ldouble")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lstring")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "location")) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  GGS_lstring  var_cas_rootEntityName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_rootEntityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_entityToImplementMap  var_cas_entityMap ;
  var_cas_entityMap = GGS_entityToImplementMap::constructor_empty (HERE) ;
  nt_entity_declaration_list_ (lexique_var_, var_cas_entityMap, var_cas_primitiveTypeAttributeNameSet) ;
  GGS_bool var_cas_isAbstract ;
  GGS_entityPropertyMap  var_cas_5560 ;
  GGS_entityPropertyMap  var_cas_5575 ;
  GGS_lstring  var_cas_5578 ;
  GGS_mapPropertyMap  var_cas_5581 ;
  GGS_contextPropertyMap  var_cas_5584 ;
  GGS_fetchedPropertyMap  var_cas_5587 ;
  GGS_fetchedPropertyMap  var_cas_5590 ;
  var_cas_entityMap.methode_searchKey (lexique_var_, var_cas_rootEntityName, var_cas_5560, var_cas_isAbstract, var_cas_5575, var_cas_5578, var_cas_5581, var_cas_5584, var_cas_5587, var_cas_5590) ;
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
      var_cas_rootEntityName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "the root entity cannot be abstract")) ;
  }
  GGS_M_semanticsEntitiesForUse  var_cas_semanticsEntityMap ;
  var_cas_semanticsEntityMap = GGS_M_semanticsEntitiesForUse::constructor_empty (HERE) ;
  GGS_entityToImplementMap::element_type * operand_5802 = var_cas_entityMap.firstObject () ;
  while ((operand_5802 != NULL)) {
    macroValidPointer (operand_5802) ;
    GGS_stringset  var_cas_superEntitySet ;
    var_cas_superEntitySet = GGS_stringset::constructor_empty (HERE) ;
    ::routine_buildSuperEntitySet (lexique_var_,  var_cas_entityMap,  operand_5802->mInfo.mSuperEntityName,  var_cas_superEntitySet) ;
    GGS_AC_galgasType  var_cas_t ;
    var_cas_t = GGS_typeGalgas_singleEntity::constructor_new (operand_5802->mKey, operand_5802->mInfo.mAllPropertiesMap, operand_5802->mInfo.mIsAbstract, operand_5802->mInfo.mEntityPropertiesMap, operand_5802->mInfo.mSuperEntityName, var_cas_superEntitySet COMMA_HERE) ;
    GGS_AC_semanticsEntity  var_cas_e ;
    var_cas_e = GGS_typeEntiteType::constructor_new (var_cas_t COMMA_HERE) ;
    var_cas_semanticsEntityMap.methode_insertKey (lexique_var_, operand_5802->mKey, var_cas_e) ;
    operand_5802 = operand_5802->nextObject () ;
  }
  GGS_stringset  var_cas_multiReferencedEntities ;
  var_cas_multiReferencedEntities = GGS_stringset::constructor_empty (HERE) ;
  GGS_entityToImplementMap::element_type * operand_6685 = var_cas_entityMap.firstObject () ;
  while ((operand_6685 != NULL)) {
    macroValidPointer (operand_6685) ;
    GGS_entityPropertyMap::element_type * operand_7019 = operand_6685->mInfo.mEntityPropertiesMap.firstObject () ;
    while ((operand_7019 != NULL)) {
      macroValidPointer (operand_7019) ;
      if (((((operand_7019->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE))) || ((operand_7019->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE))))).isBuiltAndTrue ()) {
        GGS_contextPropertyMap  var_cas_contextPropertyMap ;
        GGS_entityPropertyMap  var_cas_7492 ;
        GGS_bool var_cas_7495 ;
        GGS_entityPropertyMap  var_cas_7498 ;
        GGS_lstring  var_cas_7501 ;
        GGS_mapPropertyMap  var_cas_7504 ;
        GGS_fetchedPropertyMap  var_cas_7527 ;
        GGS_fetchedPropertyMap  var_cas_7530 ;
        var_cas_entityMap.methode_searchKey (lexique_var_, operand_7019->mInfo.mTypeName, var_cas_7492, var_cas_7495, var_cas_7498, var_cas_7501, var_cas_7504, var_cas_contextPropertyMap, var_cas_7527, var_cas_7530) ;
        var_cas_multiReferencedEntities.addAssign_operation (operand_7019->mInfo.mTypeName.reader_value ()) ;
        if (((operand_7019->mInfo.mPropertyOptionPathes.reader_length ()) != (var_cas_contextPropertyMap.reader_count ())).isBuiltAndTrue ()) {
            operand_7019->mKey.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "this reference has ")) + (operand_7019->mInfo.mPropertyOptionPathes.reader_length ().reader_string ()))) + (GGS_string (true, " context parameter(s), while corresponding entity has ")))) + (var_cas_contextPropertyMap.reader_count ().reader_string ()))) + (GGS_string (true, " context attribute(s)")))) ;
        }else{
          GGS_L_ListOfPropertyPathes::element_type * operand_7993 = operand_7019->mInfo.mPropertyOptionPathes.firstObject () ;
          GGS_contextPropertyMap::element_type * operand_8089 = var_cas_contextPropertyMap.firstObject () ;
          while ((operand_7993 != NULL)
              && (operand_8089 != NULL)) {
            macroValidPointer (operand_7993) ;
            macroValidPointer (operand_8089) ;
            GGS_lstring  var_cas_typeName ;
            GGS_metamodelPropertyKind var_cas_8343 ;
            GGS_lstring  var_cas_8384 ;
            ::routine_checkPath (lexique_var_,  var_cas_entityMap,  operand_6685->mInfo.mAllPropertiesMap,  operand_6685->mKey,  operand_7993->mPath,  var_cas_8343,  var_cas_typeName,  var_cas_8384) ;
            if (((var_cas_typeName.reader_value ()) != (operand_8089->mInfo.mTypeName.reader_value ())).isBuiltAndTrue ()) {
                operand_7993->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "the path entity is '@")) + (var_cas_typeName.reader_value ()))) + (GGS_string (true, "', but its entity should be '@")))) + (operand_8089->mInfo.mTypeName.reader_value ()))) + (GGS_string (true, "'")))) ;
            }
            operand_7993 = operand_7993->nextObject () ;
            operand_8089 = operand_8089->nextObject () ;
          }
        }
      }else if (((operand_7019->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_contextProperty (HERE))).isBuiltAndTrue ()) {
        GGS_entityPropertyMap  var_cas_8879 ;
        GGS_bool var_cas_8882 ;
        GGS_entityPropertyMap  var_cas_8885 ;
        GGS_lstring  var_cas_8888 ;
        GGS_mapPropertyMap  var_cas_8891 ;
        GGS_contextPropertyMap  var_cas_8894 ;
        GGS_fetchedPropertyMap  var_cas_8897 ;
        GGS_fetchedPropertyMap  var_cas_8900 ;
        var_cas_entityMap.methode_searchKey (lexique_var_, operand_7019->mInfo.mTypeName, var_cas_8879, var_cas_8882, var_cas_8885, var_cas_8888, var_cas_8891, var_cas_8894, var_cas_8897, var_cas_8900) ;
      }else if (((operand_7019->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_fetchedProperty (HERE))).isBuiltAndTrue ()) {
        GGS_L_ListOfPropertyPathes::element_type * operand_9008 = operand_7019->mInfo.mPropertyOptionPathes.firstObject () ;
        while ((operand_9008 != NULL)) {
          macroValidPointer (operand_9008) ;
          GGS_lstring  var_cas_typeName ;
          GGS_metamodelPropertyKind var_cas_kind ;
          GGS_lstring  var_cas_9311 ;
          ::routine_checkPath (lexique_var_,  var_cas_entityMap,  operand_6685->mInfo.mAllPropertiesMap,  operand_6685->mKey,  operand_9008->mPath,  var_cas_kind,  var_cas_typeName,  var_cas_9311) ;
          if (((var_cas_kind) != (GGS_metamodelPropertyKind::constructor_mapProperty (HERE))).isBuiltAndTrue ()) {
              operand_9008->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "this path does define a map property")) ;
          }
          operand_9008 = operand_9008->nextObject () ;
        }
      }
      operand_7019 = operand_7019->nextObject () ;
    }
    operand_6685 = operand_6685->nextObject () ;
  }
  GGS_entityToImplementMap::element_type * operand_9606 = var_cas_entityMap.firstObject () ;
  while ((operand_9606 != NULL)) {
    macroValidPointer (operand_9606) ;
    GGS_entityPropertyMap  var_cas_allPropertiesMap ;
    var_cas_allPropertiesMap = operand_9606->mInfo.mAllPropertiesMap ;
    GGS_fetchedPropertyMap::element_type * operand_10004 = operand_9606->mInfo.mFetchedPropertyMap.firstObject () ;
    while ((operand_10004 != NULL)) {
      macroValidPointer (operand_10004) ;
      GGS_metamodelPropertyKind var_cas_kind ;
      GGS_lstring  var_cas_attributeTypeName ;
      GGS_L_ListOfPropertyPathes  var_cas_10485 ;
      var_cas_allPropertiesMap.methode_searchKey (lexique_var_, operand_10004->mInfo.mAttributeName, var_cas_kind, var_cas_attributeTypeName, var_cas_10485) ;
      if (((var_cas_kind) != (GGS_metamodelPropertyKind::constructor_attributeProperty (HERE))).isBuiltAndTrue ()) {
          operand_10004->mInfo.mAttributeName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "this property is not an attribute")) ;
      }else if (((var_cas_attributeTypeName.reader_value ()) != (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
          operand_10004->mInfo.mAttributeName.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "this attribute should be an '@lstring' attribute")) ;
      }
      GGS_lstring  var_cas_typeName ;
      GGS_lstring  var_cas_10966 ;
      ::routine_checkPath (lexique_var_,  var_cas_entityMap,  operand_9606->mInfo.mAllPropertiesMap,  operand_9606->mKey,  operand_10004->mInfo.mPath,  var_cas_kind,  var_cas_typeName,  var_cas_10966) ;
      if (((var_cas_kind) != (GGS_metamodelPropertyKind::constructor_mapProperty (HERE))).isBuiltAndTrue ()) {
          operand_10004->mInfo.mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "this path does not designate a map property")) ;
      }else if (((operand_10004->mInfo.mTypeName.reader_value ()) != (var_cas_typeName.reader_value ())).isBuiltAndTrue ()) {
          operand_10004->mInfo.mAttributeName.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "this property has '@")) + (operand_10004->mInfo.mTypeName.reader_value ()))) + (GGS_string (true, "', while '@")))) + (var_cas_typeName.reader_value ()))) + (GGS_string (true, "' was expected")))) ;
      }
      operand_10004 = operand_10004->nextObject () ;
    }
    operand_9606 = operand_9606->nextObject () ;
  }
  GGS_entityToImplementMap::element_type * operand_11429 = var_cas_entityMap.firstObject () ;
  while ((operand_11429 != NULL)) {
    macroValidPointer (operand_11429) ;
    GGS_mapPropertyMap::element_type * operand_11752 = operand_11429->mInfo.mMapOfPropertyMaps.firstObject () ;
    while ((operand_11752 != NULL)) {
      macroValidPointer (operand_11752) ;
      GGS_L_ListOfPropertyPathes::element_type * operand_11974 = operand_11752->mInfo.mListOfPropertyPathes.firstObject () ;
      while ((operand_11974 != NULL)) {
        macroValidPointer (operand_11974) ;
        GGS_lstring  var_cas_typeName ;
        GGS_metamodelPropertyKind var_cas_kind ;
        GGS_lstring  var_cas_lastEntityTypeName ;
        ::routine_checkPath (lexique_var_,  var_cas_entityMap,  operand_11429->mInfo.mAllPropertiesMap,  operand_11752->mInfo.mEntityName,  operand_11974->mPath,  var_cas_kind,  var_cas_typeName,  var_cas_lastEntityTypeName) ;
        if (((var_cas_typeName.reader_value ()) != (GGS_string (true, "lstring"))).isBuiltAndTrue ()) {
            operand_11974->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "the path does not specify an @lstring attribute")) ;
        }
        GGS_stringset  var_cas_superEntitySet ;
        var_cas_superEntitySet = GGS_stringset::constructor_empty (HERE) ;
        ::routine_buildSuperEntitySet (lexique_var_,  var_cas_entityMap,  var_cas_lastEntityTypeName,  var_cas_superEntitySet) ;
        if (((! var_cas_superEntitySet.reader_hasKey (operand_11752->mInfo.mEntityName.reader_value ()))).isBuiltAndTrue ()) {
            operand_11974->mEndOfPathLocation.reader_location ().signalGGSSemanticError (lexique_var_, ((((((((GGS_string (true, "the path names an attribute whose owner entity ('@")) + (var_cas_lastEntityTypeName.reader_value ()))) + (GGS_string (true, "') does not inherit from '@")))) + (operand_11752->mInfo.mEntityName.reader_value ()))) + (GGS_string (true, "'")))) ;
        }
        operand_11974 = operand_11974->nextObject () ;
      }
      operand_11752 = operand_11752->nextObject () ;
    }
    operand_11429 = operand_11429->nextObject () ;
  }
  if (var_cas_entityMap.isBuilt () &&
      var_cas_metamodelName.isBuilt () &&
      var_cas_multiReferencedEntities.isBuilt () &&
      var_cas_rootEntityName.isBuilt ()) {
    ::routine_generate_metamodel (lexique_var_,  var_cas_entityMap,  var_cas_metamodelName,  var_cas_multiReferencedEntities,  var_cas_rootEntityName) ;
  }
  if (((! var_cas_ioMetamodelComponentMap.reader_hasKey (var_cas_metamodelName.reader_value ()))).isBuiltAndTrue ()) {
    var_cas_ioMetamodelComponentMap.methode_insertKey (lexique_var_, var_cas_metamodelName, var_cas_rootEntityName, var_cas_semanticsEntityMap) ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_parse_metamodel_metamodel_parser_127_23_parse (galgas_scanner & lexique_var_) {
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_entity_declaration_list_parse (lexique_var_) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'entity_declaration_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_list_metamodel_parser_364_31_ (galgas_scanner & lexique_var_,
                                GGS_entityToImplementMap  &var_cas_outEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet) {
  var_cas_outEntityMap = GGS_entityToImplementMap::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (lexique_var_)) {
        case 2 : {
          nt_entity_declaration_ (lexique_var_, var_cas_outEntityMap, var_cas_ioPrimitiveTypeAttributeNameSet) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_list_metamodel_parser_364_31_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (lexique_var_)) {
        case 2 : {
          nt_entity_declaration_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'entity_declaration'           *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_380_26_ (galgas_scanner & lexique_var_,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet) {
  GGS_bool var_cas_isAbstract ;
  switch (select_metamodel_parser_1 (lexique_var_)) {
    case 1 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_entity) ;
  GGS_lstring  var_cas_entityName ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_entityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
  GGS_entityPropertyMap  var_cas_entityPropertyMap ;
  var_cas_entityPropertyMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
  GGS_fetchedPropertyMap  var_cas_allFetchedPropertyMap ;
  GGS_contextPropertyMap  var_cas_allContextPropertyMap ;
  var_cas_allContextPropertyMap = GGS_contextPropertyMap::constructor_empty (HERE) ;
  GGS_entityPropertyMap  var_cas_allPropertyMap ;
  GGS_lstring  var_cas_superEntity ;
  switch (select_metamodel_parser_2 (lexique_var_)) {
    case 1 : {
      var_cas_superEntity = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
      var_cas_allPropertyMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
      var_cas_allFetchedPropertyMap = GGS_fetchedPropertyMap::constructor_empty (HERE) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
      var_cas_superEntity.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      GGS_entityPropertyMap  var_cas_14685 ;
      GGS_bool var_cas_14694 ;
      GGS_lstring  var_cas_14725 ;
      GGS_mapPropertyMap  var_cas_14734 ;
      GGS_fetchedPropertyMap  var_cas_14772 ;
      var_cas_ioEntityMap.methode_searchKey (lexique_var_, var_cas_superEntity, var_cas_14685, var_cas_14694, var_cas_allPropertyMap, var_cas_14725, var_cas_14734, var_cas_allContextPropertyMap, var_cas_14772, var_cas_allFetchedPropertyMap) ;
      } break ;
    case 3 : {
      var_cas_superEntity = GGS_lstring::constructor_new (GGS_string (true, ""), GGS_location (lexique_var_) COMMA_HERE) ;
      var_cas_allPropertyMap = GGS_entityPropertyMap::constructor_empty (HERE) ;
      var_cas_allFetchedPropertyMap = GGS_fetchedPropertyMap::constructor_empty (HERE) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_entityName ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            var_cas_entityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            GGS_lstring  var_cas_contextPropertyName ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_contextPropertyName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            var_cas_allContextPropertyMap.methode_insertKey (lexique_var_, var_cas_contextPropertyName, var_cas_entityName) ;
            var_cas_allPropertyMap.methode_insertKey (lexique_var_, var_cas_contextPropertyName, GGS_metamodelPropertyKind::constructor_contextProperty (HERE), var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
            var_cas_entityPropertyMap.methode_insertKey (lexique_var_, var_cas_contextPropertyName, GGS_metamodelPropertyKind::constructor_contextProperty (HERE), var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
          switch (select_repeat_metamodel_parser_3 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  GGS_fetchedPropertyMap  var_cas_fetchedPropertyMap ;
  var_cas_fetchedPropertyMap = GGS_fetchedPropertyMap::constructor_empty (HERE) ;
  GGS_mapPropertyMap  var_cas_mapPropertyMap ;
  var_cas_mapPropertyMap = GGS_mapPropertyMap::constructor_empty (HERE) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_4 (lexique_var_)) {
        case 2 : {
          GGS_lstring  var_cas_propertyTypeName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_propertyTypeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_metamodelPropertyKind var_cas_k ;
          GGS_lstring  var_cas_attributeName ;
          switch (select_metamodel_parser_5 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              if ((var_cas_ioPrimitiveTypeAttributeNameSet.reader_hasKey (var_cas_propertyTypeName.reader_value ())).isBuiltAndTrue ()) {
                  var_cas_propertyTypeName.reader_location ().signalGGSSemanticError (lexique_var_, ((((GGS_string (true, "the '@")) + (var_cas_propertyTypeName.reader_value ()))) + (GGS_string (true, "' is not an entity name, but a predefined type name")))) ;
              }
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              var_cas_k = GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              if ((var_cas_ioPrimitiveTypeAttributeNameSet.reader_hasKey (var_cas_propertyTypeName.reader_value ())).isBuiltAndTrue ()) {
                var_cas_k = GGS_metamodelPropertyKind::constructor_attributeProperty (HERE) ;
              }else{
                var_cas_k = GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE) ;
              }
              } break ;
            default :
              break ;
          }
          GGS_L_ListOfPropertyPathes  var_cas_propertyOptionPathes ;
          var_cas_propertyOptionPathes = GGS_L_ListOfPropertyPathes::constructor_empty (HERE) ;
          switch (select_metamodel_parser_6 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              if (((var_cas_k) != (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "attribute property or multiple reference property cannot accept 'search' construct")) ;
              }
              var_cas_k = GGS_metamodelPropertyKind::constructor_fetchedProperty (HERE) ;
              GGS_lstring  var_cas_fetchedAttributeName ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_fetchedAttributeName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
              GGS_L_propertyPath  var_cas_path ;
              nt_property_path_ (lexique_var_, var_cas_path) ;
              var_cas_fetchedPropertyMap.methode_insertKey (lexique_var_, var_cas_attributeName, var_cas_propertyTypeName, var_cas_fetchedAttributeName, var_cas_path, GGS_location (lexique_var_)) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              if (((((var_cas_k) != (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (HERE))) && ((var_cas_k) != (GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (HERE))))).isBuiltAndTrue ()) {
                  GGS_location (lexique_var_).reader_location ().signalGGSSemanticError (lexique_var_, GGS_string (true, "only a reference property accepts context parameters")) ;
              }
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    switch (select_metamodel_parser_8 (lexique_var_)) {
                      case 1 : {
                        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_self) ;
                        GGS_L_propertyPath  var_cas_path ;
                        var_cas_path = GGS_L_propertyPath::constructor_empty (HERE) ;
                        var_cas_propertyOptionPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
                        } break ;
                      case 2 : {
                        GGS_L_propertyPath  var_cas_path ;
                        nt_property_path_ (lexique_var_, var_cas_path) ;
                        var_cas_propertyOptionPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
                        } break ;
                      default :
                        break ;
                    }
                  switch (select_repeat_metamodel_parser_7 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              } break ;
            default :
              break ;
          }
          var_cas_allPropertyMap.methode_insertKey (lexique_var_, var_cas_attributeName, var_cas_k, var_cas_propertyTypeName, var_cas_propertyOptionPathes) ;
          var_cas_entityPropertyMap.methode_insertKey (lexique_var_, var_cas_attributeName, var_cas_k, var_cas_propertyTypeName, var_cas_propertyOptionPathes) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
          GGS_lstring  var_cas_entityName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_entityName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_lstring  var_cas_mapPropertyName ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_mapPropertyName.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          GGS_metamodelPropertyKind var_cas_k ;
          var_cas_k = GGS_metamodelPropertyKind::constructor_mapProperty (HERE) ;
          var_cas_allPropertyMap.methode_insertKey (lexique_var_, var_cas_mapPropertyName, var_cas_k, var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
          var_cas_entityPropertyMap.methode_insertKey (lexique_var_, var_cas_mapPropertyName, var_cas_k, var_cas_entityName, GGS_L_ListOfPropertyPathes::constructor_empty (HERE)) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          GGS_L_ListOfPropertyPathes  var_cas_listOfPropertyPathes ;
          var_cas_listOfPropertyPathes = GGS_L_ListOfPropertyPathes::constructor_empty (HERE) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_L_propertyPath  var_cas_path ;
                nt_property_path_ (lexique_var_, var_cas_path) ;
                var_cas_listOfPropertyPathes.addAssign_operation (var_cas_path, GGS_location (lexique_var_)) ;
              switch (select_repeat_metamodel_parser_9 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_insertErrorMessage ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_insertErrorMessage.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          GGS_lstring  var_cas_searchErrorMessage ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          var_cas_searchErrorMessage.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          var_cas_mapPropertyMap.methode_insertKey (lexique_var_, var_cas_mapPropertyName, var_cas_entityName, var_cas_listOfPropertyPathes, var_cas_insertErrorMessage, var_cas_searchErrorMessage) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_relation) ;
          GGS_lstring  var_cas_relationIdentifier ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          var_cas_relationIdentifier.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                GGS_lstring  var_cas_localVar ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                var_cas_localVar.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
                GGS_L_propertyPath  var_cas_path ;
                nt_property_path_ (lexique_var_, var_cas_path) ;
              switch (select_repeat_metamodel_parser_10 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
          nt_entity_relation_expression_ (lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioEntityMap.methode_insertKey (lexique_var_, var_cas_entityName, var_cas_allPropertyMap, var_cas_isAbstract, var_cas_entityPropertyMap, var_cas_superEntity, var_cas_mapPropertyMap, var_cas_allContextPropertyMap, var_cas_fetchedPropertyMap, var_cas_allFetchedPropertyMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_metamodel_parser_380_26_parse (galgas_scanner & lexique_var_) {
  switch (select_metamodel_parser_1 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_entity) ;
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_metamodel_parser_2 (lexique_var_)) {
    case 1 : {
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
      } break ;
    case 3 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_metamodel_parser_3 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_4 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          switch (select_metamodel_parser_5 (lexique_var_)) {
            case 1 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          switch (select_metamodel_parser_6 (lexique_var_)) {
            case 1 : {
              } break ;
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_in) ;
              nt_property_path_parse (lexique_var_) ;
              } break ;
            case 3 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
              { bool syntaxRepeat = true ;
                while (syntaxRepeat) {
                    switch (select_metamodel_parser_8 (lexique_var_)) {
                      case 1 : {
                        lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_self) ;
                        } break ;
                      case 2 : {
                        nt_property_path_parse (lexique_var_) ;
                        } break ;
                      default :
                        break ;
                    }
                  switch (select_repeat_metamodel_parser_7 (lexique_var_)) {
                    case 2 : {
                      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                      } break ;
                    default :
                      syntaxRepeat = false ;
                      break ;
                  }
                }
              }
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
              } break ;
            default :
              break ;
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 3 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_map) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                nt_property_path_parse (lexique_var_) ;
              switch (select_repeat_metamodel_parser_9 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_insert) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_search) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_error) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_message) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_literal_5Fstring) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        case 4 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_relation) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
          { bool syntaxRepeat = true ;
            while (syntaxRepeat) {
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
                lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
                nt_property_path_parse (lexique_var_) ;
              switch (select_repeat_metamodel_parser_10 (lexique_var_)) {
                case 2 : {
                  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
                  } break ;
                default :
                  syntaxRepeat = false ;
                  break ;
              }
            }
          }
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A_3D) ;
          nt_entity_relation_expression_parse (lexique_var_) ;
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'property_path'              *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_property_path_metamodel_parser_607_21_ (galgas_scanner & lexique_var_,
                                GGS_L_propertyPath  &var_cas_outPath) {
  var_cas_outPath = GGS_L_propertyPath::constructor_empty (HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_metamodel_parser_12 (lexique_var_)) {
          case 1 : {
            GGS_lstring  var_cas_pathElement ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_pathElement.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            var_cas_outPath.addAssign_operation (var_cas_pathElement) ;
            } break ;
          case 2 : {
            GGS_lstring  var_cas_pathElement ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            var_cas_pathElement.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
            var_cas_outPath.addAssign_operation (GGS_lstring::constructor_new (((GGS_string (true, ".")) + (var_cas_pathElement.reader_value ())), var_cas_pathElement.reader_location () COMMA_HERE)) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_metamodel_parser_11 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_property_path_metamodel_parser_607_21_parse (galgas_scanner & lexique_var_) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        switch (select_metamodel_parser_12 (lexique_var_)) {
          case 1 : {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            } break ;
          case 2 : {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
            } break ;
          default :
            break ;
        }
      switch (select_repeat_metamodel_parser_11 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2E) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of production rule 'entity_relation_expression'       *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_relation_expression_metamodel_parser_628_34_ (galgas_scanner & lexique_var_) {
  nt_entity_relation_term_ (lexique_var_) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_13 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          nt_entity_relation_term_ (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_relation_expression_metamodel_parser_628_34_parse (galgas_scanner & lexique_var_) {
  nt_entity_relation_term_parse (lexique_var_) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_13 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          nt_entity_relation_term_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'entity_relation_term'          *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_relation_term_metamodel_parser_639_28_ (galgas_scanner & lexique_var_) {
  nt_entity_relation_factor_ (lexique_var_) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_14 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          nt_entity_relation_factor_ (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_relation_term_metamodel_parser_639_28_parse (galgas_scanner & lexique_var_) {
  nt_entity_relation_factor_parse (lexique_var_) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_14 (lexique_var_)) {
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          nt_entity_relation_factor_parse (lexique_var_) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'entity_relation_factor'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_relation_factor_metamodel_parser_650_30_ (galgas_scanner & lexique_var_) {
  switch (select_metamodel_parser_15 (lexique_var_)) {
    case 1 : {
      nt_entity_relation_primary_ (lexique_var_) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_not) ;
      nt_entity_relation_primary_ (lexique_var_) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_relation_factor_metamodel_parser_650_30_parse (galgas_scanner & lexique_var_) {
  switch (select_metamodel_parser_15 (lexique_var_)) {
    case 1 : {
      nt_entity_relation_primary_parse (lexique_var_) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_not) ;
      nt_entity_relation_primary_parse (lexique_var_) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'entity_relation_primary'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_relation_primary_metamodel_parser_661_31_ (galgas_scanner & lexique_var_) {
  switch (select_metamodel_parser_16 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_true) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_false) ;
      } break ;
    case 3 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_entity_relation_expression_ (lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    case 4 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      GGS_lstring  var_cas_localVar ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      var_cas_localVar.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3D_3D) ;
      GGS_L_propertyPath  var_cas_path ;
      nt_property_path_ (lexique_var_, var_cas_path) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 5 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      GGS_L_propertyPath  var_cas_path ;
      nt_property_path_ (lexique_var_, var_cas_path) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_parameter ;
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
            var_cas_parameter.defineAttribute (lexique_var_.tokenString, lexique_var_) ;
          switch (select_repeat_metamodel_parser_17 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      switch (select_metamodel_parser_18 (lexique_var_)) {
        case 1 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          } break ;
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          } break ;
        default :
          break ;
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_relation_primary_metamodel_parser_661_31_parse (galgas_scanner & lexique_var_) {
  switch (select_metamodel_parser_16 (lexique_var_)) {
    case 1 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_true) ;
      } break ;
    case 2 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_false) ;
      } break ;
    case 3 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_entity_relation_expression_parse (lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    case 4 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3D_3D) ;
      nt_property_path_parse (lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
      } break ;
    case 5 : {
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_do) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__28) ;
      nt_property_path_parse (lexique_var_) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
          switch (select_repeat_metamodel_parser_17 (lexique_var_)) {
            case 2 : {
              lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__2C) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
      switch (select_metamodel_parser_18 (lexique_var_)) {
        case 1 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__7C) ;
          } break ;
        case 2 : {
          lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__26) ;
          } break ;
        default :
          break ;
      }
      lexique_var_.acceptTerminal (galgas_scanner::galgas_scanner_1__29) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

