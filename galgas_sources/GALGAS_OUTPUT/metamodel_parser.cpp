//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'metamodel_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                    february 18th, 2007, at 18h10'40"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "metamodel_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "metamodel_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_77_6_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, true)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_77_6_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_77_6_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_77_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_77_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_77_6_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_metamodel'             *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_parse_metamodel_metamodel_parser_116_6_ (galgas_scanner & _inLexique,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                const GGS_bool &var_cas_inGenerateMetamodelCode) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  GGS_lstring  var_cas_metamodelName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_metamodelName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_root) COMMA_HERE) ;
  GGS_lstring  var_cas_rootEntityName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_rootEntityName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_entityToImplementMap  var_cas_entityMap ;
  var_cas_entityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_mapAndEntityUniqueMap  var_cas_mapAndEntityUniqueMap ;
  var_cas_mapAndEntityUniqueMap = GGS_mapAndEntityUniqueMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_semanticsEntitiesMap ;
  ::routine_enterBuiltinTypes (_inLexique,  var_cas_semanticsEntitiesMap SOURCE_FILE_AT_LINE (132)) ;
  nt_entity_declaration_list_ (_inLexique, var_cas_semanticsEntitiesMap, var_cas_entityMap, var_cas_mapAndEntityUniqueMap) ;
  GGS_bool var_cas_isAbstract ;
  GGS_entityPropertyMap  automatic_var_0 ;
  GGS_entityPropertyMap  automatic_var_1 ;
  GGS_lstring  automatic_var_2 ;
  GGS_entityPropertyMap  automatic_var_3 ;
  GGS_stringset  automatic_var_4 ;
  GGS_entityPropertyMap  automatic_var_5 ;
  GGS_entityPropertyMap  automatic_var_6 ;
  if (var_cas_entityMap._isBuilt ()) {
    var_cas_entityMap (HERE)->method_searchKey (_inLexique, var_cas_rootEntityName, automatic_var_0, var_cas_isAbstract, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, automatic_var_6 SOURCE_FILE_AT_LINE (139)) ;
  }
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
    var_cas_rootEntityName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the root entity cannot be abstract") SOURCE_FILE_AT_LINE (142)) ;
  }
  GGS_stringset  var_cas_multiReferencedEntities ;
  var_cas_multiReferencedEntities = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_5679 = var_cas_entityMap.firstObject () ;
  while ((operand_5679 != NULL)) {
    macroValidPointer (operand_5679) ;
    GGS_entityPropertyMap::element_type * operand_5994 = operand_5679->mInfo.mCurrentMetamodelPropertyMap.firstObject () ;
    while ((operand_5994 != NULL)) {
      macroValidPointer (operand_5994) ;
      if (operand_5994->mInfo.mProperty._isBuilt ()) {
        cPtr_metamodelSingleReferenceProperty * operand_6122 = dynamic_cast <cPtr_metamodelSingleReferenceProperty *> (operand_5994->mInfo.mProperty.getPtr ()) ;
        if (operand_6122 != NULL) {
          macroValidPointer (operand_6122) ; 
          GGS_entityPropertyMap  automatic_var_7 ;
          GGS_bool automatic_var_8 ;
          GGS_entityPropertyMap  automatic_var_9 ;
          GGS_lstring  automatic_var_10 ;
          GGS_entityPropertyMap  automatic_var_11 ;
          GGS_stringset  automatic_var_12 ;
          GGS_entityPropertyMap  automatic_var_13 ;
          GGS_entityPropertyMap  automatic_var_14 ;
          if (var_cas_entityMap._isBuilt ()) {
            var_cas_entityMap (HERE)->method_searchKey (_inLexique, operand_6122->mReferenceEntityName, automatic_var_7, automatic_var_8, automatic_var_9, automatic_var_10, automatic_var_11, automatic_var_12, automatic_var_13, automatic_var_14 SOURCE_FILE_AT_LINE (158)) ;
          }
        }else{
          cPtr_metamodelMultipleReferenceProperty * operand_6280 = dynamic_cast <cPtr_metamodelMultipleReferenceProperty *> (operand_5994->mInfo.mProperty.getPtr ()) ;
          if (operand_6280 != NULL) {
            macroValidPointer (operand_6280) ; 
            GGS_entityPropertyMap  automatic_var_15 ;
            GGS_bool automatic_var_16 ;
            GGS_entityPropertyMap  automatic_var_17 ;
            GGS_lstring  automatic_var_18 ;
            GGS_entityPropertyMap  automatic_var_19 ;
            GGS_stringset  automatic_var_20 ;
            GGS_entityPropertyMap  automatic_var_21 ;
            GGS_entityPropertyMap  automatic_var_22 ;
            if (var_cas_entityMap._isBuilt ()) {
              var_cas_entityMap (HERE)->method_searchKey (_inLexique, operand_6280->mReferenceEntityName, automatic_var_15, automatic_var_16, automatic_var_17, automatic_var_18, automatic_var_19, automatic_var_20, automatic_var_21, automatic_var_22 SOURCE_FILE_AT_LINE (160)) ;
            }
            var_cas_multiReferencedEntities._addAssign_operation (operand_6280->mReferenceEntityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (161))) ;
          }else{ // Else part
          }
        }
      }
      operand_5994 = operand_5994->nextObject () ;
    }
    operand_5679 = operand_5679->nextObject () ;
  }
  if ((var_cas_inGenerateMetamodelCode).isBuiltAndTrue ()) {
    if (var_cas_entityMap._isBuilt () &&
        var_cas_metamodelName._isBuilt () &&
        var_cas_multiReferencedEntities._isBuilt () &&
        var_cas_rootEntityName._isBuilt ()) {
      ::routine_generate_metamodel (_inLexique,  var_cas_entityMap,  var_cas_metamodelName,  var_cas_multiReferencedEntities,  var_cas_rootEntityName SOURCE_FILE_AT_LINE (168)) ;
    }
  }
  if (((! (var_cas_ioMetamodelComponentMap.reader_hasKey (_inLexique, var_cas_metamodelName.reader_string (_inLexique SOURCE_FILE_AT_LINE (176)) SOURCE_FILE_AT_LINE (176))))).isBuiltAndTrue ()) {
    var_cas_ioMetamodelComponentMap.modifier_insertKey (_inLexique, var_cas_metamodelName, var_cas_rootEntityName, var_cas_entityMap, var_cas_multiReferencedEntities SOURCE_FILE_AT_LINE (177)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_parse_metamodel_metamodel_parser_116_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_root) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_entity_declaration_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'entity_declaration_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_list_metamodel_parser_191_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_inSemanticsEntitiesMap,
                                GGS_entityToImplementMap  &var_cas_outEntityMap,
                                GGS_mapAndEntityUniqueMap  &var_cas_ioMapAndEntityUniqueMap) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (_inLexique)) {
        case 2 : {
          nt_entity_declaration_ (_inLexique, var_cas_inSemanticsEntitiesMap, var_cas_outEntityMap, var_cas_ioMapAndEntityUniqueMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_list_metamodel_parser_191_6_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (_inLexique)) {
        case 2 : {
          nt_entity_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'entity_declaration'           *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_208_6_ (galgas_scanner & _inLexique,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_inSemanticsEntitiesMap,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_mapAndEntityUniqueMap  &var_cas_ioMapAndEntityUniqueMap) {
  GGS_bool var_cas_isAbstract ;
  switch (select_metamodel_parser_1 (_inLexique)) {
    case 1 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  GGS_lstring  var_cas_entityName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_entityName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  var_cas_ioMapAndEntityUniqueMap.modifier_insertKey (_inLexique, var_cas_entityName SOURCE_FILE_AT_LINE (225)) ;
  GGS_entityPropertyMap  var_cas_allMetamodelPropertyMap ;
  GGS_lstring  var_cas_superEntity ;
  GGS_stringset  var_cas_superEntitySet ;
  switch (select_metamodel_parser_2 (_inLexique)) {
    case 1 : {
      var_cas_superEntity = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_allMetamodelPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      var_cas_superEntitySet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_superEntity) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
      GGS_bool automatic_var_23 ;
      GGS_entityPropertyMap  automatic_var_24 ;
      GGS_lstring  automatic_var_25 ;
      GGS_entityPropertyMap  automatic_var_26 ;
      GGS_entityPropertyMap  automatic_var_27 ;
      GGS_entityPropertyMap  automatic_var_28 ;
      if (var_cas_ioEntityMap._isBuilt ()) {
        var_cas_ioEntityMap (HERE)->method_searchKey (_inLexique, var_cas_superEntity, var_cas_allMetamodelPropertyMap, automatic_var_23, automatic_var_24, automatic_var_25, automatic_var_26, var_cas_superEntitySet, automatic_var_27, automatic_var_28 SOURCE_FILE_AT_LINE (237)) ;
      }
      var_cas_superEntitySet._addAssign_operation (var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (248))) ;
      } break ;
    default :
      break ;
  }
  GGS_entityPropertyMap  var_cas_currentEntityPropertyMap ;
  var_cas_currentEntityPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_3 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_propertyTypeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_propertyTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          GGS_AC_semanticsEntity  var_cas_entity ;
          if (var_cas_inSemanticsEntitiesMap._isBuilt ()) {
            var_cas_inSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_propertyTypeName, var_cas_entity SOURCE_FILE_AT_LINE (258)) ;
          }
          GGS_AC_galgasType  var_cas_aType ;
          { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_entity.getPtr ()) ;
            if (ptrExtraire_ == NULL) {
              var_cas_aType._drop_operation () ;
              if (var_cas_entity.getPtr () != NULL) {
                TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
                C_String message2_ ;
                message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
                message2_ << var_cas_entity (HERE)->message_messageTypeEntite () ;
                var_cas_propertyTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (260)) ;
              }
            }else{
              macroValidPointer (ptrExtraire_) ;
              var_cas_aType = ptrExtraire_->aDefType ;
            }
          }
          GGS_lstring  var_cas_attributeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_metamodelProperty  var_cas_k ;
          var_cas_k = GGS_metamodelAttributeProperty::constructor_new (_inLexique, var_cas_aType COMMA_HERE) ;
          var_cas_currentEntityPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_k SOURCE_FILE_AT_LINE (264)) ;
          var_cas_allMetamodelPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_k SOURCE_FILE_AT_LINE (265)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          GGS_lstring  var_cas_propertyTypeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_propertyTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
          GGS_metamodelProperty  var_cas_k ;
          GGS_lstring  var_cas_attributeName ;
          switch (select_metamodel_parser_4 (_inLexique)) {
            case 1 : {
              GGS_luint  var_cas_lowerBound ;
              GGS_luint  var_cas_higherBound ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
              switch (select_metamodel_parser_5 (_inLexique)) {
                case 1 : {
                  _inLexique._assignFromAttribute_uint32value (var_cas_lowerBound) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                  switch (select_metamodel_parser_6 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                      switch (select_metamodel_parser_7 (_inLexique)) {
                        case 1 : {
                          _inLexique._assignFromAttribute_uint32value (var_cas_higherBound) ;
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                          if (((((var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (283))) == (GGS_uint (true, 0U))) & ((var_cas_higherBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (283))) == (GGS_uint (true, 0U))))).isBuiltAndTrue ()) {
                            var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "if lower bound is zero, higher bound should be greater than zero") SOURCE_FILE_AT_LINE (285)) ;
                          }else if (((((var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (285))) > (GGS_uint (true, 0U))) & ((var_cas_higherBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (285))) < (var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (285)))))).isBuiltAndTrue ()) {
                            var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "higher bound should be greater or equal than lower bound") SOURCE_FILE_AT_LINE (287)) ;
                          }
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
                          var_cas_higherBound = GGS_luint::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      var_cas_higherBound = var_cas_lowerBound ;
                      if (((var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (294))) == (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                        var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "if higher bound is implicit, lower bound should be greater than zero") SOURCE_FILE_AT_LINE (296)) ;
                      }
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  var_cas_lowerBound = GGS_luint::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                  var_cas_higherBound = GGS_luint::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
              _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_k = GGS_metamodelMultipleReferenceProperty::constructor_new (_inLexique, var_cas_propertyTypeName, var_cas_lowerBound, var_cas_higherBound COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              var_cas_k = GGS_metamodelSingleReferenceProperty::constructor_new (_inLexique, var_cas_propertyTypeName COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          var_cas_currentEntityPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_k SOURCE_FILE_AT_LINE (310)) ;
          var_cas_allMetamodelPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_k SOURCE_FILE_AT_LINE (311)) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  var_cas_ioEntityMap.modifier_insertKey (_inLexique, var_cas_entityName, var_cas_allMetamodelPropertyMap, var_cas_isAbstract, var_cas_currentEntityPropertyMap, var_cas_superEntity, GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE), var_cas_superEntitySet, GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE), var_cas_allMetamodelPropertyMap SOURCE_FILE_AT_LINE (315)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_metamodel_parser_208_6_parse (galgas_scanner & _inLexique) {
  switch (select_metamodel_parser_1 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_class) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
  switch (select_metamodel_parser_2 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_3 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        case 3 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mda_5Ftype_5Fname) COMMA_HERE) ;
          switch (select_metamodel_parser_4 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
              switch (select_metamodel_parser_5 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                  switch (select_metamodel_parser_6 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                      switch (select_metamodel_parser_7 (_inLexique)) {
                        case 1 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

