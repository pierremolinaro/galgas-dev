//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'metamodel_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 16th, 2007, at 20h57'12"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "metamodel_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "metamodel_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_117_6_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, true)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_117_6_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_117_6_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_117_6_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_117_6_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_treewalkingComponents  &/* var_cas_ioTreewalkingComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap, GGS_bool (true, false)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_117_6_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_metamodel'             *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_parse_metamodel_metamodel_parser_158_6_ (galgas_scanner & _inLexique,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                const GGS_bool &var_cas_inGenerateMetamodelCode) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  GGS_lstring  var_cas_metamodelName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_metamodelName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  GGS_lstringlist  var_cas_superMetamodelList ;
  switch (select_metamodel_parser_0 (_inLexique)) {
    case 1 : {
      var_cas_superMetamodelList = GGS_lstringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_superMetamodelList = GGS_lstringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            GGS_lstring  var_cas_superMetamodel ;
            _inLexique._assignFromAttribute_tokenString (var_cas_superMetamodel) ;
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
            var_cas_superMetamodelList._addAssign_operation (var_cas_superMetamodel) ;
          switch (select_repeat_metamodel_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_root) COMMA_HERE) ;
  GGS_lstring  var_cas_rootEntityName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_rootEntityName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  GGS_M_lexiqueComponents  var_cas_lexiqueMapForUse ;
  var_cas_lexiqueMapForUse = GGS_M_lexiqueComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsComponents  var_cas_semanticsComponentsMap ;
  var_cas_semanticsComponentsMap = GGS_M_semanticsComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_treewalkingComponents  var_cas_treewalkingComponentMap ;
  var_cas_treewalkingComponentMap = GGS_M_treewalkingComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_grammarComponents  var_cas_grammarComponentsMap ;
  var_cas_grammarComponentsMap = GGS_M_grammarComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_optionComponents  var_cas_optionsComponentsMap ;
  var_cas_optionsComponentsMap = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ModelMap  var_cas_modelMap ;
  var_cas_modelMap = GGS_ModelMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_ActionMap  var_cas_actionMap ;
  var_cas_actionMap = GGS_ActionMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_inclusionsForHeaderFile ;
  GGS_stringset  var_cas_inclusionsForImplementationFile ;
  GGS_M_optionComponents  var_cas_optionsComponentsMapForUse ;
  var_cas_optionsComponentsMapForUse = GGS_M_optionComponents::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_componentEntitiesMap ;
  GGS_stringset  var_cas_classNamesSet ;
  var_cas_classNamesSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_typeTableEnAvant  var_cas_tableEnAvant ;
  var_cas_tableEnAvant = GGS_typeTableEnAvant::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_stringset  var_cas_includedSemanticsComponents ;
  GGS_stringset  var_cas_includedOptionComponents ;
  GGS_stringset  var_cas_includedMetamodelComponents ;
  GGS_stringset  var_cas_includedGrammarComponents ;
  GGS_entityToImplementMap  var_cas_allMetamodelClassMap ;
  nt_import_headers_semantics_and_grammars_ (_inLexique, var_cas_includedSemanticsComponents, var_cas_includedMetamodelComponents, var_cas_includedOptionComponents, var_cas_includedGrammarComponents, var_cas_lexiqueMapForUse, var_cas_semanticsComponentsMap, var_cas_ioMetamodelComponentMap, var_cas_treewalkingComponentMap, var_cas_grammarComponentsMap, var_cas_optionsComponentsMap, var_cas_inclusionsForImplementationFile, var_cas_inclusionsForHeaderFile, var_cas_optionsComponentsMapForUse, var_cas_modelMap, var_cas_actionMap, var_cas_componentEntitiesMap, var_cas_tableEnAvant, var_cas_allMetamodelClassMap) ;
  GGS_stringlist  var_cas_headerInclusionList ;
  var_cas_headerInclusionList = GGS_stringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_M_semanticsComponents::element_type * operand_8748 = var_cas_semanticsComponentsMap.firstObject () ;
  while ((operand_8748 != NULL)) {
    macroValidPointer (operand_8748) ;
    var_cas_headerInclusionList._addAssign_operation (operand_8748->mKey.reader_string (_inLexique SOURCE_FILE_AT_LINE (228))) ;
    operand_8748 = operand_8748->nextObject () ;
  }
  GGS_stringset  var_cas_superMetamodels ;
  var_cas_superMetamodels = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap  var_cas_allEntityMap ;
  var_cas_allEntityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_lstringlist::element_type * operand_9048 = var_cas_superMetamodelList.firstObject () ;
  while ((operand_9048 != NULL)) {
    macroValidPointer (operand_9048) ;
    var_cas_headerInclusionList._addAssign_operation (operand_9048->mValue.reader_string (_inLexique SOURCE_FILE_AT_LINE (234))) ;
    ::routine_performMetamodelInclusion (_inLexique, var_cas_ioMetamodelComponentMap, operand_9048->mValue, var_cas_superMetamodels, var_cas_allEntityMap SOURCE_FILE_AT_LINE (235)) ;
    operand_9048 = operand_9048->nextObject () ;
  }
  GGS_entityToImplementMap  var_cas_entityMap ;
  var_cas_entityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_M_semanticsEntitiesForUse  var_cas_semanticsEntitiesMap ;
  GGS_typeEntitiesToGenerateList  var_cas_listeEntitesAengendrer ;
  var_cas_listeEntitesAengendrer = GGS_typeEntitiesToGenerateList::constructor_emptyList (_inLexique COMMA_HERE) ;
  ::routine_enterBuiltinTypes (_inLexique, var_cas_semanticsEntitiesMap SOURCE_FILE_AT_LINE (246)) ;
  nt_entity_declaration_list_ (_inLexique, var_cas_metamodelName.reader_string (_inLexique SOURCE_FILE_AT_LINE (248)), var_cas_semanticsEntitiesMap, var_cas_entityMap, var_cas_allEntityMap, var_cas_listeEntitesAengendrer) ;
  GGS_entityToImplementMap::element_type * operand_9722 = var_cas_entityMap.firstObject () ;
  while ((operand_9722 != NULL)) {
    macroValidPointer (operand_9722) ;
    GGS_entityPropertyMap::element_type * operand_9946 = operand_9722->mInfo.mCurrentMetamodelPropertyMap.firstObject () ;
    while ((operand_9946 != NULL)) {
      macroValidPointer (operand_9946) ;
      if (operand_9946->mInfo.mPropertyType._isBuilt ()) {
        cPtr_typeGalgas_singleReferenceEntity * operand_10078 = dynamic_cast <cPtr_typeGalgas_singleReferenceEntity *> (operand_9946->mInfo.mPropertyType.getPtr ()) ;
        if (operand_10078 != NULL) {
          macroValidPointer (operand_10078) ; 
          GGS_entityPropertyMap  automatic_var_0 ;
          GGS_bool automatic_var_1 ;
          GGS_entityPropertyMap  automatic_var_2 ;
          GGS_lstring  automatic_var_3 ;
          GGS_typeSuperClassesMap  automatic_var_4 ;
          GGS_typeListeAttributsSemantiques  automatic_var_5 ;
          GGS_string automatic_var_6 ;
          if (var_cas_allEntityMap._isBuilt ()) {
            var_cas_allEntityMap (HERE)->method_searchKey (_inLexique, operand_10078->mEntityTypeName, automatic_var_0, automatic_var_1, automatic_var_2, automatic_var_3, automatic_var_4, automatic_var_5, automatic_var_6 SOURCE_FILE_AT_LINE (264)) ;
          }
        }else{
          cPtr_typeGalgas_multipleReferenceEntity * operand_10219 = dynamic_cast <cPtr_typeGalgas_multipleReferenceEntity *> (operand_9946->mInfo.mPropertyType.getPtr ()) ;
          if (operand_10219 != NULL) {
            macroValidPointer (operand_10219) ; 
            GGS_entityPropertyMap  automatic_var_7 ;
            GGS_bool automatic_var_8 ;
            GGS_entityPropertyMap  automatic_var_9 ;
            GGS_lstring  automatic_var_10 ;
            GGS_typeSuperClassesMap  automatic_var_11 ;
            GGS_typeListeAttributsSemantiques  automatic_var_12 ;
            GGS_string automatic_var_13 ;
            if (var_cas_allEntityMap._isBuilt ()) {
              var_cas_allEntityMap (HERE)->method_searchKey (_inLexique, operand_10219->mEntityTypeName, automatic_var_7, automatic_var_8, automatic_var_9, automatic_var_10, automatic_var_11, automatic_var_12, automatic_var_13 SOURCE_FILE_AT_LINE (266)) ;
            }
          }else{ // Else part
          }
        }
      }
      operand_9946 = operand_9946->nextObject () ;
    }
    operand_9722 = operand_9722->nextObject () ;
  }
  if ((var_cas_inGenerateMetamodelCode).isBuiltAndTrue ()) {
    if (var_cas_entityMap._isBuilt () &&
        var_cas_metamodelName._isBuilt () &&
        var_cas_listeEntitesAengendrer._isBuilt () &&
        var_cas_rootEntityName._isBuilt () &&
        var_cas_headerInclusionList._isBuilt ()) {
      ::routine_generate_metamodel (_inLexique,  var_cas_entityMap,  var_cas_metamodelName,  var_cas_listeEntitesAengendrer,  var_cas_rootEntityName,  var_cas_headerInclusionList SOURCE_FILE_AT_LINE (273)) ;
    }
  }
  if (((! (var_cas_ioMetamodelComponentMap.reader_hasKey (_inLexique, var_cas_metamodelName.reader_string (_inLexique SOURCE_FILE_AT_LINE (282)) SOURCE_FILE_AT_LINE (282))))).isBuiltAndTrue ()) {
    var_cas_ioMetamodelComponentMap.modifier_insertKey (_inLexique, var_cas_metamodelName, var_cas_rootEntityName, var_cas_entityMap, var_cas_superMetamodels SOURCE_FILE_AT_LINE (283)) ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_parse_metamodel_metamodel_parser_158_6_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  switch (select_metamodel_parser_0 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      { bool syntaxRepeat = true ;
        while (syntaxRepeat) {
            _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          switch (select_repeat_metamodel_parser_1 (_inLexique)) {
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat = false ;
              break ;
          }
        }
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_root) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3A) COMMA_HERE) ;
  nt_import_headers_semantics_and_grammars_parse (_inLexique) ;
  nt_entity_declaration_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_end) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_metamodel) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'entity_declaration_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_list_metamodel_parser_297_6_ (galgas_scanner & _inLexique,
                                const GGS_string &var_cas_inCurrentMetamodelName,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_inSemanticsEntitiesMap,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_entityToImplementMap  &var_cas_ioAllEntityMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer) {
  GGS_stringset  var_cas_metamodelClassSet ;
  var_cas_metamodelClassSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_11701 = _inLexique.parsingContext () ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_metamodel_parser_2 (_inLexique)) {
          case 2 : {
            nt_entity_declaration_parseForEnumeratingClasses (_inLexique, var_cas_metamodelClassSet) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_11701) ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_metamodel_parser_2 (_inLexique)) {
          case 2 : {
            nt_entity_declaration_ (_inLexique, var_cas_inCurrentMetamodelName, var_cas_metamodelClassSet, var_cas_inSemanticsEntitiesMap, var_cas_ioEntityMap, var_cas_ioAllEntityMap, var_cas_listeEntitesAengendrer) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_list_metamodel_parser_297_6_parse (galgas_scanner & _inLexique) {
  //--- First branch of parse/rewind instruction
    const C_parsingContext context_11701 = _inLexique.parsingContext () ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_metamodel_parser_2 (_inLexique)) {
          case 2 : {
            nt_entity_declaration_parse (_inLexique) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- Branch of parse/rewind instruction
    _inLexique.setParsingContext (context_11701) ;
    { bool syntaxRepeat = true ;
      while (syntaxRepeat) {
        switch (select_repeat_metamodel_parser_2 (_inLexique)) {
          case 2 : {
            nt_entity_declaration_parse (_inLexique) ;
            } break ;
          default :
            syntaxRepeat = false ;
            break ;
        }
      }
    }
  //--- End of parse/rewind instruction
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'entity_declaration'           *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_330_6_ (galgas_scanner & _inLexique,
                                const GGS_string &var_cas_inCurrentMetamodelName,
                                const GGS_stringset  &var_cas_inMetamodelClassSet,
                                const GGS_M_semanticsEntitiesForUse  &var_cas_inSemanticsEntitiesMap,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_entityToImplementMap  &var_cas_ioAllEntityMap,
                                GGS_typeEntitiesToGenerateList  &var_cas_listeEntitesAengendrer) {
  GGS_bool var_cas_isAbstract ;
  switch (select_metamodel_parser_3 (_inLexique)) {
    case 1 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_entity) COMMA_HERE) ;
  GGS_lstring  var_cas_entityName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_entityName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  GGS_entityPropertyMap  var_cas_allMetamodelPropertyMap ;
  GGS_lstring  var_cas_superEntity ;
  GGS_typeSuperClassesMap  var_cas_superEntityMap ;
  GGS_typeListeAttributsSemantiques  var_cas_listeTousAttributsSemantiques ;
  switch (select_metamodel_parser_4 (_inLexique)) {
    case 1 : {
      var_cas_superEntity = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_allMetamodelPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      var_cas_superEntityMap = GGS_typeSuperClassesMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      var_cas_listeTousAttributsSemantiques = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique._assignFromAttribute_tokenString (var_cas_superEntity) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_bool automatic_var_14 ;
      GGS_entityPropertyMap  automatic_var_15 ;
      GGS_lstring  automatic_var_16 ;
      GGS_string automatic_var_17 ;
      if (var_cas_ioAllEntityMap._isBuilt ()) {
        var_cas_ioAllEntityMap (HERE)->method_searchKey (_inLexique, var_cas_superEntity, var_cas_allMetamodelPropertyMap, automatic_var_14, automatic_var_15, automatic_var_16, var_cas_superEntityMap, var_cas_listeTousAttributsSemantiques, automatic_var_17 SOURCE_FILE_AT_LINE (363)) ;
      }
      var_cas_superEntityMap.modifier_insertKey (_inLexique, var_cas_superEntity SOURCE_FILE_AT_LINE (371)) ;
      } break ;
    default :
      break ;
  }
  GGS_entityPropertyMap  var_cas_currentEntityPropertyMap ;
  var_cas_currentEntityPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_typeListeAttributsSemantiques  var_cas_listeAttributsSemantiquesCourants ;
  var_cas_listeAttributsSemantiquesCourants = GGS_typeListeAttributsSemantiques::constructor_emptyList (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_5 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_propertyOrEntityTypeName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_propertyOrEntityTypeName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          switch (select_metamodel_parser_6 (_inLexique)) {
            case 1 : {
              GGS_lstring  var_cas_attributeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_AC_galgasType  var_cas_propertyType ;
              if ((var_cas_inMetamodelClassSet.reader_hasKey (_inLexique, var_cas_propertyOrEntityTypeName.reader_string (_inLexique SOURCE_FILE_AT_LINE (385)) SOURCE_FILE_AT_LINE (385))).isBuiltAndTrue ()) {
                var_cas_propertyType = GGS_typeGalgas_singleReferenceEntity::constructor_new (_inLexique, var_cas_propertyOrEntityTypeName COMMA_HERE) ;
                var_cas_currentEntityPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType SOURCE_FILE_AT_LINE (387)) ;
                var_cas_allMetamodelPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType SOURCE_FILE_AT_LINE (388)) ;
              }else{
                GGS_AC_semanticsEntity  var_cas_theEntity ;
                if (var_cas_inSemanticsEntitiesMap._isBuilt ()) {
                  var_cas_inSemanticsEntitiesMap (HERE)->method_searchKey (_inLexique, var_cas_propertyOrEntityTypeName, var_cas_theEntity SOURCE_FILE_AT_LINE (391)) ;
                }
                { cPtr_typeEntiteType * ptrExtraire_ = dynamic_cast <cPtr_typeEntiteType *> (var_cas_theEntity.getPtr ()) ;
                  if (ptrExtraire_ == NULL) {
                    var_cas_propertyType._drop_operation () ;
                    if (var_cas_theEntity.getPtr () != NULL) {
                      TC_UniqueArray <C_String> message1_ (1, "" COMMA_HERE) ;
                      C_String message2_ ;
                      message1_ (0 COMMA_HERE) << cPtr_typeEntiteType::static_string_message_messageTypeEntite () ;
                      message2_ << var_cas_theEntity (HERE)->message_messageTypeEntite () ;
                      var_cas_propertyOrEntityTypeName.signalExtractError (_inLexique, message1_, message2_ SOURCE_FILE_AT_LINE (392)) ;
                    }
                  }else{
                    macroValidPointer (ptrExtraire_) ;
                    var_cas_propertyType = ptrExtraire_->aDefType ;
                  }
                }
                var_cas_currentEntityPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType SOURCE_FILE_AT_LINE (393)) ;
                var_cas_allMetamodelPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType SOURCE_FILE_AT_LINE (394)) ;
              }
              var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_propertyType, var_cas_attributeName) ;
              var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_propertyType, var_cas_attributeName) ;
              } break ;
            case 2 : {
              GGS_luint  var_cas_lowerBound ;
              GGS_luint  var_cas_higherBound ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
              switch (select_metamodel_parser_7 (_inLexique)) {
                case 1 : {
                  _inLexique._assignFromAttribute_uint32value (var_cas_lowerBound) ;
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                  switch (select_metamodel_parser_8 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                      switch (select_metamodel_parser_9 (_inLexique)) {
                        case 1 : {
                          _inLexique._assignFromAttribute_uint32value (var_cas_higherBound) ;
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                          if (((((var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (408))) == (GGS_uint (true, 0U))) & ((var_cas_higherBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (408))) == (GGS_uint (true, 0U))))).isBuiltAndTrue ()) {
                            var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "if lower bound is zero, higher bound should be greater than zero") SOURCE_FILE_AT_LINE (410)) ;
                          }else if (((((var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (410))) > (GGS_uint (true, 0U))) & ((var_cas_higherBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (410))) < (var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (410)))))).isBuiltAndTrue ()) {
                            var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "higher bound should be greater or equal than lower bound") SOURCE_FILE_AT_LINE (412)) ;
                          }
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
                          var_cas_higherBound = GGS_luint::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      var_cas_higherBound = var_cas_lowerBound ;
                      if (((var_cas_lowerBound.reader_uint (_inLexique SOURCE_FILE_AT_LINE (419))) == (GGS_uint (true, 0U))).isBuiltAndTrue ()) {
                        var_cas_lowerBound.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "if higher bound is implicit, lower bound should be greater than zero") SOURCE_FILE_AT_LINE (421)) ;
                      }
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  var_cas_lowerBound = GGS_luint::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                  var_cas_higherBound = GGS_luint::constructor_new (_inLexique, GGS_uint (true, 0U), GGS_location (_inLexique) COMMA_HERE) ;
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
              GGS_lstring  var_cas_attributeName ;
              _inLexique._assignFromAttribute_tokenString (var_cas_attributeName) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              GGS_AC_galgasType  var_cas_propertyType ;
              var_cas_propertyType = GGS_typeGalgas_multipleReferenceEntity::constructor_new (_inLexique, var_cas_propertyOrEntityTypeName, var_cas_lowerBound, var_cas_higherBound COMMA_HERE) ;
              var_cas_currentEntityPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType SOURCE_FILE_AT_LINE (435)) ;
              var_cas_allMetamodelPropertyMap.modifier_insertKey (_inLexique, var_cas_attributeName, var_cas_propertyType SOURCE_FILE_AT_LINE (436)) ;
              var_cas_listeTousAttributsSemantiques._addAssign_operation (var_cas_propertyType, var_cas_attributeName) ;
              var_cas_listeAttributsSemantiquesCourants._addAssign_operation (var_cas_propertyType, var_cas_attributeName) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
  GGS_luint  var_cas_metamodelClassID ;
  var_cas_ioEntityMap.modifier_insertKeyAndGetID (_inLexique, var_cas_entityName, var_cas_metamodelClassID, var_cas_allMetamodelPropertyMap, var_cas_isAbstract, var_cas_currentEntityPropertyMap, var_cas_superEntity, var_cas_superEntityMap, var_cas_listeTousAttributsSemantiques, var_cas_inCurrentMetamodelName SOURCE_FILE_AT_LINE (444)) ;
  var_cas_ioAllEntityMap.modifier_insertKey (_inLexique, var_cas_entityName, var_cas_allMetamodelPropertyMap, var_cas_isAbstract, var_cas_currentEntityPropertyMap, var_cas_superEntity, var_cas_superEntityMap, var_cas_listeTousAttributsSemantiques, var_cas_inCurrentMetamodelName SOURCE_FILE_AT_LINE (455)) ;
  GGS_typeEntityToGenerate  var_cas_def ;
  var_cas_def = GGS_C_metamodelEntityToImplement::constructor_new (_inLexique, var_cas_entityName, var_cas_isAbstract, var_cas_listeTousAttributsSemantiques, var_cas_listeAttributsSemantiquesCourants, var_cas_superEntity.reader_string (_inLexique SOURCE_FILE_AT_LINE (471)), var_cas_metamodelClassID.reader_uint (_inLexique SOURCE_FILE_AT_LINE (472)) COMMA_HERE) ;
  var_cas_listeEntitesAengendrer._addAssign_operation (var_cas_def) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_330_6_parseForEnumeratingClasses (galgas_scanner & _inLexique,
                                GGS_stringset  &var_cas_ioMetamodelClassSet) {
  switch (select_metamodel_parser_3 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_entity) COMMA_HERE) ;
  GGS_lstring  var_cas_entityName ;
  _inLexique._assignFromAttribute_tokenString (var_cas_entityName) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  var_cas_ioMetamodelClassSet._addAssign_operation (var_cas_entityName.reader_string (_inLexique SOURCE_FILE_AT_LINE (487))) ;
  switch (select_metamodel_parser_4 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          switch (select_metamodel_parser_6 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
              switch (select_metamodel_parser_7 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                  switch (select_metamodel_parser_8 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                      switch (select_metamodel_parser_9 (_inLexique)) {
                        case 1 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_metamodel_parser_330_6_parse (galgas_scanner & _inLexique) {
  switch (select_metamodel_parser_3 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_abstract) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_entity) COMMA_HERE) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
  switch (select_metamodel_parser_4 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_extends) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7B) COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_5 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
          switch (select_metamodel_parser_6 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
              switch (select_metamodel_parser_7 (_inLexique)) {
                case 1 : {
                  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                  switch (select_metamodel_parser_8 (_inLexique)) {
                    case 1 : {
                      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2C) COMMA_HERE) ;
                      switch (select_metamodel_parser_9 (_inLexique)) {
                        case 1 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
                          } break ;
                        case 2 : {
                          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
                          } break ;
                        default :
                          break ;
                      }
                      } break ;
                    case 2 : {
                      } break ;
                    default :
                      break ;
                  }
                  } break ;
                case 2 : {
                  } break ;
                default :
                  break ;
              }
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
              _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3B) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7D) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

