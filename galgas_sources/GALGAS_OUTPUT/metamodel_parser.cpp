//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'metamodel_parser.cpp'                         *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       may 30th, 2006, at 10h3'21"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "metamodel_parser.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char gGGSsourceFile [] = "metamodel_parser.ggs" ;
  #define SOURCE_FILE_AT_LINE(line) , gGGSsourceFile, line
#else
  #define SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'galgas_component'            *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_ (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importLexique (galgas_scanner & _inLexique,
                                GGS_M_lexiqueComponents  &/* var_cas_ioLexiqueMapForUse */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importSyntax (galgas_scanner & _inLexique,
                                GGS_M_syntaxComponents  &/* var_cas_ioSyntaxComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importSemantics (galgas_scanner & _inLexique,
                                GGS_M_semanticsComponents  &/* var_cas_ioSemanticsComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importGrammarForSemantics (galgas_scanner & _inLexique,
                                GGS_M_grammarComponents  &/* var_cas_ioGrammarComponentsMap */,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap,
                                GGS_M_constraintComponents  &/* var_cas_ioConstraintComponentMap */) {
  nt_parse_metamodel_ (_inLexique, var_cas_ioMetamodelComponentMap) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_galgas_component_metamodel_parser_75_24_importOptions (galgas_scanner & _inLexique,
                                GGS_M_optionComponents  &/* var_cas_ioOptionsComponentsMap */) {
  nt_parse_metamodel_parse (_inLexique) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'parse_metamodel'             *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_parse_metamodel_metamodel_parser_114_23_ (galgas_scanner & _inLexique,
                                GGS_M_metamodelsComponents  &var_cas_ioMetamodelComponentMap) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  GGS_lstring  var_cas_metamodelName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  var_cas_metamodelName.defineAttribute (_inLexique.tokenString, _inLexique) ;
  GGS_stringset  var_cas_primitiveTypeAttributeNameSet ;
  var_cas_primitiveTypeAttributeNameSet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "bool")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "char")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "uint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "sint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "double")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "string")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lbool")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lchar")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "luint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lsint")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "ldouble")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "lstring")) ;
  var_cas_primitiveTypeAttributeNameSet.addAssign_operation (GGS_string (true, "location")) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  GGS_lstring  var_cas_rootEntityName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_rootEntityName.defineAttribute (_inLexique.tokenString, _inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  GGS_entityToImplementMap  var_cas_entityMap ;
  var_cas_entityMap = GGS_entityToImplementMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_mapAndEntityUniqueMap  var_cas_mapAndEntityUniqueMap ;
  var_cas_mapAndEntityUniqueMap = GGS_mapAndEntityUniqueMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  nt_entity_declaration_list_ (_inLexique, var_cas_entityMap, var_cas_primitiveTypeAttributeNameSet, var_cas_mapAndEntityUniqueMap) ;
  GGS_bool var_cas_isAbstract ;
  GGS_entityPropertyMap  var_cas_5855 ;
  GGS_entityPropertyMap  var_cas_5870 ;
  GGS_lstring  var_cas_5873 ;
  if (var_cas_entityMap.isBuilt ()) {
    var_cas_entityMap (HERE)->method_searchKey (_inLexique, var_cas_rootEntityName, var_cas_5855, var_cas_isAbstract, var_cas_5870, var_cas_5873 SOURCE_FILE_AT_LINE (149)) ;
  }
  if ((var_cas_isAbstract).isBuiltAndTrue ()) {
      var_cas_rootEntityName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, GGS_string (true, "the root entity cannot be abstract") SOURCE_FILE_AT_LINE (151)) ;
  }
  GGS_M_semanticsEntitiesForUse  var_cas_semanticsEntityMap ;
  var_cas_semanticsEntityMap = GGS_M_semanticsEntitiesForUse::constructor_emptyMap (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_6088 = var_cas_entityMap.firstObject () ;
  while ((operand_6088 != NULL)) {
    macroValidPointer (operand_6088) ;
    GGS_stringset  var_cas_superEntitySet ;
    var_cas_superEntitySet = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
    ::routine_buildSuperEntitySet (_inLexique,  var_cas_entityMap,  operand_6088->mInfo.mSuperEntityName,  var_cas_superEntitySet SOURCE_FILE_AT_LINE (161)) ;
    GGS_AC_galgasType  var_cas_t ;
    var_cas_t = GGS_typeGalgas_singleEntity::constructor_new (_inLexique, operand_6088->mKey, operand_6088->mInfo.mAllPropertiesMap, operand_6088->mInfo.mIsAbstract, operand_6088->mInfo.mEntityPropertiesMap, operand_6088->mInfo.mSuperEntityName, var_cas_superEntitySet COMMA_HERE) ;
    GGS_AC_semanticsEntity  var_cas_e ;
    var_cas_e = GGS_typeEntiteType::constructor_new (_inLexique, var_cas_t COMMA_HERE) ;
    var_cas_semanticsEntityMap.method_insertKey (_inLexique, operand_6088->mKey, var_cas_e SOURCE_FILE_AT_LINE (172)) ;
    operand_6088 = operand_6088->nextObject () ;
  }
  GGS_stringset  var_cas_multiReferencedEntities ;
  var_cas_multiReferencedEntities = GGS_stringset::constructor_emptySet (_inLexique COMMA_HERE) ;
  GGS_entityToImplementMap::element_type * operand_6876 = var_cas_entityMap.firstObject () ;
  while ((operand_6876 != NULL)) {
    macroValidPointer (operand_6876) ;
    GGS_entityPropertyMap::element_type * operand_7109 = operand_6876->mInfo.mEntityPropertiesMap.firstObject () ;
    while ((operand_7109 != NULL)) {
      macroValidPointer (operand_7109) ;
      if (((((operand_7109->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_singleReferenceProperty (_inLexique COMMA_HERE))) || ((operand_7109->mInfo.mKind) == (GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (_inLexique COMMA_HERE))))).isBuiltAndTrue ()) {
        GGS_entityPropertyMap  var_cas_7449 ;
        GGS_bool var_cas_7452 ;
        GGS_entityPropertyMap  var_cas_7455 ;
        GGS_lstring  var_cas_7458 ;
        if (var_cas_entityMap.isBuilt ()) {
          var_cas_entityMap (HERE)->method_searchKey (_inLexique, operand_7109->mInfo.mTypeName, var_cas_7449, var_cas_7452, var_cas_7455, var_cas_7458 SOURCE_FILE_AT_LINE (188)) ;
        }
        var_cas_multiReferencedEntities.addAssign_operation (operand_7109->mInfo.mTypeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (189))) ;
      }
      operand_7109 = operand_7109->nextObject () ;
    }
    operand_6876 = operand_6876->nextObject () ;
  }
  if (var_cas_entityMap.isBuilt () &&
      var_cas_metamodelName.isBuilt () &&
      var_cas_multiReferencedEntities.isBuilt () &&
      var_cas_rootEntityName.isBuilt ()) {
    ::routine_generate_metamodel (_inLexique,  var_cas_entityMap,  var_cas_metamodelName,  var_cas_multiReferencedEntities,  var_cas_rootEntityName SOURCE_FILE_AT_LINE (195)) ;
  }
  if (((! (var_cas_ioMetamodelComponentMap.reader_hasKey (_inLexique, var_cas_metamodelName.reader_value (_inLexique SOURCE_FILE_AT_LINE (201)) SOURCE_FILE_AT_LINE (201))))).isBuiltAndTrue ()) {
    var_cas_ioMetamodelComponentMap.method_insertKey (_inLexique, var_cas_metamodelName, var_cas_rootEntityName, var_cas_semanticsEntityMap, var_cas_entityMap, var_cas_multiReferencedEntities SOURCE_FILE_AT_LINE (203)) ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_parse_metamodel_metamodel_parser_114_23_parse (galgas_scanner & _inLexique) {
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_root) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3A) ;
  nt_entity_declaration_list_parse (_inLexique) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_end) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_metamodel) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'entity_declaration_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_list_metamodel_parser_217_31_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  &var_cas_outEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet,
                                GGS_mapAndEntityUniqueMap  &var_cas_ioMapAndEntityUniqueMap) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (_inLexique)) {
        case 2 : {
          nt_entity_declaration_ (_inLexique, var_cas_outEntityMap, var_cas_ioPrimitiveTypeAttributeNameSet, var_cas_ioMapAndEntityUniqueMap) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_list_metamodel_parser_217_31_parse (galgas_scanner & _inLexique) {
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_0 (_inLexique)) {
        case 2 : {
          nt_entity_declaration_parse (_inLexique) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'entity_declaration'           *
//                                                                           *
//---------------------------------------------------------------------------*

void metamodel_parser::
metamodel_parser::
pr_entity_declaration_metamodel_parser_234_26_ (galgas_scanner & _inLexique,
                                GGS_entityToImplementMap  &var_cas_ioEntityMap,
                                GGS_stringset  &var_cas_ioPrimitiveTypeAttributeNameSet,
                                GGS_mapAndEntityUniqueMap  &var_cas_ioMapAndEntityUniqueMap) {
  GGS_bool var_cas_isAbstract ;
  switch (select_metamodel_parser_1 (_inLexique)) {
    case 1 : {
      var_cas_isAbstract = GGS_bool (true, false) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      var_cas_isAbstract = GGS_bool (true, true) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_entity) ;
  GGS_lstring  var_cas_entityName ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  var_cas_entityName.defineAttribute (_inLexique.tokenString, _inLexique) ;
  var_cas_ioMapAndEntityUniqueMap.method_insertKey (_inLexique, var_cas_entityName SOURCE_FILE_AT_LINE (251)) ;
  GGS_entityPropertyMap  var_cas_allPropertyMap ;
  GGS_lstring  var_cas_superEntity ;
  switch (select_metamodel_parser_2 (_inLexique)) {
    case 1 : {
      var_cas_superEntity = GGS_lstring::constructor_new (_inLexique, GGS_string (true, ""), GGS_location (_inLexique) COMMA_HERE) ;
      var_cas_allPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
      var_cas_superEntity.defineAttribute (_inLexique.tokenString, _inLexique) ;
      GGS_entityPropertyMap  var_cas_9283 ;
      GGS_bool var_cas_9292 ;
      GGS_lstring  var_cas_9323 ;
      if (var_cas_ioEntityMap.isBuilt ()) {
        var_cas_ioEntityMap (HERE)->method_searchKey (_inLexique, var_cas_superEntity, var_cas_9283, var_cas_9292, var_cas_allPropertyMap, var_cas_9323 SOURCE_FILE_AT_LINE (262)) ;
      }
      } break ;
    default :
      break ;
  }
  GGS_entityPropertyMap  var_cas_entityPropertyMap ;
  var_cas_entityPropertyMap = GGS_entityPropertyMap::constructor_emptyMap (_inLexique COMMA_HERE) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_3 (_inLexique)) {
        case 2 : {
          GGS_lstring  var_cas_propertyTypeName ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          var_cas_propertyTypeName.defineAttribute (_inLexique.tokenString, _inLexique) ;
          GGS_metamodelPropertyKind var_cas_k ;
          GGS_lstring  var_cas_attributeName ;
          switch (select_metamodel_parser_4 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              if ((var_cas_ioPrimitiveTypeAttributeNameSet.reader_hasKey (_inLexique, var_cas_propertyTypeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (282)) SOURCE_FILE_AT_LINE (282))).isBuiltAndTrue ()) {
                  var_cas_propertyTypeName.reader_location (_inLexique COMMA_HERE).signalGGSSemanticError (_inLexique, ((((GGS_string (true, "the '@")) + (var_cas_propertyTypeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (283))))) + (GGS_string (true, "' is not an entity name, but a predefined type name"))) SOURCE_FILE_AT_LINE (284)) ;
              }
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttribute (_inLexique.tokenString, _inLexique) ;
              var_cas_k = GGS_metamodelPropertyKind::constructor_multipleReferenceProperty (_inLexique COMMA_HERE) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              var_cas_attributeName.defineAttribute (_inLexique.tokenString, _inLexique) ;
              if ((var_cas_ioPrimitiveTypeAttributeNameSet.reader_hasKey (_inLexique, var_cas_propertyTypeName.reader_value (_inLexique SOURCE_FILE_AT_LINE (291)) SOURCE_FILE_AT_LINE (291))).isBuiltAndTrue ()) {
                var_cas_k = GGS_metamodelPropertyKind::constructor_attributeProperty (_inLexique COMMA_HERE) ;
              }else{
                var_cas_k = GGS_metamodelPropertyKind::constructor_singleReferenceProperty (_inLexique COMMA_HERE) ;
              }
              } break ;
            default :
              break ;
          }
          var_cas_entityPropertyMap.method_insertKey (_inLexique, var_cas_attributeName, var_cas_k, var_cas_propertyTypeName SOURCE_FILE_AT_LINE (299)) ;
          var_cas_allPropertyMap.method_insertKey (_inLexique, var_cas_attributeName, var_cas_k, var_cas_propertyTypeName SOURCE_FILE_AT_LINE (300)) ;
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
  var_cas_ioEntityMap.method_insertKey (_inLexique, var_cas_entityName, var_cas_allPropertyMap, var_cas_isAbstract, var_cas_entityPropertyMap, var_cas_superEntity SOURCE_FILE_AT_LINE (305)) ;
}

//---------------------------------------------------------------------------*

void metamodel_parser::
pr_entity_declaration_metamodel_parser_234_26_parse (galgas_scanner & _inLexique) {
  switch (select_metamodel_parser_1 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_abstract) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_entity) ;
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
  switch (select_metamodel_parser_2 (_inLexique)) {
    case 1 : {
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_extends) ;
      _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7B) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_metamodel_parser_3 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_type_5Fname) ;
          switch (select_metamodel_parser_4 (_inLexique)) {
            case 1 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5B) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__5D) ;
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            case 2 : {
              _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1_identifier) ;
              } break ;
            default :
              break ;
          }
          _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__3B) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  _inLexique.acceptTerminal (galgas_scanner::galgas_scanner_1__7D) ;
}

//---------------------------------------------------------------------------*

