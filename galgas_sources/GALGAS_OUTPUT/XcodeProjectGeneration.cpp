//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'XcodeProjectGeneration.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       march 6th, 2009, at 14h9'31"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "XcodeProjectGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "XcodeProjectGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_BDD_group"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD_Descriptor") COMMA_SOURCE_FILE_AT_LINE (15)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD_Set1") COMMA_SOURCE_FILE_AT_LINE (16)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD_Set2") COMMA_SOURCE_FILE_AT_LINE (17)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD_Set3") COMMA_SOURCE_FILE_AT_LINE (18)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD") COMMA_SOURCE_FILE_AT_LINE (19)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_Display_BDD") COMMA_SOURCE_FILE_AT_LINE (20)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (22)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_BDD_source_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_source_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_source_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_BDD_Descriptor.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_BDD_Set1.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_BDD_Set2.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_BDD_Set3.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_BDD.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_Display_BDD.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (43)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_source_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "getGALGAS_source_file_list"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGALGAS_source_file_list (C_Compiler &,
                                GGS_stringlist  & var_cas_out_cpp_and_h_fileList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getGALGAS_source_file_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_out_cpp_and_h_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "PM_C_Array")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "PM_C_Dictionary")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "PM_C_Object")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_listmap")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_map")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_list")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_sortedlist")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_mapindex")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_domain")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_class")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "C_GGS_Object")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "C_galgas_CLI_Options")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "C_Compiler")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "C_Lexique")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "C_galgas_io")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "predefined_types")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_binaryset")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_stringset")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_filewrapper")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lsint64")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_luint64")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_sint64")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_uint64")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_double")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_sint")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_bool")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_char")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_string")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_uint")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_location")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_ldouble")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lsint")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lbool")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lchar")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lstring")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_luint")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getGALGAS_source_file_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_GALGAS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (_inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (101)) ;
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_3789 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_3789 = NULL ;
    while (((operand_3789 = enumerator_3789.nextObject ()))) {
      macroValidPointer (operand_3789) ;
      ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  operand_3789->mValue COMMA_SOURCE_FILE_AT_LINE (104)) ;
    }
  }
  var_cas_fileList._addAssign_operation (GGS_string (true, "galgas_header.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "PP_GalgasPrefix.pch")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (109)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_GALGAS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (_inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (123)) ;
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_4433 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_4433 = NULL ;
    while (((operand_4433 = enumerator_4433.nextObject ()))) {
      macroValidPointer (operand_4433) ;
      var_cas_fileList._addAssign_operation ((operand_4433->mValue)._operator_concat (GGS_string (true, ".cpp"))) ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (129)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COCOA_GALGAS_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_GALGAS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_m_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "NSSplitViewExtensions") COMMA_SOURCE_FILE_AT_LINE (143)) ;
  ::routine_append_mm_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "OC_GGS_BuildWindowController") COMMA_SOURCE_FILE_AT_LINE (144)) ;
  ::routine_append_mm_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "OC_GGS_Document") COMMA_SOURCE_FILE_AT_LINE (145)) ;
  ::routine_append_mm_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "OC_GGS_PreferencesController") COMMA_SOURCE_FILE_AT_LINE (146)) ;
  ::routine_append_mm_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "OC_GGS_RulerView") COMMA_SOURCE_FILE_AT_LINE (147)) ;
  ::routine_append_mm_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "OC_GGS_TextView") COMMA_SOURCE_FILE_AT_LINE (148)) ;
  ::routine_append_mm_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "OC_GGS_DelegateForSyntaxColoring") COMMA_SOURCE_FILE_AT_LINE (149)) ;
  ::routine_append_mm_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "OC_GGS_BuildResultTextView") COMMA_SOURCE_FILE_AT_LINE (150)) ;
  ::routine_append_mm_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_SourceTextForCocoa") COMMA_SOURCE_FILE_AT_LINE (151)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "I_Action.tiff")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "I_SaveAs.tiff")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "I_Stop.tiff")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "I_Window.png")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "F_CocoaWrapperForGalgas.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "PP_CocoaGalgasPrefix.pch")) ;
  ::routine_enter_nib_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string (true, "English.lproj"),  GGS_string (true, "MainMenu.nib"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (159)) ;
  ::routine_enter_nib_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string (true, "English.lproj"),  GGS_string (true, "OC_GGS_Document.nib"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (165)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (172)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "build_LIBPM_COCOA_UTILITIES_group"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_UTILITIES_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "main.m")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (188)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_FILES_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_HTML_FileWrite") COMMA_SOURCE_FILE_AT_LINE (202)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_TextFileWrite") COMMA_SOURCE_FILE_AT_LINE (203)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (205)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_FILES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_HTML_FileWrite.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_TextFileWrite.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (222)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_group"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_builtin_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (236)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "AC_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (237)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_CLI_OptionGroup") COMMA_SOURCE_FILE_AT_LINE (238)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "F_Analyze_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (239)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "F_main.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "mainForLIBPM.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (243)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_builtin_CLI_Options.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "AC_CLI_Options.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_CLI_OptionGroup.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "F_Analyze_CLI_Options.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "F_main.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (263)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COLLECTIONS_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COLLECTIONS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COLLECTIONS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_AVL_TreeForCollision.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_Array.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_Array2.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_BlockBinaryTreeForCollision.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_Block_AVL_TreeForCollision.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_FixedSizeArray.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_HashMap.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_LinearListForCollision.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_UniqueArray.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_UniqueArray2.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_UniqueFixedSizeArray.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TF_AVL_Tree.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (290)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COLLECTIONS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_CACHE_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_CACHE_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_CACHE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_PrimeCache2") COMMA_SOURCE_FILE_AT_LINE (304)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_PrimeCache3") COMMA_SOURCE_FILE_AT_LINE (305)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_prime_cache2.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_prime_cache3.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_prime_cache4.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (310)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_CACHE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_CACHE_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_CACHE_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_CACHE_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_PrimeCache2.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_PrimeCache3.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (328)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_CACHE_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_PROJECT_RESOURCES_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_PROJECT_RESOURCES_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringlist   var_cas_inIconFiles,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_PROJECT_RESOURCES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = var_cas_inIconFiles ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "Info.plist")) ;
  ::routine_enter_nib_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string (true, "English.lproj"),  GGS_string (true, "Credits.rtf"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (345)) ;
  ::routine_enter_nib_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string (true, "English.lproj"),  GGS_string (true, "InfoPlist.strings"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (351)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (358)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_PROJECT_RESOURCES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_UNICODE_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UNICODE_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UNICODE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_UnicodeString") COMMA_SOURCE_FILE_AT_LINE (372)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "unicode_character") COMMA_SOURCE_FILE_AT_LINE (373)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "unicode_string_routines") COMMA_SOURCE_FILE_AT_LINE (374)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "cUnicodeData.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "string_class_template.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (378)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UNICODE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_UNICODE_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UNICODE_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UNICODE_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_UnicodeString.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "unicode_character.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "unicode_string_routines.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (396)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UNICODE_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "build_LIBPM_UTILITIES_group"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "md5") COMMA_SOURCE_FILE_AT_LINE (410)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_Exception") COMMA_SOURCE_FILE_AT_LINE (411)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "F_GetPrime") COMMA_SOURCE_FILE_AT_LINE (412)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_String") COMMA_SOURCE_FILE_AT_LINE (413)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "F_DisplayException") COMMA_SOURCE_FILE_AT_LINE (414)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "MF_Assert") COMMA_SOURCE_FILE_AT_LINE (415)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "MF_MemoryControl") COMMA_SOURCE_FILE_AT_LINE (416)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "M_SourceLocation.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TF_inf.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TF_sup.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TF_Swap.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (422)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_UTILITIES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "md5.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_Exception.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_String.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "F_GetPrime.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "F_DisplayException.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "MF_Assert.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "MF_MemoryControl.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (444)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_STREAMS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "AC_OutputUnicodeStream") COMMA_SOURCE_FILE_AT_LINE (458)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_ErrorOut") COMMA_SOURCE_FILE_AT_LINE (459)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "AC_OutputStream") COMMA_SOURCE_FILE_AT_LINE (460)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_ConsoleOut") COMMA_SOURCE_FILE_AT_LINE (461)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (463)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_STREAMS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "AC_OutputUnicodeStream.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_ErrorOut.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "AC_OutputStream.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_ConsoleOut.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (482)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_TIME_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_DateTime") COMMA_SOURCE_FILE_AT_LINE (496)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_Timer") COMMA_SOURCE_FILE_AT_LINE (497)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (499)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_TIME_files_for_sources_build_phase" *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_DateTime.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_Timer.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (516)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_TINYXML_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TINYXML_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TINYXML_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "tinyxml") COMMA_SOURCE_FILE_AT_LINE (530)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinystr.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinyxmlerror.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinyxmlparser.cpp")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (535)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TINYXML_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_TINYXML_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TINYXML_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TINYXML_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinyxml.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinystr.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinyxmlerror.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinyxmlparser.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (554)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TINYXML_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_GENERATED_BY_GALGAS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_17426 (var_cas_inComponentNameSet, true) ;
    while (enumerator_17426.hc ()) {
      var_cas_fileList._addAssign_operation ((enumerator_17426._key (HERE))._operator_concat (GGS_string (true, ".cpp"))) ;
      enumerator_17426.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (573)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "build_GENERATED_BY_GALGAS_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                const GGS_stringset   var_cas_inGUISourceNameSet,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_17968 (var_cas_inComponentNameSet, true) ;
    while (enumerator_17968.hc ()) {
      ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  enumerator_17968._key (HERE) COMMA_SOURCE_FILE_AT_LINE (590)) ;
      enumerator_17968.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_18057 (var_cas_inGUISourceNameSet, true) ;
    while (enumerator_18057.hc ()) {
      var_cas_fileList._addAssign_operation ((enumerator_18057._key (HERE))._operator_concat (GGS_string (true, ".mm"))) ;
      enumerator_18057.next () ;
    }
  }
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (596)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_HAND_CODED_source_files_for_sources_tool_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_source_files_for_sources_tool_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_18577 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_18577.hc ()) {
      GGS_string var_cas_extension ;
      var_cas_extension = enumerator_18577._key (HERE).reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (612)) ;
      if ((((((var_cas_extension)._operator_isEqual (GGS_string (true, "cpp")))._operator_or ((var_cas_extension)._operator_isEqual (GGS_string (true, "c"))))._operator_or ((var_cas_extension)._operator_isEqual (GGS_string (true, "m"))))._operator_or ((var_cas_extension)._operator_isEqual (GGS_string (true, "mm")))).isBuiltAndTrue ()) {
        var_cas_fileList._addAssign_operation (enumerator_18577._key (HERE)) ;
      }
      enumerator_18577.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (618)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_source_files_for_sources_tool_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_HAND_CODED_source_files_for_sources_cocoa_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_19266 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_19266.hc ()) {
      GGS_string var_cas_extension ;
      var_cas_extension = enumerator_19266._key (HERE).reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (634)) ;
      if ((((var_cas_extension)._operator_isNotEqual (GGS_string (true, "cpp")))._operator_and ((var_cas_extension)._operator_isNotEqual (GGS_string (true, "c")))).isBuiltAndTrue ()) {
        var_cas_fileList._addAssign_operation (enumerator_19266._key (HERE)) ;
      }
      enumerator_19266.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (640)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_HAND_CODED_SOURCES_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_SOURCES_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_SOURCES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_19886 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_19886.hc ()) {
      GGS_string var_cas_extension ;
      var_cas_extension = enumerator_19886._key (HERE).reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (656)) ;
      if ((((((var_cas_extension)._operator_isEqual (GGS_string (true, "cpp")))._operator_or ((var_cas_extension)._operator_isEqual (GGS_string (true, "c"))))._operator_or ((var_cas_extension)._operator_isEqual (GGS_string (true, "m"))))._operator_or ((var_cas_extension)._operator_isEqual (GGS_string (true, "mm")))).isBuiltAndTrue ()) {
        var_cas_fileList._addAssign_operation (enumerator_19886._key (HERE)) ;
      }
      enumerator_19886.next () ;
    }
  }
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (662)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_SOURCES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_FRAMEWORKS_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_FRAMEWORKS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup,
                                const GGS_stringset   var_cas_inExternSourceForTool,
                                const GGS_stringset   var_cas_inExternSourceForApp COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_FRAMEWORKS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringset  var_cas_fileSet ;
  var_cas_fileSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_fileSet._addAssign_operation (GGS_string (true, "AppKit.framework")) ;
  var_cas_fileSet._addAssign_operation (GGS_string (true, "Cocoa.framework")) ;
  {
    GGS_stringset::cEnumerator enumerator_20626 (var_cas_inExternSourceForTool, true) ;
    while (enumerator_20626.hc ()) {
      if (((enumerator_20626._key (HERE).reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (681)))._operator_isEqual (GGS_string (true, "framework"))).isBuiltAndTrue ()) {
        var_cas_fileSet._addAssign_operation (enumerator_20626._key (HERE)) ;
      }
      enumerator_20626.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_20760 (var_cas_inExternSourceForApp, true) ;
    while (enumerator_20760.hc ()) {
      if (((enumerator_20760._key (HERE).reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (686)))._operator_isEqual (GGS_string (true, "framework"))).isBuiltAndTrue ()) {
        var_cas_fileSet._addAssign_operation (enumerator_20760._key (HERE)) ;
      }
      enumerator_20760.next () ;
    }
  }
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileSet.reader_stringList (_inLexique COMMA_SOURCE_FILE_AT_LINE (693)),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (691)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_FRAMEWORKS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of routine "build_FRAMEWORKS_for_frameworks_build_phase"   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_FRAMEWORKS_for_frameworks_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternFileSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_FRAMEWORKS_for_frameworks_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_21318 (var_cas_inExternFileSet, true) ;
    while (enumerator_21318.hc ()) {
      if (((enumerator_21318._key (HERE).reader_pathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (707)))._operator_isEqual (GGS_string (true, "framework"))).isBuiltAndTrue ()) {
        var_cas_fileList._addAssign_operation (enumerator_21318._key (HERE)) ;
      }
      enumerator_21318.next () ;
    }
  }
  ::routine_enter_files_for_frameworks_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (712)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_FRAMEWORKS_for_frameworks_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of routine "build_RESOURCES_for_resources_build_phase"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_RESOURCES_for_resources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_stringlist   var_cas_inIconFiles,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_RESOURCES_for_resources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = var_cas_inIconFiles ;
  var_cas_fileList._addAssign_operation (var_cas_inProjectName) ;
  var_cas_fileList._addAssign_operation ((var_cas_inProjectName)._operator_concat (GGS_string (true, "_debug"))) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "I_Action.tiff")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "I_SaveAs.tiff")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "I_Stop.tiff")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "I_Window.png")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "MainMenu.nib")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "OC_GGS_Document.nib")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "InfoPlist.strings")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "Credits.rtf")) ;
  ::routine_enter_files_for_frameworks_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (739)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_RESOURCES_for_resources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_COCOA_APP_files_for_sources_build_phase"  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_COCOA_APP_files_for_sources_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inGUISourceNameSet,
                                const GGS_stringset   var_cas_inScannerSourceNameSet,
                                const GGS_stringset   var_cas_inOptionSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_COCOA_APP_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "main.m")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "NSSplitViewExtensions.m")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "OC_GGS_BuildWindowController.mm")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "OC_GGS_Document.mm")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "OC_GGS_PreferencesController.mm")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "OC_GGS_RulerView.mm")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "OC_GGS_TextView.mm")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "OC_GGS_DelegateForSyntaxColoring.mm")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "OC_GGS_BuildResultTextView.mm")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_SourceTextForCocoa.mm")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_builtin_CLI_Options.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "AC_CLI_Options.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_CLI_OptionGroup.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_TextFileWrite.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_Lexique.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_galgas_io.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_galgas_CLI_Options.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_GGS_Object.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "AC_galgas_list.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_string.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_lstring.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_location.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_uint.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_uint64.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_luint.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_luint64.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_sint.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_sint64.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_lsint.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_lsint64.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_bool.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_lbool.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_double.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_ldouble.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_char.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "GGS_lchar.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "predefined_types.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_ErrorOut.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "AC_OutputStream.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "AC_OutputUnicodeStream.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_ConsoleOut.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_DateTime.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_UnicodeString.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "unicode_character.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "unicode_string_routines.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_Exception.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "C_String.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "md5.cpp")) ;
  {
    GGS_stringset::cEnumerator enumerator_24749 (var_cas_inGUISourceNameSet, true) ;
    while (enumerator_24749.hc ()) {
      var_cas_fileList._addAssign_operation ((enumerator_24749._key (HERE))._operator_concat (GGS_string (true, ".mm"))) ;
      enumerator_24749.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_24832 (var_cas_inScannerSourceNameSet, true) ;
    while (enumerator_24832.hc ()) {
      var_cas_fileList._addAssign_operation ((enumerator_24832._key (HERE))._operator_concat (GGS_string (true, ".cpp"))) ;
      enumerator_24832.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_24915 (var_cas_inOptionSourceNameSet, true) ;
    while (enumerator_24915.hc ()) {
      var_cas_fileList._addAssign_operation ((enumerator_24915._key (HERE))._operator_concat (GGS_string (true, ".cpp"))) ;
      enumerator_24915.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (822)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_COCOA_APP_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "generateXcodeProject"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateXcodeProject (C_Compiler & _inLexique,
                                const GGS_stringset   var_cas_inExternSourceNameSet_tool,
                                const GGS_stringset   var_cas_inGUISourceNameSet_tool,
                                const GGS_stringset   var_cas_inScannerSourceNameSet_tool,
                                const GGS_stringset   var_cas_inOptionSourceNameSet_tool,
                                const GGS_stringset   var_cas_inSemanticsSourceSet_tool,
                                const GGS_stringset   var_cas_inSyntaxSourceSet_tool,
                                const GGS_stringset   var_cas_inGrammarSourceSet_tool,
                                const GGS_stringset   var_cas_inProgramSourceSet_tool,
                                const GGS_stringset   var_cas_inExternSourceNameSet_app,
                                const GGS_stringset   var_cas_inGUISourceNameSet_app,
                                const GGS_stringset   var_cas_inScannerSourceNameSet_app,
                                const GGS_stringset   var_cas_inOptionSourceNameSet_app,
                                const GGS_stringset   var_cas_inSemanticsSourceSet_app,
                                const GGS_stringset   var_cas_inSyntaxSourceSet_app,
                                const GGS_stringset   var_cas_inGrammarSourceSet_app,
                                const GGS_stringset   var_cas_inProgramSourceSet_app,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_string  var_cas_in_xcodeproj_filePath,
                                const GGS_stringlist   var_cas_inIconFiles COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateXcodeProject at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_XcodeProjectDescription var_cas_XcodeProjectDescription ;
  ::routine_initXcodeProjectDescription (_inLexique,  var_cas_XcodeProjectDescription COMMA_SOURCE_FILE_AT_LINE (853)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_HAND_CODED_SOURCES_group ;
  var_cas_fileListOf_HAND_CODED_SOURCES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  GGS_stringset  var_cas_fileSet ;
  var_cas_fileSet = (var_cas_inExternSourceNameSet_tool)._operator_or (var_cas_inExternSourceNameSet_app) ;
  var_cas_fileSet.minusAssign_operation (GGS_string (true, "AppKit.framework")) ;
  var_cas_fileSet.minusAssign_operation (GGS_string (true, "Cocoa.framework")) ;
  ::routine_build_HAND_CODED_SOURCES_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileSet,  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (860)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Hand Coded Sources"),  GGS_string (true, "../hand_coded_sources"),  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (866)) ;
  GGS_stringset  var_cas_componentNameSet_tool ;
  var_cas_componentNameSet_tool = (((((var_cas_inScannerSourceNameSet_tool)._operator_or (var_cas_inOptionSourceNameSet_tool))._operator_or (var_cas_inSemanticsSourceSet_tool))._operator_or (var_cas_inSyntaxSourceSet_tool))._operator_or (var_cas_inGrammarSourceSet_tool))._operator_or (var_cas_inProgramSourceSet_tool) ;
  GGS_stringset  var_cas_componentNameSet_app ;
  var_cas_componentNameSet_app = (((((var_cas_inScannerSourceNameSet_app)._operator_or (var_cas_inOptionSourceNameSet_app))._operator_or (var_cas_inSemanticsSourceSet_app))._operator_or (var_cas_inSyntaxSourceSet_app))._operator_or (var_cas_inGrammarSourceSet_app))._operator_or (var_cas_inProgramSourceSet_app) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_GENERATED_BY_GALGAS_group ;
  var_cas_fileListOf_GENERATED_BY_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_GENERATED_BY_GALGAS_group (_inLexique,  var_cas_XcodeProjectDescription,  (var_cas_componentNameSet_tool)._operator_or (var_cas_componentNameSet_app),  (var_cas_inGUISourceNameSet_tool)._operator_or (var_cas_inGUISourceNameSet_app),  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (884)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Generated by GALGAS"),  GGS_string (true, "../galgas_sources/GALGAS_OUTPUT"),  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (891)) ;
  GGS_XcodeObjectReferenceList  var_cas_libpmGroupChildrenList ;
  var_cas_libpmGroupChildrenList = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_BDD_group ;
  var_cas_fileListOf_LIBPM_BDD_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_BDD_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_BDD_group COMMA_SOURCE_FILE_AT_LINE (901)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Binary Decision Diagrams"),  GGS_string (true, "bdd"),  var_cas_fileListOf_LIBPM_BDD_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (906)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_CACHE_group ;
  var_cas_fileListOf_LIBPM_CACHE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_CACHE_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_CACHE_group COMMA_SOURCE_FILE_AT_LINE (915)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Caches"),  GGS_string (true, "cache"),  var_cas_fileListOf_LIBPM_CACHE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (920)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group ;
  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_GALGAS_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (929)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Cocoa GALGAS"),  GGS_string (true, "cocoa_galgas"),  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (933)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group ;
  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_UTILITIES_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (942)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Cocoa Utilities"),  GGS_string (true, "cocoa_utilities"),  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (946)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COLLECTIONS_group ;
  var_cas_fileListOf_LIBPM_COLLECTIONS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COLLECTIONS_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COLLECTIONS_group COMMA_SOURCE_FILE_AT_LINE (955)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Collections"),  GGS_string (true, "collections"),  var_cas_fileListOf_LIBPM_COLLECTIONS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (960)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group ;
  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group COMMA_SOURCE_FILE_AT_LINE (969)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Command Line Interface"),  GGS_string (true, "command_line_interface"),  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (974)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_FILE_group ;
  var_cas_fileListOf_LIBPM_FILE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_FILES_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_FILE_group COMMA_SOURCE_FILE_AT_LINE (983)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Files"),  GGS_string (true, "files"),  var_cas_fileListOf_LIBPM_FILE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (988)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_GALGAS_group ;
  var_cas_fileListOf_LIBPM_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_GALGAS_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (997)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "GALGAS"),  GGS_string (true, "galgas"),  var_cas_fileListOf_LIBPM_GALGAS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1002)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_STREAMS_group ;
  var_cas_fileListOf_LIBPM_STREAMS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_STREAMS_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_STREAMS_group COMMA_SOURCE_FILE_AT_LINE (1011)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Streams"),  GGS_string (true, "streams"),  var_cas_fileListOf_LIBPM_STREAMS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1016)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_TIME_group ;
  var_cas_fileListOf_LIBPM_TIME_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_TIME_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_TIME_group COMMA_SOURCE_FILE_AT_LINE (1025)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Time"),  GGS_string (true, "time"),  var_cas_fileListOf_LIBPM_TIME_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1030)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_TINYXML_group ;
  var_cas_fileListOf_LIBPM_TINYXML_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_TINYXML_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_TINYXML_group COMMA_SOURCE_FILE_AT_LINE (1039)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Tiny XML"),  GGS_string (true, "tiny_xml"),  var_cas_fileListOf_LIBPM_TINYXML_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1044)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_UTILITIES_group ;
  var_cas_fileListOf_LIBPM_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_UTILITIES_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (1053)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Utilities"),  GGS_string (true, "utilities"),  var_cas_fileListOf_LIBPM_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1058)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_UNICODE_group ;
  var_cas_fileListOf_LIBPM_UNICODE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_UNICODE_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_UNICODE_group COMMA_SOURCE_FILE_AT_LINE (1067)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Unicode"),  GGS_string (true, "unicode"),  var_cas_fileListOf_LIBPM_UNICODE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1072)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "LIBPM"),  GGS_string (true, "../../libpm"),  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1080)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_PROJECT_RESOURCES_group ;
  var_cas_fileListOf_PROJECT_RESOURCES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_PROJECT_RESOURCES_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inIconFiles,  var_cas_fileListOf_PROJECT_RESOURCES_group COMMA_SOURCE_FILE_AT_LINE (1088)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Project Resources"),  GGS_string (true, ""),  var_cas_fileListOf_PROJECT_RESOURCES_group COMMA_SOURCE_FILE_AT_LINE (1093)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_FRAMEWORKS_group ;
  var_cas_fileListOf_FRAMEWORKS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_FRAMEWORKS_group,  var_cas_inExternSourceNameSet_tool,  var_cas_inExternSourceNameSet_app COMMA_SOURCE_FILE_AT_LINE (1101)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Frameworks"),  GGS_string (true, "/System/Library/Frameworks"),  var_cas_fileListOf_FRAMEWORKS_group COMMA_SOURCE_FILE_AT_LINE (1108)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfTool ;
  var_cas_listForSourceBuildPhaseOfTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1117)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_componentNameSet_tool,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1123)) ;
  ::routine_build_LIBPM_BDD_source_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1129)) ;
  ::routine_build_LIBPM_CACHE_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1134)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1139)) ;
  ::routine_build_LIBPM_FILES_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1144)) ;
  ::routine_build_LIBPM_GALGAS_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1149)) ;
  ::routine_build_LIBPM_STREAMS_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1154)) ;
  ::routine_build_LIBPM_TIME_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1159)) ;
  ::routine_build_LIBPM_TINYXML_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1164)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1169)) ;
  ::routine_build_LIBPM_UNICODE_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1174)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfTool ;
  var_cas_listForFrameworksBuildPhaseOfTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForFrameworksBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1180)) ;
  GGS_stringlist  var_cas_toolTargetSettings ;
  var_cas_toolTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_toolTargetSettings._addAssign_operation (GGS_string (true, "GCC_OPTIMIZATION_LEVEL = 2;")) ;
  GGS_string var_cas_toolTargetKey ;
  ::routine_add_tool_target (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inProjectName,  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter (_inLexique COMMA_SOURCE_FILE_AT_LINE (1193)))._operator_concat (GGS_string (true, " Tool")),  var_cas_toolTargetSettings,  GGS_string (true, "../../libpm/galgas/PP_GalgasPrefix.pch"),  var_cas_listForSourceBuildPhaseOfTool,  var_cas_listForFrameworksBuildPhaseOfTool,  GGS_stringlist ::constructor_emptyList (),  var_cas_toolTargetKey COMMA_SOURCE_FILE_AT_LINE (1190)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfDebugTool ;
  var_cas_listForSourceBuildPhaseOfDebugTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1204)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_componentNameSet_tool,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1210)) ;
  ::routine_build_LIBPM_BDD_source_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1216)) ;
  ::routine_build_LIBPM_CACHE_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1221)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1226)) ;
  ::routine_build_LIBPM_FILES_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1231)) ;
  ::routine_build_LIBPM_GALGAS_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1236)) ;
  ::routine_build_LIBPM_STREAMS_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1241)) ;
  ::routine_build_LIBPM_TIME_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1246)) ;
  ::routine_build_LIBPM_TINYXML_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1251)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1256)) ;
  ::routine_build_LIBPM_UNICODE_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1261)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfToolDebug ;
  var_cas_listForFrameworksBuildPhaseOfToolDebug = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForFrameworksBuildPhaseOfToolDebug COMMA_SOURCE_FILE_AT_LINE (1267)) ;
  GGS_stringlist  var_cas_debugToolTargetSettings ;
  var_cas_debugToolTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_debugToolTargetSettings._addAssign_operation (GGS_string (true, "GCC_OPTIMIZATION_LEVEL = 0;")) ;
  var_cas_debugToolTargetSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNINITIALIZED_AUTOS = NO;")) ;
  GGS_string var_cas_toolDebugTargetKey ;
  ::routine_add_tool_target (_inLexique,  var_cas_XcodeProjectDescription,  (var_cas_inProjectName)._operator_concat (GGS_string (true, "_debug")),  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter (_inLexique COMMA_SOURCE_FILE_AT_LINE (1281)))._operator_concat (GGS_string (true, " Tool Debug")),  var_cas_debugToolTargetSettings,  GGS_string (true, ""),  var_cas_listForSourceBuildPhaseOfDebugTool,  var_cas_listForFrameworksBuildPhaseOfToolDebug,  GGS_stringlist ::constructor_emptyList (),  var_cas_toolDebugTargetKey COMMA_SOURCE_FILE_AT_LINE (1278)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfCocoaApp ;
  var_cas_listForSourceBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_COCOA_APP_files_for_sources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inGUISourceNameSet_app,  var_cas_inScannerSourceNameSet_app,  var_cas_inOptionSourceNameSet_app,  var_cas_listForSourceBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1292)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfCocoaApp ;
  var_cas_listForFrameworksBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  var_cas_fileSet = var_cas_inExternSourceNameSet_app ;
  var_cas_fileSet._addAssign_operation (GGS_string (true, "AppKit.framework")) ;
  var_cas_fileSet._addAssign_operation (GGS_string (true, "Cocoa.framework")) ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileSet,  var_cas_listForFrameworksBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1304)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForResourcesBuildPhaseOfCocoaApp ;
  var_cas_listForResourcesBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_RESOURCES_for_resources_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inProjectName,  var_cas_inIconFiles,  var_cas_listForResourcesBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1311)) ;
  ::routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_app,  var_cas_listForResourcesBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1318)) ;
  GGS_stringlist  var_cas_directDependencyList ;
  var_cas_directDependencyList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_directDependencyList._addAssign_operation (var_cas_toolTargetKey) ;
  var_cas_directDependencyList._addAssign_operation (var_cas_toolDebugTargetKey) ;
  GGS_stringlist  var_cas_cocoaAppTargetSettings ;
  var_cas_cocoaAppTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cocoaAppTargetSettings._addAssign_operation (GGS_string (true, "GCC_OPTIMIZATION_LEVEL = 2;")) ;
  GGS_string automatic_var_0 ;
  ::routine_add_app_target (_inLexique,  var_cas_XcodeProjectDescription,  (GGS_string (true, "Cocoa"))._operator_concat (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter (_inLexique COMMA_SOURCE_FILE_AT_LINE (1333))),  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter (_inLexique COMMA_SOURCE_FILE_AT_LINE (1334)))._operator_concat (GGS_string (true, " Cocoa")),  var_cas_cocoaAppTargetSettings,  GGS_string (true, "../../libpm/cocoa_galgas/PP_CocoaGalgasPrefix.pch"),  GGS_string (true, "Info.plist"),  var_cas_listForSourceBuildPhaseOfCocoaApp,  var_cas_listForFrameworksBuildPhaseOfCocoaApp,  var_cas_listForResourcesBuildPhaseOfCocoaApp,  var_cas_directDependencyList,  automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (1331)) ;
  GGS_stringlist  var_cas_pathes ;
  var_cas_pathes = GGS_stringlist ::constructor_emptyList () ;
  var_cas_pathes._addAssign_operation (GGS_string (true, "../galgas_sources/GALGAS_OUTPUT")) ;
  var_cas_pathes._addAssign_operation (GGS_string (true, "../../libpm")) ;
  var_cas_pathes._addAssign_operation (GGS_string (true, "../hand_coded_sources/**")) ;
  GGS_stringlist  var_cas_projectDefaultSettings ;
  ::routine_enterProjectDefaultSettings (_inLexique,  var_cas_pathes,  var_cas_projectDefaultSettings COMMA_SOURCE_FILE_AT_LINE (1350)) ;
  ::routine_generateXCodeFile (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_in_xcodeproj_filePath,  var_cas_projectDefaultSettings COMMA_SOURCE_FILE_AT_LINE (1356)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateXcodeProject\n") ;
  #endif
}

//---------------------------------------------------------------------------*

