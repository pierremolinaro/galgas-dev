//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'XcodeProjectGeneration.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    september 24th, 2008, at 16h2'28"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "XcodeProjectGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "XcodeProjectGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_Xcode_PBXFileReference_abstract'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_abstract::
cPtr_Xcode_PBXFileReference_abstract (LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
_mOnce671isComputed (false),
key () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_abstract * GGS_Xcode_PBXFileReference_abstract::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_abstract *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_abstract *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_abstract::computeOnce671 (C_Compiler & _inLexique) const {
  _mOnce671isComputed = true ;
  key._drop () ;
  key = GGS_uint ::constructor_sequenceNumber (_inLexique COMMA_HERE).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (13)).reader_md5 (_inLexique COMMA_SOURCE_FILE_AT_LINE (13)).reader_rightSubString (_inLexique, GGS_uint (true, 24U) COMMA_SOURCE_FILE_AT_LINE (13)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_PBXFileReference_abstract::reader_key (C_Compiler & _inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce671isComputed) {
    computeOnce671 (_inLexique) ;
  }
  return key ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_abstract::
appendForDescription (C_Compiler & /* _inLexique */,
                      C_String & ioString,
                      const sint32 /* inIndentation */
                      COMMA_UNUSED_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_abstract:" ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_abstract::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_abstract::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_abstract (& typeid (cPtr_Xcode_PBXFileReference_abstract), NULL
, "") ;
//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_abstract::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_abstract ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_Xcode_PBXFileReference_abstract'             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_abstract::
GGS_Xcode_PBXFileReference_abstract (cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_abstract::
GGS_Xcode_PBXFileReference_abstract (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- _castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_abstract GGS_Xcode_PBXFileReference_abstract::
_castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_abstract _result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_abstract *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_abstract) == typeid (*inPointer)) ;
    if (ok) {
      _result = GGS_Xcode_PBXFileReference_abstract (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_abstract),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return _result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFileReference_abstract::
reader_key (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_abstract *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXFileReference_abstract *) mPointer)->reader_key (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_abstract::actualTypeName (void) const {
  return "Xcode_PBXFileReference_abstract" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_PBXFileReference_abstract::_galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_abstract ("Xcode_PBXFileReference_abstract") ;

//---------------------------------------------------------------------------*
//                                                                           *
//       class 'cPtr_Xcode_PBXFileReference_CompiledMachOExecutable'         *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
cPtr_Xcode_PBXFileReference_CompiledMachOExecutable (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (THERE),
mFileName (argument_0) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_CompiledMachOExecutable * GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_CompiledMachOExecutable * _p = dynamic_cast <const cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mFileName._operator_isEqual (_p->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
method_buildXcodeProject (C_Compiler & _inLexique,
                                GGS_string& var_cas_ioString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioString.writeString ("\t\t") ;
  var_cas_ioString._dotAssign_operation ((*this) /* self */.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (25))) ;
  var_cas_ioString.writeString (" = {isa = PBXFileReference; explicitFileType = \"compiled.mach-o.executable\"; includeInIndex = 0; path = ") ;
  var_cas_ioString._dotAssign_operation (mFileName) ;
  var_cas_ioString.writeString ("; sourceTree = BUILT_PRODUCTS_DIR; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
appendForDescription (C_Compiler & _inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_CompiledMachOExecutable:"
           << mFileName.reader_description  (_inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_CompiledMachOExecutable (& typeid (cPtr_Xcode_PBXFileReference_CompiledMachOExecutable), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;
//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_CompiledMachOExecutable ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    GALGAS class 'GGS_Xcode_PBXFileReference_CompiledMachOExecutable'      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
GGS_Xcode_PBXFileReference_CompiledMachOExecutable (cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
GGS_Xcode_PBXFileReference_CompiledMachOExecutable (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- _castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_CompiledMachOExecutable GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
_castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_CompiledMachOExecutable _result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_CompiledMachOExecutable) == typeid (*inPointer)) ;
    if (ok) {
      _result = GGS_Xcode_PBXFileReference_CompiledMachOExecutable (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_CompiledMachOExecutable),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return _result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_CompiledMachOExecutable GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_CompiledMachOExecutable result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_CompiledMachOExecutable (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
reader_mFileName (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *) mPointer)->mFileName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_CompiledMachOExecutable::actualTypeName (void) const {
  return "Xcode_PBXFileReference_CompiledMachOExecutable" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_CompiledMachOExecutable ("Xcode_PBXFileReference_CompiledMachOExecutable", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@Xcode_PBXFileReference_list'               *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXFileReference_list::
elementOf_GGS_Xcode_PBXFileReference_list (const GGS_Xcode_PBXFileReference_abstract & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mFileReference (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXFileReference_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXFileReference_list * _p = dynamic_cast <const elementOf_GGS_Xcode_PBXFileReference_list *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mFileReference._operator_isEqual (_p->mFileReference).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXFileReference_list::
appendForDescription (C_Compiler & _inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mFileReference.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   List '@Xcode_PBXFileReference_list'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
_internalAppendValues (const GGS_Xcode_PBXFileReference_abstract & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
_internalPrependValues (const GGS_Xcode_PBXFileReference_abstract & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
_addAssign_operation (const GGS_Xcode_PBXFileReference_abstract & argument_0) {
  if (_isBuilt ()&& argument_0._isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_list GGS_Xcode_PBXFileReference_list::
_operator_concat (const GGS_Xcode_PBXFileReference_list & inOperand) const {
  GGS_Xcode_PBXFileReference_list result = * this ;
  result._dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
_dotAssign_operation (const GGS_Xcode_PBXFileReference_list inOperand) {
  if (_isBuilt () && inOperand._isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXFileReference_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_PBXFileReference_abstract  p_0 = p->mFileReference ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_PBXFileReference_abstract & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (_isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * _p = firstObject () ;
    _alloc () ;
    while (_p != NULL) {
      macroValidPointer (_p) ;
      _internalAppendValues (_p->mFileReference
                                COMMA_HERE) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_list  GGS_Xcode_PBXFileReference_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXFileReference_list result ;
  result._alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_list  GGS_Xcode_PBXFileReference_list::
constructor_listWithValue (const GGS_Xcode_PBXFileReference_abstract & argument_0) {
  GGS_Xcode_PBXFileReference_list result ;
  result._alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
internalSubListWithRange (GGS_Xcode_PBXFileReference_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList._alloc () ;
  if (inCount > 0) {
    cElement * _p = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (_p) ;
      _p = _p->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (_p) ;
      ioList._addAssign_operation (_p->mFileReference) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_list GGS_Xcode_PBXFileReference_list::
reader_subListWithRange (C_Compiler & _inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXFileReference_list result ;
  if (_isBuilt () && inFirstIndex._isBuilt () && inCount._isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_list GGS_Xcode_PBXFileReference_list::
reader_subListFromIndex (C_Compiler & _inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXFileReference_list result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFileReference_list::
reader_description (C_Compiler & _inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (_inLexique, "@Xcode_PBXFileReference_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
method_first (C_Compiler & _inLexique,
              GGS_Xcode_PBXFileReference_abstract & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mFileReference ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
method_last (C_Compiler & _inLexique,
             GGS_Xcode_PBXFileReference_abstract & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mFileReference ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
modifier_popFirst (C_Compiler & _inLexique,
                 GGS_Xcode_PBXFileReference_abstract & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mFileReference ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
modifier_popLast (C_Compiler & _inLexique,
                GGS_Xcode_PBXFileReference_abstract & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mFileReference ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_abstract  GGS_Xcode_PBXFileReference_list::
reader_mFileReferenceAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXFileReference_abstract  result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mFileReference ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_list::
modifier_setMFileReferenceAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_PBXFileReference_abstract  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mFileReference = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXFileReference_abstract  & GGS_Xcode_PBXFileReference_list::cEnumerator::_mFileReference (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mFileReference ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'cPtr_Xcode_PBXSourcesBuildPhase'                   *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXSourcesBuildPhase::
cPtr_Xcode_PBXSourcesBuildPhase (const GGS_string& argument_0,
                                const GGS_stringlist & argument_1
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mNameForComment (argument_0),
mFileReferenceList (argument_1),
_mOnce1975isComputed (false),
key () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXSourcesBuildPhase * GGS_Xcode_PBXSourcesBuildPhase::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXSourcesBuildPhase *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXSourcesBuildPhase::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXSourcesBuildPhase * _p = dynamic_cast <const cPtr_Xcode_PBXSourcesBuildPhase *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mNameForComment._operator_isEqual (_p->mNameForComment).boolValue ()
         && mFileReferenceList._operator_isEqual (_p->mFileReferenceList).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXSourcesBuildPhase::computeOnce1975 (C_Compiler & _inLexique) const {
  _mOnce1975isComputed = true ;
  key._drop () ;
  key = GGS_uint ::constructor_sequenceNumber (_inLexique COMMA_HERE).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (48)).reader_md5 (_inLexique COMMA_SOURCE_FILE_AT_LINE (48)).reader_rightSubString (_inLexique, GGS_uint (true, 24U) COMMA_SOURCE_FILE_AT_LINE (48)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_PBXSourcesBuildPhase::reader_key (C_Compiler & _inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce1975isComputed) {
    computeOnce1975 (_inLexique) ;
  }
  return key ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXSourcesBuildPhase::
appendForDescription (C_Compiler & _inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXSourcesBuildPhase:"
           << mNameForComment.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mFileReferenceList.reader_description  (_inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXSourcesBuildPhase::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXSourcesBuildPhase::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXSourcesBuildPhase (& typeid (cPtr_Xcode_PBXSourcesBuildPhase), NULL
, "") ;
//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXSourcesBuildPhase::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXSourcesBuildPhase ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_Xcode_PBXSourcesBuildPhase'                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase::
GGS_Xcode_PBXSourcesBuildPhase (cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase::
GGS_Xcode_PBXSourcesBuildPhase (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- _castFrom class method (implements cast expression)
GGS_Xcode_PBXSourcesBuildPhase GGS_Xcode_PBXSourcesBuildPhase::
_castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXSourcesBuildPhase _result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXSourcesBuildPhase) == typeid (*inPointer)) ;
    if (ok) {
      _result = GGS_Xcode_PBXSourcesBuildPhase (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXSourcesBuildPhase),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return _result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase GGS_Xcode_PBXSourcesBuildPhase::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0,
                 const GGS_stringlist & argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXSourcesBuildPhase result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXSourcesBuildPhase (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXSourcesBuildPhase::
reader_mNameForComment (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXSourcesBuildPhase *) mPointer)->mNameForComment ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_stringlist  GGS_Xcode_PBXSourcesBuildPhase::
reader_mFileReferenceList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_stringlist   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXSourcesBuildPhase *) mPointer)->mFileReferenceList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXSourcesBuildPhase::
reader_key (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXSourcesBuildPhase *) mPointer)->reader_key (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXSourcesBuildPhase::actualTypeName (void) const {
  return "Xcode_PBXSourcesBuildPhase" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_PBXSourcesBuildPhase::_galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_PBXSourcesBuildPhase ("Xcode_PBXSourcesBuildPhase") ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@Xcode_PBXSourcesBuildPhase_list'             *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXSourcesBuildPhase_list::
elementOf_GGS_Xcode_PBXSourcesBuildPhase_list (const GGS_Xcode_PBXSourcesBuildPhase & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mBuildPhase (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXSourcesBuildPhase_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXSourcesBuildPhase_list * _p = dynamic_cast <const elementOf_GGS_Xcode_PBXSourcesBuildPhase_list *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mBuildPhase._operator_isEqual (_p->mBuildPhase).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXSourcesBuildPhase_list::
appendForDescription (C_Compiler & _inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mBuildPhase.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 List '@Xcode_PBXSourcesBuildPhase_list'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
_internalAppendValues (const GGS_Xcode_PBXSourcesBuildPhase & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
_internalPrependValues (const GGS_Xcode_PBXSourcesBuildPhase & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
_addAssign_operation (const GGS_Xcode_PBXSourcesBuildPhase & argument_0) {
  if (_isBuilt ()&& argument_0._isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list GGS_Xcode_PBXSourcesBuildPhase_list::
_operator_concat (const GGS_Xcode_PBXSourcesBuildPhase_list & inOperand) const {
  GGS_Xcode_PBXSourcesBuildPhase_list result = * this ;
  result._dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
_dotAssign_operation (const GGS_Xcode_PBXSourcesBuildPhase_list inOperand) {
  if (_isBuilt () && inOperand._isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXSourcesBuildPhase_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_PBXSourcesBuildPhase  p_0 = p->mBuildPhase ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_PBXSourcesBuildPhase & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (_isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * _p = firstObject () ;
    _alloc () ;
    while (_p != NULL) {
      macroValidPointer (_p) ;
      _internalAppendValues (_p->mBuildPhase
                                COMMA_HERE) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list  GGS_Xcode_PBXSourcesBuildPhase_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXSourcesBuildPhase_list result ;
  result._alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list  GGS_Xcode_PBXSourcesBuildPhase_list::
constructor_listWithValue (const GGS_Xcode_PBXSourcesBuildPhase & argument_0) {
  GGS_Xcode_PBXSourcesBuildPhase_list result ;
  result._alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
internalSubListWithRange (GGS_Xcode_PBXSourcesBuildPhase_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList._alloc () ;
  if (inCount > 0) {
    cElement * _p = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (_p) ;
      _p = _p->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (_p) ;
      ioList._addAssign_operation (_p->mBuildPhase) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list GGS_Xcode_PBXSourcesBuildPhase_list::
reader_subListWithRange (C_Compiler & _inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXSourcesBuildPhase_list result ;
  if (_isBuilt () && inFirstIndex._isBuilt () && inCount._isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list GGS_Xcode_PBXSourcesBuildPhase_list::
reader_subListFromIndex (C_Compiler & _inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXSourcesBuildPhase_list result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXSourcesBuildPhase_list::
reader_description (C_Compiler & _inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (_inLexique, "@Xcode_PBXSourcesBuildPhase_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
method_first (C_Compiler & _inLexique,
              GGS_Xcode_PBXSourcesBuildPhase & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mBuildPhase ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
method_last (C_Compiler & _inLexique,
             GGS_Xcode_PBXSourcesBuildPhase & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mBuildPhase ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
modifier_popFirst (C_Compiler & _inLexique,
                 GGS_Xcode_PBXSourcesBuildPhase & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mBuildPhase ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
modifier_popLast (C_Compiler & _inLexique,
                GGS_Xcode_PBXSourcesBuildPhase & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mBuildPhase ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase  GGS_Xcode_PBXSourcesBuildPhase_list::
reader_mBuildPhaseAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXSourcesBuildPhase  result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mBuildPhase ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
modifier_setMBuildPhaseAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_PBXSourcesBuildPhase  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mBuildPhase = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXSourcesBuildPhase  & GGS_Xcode_PBXSourcesBuildPhase_list::cEnumerator::_mBuildPhase (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mBuildPhase ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'cPtr_Xcode_PBXGroup'                         *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXGroup::
cPtr_Xcode_PBXGroup (const GGS_string& argument_0,
                                const GGS_stringlist & argument_1
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mGroupName (argument_0),
mChildrenGroupList (argument_1),
_mOnce2723isComputed (false),
key () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXGroup * GGS_Xcode_PBXGroup::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXGroup *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXGroup *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXGroup::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXGroup * _p = dynamic_cast <const cPtr_Xcode_PBXGroup *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mGroupName._operator_isEqual (_p->mGroupName).boolValue ()
         && mChildrenGroupList._operator_isEqual (_p->mChildrenGroupList).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXGroup::computeOnce2723 (C_Compiler & _inLexique) const {
  _mOnce2723isComputed = true ;
  key._drop () ;
  key = GGS_uint ::constructor_sequenceNumber (_inLexique COMMA_HERE).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (69)).reader_md5 (_inLexique COMMA_SOURCE_FILE_AT_LINE (69)).reader_rightSubString (_inLexique, GGS_uint (true, 24U) COMMA_SOURCE_FILE_AT_LINE (69)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_PBXGroup::reader_key (C_Compiler & _inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce2723isComputed) {
    computeOnce2723 (_inLexique) ;
  }
  return key ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXGroup::
appendForDescription (C_Compiler & _inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXGroup:"
           << mGroupName.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mChildrenGroupList.reader_description  (_inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXGroup::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXGroup::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXGroup (& typeid (cPtr_Xcode_PBXGroup), NULL
, "") ;
//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXGroup::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXGroup ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_Xcode_PBXGroup'                      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup::
GGS_Xcode_PBXGroup (cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup::
GGS_Xcode_PBXGroup (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- _castFrom class method (implements cast expression)
GGS_Xcode_PBXGroup GGS_Xcode_PBXGroup::
_castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXGroup _result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXGroup *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXGroup) == typeid (*inPointer)) ;
    if (ok) {
      _result = GGS_Xcode_PBXGroup (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXGroup),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return _result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup GGS_Xcode_PBXGroup::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0,
                 const GGS_stringlist & argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXGroup result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXGroup (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXGroup::
reader_mGroupName (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXGroup *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXGroup *) mPointer)->mGroupName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_stringlist  GGS_Xcode_PBXGroup::
reader_mChildrenGroupList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_stringlist   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXGroup *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXGroup *) mPointer)->mChildrenGroupList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXGroup::
reader_key (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXGroup *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXGroup *) mPointer)->reader_key (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXGroup::actualTypeName (void) const {
  return "Xcode_PBXGroup" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_PBXGroup::_galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_PBXGroup ("Xcode_PBXGroup") ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@Xcode_PBXGroup_list'                   *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXGroup_list::
elementOf_GGS_Xcode_PBXGroup_list (const GGS_Xcode_PBXGroup & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mGroup (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXGroup_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXGroup_list * _p = dynamic_cast <const elementOf_GGS_Xcode_PBXGroup_list *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mGroup._operator_isEqual (_p->mGroup).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXGroup_list::
appendForDescription (C_Compiler & _inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mGroup.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                       List '@Xcode_PBXGroup_list'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
_internalAppendValues (const GGS_Xcode_PBXGroup & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
_internalPrependValues (const GGS_Xcode_PBXGroup & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
_addAssign_operation (const GGS_Xcode_PBXGroup & argument_0) {
  if (_isBuilt ()&& argument_0._isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list GGS_Xcode_PBXGroup_list::
_operator_concat (const GGS_Xcode_PBXGroup_list & inOperand) const {
  GGS_Xcode_PBXGroup_list result = * this ;
  result._dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
_dotAssign_operation (const GGS_Xcode_PBXGroup_list inOperand) {
  if (_isBuilt () && inOperand._isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXGroup_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_PBXGroup  p_0 = p->mGroup ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_PBXGroup & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (_isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * _p = firstObject () ;
    _alloc () ;
    while (_p != NULL) {
      macroValidPointer (_p) ;
      _internalAppendValues (_p->mGroup
                                COMMA_HERE) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list  GGS_Xcode_PBXGroup_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXGroup_list result ;
  result._alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list  GGS_Xcode_PBXGroup_list::
constructor_listWithValue (const GGS_Xcode_PBXGroup & argument_0) {
  GGS_Xcode_PBXGroup_list result ;
  result._alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
internalSubListWithRange (GGS_Xcode_PBXGroup_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList._alloc () ;
  if (inCount > 0) {
    cElement * _p = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (_p) ;
      _p = _p->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (_p) ;
      ioList._addAssign_operation (_p->mGroup) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list GGS_Xcode_PBXGroup_list::
reader_subListWithRange (C_Compiler & _inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXGroup_list result ;
  if (_isBuilt () && inFirstIndex._isBuilt () && inCount._isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list GGS_Xcode_PBXGroup_list::
reader_subListFromIndex (C_Compiler & _inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXGroup_list result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXGroup_list::
reader_description (C_Compiler & _inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (_inLexique, "@Xcode_PBXGroup_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
method_first (C_Compiler & _inLexique,
              GGS_Xcode_PBXGroup & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mGroup ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
method_last (C_Compiler & _inLexique,
             GGS_Xcode_PBXGroup & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mGroup ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
modifier_popFirst (C_Compiler & _inLexique,
                 GGS_Xcode_PBXGroup & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mGroup ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
modifier_popLast (C_Compiler & _inLexique,
                GGS_Xcode_PBXGroup & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mGroup ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup  GGS_Xcode_PBXGroup_list::
reader_mGroupAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXGroup  result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mGroup ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
modifier_setMGroupAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_PBXGroup  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mGroup = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXGroup  & GGS_Xcode_PBXGroup_list::cEnumerator::_mGroup (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mGroup ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'cPtr_Xcode_XCBuildConfiguration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_XCBuildConfiguration::
cPtr_Xcode_XCBuildConfiguration (const GGS_stringlist & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mSettings (argument_0),
_mOnce3454isComputed (false),
configurationKey (),
_mOnce3554isComputed (false),
key () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_XCBuildConfiguration * GGS_Xcode_XCBuildConfiguration::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_XCBuildConfiguration *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_XCBuildConfiguration::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_XCBuildConfiguration * _p = dynamic_cast <const cPtr_Xcode_XCBuildConfiguration *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mSettings._operator_isEqual (_p->mSettings).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_XCBuildConfiguration::computeOnce3454 (C_Compiler & _inLexique) const {
  _mOnce3454isComputed = true ;
  configurationKey._drop () ;
  configurationKey = GGS_uint ::constructor_sequenceNumber (_inLexique COMMA_HERE).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (89)).reader_md5 (_inLexique COMMA_SOURCE_FILE_AT_LINE (89)).reader_rightSubString (_inLexique, GGS_uint (true, 24U) COMMA_SOURCE_FILE_AT_LINE (89)) ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_XCBuildConfiguration::computeOnce3554 (C_Compiler & _inLexique) const {
  _mOnce3554isComputed = true ;
  key._drop () ;
  key = GGS_uint ::constructor_sequenceNumber (_inLexique COMMA_HERE).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (93)).reader_md5 (_inLexique COMMA_SOURCE_FILE_AT_LINE (93)).reader_rightSubString (_inLexique, GGS_uint (true, 24U) COMMA_SOURCE_FILE_AT_LINE (93)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_XCBuildConfiguration::reader_configurationKey (C_Compiler & _inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce3454isComputed) {
    computeOnce3454 (_inLexique) ;
  }
  return configurationKey ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_XCBuildConfiguration::reader_key (C_Compiler & _inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce3554isComputed) {
    computeOnce3554 (_inLexique) ;
  }
  return key ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_XCBuildConfiguration::
appendForDescription (C_Compiler & _inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_XCBuildConfiguration:"
           << mSettings.reader_description  (_inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_XCBuildConfiguration::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_XCBuildConfiguration::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_XCBuildConfiguration (& typeid (cPtr_Xcode_XCBuildConfiguration), NULL
, "") ;
//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_XCBuildConfiguration::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_XCBuildConfiguration ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_Xcode_XCBuildConfiguration'                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration::
GGS_Xcode_XCBuildConfiguration (cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration::
GGS_Xcode_XCBuildConfiguration (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- _castFrom class method (implements cast expression)
GGS_Xcode_XCBuildConfiguration GGS_Xcode_XCBuildConfiguration::
_castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_XCBuildConfiguration _result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_XCBuildConfiguration) == typeid (*inPointer)) ;
    if (ok) {
      _result = GGS_Xcode_XCBuildConfiguration (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_XCBuildConfiguration),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return _result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration GGS_Xcode_XCBuildConfiguration::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_stringlist & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_XCBuildConfiguration result ;
  macroMyNew (result.mPointer, cPtr_Xcode_XCBuildConfiguration (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_stringlist  GGS_Xcode_XCBuildConfiguration::
reader_mSettings (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_stringlist   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_XCBuildConfiguration *) mPointer)->mSettings ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_XCBuildConfiguration::
reader_configurationKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_XCBuildConfiguration *) mPointer)->reader_configurationKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_XCBuildConfiguration::
reader_key (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_XCBuildConfiguration *) mPointer)->reader_key (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_XCBuildConfiguration::actualTypeName (void) const {
  return "Xcode_XCBuildConfiguration" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_XCBuildConfiguration::_galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_XCBuildConfiguration ("Xcode_XCBuildConfiguration") ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@Xcode_XCBuildConfiguration_list'             *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_XCBuildConfiguration_list::
elementOf_GGS_Xcode_XCBuildConfiguration_list (const GGS_Xcode_XCBuildConfiguration & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mBuildConfig (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_XCBuildConfiguration_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_XCBuildConfiguration_list * _p = dynamic_cast <const elementOf_GGS_Xcode_XCBuildConfiguration_list *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mBuildConfig._operator_isEqual (_p->mBuildConfig).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_XCBuildConfiguration_list::
appendForDescription (C_Compiler & _inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mBuildConfig.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 List '@Xcode_XCBuildConfiguration_list'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
_internalAppendValues (const GGS_Xcode_XCBuildConfiguration & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
_internalPrependValues (const GGS_Xcode_XCBuildConfiguration & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
_addAssign_operation (const GGS_Xcode_XCBuildConfiguration & argument_0) {
  if (_isBuilt ()&& argument_0._isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list GGS_Xcode_XCBuildConfiguration_list::
_operator_concat (const GGS_Xcode_XCBuildConfiguration_list & inOperand) const {
  GGS_Xcode_XCBuildConfiguration_list result = * this ;
  result._dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
_dotAssign_operation (const GGS_Xcode_XCBuildConfiguration_list inOperand) {
  if (_isBuilt () && inOperand._isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_XCBuildConfiguration_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_XCBuildConfiguration  p_0 = p->mBuildConfig ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_XCBuildConfiguration & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (_isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * _p = firstObject () ;
    _alloc () ;
    while (_p != NULL) {
      macroValidPointer (_p) ;
      _internalAppendValues (_p->mBuildConfig
                                COMMA_HERE) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list  GGS_Xcode_XCBuildConfiguration_list::
constructor_emptyList (void) {
  GGS_Xcode_XCBuildConfiguration_list result ;
  result._alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list  GGS_Xcode_XCBuildConfiguration_list::
constructor_listWithValue (const GGS_Xcode_XCBuildConfiguration & argument_0) {
  GGS_Xcode_XCBuildConfiguration_list result ;
  result._alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
internalSubListWithRange (GGS_Xcode_XCBuildConfiguration_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList._alloc () ;
  if (inCount > 0) {
    cElement * _p = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (_p) ;
      _p = _p->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (_p) ;
      ioList._addAssign_operation (_p->mBuildConfig) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list GGS_Xcode_XCBuildConfiguration_list::
reader_subListWithRange (C_Compiler & _inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_XCBuildConfiguration_list result ;
  if (_isBuilt () && inFirstIndex._isBuilt () && inCount._isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list GGS_Xcode_XCBuildConfiguration_list::
reader_subListFromIndex (C_Compiler & _inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_XCBuildConfiguration_list result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_XCBuildConfiguration_list::
reader_description (C_Compiler & _inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (_inLexique, "@Xcode_XCBuildConfiguration_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
method_first (C_Compiler & _inLexique,
              GGS_Xcode_XCBuildConfiguration & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mBuildConfig ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
method_last (C_Compiler & _inLexique,
             GGS_Xcode_XCBuildConfiguration & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mBuildConfig ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
modifier_popFirst (C_Compiler & _inLexique,
                 GGS_Xcode_XCBuildConfiguration & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mBuildConfig ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
modifier_popLast (C_Compiler & _inLexique,
                GGS_Xcode_XCBuildConfiguration & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mBuildConfig ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0._drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration  GGS_Xcode_XCBuildConfiguration_list::
reader_mBuildConfigAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_XCBuildConfiguration  result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mBuildConfig ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
modifier_setMBuildConfigAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_XCBuildConfiguration  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mBuildConfig = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_XCBuildConfiguration  & GGS_Xcode_XCBuildConfiguration_list::cEnumerator::_mBuildConfig (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mBuildConfig ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@Xcode_PBXNativeTarget_list'                *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXNativeTarget_list::
elementOf_GGS_Xcode_PBXNativeTarget_list (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4,
                                const GGS_string& argument_5,
                                const GGS_string& argument_6,
                                const GGS_Xcode_PBXSourcesBuildPhase_list & argument_7
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mTargetKey (argument_0),
mTargetName (argument_1),
mTargetConfigurationKey (argument_2),
mProductInstallPath (argument_3),
mProductName (argument_4),
mProductReferenceKey (argument_5),
mProductTypeExtension (argument_6),
mBuildPhaseList (argument_7) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXNativeTarget_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXNativeTarget_list * _p = dynamic_cast <const elementOf_GGS_Xcode_PBXNativeTarget_list *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mTargetKey._operator_isEqual (_p->mTargetKey).boolValue ()
         && mTargetName._operator_isEqual (_p->mTargetName).boolValue ()
         && mTargetConfigurationKey._operator_isEqual (_p->mTargetConfigurationKey).boolValue ()
         && mProductInstallPath._operator_isEqual (_p->mProductInstallPath).boolValue ()
         && mProductName._operator_isEqual (_p->mProductName).boolValue ()
         && mProductReferenceKey._operator_isEqual (_p->mProductReferenceKey).boolValue ()
         && mProductTypeExtension._operator_isEqual (_p->mProductTypeExtension).boolValue ()
         && mBuildPhaseList._operator_isEqual (_p->mBuildPhaseList).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXNativeTarget_list::
appendForDescription (C_Compiler & _inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mTargetKey.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mTargetName.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mTargetConfigurationKey.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mProductInstallPath.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mProductName.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mProductReferenceKey.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mProductTypeExtension.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mBuildPhaseList.reader_description  (_inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    List '@Xcode_PBXNativeTarget_list'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
_internalAppendValues (const GGS_string& argument_0,
                    const GGS_string& argument_1,
                    const GGS_string& argument_2,
                    const GGS_string& argument_3,
                    const GGS_string& argument_4,
                    const GGS_string& argument_5,
                    const GGS_string& argument_6,
                    const GGS_Xcode_PBXSourcesBuildPhase_list & argument_7
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
_internalPrependValues (const GGS_string& argument_0,
                    const GGS_string& argument_1,
                    const GGS_string& argument_2,
                    const GGS_string& argument_3,
                    const GGS_string& argument_4,
                    const GGS_string& argument_5,
                    const GGS_string& argument_6,
                    const GGS_Xcode_PBXSourcesBuildPhase_list & argument_7
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
_addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4,
                                const GGS_string& argument_5,
                                const GGS_string& argument_6,
                                const GGS_Xcode_PBXSourcesBuildPhase_list & argument_7) {
  if (_isBuilt ()&& argument_0._isBuilt ()&& argument_1._isBuilt ()&& argument_2._isBuilt ()&& argument_3._isBuilt ()&& argument_4._isBuilt ()&& argument_5._isBuilt ()&& argument_6._isBuilt ()&& argument_7._isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list GGS_Xcode_PBXNativeTarget_list::
_operator_concat (const GGS_Xcode_PBXNativeTarget_list & inOperand) const {
  GGS_Xcode_PBXNativeTarget_list result = * this ;
  result._dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
_dotAssign_operation (const GGS_Xcode_PBXNativeTarget_list inOperand) {
  if (_isBuilt () && inOperand._isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXNativeTarget_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_string p_0 = p->mTargetKey ;
          GGS_string p_1 = p->mTargetName ;
          GGS_string p_2 = p->mTargetConfigurationKey ;
          GGS_string p_3 = p->mProductInstallPath ;
          GGS_string p_4 = p->mProductName ;
          GGS_string p_5 = p->mProductReferenceKey ;
          GGS_string p_6 = p->mProductTypeExtension ;
          GGS_Xcode_PBXSourcesBuildPhase_list  p_7 = p->mBuildPhaseList ;
          _internalAppendValues (p_0, p_1, p_2, p_3, p_4, p_5, p_6, p_7 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_string& argument_0,
                     const GGS_string& argument_1,
                     const GGS_string& argument_2,
                     const GGS_string& argument_3,
                     const GGS_string& argument_4,
                     const GGS_string& argument_5,
                     const GGS_string& argument_6,
                     const GGS_Xcode_PBXSourcesBuildPhase_list & argument_7
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (_isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * _p = firstObject () ;
    _alloc () ;
    while (_p != NULL) {
      macroValidPointer (_p) ;
      _internalAppendValues (_p->mTargetKey,
                                _p->mTargetName,
                                _p->mTargetConfigurationKey,
                                _p->mProductInstallPath,
                                _p->mProductName,
                                _p->mProductReferenceKey,
                                _p->mProductTypeExtension,
                                _p->mBuildPhaseList
                                COMMA_HERE) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list  GGS_Xcode_PBXNativeTarget_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXNativeTarget_list result ;
  result._alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list  GGS_Xcode_PBXNativeTarget_list::
constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4,
                                const GGS_string& argument_5,
                                const GGS_string& argument_6,
                                const GGS_Xcode_PBXSourcesBuildPhase_list & argument_7) {
  GGS_Xcode_PBXNativeTarget_list result ;
  result._alloc () ;
  result._addAssign_operation (argument_0, argument_1, argument_2, argument_3, argument_4, argument_5, argument_6, argument_7) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
internalSubListWithRange (GGS_Xcode_PBXNativeTarget_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList._alloc () ;
  if (inCount > 0) {
    cElement * _p = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (_p) ;
      _p = _p->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (_p) ;
      ioList._addAssign_operation (_p->mTargetKey, _p->mTargetName, _p->mTargetConfigurationKey, _p->mProductInstallPath, _p->mProductName, _p->mProductReferenceKey, _p->mProductTypeExtension, _p->mBuildPhaseList) ;
      _p = _p->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list GGS_Xcode_PBXNativeTarget_list::
reader_subListWithRange (C_Compiler & _inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXNativeTarget_list result ;
  if (_isBuilt () && inFirstIndex._isBuilt () && inCount._isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list GGS_Xcode_PBXNativeTarget_list::
reader_subListFromIndex (C_Compiler & _inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXNativeTarget_list result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      _inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_description (C_Compiler & _inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (_inLexique, "@Xcode_PBXNativeTarget_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
method_first (C_Compiler & _inLexique,
              GGS_string& _out_0,
              GGS_string& _out_1,
              GGS_string& _out_2,
              GGS_string& _out_3,
              GGS_string& _out_4,
              GGS_string& _out_5,
              GGS_string& _out_6,
              GGS_Xcode_PBXSourcesBuildPhase_list & _out_7
              COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mTargetKey ;
    _out_1 = _p->mTargetName ;
    _out_2 = _p->mTargetConfigurationKey ;
    _out_3 = _p->mProductInstallPath ;
    _out_4 = _p->mProductName ;
    _out_5 = _p->mProductReferenceKey ;
    _out_6 = _p->mProductTypeExtension ;
    _out_7 = _p->mBuildPhaseList ;
  }else{
    _out_0._drop () ;
    _out_1._drop () ;
    _out_2._drop () ;
    _out_3._drop () ;
    _out_4._drop () ;
    _out_5._drop () ;
    _out_6._drop () ;
    _out_7._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
method_last (C_Compiler & _inLexique,
             GGS_string& _out_0,
             GGS_string& _out_1,
             GGS_string& _out_2,
             GGS_string& _out_3,
             GGS_string& _out_4,
             GGS_string& _out_5,
             GGS_string& _out_6,
             GGS_Xcode_PBXSourcesBuildPhase_list & _out_7
             COMMA_LOCATION_ARGS) const {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mTargetKey ;
    _out_1 = _p->mTargetName ;
    _out_2 = _p->mTargetConfigurationKey ;
    _out_3 = _p->mProductInstallPath ;
    _out_4 = _p->mProductName ;
    _out_5 = _p->mProductReferenceKey ;
    _out_6 = _p->mProductTypeExtension ;
    _out_7 = _p->mBuildPhaseList ;
  }else{
    _out_0._drop () ;
    _out_1._drop () ;
    _out_2._drop () ;
    _out_3._drop () ;
    _out_4._drop () ;
    _out_5._drop () ;
    _out_6._drop () ;
    _out_7._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_popFirst (C_Compiler & _inLexique,
                 GGS_string& _out_0,
                 GGS_string& _out_1,
                 GGS_string& _out_2,
                 GGS_string& _out_3,
                 GGS_string& _out_4,
                 GGS_string& _out_5,
                 GGS_string& _out_6,
                 GGS_Xcode_PBXSourcesBuildPhase_list & _out_7
                 COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = firstObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mTargetKey ;
    _out_1 = _p->mTargetName ;
    _out_2 = _p->mTargetConfigurationKey ;
    _out_3 = _p->mProductInstallPath ;
    _out_4 = _p->mProductName ;
    _out_5 = _p->mProductReferenceKey ;
    _out_6 = _p->mProductTypeExtension ;
    _out_7 = _p->mBuildPhaseList ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0._drop () ;
    _out_1._drop () ;
    _out_2._drop () ;
    _out_3._drop () ;
    _out_4._drop () ;
    _out_5._drop () ;
    _out_6._drop () ;
    _out_7._drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_popLast (C_Compiler & _inLexique,
                GGS_string& _out_0,
                GGS_string& _out_1,
                GGS_string& _out_2,
                GGS_string& _out_3,
                GGS_string& _out_4,
                GGS_string& _out_5,
                GGS_string& _out_6,
                GGS_Xcode_PBXSourcesBuildPhase_list & _out_7
                COMMA_LOCATION_ARGS) {
  cElement * _p = NULL ;
  if (_isBuilt ()) {
    _p = lastObject () ;
    if (_p == NULL) {
      _inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (_p != NULL) {
    _out_0 = _p->mTargetKey ;
    _out_1 = _p->mTargetName ;
    _out_2 = _p->mTargetConfigurationKey ;
    _out_3 = _p->mProductInstallPath ;
    _out_4 = _p->mProductName ;
    _out_5 = _p->mProductReferenceKey ;
    _out_6 = _p->mProductTypeExtension ;
    _out_7 = _p->mBuildPhaseList ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0._drop () ;
    _out_1._drop () ;
    _out_2._drop () ;
    _out_3._drop () ;
    _out_4._drop () ;
    _out_5._drop () ;
    _out_6._drop () ;
    _out_7._drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mTargetKeyAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mTargetKey ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mTargetNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mTargetName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mTargetConfigurationKeyAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mTargetConfigurationKey ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mProductInstallPathAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mProductInstallPath ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mProductNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mProductName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mProductReferenceKeyAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mProductReferenceKey ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mProductTypeExtensionAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mProductTypeExtension ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list  GGS_Xcode_PBXNativeTarget_list::
reader_mBuildPhaseListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXSourcesBuildPhase_list  result ;
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mBuildPhaseList ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMTargetKeyAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mTargetKey = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMTargetNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mTargetName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMTargetConfigurationKeyAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mTargetConfigurationKey = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMProductInstallPathAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mProductInstallPath = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMProductNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mProductName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMProductReferenceKeyAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mProductReferenceKey = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMProductTypeExtensionAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mProductTypeExtension = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMBuildPhaseListAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_PBXSourcesBuildPhase_list  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (_isBuilt () && inIndex._isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mBuildPhaseList = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mTargetKey (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mTargetKey ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mTargetName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mTargetName ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mTargetConfigurationKey (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mTargetConfigurationKey ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mProductInstallPath (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mProductInstallPath ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mProductName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mProductName ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mProductReferenceKey (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mProductReferenceKey ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mProductTypeExtension (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mProductTypeExtension ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXSourcesBuildPhase_list  & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mBuildPhaseList (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((cElement *) mCurrentEnumeratedObject)->mBuildPhaseList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'cPtr_Xcode_rootObject'                        *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_rootObject::
cPtr_Xcode_rootObject (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_Xcode_PBXGroup_list & argument_2,
                                const GGS_string& argument_3,
                                const GGS_Xcode_XCBuildConfiguration_list & argument_4,
                                const GGS_Xcode_PBXNativeTarget_list & argument_5,
                                const GGS_string& argument_6,
                                const GGS_Xcode_PBXFileReference_list & argument_7,
                                const GGS_Xcode_PBXSourcesBuildPhase_list & argument_8
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mProjectName (argument_0),
mRootObjectKey (argument_1),
mGroupList (argument_2),
mMainGroupKey (argument_3),
mBuildConfigurationList (argument_4),
mTargetList (argument_5),
mProjectDefaultConfigurationKey (argument_6),
mPBXFileReference_list (argument_7),
mPBXSourcesBuildPhase_list (argument_8) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_rootObject * GGS_Xcode_rootObject::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_rootObject *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_rootObject::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_rootObject * _p = dynamic_cast <const cPtr_Xcode_rootObject *> (inOperand) ;
    macroValidPointer (_p) ;
    equal = mProjectName._operator_isEqual (_p->mProjectName).boolValue ()
         && mRootObjectKey._operator_isEqual (_p->mRootObjectKey).boolValue ()
         && mGroupList._operator_isEqual (_p->mGroupList).boolValue ()
         && mMainGroupKey._operator_isEqual (_p->mMainGroupKey).boolValue ()
         && mBuildConfigurationList._operator_isEqual (_p->mBuildConfigurationList).boolValue ()
         && mTargetList._operator_isEqual (_p->mTargetList).boolValue ()
         && mProjectDefaultConfigurationKey._operator_isEqual (_p->mProjectDefaultConfigurationKey).boolValue ()
         && mPBXFileReference_list._operator_isEqual (_p->mPBXFileReference_list).boolValue ()
         && mPBXSourcesBuildPhase_list._operator_isEqual (_p->mPBXSourcesBuildPhase_list).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_rootObject::
method_build (C_Compiler & _inLexique,
                                GGS_string& var_cas_ioString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_ioString = ((((((GGS_string (true, "// !$*UTF8*$!\n"))._operator_concat (GGS_string (true, "{\n")))._operator_concat (GGS_string (true, "\tarchiveVersion = 1;\n")))._operator_concat (GGS_string (true, "\tclasses = {\n")))._operator_concat (GGS_string (true, "\t};\n")))._operator_concat (GGS_string (true, "\tobjectVersion = 42;\n")))._operator_concat (GGS_string (true, "\tobjects = {\n"
    "\n")) ;
  var_cas_ioString.writeString ("/* Begin PBXFileReference section */\n") ;
  {
    GGS_Xcode_PBXFileReference_list::cEnumerator enumerator_5560 (mPBXFileReference_list, true) ;
    const GGS_Xcode_PBXFileReference_list::cElement * operand_5560 = NULL ;
    while (((operand_5560 = enumerator_5560.nextObject ()))) {
      macroValidPointer (operand_5560) ;
      const GGS_Xcode_PBXFileReference_abstract  _temp_5603 = operand_5560->mFileReference ;
      if (_temp_5603._isBuilt ()) {
        _temp_5603 (HERE)->method_buildXcodeProject (_inLexique, var_cas_ioString COMMA_SOURCE_FILE_AT_LINE (149)) ;
      }
    }
  }
  var_cas_ioString.writeString ("/* End PBXFileReference section */\n") ;
  var_cas_ioString.writeString ("/* Begin PBXGroup section */\n") ;
  {
    GGS_Xcode_PBXGroup_list::cEnumerator enumerator_5788 (mGroupList, true) ;
    const GGS_Xcode_PBXGroup_list::cElement * operand_5788 = NULL ;
    while (((operand_5788 = enumerator_5788.nextObject ()))) {
      macroValidPointer (operand_5788) ;
      var_cas_ioString.writeString ("\t\t") ;
      var_cas_ioString._dotAssign_operation (operand_5788->mGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (155))) ;
      var_cas_ioString.writeString (" = {\n"
      "\t\t\tisa = PBXGroup;\n"
      "\t\t\tchildren = (\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_5923 (operand_5788->mGroup.reader_mChildrenGroupList (_inLexique COMMA_SOURCE_FILE_AT_LINE (158)), true) ;
        const GGS_stringlist::cElement * operand_5923 = NULL ;
        while (((operand_5923 = enumerator_5923.nextObject ()))) {
          macroValidPointer (operand_5923) ;
          var_cas_ioString.writeString ("\t\t\t\t") ;
          var_cas_ioString._dotAssign_operation (operand_5923->mValue) ;
          var_cas_ioString.writeString (",\n") ;
        }
      }
      var_cas_ioString.writeString ("\t\t\t);\n") ;
      if (((operand_5788->mGroup.reader_mGroupName (_inLexique COMMA_SOURCE_FILE_AT_LINE (162)))._operator_isNotEqual (GGS_string (true, ""))).isBuiltAndTrue ()) {
        var_cas_ioString.writeString ("\t\t\tname = \"") ;
        var_cas_ioString._dotAssign_operation (operand_5788->mGroup.reader_mGroupName (_inLexique COMMA_SOURCE_FILE_AT_LINE (163))) ;
        var_cas_ioString.writeString ("\";\n") ;
      }
      var_cas_ioString.writeString ("\t\t\tsourceTree = \"<group>\";\n"
      "\t\t};\n") ;
    }
  }
  var_cas_ioString.writeString ("/* End PBXGroup section */\n"
    "\n") ;
  var_cas_ioString.writeString ("/* Begin PBXNativeTarget section */\n") ;
  {
    GGS_Xcode_PBXNativeTarget_list::cEnumerator enumerator_6433 (mTargetList, true) ;
    const GGS_Xcode_PBXNativeTarget_list::cElement * operand_6433 = NULL ;
    while (((operand_6433 = enumerator_6433.nextObject ()))) {
      macroValidPointer (operand_6433) ;
      var_cas_ioString.writeString ("\t\t") ;
      var_cas_ioString._dotAssign_operation (operand_6433->mTargetKey) ;
      var_cas_ioString.writeString (" /* ") ;
      var_cas_ioString._dotAssign_operation (operand_6433->mTargetName) ;
      var_cas_ioString.writeString (" */ = {\n"
      "\t\t\tisa = PBXNativeTarget;\n"
      "\t\t\tbuildConfigurationList = ") ;
      var_cas_ioString._dotAssign_operation (operand_6433->mTargetConfigurationKey) ;
      var_cas_ioString.writeString (" /* Build configuration list for PBXNativeTarget \"") ;
      var_cas_ioString._dotAssign_operation (operand_6433->mTargetName) ;
      var_cas_ioString.writeString ("\" */;\n"
      "\t\t\tbuildPhases = (\n") ;
      {
        GGS_Xcode_PBXSourcesBuildPhase_list::cEnumerator enumerator_6769 (operand_6433->mBuildPhaseList, true) ;
        const GGS_Xcode_PBXSourcesBuildPhase_list::cElement * operand_6769 = NULL ;
        while (((operand_6769 = enumerator_6769.nextObject ()))) {
          macroValidPointer (operand_6769) ;
          var_cas_ioString.writeString ("\t\t\t\t") ;
          var_cas_ioString._dotAssign_operation (operand_6769->mBuildPhase.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (177))) ;
          var_cas_ioString.writeString (" ,\n") ;
        }
      }
      var_cas_ioString.writeString ("\t\t\t);\n"
      "\t\t\tbuildRules = (\n"
      "\t\t\t);\n"
      "\t\t\tdependencies = (\n"
      "\t\t\t);\n"
      "\t\t\tname = \"") ;
      var_cas_ioString._dotAssign_operation (operand_6433->mTargetName) ;
      var_cas_ioString.writeString ("\";\n"
      "\t\t\tproductInstallPath = \"") ;
      var_cas_ioString._dotAssign_operation (operand_6433->mProductInstallPath) ;
      var_cas_ioString.writeString ("\";\n"
      "\t\t\tproductName = \"") ;
      var_cas_ioString._dotAssign_operation (operand_6433->mProductName) ;
      var_cas_ioString.writeString ("\";\n"
      "\t\t\tproductReference = ") ;
      var_cas_ioString._dotAssign_operation (operand_6433->mProductReferenceKey) ;
      var_cas_ioString.writeString (" ;\n"
      "\t\t\tproductType = \"com.apple.product-type.") ;
      var_cas_ioString._dotAssign_operation (operand_6433->mProductTypeExtension) ;
      var_cas_ioString.writeString ("\";\n"
      "\t\t};\n") ;
    }
  }
  var_cas_ioString.writeString ("/* End PBXNativeTarget section */\n") ;
  var_cas_ioString.writeString ("/* Begin PBXProject section */\n"
  "\t\t") ;
  var_cas_ioString._dotAssign_operation (mRootObjectKey) ;
  var_cas_ioString.writeString (" /* Project object */ = {\n"
  "\t\t\tisa = PBXProject;\n"
  "\t\t\tbuildConfigurationList = ") ;
  var_cas_ioString._dotAssign_operation (mProjectDefaultConfigurationKey) ;
  var_cas_ioString.writeString (" /* Build configuration list for PBXProject \"") ;
  var_cas_ioString._dotAssign_operation (mProjectName) ;
  var_cas_ioString.writeString ("\" */;\n"
  "\t\t\tcompatibilityVersion = \"Xcode 2.4\";\n"
  "\t\t\thasScannedForEncodings = 1;\n"
  "\t\t\tmainGroup = ") ;
  var_cas_ioString._dotAssign_operation (mMainGroupKey) ;
  var_cas_ioString.writeString (";\n"
  "\t\t\tprojectDirPath = \"\";\n"
  "\t\t\tprojectRoot = \"\";\n"
  "\t\t\ttargets = (\n") ;
  {
    GGS_Xcode_PBXNativeTarget_list::cEnumerator enumerator_8027 (mTargetList, true) ;
    const GGS_Xcode_PBXNativeTarget_list::cElement * operand_8027 = NULL ;
    while (((operand_8027 = enumerator_8027.nextObject ()))) {
      macroValidPointer (operand_8027) ;
      var_cas_ioString.writeString ("\t\t\t\t") ;
      var_cas_ioString._dotAssign_operation (operand_8027->mTargetKey) ;
      var_cas_ioString.writeString (" /* ") ;
      var_cas_ioString._dotAssign_operation (operand_8027->mTargetName) ;
      var_cas_ioString.writeString (" */,\n") ;
    }
  }
  var_cas_ioString.writeString ("\t\t\t);\n"
  "\t\t};\n"
  "/* End PBXProject section */\n"
    "\n") ;
  var_cas_ioString.writeString ("/* Begin PBXSourcesBuildPhase section */\n") ;
  {
    GGS_Xcode_PBXSourcesBuildPhase_list::cEnumerator enumerator_8348 (mPBXSourcesBuildPhase_list, true) ;
    const GGS_Xcode_PBXSourcesBuildPhase_list::cElement * operand_8348 = NULL ;
    while (((operand_8348 = enumerator_8348.nextObject ()))) {
      macroValidPointer (operand_8348) ;
      var_cas_ioString.writeString ("\t\t") ;
      var_cas_ioString._dotAssign_operation (operand_8348->mBuildPhase.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (213))) ;
      var_cas_ioString.writeString (" /* ") ;
      var_cas_ioString._dotAssign_operation (operand_8348->mBuildPhase.reader_mNameForComment (_inLexique COMMA_SOURCE_FILE_AT_LINE (214))) ;
      var_cas_ioString.writeString (" */ = {\n"
      "\t\t\tisa = PBXSourcesBuildPhase;\n"
      "\t\t\tbuildActionMask = 2147483647;\n"
      "\t\t\tfiles = (\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_8597 (operand_8348->mBuildPhase.reader_mFileReferenceList (_inLexique COMMA_SOURCE_FILE_AT_LINE (218)), true) ;
        const GGS_stringlist::cElement * operand_8597 = NULL ;
        while (((operand_8597 = enumerator_8597.nextObject ()))) {
          macroValidPointer (operand_8597) ;
          var_cas_ioString.writeString ("\t\t\t\t") ;
          var_cas_ioString._dotAssign_operation (operand_8597->mValue) ;
          var_cas_ioString.writeString ("\n") ;
        }
      }
      var_cas_ioString.writeString ("\t\t\t);\n"
      "\t\t\trunOnlyForDeploymentPostprocessing = 0;\n"
      "\t\t};\n") ;
    }
  }
  var_cas_ioString.writeString ("/* End PBXSourcesBuildPhase section */\n") ;
  var_cas_ioString.writeString ("/* Begin XCBuildConfiguration section */\n") ;
  {
    GGS_Xcode_XCBuildConfiguration_list::cEnumerator enumerator_9023 (mBuildConfigurationList, true) ;
    const GGS_Xcode_XCBuildConfiguration_list::cElement * operand_9023 = NULL ;
    while (((operand_9023 = enumerator_9023.nextObject ()))) {
      macroValidPointer (operand_9023) ;
      var_cas_ioString.writeString ("\t\t") ;
      var_cas_ioString._dotAssign_operation (operand_9023->mBuildConfig.reader_configurationKey (_inLexique COMMA_SOURCE_FILE_AT_LINE (229))) ;
      var_cas_ioString.writeString (" /* Default */ = {\n"
      "\t\t\tisa = XCBuildConfiguration;\n"
      "\t\t\tbuildSettings = {\n") ;
      {
        GGS_stringlist::cEnumerator enumerator_9210 (operand_9023->mBuildConfig.reader_mSettings (_inLexique COMMA_SOURCE_FILE_AT_LINE (232)), true) ;
        const GGS_stringlist::cElement * operand_9210 = NULL ;
        while (((operand_9210 = enumerator_9210.nextObject ()))) {
          macroValidPointer (operand_9210) ;
          var_cas_ioString.writeString ("\t\t\t\t") ;
          var_cas_ioString._dotAssign_operation (operand_9210->mValue) ;
          var_cas_ioString.writeString ("\n") ;
        }
      }
      var_cas_ioString.writeString ("\t\t\t};\n"
      "\t\t\tname = Default;\n"
      "\t\t};\n") ;
    }
  }
  var_cas_ioString.writeString ("/* End XCBuildConfiguration section */\n"
    "\n") ;
  var_cas_ioString.writeString ("/* Begin XCConfigurationList section */\n") ;
  {
    GGS_Xcode_XCBuildConfiguration_list::cEnumerator enumerator_9604 (mBuildConfigurationList, true) ;
    const GGS_Xcode_XCBuildConfiguration_list::cElement * operand_9604 = NULL ;
    while (((operand_9604 = enumerator_9604.nextObject ()))) {
      macroValidPointer (operand_9604) ;
      var_cas_ioString.writeString ("\t\t") ;
      var_cas_ioString._dotAssign_operation (operand_9604->mBuildConfig.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (243))) ;
      var_cas_ioString.writeString (" /* Build configuration list */ = {\n"
      "\t\t\tisa = XCConfigurationList;\n"
      "\t\t\tbuildConfigurations = (\n"
      "\t\t\t\t") ;
      var_cas_ioString._dotAssign_operation (operand_9604->mBuildConfig.reader_configurationKey (_inLexique COMMA_SOURCE_FILE_AT_LINE (246))) ;
      var_cas_ioString.writeString (" /* Default */,\n"
      "\t\t\t);\n"
      "\t\t\tdefaultConfigurationIsVisible = 0;\n"
      "\t\t\tdefaultConfigurationName = Default;\n"
      "\t\t};\n") ;
    }
  }
  var_cas_ioString.writeString ("/* End XCConfigurationList section */\n") ;
  var_cas_ioString.writeString ("\t};\n"
  "\trootObject = ") ;
  var_cas_ioString._dotAssign_operation (mRootObjectKey) ;
  var_cas_ioString.writeString (" /* Project object */ ;\n"
  "}\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_rootObject::
appendForDescription (C_Compiler & _inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_rootObject:"
           << mProjectName.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mRootObjectKey.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mGroupList.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mMainGroupKey.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mBuildConfigurationList.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mTargetList.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mProjectDefaultConfigurationKey.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mPBXFileReference_list.reader_description  (_inLexique COMMA_THERE, inIndentation + 1)
           << mPBXSourcesBuildPhase_list.reader_description  (_inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_rootObject::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_rootObject::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_rootObject (& typeid (cPtr_Xcode_rootObject), NULL
, "") ;
//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_rootObject::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_rootObject ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_Xcode_rootObject'                     *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_rootObject::
GGS_Xcode_rootObject (cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_rootObject::
GGS_Xcode_rootObject (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- _castFrom class method (implements cast expression)
GGS_Xcode_rootObject GGS_Xcode_rootObject::
_castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_rootObject _result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_rootObject *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_rootObject) == typeid (*inPointer)) ;
    if (ok) {
      _result = GGS_Xcode_rootObject (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_rootObject),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return _result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_rootObject GGS_Xcode_rootObject::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0,
                 const GGS_string& argument_1,
                 const GGS_Xcode_PBXGroup_list & argument_2,
                 const GGS_string& argument_3,
                 const GGS_Xcode_XCBuildConfiguration_list & argument_4,
                 const GGS_Xcode_PBXNativeTarget_list & argument_5,
                 const GGS_string& argument_6,
                 const GGS_Xcode_PBXFileReference_list & argument_7,
                 const GGS_Xcode_PBXSourcesBuildPhase_list & argument_8
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_rootObject result ;
  macroMyNew (result.mPointer, cPtr_Xcode_rootObject (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7,
                                argument_8 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_rootObject::
reader_mProjectName (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_rootObject *) mPointer)->mProjectName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_rootObject::
reader_mRootObjectKey (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_rootObject *) mPointer)->mRootObjectKey ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list  GGS_Xcode_rootObject::
reader_mGroupList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_PBXGroup_list   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_rootObject *) mPointer)->mGroupList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_rootObject::
reader_mMainGroupKey (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_rootObject *) mPointer)->mMainGroupKey ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list  GGS_Xcode_rootObject::
reader_mBuildConfigurationList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_XCBuildConfiguration_list   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_rootObject *) mPointer)->mBuildConfigurationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list  GGS_Xcode_rootObject::
reader_mTargetList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_PBXNativeTarget_list   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_rootObject *) mPointer)->mTargetList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_rootObject::
reader_mProjectDefaultConfigurationKey (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_rootObject *) mPointer)->mProjectDefaultConfigurationKey ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_list  GGS_Xcode_rootObject::
reader_mPBXFileReference_list (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_PBXFileReference_list   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_rootObject *) mPointer)->mPBXFileReference_list ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list  GGS_Xcode_rootObject::
reader_mPBXSourcesBuildPhase_list (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_PBXSourcesBuildPhase_list   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_rootObject *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_rootObject *) mPointer)->mPBXSourcesBuildPhase_list ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_rootObject::actualTypeName (void) const {
  return "Xcode_rootObject" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_rootObject::_galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_rootObject ("Xcode_rootObject") ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "generateXcodeProject"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateXcodeProject (C_Compiler & _inLexique,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_string  var_cas_in_pbxproj_filePath COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateXcodeProject at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_Xcode_PBXGroup_list  var_cas_groupList ;
  var_cas_groupList = GGS_Xcode_PBXGroup_list ::constructor_emptyList () ;
  GGS_Xcode_XCBuildConfiguration_list  var_cas_buildConfigurationList ;
  var_cas_buildConfigurationList = GGS_Xcode_XCBuildConfiguration_list ::constructor_emptyList () ;
  GGS_Xcode_PBXNativeTarget_list  var_cas_targetList ;
  var_cas_targetList = GGS_Xcode_PBXNativeTarget_list ::constructor_emptyList () ;
  GGS_stringlist  var_cas_mainGroupChildrenList ;
  var_cas_mainGroupChildrenList = GGS_stringlist ::constructor_emptyList () ;
  GGS_stringlist  var_cas_productGroupChildrenList ;
  var_cas_productGroupChildrenList = GGS_stringlist ::constructor_emptyList () ;
  GGS_Xcode_PBXFileReference_list  var_cas_PBXFileReferenceList ;
  var_cas_PBXFileReferenceList = GGS_Xcode_PBXFileReference_list ::constructor_emptyList () ;
  GGS_Xcode_PBXSourcesBuildPhase_list  var_cas_PBXSourcesBuildPhase_list ;
  var_cas_PBXSourcesBuildPhase_list = GGS_Xcode_PBXSourcesBuildPhase_list ::constructor_emptyList () ;
  GGS_Xcode_PBXFileReference_CompiledMachOExecutable  var_cas_toolFileReference ;
  var_cas_toolFileReference = GGS_Xcode_PBXFileReference_CompiledMachOExecutable ::constructor_new (_inLexique, var_cas_inProjectName COMMA_HERE) ;
  var_cas_PBXFileReferenceList._addAssign_operation (var_cas_toolFileReference) ;
  var_cas_productGroupChildrenList._addAssign_operation (var_cas_toolFileReference.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (276))) ;
  GGS_Xcode_PBXSourcesBuildPhase  var_cas_compileSourcesForToolTargetBuildPhase ;
  var_cas_compileSourcesForToolTargetBuildPhase = GGS_Xcode_PBXSourcesBuildPhase ::constructor_new (_inLexique, GGS_string (true, "Sources"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_PBXSourcesBuildPhase_list._addAssign_operation (var_cas_compileSourcesForToolTargetBuildPhase) ;
  GGS_Xcode_XCBuildConfiguration  var_cas_toolTargetBuildConfiguration ;
  var_cas_toolTargetBuildConfiguration = GGS_Xcode_XCBuildConfiguration ::constructor_new (_inLexique, GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_buildConfigurationList._addAssign_operation (var_cas_toolTargetBuildConfiguration) ;
  var_cas_targetList._addAssign_operation (GGS_uint ::constructor_sequenceNumber (_inLexique COMMA_HERE).reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (288)).reader_md5 (_inLexique COMMA_SOURCE_FILE_AT_LINE (288)).reader_rightSubString (_inLexique, GGS_uint (true, 24U) COMMA_SOURCE_FILE_AT_LINE (288)), var_cas_inProjectName, var_cas_toolTargetBuildConfiguration.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (290)), GGS_string (true, "$(HOME)/bin"), var_cas_inProjectName, var_cas_toolFileReference.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (293)), GGS_string (true, "tool"), GGS_Xcode_PBXSourcesBuildPhase_list ::constructor_listWithValue (var_cas_compileSourcesForToolTargetBuildPhase)) ;
  GGS_Xcode_PBXGroup  var_cas_generatedByGalgasGroup ;
  var_cas_generatedByGalgasGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Generated by GALGAS"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_generatedByGalgasGroup) ;
  var_cas_mainGroupChildrenList._addAssign_operation (var_cas_generatedByGalgasGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (301))) ;
  GGS_Xcode_PBXGroup  var_cas_handCodedSourcesGroup ;
  var_cas_handCodedSourcesGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Hand Coded Sources"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_handCodedSourcesGroup) ;
  var_cas_mainGroupChildrenList._addAssign_operation (var_cas_handCodedSourcesGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (305))) ;
  GGS_stringlist  var_cas_libpmGroupChildrenList ;
  var_cas_libpmGroupChildrenList = GGS_stringlist ::constructor_emptyList () ;
  GGS_Xcode_PBXGroup  var_cas_cachesSubGroup ;
  var_cas_cachesSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Caches"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_cachesSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_cachesSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (311))) ;
  GGS_Xcode_PBXGroup  var_cas_bddSubGroup ;
  var_cas_bddSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Binary Decision Diagrams"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_bddSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_bddSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (315))) ;
  GGS_Xcode_PBXGroup  var_cas_collectionSubGroup ;
  var_cas_collectionSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Collections"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_collectionSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_collectionSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (319))) ;
  GGS_Xcode_PBXGroup  var_cas_cocoaGALGASSubGroup ;
  var_cas_cocoaGALGASSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Cocoa GALGAS"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_cocoaGALGASSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_cocoaGALGASSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (323))) ;
  GGS_Xcode_PBXGroup  var_cas_cocoaUtilitiesSubGroup ;
  var_cas_cocoaUtilitiesSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Cocoa Utilities"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_cocoaUtilitiesSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_cocoaUtilitiesSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (327))) ;
  GGS_Xcode_PBXGroup  var_cas_commandLineInterfaceSubGroup ;
  var_cas_commandLineInterfaceSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Command Line Interface"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_commandLineInterfaceSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_commandLineInterfaceSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (331))) ;
  GGS_Xcode_PBXGroup  var_cas_filesSubGroup ;
  var_cas_filesSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Files"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_filesSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_filesSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (335))) ;
  GGS_Xcode_PBXGroup  var_cas_GALGASSubGroup ;
  var_cas_GALGASSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "GALGAS"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_GALGASSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_GALGASSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (339))) ;
  GGS_Xcode_PBXGroup  var_cas_streamsSubGroup ;
  var_cas_streamsSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Streams"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_streamsSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_streamsSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (343))) ;
  GGS_Xcode_PBXGroup  var_cas_timeSubGroup ;
  var_cas_timeSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Time"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_timeSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_timeSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (347))) ;
  GGS_Xcode_PBXGroup  var_cas_tinyXMLSubGroup ;
  var_cas_tinyXMLSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Tiny XML"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_tinyXMLSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_tinyXMLSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (351))) ;
  GGS_Xcode_PBXGroup  var_cas_unicodeSubGroup ;
  var_cas_unicodeSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Unicode"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_unicodeSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_unicodeSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (355))) ;
  GGS_Xcode_PBXGroup  var_cas_utilitiesSubGroup ;
  var_cas_utilitiesSubGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Utilities"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_utilitiesSubGroup) ;
  var_cas_libpmGroupChildrenList._addAssign_operation (var_cas_utilitiesSubGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (359))) ;
  GGS_Xcode_PBXGroup  var_cas_libpmGroup ;
  var_cas_libpmGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "LIBPM"), var_cas_libpmGroupChildrenList COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_libpmGroup) ;
  var_cas_mainGroupChildrenList._addAssign_operation (var_cas_libpmGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (363))) ;
  GGS_Xcode_PBXGroup  var_cas_resourcesGroup ;
  var_cas_resourcesGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Resources"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_resourcesGroup) ;
  var_cas_mainGroupChildrenList._addAssign_operation (var_cas_resourcesGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (367))) ;
  GGS_Xcode_PBXGroup  var_cas_frameworksGroup ;
  var_cas_frameworksGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Frameworks"), GGS_stringlist ::constructor_emptyList () COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_frameworksGroup) ;
  var_cas_mainGroupChildrenList._addAssign_operation (var_cas_frameworksGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (371))) ;
  GGS_Xcode_PBXGroup  var_cas_productsGroup ;
  var_cas_productsGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, "Products"), var_cas_productGroupChildrenList COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_productsGroup) ;
  var_cas_mainGroupChildrenList._addAssign_operation (var_cas_productsGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (375))) ;
  GGS_Xcode_PBXGroup  var_cas_mainGroup ;
  var_cas_mainGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, ""), var_cas_mainGroupChildrenList COMMA_HERE) ;
  var_cas_groupList._addAssign_operation (var_cas_mainGroup) ;
  GGS_stringlist  var_cas_projectDefaultSettings ;
  var_cas_projectDefaultSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "ALWAYS_SEARCH_USER_PATHS = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "ARCHS = (ppc, i386,);")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_DEBUGGING_SYMBOLS = default;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_GENERATE_DEBUGGING_SYMBOLS = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_PRECOMPILE_PREFIX_HEADER = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_THREADSAFE_STATICS = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_TREAT_NONCONFORMANT_CODE_ERRORS_AS_WARNINGS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_TREAT_WARNINGS_AS_ERRORS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_64_TO_32_BIT_CONVERSION = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_ABOUT_MISSING_NEWLINE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_ABOUT_RETURN_TYPE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_CHECK_SWITCH_STATEMENTS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_EFFECTIVE_CPLUSPLUS_VIOLATIONS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_FOUR_CHARACTER_CONSTANTS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_INHIBIT_ALL_WARNINGS = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_MISSING_PARENTHESES = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_PEDANTIC = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_PROTOTYPE_CONVERSION = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_SHADOW = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_SIGN_COMPARE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_TYPECHECK_CALLS_TO_PRINTF = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNINITIALIZED_AUTOS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNKNOWN_PRAGMAS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_FUNCTION = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_LABEL = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_PARAMETER = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_VALUE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_VARIABLE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "HEADER_SEARCH_PATHS = (../galgas_sources/GALGAS_OUTPUT, ../hand_coded_sources, ../../libpm,);")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "PREBINDING = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;")) ;
  GGS_Xcode_XCBuildConfiguration  var_cas_defaultProjectConfiguration ;
  var_cas_defaultProjectConfiguration = GGS_Xcode_XCBuildConfiguration ::constructor_new (_inLexique, var_cas_projectDefaultSettings COMMA_HERE) ;
  var_cas_buildConfigurationList._addAssign_operation (var_cas_defaultProjectConfiguration) ;
  GGS_Xcode_rootObject  var_cas_p ;
  var_cas_p = GGS_Xcode_rootObject ::constructor_new (_inLexique, var_cas_inProjectName, GGS_string (true, "project").reader_md5 (_inLexique COMMA_SOURCE_FILE_AT_LINE (424)).reader_rightSubString (_inLexique, GGS_uint (true, 24U) COMMA_SOURCE_FILE_AT_LINE (424)), var_cas_groupList, var_cas_mainGroup.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (426)), var_cas_buildConfigurationList, var_cas_targetList, var_cas_defaultProjectConfiguration.reader_key (_inLexique COMMA_SOURCE_FILE_AT_LINE (429)), var_cas_PBXFileReferenceList, var_cas_PBXSourcesBuildPhase_list COMMA_HERE) ;
  GGS_string var_cas_fileNewContents ;
  const GGS_Xcode_rootObject  _temp_19045 = var_cas_p ;
  if (_temp_19045._isBuilt ()) {
    _temp_19045 (HERE)->method_build (_inLexique, var_cas_fileNewContents COMMA_SOURCE_FILE_AT_LINE (435)) ;
  }
  const GGS_string _temp_19173 = var_cas_in_pbxproj_filePath.reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (438)) ;
  if (_temp_19173._isBuilt ()) {
    _temp_19173 (HERE)->method_makeDirectory (_inLexique COMMA_SOURCE_FILE_AT_LINE (438)) ;
  }
  const GGS_string _temp_19228 = var_cas_fileNewContents ;
  if (_temp_19228._isBuilt ()) {
    _temp_19228 (HERE)->method_writeToFileWhenDifferentContents (_inLexique, var_cas_in_pbxproj_filePath COMMA_SOURCE_FILE_AT_LINE (439)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateXcodeProject\n") ;
  #endif
}

//---------------------------------------------------------------------------*

