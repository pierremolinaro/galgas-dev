//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'XcodeProjectGeneration.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 11th, 2010, at 16h53'7"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "XcodeProjectGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "XcodeProjectGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_BDD_group"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Descriptor") COMMA_SOURCE_FILE_AT_LINE (15)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Set1") COMMA_SOURCE_FILE_AT_LINE (16)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Set2") COMMA_SOURCE_FILE_AT_LINE (17)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Set3") COMMA_SOURCE_FILE_AT_LINE (18)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD") COMMA_SOURCE_FILE_AT_LINE (19)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-find-or-add.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-and-operation.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-single-operand-ops.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-node.h")) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_Display_BDD") COMMA_SOURCE_FILE_AT_LINE (24)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (26)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_BDD_source_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_source_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_source_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Descriptor.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Set1.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Set2.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Set3.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-find-or-add.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-and-operation.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-single-operand-ops.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_Display_BDD.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (50)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_source_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "getGALGAS_2_source_file_list"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGALGAS_2_source_file_list (C_CompilerEx &,
                                GGS_stringlist  & var_cas_out_fileList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getGALGAS_2_source_file_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_out_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("enumComparisonResult.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_Compiler.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_Compiler.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_Lexique.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_Lexique.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("scanner_actions.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("scanner_actions.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_io.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_io.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_LocationInSource.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_LocationInSource.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_SourceTextInString.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cCollectionElement.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cCollectionElement.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capCollectionElementArray.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capCollectionElementArray.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_function_descriptor.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_function_descriptor.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_class_inspector.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_class_inspector.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_type_descriptor.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_type_descriptor.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_CLI_Options.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_CLI_Options.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cGenericAbstractEnumerator.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cGenericAbstractEnumerator.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capSortedListElement.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capSortedListElement.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capCollectionElement.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capCollectionElement.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cObjectArray.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cObjectArray.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cSortedListElement.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cSortedListElement.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_root.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_root.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_list.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_list.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_sortedlist.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_sortedlist.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_map.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_map.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_class.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_class.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("acPtr_class.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("acPtr_class.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cPtr_object.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cPtr_object.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_application.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_binaryset.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_bool.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_char.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_data.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_double.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_filewrapper.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_function.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_location.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_object.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_sint.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_sint_36__34_.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_string.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_stringset.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_type.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_uint.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_uint_36__34_.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("predefined-types.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("predefined-types.h")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getGALGAS_2_source_file_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "getGALGAS_source_file_list"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGALGAS_source_file_list (C_CompilerEx &,
                                GGS_stringlist  & var_cas_out_cpp_and_h_fileList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getGALGAS_source_file_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_out_cpp_and_h_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_CompilerEx")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_LexiqueEx")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("PM_C_Array")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("PM_C_Dictionary")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("PM_C_Object")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_listmap")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_map")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_list")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_sortedlist")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_mapindex")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_domain")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_class")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("scanner_actionsEx")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("galgas_introspection")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("predefined_types")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_binaryset")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_stringset")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_filewrapper")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lsint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_luint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_sint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_uint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_double")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_sint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_bool")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_char")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_string")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_uint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_data")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_location")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_ldouble")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lsint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lbool")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lchar")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lstring")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_luint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_type")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_object")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_function")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_application")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS__root")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getGALGAS_source_file_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_GALGAS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (188)) ;
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_7430 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_7430 = NULL ;
    while (((operand_7430 = enumerator_7430.nextObject ()))) {
      macroValidPointer (operand_7430) ;
      ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  operand_7430->mValue COMMA_SOURCE_FILE_AT_LINE (191)) ;
    }
  }
  var_cas_fileList.addAssign_operation (GGS_string ("PP_GalgasPrefix.pch")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (195)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_GALGAS_2_group"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_2_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_2_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  ::routine_getGALGAS_2_source_file_list (inLexique,  var_cas_fileList COMMA_SOURCE_FILE_AT_LINE (209)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (211)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_2_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_GALGAS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (225)) ;
  GGS_stringlist  var_cas_cppFileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_8445 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_8445 = NULL ;
    while (((operand_8445 = enumerator_8445.nextObject ()))) {
      macroValidPointer (operand_8445) ;
      var_cas_cppFileList.addAssign_operation ((operand_8445->mValue).operator_concat (GGS_string (".cpp"))) ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cppFileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (231)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_GALGAS_2_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  ::routine_getGALGAS_2_source_file_list (inLexique,  var_cas_fileList COMMA_SOURCE_FILE_AT_LINE (245)) ;
  GGS_stringlist  var_cas_cppFileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_9006 (var_cas_fileList, true) ;
    const GGS_stringlist::cElement * operand_9006 = NULL ;
    while (((operand_9006 = enumerator_9006.nextObject ()))) {
      macroValidPointer (operand_9006) ;
      const GGS_bool cond_9092 = (operand_9006->mValue.reader_pathExtension ()).operator_isEqual (GGS_string ("cpp")) ;
      if (cond_9092.isBuiltAndTrue ()) {
        var_cas_cppFileList.addAssign_operation (operand_9006->mValue) ;
      }
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cppFileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (253)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COCOA_GALGAS_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_GALGAS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("NSSplitViewExtensions") COMMA_SOURCE_FILE_AT_LINE (267)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMFontButton") COMMA_SOURCE_FILE_AT_LINE (268)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_Token") COMMA_SOURCE_FILE_AT_LINE (269)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_Lexique") COMMA_SOURCE_FILE_AT_LINE (270)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_BuildWindowController") COMMA_SOURCE_FILE_AT_LINE (271)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_CommandLineOption") COMMA_SOURCE_FILE_AT_LINE (272)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("enterDefaultCommandLineOptions") COMMA_SOURCE_FILE_AT_LINE (273)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_Document") COMMA_SOURCE_FILE_AT_LINE (274)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_PreferencesController") COMMA_SOURCE_FILE_AT_LINE (275)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_RulerViewForCompileMessageView") COMMA_SOURCE_FILE_AT_LINE (276)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_RulerViewForTextView") COMMA_SOURCE_FILE_AT_LINE (277)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_TextView") COMMA_SOURCE_FILE_AT_LINE (278)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_DelegateForSyntaxColoring") COMMA_SOURCE_FILE_AT_LINE (279)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_BuildResultTextView") COMMA_SOURCE_FILE_AT_LINE (280)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_ErrorOrWarningDescriptor") COMMA_SOURCE_FILE_AT_LINE (281)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_ScrollToEndArrow.gif")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Action.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_SaveAs.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Stop.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Window.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Orange14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Red14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_CocoaWrapperForGalgas.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PP_CocoaGalgasPrefix.pch")) ;
  ::routine_enter_xib_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("MainMenu.xib"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (292)) ;
  ::routine_enter_xib_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("OC_GGS_Document.xib"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (298)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (305)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COCOA_DEBUG_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_DEBUG_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_DEBUG_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMCocoaCallsDebug.h")) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMArrayControllerDebugCategory") COMMA_SOURCE_FILE_AT_LINE (321)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMArrayDebugCategory") COMMA_SOURCE_FILE_AT_LINE (322)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMDictionaryDebugCategory") COMMA_SOURCE_FILE_AT_LINE (323)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableArrayDebugCategory") COMMA_SOURCE_FILE_AT_LINE (324)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableDictionaryDebugCategory") COMMA_SOURCE_FILE_AT_LINE (325)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableSetDebugCategory") COMMA_SOURCE_FILE_AT_LINE (326)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableStringDebugCategory") COMMA_SOURCE_FILE_AT_LINE (327)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMPointerArrayDebugCategory") COMMA_SOURCE_FILE_AT_LINE (328)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMSetDebugCategory") COMMA_SOURCE_FILE_AT_LINE (329)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (331)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_DEBUG_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "build_LIBPM_COCOA_UTILITIES_group"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_UTILITIES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("main.m")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (347)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_FILES_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_HTML_FileWrite") COMMA_SOURCE_FILE_AT_LINE (361)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_TextFileWrite") COMMA_SOURCE_FILE_AT_LINE (362)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (364)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_FILES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_HTML_FileWrite.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_TextFileWrite.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (381)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_group"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_CommandLineOption") COMMA_SOURCE_FILE_AT_LINE (395)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BoolCommandLineOption") COMMA_SOURCE_FILE_AT_LINE (396)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_UIntCommandLineOption") COMMA_SOURCE_FILE_AT_LINE (397)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_StringCommandLineOption") COMMA_SOURCE_FILE_AT_LINE (398)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_builtin_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (399)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("F_Analyze_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (400)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_main.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("mainForLIBPM.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (404)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_builtin_CLI_Options.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_CommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BoolCommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_UIntCommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_StringCommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_Analyze_CLI_Options.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_main.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (426)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COLLECTIONS_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COLLECTIONS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COLLECTIONS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_AVL_TreeForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_Array.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_Array2.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_BlockBinaryTreeForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_Block_AVL_TreeForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_FixedSizeArray.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_HashMap.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_LinearListForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_UniqueArray.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_UniqueArray2.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_UniqueFixedSizeArray.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_AVL_Tree.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (453)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COLLECTIONS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_PROJECT_RESOURCES_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_PROJECT_RESOURCES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringlist   var_cas_inIconFiles,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_PROJECT_RESOURCES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = var_cas_inIconFiles ;
  var_cas_fileList.addAssign_operation (GGS_string ("Info.plist")) ;
  ::routine_enter_xib_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("Credits.rtf"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (470)) ;
  ::routine_enter_plist_strings_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("InfoPlist.strings"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (476)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (483)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_PROJECT_RESOURCES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_STRINGS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STRINGS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STRINGS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_String") COMMA_SOURCE_FILE_AT_LINE (497)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("unicode_character_cpp") COMMA_SOURCE_FILE_AT_LINE (498)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("unicode_string_routines") COMMA_SOURCE_FILE_AT_LINE (499)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("unicode_character_m") COMMA_SOURCE_FILE_AT_LINE (500)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("cUnicodeData.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (503)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STRINGS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_STRINGS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STRINGS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STRINGS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_String.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("unicode_character_cpp.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("unicode_string_routines.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (521)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STRINGS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "build_LIBPM_UTILITIES_group"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_SharedObject") COMMA_SOURCE_FILE_AT_LINE (535)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("md5") COMMA_SOURCE_FILE_AT_LINE (536)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("F_GetPrime") COMMA_SOURCE_FILE_AT_LINE (537)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("F_DisplayException") COMMA_SOURCE_FILE_AT_LINE (538)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("MF_Assert") COMMA_SOURCE_FILE_AT_LINE (539)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("cpp-allocation") COMMA_SOURCE_FILE_AT_LINE (540)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("basic-allocation") COMMA_SOURCE_FILE_AT_LINE (541)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("MF_MemoryControl") COMMA_SOURCE_FILE_AT_LINE (542)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_PrologueEpilogue") COMMA_SOURCE_FILE_AT_LINE (543)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("M_SourceLocation.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_inf.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_sup.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_Swap.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (549)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_UTILITIES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_SharedObject.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_PrologueEpilogue.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("md5.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_GetPrime.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_DisplayException.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("MF_Assert.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("MF_MemoryControl.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("cpp-allocation.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("basic-allocation.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (573)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_STREAMS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_ErrorOut") COMMA_SOURCE_FILE_AT_LINE (587)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("AC_OutputStream") COMMA_SOURCE_FILE_AT_LINE (588)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_ConsoleOut") COMMA_SOURCE_FILE_AT_LINE (589)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (591)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_STREAMS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_ErrorOut.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("AC_OutputStream.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_ConsoleOut.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (609)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_TIME_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_DateTime") COMMA_SOURCE_FILE_AT_LINE (623)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_Timer") COMMA_SOURCE_FILE_AT_LINE (624)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (626)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_TIME_files_for_sources_build_phase" *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_DateTime.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_Timer.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (643)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_GENERATED_BY_GALGAS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_21730 (var_cas_inComponentNameSet, true) ;
    while (enumerator_21730.hasCurrentObject ()) {
      var_cas_fileList.addAssign_operation ((enumerator_21730._key (HERE)).operator_concat (GGS_string (".cpp"))) ;
      enumerator_21730.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (662)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "build_GENERATED_BY_GALGAS_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                const GGS_stringset   var_cas_inGUISourceNameSet,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_22272 (var_cas_inComponentNameSet, true) ;
    while (enumerator_22272.hasCurrentObject ()) {
      ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  enumerator_22272._key (HERE) COMMA_SOURCE_FILE_AT_LINE (679)) ;
      enumerator_22272.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_22361 (var_cas_inGUISourceNameSet, true) ;
    while (enumerator_22361.hasCurrentObject ()) {
      var_cas_fileList.addAssign_operation ((enumerator_22361._key (HERE)).operator_concat (GGS_string (".m"))) ;
      enumerator_22361.next () ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (685)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_HAND_CODED_source_files_for_sources_tool_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_source_files_for_sources_tool_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_22880 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_22880.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_22880._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_23060 = ((((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("c")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_23060.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_22880._key (HERE)) ;
      }
      enumerator_22880.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (707)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_source_files_for_sources_tool_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_HAND_CODED_source_files_for_sources_cocoa_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_23569 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_23569.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_23569._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_23749 = ((((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("c")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_23749.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_23569._key (HERE)) ;
      }
      enumerator_23569.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (729)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_HAND_CODED_SOURCES_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_SOURCES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_SOURCES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_24232 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_24232.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_24232._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_24412 = ((((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("c")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_24412.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_24232._key (HERE)) ;
      }
      enumerator_24232.next () ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (751)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_SOURCES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_FRAMEWORKS_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_FRAMEWORKS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup,
                                const GGS_stringset   var_cas_inExternSourceForTool,
                                const GGS_stringset   var_cas_inExternSourceForApp
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_FRAMEWORKS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringset  var_cas_fileSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_fileSet.addAssign_operation (GGS_string ("AppKit.framework")) ;
  var_cas_fileSet.addAssign_operation (GGS_string ("Cocoa.framework")) ;
  {
    GGS_stringset::cEnumerator enumerator_24972 (var_cas_inExternSourceForTool, true) ;
    while (enumerator_24972.hasCurrentObject ()) {
      const GGS_bool cond_25054 = (enumerator_24972._key (HERE).reader_pathExtension ()).operator_isEqual (GGS_string ("framework")) ;
      if (cond_25054.isBuiltAndTrue ()) {
        var_cas_fileSet.addAssign_operation (enumerator_24972._key (HERE)) ;
      }
      enumerator_24972.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_25106 (var_cas_inExternSourceForApp, true) ;
    while (enumerator_25106.hasCurrentObject ()) {
      const GGS_bool cond_25188 = (enumerator_25106._key (HERE).reader_pathExtension ()).operator_isEqual (GGS_string ("framework")) ;
      if (cond_25188.isBuiltAndTrue ()) {
        var_cas_fileSet.addAssign_operation (enumerator_25106._key (HERE)) ;
      }
      enumerator_25106.next () ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileSet.reader_stringList (inLexique COMMA_SOURCE_FILE_AT_LINE (782)),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (780)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_FRAMEWORKS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of routine "build_FRAMEWORKS_for_frameworks_build_phase"   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_FRAMEWORKS_for_frameworks_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternFileSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_FRAMEWORKS_for_frameworks_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_25664 (var_cas_inExternFileSet, true) ;
    while (enumerator_25664.hasCurrentObject ()) {
      const GGS_bool cond_25747 = (enumerator_25664._key (HERE).reader_pathExtension ()).operator_isEqual (GGS_string ("framework")) ;
      if (cond_25747.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_25664._key (HERE)) ;
      }
      enumerator_25664.next () ;
    }
  }
  ::routine_enter_files_for_frameworks_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (801)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_FRAMEWORKS_for_frameworks_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of routine "build_RESOURCES_for_resources_build_phase"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_RESOURCES_for_resources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_stringlist   var_cas_inIconFiles,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_RESOURCES_for_resources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = var_cas_inIconFiles ;
  var_cas_fileList.addAssign_operation (var_cas_inProjectName) ;
  var_cas_fileList.addAssign_operation ((var_cas_inProjectName).operator_concat (GGS_string ("_debug"))) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_ScrollToEndArrow.gif")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Action.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_SaveAs.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Stop.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Window.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Orange14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Red14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("MainMenu.xib")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_Document.xib")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("InfoPlist.strings")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("Credits.rtf")) ;
  ::routine_enter_files_for_frameworks_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (831)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_RESOURCES_for_resources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_COCOA_APP_files_for_sources_build_phase"  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_COCOA_APP_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inGUISourceNameSet,
                                const GGS_stringset   /* var_cas_inScannerSourceNameSet */,
                                const GGS_stringset   /* var_cas_inOptionSourceNameSet */,
                                const GGS_stringset   var_cas_inExternSourceNameSet_app,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_COCOA_APP_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("main.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("NSSplitViewExtensions.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMFontButton.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_Token.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_Lexique.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("unicode_character_m.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_BuildWindowController.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_CommandLineOption.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("enterDefaultCommandLineOptions.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_Document.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_PreferencesController.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_RulerViewForTextView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_RulerViewForCompileMessageView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_TextView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_DelegateForSyntaxColoring.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_BuildResultTextView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_ErrorOrWarningDescriptor.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMArrayControllerDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMArrayDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMDictionaryDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableArrayDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableDictionaryDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableSetDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableStringDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMPointerArrayDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMSetDebugCategory.m")) ;
  {
    GGS_stringset::cEnumerator enumerator_28466 (var_cas_inGUISourceNameSet, true) ;
    while (enumerator_28466.hasCurrentObject ()) {
      var_cas_fileList.addAssign_operation ((enumerator_28466._key (HERE)).operator_concat (GGS_string (".m"))) ;
      enumerator_28466.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_28569 (var_cas_inExternSourceNameSet_app, true) ;
    while (enumerator_28569.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_28569._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_28749 = ((((var_cas_extension).operator_isEqual (GGS_string ("c"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("cpp")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_28749.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_28569._key (HERE)) ;
      }
      enumerator_28569.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (887)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_COCOA_APP_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "generateXcodeProject"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateXcodeProject (C_CompilerEx & inLexique,
                                const GGS_stringset   var_cas_inExternSourceNameSet_tool,
                                const GGS_stringset   var_cas_inGUISourceNameSet_tool,
                                const GGS_stringset   var_cas_inScannerSourceNameSet_tool,
                                const GGS_stringset   var_cas_inOptionSourceNameSet_tool,
                                const GGS_stringset   var_cas_inSemanticsSourceSet_tool,
                                const GGS_stringset   var_cas_inSyntaxSourceSet_tool,
                                const GGS_stringset   var_cas_inGrammarSourceSet_tool,
                                const GGS_stringset   var_cas_inProgramSourceSet_tool,
                                const GGS_stringset   var_cas_inExternSourceNameSet_app,
                                const GGS_stringset   var_cas_inGUISourceNameSet_app,
                                const GGS_stringset   var_cas_inScannerSourceNameSet_app,
                                const GGS_stringset   var_cas_inOptionSourceNameSet_app,
                                const GGS_stringset   var_cas_inSemanticsSourceSet_app,
                                const GGS_stringset   var_cas_inSyntaxSourceSet_app,
                                const GGS_stringset   var_cas_inGrammarSourceSet_app,
                                const GGS_stringset   var_cas_inProgramSourceSet_app,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_string  var_cas_in_xcodeproj_filePath,
                                const GGS_stringlist   var_cas_inIconFiles,
                                const GGS_string  var_cas_inReferenceFilePath,
                                const GGS_stringlist   var_cas_inArchitectureList,
                                const GGS_bool  var_cas_inGenerateCodeGalgas1
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateXcodeProject at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_XcodeProjectDescription var_cas_XcodeProjectDescription ;
  ::routine_initXcodeProjectDescription (inLexique,  var_cas_XcodeProjectDescription COMMA_SOURCE_FILE_AT_LINE (921)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_HAND_CODED_SOURCES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  GGS_stringset  var_cas_fileSet = (var_cas_inExternSourceNameSet_tool).operator_or (var_cas_inExternSourceNameSet_app) ;
  var_cas_fileSet.modifier_removeKey (inLexique, GGS_string ("AppKit.framework") COMMA_SOURCE_FILE_AT_LINE (926)) ;
  var_cas_fileSet.modifier_removeKey (inLexique, GGS_string ("Cocoa.framework") COMMA_SOURCE_FILE_AT_LINE (927)) ;
  ::routine_build_HAND_CODED_SOURCES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileSet,  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (928)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Hand Coded Sources"),  GGS_string ("../hand_coded_sources"),  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (934)) ;
  GGS_stringset  var_cas_componentNameSet_tool = (((((var_cas_inScannerSourceNameSet_tool).operator_or (var_cas_inOptionSourceNameSet_tool)).operator_or (var_cas_inSemanticsSourceSet_tool)).operator_or (var_cas_inSyntaxSourceSet_tool)).operator_or (var_cas_inGrammarSourceSet_tool)).operator_or (var_cas_inProgramSourceSet_tool) ;
  GGS_stringset  var_cas_componentNameSet_app = (((((var_cas_inScannerSourceNameSet_app).operator_or (var_cas_inOptionSourceNameSet_app)).operator_or (var_cas_inSemanticsSourceSet_app)).operator_or (var_cas_inSyntaxSourceSet_app)).operator_or (var_cas_inGrammarSourceSet_app)).operator_or (var_cas_inProgramSourceSet_app) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_GENERATED_BY_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_GENERATED_BY_GALGAS_group (inLexique,  var_cas_XcodeProjectDescription,  (var_cas_componentNameSet_tool).operator_or (var_cas_componentNameSet_app),  (var_cas_inGUISourceNameSet_tool).operator_or (var_cas_inGUISourceNameSet_app),  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (952)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Generated by GALGAS"),  GGS_string ("../galgas_sources/GALGAS_OUTPUT"),  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (959)) ;
  GGS_XcodeObjectReferenceList  var_cas_libpmGroupChildrenList = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_BDD_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_BDD_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_BDD_group COMMA_SOURCE_FILE_AT_LINE (969)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Binary Decision Diagrams"),  GGS_string ("bdd"),  var_cas_fileListOf_LIBPM_BDD_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (974)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_DEBUG_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_DEBUG_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_DEBUG_group COMMA_SOURCE_FILE_AT_LINE (983)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Cocoa Debug"),  GGS_string ("cocoa_debug"),  var_cas_fileListOf_LIBPM_COCOA_DEBUG_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (987)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_GALGAS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (996)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Cocoa GALGAS"),  GGS_string ("cocoa_galgas"),  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1000)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_UTILITIES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (1009)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Cocoa Utilities"),  GGS_string ("cocoa_utilities"),  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1013)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COLLECTIONS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COLLECTIONS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COLLECTIONS_group COMMA_SOURCE_FILE_AT_LINE (1022)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Collections"),  GGS_string ("collections"),  var_cas_fileListOf_LIBPM_COLLECTIONS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1027)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group COMMA_SOURCE_FILE_AT_LINE (1036)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Command Line Interface"),  GGS_string ("command_line_interface"),  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1041)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_FILE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_FILES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_FILE_group COMMA_SOURCE_FILE_AT_LINE (1050)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Files"),  GGS_string ("files"),  var_cas_fileListOf_LIBPM_FILE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1055)) ;
  const GGS_bool cond_34667 = var_cas_inGenerateCodeGalgas1 ;
  if (cond_34667.isBuiltAndTrue ()) {
    GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
    ::routine_build_LIBPM_GALGAS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (1065)) ;
    ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("GALGAS"),  GGS_string ("galgas"),  var_cas_fileListOf_LIBPM_GALGAS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1070)) ;
  }
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_GALGAS_2_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_GALGAS_2_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_GALGAS_2_group COMMA_SOURCE_FILE_AT_LINE (1080)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("GALGAS 2"),  GGS_string ("galgas2"),  var_cas_fileListOf_LIBPM_GALGAS_2_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1085)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_STREAMS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_STREAMS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_STREAMS_group COMMA_SOURCE_FILE_AT_LINE (1094)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Streams"),  GGS_string ("streams"),  var_cas_fileListOf_LIBPM_STREAMS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1099)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_TIME_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_TIME_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_TIME_group COMMA_SOURCE_FILE_AT_LINE (1108)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Time"),  GGS_string ("time"),  var_cas_fileListOf_LIBPM_TIME_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1113)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_UTILITIES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (1122)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Utilities"),  GGS_string ("utilities"),  var_cas_fileListOf_LIBPM_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1127)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_STRINGS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_STRINGS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_STRINGS_group COMMA_SOURCE_FILE_AT_LINE (1136)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Strings"),  GGS_string ("strings"),  var_cas_fileListOf_LIBPM_STRINGS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1141)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("LIBPM"),  GGS_string ("libpm"),  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1149)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_PROJECT_RESOURCES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_PROJECT_RESOURCES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inIconFiles,  var_cas_fileListOf_PROJECT_RESOURCES_group COMMA_SOURCE_FILE_AT_LINE (1157)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Project Resources"),  GGS_string (""),  var_cas_fileListOf_PROJECT_RESOURCES_group COMMA_SOURCE_FILE_AT_LINE (1162)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_FRAMEWORKS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_FRAMEWORKS_group,  var_cas_inExternSourceNameSet_tool,  var_cas_inExternSourceNameSet_app COMMA_SOURCE_FILE_AT_LINE (1170)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Frameworks"),  GGS_string ("/System/Library/Frameworks"),  var_cas_fileListOf_FRAMEWORKS_group COMMA_SOURCE_FILE_AT_LINE (1177)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1186)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_componentNameSet_tool,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1192)) ;
  ::routine_build_LIBPM_BDD_source_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1198)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1203)) ;
  ::routine_build_LIBPM_FILES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1208)) ;
  const GGS_bool cond_38444 = var_cas_inGenerateCodeGalgas1 ;
  if (cond_38444.isBuiltAndTrue ()) {
    ::routine_build_LIBPM_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1214)) ;
  }
  ::routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1220)) ;
  ::routine_build_LIBPM_STREAMS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1225)) ;
  ::routine_build_LIBPM_TIME_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1230)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1235)) ;
  ::routine_build_LIBPM_STRINGS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1240)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForFrameworksBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1246)) ;
  GGS_stringlist  var_cas_toolTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_toolTargetSettings.addAssign_operation (GGS_string ("GCC_OPTIMIZATION_LEVEL = 2;")) ;
  GGS_string var_cas_toolTargetKey ;
  ::routine_add_tool_target (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inProjectName,  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()).operator_concat (GGS_string (" Tool")),  var_cas_toolTargetSettings,  GGS_string ("libpm/galgas/PP_GalgasPrefix.pch"),  var_cas_listForSourceBuildPhaseOfTool,  var_cas_listForFrameworksBuildPhaseOfTool,  GGS_stringlist ::constructor_emptyList (),  var_cas_toolTargetKey COMMA_SOURCE_FILE_AT_LINE (1256)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfDebugTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1270)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_componentNameSet_tool,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1276)) ;
  ::routine_build_LIBPM_BDD_source_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1282)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1287)) ;
  ::routine_build_LIBPM_FILES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1292)) ;
  const GGS_bool cond_41074 = var_cas_inGenerateCodeGalgas1 ;
  if (cond_41074.isBuiltAndTrue ()) {
    ::routine_build_LIBPM_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1298)) ;
  }
  ::routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1304)) ;
  ::routine_build_LIBPM_STREAMS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1309)) ;
  ::routine_build_LIBPM_TIME_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1314)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1319)) ;
  ::routine_build_LIBPM_STRINGS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1324)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfToolDebug = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForFrameworksBuildPhaseOfToolDebug COMMA_SOURCE_FILE_AT_LINE (1330)) ;
  GGS_stringlist  var_cas_debugToolTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_debugToolTargetSettings.addAssign_operation (GGS_string ("GCC_GENERATE_DEBUGGING_SYMBOLS = YES;")) ;
  var_cas_debugToolTargetSettings.addAssign_operation (GGS_string ("GCC_OPTIMIZATION_LEVEL = 0;")) ;
  var_cas_debugToolTargetSettings.addAssign_operation (GGS_string ("GCC_WARN_UNINITIALIZED_AUTOS = NO;")) ;
  GGS_string var_cas_toolDebugTargetKey ;
  ::routine_add_tool_target (inLexique,  var_cas_XcodeProjectDescription,  (var_cas_inProjectName).operator_concat (GGS_string ("_debug")),  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()).operator_concat (GGS_string (" Tool Debug")),  var_cas_debugToolTargetSettings,  GGS_string (""),  var_cas_listForSourceBuildPhaseOfDebugTool,  var_cas_listForFrameworksBuildPhaseOfToolDebug,  GGS_stringlist ::constructor_emptyList (),  var_cas_toolDebugTargetKey COMMA_SOURCE_FILE_AT_LINE (1342)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_COCOA_APP_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inGUISourceNameSet_app,  var_cas_inScannerSourceNameSet_app,  var_cas_inOptionSourceNameSet_app,  var_cas_inExternSourceNameSet_app,  var_cas_listForSourceBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1356)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  var_cas_fileSet = var_cas_inExternSourceNameSet_app ;
  var_cas_fileSet.addAssign_operation (GGS_string ("AppKit.framework")) ;
  var_cas_fileSet.addAssign_operation (GGS_string ("Cocoa.framework")) ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileSet,  var_cas_listForFrameworksBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1369)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForResourcesBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_RESOURCES_for_resources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inProjectName,  var_cas_inIconFiles,  var_cas_listForResourcesBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1376)) ;
  ::routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_app,  var_cas_listForResourcesBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1383)) ;
  GGS_stringlist  var_cas_directDependencyList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_directDependencyList.addAssign_operation (var_cas_toolTargetKey) ;
  var_cas_directDependencyList.addAssign_operation (var_cas_toolDebugTargetKey) ;
  GGS_stringlist  var_cas_cocoaAppTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cocoaAppTargetSettings.addAssign_operation (GGS_string ("GCC_OPTIMIZATION_LEVEL = 2;")) ;
  GGS_string automatic_var_44836_0 ;
  ::routine_add_app_target (inLexique,  var_cas_XcodeProjectDescription,  (GGS_string ("Cocoa")).operator_concat (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()),  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()).operator_concat (GGS_string (" Cocoa")),  var_cas_cocoaAppTargetSettings,  GGS_string ("libpm/cocoa_galgas/PP_CocoaGalgasPrefix.pch"),  GGS_string ("Info.plist"),  var_cas_listForSourceBuildPhaseOfCocoaApp,  var_cas_listForFrameworksBuildPhaseOfCocoaApp,  var_cas_listForResourcesBuildPhaseOfCocoaApp,  var_cas_directDependencyList,  automatic_var_44836_0 COMMA_SOURCE_FILE_AT_LINE (1396)) ;
  GGS_stringlist  var_cas_pathes = GGS_stringlist ::constructor_emptyList () ;
  var_cas_pathes.addAssign_operation (GGS_string ("../galgas_sources/GALGAS_OUTPUT")) ;
  var_cas_pathes.addAssign_operation (GGS_string ("libpm")) ;
  var_cas_pathes.addAssign_operation (GGS_string ("../hand_coded_sources/**")) ;
  GGS_stringlist  var_cas_projectDefaultSettings ;
  ::routine_enterProjectDefaultSettings (inLexique,  var_cas_pathes,  var_cas_inArchitectureList,  var_cas_projectDefaultSettings COMMA_SOURCE_FILE_AT_LINE (1415)) ;
  ::routine_generateXCodeFile (inLexique,  var_cas_XcodeProjectDescription,  var_cas_in_xcodeproj_filePath,  var_cas_projectDefaultSettings,  var_cas_inReferenceFilePath COMMA_SOURCE_FILE_AT_LINE (1422)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateXcodeProject\n") ;
  #endif
}

//---------------------------------------------------------------------------*

