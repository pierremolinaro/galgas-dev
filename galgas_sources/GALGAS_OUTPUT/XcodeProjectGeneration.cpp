//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'XcodeProjectGeneration.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      october 25th, 2010, at 22h5'2"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "XcodeProjectGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "XcodeProjectGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_BDD_group"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Descriptor") COMMA_SOURCE_FILE_AT_LINE (15)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Set1") COMMA_SOURCE_FILE_AT_LINE (16)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Set2") COMMA_SOURCE_FILE_AT_LINE (17)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Set3") COMMA_SOURCE_FILE_AT_LINE (18)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD") COMMA_SOURCE_FILE_AT_LINE (19)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-find-or-add.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-and-operation.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-single-operand-ops.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-node.h")) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_Display_BDD") COMMA_SOURCE_FILE_AT_LINE (24)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (26)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_BDD_source_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_source_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_source_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Descriptor.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Set1.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Set2.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Set3.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-find-or-add.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-and-operation.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD-single-operand-ops.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_Display_BDD.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (50)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_source_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of routine "getGALGAS_UTILITIES_source_file_list"      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGALGAS_UTILITIES_source_file_list (C_CompilerEx &,
                                GGS_stringlist  & var_cas_out_cpp_and_h_fileList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getGALGAS_UTILITIES_source_file_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_out_cpp_and_h_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_CompilerEx")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_LexiqueEx")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_galgas_io")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_LocationInSource")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_SourceTextInString")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getGALGAS_UTILITIES_source_file_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "getGALGAS_2_source_file_list"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGALGAS_2_source_file_list (C_CompilerEx &,
                                GGS_stringlist  & var_cas_out_fileList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getGALGAS_2_source_file_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_out_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("enumComparisonResult.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cCollectionElement.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cCollectionElement.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capCollectionElementArray.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capCollectionElementArray.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_function_descriptor.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_function_descriptor.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_type_descriptor.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("C_galgas_type_descriptor.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cGenericAbstractEnumerator.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cGenericAbstractEnumerator.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capSortedListElement.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capSortedListElement.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capCollectionElement.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("capCollectionElement.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cObjectArray.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cObjectArray.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cSortedListElement.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cSortedListElement.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_root.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_root.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_list.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_list.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_sortedlist.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_sortedlist.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_map.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_map.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_class.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("AC_GALGAS_class.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("acPtr_class.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("acPtr_class.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cPtr_object.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("cPtr_object.h")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_binaryset.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_bool.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_char.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_data.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_double.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_filewrapper.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_function.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_location.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_object.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_sint.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_sint_36__34_.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_string.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_stringset.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_type.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_uint.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("GALGAS_uint_36__34_.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("predefined-types.cpp")) ;
  var_cas_out_fileList.addAssign_operation (GGS_string ("predefined-types.h")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getGALGAS_2_source_file_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "getGALGAS_source_file_list"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGALGAS_source_file_list (C_CompilerEx &,
                                GGS_stringlist  & var_cas_out_cpp_and_h_fileList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getGALGAS_source_file_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_out_cpp_and_h_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("PM_C_Array")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("PM_C_Dictionary")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("PM_C_Object")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_listmap")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_map")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_list")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_sortedlist")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_mapindex")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_domain")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_GGS_class")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_galgas_CLI_Options")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("scanner_actions")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("galgas_introspection")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_galgas_class_inspector")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("predefined_types")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_binaryset")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_stringset")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_filewrapper")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lsint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_luint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_sint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_uint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_double")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_sint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_bool")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_char")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_string")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_uint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_data")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_location")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_ldouble")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lsint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lbool")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lchar")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lstring")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_luint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_type")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_object")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_function")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_system")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS__root")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getGALGAS_source_file_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_GALGAS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (185)) ;
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_7229 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_7229 = NULL ;
    while (((operand_7229 = enumerator_7229.nextObject ()))) {
      macroValidPointer (operand_7229) ;
      ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  operand_7229->mValue COMMA_SOURCE_FILE_AT_LINE (188)) ;
    }
  }
  var_cas_fileList.addAssign_operation (GGS_string ("PP_GalgasPrefix.pch")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (192)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_GALGAS_2_group"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_2_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_2_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  ::routine_getGALGAS_2_source_file_list (inLexique,  var_cas_fileList COMMA_SOURCE_FILE_AT_LINE (206)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (208)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_2_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_GALGAS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (222)) ;
  GGS_stringlist  var_cas_cppFileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_8244 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_8244 = NULL ;
    while (((operand_8244 = enumerator_8244.nextObject ()))) {
      macroValidPointer (operand_8244) ;
      var_cas_cppFileList.addAssign_operation ((operand_8244->mValue).operator_concat (GGS_string (".cpp"))) ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cppFileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (228)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_GALGAS_2_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  ::routine_getGALGAS_2_source_file_list (inLexique,  var_cas_fileList COMMA_SOURCE_FILE_AT_LINE (242)) ;
  GGS_stringlist  var_cas_cppFileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_8805 (var_cas_fileList, true) ;
    const GGS_stringlist::cElement * operand_8805 = NULL ;
    while (((operand_8805 = enumerator_8805.nextObject ()))) {
      macroValidPointer (operand_8805) ;
      const GGS_bool cond_8891 = (operand_8805->mValue.reader_pathExtension ()).operator_isEqual (GGS_string ("cpp")) ;
      if (cond_8891.isBuiltAndTrue ()) {
        var_cas_cppFileList.addAssign_operation (operand_8805->mValue) ;
      }
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cppFileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (250)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "build_LIBPM_GALGAS_UTILITIES_group"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_UTILITIES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_UTILITIES_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (264)) ;
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_9437 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_9437 = NULL ;
    while (((operand_9437 = enumerator_9437.nextObject ()))) {
      macroValidPointer (operand_9437) ;
      ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  operand_9437->mValue COMMA_SOURCE_FILE_AT_LINE (267)) ;
    }
  }
  var_cas_fileList.addAssign_operation (GGS_string ("galgas_header.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (271)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_UTILITIES_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (285)) ;
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_10062 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_10062 = NULL ;
    while (((operand_10062 = enumerator_10062.nextObject ()))) {
      macroValidPointer (operand_10062) ;
      var_cas_fileList.addAssign_operation ((operand_10062->mValue).operator_concat (GGS_string (".cpp"))) ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (291)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COCOA_GALGAS_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_GALGAS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("NSSplitViewExtensions") COMMA_SOURCE_FILE_AT_LINE (305)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMFontButton") COMMA_SOURCE_FILE_AT_LINE (306)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_Token") COMMA_SOURCE_FILE_AT_LINE (307)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_Lexique") COMMA_SOURCE_FILE_AT_LINE (308)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_BuildWindowController") COMMA_SOURCE_FILE_AT_LINE (309)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_CommandLineOption") COMMA_SOURCE_FILE_AT_LINE (310)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("enterDefaultCommandLineOptions") COMMA_SOURCE_FILE_AT_LINE (311)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_Document") COMMA_SOURCE_FILE_AT_LINE (312)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_PreferencesController") COMMA_SOURCE_FILE_AT_LINE (313)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_RulerViewForCompileMessageView") COMMA_SOURCE_FILE_AT_LINE (314)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_RulerViewForTextView") COMMA_SOURCE_FILE_AT_LINE (315)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_TextView") COMMA_SOURCE_FILE_AT_LINE (316)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_DelegateForSyntaxColoring") COMMA_SOURCE_FILE_AT_LINE (317)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_BuildResultTextView") COMMA_SOURCE_FILE_AT_LINE (318)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_ErrorOrWarningDescriptor") COMMA_SOURCE_FILE_AT_LINE (319)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_ScrollToEndArrow.gif")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Action.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_SaveAs.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Stop.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Window.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Orange14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Red14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_CocoaWrapperForGalgas.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PP_CocoaGalgasPrefix.pch")) ;
  ::routine_enter_xib_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("MainMenu.xib"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (330)) ;
  ::routine_enter_xib_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("OC_GGS_Document.xib"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (336)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (343)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COCOA_DEBUG_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_DEBUG_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_DEBUG_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMCocoaCallsDebug.h")) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMArrayControllerDebugCategory") COMMA_SOURCE_FILE_AT_LINE (359)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMArrayDebugCategory") COMMA_SOURCE_FILE_AT_LINE (360)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMDictionaryDebugCategory") COMMA_SOURCE_FILE_AT_LINE (361)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableArrayDebugCategory") COMMA_SOURCE_FILE_AT_LINE (362)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableDictionaryDebugCategory") COMMA_SOURCE_FILE_AT_LINE (363)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableSetDebugCategory") COMMA_SOURCE_FILE_AT_LINE (364)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableStringDebugCategory") COMMA_SOURCE_FILE_AT_LINE (365)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMPointerArrayDebugCategory") COMMA_SOURCE_FILE_AT_LINE (366)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMSetDebugCategory") COMMA_SOURCE_FILE_AT_LINE (367)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (369)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_DEBUG_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "build_LIBPM_COCOA_UTILITIES_group"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_UTILITIES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("main.m")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (385)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_FILES_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_HTML_FileWrite") COMMA_SOURCE_FILE_AT_LINE (399)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_TextFileWrite") COMMA_SOURCE_FILE_AT_LINE (400)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (402)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_FILES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_HTML_FileWrite.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_TextFileWrite.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (419)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_group"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_CommandLineOption") COMMA_SOURCE_FILE_AT_LINE (433)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BoolCommandLineOption") COMMA_SOURCE_FILE_AT_LINE (434)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_UIntCommandLineOption") COMMA_SOURCE_FILE_AT_LINE (435)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_StringCommandLineOption") COMMA_SOURCE_FILE_AT_LINE (436)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_builtin_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (437)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("F_Analyze_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (438)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_main.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("mainForLIBPM.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (442)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_builtin_CLI_Options.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_CommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BoolCommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_UIntCommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_StringCommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_Analyze_CLI_Options.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_main.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (464)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COLLECTIONS_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COLLECTIONS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COLLECTIONS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_AVL_TreeForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_Array.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_Array2.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_BlockBinaryTreeForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_Block_AVL_TreeForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_FixedSizeArray.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_HashMap.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_LinearListForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_UniqueArray.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_UniqueArray2.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_UniqueFixedSizeArray.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_AVL_Tree.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (491)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COLLECTIONS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_PROJECT_RESOURCES_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_PROJECT_RESOURCES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringlist   var_cas_inIconFiles,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_PROJECT_RESOURCES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = var_cas_inIconFiles ;
  var_cas_fileList.addAssign_operation (GGS_string ("Info.plist")) ;
  ::routine_enter_xib_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("Credits.rtf"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (508)) ;
  ::routine_enter_plist_strings_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("InfoPlist.strings"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (514)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (521)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_PROJECT_RESOURCES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_STRINGS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STRINGS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STRINGS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_String") COMMA_SOURCE_FILE_AT_LINE (535)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("unicode_character_cpp") COMMA_SOURCE_FILE_AT_LINE (536)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("unicode_string_routines") COMMA_SOURCE_FILE_AT_LINE (537)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("unicode_character_m") COMMA_SOURCE_FILE_AT_LINE (538)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("cUnicodeData.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (541)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STRINGS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_STRINGS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STRINGS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STRINGS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_String.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("unicode_character_cpp.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("unicode_string_routines.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (559)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STRINGS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "build_LIBPM_UTILITIES_group"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_SharedObject") COMMA_SOURCE_FILE_AT_LINE (573)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("md5") COMMA_SOURCE_FILE_AT_LINE (574)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("F_GetPrime") COMMA_SOURCE_FILE_AT_LINE (575)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("F_DisplayException") COMMA_SOURCE_FILE_AT_LINE (576)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("MF_Assert") COMMA_SOURCE_FILE_AT_LINE (577)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("cpp-allocation") COMMA_SOURCE_FILE_AT_LINE (578)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("basic-allocation") COMMA_SOURCE_FILE_AT_LINE (579)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("MF_MemoryControl") COMMA_SOURCE_FILE_AT_LINE (580)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_PrologueEpilogue") COMMA_SOURCE_FILE_AT_LINE (581)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("M_SourceLocation.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_inf.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_sup.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_Swap.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (587)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_UTILITIES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_SharedObject.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_PrologueEpilogue.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("md5.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_GetPrime.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_DisplayException.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("MF_Assert.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("MF_MemoryControl.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("cpp-allocation.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("basic-allocation.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (611)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_STREAMS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_ErrorOut") COMMA_SOURCE_FILE_AT_LINE (625)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("AC_OutputStream") COMMA_SOURCE_FILE_AT_LINE (626)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_ConsoleOut") COMMA_SOURCE_FILE_AT_LINE (627)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (629)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_STREAMS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_ErrorOut.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("AC_OutputStream.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_ConsoleOut.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (647)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_TIME_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_DateTime") COMMA_SOURCE_FILE_AT_LINE (661)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_Timer") COMMA_SOURCE_FILE_AT_LINE (662)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (664)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_TIME_files_for_sources_build_phase" *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_DateTime.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_Timer.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (681)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_GENERATED_BY_GALGAS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_22731 (var_cas_inComponentNameSet, true) ;
    while (enumerator_22731.hasCurrentObject ()) {
      var_cas_fileList.addAssign_operation ((enumerator_22731._key (HERE)).operator_concat (GGS_string (".cpp"))) ;
      enumerator_22731.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (700)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "build_GENERATED_BY_GALGAS_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                const GGS_stringset   var_cas_inGUISourceNameSet,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_23273 (var_cas_inComponentNameSet, true) ;
    while (enumerator_23273.hasCurrentObject ()) {
      ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  enumerator_23273._key (HERE) COMMA_SOURCE_FILE_AT_LINE (717)) ;
      enumerator_23273.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_23362 (var_cas_inGUISourceNameSet, true) ;
    while (enumerator_23362.hasCurrentObject ()) {
      var_cas_fileList.addAssign_operation ((enumerator_23362._key (HERE)).operator_concat (GGS_string (".m"))) ;
      enumerator_23362.next () ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (723)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_HAND_CODED_source_files_for_sources_tool_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_source_files_for_sources_tool_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_23881 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_23881.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_23881._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_24061 = ((((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("c")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_24061.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_23881._key (HERE)) ;
      }
      enumerator_23881.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (745)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_source_files_for_sources_tool_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_HAND_CODED_source_files_for_sources_cocoa_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_24570 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_24570.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_24570._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_24750 = ((((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("c")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_24750.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_24570._key (HERE)) ;
      }
      enumerator_24570.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (767)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_HAND_CODED_SOURCES_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_SOURCES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_SOURCES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_25233 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_25233.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_25233._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_25413 = ((((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("c")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_25413.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_25233._key (HERE)) ;
      }
      enumerator_25233.next () ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (789)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_SOURCES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_FRAMEWORKS_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_FRAMEWORKS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup,
                                const GGS_stringset   var_cas_inExternSourceForTool,
                                const GGS_stringset   var_cas_inExternSourceForApp
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_FRAMEWORKS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringset  var_cas_fileSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_fileSet.addAssign_operation (GGS_string ("AppKit.framework")) ;
  var_cas_fileSet.addAssign_operation (GGS_string ("Cocoa.framework")) ;
  {
    GGS_stringset::cEnumerator enumerator_25973 (var_cas_inExternSourceForTool, true) ;
    while (enumerator_25973.hasCurrentObject ()) {
      const GGS_bool cond_26055 = (enumerator_25973._key (HERE).reader_pathExtension ()).operator_isEqual (GGS_string ("framework")) ;
      if (cond_26055.isBuiltAndTrue ()) {
        var_cas_fileSet.addAssign_operation (enumerator_25973._key (HERE)) ;
      }
      enumerator_25973.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_26107 (var_cas_inExternSourceForApp, true) ;
    while (enumerator_26107.hasCurrentObject ()) {
      const GGS_bool cond_26189 = (enumerator_26107._key (HERE).reader_pathExtension ()).operator_isEqual (GGS_string ("framework")) ;
      if (cond_26189.isBuiltAndTrue ()) {
        var_cas_fileSet.addAssign_operation (enumerator_26107._key (HERE)) ;
      }
      enumerator_26107.next () ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileSet.reader_stringList (inLexique COMMA_SOURCE_FILE_AT_LINE (820)),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (818)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_FRAMEWORKS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of routine "build_FRAMEWORKS_for_frameworks_build_phase"   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_FRAMEWORKS_for_frameworks_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternFileSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_FRAMEWORKS_for_frameworks_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_26665 (var_cas_inExternFileSet, true) ;
    while (enumerator_26665.hasCurrentObject ()) {
      const GGS_bool cond_26748 = (enumerator_26665._key (HERE).reader_pathExtension ()).operator_isEqual (GGS_string ("framework")) ;
      if (cond_26748.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_26665._key (HERE)) ;
      }
      enumerator_26665.next () ;
    }
  }
  ::routine_enter_files_for_frameworks_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (839)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_FRAMEWORKS_for_frameworks_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of routine "build_RESOURCES_for_resources_build_phase"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_RESOURCES_for_resources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_stringlist   var_cas_inIconFiles,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_RESOURCES_for_resources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = var_cas_inIconFiles ;
  var_cas_fileList.addAssign_operation (var_cas_inProjectName) ;
  var_cas_fileList.addAssign_operation ((var_cas_inProjectName).operator_concat (GGS_string ("_debug"))) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_ScrollToEndArrow.gif")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Action.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_SaveAs.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Stop.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Window.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Orange14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Red14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("MainMenu.xib")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_Document.xib")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("InfoPlist.strings")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("Credits.rtf")) ;
  ::routine_enter_files_for_frameworks_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (869)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_RESOURCES_for_resources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_COCOA_APP_files_for_sources_build_phase"  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_COCOA_APP_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inGUISourceNameSet,
                                const GGS_stringset   /* var_cas_inScannerSourceNameSet */,
                                const GGS_stringset   /* var_cas_inOptionSourceNameSet */,
                                const GGS_stringset   var_cas_inExternSourceNameSet_app,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_COCOA_APP_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("main.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("NSSplitViewExtensions.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMFontButton.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_Token.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_Lexique.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("unicode_character_m.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_BuildWindowController.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_CommandLineOption.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("enterDefaultCommandLineOptions.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_Document.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_PreferencesController.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_RulerViewForTextView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_RulerViewForCompileMessageView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_TextView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_DelegateForSyntaxColoring.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_BuildResultTextView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_ErrorOrWarningDescriptor.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMArrayControllerDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMArrayDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMDictionaryDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableArrayDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableDictionaryDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableSetDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableStringDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMPointerArrayDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMSetDebugCategory.m")) ;
  {
    GGS_stringset::cEnumerator enumerator_29467 (var_cas_inGUISourceNameSet, true) ;
    while (enumerator_29467.hasCurrentObject ()) {
      var_cas_fileList.addAssign_operation ((enumerator_29467._key (HERE)).operator_concat (GGS_string (".m"))) ;
      enumerator_29467.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_29570 (var_cas_inExternSourceNameSet_app, true) ;
    while (enumerator_29570.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_29570._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_29750 = ((((var_cas_extension).operator_isEqual (GGS_string ("c"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("cpp")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_29750.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_29570._key (HERE)) ;
      }
      enumerator_29570.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (925)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_COCOA_APP_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "generateXcodeProject"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateXcodeProject (C_CompilerEx & inLexique,
                                const GGS_stringset   var_cas_inExternSourceNameSet_tool,
                                const GGS_stringset   var_cas_inGUISourceNameSet_tool,
                                const GGS_stringset   var_cas_inScannerSourceNameSet_tool,
                                const GGS_stringset   var_cas_inOptionSourceNameSet_tool,
                                const GGS_stringset   var_cas_inSemanticsSourceSet_tool,
                                const GGS_stringset   var_cas_inSyntaxSourceSet_tool,
                                const GGS_stringset   var_cas_inGrammarSourceSet_tool,
                                const GGS_stringset   var_cas_inProgramSourceSet_tool,
                                const GGS_stringset   var_cas_inExternSourceNameSet_app,
                                const GGS_stringset   var_cas_inGUISourceNameSet_app,
                                const GGS_stringset   var_cas_inScannerSourceNameSet_app,
                                const GGS_stringset   var_cas_inOptionSourceNameSet_app,
                                const GGS_stringset   var_cas_inSemanticsSourceSet_app,
                                const GGS_stringset   var_cas_inSyntaxSourceSet_app,
                                const GGS_stringset   var_cas_inGrammarSourceSet_app,
                                const GGS_stringset   var_cas_inProgramSourceSet_app,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_string  var_cas_in_xcodeproj_filePath,
                                const GGS_stringlist   var_cas_inIconFiles,
                                const GGS_string  var_cas_inReferenceFilePath
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateXcodeProject at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_XcodeProjectDescription var_cas_XcodeProjectDescription ;
  ::routine_initXcodeProjectDescription (inLexique,  var_cas_XcodeProjectDescription COMMA_SOURCE_FILE_AT_LINE (957)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_HAND_CODED_SOURCES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  GGS_stringset  var_cas_fileSet = (var_cas_inExternSourceNameSet_tool).operator_or (var_cas_inExternSourceNameSet_app) ;
  var_cas_fileSet.modifier_removeKey (inLexique, GGS_string ("AppKit.framework") COMMA_SOURCE_FILE_AT_LINE (962)) ;
  var_cas_fileSet.modifier_removeKey (inLexique, GGS_string ("Cocoa.framework") COMMA_SOURCE_FILE_AT_LINE (963)) ;
  ::routine_build_HAND_CODED_SOURCES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileSet,  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (964)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Hand Coded Sources"),  GGS_string ("../galgas_sources"),  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (970)) ;
  GGS_stringset  var_cas_componentNameSet_tool = (((((var_cas_inScannerSourceNameSet_tool).operator_or (var_cas_inOptionSourceNameSet_tool)).operator_or (var_cas_inSemanticsSourceSet_tool)).operator_or (var_cas_inSyntaxSourceSet_tool)).operator_or (var_cas_inGrammarSourceSet_tool)).operator_or (var_cas_inProgramSourceSet_tool) ;
  GGS_stringset  var_cas_componentNameSet_app = (((((var_cas_inScannerSourceNameSet_app).operator_or (var_cas_inOptionSourceNameSet_app)).operator_or (var_cas_inSemanticsSourceSet_app)).operator_or (var_cas_inSyntaxSourceSet_app)).operator_or (var_cas_inGrammarSourceSet_app)).operator_or (var_cas_inProgramSourceSet_app) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_GENERATED_BY_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_GENERATED_BY_GALGAS_group (inLexique,  var_cas_XcodeProjectDescription,  (var_cas_componentNameSet_tool).operator_or (var_cas_componentNameSet_app),  (var_cas_inGUISourceNameSet_tool).operator_or (var_cas_inGUISourceNameSet_app),  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (988)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Generated by GALGAS"),  GGS_string ("../galgas_sources/GALGAS_OUTPUT"),  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (995)) ;
  GGS_XcodeObjectReferenceList  var_cas_libpmGroupChildrenList = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_BDD_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_BDD_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_BDD_group COMMA_SOURCE_FILE_AT_LINE (1005)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Binary Decision Diagrams"),  GGS_string ("bdd"),  var_cas_fileListOf_LIBPM_BDD_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1010)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_DEBUG_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_DEBUG_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_DEBUG_group COMMA_SOURCE_FILE_AT_LINE (1019)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Cocoa Debug"),  GGS_string ("cocoa_debug"),  var_cas_fileListOf_LIBPM_COCOA_DEBUG_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1023)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_GALGAS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (1032)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Cocoa GALGAS"),  GGS_string ("cocoa_galgas"),  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1036)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_UTILITIES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (1045)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Cocoa Utilities"),  GGS_string ("cocoa_utilities"),  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1049)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COLLECTIONS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COLLECTIONS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COLLECTIONS_group COMMA_SOURCE_FILE_AT_LINE (1058)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Collections"),  GGS_string ("collections"),  var_cas_fileListOf_LIBPM_COLLECTIONS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1063)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group COMMA_SOURCE_FILE_AT_LINE (1072)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Command Line Interface"),  GGS_string ("command_line_interface"),  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1077)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_FILE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_FILES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_FILE_group COMMA_SOURCE_FILE_AT_LINE (1086)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Files"),  GGS_string ("files"),  var_cas_fileListOf_LIBPM_FILE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1091)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_GALGAS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (1100)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("GALGAS"),  GGS_string ("galgas"),  var_cas_fileListOf_LIBPM_GALGAS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1105)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_GALGAS_2_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_GALGAS_2_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_GALGAS_2_group COMMA_SOURCE_FILE_AT_LINE (1114)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("GALGAS 2"),  GGS_string ("galgas2"),  var_cas_fileListOf_LIBPM_GALGAS_2_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1119)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_GALGAS_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_GALGAS_UTILITIES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_GALGAS_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (1128)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("GALGAS UTILITIES"),  GGS_string ("galgas2"),  var_cas_fileListOf_LIBPM_GALGAS_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1133)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_STREAMS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_STREAMS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_STREAMS_group COMMA_SOURCE_FILE_AT_LINE (1142)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Streams"),  GGS_string ("streams"),  var_cas_fileListOf_LIBPM_STREAMS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1147)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_TIME_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_TIME_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_TIME_group COMMA_SOURCE_FILE_AT_LINE (1156)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Time"),  GGS_string ("time"),  var_cas_fileListOf_LIBPM_TIME_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1161)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_UTILITIES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (1170)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Utilities"),  GGS_string ("utilities"),  var_cas_fileListOf_LIBPM_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1175)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_STRINGS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_STRINGS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_STRINGS_group COMMA_SOURCE_FILE_AT_LINE (1184)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Strings"),  GGS_string ("strings"),  var_cas_fileListOf_LIBPM_STRINGS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1189)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("LIBPM"),  GGS_string ("../libpm"),  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1197)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_PROJECT_RESOURCES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_PROJECT_RESOURCES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inIconFiles,  var_cas_fileListOf_PROJECT_RESOURCES_group COMMA_SOURCE_FILE_AT_LINE (1205)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Project Resources"),  GGS_string (""),  var_cas_fileListOf_PROJECT_RESOURCES_group COMMA_SOURCE_FILE_AT_LINE (1210)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_FRAMEWORKS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_FRAMEWORKS_group,  var_cas_inExternSourceNameSet_tool,  var_cas_inExternSourceNameSet_app COMMA_SOURCE_FILE_AT_LINE (1218)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Frameworks"),  GGS_string ("/System/Library/Frameworks"),  var_cas_fileListOf_FRAMEWORKS_group COMMA_SOURCE_FILE_AT_LINE (1225)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1234)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_componentNameSet_tool,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1240)) ;
  ::routine_build_LIBPM_BDD_source_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1246)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1251)) ;
  ::routine_build_LIBPM_FILES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1256)) ;
  ::routine_build_LIBPM_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1261)) ;
  ::routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1266)) ;
  ::routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1271)) ;
  ::routine_build_LIBPM_STREAMS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1276)) ;
  ::routine_build_LIBPM_TIME_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1281)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1286)) ;
  ::routine_build_LIBPM_STRINGS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1291)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForFrameworksBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1297)) ;
  GGS_stringlist  var_cas_toolTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_toolTargetSettings.addAssign_operation (GGS_string ("GCC_OPTIMIZATION_LEVEL = 2;")) ;
  GGS_string var_cas_toolTargetKey ;
  ::routine_add_tool_target (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inProjectName,  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()).operator_concat (GGS_string (" Tool")),  var_cas_toolTargetSettings,  GGS_string ("../libpm/galgas/PP_GalgasPrefix.pch"),  var_cas_listForSourceBuildPhaseOfTool,  var_cas_listForFrameworksBuildPhaseOfTool,  GGS_stringlist ::constructor_emptyList (),  var_cas_toolTargetKey COMMA_SOURCE_FILE_AT_LINE (1307)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfDebugTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1321)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_componentNameSet_tool,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1327)) ;
  ::routine_build_LIBPM_BDD_source_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1333)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1338)) ;
  ::routine_build_LIBPM_FILES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1343)) ;
  ::routine_build_LIBPM_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1348)) ;
  ::routine_build_LIBPM_GALGAS_2_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1353)) ;
  ::routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1358)) ;
  ::routine_build_LIBPM_STREAMS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1363)) ;
  ::routine_build_LIBPM_TIME_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1368)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1373)) ;
  ::routine_build_LIBPM_STRINGS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1378)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfToolDebug = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForFrameworksBuildPhaseOfToolDebug COMMA_SOURCE_FILE_AT_LINE (1384)) ;
  GGS_stringlist  var_cas_debugToolTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_debugToolTargetSettings.addAssign_operation (GGS_string ("GCC_GENERATE_DEBUGGING_SYMBOLS = YES;")) ;
  var_cas_debugToolTargetSettings.addAssign_operation (GGS_string ("GCC_OPTIMIZATION_LEVEL = 0;")) ;
  var_cas_debugToolTargetSettings.addAssign_operation (GGS_string ("GCC_WARN_UNINITIALIZED_AUTOS = NO;")) ;
  GGS_string var_cas_toolDebugTargetKey ;
  ::routine_add_tool_target (inLexique,  var_cas_XcodeProjectDescription,  (var_cas_inProjectName).operator_concat (GGS_string ("_debug")),  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()).operator_concat (GGS_string (" Tool Debug")),  var_cas_debugToolTargetSettings,  GGS_string (""),  var_cas_listForSourceBuildPhaseOfDebugTool,  var_cas_listForFrameworksBuildPhaseOfToolDebug,  GGS_stringlist ::constructor_emptyList (),  var_cas_toolDebugTargetKey COMMA_SOURCE_FILE_AT_LINE (1396)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_COCOA_APP_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inGUISourceNameSet_app,  var_cas_inScannerSourceNameSet_app,  var_cas_inOptionSourceNameSet_app,  var_cas_inExternSourceNameSet_app,  var_cas_listForSourceBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1410)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  var_cas_fileSet = var_cas_inExternSourceNameSet_app ;
  var_cas_fileSet.addAssign_operation (GGS_string ("AppKit.framework")) ;
  var_cas_fileSet.addAssign_operation (GGS_string ("Cocoa.framework")) ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileSet,  var_cas_listForFrameworksBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1423)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForResourcesBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_RESOURCES_for_resources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inProjectName,  var_cas_inIconFiles,  var_cas_listForResourcesBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1430)) ;
  ::routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_app,  var_cas_listForResourcesBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1437)) ;
  GGS_stringlist  var_cas_directDependencyList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_directDependencyList.addAssign_operation (var_cas_toolTargetKey) ;
  var_cas_directDependencyList.addAssign_operation (var_cas_toolDebugTargetKey) ;
  GGS_stringlist  var_cas_cocoaAppTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cocoaAppTargetSettings.addAssign_operation (GGS_string ("GCC_OPTIMIZATION_LEVEL = 2;")) ;
  GGS_string automatic_var_46339_0 ;
  ::routine_add_app_target (inLexique,  var_cas_XcodeProjectDescription,  (GGS_string ("Cocoa")).operator_concat (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()),  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()).operator_concat (GGS_string (" Cocoa")),  var_cas_cocoaAppTargetSettings,  GGS_string ("../libpm/cocoa_galgas/PP_CocoaGalgasPrefix.pch"),  GGS_string ("Info.plist"),  var_cas_listForSourceBuildPhaseOfCocoaApp,  var_cas_listForFrameworksBuildPhaseOfCocoaApp,  var_cas_listForResourcesBuildPhaseOfCocoaApp,  var_cas_directDependencyList,  automatic_var_46339_0 COMMA_SOURCE_FILE_AT_LINE (1450)) ;
  GGS_stringlist  var_cas_pathes = GGS_stringlist ::constructor_emptyList () ;
  var_cas_pathes.addAssign_operation (GGS_string ("../galgas_sources/GALGAS_OUTPUT")) ;
  var_cas_pathes.addAssign_operation (GGS_string ("../libpm")) ;
  var_cas_pathes.addAssign_operation (GGS_string ("../hand_coded_sources/**")) ;
  GGS_stringlist  var_cas_projectDefaultSettings ;
  ::routine_enterProjectDefaultSettings (inLexique,  var_cas_pathes,  var_cas_projectDefaultSettings COMMA_SOURCE_FILE_AT_LINE (1469)) ;
  ::routine_generateXCodeFile (inLexique,  var_cas_XcodeProjectDescription,  var_cas_in_xcodeproj_filePath,  var_cas_projectDefaultSettings,  var_cas_inReferenceFilePath COMMA_SOURCE_FILE_AT_LINE (1475)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateXcodeProject\n") ;
  #endif
}

//---------------------------------------------------------------------------*

