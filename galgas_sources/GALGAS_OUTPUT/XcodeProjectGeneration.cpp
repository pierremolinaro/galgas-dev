//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'XcodeProjectGeneration.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 23th, 2010, at 14h25'55"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "XcodeProjectGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "XcodeProjectGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_BDD_group"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Descriptor") COMMA_SOURCE_FILE_AT_LINE (15)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Set1") COMMA_SOURCE_FILE_AT_LINE (16)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Set2") COMMA_SOURCE_FILE_AT_LINE (17)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD_Set3") COMMA_SOURCE_FILE_AT_LINE (18)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BDD") COMMA_SOURCE_FILE_AT_LINE (19)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_Display_BDD") COMMA_SOURCE_FILE_AT_LINE (20)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (22)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_BDD_source_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_source_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_source_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Descriptor.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Set1.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Set2.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD_Set3.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BDD.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_Display_BDD.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (43)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_source_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of routine "getGALGAS_UTILITIES_source_file_list"      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGALGAS_UTILITIES_source_file_list (C_CompilerEx &,
                                GGS_stringlist  & var_cas_out_cpp_and_h_fileList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getGALGAS_UTILITIES_source_file_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_out_cpp_and_h_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_galgas_function_descriptor")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_galgas_type_descriptor")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_LocationInSource")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_Object")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_SourceTextInString")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getGALGAS_UTILITIES_source_file_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "getGALGAS_source_file_list"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGALGAS_source_file_list (C_CompilerEx &,
                                GGS_stringlist  & var_cas_out_cpp_and_h_fileList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getGALGAS_source_file_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_out_cpp_and_h_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("PM_C_Array")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("PM_C_Dictionary")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("PM_C_Object")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_galgas_listmap")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_galgas_map")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_galgas_list")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_galgas_sortedlist")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_galgas_mapindex")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_galgas_domain")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("AC_galgas_class")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_GGS_Object")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_galgas_CLI_Options")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_CompilerEx")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_Lexique")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("scanner_actions")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_galgas_io")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("galgas_introspection")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("C_galgas_class_inspector")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("predefined_types")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_binaryset")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_stringset")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_filewrapper")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lsint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_luint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_sint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_uint64")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_double")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_sint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_bool")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_char")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_string")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_uint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_data")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_location")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_ldouble")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lsint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lbool")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lchar")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_lstring")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_luint")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_type")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_object")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS_function")) ;
  var_cas_out_cpp_and_h_fileList.addAssign_operation (GGS_string ("GGS__root")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getGALGAS_source_file_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_GALGAS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (122)) ;
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_4670 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_4670 = NULL ;
    while (((operand_4670 = enumerator_4670.nextObject ()))) {
      macroValidPointer (operand_4670) ;
      ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  operand_4670->mValue COMMA_SOURCE_FILE_AT_LINE (125)) ;
    }
  }
  var_cas_fileList.addAssign_operation (GGS_string ("galgas_header.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PP_GalgasPrefix.pch")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (130)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_GALGAS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (144)) ;
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_5314 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_5314 = NULL ;
    while (((operand_5314 = enumerator_5314.nextObject ()))) {
      macroValidPointer (operand_5314) ;
      var_cas_fileList.addAssign_operation ((operand_5314->mValue).operator_concat (GGS_string (".cpp"))) ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (150)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "build_LIBPM_GALGAS_UTILITIES_group"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_UTILITIES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_UTILITIES_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (164)) ;
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_5891 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_5891 = NULL ;
    while (((operand_5891 = enumerator_5891.nextObject ()))) {
      macroValidPointer (operand_5891) ;
      ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  operand_5891->mValue COMMA_SOURCE_FILE_AT_LINE (167)) ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (170)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_UTILITIES_source_file_list (inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (184)) ;
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_6481 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_6481 = NULL ;
    while (((operand_6481 = enumerator_6481.nextObject ()))) {
      macroValidPointer (operand_6481) ;
      var_cas_fileList.addAssign_operation ((operand_6481->mValue).operator_concat (GGS_string (".cpp"))) ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (190)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COCOA_GALGAS_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_GALGAS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("NSSplitViewExtensions") COMMA_SOURCE_FILE_AT_LINE (204)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMFontButton") COMMA_SOURCE_FILE_AT_LINE (205)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_Token") COMMA_SOURCE_FILE_AT_LINE (206)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_Lexique") COMMA_SOURCE_FILE_AT_LINE (207)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_BuildWindowController") COMMA_SOURCE_FILE_AT_LINE (208)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_CommandLineOption") COMMA_SOURCE_FILE_AT_LINE (209)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("enterDefaultCommandLineOptions") COMMA_SOURCE_FILE_AT_LINE (210)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_Document") COMMA_SOURCE_FILE_AT_LINE (211)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_PreferencesController") COMMA_SOURCE_FILE_AT_LINE (212)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_RulerViewForCompileMessageView") COMMA_SOURCE_FILE_AT_LINE (213)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_RulerViewForTextView") COMMA_SOURCE_FILE_AT_LINE (214)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_TextView") COMMA_SOURCE_FILE_AT_LINE (215)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_DelegateForSyntaxColoring") COMMA_SOURCE_FILE_AT_LINE (216)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_BuildResultTextView") COMMA_SOURCE_FILE_AT_LINE (217)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("OC_GGS_ErrorOrWarningDescriptor") COMMA_SOURCE_FILE_AT_LINE (218)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_ScrollToEndArrow.gif")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Action.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_SaveAs.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Stop.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Window.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Orange14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Red14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_CocoaWrapperForGalgas.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PP_CocoaGalgasPrefix.pch")) ;
  ::routine_enter_xib_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("MainMenu.xib"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (229)) ;
  ::routine_enter_xib_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("OC_GGS_Document.xib"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (235)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (242)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COCOA_DEBUG_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_DEBUG_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_DEBUG_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMCocoaCallsDebug.h")) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMArrayControllerDebugCategory") COMMA_SOURCE_FILE_AT_LINE (258)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMArrayDebugCategory") COMMA_SOURCE_FILE_AT_LINE (259)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMDictionaryDebugCategory") COMMA_SOURCE_FILE_AT_LINE (260)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableArrayDebugCategory") COMMA_SOURCE_FILE_AT_LINE (261)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableDictionaryDebugCategory") COMMA_SOURCE_FILE_AT_LINE (262)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableSetDebugCategory") COMMA_SOURCE_FILE_AT_LINE (263)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMMutableStringDebugCategory") COMMA_SOURCE_FILE_AT_LINE (264)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMPointerArrayDebugCategory") COMMA_SOURCE_FILE_AT_LINE (265)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("PMSetDebugCategory") COMMA_SOURCE_FILE_AT_LINE (266)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (268)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_DEBUG_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "build_LIBPM_COCOA_UTILITIES_group"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COCOA_UTILITIES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COCOA_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("main.m")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (284)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COCOA_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_FILES_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_HTML_FileWrite") COMMA_SOURCE_FILE_AT_LINE (298)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_TextFileWrite") COMMA_SOURCE_FILE_AT_LINE (299)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (301)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_FILES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_HTML_FileWrite.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_TextFileWrite.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (318)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_group"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_CommandLineOption") COMMA_SOURCE_FILE_AT_LINE (332)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_BoolCommandLineOption") COMMA_SOURCE_FILE_AT_LINE (333)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_UIntCommandLineOption") COMMA_SOURCE_FILE_AT_LINE (334)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_StringCommandLineOption") COMMA_SOURCE_FILE_AT_LINE (335)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_builtin_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (336)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("F_Analyze_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (337)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_main.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("mainForLIBPM.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (341)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_builtin_CLI_Options.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_CommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_BoolCommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_UIntCommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_StringCommandLineOption.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_Analyze_CLI_Options.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_main.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (363)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COLLECTIONS_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COLLECTIONS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COLLECTIONS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_AVL_TreeForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_Array.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_Array2.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_BlockBinaryTreeForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_Block_AVL_TreeForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_FixedSizeArray.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_HashMap.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_LinearListForCollision.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_UniqueArray.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_UniqueArray2.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_UniqueFixedSizeArray.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_AVL_Tree.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (390)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COLLECTIONS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_CACHE_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_CACHE_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_CACHE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_PrimeCache2") COMMA_SOURCE_FILE_AT_LINE (404)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_PrimeCache3") COMMA_SOURCE_FILE_AT_LINE (405)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_prime_cache2.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_prime_cache3.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TC_prime_cache4.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (410)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_CACHE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_CACHE_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_CACHE_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_CACHE_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_PrimeCache2.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_PrimeCache3.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (428)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_CACHE_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_PROJECT_RESOURCES_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_PROJECT_RESOURCES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringlist   var_cas_inIconFiles,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_PROJECT_RESOURCES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = var_cas_inIconFiles ;
  var_cas_fileList.addAssign_operation (GGS_string ("Info.plist")) ;
  ::routine_enter_xib_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("Credits.rtf"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (445)) ;
  ::routine_enter_plist_strings_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  GGS_string ("English.lproj"),  GGS_string ("InfoPlist.strings"),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (451)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (458)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_PROJECT_RESOURCES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_STRINGS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STRINGS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STRINGS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_String") COMMA_SOURCE_FILE_AT_LINE (472)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("unicode_character_cpp") COMMA_SOURCE_FILE_AT_LINE (473)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("unicode_string_routines") COMMA_SOURCE_FILE_AT_LINE (474)) ;
  ::routine_append_m_h_files (inLexique,  var_cas_fileList,  GGS_string ("unicode_character_m") COMMA_SOURCE_FILE_AT_LINE (475)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("cUnicodeData.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (478)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STRINGS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_STRINGS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STRINGS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STRINGS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_String.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("unicode_character_cpp.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("unicode_string_routines.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (496)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STRINGS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "build_LIBPM_UTILITIES_group"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("md5") COMMA_SOURCE_FILE_AT_LINE (510)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_Exception") COMMA_SOURCE_FILE_AT_LINE (511)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("F_GetPrime") COMMA_SOURCE_FILE_AT_LINE (512)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("F_DisplayException") COMMA_SOURCE_FILE_AT_LINE (513)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("MF_Assert") COMMA_SOURCE_FILE_AT_LINE (514)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("MF_MemoryControl") COMMA_SOURCE_FILE_AT_LINE (515)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_PrologueEpilogue") COMMA_SOURCE_FILE_AT_LINE (516)) ;
  var_cas_fileList.addAssign_operation (GGS_string ("M_SourceLocation.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_inf.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_sup.h")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("TF_Swap.h")) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (522)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_UTILITIES_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("md5.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_Exception.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_GetPrime.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("F_DisplayException.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("MF_Assert.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("MF_MemoryControl.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_PrologueEpilogue.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (544)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_STREAMS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_ErrorOut") COMMA_SOURCE_FILE_AT_LINE (558)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("AC_OutputStream") COMMA_SOURCE_FILE_AT_LINE (559)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_ConsoleOut") COMMA_SOURCE_FILE_AT_LINE (560)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (562)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_STREAMS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_ErrorOut.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("AC_OutputStream.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_ConsoleOut.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (580)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_TIME_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_DateTime") COMMA_SOURCE_FILE_AT_LINE (594)) ;
  ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  GGS_string ("C_Timer") COMMA_SOURCE_FILE_AT_LINE (595)) ;
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (597)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_TIME_files_for_sources_build_phase" *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_DateTime.cpp")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("C_Timer.cpp")) ;
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (614)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_GENERATED_BY_GALGAS_files_for_sources_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_20024 (var_cas_inComponentNameSet, true) ;
    while (enumerator_20024.hasCurrentObject ()) {
      var_cas_fileList.addAssign_operation ((enumerator_20024._key (HERE)).operator_concat (GGS_string (".cpp"))) ;
      enumerator_20024.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (633)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "build_GENERATED_BY_GALGAS_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                const GGS_stringset   var_cas_inGUISourceNameSet,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_20566 (var_cas_inComponentNameSet, true) ;
    while (enumerator_20566.hasCurrentObject ()) {
      ::routine_append_cpp_h_files (inLexique,  var_cas_fileList,  enumerator_20566._key (HERE) COMMA_SOURCE_FILE_AT_LINE (650)) ;
      enumerator_20566.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_20655 (var_cas_inGUISourceNameSet, true) ;
    while (enumerator_20655.hasCurrentObject ()) {
      var_cas_fileList.addAssign_operation ((enumerator_20655._key (HERE)).operator_concat (GGS_string (".m"))) ;
      enumerator_20655.next () ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (656)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_HAND_CODED_source_files_for_sources_tool_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_source_files_for_sources_tool_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_21174 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_21174.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_21174._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_21354 = ((((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("c")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_21354.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_21174._key (HERE)) ;
      }
      enumerator_21174.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (678)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_source_files_for_sources_tool_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_HAND_CODED_source_files_for_sources_cocoa_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_21863 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_21863.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_21863._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_22043 = ((((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("c")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_22043.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_21863._key (HERE)) ;
      }
      enumerator_21863.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (700)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_HAND_CODED_SOURCES_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_SOURCES_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_SOURCES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_22526 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_22526.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_22526._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_22706 = ((((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("c")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_22706.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_22526._key (HERE)) ;
      }
      enumerator_22526.next () ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (722)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_SOURCES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_FRAMEWORKS_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_FRAMEWORKS_group (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup,
                                const GGS_stringset   var_cas_inExternSourceForTool,
                                const GGS_stringset   var_cas_inExternSourceForApp COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_FRAMEWORKS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringset  var_cas_fileSet = GGS_stringset ::constructor_emptySet () ;
  var_cas_fileSet.addAssign_operation (GGS_string ("AppKit.framework")) ;
  var_cas_fileSet.addAssign_operation (GGS_string ("Cocoa.framework")) ;
  {
    GGS_stringset::cEnumerator enumerator_23266 (var_cas_inExternSourceForTool, true) ;
    while (enumerator_23266.hasCurrentObject ()) {
      const GGS_bool cond_23348 = (enumerator_23266._key (HERE).reader_pathExtension ()).operator_isEqual (GGS_string ("framework")) ;
      if (cond_23348.isBuiltAndTrue ()) {
        var_cas_fileSet.addAssign_operation (enumerator_23266._key (HERE)) ;
      }
      enumerator_23266.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_23400 (var_cas_inExternSourceForApp, true) ;
    while (enumerator_23400.hasCurrentObject ()) {
      const GGS_bool cond_23482 = (enumerator_23400._key (HERE).reader_pathExtension ()).operator_isEqual (GGS_string ("framework")) ;
      if (cond_23482.isBuiltAndTrue ()) {
        var_cas_fileSet.addAssign_operation (enumerator_23400._key (HERE)) ;
      }
      enumerator_23400.next () ;
    }
  }
  ::routine_enter_files_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileSet.reader_stringList (inLexique COMMA_SOURCE_FILE_AT_LINE (753)),  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (751)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_FRAMEWORKS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of routine "build_FRAMEWORKS_for_frameworks_build_phase"   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_FRAMEWORKS_for_frameworks_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternFileSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_FRAMEWORKS_for_frameworks_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_23958 (var_cas_inExternFileSet, true) ;
    while (enumerator_23958.hasCurrentObject ()) {
      const GGS_bool cond_24041 = (enumerator_23958._key (HERE).reader_pathExtension ()).operator_isEqual (GGS_string ("framework")) ;
      if (cond_24041.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_23958._key (HERE)) ;
      }
      enumerator_23958.next () ;
    }
  }
  ::routine_enter_files_for_frameworks_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (772)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_FRAMEWORKS_for_frameworks_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of routine "build_RESOURCES_for_resources_build_phase"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_RESOURCES_for_resources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_stringlist   var_cas_inIconFiles,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_RESOURCES_for_resources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = var_cas_inIconFiles ;
  var_cas_fileList.addAssign_operation (var_cas_inProjectName) ;
  var_cas_fileList.addAssign_operation ((var_cas_inProjectName).operator_concat (GGS_string ("_debug"))) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_ScrollToEndArrow.gif")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Action.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_SaveAs.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Stop.tiff")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Window.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Orange14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("I_Red14.png")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("MainMenu.xib")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_Document.xib")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("InfoPlist.strings")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("Credits.rtf")) ;
  ::routine_enter_files_for_frameworks_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (802)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_RESOURCES_for_resources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_COCOA_APP_files_for_sources_build_phase"  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_COCOA_APP_files_for_sources_build_phase (C_CompilerEx & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inGUISourceNameSet,
                                const GGS_stringset   /* var_cas_inScannerSourceNameSet */,
                                const GGS_stringset   /* var_cas_inOptionSourceNameSet */,
                                const GGS_stringset   var_cas_inExternSourceNameSet_app,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_COCOA_APP_files_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList.addAssign_operation (GGS_string ("main.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("NSSplitViewExtensions.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMFontButton.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_Token.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_Lexique.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("unicode_character_m.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_BuildWindowController.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_CommandLineOption.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("enterDefaultCommandLineOptions.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_Document.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_PreferencesController.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_RulerViewForTextView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_RulerViewForCompileMessageView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_TextView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_DelegateForSyntaxColoring.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_BuildResultTextView.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("OC_GGS_ErrorOrWarningDescriptor.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMArrayControllerDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMArrayDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMDictionaryDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableArrayDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableDictionaryDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableSetDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMMutableStringDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMPointerArrayDebugCategory.m")) ;
  var_cas_fileList.addAssign_operation (GGS_string ("PMSetDebugCategory.m")) ;
  {
    GGS_stringset::cEnumerator enumerator_26760 (var_cas_inGUISourceNameSet, true) ;
    while (enumerator_26760.hasCurrentObject ()) {
      var_cas_fileList.addAssign_operation ((enumerator_26760._key (HERE)).operator_concat (GGS_string (".m"))) ;
      enumerator_26760.next () ;
    }
  }
  {
    GGS_stringset::cEnumerator enumerator_26863 (var_cas_inExternSourceNameSet_app, true) ;
    while (enumerator_26863.hasCurrentObject ()) {
      GGS_string var_cas_extension = enumerator_26863._key (HERE).reader_pathExtension () ;
      const GGS_bool cond_27043 = ((((var_cas_extension).operator_isEqual (GGS_string ("c"))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("cpp")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("m")))).operator_or ((var_cas_extension).operator_isEqual (GGS_string ("mm"))) ;
      if (cond_27043.isBuiltAndTrue ()) {
        var_cas_fileList.addAssign_operation (enumerator_26863._key (HERE)) ;
      }
      enumerator_26863.next () ;
    }
  }
  ::routine_enter_file_list_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (858)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_COCOA_APP_files_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "generateXcodeProject"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateXcodeProject (C_CompilerEx & inLexique,
                                const GGS_stringset   var_cas_inExternSourceNameSet_tool,
                                const GGS_stringset   var_cas_inGUISourceNameSet_tool,
                                const GGS_stringset   var_cas_inScannerSourceNameSet_tool,
                                const GGS_stringset   var_cas_inOptionSourceNameSet_tool,
                                const GGS_stringset   var_cas_inSemanticsSourceSet_tool,
                                const GGS_stringset   var_cas_inSyntaxSourceSet_tool,
                                const GGS_stringset   var_cas_inGrammarSourceSet_tool,
                                const GGS_stringset   var_cas_inProgramSourceSet_tool,
                                const GGS_stringset   var_cas_inExternSourceNameSet_app,
                                const GGS_stringset   var_cas_inGUISourceNameSet_app,
                                const GGS_stringset   var_cas_inScannerSourceNameSet_app,
                                const GGS_stringset   var_cas_inOptionSourceNameSet_app,
                                const GGS_stringset   var_cas_inSemanticsSourceSet_app,
                                const GGS_stringset   var_cas_inSyntaxSourceSet_app,
                                const GGS_stringset   var_cas_inGrammarSourceSet_app,
                                const GGS_stringset   var_cas_inProgramSourceSet_app,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_string  var_cas_in_xcodeproj_filePath,
                                const GGS_stringlist   var_cas_inIconFiles,
                                const GGS_string  var_cas_inReferenceFilePath COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateXcodeProject at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_XcodeProjectDescription var_cas_XcodeProjectDescription ;
  ::routine_initXcodeProjectDescription (inLexique,  var_cas_XcodeProjectDescription COMMA_SOURCE_FILE_AT_LINE (890)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_HAND_CODED_SOURCES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  GGS_stringset  var_cas_fileSet = (var_cas_inExternSourceNameSet_tool).operator_or (var_cas_inExternSourceNameSet_app) ;
  var_cas_fileSet.minusAssign_operation (GGS_string ("AppKit.framework")) ;
  var_cas_fileSet.minusAssign_operation (GGS_string ("Cocoa.framework")) ;
  ::routine_build_HAND_CODED_SOURCES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileSet,  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (897)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Hand Coded Sources"),  GGS_string ("../galgas_sources"),  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (903)) ;
  GGS_stringset  var_cas_componentNameSet_tool = (((((var_cas_inScannerSourceNameSet_tool).operator_or (var_cas_inOptionSourceNameSet_tool)).operator_or (var_cas_inSemanticsSourceSet_tool)).operator_or (var_cas_inSyntaxSourceSet_tool)).operator_or (var_cas_inGrammarSourceSet_tool)).operator_or (var_cas_inProgramSourceSet_tool) ;
  GGS_stringset  var_cas_componentNameSet_app = (((((var_cas_inScannerSourceNameSet_app).operator_or (var_cas_inOptionSourceNameSet_app)).operator_or (var_cas_inSemanticsSourceSet_app)).operator_or (var_cas_inSyntaxSourceSet_app)).operator_or (var_cas_inGrammarSourceSet_app)).operator_or (var_cas_inProgramSourceSet_app) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_GENERATED_BY_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_GENERATED_BY_GALGAS_group (inLexique,  var_cas_XcodeProjectDescription,  (var_cas_componentNameSet_tool).operator_or (var_cas_componentNameSet_app),  (var_cas_inGUISourceNameSet_tool).operator_or (var_cas_inGUISourceNameSet_app),  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (921)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Generated by GALGAS"),  GGS_string ("../galgas_sources/GALGAS_OUTPUT"),  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (928)) ;
  GGS_XcodeObjectReferenceList  var_cas_libpmGroupChildrenList = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_BDD_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_BDD_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_BDD_group COMMA_SOURCE_FILE_AT_LINE (938)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Binary Decision Diagrams"),  GGS_string ("bdd"),  var_cas_fileListOf_LIBPM_BDD_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (943)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_CACHE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_CACHE_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_CACHE_group COMMA_SOURCE_FILE_AT_LINE (952)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Caches"),  GGS_string ("cache"),  var_cas_fileListOf_LIBPM_CACHE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (957)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_DEBUG_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_DEBUG_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_DEBUG_group COMMA_SOURCE_FILE_AT_LINE (966)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Cocoa Debug"),  GGS_string ("cocoa_debug"),  var_cas_fileListOf_LIBPM_COCOA_DEBUG_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (970)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_GALGAS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (979)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Cocoa GALGAS"),  GGS_string ("cocoa_galgas"),  var_cas_fileListOf_LIBPM_COCOA_GALGAS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (983)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COCOA_UTILITIES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (992)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Cocoa Utilities"),  GGS_string ("cocoa_utilities"),  var_cas_fileListOf_LIBPM_COCOA_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (996)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COLLECTIONS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COLLECTIONS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COLLECTIONS_group COMMA_SOURCE_FILE_AT_LINE (1005)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Collections"),  GGS_string ("collections"),  var_cas_fileListOf_LIBPM_COLLECTIONS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1010)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group COMMA_SOURCE_FILE_AT_LINE (1019)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Command Line Interface"),  GGS_string ("command_line_interface"),  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1024)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_FILE_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_FILES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_FILE_group COMMA_SOURCE_FILE_AT_LINE (1033)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Files"),  GGS_string ("files"),  var_cas_fileListOf_LIBPM_FILE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1038)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_GALGAS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_GALGAS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (1047)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("GALGAS"),  GGS_string ("galgas"),  var_cas_fileListOf_LIBPM_GALGAS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1052)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_GALGAS_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_GALGAS_UTILITIES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_GALGAS_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (1061)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("GALGAS UTILITIES"),  GGS_string ("galgas_utilities"),  var_cas_fileListOf_LIBPM_GALGAS_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1066)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_STREAMS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_STREAMS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_STREAMS_group COMMA_SOURCE_FILE_AT_LINE (1075)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Streams"),  GGS_string ("streams"),  var_cas_fileListOf_LIBPM_STREAMS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1080)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_TIME_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_TIME_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_TIME_group COMMA_SOURCE_FILE_AT_LINE (1089)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Time"),  GGS_string ("time"),  var_cas_fileListOf_LIBPM_TIME_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1094)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_UTILITIES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_UTILITIES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (1103)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Utilities"),  GGS_string ("utilities"),  var_cas_fileListOf_LIBPM_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1108)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_LIBPM_STRINGS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_LIBPM_STRINGS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_STRINGS_group COMMA_SOURCE_FILE_AT_LINE (1117)) ;
  ::routine_enter_subgroup (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Strings"),  GGS_string ("strings"),  var_cas_fileListOf_LIBPM_STRINGS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1122)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("LIBPM"),  GGS_string ("../../libpm"),  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (1130)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_PROJECT_RESOURCES_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_PROJECT_RESOURCES_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inIconFiles,  var_cas_fileListOf_PROJECT_RESOURCES_group COMMA_SOURCE_FILE_AT_LINE (1138)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Project Resources"),  GGS_string (""),  var_cas_fileListOf_PROJECT_RESOURCES_group COMMA_SOURCE_FILE_AT_LINE (1143)) ;
  GGS_XcodeObjectReferenceList  var_cas_fileListOf_FRAMEWORKS_group = GGS_XcodeObjectReferenceList ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_group (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_FRAMEWORKS_group,  var_cas_inExternSourceNameSet_tool,  var_cas_inExternSourceNameSet_app COMMA_SOURCE_FILE_AT_LINE (1151)) ;
  ::routine_enter_group (inLexique,  var_cas_XcodeProjectDescription,  GGS_string ("Frameworks"),  GGS_string ("/System/Library/Frameworks"),  var_cas_fileListOf_FRAMEWORKS_group COMMA_SOURCE_FILE_AT_LINE (1158)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1167)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_componentNameSet_tool,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1173)) ;
  ::routine_build_LIBPM_BDD_source_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1179)) ;
  ::routine_build_LIBPM_CACHE_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1184)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1189)) ;
  ::routine_build_LIBPM_FILES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1194)) ;
  ::routine_build_LIBPM_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1199)) ;
  ::routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1204)) ;
  ::routine_build_LIBPM_STREAMS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1209)) ;
  ::routine_build_LIBPM_TIME_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1214)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1219)) ;
  ::routine_build_LIBPM_STRINGS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1224)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForFrameworksBuildPhaseOfTool COMMA_SOURCE_FILE_AT_LINE (1230)) ;
  GGS_stringlist  var_cas_toolTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_toolTargetSettings.addAssign_operation (GGS_string ("GCC_OPTIMIZATION_LEVEL = 2;")) ;
  GGS_string var_cas_toolTargetKey ;
  ::routine_add_tool_target (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inProjectName,  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()).operator_concat (GGS_string (" Tool")),  var_cas_toolTargetSettings,  GGS_string ("../../libpm/galgas/PP_GalgasPrefix.pch"),  var_cas_listForSourceBuildPhaseOfTool,  var_cas_listForFrameworksBuildPhaseOfTool,  GGS_stringlist ::constructor_emptyList (),  var_cas_toolTargetKey COMMA_SOURCE_FILE_AT_LINE (1240)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfDebugTool = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_sources_tool_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1254)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_componentNameSet_tool,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1260)) ;
  ::routine_build_LIBPM_BDD_source_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1266)) ;
  ::routine_build_LIBPM_CACHE_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1271)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1276)) ;
  ::routine_build_LIBPM_FILES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1281)) ;
  ::routine_build_LIBPM_GALGAS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1286)) ;
  ::routine_build_LIBPM_GALGAS_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1291)) ;
  ::routine_build_LIBPM_STREAMS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1296)) ;
  ::routine_build_LIBPM_TIME_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1301)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1306)) ;
  ::routine_build_LIBPM_STRINGS_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_listForSourceBuildPhaseOfDebugTool COMMA_SOURCE_FILE_AT_LINE (1311)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfToolDebug = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_tool,  var_cas_listForFrameworksBuildPhaseOfToolDebug COMMA_SOURCE_FILE_AT_LINE (1317)) ;
  GGS_stringlist  var_cas_debugToolTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_debugToolTargetSettings.addAssign_operation (GGS_string ("GCC_OPTIMIZATION_LEVEL = 0;")) ;
  var_cas_debugToolTargetSettings.addAssign_operation (GGS_string ("GCC_WARN_UNINITIALIZED_AUTOS = NO;")) ;
  GGS_string var_cas_toolDebugTargetKey ;
  ::routine_add_tool_target (inLexique,  var_cas_XcodeProjectDescription,  (var_cas_inProjectName).operator_concat (GGS_string ("_debug")),  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()).operator_concat (GGS_string (" Tool Debug")),  var_cas_debugToolTargetSettings,  GGS_string (""),  var_cas_listForSourceBuildPhaseOfDebugTool,  var_cas_listForFrameworksBuildPhaseOfToolDebug,  GGS_stringlist ::constructor_emptyList (),  var_cas_toolDebugTargetKey COMMA_SOURCE_FILE_AT_LINE (1328)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForSourceBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_COCOA_APP_files_for_sources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inGUISourceNameSet_app,  var_cas_inScannerSourceNameSet_app,  var_cas_inOptionSourceNameSet_app,  var_cas_inExternSourceNameSet_app,  var_cas_listForSourceBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1342)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForFrameworksBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  var_cas_fileSet = var_cas_inExternSourceNameSet_app ;
  var_cas_fileSet.addAssign_operation (GGS_string ("AppKit.framework")) ;
  var_cas_fileSet.addAssign_operation (GGS_string ("Cocoa.framework")) ;
  ::routine_build_FRAMEWORKS_for_frameworks_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileSet,  var_cas_listForFrameworksBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1355)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_listForResourcesBuildPhaseOfCocoaApp = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_RESOURCES_for_resources_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inProjectName,  var_cas_inIconFiles,  var_cas_listForResourcesBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1362)) ;
  ::routine_build_HAND_CODED_source_files_for_sources_cocoa_build_phase (inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet_app,  var_cas_listForResourcesBuildPhaseOfCocoaApp COMMA_SOURCE_FILE_AT_LINE (1369)) ;
  GGS_stringlist  var_cas_directDependencyList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_directDependencyList.addAssign_operation (var_cas_toolTargetKey) ;
  var_cas_directDependencyList.addAssign_operation (var_cas_toolDebugTargetKey) ;
  GGS_stringlist  var_cas_cocoaAppTargetSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cocoaAppTargetSettings.addAssign_operation (GGS_string ("GCC_OPTIMIZATION_LEVEL = 2;")) ;
  GGS_string automatic_var_43518_0 ;
  ::routine_add_app_target (inLexique,  var_cas_XcodeProjectDescription,  (GGS_string ("Cocoa")).operator_concat (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()),  (var_cas_inProjectName.reader_stringByCapitalizingFirstCharacter ()).operator_concat (GGS_string (" Cocoa")),  var_cas_cocoaAppTargetSettings,  GGS_string ("../../libpm/cocoa_galgas/PP_CocoaGalgasPrefix.pch"),  GGS_string ("Info.plist"),  var_cas_listForSourceBuildPhaseOfCocoaApp,  var_cas_listForFrameworksBuildPhaseOfCocoaApp,  var_cas_listForResourcesBuildPhaseOfCocoaApp,  var_cas_directDependencyList,  automatic_var_43518_0 COMMA_SOURCE_FILE_AT_LINE (1382)) ;
  GGS_stringlist  var_cas_pathes = GGS_stringlist ::constructor_emptyList () ;
  var_cas_pathes.addAssign_operation (GGS_string ("../galgas_sources/GALGAS_OUTPUT")) ;
  var_cas_pathes.addAssign_operation (GGS_string ("../../libpm")) ;
  var_cas_pathes.addAssign_operation (GGS_string ("../hand_coded_sources/**")) ;
  GGS_stringlist  var_cas_projectDefaultSettings ;
  ::routine_enterProjectDefaultSettings (inLexique,  var_cas_pathes,  var_cas_projectDefaultSettings COMMA_SOURCE_FILE_AT_LINE (1401)) ;
  ::routine_generateXCodeFile (inLexique,  var_cas_XcodeProjectDescription,  var_cas_in_xcodeproj_filePath,  var_cas_projectDefaultSettings,  var_cas_inReferenceFilePath COMMA_SOURCE_FILE_AT_LINE (1407)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateXcodeProject\n") ;
  #endif
}

//---------------------------------------------------------------------------*

