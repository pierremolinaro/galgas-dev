//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'XcodeProjectGeneration.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    september 27th, 2008, at 11h26'11"                     *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "XcodeProjectGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "XcodeProjectGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_BDD_group"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD_Descriptor") COMMA_SOURCE_FILE_AT_LINE (14)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD_Set1") COMMA_SOURCE_FILE_AT_LINE (15)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD_Set2") COMMA_SOURCE_FILE_AT_LINE (16)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD_Set3") COMMA_SOURCE_FILE_AT_LINE (17)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_BDD") COMMA_SOURCE_FILE_AT_LINE (18)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_Display_BDD") COMMA_SOURCE_FILE_AT_LINE (19)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (21)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of routine "build_LIBPM_BDD_source_files_for_build_phase"  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_BDD_source_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_BDD_source_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_BDD_Descriptor.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_BDD_Set1.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_BDD_Set2.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_BDD_Set3.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_BDD.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_Display_BDD.cpp")) ;
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (42)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_BDD_source_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "getGALGAS_source_file_list"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getGALGAS_source_file_list (C_Compiler &,
                                GGS_stringlist  & var_cas_out_cpp_and_h_fileList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_getGALGAS_source_file_list at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_out_cpp_and_h_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "PM_C_Array")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "PM_C_Dictionary")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "PM_C_Object")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_listmap")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_map")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_list")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_sortedlist")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_mapindex")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_domain")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "AC_galgas_class")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "C_GGS_Object")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "C_galgas_CLI_Options")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "C_Lexique")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "C_galgas_io")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "predefined_types")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_binaryset")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_stringset")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_filewrapper")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lsint64")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_luint64")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_sint64")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_uint64")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_double")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_sint")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_bool")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_char")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_string")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_uint")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_location")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_ldouble")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lsint")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lbool")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lchar")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_lstring")) ;
  var_cas_out_cpp_and_h_fileList._addAssign_operation (GGS_string (true, "GGS_luint")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_getGALGAS_source_file_list\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_GALGAS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (_inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (99)) ;
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_3684 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_3684 = NULL ;
    while (((operand_3684 = enumerator_3684.nextObject ()))) {
      macroValidPointer (operand_3684) ;
      ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  operand_3684->mValue COMMA_SOURCE_FILE_AT_LINE (102)) ;
    }
  }
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (105)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_LIBPM_GALGAS_files_for_build_phase"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_GALGAS_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_GALGAS_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_and_h_fileList ;
  ::routine_getGALGAS_source_file_list (_inLexique,  var_cas_cpp_and_h_fileList COMMA_SOURCE_FILE_AT_LINE (119)) ;
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_4246 (var_cas_cpp_and_h_fileList, true) ;
    const GGS_stringlist::cElement * operand_4246 = NULL ;
    while (((operand_4246 = enumerator_4246.nextObject ()))) {
      macroValidPointer (operand_4246) ;
      var_cas_fileList._addAssign_operation ((operand_4246->mValue)._operator_concat (GGS_string (true, ".cpp"))) ;
    }
  }
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (125)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_GALGAS_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_FILES_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_HTML_FileWrite") COMMA_SOURCE_FILE_AT_LINE (139)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_TextFileWrite") COMMA_SOURCE_FILE_AT_LINE (140)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (142)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_LIBPM_FILES_files_for_build_phase"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_FILES_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_FILES_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_HTML_FileWrite.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_TextFileWrite.cpp")) ;
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (159)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_FILES_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_group"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_builtin_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (173)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "AC_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (174)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_CLI_OptionGroup") COMMA_SOURCE_FILE_AT_LINE (175)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "F_Analyze_CLI_Options") COMMA_SOURCE_FILE_AT_LINE (176)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "F_main.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "mainForLIBPM.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (180)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_LIBPM_COMMAND_LINE_INTERFACE_files_for_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_builtin_CLI_Options.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "AC_CLI_Options.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_CLI_OptionGroup.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "F_Analyze_CLI_Options.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "F_main.cpp")) ;
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (200)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_LIBPM_COLLECTIONS_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_COLLECTIONS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_COLLECTIONS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_AVL_TreeForCollision.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_Array.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_Array2.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_BlockBinaryTreeForCollision.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_Block_AVL_TreeForCollision.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_FixedSizeArray.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_HashMap.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_LinearListForCollision.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_UniqueArray.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_UniqueArray2.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_UniqueFixedSizeArray.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TF_AVL_Tree.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (227)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_COLLECTIONS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "build_LIBPM_CACHE_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_CACHE_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_CACHE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_PrimeCache2") COMMA_SOURCE_FILE_AT_LINE (241)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_PrimeCache3") COMMA_SOURCE_FILE_AT_LINE (242)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_prime_cache2.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_prime_cache3.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TC_prime_cache4.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (247)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_CACHE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "build_LIBPM_CACHE_files_for_build_phase"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_CACHE_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_CACHE_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_PrimeCache2.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_PrimeCache3.cpp")) ;
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (265)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_CACHE_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_UNICODE_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UNICODE_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UNICODE_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_UnicodeString") COMMA_SOURCE_FILE_AT_LINE (279)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "unicode_character") COMMA_SOURCE_FILE_AT_LINE (280)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "unicode_string_routines") COMMA_SOURCE_FILE_AT_LINE (281)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "cUnicodeData.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "string_class_template.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (285)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UNICODE_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of routine "build_LIBPM_UNICODE_files_for_build_phase"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UNICODE_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UNICODE_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_UnicodeString.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "unicode_character.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "unicode_string_routines.cpp")) ;
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (303)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UNICODE_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "build_LIBPM_UTILITIES_group"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "md5") COMMA_SOURCE_FILE_AT_LINE (317)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_Exception") COMMA_SOURCE_FILE_AT_LINE (318)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "F_GetPrime") COMMA_SOURCE_FILE_AT_LINE (319)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_String") COMMA_SOURCE_FILE_AT_LINE (320)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "F_DisplayException") COMMA_SOURCE_FILE_AT_LINE (321)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "MF_Assert") COMMA_SOURCE_FILE_AT_LINE (322)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "MF_MemoryControl") COMMA_SOURCE_FILE_AT_LINE (323)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "M_SourceLocation.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TF_inf.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TF_sup.h")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "TF_Swap.h")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (329)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
// Implementation of routine "build_LIBPM_UTILITIES_files_for_build_phase"   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_UTILITIES_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_UTILITIES_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "md5.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_Exception.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_String.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "F_GetPrime.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "F_DisplayException.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "MF_Assert.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "MF_MemoryControl.cpp")) ;
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (351)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_UTILITIES_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_STREAMS_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "AC_OutputUnicodeStream") COMMA_SOURCE_FILE_AT_LINE (365)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_ErrorOut") COMMA_SOURCE_FILE_AT_LINE (366)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "AC_OutputStream") COMMA_SOURCE_FILE_AT_LINE (367)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_ConsoleOut") COMMA_SOURCE_FILE_AT_LINE (368)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (370)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of routine "build_LIBPM_STREAMS_files_for_build_phase"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_STREAMS_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_STREAMS_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "AC_OutputUnicodeStream.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_ErrorOut.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "AC_OutputStream.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_ConsoleOut.cpp")) ;
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (389)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_STREAMS_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "build_LIBPM_TIME_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_DateTime") COMMA_SOURCE_FILE_AT_LINE (403)) ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "C_Timer") COMMA_SOURCE_FILE_AT_LINE (404)) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (406)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of routine "build_LIBPM_TIME_files_for_build_phase"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TIME_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TIME_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_DateTime.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "C_Timer.cpp")) ;
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (423)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TIME_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "build_LIBPM_TINYXML_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TINYXML_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TINYXML_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  GGS_string (true, "tinyxml") COMMA_SOURCE_FILE_AT_LINE (437)) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinystr.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinyxmlerror.cpp")) ;
  var_cas_fileList._addAssign_operation (GGS_string (true, "tinyxmlparser.cpp")) ;
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (442)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TINYXML_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Implementation of routine "build_LIBPM_TINYXML_files_for_build_phase"    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_LIBPM_TINYXML_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_LIBPM_TINYXML_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "tinyxml.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "tinystr.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "tinyxmlerror.cpp")) ;
  var_cas_cpp_fileList._addAssign_operation (GGS_string (true, "tinyxmlparser.cpp")) ;
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (461)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_LIBPM_TINYXML_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_GENERATED_BY_GALGAS_files_for_build_phase"*
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_14683 (var_cas_inComponentNameSet, true) ;
    while (enumerator_14683.hc ()) {
      var_cas_cpp_fileList._addAssign_operation ((enumerator_14683._key (HERE).reader_stringByDeletingPathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (477)))._operator_concat (GGS_string (true, ".cpp"))) ;
      enumerator_14683.next () ;
    }
  }
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (480)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "build_GENERATED_BY_GALGAS_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_GENERATED_BY_GALGAS_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_GENERATED_BY_GALGAS_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_15212 (var_cas_inComponentNameSet, true) ;
    while (enumerator_15212.hc ()) {
      ::routine_append_cpp_h_files (_inLexique,  var_cas_fileList,  enumerator_15212._key (HERE).reader_stringByDeletingPathExtension (_inLexique COMMA_SOURCE_FILE_AT_LINE (496)) COMMA_SOURCE_FILE_AT_LINE (496)) ;
      enumerator_15212.next () ;
    }
  }
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (499)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_GENERATED_BY_GALGAS_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Implementation of routine "build_HAND_CODED_source_files_for_build_phase"  *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_source_files_for_build_phase (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_source_files_for_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_cpp_fileList ;
  var_cas_cpp_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_15765 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_15765.hc ()) {
      var_cas_cpp_fileList._addAssign_operation (enumerator_15765._key (HERE)) ;
      enumerator_15765.next () ;
    }
  }
  ::routine_enter_source_files_for_build_phase (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_cpp_fileList,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (518)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_source_files_for_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "build_HAND_CODED_SOURCES_group"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_build_HAND_CODED_SOURCES_group (C_Compiler & _inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                GGS_stringlist  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_build_HAND_CODED_SOURCES_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_fileList ;
  var_cas_fileList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringset::cEnumerator enumerator_16258 (var_cas_inExternSourceNameSet, true) ;
    while (enumerator_16258.hc ()) {
      var_cas_fileList._addAssign_operation (enumerator_16258._key (HERE)) ;
      enumerator_16258.next () ;
    }
  }
  ::routine_enter_files_in_group (_inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_fileList,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (537)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_build_HAND_CODED_SOURCES_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "generateXcodeProject"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateXcodeProject (C_Compiler & _inLexique,
                                const GGS_stringset   var_cas_inComponentNameSet,
                                const GGS_stringset   var_cas_inExternSourceNameSet,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_string  var_cas_in_pbxproj_filePath COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateXcodeProject at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_XcodeProjectDescription var_cas_XcodeProjectDescription ;
  ::routine_initXcodeProjectDescription (_inLexique,  var_cas_XcodeProjectDescription COMMA_SOURCE_FILE_AT_LINE (553)) ;
  GGS_Xcode_XCBuildConfiguration_list  var_cas_buildConfigurationList ;
  var_cas_buildConfigurationList = GGS_Xcode_XCBuildConfiguration_list ::constructor_emptyList () ;
  GGS_stringlist  var_cas_productGroupChildrenList ;
  var_cas_productGroupChildrenList = GGS_stringlist ::constructor_emptyList () ;
  GGS_Xcode_PBXSourcesBuildPhase_list  var_cas_PBXSourcesBuildPhase_list ;
  var_cas_PBXSourcesBuildPhase_list = GGS_Xcode_PBXSourcesBuildPhase_list ::constructor_emptyList () ;
  GGS_stringlist  var_cas_fileListOf_HAND_CODED_SOURCES_group ;
  var_cas_fileListOf_HAND_CODED_SOURCES_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_SOURCES_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet,  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (561)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Hand Coded Sources"),  GGS_string (true, "../hand_coded_sources"),  var_cas_fileListOf_HAND_CODED_SOURCES_group COMMA_SOURCE_FILE_AT_LINE (567)) ;
  GGS_stringlist  var_cas_fileListOf_GENERATED_BY_GALGAS_group ;
  var_cas_fileListOf_GENERATED_BY_GALGAS_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_GENERATED_BY_GALGAS_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inComponentNameSet,  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (575)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Generated by GALGAS"),  GGS_string (true, "../galgas_sources/GALGAS_OUTPUT"),  var_cas_fileListOf_GENERATED_BY_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (581)) ;
  GGS_stringlist  var_cas_libpmGroupChildrenList ;
  var_cas_libpmGroupChildrenList = GGS_stringlist ::constructor_emptyList () ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_BDD_group ;
  var_cas_fileListOf_LIBPM_BDD_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_BDD_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_BDD_group COMMA_SOURCE_FILE_AT_LINE (591)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Binary Decision Diagrams"),  GGS_string (true, "bdd"),  var_cas_fileListOf_LIBPM_BDD_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (596)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_CACHE_group ;
  var_cas_fileListOf_LIBPM_CACHE_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_CACHE_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_CACHE_group COMMA_SOURCE_FILE_AT_LINE (605)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Caches"),  GGS_string (true, "cache"),  var_cas_fileListOf_LIBPM_CACHE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (610)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Cocoa GALGAS"),  GGS_string (true, "cocoa_galgas"),  GGS_stringlist ::constructor_emptyList (),  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (618)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Cocoa Utilities"),  GGS_string (true, "cocoa_utilities"),  GGS_stringlist ::constructor_emptyList (),  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (626)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_COLLECTIONS_group ;
  var_cas_fileListOf_LIBPM_COLLECTIONS_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_COLLECTIONS_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COLLECTIONS_group COMMA_SOURCE_FILE_AT_LINE (635)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Collections"),  GGS_string (true, "collections"),  var_cas_fileListOf_LIBPM_COLLECTIONS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (640)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group ;
  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group COMMA_SOURCE_FILE_AT_LINE (649)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Command Line Interface"),  GGS_string (true, "command_line_interface"),  var_cas_fileListOf_LIBPM_COMMAND_LINE_INTERFACE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (654)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_FILE_group ;
  var_cas_fileListOf_LIBPM_FILE_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_FILES_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_FILE_group COMMA_SOURCE_FILE_AT_LINE (663)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Files"),  GGS_string (true, "files"),  var_cas_fileListOf_LIBPM_FILE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (668)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_GALGAS_group ;
  var_cas_fileListOf_LIBPM_GALGAS_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_GALGAS_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_GALGAS_group COMMA_SOURCE_FILE_AT_LINE (677)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "GALGAS"),  GGS_string (true, "galgas"),  var_cas_fileListOf_LIBPM_GALGAS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (682)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_STREAMS_group ;
  var_cas_fileListOf_LIBPM_STREAMS_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_STREAMS_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_STREAMS_group COMMA_SOURCE_FILE_AT_LINE (691)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Streams"),  GGS_string (true, "streams"),  var_cas_fileListOf_LIBPM_STREAMS_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (696)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_TIME_group ;
  var_cas_fileListOf_LIBPM_TIME_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_TIME_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_TIME_group COMMA_SOURCE_FILE_AT_LINE (705)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Time"),  GGS_string (true, "time"),  var_cas_fileListOf_LIBPM_TIME_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (710)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_TINYXML_group ;
  var_cas_fileListOf_LIBPM_TINYXML_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_TINYXML_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_TINYXML_group COMMA_SOURCE_FILE_AT_LINE (719)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Tiny XML"),  GGS_string (true, "tiny_xml"),  var_cas_fileListOf_LIBPM_TINYXML_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (724)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_UTILITIES_group ;
  var_cas_fileListOf_LIBPM_UTILITIES_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_UTILITIES_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_UTILITIES_group COMMA_SOURCE_FILE_AT_LINE (733)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Utilities"),  GGS_string (true, "utilities"),  var_cas_fileListOf_LIBPM_UTILITIES_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (738)) ;
  GGS_stringlist  var_cas_fileListOf_LIBPM_UNICODE_group ;
  var_cas_fileListOf_LIBPM_UNICODE_group = GGS_stringlist ::constructor_emptyList () ;
  ::routine_build_LIBPM_UNICODE_group (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_fileListOf_LIBPM_UNICODE_group COMMA_SOURCE_FILE_AT_LINE (747)) ;
  ::routine_enter_subgroup (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Unicode"),  GGS_string (true, "unicode"),  var_cas_fileListOf_LIBPM_UNICODE_group,  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (752)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "LIBPM"),  GGS_string (true, "../../libpm"),  var_cas_libpmGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (760)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Resources"),  GGS_string (true, ""),  GGS_stringlist ::constructor_emptyList () COMMA_SOURCE_FILE_AT_LINE (767)) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Frameworks"),  GGS_string (true, ""),  GGS_stringlist ::constructor_emptyList () COMMA_SOURCE_FILE_AT_LINE (774)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_keyListForBuildPhase ;
  var_cas_keyListForBuildPhase = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (783)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inComponentNameSet,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (789)) ;
  ::routine_build_LIBPM_BDD_source_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (795)) ;
  ::routine_build_LIBPM_CACHE_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (800)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (805)) ;
  ::routine_build_LIBPM_FILES_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (810)) ;
  ::routine_build_LIBPM_GALGAS_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (815)) ;
  ::routine_build_LIBPM_STREAMS_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (820)) ;
  ::routine_build_LIBPM_TIME_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (825)) ;
  ::routine_build_LIBPM_TINYXML_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (830)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (835)) ;
  ::routine_build_LIBPM_UNICODE_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForBuildPhase COMMA_SOURCE_FILE_AT_LINE (840)) ;
  ::routine_add_target (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inProjectName,  (var_cas_inProjectName)._operator_concat (GGS_string (true, " Tool")),  var_cas_keyListForBuildPhase,  var_cas_productGroupChildrenList,  var_cas_PBXSourcesBuildPhase_list,  var_cas_buildConfigurationList COMMA_SOURCE_FILE_AT_LINE (845)) ;
  GGS_Xcode_PBXBuildFile_list  var_cas_keyListForDebugBuildPhase ;
  var_cas_keyListForDebugBuildPhase = GGS_Xcode_PBXBuildFile_list ::constructor_emptyList () ;
  ::routine_build_HAND_CODED_source_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inExternSourceNameSet,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (857)) ;
  ::routine_build_GENERATED_BY_GALGAS_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_inComponentNameSet,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (863)) ;
  ::routine_build_LIBPM_BDD_source_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (869)) ;
  ::routine_build_LIBPM_CACHE_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (874)) ;
  ::routine_build_LIBPM_COMMAND_LINE_INTERFACE_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (879)) ;
  ::routine_build_LIBPM_FILES_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (884)) ;
  ::routine_build_LIBPM_GALGAS_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (889)) ;
  ::routine_build_LIBPM_STREAMS_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (894)) ;
  ::routine_build_LIBPM_TIME_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (899)) ;
  ::routine_build_LIBPM_TINYXML_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (904)) ;
  ::routine_build_LIBPM_UTILITIES_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (909)) ;
  ::routine_build_LIBPM_UNICODE_files_for_build_phase (_inLexique,  var_cas_XcodeProjectDescription,  var_cas_keyListForDebugBuildPhase COMMA_SOURCE_FILE_AT_LINE (914)) ;
  ::routine_add_target (_inLexique,  var_cas_XcodeProjectDescription,  (var_cas_inProjectName)._operator_concat (GGS_string (true, "_debug")),  (var_cas_inProjectName)._operator_concat (GGS_string (true, " Tool Debug")),  var_cas_keyListForDebugBuildPhase,  var_cas_productGroupChildrenList,  var_cas_PBXSourcesBuildPhase_list,  var_cas_buildConfigurationList COMMA_SOURCE_FILE_AT_LINE (919)) ;
  GGS_stringlist  var_cas_projectDefaultSettings ;
  var_cas_projectDefaultSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "ALWAYS_SEARCH_USER_PATHS = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "ARCHS = (ppc, i386,);")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_DEBUGGING_SYMBOLS = default;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_GENERATE_DEBUGGING_SYMBOLS = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_PRECOMPILE_PREFIX_HEADER = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_THREADSAFE_STATICS = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_TREAT_NONCONFORMANT_CODE_ERRORS_AS_WARNINGS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_TREAT_WARNINGS_AS_ERRORS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_64_TO_32_BIT_CONVERSION = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_ABOUT_MISSING_NEWLINE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_ABOUT_RETURN_TYPE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_CHECK_SWITCH_STATEMENTS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_EFFECTIVE_CPLUSPLUS_VIOLATIONS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_FOUR_CHARACTER_CONSTANTS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_INHIBIT_ALL_WARNINGS = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_MISSING_PARENTHESES = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_PEDANTIC = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_PROTOTYPE_CONVERSION = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_SHADOW = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_SIGN_COMPARE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_TYPECHECK_CALLS_TO_PRINTF = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNINITIALIZED_AUTOS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNKNOWN_PRAGMAS = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_FUNCTION = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_LABEL = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_PARAMETER = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_VALUE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "GCC_WARN_UNUSED_VARIABLE = YES;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "HEADER_SEARCH_PATHS = (../galgas_sources/GALGAS_OUTPUT, ../hand_coded_sources, ../../libpm,);")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "PREBINDING = NO;")) ;
  var_cas_projectDefaultSettings._addAssign_operation (GGS_string (true, "SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;")) ;
  GGS_Xcode_XCBuildConfiguration  var_cas_defaultProjectConfiguration ;
  var_cas_defaultProjectConfiguration = GGS_Xcode_XCBuildConfiguration ::constructor_new (_inLexique, var_cas_projectDefaultSettings COMMA_HERE) ;
  var_cas_buildConfigurationList._addAssign_operation (var_cas_defaultProjectConfiguration) ;
  ::routine_enter_group (_inLexique,  var_cas_XcodeProjectDescription,  GGS_string (true, "Products"),  GGS_string (true, ""),  var_cas_productGroupChildrenList COMMA_SOURCE_FILE_AT_LINE (971)) ;
  GGS_Xcode_PBXGroup  var_cas_mainGroup ;
  var_cas_mainGroup = GGS_Xcode_PBXGroup ::constructor_new (_inLexique, GGS_string (true, ""), GGS_string (true, ""), var_cas_XcodeProjectDescription.reader_mMainGroupChildrenList (_inLexique COMMA_SOURCE_FILE_AT_LINE (978)) COMMA_HERE) ;
  var_cas_XcodeProjectDescription.mProjectGroupList._addAssign_operation (var_cas_mainGroup) ;
  GGS_Xcode_rootObject  var_cas_p ;
  var_cas_p = GGS_Xcode_rootObject ::constructor_new (_inLexique, var_cas_inProjectName, GGS_string (true, "project").reader_md5 (_inLexique COMMA_SOURCE_FILE_AT_LINE (983)).reader_rightSubString (_inLexique, GGS_uint (true, 24U) COMMA_SOURCE_FILE_AT_LINE (983)), var_cas_mainGroup.reader_PBXGroupKey (_inLexique COMMA_SOURCE_FILE_AT_LINE (984)), var_cas_buildConfigurationList, var_cas_defaultProjectConfiguration.reader_XCBuildConfigurationKey (_inLexique COMMA_SOURCE_FILE_AT_LINE (986)), var_cas_XcodeProjectDescription, var_cas_PBXSourcesBuildPhase_list COMMA_HERE) ;
  GGS_string var_cas_fileNewContents ;
  const GGS_Xcode_rootObject  _temp_29973 = var_cas_p ;
  if (_temp_29973._isBuilt ()) {
    _temp_29973 (HERE)->method_build (_inLexique, var_cas_fileNewContents COMMA_SOURCE_FILE_AT_LINE (992)) ;
  }
  GGS_string var_cas_dir ;
  var_cas_dir = var_cas_in_pbxproj_filePath.reader_stringByDeletingLastPathComponent (_inLexique COMMA_SOURCE_FILE_AT_LINE (995)) ;
  const GGS_string _temp_30124 = var_cas_dir ;
  if (_temp_30124._isBuilt ()) {
    _temp_30124 (HERE)->method_makeDirectory (_inLexique COMMA_SOURCE_FILE_AT_LINE (996)) ;
  }
  GGS_stringlist  var_cas_pbxuser_files ;
  var_cas_pbxuser_files = var_cas_dir.reader_regularFilesWithExtensions (_inLexique, GGS_bool (true, false), GGS_stringlist ::constructor_listWithValue (GGS_string (true, "pbxuser")) COMMA_SOURCE_FILE_AT_LINE (997)) ;
  {
    GGS_stringlist::cEnumerator enumerator_30264 (var_cas_pbxuser_files, true) ;
    const GGS_stringlist::cElement * operand_30264 = NULL ;
    while (((operand_30264 = enumerator_30264.nextObject ()))) {
      macroValidPointer (operand_30264) ;
      GGS_string var_cas_fullPath ;
      var_cas_fullPath = ((var_cas_dir)._operator_concat (GGS_string (true, "/")))._operator_concat (operand_30264->mValue) ;
      GGS_string::class_method_deleteFile (_inLexique, var_cas_fullPath COMMA_SOURCE_FILE_AT_LINE (1000)) ;
    }
  }
  const GGS_string _temp_30417 = var_cas_fileNewContents ;
  if (_temp_30417._isBuilt ()) {
    _temp_30417 (HERE)->method_writeToFileWhenDifferentContents (_inLexique, var_cas_in_pbxproj_filePath COMMA_SOURCE_FILE_AT_LINE (1002)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateXcodeProject\n") ;
  #endif
}

//---------------------------------------------------------------------------*

