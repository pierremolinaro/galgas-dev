//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           File 'grammarCompilation.cpp'                                             *
//                                             Generated by version 3.0.0                                              *
//                                          october 5th, 2014, at 14h46'36"                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "galgas_cli_options.h"
#include "grammarCompilation.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Function 'transformLabelMap'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis function_transformLabelMap (const GALGAS_nonTerminalLabelListAST & constinArgument_inLabels,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis result_outNonterminalSymbolLabelMapForGrammarAnalysis ; // Returned variable
  result_outNonterminalSymbolLabelMapForGrammarAnalysis = GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis::constructor_emptyMap (SOURCE_FILE ("grammarCompilation.gSemantics", 33)) ;
  cEnumerator_nonTerminalLabelListAST enumerator_1956 (constinArgument_inLabels, kEnumeration_up) ;
  while (enumerator_1956.hasCurrentObject ()) {
    GALGAS_signatureForGrammarAnalysis var_formalParametersList = GALGAS_signatureForGrammarAnalysis::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 35)) ;
    cEnumerator_formalParameterListAST enumerator_2059 (enumerator_1956.current_mFormalArgumentList (HERE), kEnumeration_up) ;
    while (enumerator_2059.hasCurrentObject ()) {
      var_formalParametersList.addAssign_operation (enumerator_2059.current_mFormalArgumentPassingMode (HERE), enumerator_2059.current_mFormalArgumentTypeName (HERE)  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 37)) ;
      enumerator_2059.gotoNextObject () ;
    }
    {
    result_outNonterminalSymbolLabelMapForGrammarAnalysis.modifier_insertKey (enumerator_1956.current_mLabelName (HERE), var_formalParametersList, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 39)) ;
    }
    enumerator_1956.gotoNextObject () ;
  }
//---
  return result_outNonterminalSymbolLabelMapForGrammarAnalysis ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_transformLabelMap [2] = {
  & kTypeDescriptor_GALGAS_nonTerminalLabelListAST,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_transformLabelMap (C_Compiler * inCompiler,
                                                                  const cObjectArray & inEffectiveParameterArray,
                                                                  const GALGAS_location & /* §§ inErrorLocation */
                                                                  COMMA_LOCATION_ARGS) {
  const GALGAS_nonTerminalLabelListAST operand0 = GALGAS_nonTerminalLabelListAST::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                                 inCompiler
                                                                                                 COMMA_THERE) ;
  return function_transformLabelMap (operand0,
                                     inCompiler
                                     COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_transformLabelMap ("transformLabelMap",
                                                                   functionWithGenericHeader_transformLabelMap,
                                                                   & kTypeDescriptor_GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis,
                                                                   1,
                                                                   functionArgs_transformLabelMap) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'checkLabelMap'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_checkLabelMap (const GALGAS_location constinArgument_inNonTerminalLocation,
                            const GALGAS_nonTerminalLabelListAST constinArgument_inLabels,
                            const GALGAS_location constinArgument_inOriginalNonTerminalLocation,
                            const GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis constinArgument_inNonterminalSymbolLabelMapForGrammarAnalysis,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset var_labelStringSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("grammarCompilation.gSemantics", 55)) ;
  cEnumerator_nonTerminalLabelListAST enumerator_2679 (constinArgument_inLabels, kEnumeration_up) ;
  while (enumerator_2679.hasCurrentObject ()) {
    var_labelStringSet.addAssign_operation (enumerator_2679.current_mLabelName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 57))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 57)) ;
    GALGAS_signatureForGrammarAnalysis var_formalParametersList ;
    constinArgument_inNonterminalSymbolLabelMapForGrammarAnalysis.method_searchKey (enumerator_2679.current_mLabelName (HERE), var_formalParametersList, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 59)) ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_2679.current_mFormalArgumentList (HERE).reader_length (SOURCE_FILE ("grammarCompilation.gSemantics", 60)).objectCompare (var_formalParametersList.reader_length (SOURCE_FILE ("grammarCompilation.gSemantics", 60)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string temp_1 ;
      const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, enumerator_2679.current_mFormalArgumentList (HERE).reader_length (SOURCE_FILE ("grammarCompilation.gSemantics", 63)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
      if (kBoolTrue == test_2) {
        temp_1 = GALGAS_string ("s") ;
      }else if (kBoolFalse == test_2) {
        temp_1 = GALGAS_string::makeEmptyString () ;
      }
      GALGAS_string temp_3 ;
      const enumGalgasBool test_4 = GALGAS_bool (kIsStrictSup, var_formalParametersList.reader_length (SOURCE_FILE ("grammarCompilation.gSemantics", 67)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
      if (kBoolTrue == test_4) {
        temp_3 = GALGAS_string ("s") ;
      }else if (kBoolFalse == test_4) {
        temp_3 = GALGAS_string::makeEmptyString () ;
      }
      GALGAS_location location_5 (enumerator_2679.current_mLabelName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, enumerator_2679.current_mFormalArgumentList (HERE).reader_length (SOURCE_FILE ("grammarCompilation.gSemantics", 61)).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 61)).operator_concat (GALGAS_string (" formal parameter")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 61)).operator_concat (temp_1  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 62)).operator_concat (GALGAS_string (" declared here, but declaration at ")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 63)).operator_concat (constinArgument_inNonterminalSymbolLabelMapForGrammarAnalysis.reader_locationForKey (enumerator_2679.current_mLabelName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 65)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 65)).reader_locationString (inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 65))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 64)).operator_concat (GALGAS_string (" names ")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 65)).operator_concat (var_formalParametersList.reader_length (SOURCE_FILE ("grammarCompilation.gSemantics", 66)).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 66))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 66)).operator_concat (GALGAS_string (" parameter")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 66)).operator_concat (temp_3  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 66))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 61)) ;
    }else if (kBoolFalse == test_0) {
      cEnumerator_formalParameterListAST enumerator_3462 (enumerator_2679.current_mFormalArgumentList (HERE), kEnumeration_up) ;
      cEnumerator_signatureForGrammarAnalysis enumerator_3484 (var_formalParametersList, kEnumeration_up) ;
      while (enumerator_3462.hasCurrentObject () && enumerator_3484.hasCurrentObject ()) {
        const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, enumerator_3484.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (enumerator_3462.current_mFormalArgumentPassingMode (HERE))).boolEnum () ;
        if (kBoolTrue == test_6) {
          GALGAS_location location_7 (enumerator_3484.current_mGalgasTypeNameForGrammarAnalysis (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_7, GALGAS_string (" this formal parameter is declared with ").operator_concat (categoryReader_formalArgumentString (enumerator_3484.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 73))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 72)).operator_concat (GALGAS_string (" passing mode, but declaration at ")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 73)).operator_concat (constinArgument_inNonterminalSymbolLabelMapForGrammarAnalysis.reader_locationForKey (enumerator_2679.current_mLabelName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 75)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 75)).reader_locationString (inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 75))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 74)).operator_concat (GALGAS_string (" is declared with ")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 75)).operator_concat (categoryReader_formalArgumentString (enumerator_3462.current_mFormalArgumentPassingMode (HERE), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 76))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 76)).operator_concat (GALGAS_string (" passing mode")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 76))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 71)) ;
        }
        const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, enumerator_3484.current_mGalgasTypeNameForGrammarAnalysis (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 78)).objectCompare (enumerator_3462.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 78)))).boolEnum () ;
        if (kBoolTrue == test_8) {
          GALGAS_location location_9 (enumerator_3484.current_mGalgasTypeNameForGrammarAnalysis (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_9, GALGAS_string (" this formal parameter is declared of '@").operator_concat (enumerator_3484.current_mGalgasTypeNameForGrammarAnalysis (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 80))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 80)).operator_concat (GALGAS_string ("' type, but declaration at ")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 81)).operator_concat (constinArgument_inNonterminalSymbolLabelMapForGrammarAnalysis.reader_locationForKey (enumerator_2679.current_mLabelName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 83)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 83)).reader_locationString (inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 83))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 82)).operator_concat (GALGAS_string (" is declared with '@")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 83)).operator_concat (enumerator_3462.current_mFormalArgumentTypeName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 84))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 84)).operator_concat (GALGAS_string ("' type")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 84))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 79)) ;
        }
        enumerator_3462.gotoNextObject () ;
        enumerator_3484.gotoNextObject () ;
      }
    }
    enumerator_2679.gotoNextObject () ;
  }
  cEnumerator_nonterminalSymbolLabelMapForGrammarAnalysis enumerator_4653 (constinArgument_inNonterminalSymbolLabelMapForGrammarAnalysis, kEnumeration_up) ;
  while (enumerator_4653.hasCurrentObject ()) {
    const enumGalgasBool test_10 = var_labelStringSet.reader_hasKey (enumerator_4653.current_lkey (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 91)) COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 91)).operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 91)).boolEnum () ;
    if (kBoolTrue == test_10) {
      inCompiler->emitSemanticError (constinArgument_inNonTerminalLocation, GALGAS_string ("this non terminal does not declare the '").operator_concat (enumerator_4653.current_lkey (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 93))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 93)).operator_concat (GALGAS_string ("' label, but declaration at ")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 93)).operator_concat (constinArgument_inOriginalNonTerminalLocation.reader_locationString (inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 94))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 93)).operator_concat (GALGAS_string (" does")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 94))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 92)) ;
    }
    enumerator_4653.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Routine 'handleNonTerminalDeclarations'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_handleNonTerminalDeclarations (GALGAS_nonTerminalSymbolMapForGrammarAnalysis & ioArgument_ioNonTerminalMapForGrammarAnalysis,
                                            const GALGAS_nonterminalDeclarationListAST constinArgument_inNonterminalDeclarationList,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_nonterminalDeclarationListAST enumerator_5264 (constinArgument_inNonterminalDeclarationList, kEnumeration_up) ;
  while (enumerator_5264.hasCurrentObject ()) {
    const cMapElement_nonTerminalSymbolMapForGrammarAnalysis * objectArray_5276 = (const cMapElement_nonTerminalSymbolMapForGrammarAnalysis *) ioArgument_ioNonTerminalMapForGrammarAnalysis.readAccessForWithInstruction (enumerator_5264.current_mNonterminalName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 107))) ;
    if (NULL != objectArray_5276) {
        macroValidSharedObject (objectArray_5276, cMapElement_nonTerminalSymbolMapForGrammarAnalysis) ;
      {
      routine_checkLabelMap (enumerator_5264.current_mNonterminalName (HERE).reader_location (SOURCE_FILE ("grammarCompilation.gSemantics", 109)), enumerator_5264.current_mLabels (HERE), ioArgument_ioNonTerminalMapForGrammarAnalysis.reader_locationForKey (enumerator_5264.current_mNonterminalName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 111)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 111)), objectArray_5276->mAttribute_mNonterminalSymbolParametersMap, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 108)) ;
      }
    }else{
      {
      ioArgument_ioNonTerminalMapForGrammarAnalysis.modifier_insertKey (enumerator_5264.current_mNonterminalName (HERE), ioArgument_ioNonTerminalMapForGrammarAnalysis.reader_count (SOURCE_FILE ("grammarCompilation.gSemantics", 117)), function_transformLabelMap (enumerator_5264.current_mLabels (HERE), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 118)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 115)) ;
      }
    }
    enumerator_5264.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 Routine 'handleNonTerminalDeclarationsFromRuleList'                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_handleNonTerminalDeclarationsFromRuleList (GALGAS_nonTerminalSymbolMapForGrammarAnalysis & ioArgument_ioNonTerminalMapForGrammarAnalysis,
                                                        const GALGAS_syntaxRuleListAST constinArgument_inRuleList,
                                                        C_Compiler * inCompiler
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_syntaxRuleListAST enumerator_6061 (constinArgument_inRuleList, kEnumeration_up) ;
  while (enumerator_6061.hasCurrentObject ()) {
    GALGAS_nonTerminalLabelListAST var_nonTerminalLabelListAST = GALGAS_nonTerminalLabelListAST::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 131)) ;
    cEnumerator_syntaxRuleLabelListAST enumerator_6154 (enumerator_6061.current_mLabelList (HERE), kEnumeration_up) ;
    while (enumerator_6154.hasCurrentObject ()) {
      var_nonTerminalLabelListAST.addAssign_operation (enumerator_6154.current_mLabelName (HERE), enumerator_6154.current_mFormalArguments (HERE), enumerator_6154.current_mEndOfArgumentLocation (HERE)  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 133)) ;
      enumerator_6154.gotoNextObject () ;
    }
    const cMapElement_nonTerminalSymbolMapForGrammarAnalysis * objectArray_6304 = (const cMapElement_nonTerminalSymbolMapForGrammarAnalysis *) ioArgument_ioNonTerminalMapForGrammarAnalysis.readAccessForWithInstruction (enumerator_6061.current_mNonterminalName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 139))) ;
    if (NULL != objectArray_6304) {
        macroValidSharedObject (objectArray_6304, cMapElement_nonTerminalSymbolMapForGrammarAnalysis) ;
      {
      routine_checkLabelMap (enumerator_6061.current_mNonterminalName (HERE).reader_location (SOURCE_FILE ("grammarCompilation.gSemantics", 141)), var_nonTerminalLabelListAST, ioArgument_ioNonTerminalMapForGrammarAnalysis.reader_locationForKey (enumerator_6061.current_mNonterminalName (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 143)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 143)), objectArray_6304->mAttribute_mNonterminalSymbolParametersMap, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 140)) ;
      }
    }else{
      {
      ioArgument_ioNonTerminalMapForGrammarAnalysis.modifier_insertKey (enumerator_6061.current_mNonterminalName (HERE), ioArgument_ioNonTerminalMapForGrammarAnalysis.reader_count (SOURCE_FILE ("grammarCompilation.gSemantics", 149)), function_transformLabelMap (var_nonTerminalLabelListAST, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 150)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 147)) ;
      }
    }
    enumerator_6061.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Routine 'transformInstructionList'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_transformInstructionList (const GALGAS_syntaxInstructionList constinArgument_inInstructionList,
                                       GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument_ioActuallyUsedTerminalSymbolMap,
                                       const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument_inNonTerminalSymbolMap,
                                       GALGAS_uint & ioArgument_ioAddedNonTerminalIndex,
                                       GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument_ioSyntaxInstructionList,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_syntaxInstructionList enumerator_8424 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_8424.hasCurrentObject ()) {
    callCategoryMethod_transformInstruction ((const cPtr_syntaxInstructionAST *) enumerator_8424.current_mInstruction (HERE).ptr (), ioArgument_ioActuallyUsedTerminalSymbolMap, constinArgument_inNonTerminalSymbolMap, ioArgument_ioAddedNonTerminalIndex, ioArgument_ioSyntaxInstructionList, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 187)) ;
    enumerator_8424.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'buildRuleList'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_buildRuleList (const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument_inNonTerminalMapForGrammarAnalysis,
                            const GALGAS_lstring constinArgument_inSyntaxComponentName,
                            const GALGAS_syntaxRuleListAST constinArgument_inRuleList,
                            GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument_ioActuallyUsedTerminalSymbolMap,
                            GALGAS_syntaxComponentListForGrammarAnalysis & ioArgument_ioSyntaxComponentListForGrammarAnalysis,
                            GALGAS_uint & ioArgument_ioAddedNonTerminalCount,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_productionRuleListForGrammarAnalysis var_productionRulesList = GALGAS_productionRuleListForGrammarAnalysis::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 380)) ;
  cEnumerator_syntaxRuleListAST enumerator_16345 (constinArgument_inRuleList, kEnumeration_up) ;
  while (enumerator_16345.hasCurrentObject ()) {
    GALGAS_uint var_nonTerminalIndex ;
    GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis var_nonterminalSymbolParametersMap ;
    constinArgument_inNonTerminalMapForGrammarAnalysis.method_searchKey (enumerator_16345.current_mNonterminalName (HERE), var_nonTerminalIndex, var_nonterminalSymbolParametersMap, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 384)) ;
    GALGAS_syntaxInstructionList var_parsedSyntaxInstructionList ;
    GALGAS_lstring joker_16707_0 ; // Joker input parameter
    GALGAS_formalParameterListAST joker_16710_0 ; // Joker input parameter
    GALGAS_location joker_16713_0 ; // Joker input parameter
    GALGAS_location joker_16745_0 ; // Joker input parameter
    enumerator_16345.current_mLabelList (HERE).method_first (joker_16707_0, joker_16710_0, joker_16713_0, var_parsedSyntaxInstructionList, joker_16745_0, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 386)) ;
    GALGAS_syntaxInstructionListForGrammarAnalysis var_instructionList = GALGAS_syntaxInstructionListForGrammarAnalysis::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 388)) ;
    {
    routine_transformInstructionList (var_parsedSyntaxInstructionList, ioArgument_ioActuallyUsedTerminalSymbolMap, constinArgument_inNonTerminalMapForGrammarAnalysis, ioArgument_ioAddedNonTerminalCount, var_instructionList, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 389)) ;
    }
    var_productionRulesList.addAssign_operation (enumerator_16345.current_mNonterminalName (HERE), var_nonTerminalIndex, var_instructionList, var_productionRulesList.reader_length (SOURCE_FILE ("grammarCompilation.gSemantics", 401))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 397)) ;
    enumerator_16345.gotoNextObject () ;
  }
  ioArgument_ioSyntaxComponentListForGrammarAnalysis.addAssign_operation (var_productionRulesList, constinArgument_inSyntaxComponentName  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 404)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  Class for element of '@nonTerminalToAddList' list                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_nonTerminalToAddList : public cCollectionElement {
  public : GALGAS_nonTerminalToAddList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_nonTerminalToAddList (const GALGAS_string & in_mSyntaxComponentName,
                                                    const GALGAS_uint & in_mNonTerminalToAddCount
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_nonTerminalToAddList::cCollectionElement_nonTerminalToAddList (const GALGAS_string & in_mSyntaxComponentName,
                                                                                  const GALGAS_uint & in_mNonTerminalToAddCount
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mSyntaxComponentName, in_mNonTerminalToAddCount) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_nonTerminalToAddList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_nonTerminalToAddList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_nonTerminalToAddList (mObject.mAttribute_mSyntaxComponentName, mObject.mAttribute_mNonTerminalToAddCount COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_nonTerminalToAddList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSyntaxComponentName" ":" ;
  mObject.mAttribute_mSyntaxComponentName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mNonTerminalToAddCount" ":" ;
  mObject.mAttribute_mNonTerminalToAddCount.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_nonTerminalToAddList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_nonTerminalToAddList * operand = (cCollectionElement_nonTerminalToAddList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_nonTerminalToAddList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList::GALGAS_nonTerminalToAddList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList::GALGAS_nonTerminalToAddList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList GALGAS_nonTerminalToAddList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_nonTerminalToAddList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList GALGAS_nonTerminalToAddList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                    const GALGAS_uint & inOperand1
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_nonTerminalToAddList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_nonTerminalToAddList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_string & in_mSyntaxComponentName,
                                                             const GALGAS_uint & in_mNonTerminalToAddCount
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_nonTerminalToAddList * p = NULL ;
  macroMyNew (p, cCollectionElement_nonTerminalToAddList (in_mSyntaxComponentName,
                                                          in_mNonTerminalToAddCount COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList::addAssign_operation (const GALGAS_string & inOperand0,
                                                       const GALGAS_uint & inOperand1
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_nonTerminalToAddList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList::modifier_insertAtIndex (const GALGAS_string inOperand0,
                                                          const GALGAS_uint inOperand1,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_nonTerminalToAddList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList::modifier_removeAtIndex (GALGAS_string & outOperand0,
                                                          GALGAS_uint & outOperand1,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_nonTerminalToAddList * p = (cCollectionElement_nonTerminalToAddList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
      outOperand0 = p->mObject.mAttribute_mSyntaxComponentName ;
      outOperand1 = p->mObject.mAttribute_mNonTerminalToAddCount ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList::modifier_popFirst (GALGAS_string & outOperand0,
                                                     GALGAS_uint & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_nonTerminalToAddList * p = (cCollectionElement_nonTerminalToAddList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
    outOperand0 = p->mObject.mAttribute_mSyntaxComponentName ;
    outOperand1 = p->mObject.mAttribute_mNonTerminalToAddCount ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList::modifier_popLast (GALGAS_string & outOperand0,
                                                    GALGAS_uint & outOperand1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_nonTerminalToAddList * p = (cCollectionElement_nonTerminalToAddList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
    outOperand0 = p->mObject.mAttribute_mSyntaxComponentName ;
    outOperand1 = p->mObject.mAttribute_mNonTerminalToAddCount ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList::method_first (GALGAS_string & outOperand0,
                                                GALGAS_uint & outOperand1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_nonTerminalToAddList * p = (cCollectionElement_nonTerminalToAddList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
    outOperand0 = p->mObject.mAttribute_mSyntaxComponentName ;
    outOperand1 = p->mObject.mAttribute_mNonTerminalToAddCount ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList::method_last (GALGAS_string & outOperand0,
                                               GALGAS_uint & outOperand1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_nonTerminalToAddList * p = (cCollectionElement_nonTerminalToAddList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
    outOperand0 = p->mObject.mAttribute_mSyntaxComponentName ;
    outOperand1 = p->mObject.mAttribute_mNonTerminalToAddCount ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList GALGAS_nonTerminalToAddList::operator_concat (const GALGAS_nonTerminalToAddList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_nonTerminalToAddList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList GALGAS_nonTerminalToAddList::add_operation (const GALGAS_nonTerminalToAddList & inOperand,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_nonTerminalToAddList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList GALGAS_nonTerminalToAddList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_nonTerminalToAddList result = GALGAS_nonTerminalToAddList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList GALGAS_nonTerminalToAddList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_nonTerminalToAddList result = GALGAS_nonTerminalToAddList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList::dotAssign_operation (const GALGAS_nonTerminalToAddList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_nonTerminalToAddList::reader_mSyntaxComponentNameAtIndex (const GALGAS_uint & inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_nonTerminalToAddList * p = (cCollectionElement_nonTerminalToAddList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
    result = p->mObject.mAttribute_mSyntaxComponentName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_nonTerminalToAddList::reader_mNonTerminalToAddCountAtIndex (const GALGAS_uint & inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_nonTerminalToAddList * p = (cCollectionElement_nonTerminalToAddList *) attributes.ptr () ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
    result = p->mObject.mAttribute_mNonTerminalToAddCount ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_nonTerminalToAddList::cEnumerator_nonTerminalToAddList (const GALGAS_nonTerminalToAddList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList_2D_element cEnumerator_nonTerminalToAddList::current (LOCATION_ARGS) const {
  const cCollectionElement_nonTerminalToAddList * p = (const cCollectionElement_nonTerminalToAddList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_nonTerminalToAddList::current_mSyntaxComponentName (LOCATION_ARGS) const {
  const cCollectionElement_nonTerminalToAddList * p = (const cCollectionElement_nonTerminalToAddList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
  return p->mObject.mAttribute_mSyntaxComponentName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cEnumerator_nonTerminalToAddList::current_mNonTerminalToAddCount (LOCATION_ARGS) const {
  const cCollectionElement_nonTerminalToAddList * p = (const cCollectionElement_nonTerminalToAddList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_nonTerminalToAddList) ;
  return p->mObject.mAttribute_mNonTerminalToAddCount ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @nonTerminalToAddList type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nonTerminalToAddList ("nonTerminalToAddList",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nonTerminalToAddList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nonTerminalToAddList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nonTerminalToAddList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nonTerminalToAddList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList GALGAS_nonTerminalToAddList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_nonTerminalToAddList result ;
  const GALGAS_nonTerminalToAddList * p = (const GALGAS_nonTerminalToAddList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nonTerminalToAddList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("nonTerminalToAddList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Filewrapper 'grammarGenerationTemplate'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_grammarGenerationTemplate_0 [1] = {
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_grammarGenerationTemplate_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_grammarGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_grammarGenerationTemplate_0,
  0,
  gWrapperAllDirectories_grammarGenerationTemplate_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Filewrapper template 'grammarGenerationTemplate grammarZone2Header'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_grammarGenerationTemplate_grammarZone_32_Header (C_Compiler * /* inCompiler */,
                                                                                   const GALGAS_galgas_33_GrammarComponentListAST_2D_element & in_GRAMMAR_5F_COMPONENT_5F_ROOT
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#ifndef GRAMMAR_" ;
  result << in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mGrammarComponentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone2.h.gTemplate", 1)).stringValue () ;
  result << "_HAS_BEEN_DEFINED\n"
    "#define GRAMMAR_" ;
  result << in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mGrammarComponentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone2.h.gTemplate", 2)).stringValue () ;
  result << "_HAS_BEEN_DEFINED\n"
    "\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_394_ (0) ;
  if (in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mSyntaxComponents (SOURCE_FILE ("grammar-zone2.h.gTemplate", 6)).isValid ()) {
    cEnumerator_lstringlist enumerator_394 (in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mSyntaxComponents (SOURCE_FILE ("grammar-zone2.h.gTemplate", 6)), kEnumeration_up) ;
    while (enumerator_394.hasCurrentObject ()) {
      result << "#include \"" ;
      result << enumerator_394.current_mValue (HERE).reader_string (SOURCE_FILE ("grammar-zone2.h.gTemplate", 7)).reader_stringByDeletingPathExtension (SOURCE_FILE ("grammar-zone2.h.gTemplate", 7)).stringValue () ;
      result << ".h\"\n" ;
      index_394_.increment () ;
      enumerator_394.gotoNextObject () ;
    }
  }
  result << "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Filewrapper template 'grammarGenerationTemplate grammarZone2HeaderGalgas3'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_grammarGenerationTemplate_grammarZone_32_HeaderGalgas_33_ (C_Compiler * /* inCompiler */,
                                                                                             const GALGAS_galgas_33_GrammarComponentListAST_2D_element & in_GRAMMAR_5F_COMPONENT_5F_ROOT
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  result << "#ifndef GRAMMAR_" ;
  result << in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mGrammarComponentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone2-galgas3.h.gTemplate", 1)).stringValue () ;
  result << "_HAS_BEEN_DEFINED\n"
    "#define GRAMMAR_" ;
  result << in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mGrammarComponentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone2-galgas3.h.gTemplate", 2)).stringValue () ;
  result << "_HAS_BEEN_DEFINED\n"
    "\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n" ;
  GALGAS_uint index_392_ (0) ;
  if (in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mSyntaxComponents.isValid ()) {
    cEnumerator_lstringlist enumerator_392 (in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mSyntaxComponents, kEnumeration_up) ;
    while (enumerator_392.hasCurrentObject ()) {
      result << "#include \"syntax-" ;
      result << enumerator_392.current_mValue (HERE).mAttribute_string.stringValue () ;
      result << ".h\"\n" ;
      index_392_.increment () ;
      enumerator_392.gotoNextObject () ;
    }
  }
  result << "\n"
    "\n"
    "\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Filewrapper template 'grammarGenerationTemplate grammarZone3Header'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_grammarGenerationTemplate_grammarZone_33_Header (C_Compiler * inCompiler,
                                                                                   const GALGAS_string & in_LEXIQUE_5F_IDENTIFIER,
                                                                                   const GALGAS_galgas_33_GrammarComponentListAST_2D_element & in_GRAMMAR_5F_COMPONENT_5F_ROOT,
                                                                                   const GALGAS_nonTerminalSymbolMapForGrammarAnalysis & in_NON_5F_TERMINAL_5F_MAP,
                                                                                   const GALGAS_nonTerminalToAddList & in_ADDED_5F_NON_5F_TERMINAL_5F_LIST,
                                                                                   const GALGAS_bool & in_HAS_5F_INDEXING
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  uint32_t columnMarker = 0 ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "class cGrammar_" ;
  result << in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mGrammarComponentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 3)).stringValue () ;
  result << " : " ;
  columnMarker = result.currentColumn () ;
  GALGAS_uint index_274_ (0) ;
  if (in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mSyntaxComponents (SOURCE_FILE ("grammar-zone3.h.gTemplate", 4)).isValid ()) {
    cEnumerator_lstringlist enumerator_274 (in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mSyntaxComponents (SOURCE_FILE ("grammar-zone3.h.gTemplate", 4)), kEnumeration_up) ;
    while (enumerator_274.hasCurrentObject ()) {
      result << "public cParser_" ;
      result << enumerator_274.current_mValue (HERE).reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 5)).reader_stringByDeletingPathExtension (SOURCE_FILE ("grammar-zone3.h.gTemplate", 5)).reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 5)).stringValue () ;
      if (enumerator_274.hasNextObject ()) {
        result << ",\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
      }
      index_274_.increment () ;
      enumerator_274.gotoNextObject () ;
    }
  }
  result << " {\n" ;
  GALGAS_uint index_426_ (0) ;
  if (in_NON_5F_TERMINAL_5F_MAP.isValid ()) {
    cEnumerator_nonTerminalSymbolMapForGrammarAnalysis enumerator_426 (in_NON_5F_TERMINAL_5F_MAP, kEnumeration_up) ;
    while (enumerator_426.hasCurrentObject ()) {
      result << "//------------------------------------- '" ;
      result << enumerator_426.current_lkey (HERE).reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 11)).stringValue () ;
      result << "' non terminal\n"
        "//--- 'parse' label\n"
        "  public : virtual void nt_" ;
      result << enumerator_426.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 14)).stringValue () ;
      result << "_parse (" ;
      columnMarker = result.currentColumn () ;
      const enumGalgasBool test_0 = in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mHasTranslateFeature.boolEnum () ;
      if (kBoolTrue == test_0) {
        result << "C_String & " ;
        result << function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammar-zone3.h.gTemplate", 16)).stringValue () ;
        result << ",\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
      }else if (kBoolFalse == test_0) {
      }
      result << "C_Lexique_" ;
      result << in_LEXIQUE_5F_IDENTIFIER.stringValue () ;
      result << " * inCompiler) ;\n"
        "\n" ;
      const enumGalgasBool test_1 = in_HAS_5F_INDEXING.boolEnum () ;
      if (kBoolTrue == test_1) {
        result << "//--- indexing\n"
          "  public : virtual void nt_" ;
        result << enumerator_426.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 22)).stringValue () ;
        result << "_indexing (C_Lexique_" ;
        result << in_LEXIQUE_5F_IDENTIFIER.stringValue () ;
        result << " * inCompiler) ;\n"
          "\n" ;
      }else if (kBoolFalse == test_1) {
      }
      GALGAS_uint index_1079_ (0) ;
      if (enumerator_426.current_mNonterminalSymbolParametersMap (HERE).isValid ()) {
        cEnumerator_nonterminalSymbolLabelMapForGrammarAnalysis enumerator_1079 (enumerator_426.current_mNonterminalSymbolParametersMap (HERE), kEnumeration_up) ;
        while (enumerator_1079.hasCurrentObject ()) {
          result << "//----------- '" ;
          result << enumerator_1079.current_lkey (HERE).reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 25)).stringValue () ;
          result << "' label\n"
            "  public : virtual void nt_" ;
          result << enumerator_426.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 27)).stringValue () ;
          result << "_" ;
          result << enumerator_1079.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 27)).stringValue () ;
          result << " (" ;
          columnMarker = result.currentColumn () ;
          GALGAS_uint index_1330_IDX (0) ;
          if (enumerator_1079.current_mFormalParametersList (HERE).isValid ()) {
            cEnumerator_signatureForGrammarAnalysis enumerator_1330 (enumerator_1079.current_mFormalParametersList (HERE), kEnumeration_up) ;
            while (enumerator_1330.hasCurrentObject ()) {
              const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_1330.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE ("grammar-zone3.h.gTemplate", 29)))).boolEnum () ;
              if (kBoolTrue == test_2) {
                result << "const GALGAS_" ;
                result << enumerator_1330.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 30)).stringValue () ;
                result << " inArgument" ;
                result << index_1330_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 30)).stringValue () ;
              }else if (kBoolFalse == test_2) {
                const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_1330.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE ("grammar-zone3.h.gTemplate", 31)))).boolEnum () ;
                if (kBoolTrue == test_3) {
                  result << "GALGAS_" ;
                  result << enumerator_1330.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 32)).stringValue () ;
                  result << " & ioArgument" ;
                  result << index_1330_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 32)).stringValue () ;
                }else if (kBoolFalse == test_3) {
                  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, enumerator_1330.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE ("grammar-zone3.h.gTemplate", 33)))).boolEnum () ;
                  if (kBoolTrue == test_4) {
                    result << "GALGAS_" ;
                    result << enumerator_1330.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 34)).stringValue () ;
                    result << " & outArgument" ;
                    result << index_1330_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 34)).stringValue () ;
                  }else if (kBoolFalse == test_4) {
                    result << "GALGAS_" ;
                    result << enumerator_1330.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 36)).stringValue () ;
                    result << " inArgument" ;
                    result << index_1330_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 36)).stringValue () ;
                  }
                }
              }
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
              index_1330_IDX.increment () ;
              enumerator_1330.gotoNextObject () ;
            }
          }
          const enumGalgasBool test_5 = in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mHasTranslateFeature.boolEnum () ;
          if (kBoolTrue == test_5) {
            result << "C_String & " ;
            result << function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammar-zone3.h.gTemplate", 41)).stringValue () ;
            result << ",\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
          }else if (kBoolFalse == test_5) {
          }
          result << "C_Lexique_" ;
          result << in_LEXIQUE_5F_IDENTIFIER.stringValue () ;
          result << " * inCompiler) ;\n"
            "\n" ;
          const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mStartSymbolName (SOURCE_FILE ("grammar-zone3.h.gTemplate", 45)).reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 45)).objectCompare (enumerator_426.current_lkey (HERE).reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 45)))).boolEnum () ;
          if (kBoolTrue == test_6) {
            result << "//--- Start symbol\n"
              "  public : static void _performSourceFileParsing_" ;
            result << enumerator_1079.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 47)).stringValue () ;
            result << " (" ;
            columnMarker = result.currentColumn () ;
            result << "C_Compiler * inCompiler,\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
            const enumGalgasBool test_7 = in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mHasTranslateFeature.boolEnum () ;
            if (kBoolTrue == test_7) {
              result << "C_String & " ;
              result << function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammar-zone3.h.gTemplate", 50)).stringValue () ;
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
            }else if (kBoolFalse == test_7) {
            }
            result << "GALGAS_lstring inFileName" ;
            GALGAS_uint index_2855_IDX (0) ;
            if (enumerator_1079.current_mFormalParametersList (HERE).isValid ()) {
              cEnumerator_signatureForGrammarAnalysis enumerator_2855 (enumerator_1079.current_mFormalParametersList (HERE), kEnumeration_up) ;
              while (enumerator_2855.hasCurrentObject ()) {
                result << ",\n" ;
                result.appendSpacesUntilColumn (columnMarker) ;
                const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_2855.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE ("grammar-zone3.h.gTemplate", 55)))).boolEnum () ;
                if (kBoolTrue == test_8) {
                  result << "const GALGAS_" ;
                  result << enumerator_2855.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 56)).stringValue () ;
                  result << " inArgument" ;
                  result << index_2855_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 56)).stringValue () ;
                }else if (kBoolFalse == test_8) {
                  const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, enumerator_2855.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE ("grammar-zone3.h.gTemplate", 57)))).boolEnum () ;
                  if (kBoolTrue == test_9) {
                    result << "GALGAS_" ;
                    result << enumerator_2855.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 58)).stringValue () ;
                    result << " & ioArgument" ;
                    result << index_2855_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 58)).stringValue () ;
                  }else if (kBoolFalse == test_9) {
                    const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, enumerator_2855.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE ("grammar-zone3.h.gTemplate", 59)))).boolEnum () ;
                    if (kBoolTrue == test_10) {
                      result << "GALGAS_" ;
                      result << enumerator_2855.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 60)).stringValue () ;
                      result << " & outArgument" ;
                      result << index_2855_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 60)).stringValue () ;
                    }else if (kBoolFalse == test_10) {
                      result << "GALGAS_" ;
                      result << enumerator_2855.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 62)).stringValue () ;
                      result << " inArgument" ;
                      result << index_2855_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 62)).stringValue () ;
                    }
                  }
                }
                index_2855_IDX.increment () ;
                enumerator_2855.gotoNextObject () ;
              }
            }
            result << "\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
            result << "COMMA_LOCATION_ARGS) ;\n"
              "\n"
              "  public : static void _performSourceStringParsing_" ;
            result << enumerator_1079.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 66)).stringValue () ;
            result << " (" ;
            columnMarker = result.currentColumn () ;
            result << "C_Compiler * inCompiler,\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
            const enumGalgasBool test_11 = in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mHasTranslateFeature.boolEnum () ;
            if (kBoolTrue == test_11) {
              result << "C_String & " ;
              result << function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammar-zone3.h.gTemplate", 69)).stringValue () ;
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
            }else if (kBoolFalse == test_11) {
            }
            result << "GALGAS_string inSourceString" ;
            GALGAS_uint index_4125_IDX (0) ;
            if (enumerator_1079.current_mFormalParametersList (HERE).isValid ()) {
              cEnumerator_signatureForGrammarAnalysis enumerator_4125 (enumerator_1079.current_mFormalParametersList (HERE), kEnumeration_up) ;
              while (enumerator_4125.hasCurrentObject ()) {
                result << ",\n" ;
                result.appendSpacesUntilColumn (columnMarker) ;
                const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, enumerator_4125.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE ("grammar-zone3.h.gTemplate", 74)))).boolEnum () ;
                if (kBoolTrue == test_12) {
                  result << "const GALGAS_" ;
                  result << enumerator_4125.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 75)).stringValue () ;
                  result << " inArgument" ;
                  result << index_4125_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 75)).stringValue () ;
                }else if (kBoolFalse == test_12) {
                  const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, enumerator_4125.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE ("grammar-zone3.h.gTemplate", 76)))).boolEnum () ;
                  if (kBoolTrue == test_13) {
                    result << "GALGAS_" ;
                    result << enumerator_4125.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 77)).stringValue () ;
                    result << " & ioArgument" ;
                    result << index_4125_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 77)).stringValue () ;
                  }else if (kBoolFalse == test_13) {
                    const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, enumerator_4125.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE ("grammar-zone3.h.gTemplate", 78)))).boolEnum () ;
                    if (kBoolTrue == test_14) {
                      result << "GALGAS_" ;
                      result << enumerator_4125.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 79)).stringValue () ;
                      result << " & outArgument" ;
                      result << index_4125_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 79)).stringValue () ;
                    }else if (kBoolFalse == test_14) {
                      result << "GALGAS_" ;
                      result << enumerator_4125.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 81)).stringValue () ;
                      result << " inArgument" ;
                      result << index_4125_IDX.reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 81)).stringValue () ;
                    }
                  }
                }
                index_4125_IDX.increment () ;
                enumerator_4125.gotoNextObject () ;
              }
            }
            result << "\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
            result << "COMMA_LOCATION_ARGS) ;\n"
              "\n" ;
          }else if (kBoolFalse == test_6) {
          }
          index_1079_.increment () ;
          enumerator_1079.gotoNextObject () ;
        }
      }
      const enumGalgasBool test_15 = in_HAS_5F_INDEXING.operator_and (GALGAS_bool (kIsEqual, in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mStartSymbolName (SOURCE_FILE ("grammar-zone3.h.gTemplate", 88)).reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 88)).objectCompare (enumerator_426.current_lkey (HERE).reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 88)))) COMMA_SOURCE_FILE ("grammar-zone3.h.gTemplate", 88)).boolEnum () ;
      if (kBoolTrue == test_15) {
        result << "//--- Start symbol indexing\n"
          "  public : static void performIndexing (" ;
        columnMarker = result.currentColumn () ;
        result << "C_Compiler * inCompiler,\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
        result << "const C_String & inSourceFilePath) ;\n"
          "\n" ;
      }else if (kBoolFalse == test_15) {
      }
      index_426_.increment () ;
      enumerator_426.gotoNextObject () ;
    }
  }
  GALGAS_uint index_5361_ (0) ;
  if (in_ADDED_5F_NON_5F_TERMINAL_5F_LIST.isValid ()) {
    cEnumerator_nonTerminalToAddList enumerator_5361 (in_ADDED_5F_NON_5F_TERMINAL_5F_LIST, kEnumeration_up) ;
    while (enumerator_5361.hasCurrentObject ()) {
      result << "  public : virtual int32_t select_" ;
      result << enumerator_5361.current_mSyntaxComponentName (HERE).reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3.h.gTemplate", 96)).stringValue () ;
      result << "_" ;
      result << enumerator_5361.current_mNonTerminalToAddCount (HERE).reader_string (SOURCE_FILE ("grammar-zone3.h.gTemplate", 96)).stringValue () ;
      result << " (C_Lexique_" ;
      result << in_LEXIQUE_5F_IDENTIFIER.stringValue () ;
      result << " *) ;\n" ;
      if (enumerator_5361.hasNextObject ()) {
        result << "\n" ;
      }
      index_5361_.increment () ;
      enumerator_5361.gotoNextObject () ;
    }
  }
  result << "} ;\n"
    "\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "#endif\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Filewrapper template 'grammarGenerationTemplate grammarZone3HeaderGalgas3'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string filewrapperTemplate_grammarGenerationTemplate_grammarZone_33_HeaderGalgas_33_ (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & in_LEXIQUE_5F_IDENTIFIER,
                                                                                             const GALGAS_galgas_33_GrammarComponentListAST_2D_element & in_GRAMMAR_5F_COMPONENT_5F_ROOT,
                                                                                             const GALGAS_nonTerminalSymbolMapForGrammarAnalysis & in_NON_5F_TERMINAL_5F_MAP,
                                                                                             const GALGAS_nonTerminalToAddList & in_ADDED_5F_NON_5F_TERMINAL_5F_LIST,
                                                                                             const GALGAS_bool & in_HAS_5F_INDEXING
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  C_String result ;
  uint32_t columnMarker = 0 ;
  result << "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "class C_Compiler ;\n"
    "class GALGAS_lstring ;\n"
    "class GALGAS_string ;\n"
    "\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "class cGrammar_" ;
  result << in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mGrammarComponentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 9)).stringValue () ;
  result << " : " ;
  columnMarker = result.currentColumn () ;
  GALGAS_uint index_461_ (0) ;
  if (in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mSyntaxComponents (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 10)).isValid ()) {
    cEnumerator_lstringlist enumerator_461 (in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mSyntaxComponents (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 10)), kEnumeration_up) ;
    while (enumerator_461.hasCurrentObject ()) {
      result << "public cParser_" ;
      result << enumerator_461.current_mValue (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 11)).stringValue () ;
      if (enumerator_461.hasNextObject ()) {
        result << ",\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
      }
      index_461_.increment () ;
      enumerator_461.gotoNextObject () ;
    }
  }
  result << " {\n" ;
  GALGAS_uint index_579_ (0) ;
  if (in_NON_5F_TERMINAL_5F_MAP.isValid ()) {
    cEnumerator_nonTerminalSymbolMapForGrammarAnalysis enumerator_579 (in_NON_5F_TERMINAL_5F_MAP, kEnumeration_up) ;
    while (enumerator_579.hasCurrentObject ()) {
      result << "//------------------------------------- '" ;
      result << enumerator_579.current_lkey (HERE).reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 17)).stringValue () ;
      result << "' non terminal\n"
        "//--- 'parse' label\n"
        "  public : virtual void nt_" ;
      result << enumerator_579.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 20)).stringValue () ;
      result << "_parse (" ;
      columnMarker = result.currentColumn () ;
      const enumGalgasBool test_0 = in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mHasTranslateFeature.boolEnum () ;
      if (kBoolTrue == test_0) {
        result << "C_String & " ;
        result << function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 22)).stringValue () ;
        result << ",\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
      }else if (kBoolFalse == test_0) {
      }
      result << "C_Lexique_" ;
      result << in_LEXIQUE_5F_IDENTIFIER.stringValue () ;
      result << " * inCompiler) ;\n"
        "\n" ;
      const enumGalgasBool test_1 = in_HAS_5F_INDEXING.boolEnum () ;
      if (kBoolTrue == test_1) {
        result << "//--- indexing\n"
          "  public : virtual void nt_" ;
        result << enumerator_579.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 28)).stringValue () ;
        result << "_indexing (C_Lexique_" ;
        result << in_LEXIQUE_5F_IDENTIFIER.stringValue () ;
        result << " * inCompiler) ;\n"
          "\n" ;
      }else if (kBoolFalse == test_1) {
      }
      GALGAS_uint index_1232_ (0) ;
      if (enumerator_579.current_mNonterminalSymbolParametersMap (HERE).isValid ()) {
        cEnumerator_nonterminalSymbolLabelMapForGrammarAnalysis enumerator_1232 (enumerator_579.current_mNonterminalSymbolParametersMap (HERE), kEnumeration_up) ;
        while (enumerator_1232.hasCurrentObject ()) {
          result << "//----------- '" ;
          result << enumerator_1232.current_lkey (HERE).reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 31)).stringValue () ;
          result << "' label\n"
            "  public : virtual void nt_" ;
          result << enumerator_579.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 33)).stringValue () ;
          result << "_" ;
          result << enumerator_1232.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 33)).stringValue () ;
          result << " (" ;
          columnMarker = result.currentColumn () ;
          GALGAS_uint index_1483_IDX (0) ;
          if (enumerator_1232.current_mFormalParametersList (HERE).isValid ()) {
            cEnumerator_signatureForGrammarAnalysis enumerator_1483 (enumerator_1232.current_mFormalParametersList (HERE), kEnumeration_up) ;
            while (enumerator_1483.hasCurrentObject ()) {
              const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_1483.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 35)))).boolEnum () ;
              if (kBoolTrue == test_2) {
                result << "const GALGAS_" ;
                result << enumerator_1483.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 36)).stringValue () ;
                result << " inArgument" ;
                result << index_1483_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 36)).stringValue () ;
              }else if (kBoolFalse == test_2) {
                const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_1483.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 37)))).boolEnum () ;
                if (kBoolTrue == test_3) {
                  result << "GALGAS_" ;
                  result << enumerator_1483.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 38)).stringValue () ;
                  result << " & ioArgument" ;
                  result << index_1483_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 38)).stringValue () ;
                }else if (kBoolFalse == test_3) {
                  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, enumerator_1483.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 39)))).boolEnum () ;
                  if (kBoolTrue == test_4) {
                    result << "GALGAS_" ;
                    result << enumerator_1483.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 40)).stringValue () ;
                    result << " & outArgument" ;
                    result << index_1483_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 40)).stringValue () ;
                  }else if (kBoolFalse == test_4) {
                    result << "GALGAS_" ;
                    result << enumerator_1483.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 42)).stringValue () ;
                    result << " inArgument" ;
                    result << index_1483_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 42)).stringValue () ;
                  }
                }
              }
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
              index_1483_IDX.increment () ;
              enumerator_1483.gotoNextObject () ;
            }
          }
          const enumGalgasBool test_5 = in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mHasTranslateFeature.boolEnum () ;
          if (kBoolTrue == test_5) {
            result << "C_String & " ;
            result << function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 47)).stringValue () ;
            result << ",\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
          }else if (kBoolFalse == test_5) {
          }
          result << "C_Lexique_" ;
          result << in_LEXIQUE_5F_IDENTIFIER.stringValue () ;
          result << " * inCompiler) ;\n"
            "\n" ;
          const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mStartSymbolName (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 51)).reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 51)).objectCompare (enumerator_579.current_lkey (HERE).reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 51)))).boolEnum () ;
          if (kBoolTrue == test_6) {
            result << "//--- Start symbol\n"
              "  public : static void _performSourceFileParsing_" ;
            result << enumerator_1232.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 53)).stringValue () ;
            result << " (" ;
            columnMarker = result.currentColumn () ;
            result << "C_Compiler * inCompiler,\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
            const enumGalgasBool test_7 = in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mHasTranslateFeature.boolEnum () ;
            if (kBoolTrue == test_7) {
              result << "C_String & " ;
              result << function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 56)).stringValue () ;
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
            }else if (kBoolFalse == test_7) {
            }
            result << "GALGAS_lstring inFileName" ;
            GALGAS_uint index_3008_IDX (0) ;
            if (enumerator_1232.current_mFormalParametersList (HERE).isValid ()) {
              cEnumerator_signatureForGrammarAnalysis enumerator_3008 (enumerator_1232.current_mFormalParametersList (HERE), kEnumeration_up) ;
              while (enumerator_3008.hasCurrentObject ()) {
                result << ",\n" ;
                result.appendSpacesUntilColumn (columnMarker) ;
                const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_3008.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 61)))).boolEnum () ;
                if (kBoolTrue == test_8) {
                  result << "const GALGAS_" ;
                  result << enumerator_3008.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 62)).stringValue () ;
                  result << " inArgument" ;
                  result << index_3008_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 62)).stringValue () ;
                }else if (kBoolFalse == test_8) {
                  const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, enumerator_3008.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 63)))).boolEnum () ;
                  if (kBoolTrue == test_9) {
                    result << "GALGAS_" ;
                    result << enumerator_3008.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 64)).stringValue () ;
                    result << " & ioArgument" ;
                    result << index_3008_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 64)).stringValue () ;
                  }else if (kBoolFalse == test_9) {
                    const enumGalgasBool test_10 = GALGAS_bool (kIsEqual, enumerator_3008.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 65)))).boolEnum () ;
                    if (kBoolTrue == test_10) {
                      result << "GALGAS_" ;
                      result << enumerator_3008.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 66)).stringValue () ;
                      result << " & outArgument" ;
                      result << index_3008_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 66)).stringValue () ;
                    }else if (kBoolFalse == test_10) {
                      result << "GALGAS_" ;
                      result << enumerator_3008.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 68)).stringValue () ;
                      result << " inArgument" ;
                      result << index_3008_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 68)).stringValue () ;
                    }
                  }
                }
                index_3008_IDX.increment () ;
                enumerator_3008.gotoNextObject () ;
              }
            }
            result << "\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
            result << "COMMA_LOCATION_ARGS) ;\n"
              "\n"
              "  public : static void _performSourceStringParsing_" ;
            result << enumerator_1232.current_lkey (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 72)).stringValue () ;
            result << " (" ;
            columnMarker = result.currentColumn () ;
            result << "C_Compiler * inCompiler,\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
            const enumGalgasBool test_11 = in_GRAMMAR_5F_COMPONENT_5F_ROOT.mAttribute_mHasTranslateFeature.boolEnum () ;
            if (kBoolTrue == test_11) {
              result << "C_String & " ;
              result << function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 75)).stringValue () ;
              result << ",\n" ;
              result.appendSpacesUntilColumn (columnMarker) ;
            }else if (kBoolFalse == test_11) {
            }
            result << "GALGAS_string inSourceString" ;
            GALGAS_uint index_4278_IDX (0) ;
            if (enumerator_1232.current_mFormalParametersList (HERE).isValid ()) {
              cEnumerator_signatureForGrammarAnalysis enumerator_4278 (enumerator_1232.current_mFormalParametersList (HERE), kEnumeration_up) ;
              while (enumerator_4278.hasCurrentObject ()) {
                result << ",\n" ;
                result.appendSpacesUntilColumn (columnMarker) ;
                const enumGalgasBool test_12 = GALGAS_bool (kIsEqual, enumerator_4278.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 80)))).boolEnum () ;
                if (kBoolTrue == test_12) {
                  result << "const GALGAS_" ;
                  result << enumerator_4278.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 81)).stringValue () ;
                  result << " inArgument" ;
                  result << index_4278_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 81)).stringValue () ;
                }else if (kBoolFalse == test_12) {
                  const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, enumerator_4278.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 82)))).boolEnum () ;
                  if (kBoolTrue == test_13) {
                    result << "GALGAS_" ;
                    result << enumerator_4278.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 83)).stringValue () ;
                    result << " & ioArgument" ;
                    result << index_4278_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 83)).stringValue () ;
                  }else if (kBoolFalse == test_13) {
                    const enumGalgasBool test_14 = GALGAS_bool (kIsEqual, enumerator_4278.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).objectCompare (GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 84)))).boolEnum () ;
                    if (kBoolTrue == test_14) {
                      result << "GALGAS_" ;
                      result << enumerator_4278.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 85)).stringValue () ;
                      result << " & outArgument" ;
                      result << index_4278_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 85)).stringValue () ;
                    }else if (kBoolFalse == test_14) {
                      result << "GALGAS_" ;
                      result << enumerator_4278.current_mGalgasTypeNameForGrammarAnalysis (HERE).mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 87)).stringValue () ;
                      result << " inArgument" ;
                      result << index_4278_IDX.reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 87)).stringValue () ;
                    }
                  }
                }
                index_4278_IDX.increment () ;
                enumerator_4278.gotoNextObject () ;
              }
            }
            result << "\n" ;
            result.appendSpacesUntilColumn (columnMarker) ;
            result << "COMMA_LOCATION_ARGS) ;\n"
              "\n" ;
          }else if (kBoolFalse == test_6) {
          }
          index_1232_.increment () ;
          enumerator_1232.gotoNextObject () ;
        }
      }
      const enumGalgasBool test_15 = in_HAS_5F_INDEXING.operator_and (GALGAS_bool (kIsEqual, in_GRAMMAR_5F_COMPONENT_5F_ROOT.reader_mStartSymbolName (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 94)).reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 94)).objectCompare (enumerator_579.current_lkey (HERE).reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 94)))) COMMA_SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 94)).boolEnum () ;
      if (kBoolTrue == test_15) {
        result << "//--- Start symbol indexing\n"
          "  public : static void performIndexing (" ;
        columnMarker = result.currentColumn () ;
        result << "C_Compiler * inCompiler,\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
        result << "const C_String & inSourceFilePath) ;\n"
          "\n" ;
      }else if (kBoolFalse == test_15) {
      }
      index_579_.increment () ;
      enumerator_579.gotoNextObject () ;
    }
  }
  GALGAS_uint index_5514_ (0) ;
  if (in_ADDED_5F_NON_5F_TERMINAL_5F_LIST.isValid ()) {
    cEnumerator_nonTerminalToAddList enumerator_5514 (in_ADDED_5F_NON_5F_TERMINAL_5F_LIST, kEnumeration_up) ;
    while (enumerator_5514.hasCurrentObject ()) {
      result << "  public : virtual int32_t select_" ;
      result << enumerator_5514.current_mSyntaxComponentName (HERE).reader_identifierRepresentation (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 102)).stringValue () ;
      result << "_" ;
      result << enumerator_5514.current_mNonTerminalToAddCount (HERE).reader_string (SOURCE_FILE ("grammar-zone3-galgas3.h.gTemplate", 102)).stringValue () ;
      result << " (C_Lexique_" ;
      result << in_LEXIQUE_5F_IDENTIFIER.stringValue () ;
      result << " *) ;\n" ;
      if (enumerator_5514.hasNextObject ()) {
        result << "\n" ;
      }
      index_5514_.increment () ;
      enumerator_5514.gotoNextObject () ;
    }
  }
  result << "} ;\n"
    "\n"
    "//---------------------------------------------------------------------------------------------------------------------*\n"
    "\n"
    "#endif\n" ;
  return GALGAS_string (result) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Routine 'parseGrammarComponent'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_parseGrammarComponent (const GALGAS_lstring constinArgument_inSourceFile,
                                    GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                    GALGAS_galgas_33_GrammarComponentListAST_2D_element & outArgument_outGrammarComponentRoot,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outGrammarComponentRoot.drop () ; // Release 'out' argument
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("grammarCompilation.gSemantics", 459)).reader_stringByDeletingPathExtension (SOURCE_FILE ("grammarCompilation.gSemantics", 459)) ;
  const cMapElement_parsedGrammarComponentMap * objectArray_19624 = (const cMapElement_parsedGrammarComponentMap *) ioArgument_ioParsedComponentStruct.mAttribute_mParsedGrammarComponentMap.readAccessForWithInstruction (var_basename) ;
  if (NULL != objectArray_19624) {
      macroValidSharedObject (objectArray_19624, cMapElement_parsedGrammarComponentMap) ;
    outArgument_outGrammarComponentRoot = objectArray_19624->mAttribute_mGrammarComponentRoot ;
  }else{
    outArgument_outGrammarComponentRoot.drop () ;
    C_String syntaxDirectedTranslationResult_19788 ;
    cGrammar_grammarLL_31_grammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_19788, constinArgument_inSourceFile, outArgument_outGrammarComponentRoot  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 463)) ;
    {
    ioArgument_ioParsedComponentStruct.mAttribute_mParsedGrammarComponentMap.modifier_insertKey (GALGAS_lstring::constructor_new (var_basename, inCompiler->here ()  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 465)), constinArgument_inSourceFile, outArgument_outGrammarComponentRoot, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 464)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'compileGrammarComponentFromAST'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_compileGrammarComponentFromAST (const GALGAS_lstring constinArgument_inSourceFile,
                                             const GALGAS_string constinArgument_inOutputDirectoryForCppFiles,
                                             const GALGAS_galgas_33_GrammarComponentListAST_2D_element constinArgument_inGrammarComponentRoot,
                                             GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string var_outputDirectoryForHTMLFile = constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("grammarCompilation.gSemantics", 507)) ;
  GALGAS_lstring var_grammarComponentName = constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName ;
  GALGAS_string var_basename = constinArgument_inSourceFile.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("grammarCompilation.gSemantics", 510)).reader_stringByDeletingPathExtension (SOURCE_FILE ("grammarCompilation.gSemantics", 510)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_grammarComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 511)).objectCompare (var_basename)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (var_grammarComponentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticWarning (location_1, GALGAS_string ("GALGAS checks the component name ('").operator_concat (var_grammarComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 513))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 513)).operator_concat (GALGAS_string ("') against the source file base name ('")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 513)).operator_concat (var_basename  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 514)).operator_concat (GALGAS_string ("'): they should be identical")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 514))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 512)) ;
  }
  GALGAS_terminalSymbolsMapForGrammarAnalysis var_actuallyUsedTerminalSymbolMap = GALGAS_terminalSymbolsMapForGrammarAnalysis::constructor_emptyMap (SOURCE_FILE ("grammarCompilation.gSemantics", 518)) ;
  GALGAS_nonTerminalSymbolMapForGrammarAnalysis var_nonTerminalMapForGrammarAnalysis = GALGAS_nonTerminalSymbolMapForGrammarAnalysis::constructor_emptyMap (SOURCE_FILE ("grammarCompilation.gSemantics", 519)) ;
  GALGAS_string var_lexiqueComponentName = GALGAS_string::makeEmptyString () ;
  GALGAS_lstring var_lexiqueComponentPath = GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("grammarCompilation.gSemantics", 521)) ;
  GALGAS_syntaxComponentListForGrammarAnalysis var_syntaxComponentListForGrammarAnalysis = GALGAS_syntaxComponentListForGrammarAnalysis::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 522)) ;
  GALGAS_nonTerminalToAddList var_nonTerminalToAddList = GALGAS_nonTerminalToAddList::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 523)) ;
  GALGAS_uint var_addedNonTerminalCount = GALGAS_uint ((uint32_t) 0U) ;
  cEnumerator_lstringlist enumerator_22990 (constinArgument_inGrammarComponentRoot.reader_mSyntaxComponents (SOURCE_FILE ("grammarCompilation.gSemantics", 525)), kEnumeration_up) ;
  while (enumerator_22990.hasCurrentObject ()) {
    GALGAS_uint var_addedNonTerminalCountRef = var_addedNonTerminalCount ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_22990.current_mValue (HERE).mAttribute_string.reader_pathExtension (SOURCE_FILE ("grammarCompilation.gSemantics", 527)).objectCompare (GALGAS_string ("gSyntax"))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (enumerator_22990.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("a syntax component file should have '.gSyntax' path extension")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 528)) ;
    }else if (kBoolFalse == test_2) {
      GALGAS_string var_syntaxComponentName = enumerator_22990.current_mValue (HERE).mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("grammarCompilation.gSemantics", 530)).reader_stringByDeletingPathExtension (SOURCE_FILE ("grammarCompilation.gSemantics", 530)) ;
      GALGAS_galgas_33_SyntaxComponentListAST_2D_element var_syntaxComponentRoot ;
      const enumGalgasBool test_4 = ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE ("grammarCompilation.gSemantics", 532)).reader_hasKey (var_syntaxComponentName COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 532)).boolEnum () ;
      if (kBoolTrue == test_4) {
        GALGAS_lstring joker_23581_0 ; // Joker input parameter
        ioArgument_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (SOURCE_FILE ("grammarCompilation.gSemantics", 533)).method_searchKey (GALGAS_lstring::constructor_new (var_syntaxComponentName, inCompiler->here ()  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 533)), joker_23581_0, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 533)) ;
      }else if (kBoolFalse == test_4) {
        GALGAS_string var_sourceFilePath = enumerator_22990.current_mValue (HERE).mAttribute_string.reader_absolutePathFromPath (constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("grammarCompilation.gSemantics", 535)) COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 535)) ;
        GALGAS_lstring var_lSourceFilePath = GALGAS_lstring::constructor_new (var_sourceFilePath, enumerator_22990.current_mValue (HERE).reader_location (SOURCE_FILE ("grammarCompilation.gSemantics", 536))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 536)) ;
        var_syntaxComponentRoot.drop () ;
        C_String syntaxDirectedTranslationResult_23866 ;
        cGrammar_syntaxSLRgrammar::_performSourceFileParsing_ (inCompiler, syntaxDirectedTranslationResult_23866, var_lSourceFilePath, var_syntaxComponentRoot  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 537)) ;
        {
        ioArgument_ioParsedComponentStruct.mAttribute_mParsedSyntaxComponentMap.modifier_insertKey (GALGAS_lstring::constructor_new (var_syntaxComponentName, enumerator_22990.current_mValue (HERE).reader_location (SOURCE_FILE ("grammarCompilation.gSemantics", 538))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 538)), var_lSourceFilePath, var_syntaxComponentRoot, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 538)) ;
        }
      }
      const enumGalgasBool test_5 = constinArgument_inGrammarComponentRoot.mAttribute_mHasTranslateFeature.operator_and (var_syntaxComponentRoot.mAttribute_mHasTranslateFeature.operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 541)) COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 541)).boolEnum () ;
      if (kBoolTrue == test_5) {
        GALGAS_location location_6 (var_syntaxComponentRoot.mAttribute_mSyntaxComponentName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_6, GALGAS_string ("as '").operator_concat (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 542))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 542)).operator_concat (GALGAS_string ("' grammar declares 'translate' feature, this syntax component should do so")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 542))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 542)) ;
      }else if (kBoolFalse == test_5) {
        const enumGalgasBool test_7 = var_syntaxComponentRoot.mAttribute_mHasTranslateFeature.operator_and (constinArgument_inGrammarComponentRoot.mAttribute_mHasTranslateFeature.operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 543)) COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 543)).boolEnum () ;
        if (kBoolTrue == test_7) {
          GALGAS_location location_8 (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_8, GALGAS_string ("as '").operator_concat (var_syntaxComponentRoot.mAttribute_mSyntaxComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 544))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 544)).operator_concat (GALGAS_string ("' syntax component declares 'translate' feature, this grammar should do so")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 544))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 544)) ;
        }
      }
      var_lexiqueComponentPath = var_syntaxComponentRoot.reader_mImportedLexiqueFilePath (SOURCE_FILE ("grammarCompilation.gSemantics", 547)) ;
      GALGAS_string var_currentLexiqueName = var_lexiqueComponentPath.mAttribute_string.reader_lastPathComponent (SOURCE_FILE ("grammarCompilation.gSemantics", 548)).reader_stringByDeletingPathExtension (SOURCE_FILE ("grammarCompilation.gSemantics", 548)) ;
      const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, var_lexiqueComponentName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_9) {
        var_lexiqueComponentName = var_currentLexiqueName ;
      }else if (kBoolFalse == test_9) {
        const enumGalgasBool test_10 = GALGAS_bool (kIsNotEqual, var_lexiqueComponentName.objectCompare (var_currentLexiqueName)).boolEnum () ;
        if (kBoolTrue == test_10) {
          GALGAS_location location_11 (enumerator_22990.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_11, GALGAS_string ("this syntax component uses '").operator_concat (var_currentLexiqueName  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 552)).operator_concat (GALGAS_string ("' lexique component, but the first syntax component uses the '")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 553)).operator_concat (var_lexiqueComponentName  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 553)).operator_concat (GALGAS_string ("' lexique component (they should be the same)")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 554))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 552)) ;
        }
      }
      {
      routine_handleNonTerminalDeclarations (var_nonTerminalMapForGrammarAnalysis, var_syntaxComponentRoot.reader_mNonterminalDeclarationList (SOURCE_FILE ("grammarCompilation.gSemantics", 559)), inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 557)) ;
      }
      {
      routine_handleNonTerminalDeclarationsFromRuleList (var_nonTerminalMapForGrammarAnalysis, var_syntaxComponentRoot.reader_mRuleList (SOURCE_FILE ("grammarCompilation.gSemantics", 564)), inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 562)) ;
      }
      {
      routine_buildRuleList (var_nonTerminalMapForGrammarAnalysis, var_syntaxComponentRoot.reader_mSyntaxComponentName (SOURCE_FILE ("grammarCompilation.gSemantics", 569)), var_syntaxComponentRoot.reader_mRuleList (SOURCE_FILE ("grammarCompilation.gSemantics", 570)), var_actuallyUsedTerminalSymbolMap, var_syntaxComponentListForGrammarAnalysis, var_addedNonTerminalCount, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 567)) ;
      }
      GALGAS_uint var_i = GALGAS_uint ((uint32_t) 0U) ;
      if (var_addedNonTerminalCount.isValid ()) {
        uint32_t variant_26107 = var_addedNonTerminalCount.uintValue () ;
        bool loop_26107 = true ;
        while (loop_26107) {
          loop_26107 = GALGAS_bool (kIsStrictInf, var_i.objectCompare (var_addedNonTerminalCount.substract_operation (var_addedNonTerminalCountRef, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 576)))).isValid () ;
          if (loop_26107) {
            loop_26107 = GALGAS_bool (kIsStrictInf, var_i.objectCompare (var_addedNonTerminalCount.substract_operation (var_addedNonTerminalCountRef, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 576)))).boolValue () ;
          }
          if (loop_26107 && (0 == variant_26107)) {
            loop_26107 = false ;
            inCompiler->loopRunTimeVariantError (SOURCE_FILE ("grammarCompilation.gSemantics", 576)) ;
          }
          if (loop_26107) {
            variant_26107 -- ;
            var_nonTerminalToAddList.addAssign_operation (var_syntaxComponentName, var_i  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 577)) ;
            var_i.increment_operation (inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 578)) ;
          }
        }
      }
    }
    enumerator_22990.gotoNextObject () ;
  }
  GALGAS_galgas_33_LexiqueComponentListAST_2D_element var_lexiqueComponentAST ;
  {
  routine_parseLexiqueComponent (GALGAS_lstring::constructor_new (var_lexiqueComponentPath.mAttribute_string.reader_absolutePathFromPath (constinArgument_inSourceFile.mAttribute_string.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("grammarCompilation.gSemantics", 585)) COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 585)), var_lexiqueComponentPath.reader_location (SOURCE_FILE ("grammarCompilation.gSemantics", 585))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 585)), ioArgument_ioParsedComponentStruct, var_lexiqueComponentAST, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 584)) ;
  }
  GALGAS_bool var_hasIndexing = var_lexiqueComponentAST.reader_mIndexingDirectory (SOURCE_FILE ("grammarCompilation.gSemantics", 589)).mAttribute_location.reader_isNowhere (SOURCE_FILE ("grammarCompilation.gSemantics", 589)).operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 589)) ;
  const enumGalgasBool test_12 = var_hasIndexing.operator_and (constinArgument_inGrammarComponentRoot.mAttribute_mHasIndexing.mAttribute_bool.operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 590)) COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 590)).boolEnum () ;
  if (kBoolTrue == test_12) {
    GALGAS_location location_13 (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_13, GALGAS_string ("the grammar does not enable indexing, but the '").operator_concat (var_lexiqueComponentAST.mAttribute_mLexiqueComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 591))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 591)).operator_concat (GALGAS_string ("' does")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 591))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 591)) ;
  }else if (kBoolFalse == test_12) {
    const enumGalgasBool test_14 = var_hasIndexing.operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 592)).operator_and (constinArgument_inGrammarComponentRoot.mAttribute_mHasIndexing.mAttribute_bool COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 592)).boolEnum () ;
    if (kBoolTrue == test_14) {
      GALGAS_location location_15 (constinArgument_inGrammarComponentRoot.mAttribute_mHasIndexing.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_15, GALGAS_string ("the grammar enables indexing, but the '").operator_concat (var_lexiqueComponentAST.mAttribute_mLexiqueComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 593))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 593)).operator_concat (GALGAS_string ("' does not")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 593))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 593)) ;
    }
  }
  GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis var_startSymbolAltMap ;
  GALGAS_uint var_startSymbolIndex ;
  var_nonTerminalMapForGrammarAnalysis.method_searchKey (constinArgument_inGrammarComponentRoot.reader_mStartSymbolName (SOURCE_FILE ("grammarCompilation.gSemantics", 599)), var_startSymbolIndex, var_startSymbolAltMap, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 599)) ;
  {
  routine_checkLabelMap (constinArgument_inGrammarComponentRoot.reader_mStartSymbolName (SOURCE_FILE ("grammarCompilation.gSemantics", 602)).reader_location (SOURCE_FILE ("grammarCompilation.gSemantics", 602)), constinArgument_inGrammarComponentRoot.reader_mStartSymbolLabelList (SOURCE_FILE ("grammarCompilation.gSemantics", 603)), var_nonTerminalMapForGrammarAnalysis.reader_locationForKey (constinArgument_inGrammarComponentRoot.reader_mStartSymbolName (SOURCE_FILE ("grammarCompilation.gSemantics", 604)).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 604)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 604)), var_startSymbolAltMap, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 601)) ;
  }
  GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis var_unusedNonTerminalSymbolsForGrammar = GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis::constructor_emptyMap (SOURCE_FILE ("grammarCompilation.gSemantics", 608)) ;
  cEnumerator_lstringlist enumerator_28135 (constinArgument_inGrammarComponentRoot.reader_mUnusedNonterminalList (SOURCE_FILE ("grammarCompilation.gSemantics", 609)), kEnumeration_up) ;
  while (enumerator_28135.hasCurrentObject ()) {
    GALGAS_uint var_nonterminalIndex ;
    GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis joker_28243_0 ; // Joker input parameter
    var_nonTerminalMapForGrammarAnalysis.method_searchKey (enumerator_28135.current_mValue (HERE), var_nonterminalIndex, joker_28243_0, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 611)) ;
    {
    var_unusedNonTerminalSymbolsForGrammar.modifier_insertKey (enumerator_28135.current_mValue (HERE), var_nonterminalIndex, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 612)) ;
    }
    enumerator_28135.gotoNextObject () ;
  }
  GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis var_nonTerminalSymbolSortedListForGrammarAnalysis = GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis::constructor_emptySortedList (SOURCE_FILE ("grammarCompilation.gSemantics", 615)) ;
  cEnumerator_nonTerminalSymbolMapForGrammarAnalysis enumerator_28600 (var_nonTerminalMapForGrammarAnalysis, kEnumeration_up) ;
  while (enumerator_28600.hasCurrentObject ()) {
    var_nonTerminalSymbolSortedListForGrammarAnalysis.addAssign_operation (enumerator_28600.current_lkey (HERE), enumerator_28600.current_mNonTerminalIndex (HERE), enumerator_28600.current_mNonterminalSymbolParametersMap (HERE)  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 617)) ;
    enumerator_28600.gotoNextObject () ;
  }
  GALGAS_string var_HTMLFilePath = var_outputDirectoryForHTMLFile.operator_concat (GALGAS_string ("/")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 620)).operator_concat (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 620))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 620)).operator_concat (GALGAS_string (".html")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 620)) ;
  GALGAS_string var_grammarCppFile ;
  GALGAS_string var_grammarHTMLHelperContents ;
  {
  GALGAS_string temp_16 ;
  const enumGalgasBool test_17 = constinArgument_inGrammarComponentRoot.mAttribute_mHasTranslateFeature.boolEnum () ;
  if (kBoolTrue == test_17) {
    temp_16 = function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 633)) ;
  }else if (kBoolFalse == test_17) {
    temp_16 = GALGAS_string::makeEmptyString () ;
  }
  routine_grammarAnalysisAndGeneration (GALGAS_stringset::constructor_setWithString (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.mAttribute_string  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 622)), constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName, constinArgument_inGrammarComponentRoot.reader_mGrammarClass (SOURCE_FILE ("grammarCompilation.gSemantics", 624)), var_startSymbolIndex, var_lexiqueComponentName, var_actuallyUsedTerminalSymbolMap, var_syntaxComponentListForGrammarAnalysis, var_unusedNonTerminalSymbolsForGrammar, var_HTMLFilePath, var_nonTerminalSymbolSortedListForGrammarAnalysis, var_hasIndexing, temp_16, var_grammarCppFile, var_grammarHTMLHelperContents, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 621)) ;
  }
  const enumGalgasBool test_18 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_outputHTMLgrammarFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_18) {
    GALGAS_bool joker_29854_0 ; // Joker input parameter
    var_grammarHTMLHelperContents.method_writeToFileWhenDifferentContents (var_HTMLFilePath, joker_29854_0, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 640)) ;
  }else if (kBoolFalse == test_18) {
    {
    GALGAS_string::class_method_deleteFileIfExists (var_HTMLFilePath, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 642)) ;
    }
  }
  const enumGalgasBool test_19 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("grammarCompilation.gSemantics", 646)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_19) {
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectoryForCppFiles, constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.mAttribute_string.operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 649)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_grammarCppFile, GALGAS_string ("\n"
      "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 647)) ;
    }
  }
  const enumGalgasBool test_20 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("grammarCompilation.gSemantics", 658)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_20) {
    GALGAS_string var_zone_32_ = GALGAS_string (filewrapperTemplate_grammarGenerationTemplate_grammarZone_32_Header (inCompiler, constinArgument_inGrammarComponentRoot COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 659))) ;
    GALGAS_string var_zone_33_ = GALGAS_string (filewrapperTemplate_grammarGenerationTemplate_grammarZone_33_Header (inCompiler, var_lexiqueComponentName.reader_identifierRepresentation (SOURCE_FILE ("grammarCompilation.gSemantics", 663)), constinArgument_inGrammarComponentRoot, var_nonTerminalMapForGrammarAnalysis, var_nonTerminalToAddList, var_hasIndexing COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 662))) ;
    {
    GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectoryForCppFiles, constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.mAttribute_string.operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 671)), GALGAS_string ("//"), GALGAS_string ("\n"
      "\n"), var_zone_32_, GALGAS_string ("\n"
      "\n"), var_zone_33_, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 669)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   Routine 'compileGrammarComponentFromSourceFile'                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_compileGrammarComponentFromSourceFile (const GALGAS_lstring constinArgument_inSourceFile,
                                                    const GALGAS_string constinArgument_inOutputDirectoryForCppFiles,
                                                    GALGAS_parsedComponentStruct & ioArgument_ioParsedComponentStruct,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_galgas_33_GrammarComponentListAST_2D_element var_grammarComponentRoot ;
  {
  routine_parseGrammarComponent (constinArgument_inSourceFile, ioArgument_ioParsedComponentStruct, var_grammarComponentRoot, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 688)) ;
  }
  {
  routine_compileGrammarComponentFromAST (constinArgument_inSourceFile, constinArgument_inOutputDirectoryForCppFiles, var_grammarComponentRoot, ioArgument_ioParsedComponentStruct, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 690)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                             Class for element of '@grammarComponentGenerationList' list                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_grammarComponentGenerationList : public cCollectionElement {
  public : GALGAS_grammarComponentGenerationList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_grammarComponentGenerationList (const GALGAS_string & in_mGrammarName,
                                                              const GALGAS_string & in_mHeaderContents,
                                                              const GALGAS_string & in_mCppFileContents
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_grammarComponentGenerationList::cCollectionElement_grammarComponentGenerationList (const GALGAS_string & in_mGrammarName,
                                                                                                      const GALGAS_string & in_mHeaderContents,
                                                                                                      const GALGAS_string & in_mCppFileContents
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mGrammarName, in_mHeaderContents, in_mCppFileContents) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_grammarComponentGenerationList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_grammarComponentGenerationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_grammarComponentGenerationList (mObject.mAttribute_mGrammarName, mObject.mAttribute_mHeaderContents, mObject.mAttribute_mCppFileContents COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_grammarComponentGenerationList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGrammarName" ":" ;
  mObject.mAttribute_mGrammarName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHeaderContents" ":" ;
  mObject.mAttribute_mHeaderContents.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCppFileContents" ":" ;
  mObject.mAttribute_mCppFileContents.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_grammarComponentGenerationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_grammarComponentGenerationList * operand = (cCollectionElement_grammarComponentGenerationList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_grammarComponentGenerationList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList::GALGAS_grammarComponentGenerationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList::GALGAS_grammarComponentGenerationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList GALGAS_grammarComponentGenerationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_grammarComponentGenerationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList GALGAS_grammarComponentGenerationList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                                        const GALGAS_string & inOperand1,
                                                                                                        const GALGAS_string & inOperand2
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_grammarComponentGenerationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_grammarComponentGenerationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_string & in_mGrammarName,
                                                                       const GALGAS_string & in_mHeaderContents,
                                                                       const GALGAS_string & in_mCppFileContents
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_grammarComponentGenerationList * p = NULL ;
  macroMyNew (p, cCollectionElement_grammarComponentGenerationList (in_mGrammarName,
                                                                    in_mHeaderContents,
                                                                    in_mCppFileContents COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList::addAssign_operation (const GALGAS_string & inOperand0,
                                                                 const GALGAS_string & inOperand1,
                                                                 const GALGAS_string & inOperand2
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_grammarComponentGenerationList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList::modifier_insertAtIndex (const GALGAS_string inOperand0,
                                                                    const GALGAS_string inOperand1,
                                                                    const GALGAS_string inOperand2,
                                                                    const GALGAS_uint inInsertionIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_grammarComponentGenerationList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList::modifier_removeAtIndex (GALGAS_string & outOperand0,
                                                                    GALGAS_string & outOperand1,
                                                                    GALGAS_string & outOperand2,
                                                                    const GALGAS_uint inRemoveIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_grammarComponentGenerationList * p = (cCollectionElement_grammarComponentGenerationList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
      outOperand0 = p->mObject.mAttribute_mGrammarName ;
      outOperand1 = p->mObject.mAttribute_mHeaderContents ;
      outOperand2 = p->mObject.mAttribute_mCppFileContents ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList::modifier_popFirst (GALGAS_string & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS_string & outOperand2,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_grammarComponentGenerationList * p = (cCollectionElement_grammarComponentGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mGrammarName ;
    outOperand1 = p->mObject.mAttribute_mHeaderContents ;
    outOperand2 = p->mObject.mAttribute_mCppFileContents ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList::modifier_popLast (GALGAS_string & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_string & outOperand2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_grammarComponentGenerationList * p = (cCollectionElement_grammarComponentGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mGrammarName ;
    outOperand1 = p->mObject.mAttribute_mHeaderContents ;
    outOperand2 = p->mObject.mAttribute_mCppFileContents ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList::method_first (GALGAS_string & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_string & outOperand2,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_grammarComponentGenerationList * p = (cCollectionElement_grammarComponentGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mGrammarName ;
    outOperand1 = p->mObject.mAttribute_mHeaderContents ;
    outOperand2 = p->mObject.mAttribute_mCppFileContents ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList::method_last (GALGAS_string & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS_string & outOperand2,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_grammarComponentGenerationList * p = (cCollectionElement_grammarComponentGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mGrammarName ;
    outOperand1 = p->mObject.mAttribute_mHeaderContents ;
    outOperand2 = p->mObject.mAttribute_mCppFileContents ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList GALGAS_grammarComponentGenerationList::operator_concat (const GALGAS_grammarComponentGenerationList & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_grammarComponentGenerationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList GALGAS_grammarComponentGenerationList::add_operation (const GALGAS_grammarComponentGenerationList & inOperand,
                                                                                            C_Compiler * /* inCompiler */
                                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_grammarComponentGenerationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList GALGAS_grammarComponentGenerationList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_grammarComponentGenerationList result = GALGAS_grammarComponentGenerationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList GALGAS_grammarComponentGenerationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_grammarComponentGenerationList result = GALGAS_grammarComponentGenerationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList::dotAssign_operation (const GALGAS_grammarComponentGenerationList inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_grammarComponentGenerationList::reader_mGrammarNameAtIndex (const GALGAS_uint & inIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_grammarComponentGenerationList * p = (cCollectionElement_grammarComponentGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
    result = p->mObject.mAttribute_mGrammarName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_grammarComponentGenerationList::reader_mHeaderContentsAtIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_grammarComponentGenerationList * p = (cCollectionElement_grammarComponentGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
    result = p->mObject.mAttribute_mHeaderContents ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_grammarComponentGenerationList::reader_mCppFileContentsAtIndex (const GALGAS_uint & inIndex,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_grammarComponentGenerationList * p = (cCollectionElement_grammarComponentGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
    result = p->mObject.mAttribute_mCppFileContents ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_grammarComponentGenerationList::cEnumerator_grammarComponentGenerationList (const GALGAS_grammarComponentGenerationList & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList_2D_element cEnumerator_grammarComponentGenerationList::current (LOCATION_ARGS) const {
  const cCollectionElement_grammarComponentGenerationList * p = (const cCollectionElement_grammarComponentGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_grammarComponentGenerationList::current_mGrammarName (LOCATION_ARGS) const {
  const cCollectionElement_grammarComponentGenerationList * p = (const cCollectionElement_grammarComponentGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
  return p->mObject.mAttribute_mGrammarName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_grammarComponentGenerationList::current_mHeaderContents (LOCATION_ARGS) const {
  const cCollectionElement_grammarComponentGenerationList * p = (const cCollectionElement_grammarComponentGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
  return p->mObject.mAttribute_mHeaderContents ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_grammarComponentGenerationList::current_mCppFileContents (LOCATION_ARGS) const {
  const cCollectionElement_grammarComponentGenerationList * p = (const cCollectionElement_grammarComponentGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_grammarComponentGenerationList) ;
  return p->mObject.mAttribute_mCppFileContents ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @grammarComponentGenerationList type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarComponentGenerationList ("grammarComponentGenerationList",
                                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarComponentGenerationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarComponentGenerationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarComponentGenerationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarComponentGenerationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList GALGAS_grammarComponentGenerationList::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_grammarComponentGenerationList result ;
  const GALGAS_grammarComponentGenerationList * p = (const GALGAS_grammarComponentGenerationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarComponentGenerationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("grammarComponentGenerationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'compileGrammarComponentGalgas3'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_compileGrammarComponentGalgas_33_ (const GALGAS_string constinArgument_inOutputDirectory,
                                                const GALGAS_galgas_33_GrammarComponentListAST_2D_element constinArgument_inGrammarComponentRoot,
                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                GALGAS_grammarComponentGenerationList & ioArgument_ioGrammarGenerationList,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->printMessage (GALGAS_string ("*** Analyzing '").add_operation (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 719)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 719)).add_operation (GALGAS_string ("' grammar\n"), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 719))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 719)) ;
  }
  GALGAS_terminalSymbolsMapForGrammarAnalysis var_actuallyUsedTerminalSymbolMap = GALGAS_terminalSymbolsMapForGrammarAnalysis::constructor_emptyMap (SOURCE_FILE ("grammarCompilation.gSemantics", 722)) ;
  GALGAS_nonTerminalSymbolMapForGrammarAnalysis var_nonTerminalMapForGrammarAnalysis = GALGAS_nonTerminalSymbolMapForGrammarAnalysis::constructor_emptyMap (SOURCE_FILE ("grammarCompilation.gSemantics", 723)) ;
  GALGAS_lstring var_lexiqueComponentName = GALGAS_string::makeEmptyString ().reader_nowhere (SOURCE_FILE ("grammarCompilation.gSemantics", 724)) ;
  GALGAS_syntaxComponentListForGrammarAnalysis var_syntaxComponentListForGrammarAnalysis = GALGAS_syntaxComponentListForGrammarAnalysis::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 725)) ;
  GALGAS_nonTerminalToAddList var_nonTerminalToAddList = GALGAS_nonTerminalToAddList::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 726)) ;
  GALGAS_uint var_addedNonTerminalCount = GALGAS_uint ((uint32_t) 0U) ;
  cEnumerator_lstringlist enumerator_33200 (constinArgument_inGrammarComponentRoot.mAttribute_mSyntaxComponents, kEnumeration_up) ;
  while (enumerator_33200.hasCurrentObject ()) {
    GALGAS_uint var_addedNonTerminalCountRef = var_addedNonTerminalCount ;
    GALGAS_string var_syntaxComponentName = enumerator_33200.current_mValue (HERE).mAttribute_string ;
    GALGAS_lstring var_lexiqueName ;
    GALGAS_nonterminalDeclarationListAST var_nonterminalDeclarationList ;
    GALGAS_syntaxRuleListAST var_ruleList ;
    GALGAS_bool var_hasTranslateFeature ;
    constinArgument_inSemanticContext.mAttribute_mSyntaxComponentMapForSemanticAnalysis.method_searchKey (enumerator_33200.current_mValue (HERE), var_lexiqueName, var_nonterminalDeclarationList, var_ruleList, var_hasTranslateFeature, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 731)) ;
    const enumGalgasBool test_1 = constinArgument_inGrammarComponentRoot.mAttribute_mHasTranslateFeature.operator_and (var_hasTranslateFeature.operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 739)) COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 739)).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (enumerator_33200.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("as '").operator_concat (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 740))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 740)).operator_concat (GALGAS_string ("' grammar declares 'translate' feature, this syntax component should do so")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 740))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 740)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_3 = var_hasTranslateFeature.operator_and (constinArgument_inGrammarComponentRoot.mAttribute_mHasTranslateFeature.operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 741)) COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 741)).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("as '").operator_concat (enumerator_33200.current_mValue (HERE).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 742))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 742)).operator_concat (GALGAS_string ("' syntax component declares 'translate' feature, this grammar should do so")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 742))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 742)) ;
      }
    }
    const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, var_lexiqueComponentName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_5) {
      var_lexiqueComponentName = var_lexiqueName ;
    }else if (kBoolFalse == test_5) {
      const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, var_lexiqueName.mAttribute_string.objectCompare (var_lexiqueComponentName.mAttribute_string)).boolEnum () ;
      if (kBoolTrue == test_6) {
        GALGAS_location location_7 (enumerator_33200.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_7, GALGAS_string ("this syntax component uses '").operator_concat (var_lexiqueName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 748))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 748)).operator_concat (GALGAS_string ("' lexique component, but the first syntax component uses the '")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 749)).operator_concat (var_lexiqueComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 749))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 749)).operator_concat (GALGAS_string ("' lexique component (they should be the same)")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 750))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 748)) ;
      }
    }
    {
    routine_handleNonTerminalDeclarations (var_nonTerminalMapForGrammarAnalysis, var_nonterminalDeclarationList, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 753)) ;
    }
    {
    routine_handleNonTerminalDeclarationsFromRuleList (var_nonTerminalMapForGrammarAnalysis, var_ruleList, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 758)) ;
    }
    {
    routine_buildRuleList (var_nonTerminalMapForGrammarAnalysis, enumerator_33200.current_mValue (HERE), var_ruleList, var_actuallyUsedTerminalSymbolMap, var_syntaxComponentListForGrammarAnalysis, var_addedNonTerminalCount, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 763)) ;
    }
    GALGAS_uint var_i = GALGAS_uint ((uint32_t) 0U) ;
    if (var_addedNonTerminalCount.isValid ()) {
      uint32_t variant_35114 = var_addedNonTerminalCount.uintValue () ;
      bool loop_35114 = true ;
      while (loop_35114) {
        loop_35114 = GALGAS_bool (kIsStrictInf, var_i.objectCompare (var_addedNonTerminalCount.substract_operation (var_addedNonTerminalCountRef, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 772)))).isValid () ;
        if (loop_35114) {
          loop_35114 = GALGAS_bool (kIsStrictInf, var_i.objectCompare (var_addedNonTerminalCount.substract_operation (var_addedNonTerminalCountRef, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 772)))).boolValue () ;
        }
        if (loop_35114 && (0 == variant_35114)) {
          loop_35114 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE ("grammarCompilation.gSemantics", 772)) ;
        }
        if (loop_35114) {
          variant_35114 -- ;
          var_nonTerminalToAddList.addAssign_operation (var_syntaxComponentName, var_i  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 773)) ;
          var_i.increment_operation (inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 774)) ;
        }
      }
    }
    enumerator_33200.gotoNextObject () ;
  }
  GALGAS_stringset var_lexiqueComponentSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("grammarCompilation.gSemantics", 778)) ;
  GALGAS_lstring var_inIndexingDirectory ;
  GALGAS_terminalMap joker_35555_0 ; // Joker input parameter
  GALGAS_indexingListAST joker_35591_0 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mLexiqueComponentMapForSemanticAnalysis.method_searchKey (var_lexiqueComponentName, joker_35555_0, joker_35591_0, var_inIndexingDirectory, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 779)) ;
  GALGAS_bool var_hasIndexing = var_inIndexingDirectory.mAttribute_location.reader_isNowhere (SOURCE_FILE ("grammarCompilation.gSemantics", 785)).operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 785)) ;
  const enumGalgasBool test_8 = var_hasIndexing.operator_and (constinArgument_inGrammarComponentRoot.mAttribute_mHasIndexing.mAttribute_bool.operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 786)) COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 786)).boolEnum () ;
  if (kBoolTrue == test_8) {
    GALGAS_location location_9 (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_9, GALGAS_string ("the grammar does not enable indexing, but the '").operator_concat (var_lexiqueComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 787))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 787)).operator_concat (GALGAS_string ("' does")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 787))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 787)) ;
  }else if (kBoolFalse == test_8) {
    const enumGalgasBool test_10 = var_hasIndexing.operator_not (SOURCE_FILE ("grammarCompilation.gSemantics", 788)).operator_and (constinArgument_inGrammarComponentRoot.mAttribute_mHasIndexing.mAttribute_bool COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 788)).boolEnum () ;
    if (kBoolTrue == test_10) {
      GALGAS_location location_11 (constinArgument_inGrammarComponentRoot.mAttribute_mHasIndexing.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_11, GALGAS_string ("the grammar enables indexing, but the '").operator_concat (var_lexiqueComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 789))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 789)).operator_concat (GALGAS_string ("' does not")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 789))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 789)) ;
    }
  }
  GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis var_startSymbolAltMap ;
  GALGAS_uint var_startSymbolIndex ;
  var_nonTerminalMapForGrammarAnalysis.method_searchKey (constinArgument_inGrammarComponentRoot.reader_mStartSymbolName (SOURCE_FILE ("grammarCompilation.gSemantics", 795)), var_startSymbolIndex, var_startSymbolAltMap, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 795)) ;
  {
  routine_checkLabelMap (constinArgument_inGrammarComponentRoot.reader_mStartSymbolName (SOURCE_FILE ("grammarCompilation.gSemantics", 798)).reader_location (SOURCE_FILE ("grammarCompilation.gSemantics", 798)), constinArgument_inGrammarComponentRoot.reader_mStartSymbolLabelList (SOURCE_FILE ("grammarCompilation.gSemantics", 799)), var_nonTerminalMapForGrammarAnalysis.reader_locationForKey (constinArgument_inGrammarComponentRoot.reader_mStartSymbolName (SOURCE_FILE ("grammarCompilation.gSemantics", 800)).reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 800)), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 800)), var_startSymbolAltMap, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 797)) ;
  }
  GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis var_unusedNonTerminalSymbolsForGrammar = GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis::constructor_emptyMap (SOURCE_FILE ("grammarCompilation.gSemantics", 804)) ;
  cEnumerator_lstringlist enumerator_37035 (constinArgument_inGrammarComponentRoot.reader_mUnusedNonterminalList (SOURCE_FILE ("grammarCompilation.gSemantics", 805)), kEnumeration_up) ;
  while (enumerator_37035.hasCurrentObject ()) {
    GALGAS_uint var_nonterminalIndex ;
    GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis joker_37143_0 ; // Joker input parameter
    var_nonTerminalMapForGrammarAnalysis.method_searchKey (enumerator_37035.current_mValue (HERE), var_nonterminalIndex, joker_37143_0, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 807)) ;
    {
    var_unusedNonTerminalSymbolsForGrammar.modifier_insertKey (enumerator_37035.current_mValue (HERE), var_nonterminalIndex, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 808)) ;
    }
    enumerator_37035.gotoNextObject () ;
  }
  GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis var_nonTerminalSymbolSortedListForGrammarAnalysis = GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis::constructor_emptySortedList (SOURCE_FILE ("grammarCompilation.gSemantics", 811)) ;
  cEnumerator_nonTerminalSymbolMapForGrammarAnalysis enumerator_37500 (var_nonTerminalMapForGrammarAnalysis, kEnumeration_up) ;
  while (enumerator_37500.hasCurrentObject ()) {
    var_nonTerminalSymbolSortedListForGrammarAnalysis.addAssign_operation (enumerator_37500.current_lkey (HERE), enumerator_37500.current_mNonTerminalIndex (HERE), enumerator_37500.current_mNonterminalSymbolParametersMap (HERE)  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 813)) ;
    enumerator_37500.gotoNextObject () ;
  }
  GALGAS_stringset var_implementationFileHeader = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("grammarCompilation.gSemantics", 818)) ;
  cEnumerator_nonTerminalSymbolMapForGrammarAnalysis enumerator_38010 (var_nonTerminalMapForGrammarAnalysis, kEnumeration_up) ;
  while (enumerator_38010.hasCurrentObject ()) {
    cEnumerator_nonterminalSymbolLabelMapForGrammarAnalysis enumerator_38059 (enumerator_38010.current_mNonterminalSymbolParametersMap (HERE), kEnumeration_up) ;
    while (enumerator_38059.hasCurrentObject ()) {
      cEnumerator_signatureForGrammarAnalysis enumerator_38100 (enumerator_38059.current_mFormalParametersList (HERE), kEnumeration_up) ;
      while (enumerator_38100.hasCurrentObject ()) {
        if (enumerator_38100.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).isValid ()) {
          switch (enumerator_38100.current_mFormalArgumentPassingModeForGrammarAnalysis (HERE).enumValue ()) {
          case GALGAS_formalArgumentPassingModeAST::kNotBuilt:
            break ;
          case GALGAS_formalArgumentPassingModeAST::kEnum_argumentIn: case GALGAS_formalArgumentPassingModeAST::kEnum_argumentConstantIn: {
            GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_38100.current_mGalgasTypeNameForGrammarAnalysis (HERE), inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 824)) ;
            categoryMethod_addHeaderFileName (var_t, var_implementationFileHeader, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 825)) ;
            } break ;
          case GALGAS_formalArgumentPassingModeAST::kEnum_argumentInOut: case GALGAS_formalArgumentPassingModeAST::kEnum_argumentOut: {
            } break ;
          }
        }
        enumerator_38100.gotoNextObject () ;
      }
      enumerator_38059.gotoNextObject () ;
    }
    enumerator_38010.gotoNextObject () ;
  }
  const enumGalgasBool test_12 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_generateOneHeader.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_12) {
    var_implementationFileHeader = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("grammarCompilation.gSemantics", 832)) ;
  }
  var_implementationFileHeader.addAssign_operation (GALGAS_string ("grammar-").operator_concat (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 834))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 834))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 834)) ;
  var_implementationFileHeader.addAssign_operation (GALGAS_string ("lexique-").operator_concat (var_lexiqueComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 835))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 835))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 835)) ;
  GALGAS_string var_HTMLFilePath = constinArgument_inOutputDirectory.operator_concat (GALGAS_string ("/../helpers/")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 837)).operator_concat (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 837))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 837)).operator_concat (GALGAS_string (".html")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 837)) ;
  GALGAS_string var_grammarCppFile ;
  GALGAS_string var_grammarHTMLHelperContents ;
  {
  GALGAS_string temp_13 ;
  const enumGalgasBool test_14 = constinArgument_inGrammarComponentRoot.mAttribute_mHasTranslateFeature.boolEnum () ;
  if (kBoolTrue == test_14) {
    temp_13 = function_syntaxDirectedTranslationResultVarName (inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 850)) ;
  }else if (kBoolFalse == test_14) {
    temp_13 = GALGAS_string::makeEmptyString () ;
  }
  routine_grammarAnalysisAndGeneration (var_implementationFileHeader, constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName, constinArgument_inGrammarComponentRoot.reader_mGrammarClass (SOURCE_FILE ("grammarCompilation.gSemantics", 841)), var_startSymbolIndex, var_lexiqueComponentName.mAttribute_string, var_actuallyUsedTerminalSymbolMap, var_syntaxComponentListForGrammarAnalysis, var_unusedNonTerminalSymbolsForGrammar, var_HTMLFilePath, var_nonTerminalSymbolSortedListForGrammarAnalysis, var_hasIndexing, temp_13, var_grammarCppFile, var_grammarHTMLHelperContents, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 838)) ;
  }
  GALGAS_string var_headerContents = GALGAS_string::makeEmptyString () ;
  const enumGalgasBool test_15 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("grammarCompilation.gSemantics", 856)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_15) {
    var_headerContents = GALGAS_string (filewrapperTemplate_grammarGenerationTemplate_grammarZone_32_HeaderGalgas_33_ (inCompiler, constinArgument_inGrammarComponentRoot COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 857))) ;
    var_headerContents.dotAssign_operation (GALGAS_string (filewrapperTemplate_grammarGenerationTemplate_grammarZone_33_HeaderGalgas_33_ (inCompiler, var_lexiqueComponentName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("grammarCompilation.gSemantics", 861)), constinArgument_inGrammarComponentRoot, var_nonTerminalMapForGrammarAnalysis, var_nonTerminalToAddList, var_hasIndexing COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 860)))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 860)) ;
  }
  const enumGalgasBool test_16 = GALGAS_bool (gOption_galgas_5F_cli_5F_options_outputHTMLgrammarFile.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_16) {
    GALGAS_bool joker_40349_0 ; // Joker input parameter
    var_grammarHTMLHelperContents.method_writeToFileWhenDifferentContents (var_HTMLFilePath, joker_40349_0, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 870)) ;
  }else if (kBoolFalse == test_16) {
    {
    GALGAS_string::class_method_deleteFileIfExists (var_HTMLFilePath, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 872)) ;
    }
  }
  ioArgument_ioGrammarGenerationList.addAssign_operation (constinArgument_inGrammarComponentRoot.mAttribute_mGrammarComponentName.mAttribute_string, var_headerContents, var_grammarCppFile  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 875)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      Routine 'generateGrammarComponentGalgas3'                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateGrammarComponentGalgas_33_ (const GALGAS_string constinArgument_inOutputDirectory,
                                                 const GALGAS_grammarComponentGenerationList constinArgument_inGrammarGenerationList,
                                                 GALGAS_stringlist & ioArgument_ioToolProductFileList,
                                                 GALGAS_stringset & ioArgument_ioAllProductFileSet,
                                                 C_Compiler * inCompiler
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_grammarComponentGenerationList enumerator_41282 (constinArgument_inGrammarGenerationList, kEnumeration_up) ;
  while (enumerator_41282.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("grammarCompilation.gSemantics", 896)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      ioArgument_ioToolProductFileList.addAssign_operation (GALGAS_string ("grammar-").add_operation (enumerator_41282.current_mGrammarName (HERE), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 897)).add_operation (GALGAS_string (".cpp"), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 897))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 897)) ;
      ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("grammar-").add_operation (enumerator_41282.current_mGrammarName (HERE), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 898)).add_operation (GALGAS_string (".cpp"), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 898))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 898)) ;
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, GALGAS_string ("grammar-").add_operation (enumerator_41282.current_mGrammarName (HERE), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 901)).operator_concat (GALGAS_string (".cpp")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 901)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), enumerator_41282.current_mCppFileContents (HERE), GALGAS_string ("\n"
        "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 899)) ;
      }
    }
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("grammarCompilation.gSemantics", 910)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_1) {
      ioArgument_ioAllProductFileSet.addAssign_operation (GALGAS_string ("grammar-").add_operation (enumerator_41282.current_mGrammarName (HERE), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 911)).add_operation (GALGAS_string (".h"), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 911))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 911)) ;
      {
      GALGAS_string::class_method_generateFileWithPattern (constinArgument_inOutputDirectory, GALGAS_string ("grammar-").operator_concat (enumerator_41282.current_mGrammarName (HERE)  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 914)).operator_concat (GALGAS_string (".h")  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 914)), GALGAS_string ("//"), GALGAS_string ("\n"
        "\n"), enumerator_41282.current_mHeaderContents (HERE), GALGAS_string ("\n"
        "\n"), GALGAS_string ("\n"), inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 912)) ;
      }
    }
    enumerator_41282.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Abstract category method '@syntaxInstructionAST transformInstruction'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_syntaxInstructionAST_transformInstruction> gCategoryMethodTable_syntaxInstructionAST_transformInstruction ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_transformInstruction (const int32_t inClassIndex,
                                               categoryMethodSignature_syntaxInstructionAST_transformInstruction inMethod) {
  gCategoryMethodTable_syntaxInstructionAST_transformInstruction.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_syntaxInstructionAST_transformInstruction (void) {
  gCategoryMethodTable_syntaxInstructionAST_transformInstruction.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_syntaxInstructionAST_transformInstruction (NULL,
                                                                      freeCategoryMethod_syntaxInstructionAST_transformInstruction) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_transformInstruction (const cPtr_syntaxInstructionAST * inObject,
                                              GALGAS_terminalSymbolsMapForGrammarAnalysis & io_ioActuallyUsedTerminalSymbolMap,
                                              const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constin_inNonTerminalSymbolMap,
                                              GALGAS_uint & io_ioAddedNonTerminalIndex,
                                              GALGAS_syntaxInstructionListForGrammarAnalysis & io_ioSyntaxInstructionList,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_syntaxInstructionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_syntaxInstructionAST_transformInstruction f = NULL ;
    if (classIndex < gCategoryMethodTable_syntaxInstructionAST_transformInstruction.count ()) {
      f = gCategoryMethodTable_syntaxInstructionAST_transformInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_syntaxInstructionAST_transformInstruction.count ()) {
           f = gCategoryMethodTable_syntaxInstructionAST_transformInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_syntaxInstructionAST_transformInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioActuallyUsedTerminalSymbolMap, constin_inNonTerminalSymbolMap, io_ioAddedNonTerminalIndex, io_ioSyntaxInstructionList, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Overriding category method '@semanticInstructionAST transformInstruction'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_semanticInstructionAST_transformInstruction (const cPtr_syntaxInstructionAST * /* inObject */,
                                                                        GALGAS_terminalSymbolsMapForGrammarAnalysis & /* ioArgument_ioActuallyUsedTerminalSymbolMap */,
                                                                        const GALGAS_nonTerminalSymbolMapForGrammarAnalysis /* constinArgument_inNonTerminalSymbolMap */,
                                                                        GALGAS_uint & /* ioArgument_ioAddedNonTerminalIndex */,
                                                                        GALGAS_syntaxInstructionListForGrammarAnalysis & /* ioArgument_ioSyntaxInstructionList */,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_semanticInstructionAST_transformInstruction (void) {
  enterCategoryMethod_transformInstruction (kTypeDescriptor_GALGAS_semanticInstructionAST.mSlotID,
                                            categoryMethod_semanticInstructionAST_transformInstruction) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticInstructionAST_transformInstruction (defineCategoryMethod_semanticInstructionAST_transformInstruction, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Overriding category method '@syntaxSendInstruction transformInstruction'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_syntaxSendInstruction_transformInstruction (const cPtr_syntaxInstructionAST * /* inObject */,
                                                                       GALGAS_terminalSymbolsMapForGrammarAnalysis & /* ioArgument_ioActuallyUsedTerminalSymbolMap */,
                                                                       const GALGAS_nonTerminalSymbolMapForGrammarAnalysis /* constinArgument_inNonTerminalSymbolMap */,
                                                                       GALGAS_uint & /* ioArgument_ioAddedNonTerminalIndex */,
                                                                       GALGAS_syntaxInstructionListForGrammarAnalysis & /* ioArgument_ioSyntaxInstructionList */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_syntaxSendInstruction_transformInstruction (void) {
  enterCategoryMethod_transformInstruction (kTypeDescriptor_GALGAS_syntaxSendInstruction.mSlotID,
                                            categoryMethod_syntaxSendInstruction_transformInstruction) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_syntaxSendInstruction_transformInstruction (defineCategoryMethod_syntaxSendInstruction_transformInstruction, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Overriding category method '@terminalCheckInstruction transformInstruction'                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_terminalCheckInstruction_transformInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                          GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument_ioActuallyUsedTerminalSymbolMap,
                                                                          const GALGAS_nonTerminalSymbolMapForGrammarAnalysis /* constinArgument_inNonTerminalSymbolMap */,
                                                                          GALGAS_uint & /* ioArgument_ioAddedNonTerminalIndex */,
                                                                          GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument_ioSyntaxInstructionList,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_terminalCheckInstruction * object = (const cPtr_terminalCheckInstruction *) inObject ;
  macroValidSharedObject (object, cPtr_terminalCheckInstruction) ;
  GALGAS_uint var_terminalSymbolIndex ;
  const cMapElement_terminalSymbolsMapForGrammarAnalysis * objectArray_9672 = (const cMapElement_terminalSymbolsMapForGrammarAnalysis *) ioArgument_ioActuallyUsedTerminalSymbolMap.readAccessForWithInstruction (object->mAttribute_mTerminalName.reader_string (SOURCE_FILE ("grammarCompilation.gSemantics", 215))) ;
  if (NULL != objectArray_9672) {
      macroValidSharedObject (objectArray_9672, cMapElement_terminalSymbolsMapForGrammarAnalysis) ;
    var_terminalSymbolIndex = objectArray_9672->mAttribute_mTerminalIndex ;
  }else{
    var_terminalSymbolIndex = ioArgument_ioActuallyUsedTerminalSymbolMap.reader_count (SOURCE_FILE ("grammarCompilation.gSemantics", 218)) ;
    {
    ioArgument_ioActuallyUsedTerminalSymbolMap.modifier_insertKey (object->mAttribute_mTerminalName, var_terminalSymbolIndex, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 219)) ;
    }
  }
  ioArgument_ioSyntaxInstructionList.addAssign_operation (GALGAS_terminalInstructionForGrammarAnalysis::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTerminalName, var_terminalSymbolIndex  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 221))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 221)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_terminalCheckInstruction_transformInstruction (void) {
  enterCategoryMethod_transformInstruction (kTypeDescriptor_GALGAS_terminalCheckInstruction.mSlotID,
                                            categoryMethod_terminalCheckInstruction_transformInstruction) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_terminalCheckInstruction_transformInstruction (defineCategoryMethod_terminalCheckInstruction_transformInstruction, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                    Overriding category method '@nonterminalCallInstruction transformInstruction'                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_nonterminalCallInstruction_transformInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                            GALGAS_terminalSymbolsMapForGrammarAnalysis & /* ioArgument_ioActuallyUsedTerminalSymbolMap */,
                                                                            const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument_inNonTerminalSymbolMap,
                                                                            GALGAS_uint & /* ioArgument_ioAddedNonTerminalIndex */,
                                                                            GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument_ioSyntaxInstructionList,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_nonterminalCallInstruction * object = (const cPtr_nonterminalCallInstruction *) inObject ;
  macroValidSharedObject (object, cPtr_nonterminalCallInstruction) ;
  GALGAS_uint var_nonTerminalSymbolIndex ;
  GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis joker_10696_0 ; // Joker input parameter
  constinArgument_inNonTerminalSymbolMap.method_searchKey (object->mAttribute_mNonterminalName, var_nonTerminalSymbolIndex, joker_10696_0, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 237)) ;
  ioArgument_ioSyntaxInstructionList.addAssign_operation (GALGAS_nonTerminalInstructionForGrammarAnalysis::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mNonterminalName, var_nonTerminalSymbolIndex  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 238))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 238)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_nonterminalCallInstruction_transformInstruction (void) {
  enterCategoryMethod_transformInstruction (kTypeDescriptor_GALGAS_nonterminalCallInstruction.mSlotID,
                                            categoryMethod_nonterminalCallInstruction_transformInstruction) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nonterminalCallInstruction_transformInstruction (defineCategoryMethod_nonterminalCallInstruction_transformInstruction, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Overriding category method '@repeatInstruction transformInstruction'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_repeatInstruction_transformInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                   GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument_ioActuallyUsedTerminalSymbolMap,
                                                                   const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument_inNonTerminalSymbolMap,
                                                                   GALGAS_uint & ioArgument_ioAddedNonTerminalIndex,
                                                                   GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument_ioSyntaxInstructionList,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_repeatInstruction * object = (const cPtr_repeatInstruction *) inObject ;
  macroValidSharedObject (object, cPtr_repeatInstruction) ;
  GALGAS_uint var_addedNonTerminalIndex = ioArgument_ioAddedNonTerminalIndex ;
  ioArgument_ioAddedNonTerminalIndex.increment_operation (inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 254)) ;
  GALGAS_syntaxInstructionListForGrammarAnalysis var_repeatedInstructionList = GALGAS_syntaxInstructionListForGrammarAnalysis::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 256)) ;
  {
  routine_transformInstructionList (object->mAttribute_mRepeatedInstructionList, ioArgument_ioActuallyUsedTerminalSymbolMap, constinArgument_inNonTerminalSymbolMap, ioArgument_ioAddedNonTerminalIndex, var_repeatedInstructionList, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 257)) ;
  }
  GALGAS_branchListForGrammarAnalysis var_repeatBranchList = GALGAS_branchListForGrammarAnalysis::constructor_listWithValue (var_repeatedInstructionList COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 264)) ;
  cEnumerator_listOfSyntaxInstructionList enumerator_11852 (object->mAttribute_mRepeatBranchList, kEnumeration_up) ;
  while (enumerator_11852.hasCurrentObject ()) {
    GALGAS_syntaxInstructionListForGrammarAnalysis var_syntaxInstructionList = GALGAS_syntaxInstructionListForGrammarAnalysis::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 267)) ;
    {
    routine_transformInstructionList (enumerator_11852.current_mSyntaxInstructionList (HERE), ioArgument_ioActuallyUsedTerminalSymbolMap, constinArgument_inNonTerminalSymbolMap, ioArgument_ioAddedNonTerminalIndex, var_syntaxInstructionList, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 268)) ;
    }
    var_repeatBranchList.addAssign_operation (var_syntaxInstructionList  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 275)) ;
    enumerator_11852.gotoNextObject () ;
  }
  ioArgument_ioSyntaxInstructionList.addAssign_operation (GALGAS_repeatInstructionForGrammarAnalysis::constructor_new (object->mAttribute_mInstructionLocation, var_repeatBranchList, var_addedNonTerminalIndex  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 278))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 278)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_repeatInstruction_transformInstruction (void) {
  enterCategoryMethod_transformInstruction (kTypeDescriptor_GALGAS_repeatInstruction.mSlotID,
                                            categoryMethod_repeatInstruction_transformInstruction) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_repeatInstruction_transformInstruction (defineCategoryMethod_repeatInstruction_transformInstruction, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Overriding category method '@selectInstruction transformInstruction'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_selectInstruction_transformInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                   GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument_ioActuallyUsedTerminalSymbolMap,
                                                                   const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument_inNonTerminalSymbolMap,
                                                                   GALGAS_uint & ioArgument_ioAddedNonTerminalIndex,
                                                                   GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument_ioSyntaxInstructionList,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selectInstruction * object = (const cPtr_selectInstruction *) inObject ;
  macroValidSharedObject (object, cPtr_selectInstruction) ;
  GALGAS_uint var_addedNonTerminalIndex = ioArgument_ioAddedNonTerminalIndex ;
  ioArgument_ioAddedNonTerminalIndex.increment_operation (inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 294)) ;
  GALGAS_branchListForGrammarAnalysis var_selectBranchList = GALGAS_branchListForGrammarAnalysis::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 296)) ;
  cEnumerator_listOfSyntaxInstructionList enumerator_13047 (object->mAttribute_mSelectBranchList, kEnumeration_up) ;
  while (enumerator_13047.hasCurrentObject ()) {
    GALGAS_syntaxInstructionListForGrammarAnalysis var_syntaxInstructionList = GALGAS_syntaxInstructionListForGrammarAnalysis::constructor_emptyList (SOURCE_FILE ("grammarCompilation.gSemantics", 298)) ;
    {
    routine_transformInstructionList (enumerator_13047.current_mSyntaxInstructionList (HERE), ioArgument_ioActuallyUsedTerminalSymbolMap, constinArgument_inNonTerminalSymbolMap, ioArgument_ioAddedNonTerminalIndex, var_syntaxInstructionList, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 299)) ;
    }
    var_selectBranchList.addAssign_operation (var_syntaxInstructionList  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 306)) ;
    enumerator_13047.gotoNextObject () ;
  }
  ioArgument_ioSyntaxInstructionList.addAssign_operation (GALGAS_selectInstructionForGrammarAnalysis::constructor_new (object->mAttribute_mInstructionLocation, var_selectBranchList, var_addedNonTerminalIndex  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 309))  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 309)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_selectInstruction_transformInstruction (void) {
  enterCategoryMethod_transformInstruction (kTypeDescriptor_GALGAS_selectInstruction.mSlotID,
                                            categoryMethod_selectInstruction_transformInstruction) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selectInstruction_transformInstruction (defineCategoryMethod_selectInstruction_transformInstruction, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Overriding category method '@parseRewindInstruction transformInstruction'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_parseRewindInstruction_transformInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                        GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument_ioActuallyUsedTerminalSymbolMap,
                                                                        const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument_inNonTerminalSymbolMap,
                                                                        GALGAS_uint & ioArgument_ioAddedNonTerminalIndex,
                                                                        GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument_ioSyntaxInstructionList,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseRewindInstruction * object = (const cPtr_parseRewindInstruction *) inObject ;
  macroValidSharedObject (object, cPtr_parseRewindInstruction) ;
  GALGAS_syntaxInstructionList var_syntaxInstructionList ;
  GALGAS_location joker_14165_0 ; // Joker input parameter
  object->mAttribute_mParseRewindBranchList.method_first (var_syntaxInstructionList, joker_14165_0, inCompiler COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 325)) ;
  {
  routine_transformInstructionList (var_syntaxInstructionList, ioArgument_ioActuallyUsedTerminalSymbolMap, constinArgument_inNonTerminalSymbolMap, ioArgument_ioAddedNonTerminalIndex, ioArgument_ioSyntaxInstructionList, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 327)) ;
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_parseRewindInstruction_transformInstruction (void) {
  enterCategoryMethod_transformInstruction (kTypeDescriptor_GALGAS_parseRewindInstruction.mSlotID,
                                            categoryMethod_parseRewindInstruction_transformInstruction) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseRewindInstruction_transformInstruction (defineCategoryMethod_parseRewindInstruction_transformInstruction, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Overriding category method '@parseWhenInstruction transformInstruction'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_parseWhenInstruction_transformInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                      GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument_ioActuallyUsedTerminalSymbolMap,
                                                                      const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument_inNonTerminalSymbolMap,
                                                                      GALGAS_uint & ioArgument_ioAddedNonTerminalIndex,
                                                                      GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument_ioSyntaxInstructionList,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseWhenInstruction * object = (const cPtr_parseWhenInstruction *) inObject ;
  macroValidSharedObject (object, cPtr_parseWhenInstruction) ;
  {
  routine_transformInstructionList (object->mAttribute_mElseInstructionList, ioArgument_ioActuallyUsedTerminalSymbolMap, constinArgument_inNonTerminalSymbolMap, ioArgument_ioAddedNonTerminalIndex, ioArgument_ioSyntaxInstructionList, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 344)) ;
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_parseWhenInstruction_transformInstruction (void) {
  enterCategoryMethod_transformInstruction (kTypeDescriptor_GALGAS_parseWhenInstruction.mSlotID,
                                            categoryMethod_parseWhenInstruction_transformInstruction) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseWhenInstruction_transformInstruction (defineCategoryMethod_parseWhenInstruction_transformInstruction, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Overriding category method '@parseLoopInstruction transformInstruction'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_parseLoopInstruction_transformInstruction (const cPtr_syntaxInstructionAST * inObject,
                                                                      GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument_ioActuallyUsedTerminalSymbolMap,
                                                                      const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument_inNonTerminalSymbolMap,
                                                                      GALGAS_uint & ioArgument_ioAddedNonTerminalIndex,
                                                                      GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument_ioSyntaxInstructionList,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseLoopInstruction * object = (const cPtr_parseLoopInstruction *) inObject ;
  macroValidSharedObject (object, cPtr_parseLoopInstruction) ;
  {
  routine_transformInstructionList (object->mAttribute_mDoInstructionList, ioArgument_ioActuallyUsedTerminalSymbolMap, constinArgument_inNonTerminalSymbolMap, ioArgument_ioAddedNonTerminalIndex, ioArgument_ioSyntaxInstructionList, inCompiler  COMMA_SOURCE_FILE ("grammarCompilation.gSemantics", 361)) ;
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_parseLoopInstruction_transformInstruction (void) {
  enterCategoryMethod_transformInstruction (kTypeDescriptor_GALGAS_parseLoopInstruction.mSlotID,
                                            categoryMethod_parseLoopInstruction_transformInstruction) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseLoopInstruction_transformInstruction (defineCategoryMethod_parseLoopInstruction_transformInstruction, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList_2D_element::GALGAS_nonTerminalToAddList_2D_element (void) :
mAttribute_mSyntaxComponentName (),
mAttribute_mNonTerminalToAddCount () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList_2D_element::~ GALGAS_nonTerminalToAddList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList_2D_element::GALGAS_nonTerminalToAddList_2D_element (const GALGAS_string & inOperand0,
                                                                                const GALGAS_uint & inOperand1) :
mAttribute_mSyntaxComponentName (inOperand0),
mAttribute_mNonTerminalToAddCount (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList_2D_element GALGAS_nonTerminalToAddList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_nonTerminalToAddList_2D_element (GALGAS_string::constructor_default (HERE),
                                                 GALGAS_uint::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList_2D_element GALGAS_nonTerminalToAddList_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                const GALGAS_uint & inOperand1 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_nonTerminalToAddList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_nonTerminalToAddList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_nonTerminalToAddList_2D_element::objectCompare (const GALGAS_nonTerminalToAddList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mSyntaxComponentName.objectCompare (inOperand.mAttribute_mSyntaxComponentName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mNonTerminalToAddCount.objectCompare (inOperand.mAttribute_mNonTerminalToAddCount) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_nonTerminalToAddList_2D_element::isValid (void) const {
  return mAttribute_mSyntaxComponentName.isValid () && mAttribute_mNonTerminalToAddCount.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList_2D_element::drop (void) {
  mAttribute_mSyntaxComponentName.drop () ;
  mAttribute_mNonTerminalToAddCount.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_nonTerminalToAddList_2D_element::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "<struct @nonTerminalToAddList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mSyntaxComponentName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mNonTerminalToAddCount.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_nonTerminalToAddList_2D_element::reader_mSyntaxComponentName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSyntaxComponentName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_nonTerminalToAddList_2D_element::reader_mNonTerminalToAddCount (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNonTerminalToAddCount ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @nonTerminalToAddList-element type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nonTerminalToAddList_2D_element ("nonTerminalToAddList-element",
                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nonTerminalToAddList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nonTerminalToAddList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nonTerminalToAddList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nonTerminalToAddList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_nonTerminalToAddList_2D_element GALGAS_nonTerminalToAddList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_nonTerminalToAddList_2D_element result ;
  const GALGAS_nonTerminalToAddList_2D_element * p = (const GALGAS_nonTerminalToAddList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nonTerminalToAddList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("nonTerminalToAddList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList_2D_element::GALGAS_grammarComponentGenerationList_2D_element (void) :
mAttribute_mGrammarName (),
mAttribute_mHeaderContents (),
mAttribute_mCppFileContents () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList_2D_element::~ GALGAS_grammarComponentGenerationList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList_2D_element::GALGAS_grammarComponentGenerationList_2D_element (const GALGAS_string & inOperand0,
                                                                                                    const GALGAS_string & inOperand1,
                                                                                                    const GALGAS_string & inOperand2) :
mAttribute_mGrammarName (inOperand0),
mAttribute_mHeaderContents (inOperand1),
mAttribute_mCppFileContents (inOperand2) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList_2D_element GALGAS_grammarComponentGenerationList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_grammarComponentGenerationList_2D_element (GALGAS_string::constructor_default (HERE),
                                                           GALGAS_string::constructor_default (HERE),
                                                           GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList_2D_element GALGAS_grammarComponentGenerationList_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                    const GALGAS_string & inOperand2 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_grammarComponentGenerationList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_grammarComponentGenerationList_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_grammarComponentGenerationList_2D_element::objectCompare (const GALGAS_grammarComponentGenerationList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mGrammarName.objectCompare (inOperand.mAttribute_mGrammarName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHeaderContents.objectCompare (inOperand.mAttribute_mHeaderContents) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCppFileContents.objectCompare (inOperand.mAttribute_mCppFileContents) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_grammarComponentGenerationList_2D_element::isValid (void) const {
  return mAttribute_mGrammarName.isValid () && mAttribute_mHeaderContents.isValid () && mAttribute_mCppFileContents.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList_2D_element::drop (void) {
  mAttribute_mGrammarName.drop () ;
  mAttribute_mHeaderContents.drop () ;
  mAttribute_mCppFileContents.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_grammarComponentGenerationList_2D_element::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "<struct @grammarComponentGenerationList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mGrammarName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHeaderContents.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCppFileContents.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_grammarComponentGenerationList_2D_element::reader_mGrammarName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGrammarName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_grammarComponentGenerationList_2D_element::reader_mHeaderContents (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHeaderContents ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_grammarComponentGenerationList_2D_element::reader_mCppFileContents (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCppFileContents ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    @grammarComponentGenerationList-element type                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarComponentGenerationList_2D_element ("grammarComponentGenerationList-element",
                                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarComponentGenerationList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarComponentGenerationList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarComponentGenerationList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarComponentGenerationList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_grammarComponentGenerationList_2D_element GALGAS_grammarComponentGenerationList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_grammarComponentGenerationList_2D_element result ;
  const GALGAS_grammarComponentGenerationList_2D_element * p = (const GALGAS_grammarComponentGenerationList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarComponentGenerationList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("grammarComponentGenerationList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


