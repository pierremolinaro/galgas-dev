//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'grammarCompilation.cpp'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 6th, 2009, at 17h58'42"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "grammarCompilation.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "grammarCompilation.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                         class 'e_nonTerminalMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

e_nonTerminalMap::e_nonTerminalMap (void) :
mLabels (),
mHasParseLabel () {
}

//---------------------------------------------------------------------------*
//                                                                           *
//                       class map '@nonTerminalMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_nonTerminalMap::
elementOf_GGS_nonTerminalMap (const GGS_lstring & inKey,
              const PMSInt32 inIndex,
              const e_nonTerminalMap & inInfo) :
AC_galgas_map_element (inKey, inIndex),
mInfo (inInfo) {
}

//---------------------------------------------------------------------------*

void elementOf_GGS_nonTerminalMap::
appendForMapDescription (C_Compiler & inLexique,
                         const PMSInt32 inElementIndex,
                         C_String & ioString,
                         const PMSInt32 inIndentation
                         COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-key " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mKey.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mLabels.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mHasParseLabel.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_nonTerminalMap::
isEqualToMapElement (const AC_galgas_map_element * inOperand) const {
  const elementOf_GGS_nonTerminalMap * ptr = dynamic_cast <const elementOf_GGS_nonTerminalMap *> (inOperand) ;
  macroValidPointer (ptr) ;
  return (mInfo.mLabels.operator_isEqual (ptr->mInfo.mLabels)).boolValue ()
           && (mInfo.mHasParseLabel.operator_isEqual (ptr->mInfo.mHasParseLabel)).boolValue () ;
}

//---------------------------------------------------------------------------*

AC_galgas_map_element * GGS_nonTerminalMap::
new_element (const GGS_lstring & inKey, void * inInfo) {
  MF_Assert (reinterpret_cast <e_nonTerminalMap *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  AC_galgas_map_element * p = NULL ;
  e_nonTerminalMap * info = (e_nonTerminalMap *) inInfo ;
  macroMyNew (p, cElement (inKey, nextIndex (), * info)) ;
  return p ;
}

//---------------------------------------------------------------------------*

void GGS_nonTerminalMap::
assignInfo (AC_galgas_map_element * inPtr, void * inInfo) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  MF_Assert (reinterpret_cast <e_nonTerminalMap *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  e_nonTerminalMap * info = (e_nonTerminalMap *) inInfo ;
  p->mInfo = * info ;
}

//---------------------------------------------------------------------------*

GGS_nonTerminalMap GGS_nonTerminalMap::
constructor_emptyMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nonTerminalMap result ;
  macroMyNew (result.mSharedMapRoot, cMapRoot) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_nonTerminalMap::
enterIndex (const GGS_lstring & inKey,
            AC_galgas_index_core & outIndex) {
  e_nonTerminalMap info  ;
  internalEnterIndex (inKey,
                      (void *) & info,
                      outIndex) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_nonTerminalMap::
operator_isEqual (const GGS_nonTerminalMap & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_nonTerminalMap::
operator_isNotEqual (const GGS_nonTerminalMap & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), ! isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

void GGS_nonTerminalMap::
internalInsertForDuplication (AC_galgas_map_element * inPtr) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  PMSInt32 attributeIndex = -1 ; // Unused here
  GGS_location existingKeyLocation ; // Unused here
  internalInsert (p->mKey, (void *) & p->mInfo, attributeIndex, existingKeyLocation) ;
}

//---------------------------------------------------------------------------*

void GGS_nonTerminalMap::
insertElement (C_Compiler & inLexique,
                const utf32 * inErrorMessage,
                const GGS_lstring & inKey,
                const GGS_nonTerminalLabelList & inParameter0,
                const GGS_bool& inParameter1,
                GGS_luint * outIndex
                COMMA_LOCATION_ARGS) {
  PMSInt32 elementID = - 1 ;
  if (isBuilt ()
   && inParameter0.isBuilt ()
   && inParameter1.isBuilt ()
   && inKey.isBuilt ()) {
    insulateMap () ;
    e_nonTerminalMap info  ;
    info.mLabels = inParameter0 ;
    info.mHasParseLabel = inParameter1 ;
    GGS_location existingKeyLocation ;
    internalInsert (inKey, (void *) & info, elementID, existingKeyLocation) ;
    if (elementID < 0) {
      emitInsertMapSemanticErrorMessage (inLexique, inKey, inErrorMessage, existingKeyLocation COMMA_THERE) ;
    }
  }
  if (outIndex != NULL) {
    * outIndex = GGS_luint (GGS_uint (elementID >= 0, (PMUInt32) elementID), inKey) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_nonTerminalMap::
searchElement (C_Compiler & inLexique,
               const utf32 * inErrorMessage,
               const GGS_lstring & inKey,
               GGS_nonTerminalLabelList   & outParameter0,
               GGS_bool  & outParameter1,
               GGS_luint * outIndex
               COMMA_LOCATION_ARGS) const {
  cElement * node = NULL  ;
  if (isBuilt () && inKey.isBuilt ()) {
    AC_galgas_map_element * p = internal_search (inKey.string ()) ;
    MF_Assert ((p == NULL) || (reinterpret_cast <cElement *> (p) != NULL), "Dynamic cast error", 0, 0) ;
    node = (cElement *) p ;
    if (node == NULL) {
      emitMapSemanticErrorMessage (inLexique, inKey, inErrorMessage COMMA_THERE) ;
    }
  }
  if (node == NULL) {
    outParameter0.drop () ;
    outParameter1.drop () ;
    if (outIndex != NULL) {
      outIndex->drop () ;
     }
  }else{
    outParameter0 = node->mInfo.mLabels ;
    outParameter1 = node->mInfo.mHasParseLabel ;
    if (outIndex != NULL) {
      * outIndex = GGS_luint (GGS_uint (true, (PMUInt32) node->mID), inKey) ;
    }
  }
}

//---------------------------------------------------------------------------*

const utf32 GGS_nonTerminalMap::kSearchMessage_searchKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('@'),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_nonTerminalMap::
method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_nonTerminalLabelList   & outParameter0,
                                GGS_bool  & outParameter1 COMMA_LOCATION_ARGS) const {
  searchElement (inLexique,
                  kSearchMessage_searchKey,
                  inKey,
                  outParameter0,
                  outParameter1,
                  NULL
                  COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const utf32 GGS_nonTerminalMap::kInsertMessage_insertKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('@'),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('t'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('m'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE (' '),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('y'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('%'),
  TO_UNICODE ('L'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_nonTerminalMap::
modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_nonTerminalLabelList & inParameter0,
                                const GGS_bool& inParameter1 COMMA_LOCATION_ARGS) {
  insertElement (inLexique,
                 kInsertMessage_insertKey,
                 inKey,
                 inParameter0,
                 inParameter1,
                 NULL
                 COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GGS_nonTerminalMap GGS_nonTerminalMap::
constructor_mapWithMapToOverride (C_Compiler & /* inLexique */,
                                  const GGS_nonTerminalMap & inMapToOverride
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nonTerminalMap result ; // Not Built
  if (inMapToOverride.mSharedMapRoot != NULL) {
    macroValidPointer (inMapToOverride.mSharedMapRoot) ;
    macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    result.mSharedMapRoot->mNextMap = inMapToOverride.mSharedMapRoot ;
    inMapToOverride.mSharedMapRoot->mReferenceCount ++ ;
    result.mSharedMapRoot->mSequenceNumber = inMapToOverride.mSharedMapRoot->mSequenceNumber ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_nonTerminalMap GGS_nonTerminalMap::
reader_overriddenMap (C_Compiler & /* inLexique */
                      COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_nonTerminalMap result ; // Not Built
  if (mSharedMapRoot != NULL) {
    macroValidPointer (mSharedMapRoot) ;
    result.mSharedMapRoot = mSharedMapRoot->mNextMap ;
    if (result.mSharedMapRoot != NULL) {
      macroValidPointer (result.mSharedMapRoot) ;
      result.mSharedMapRoot->mReferenceCount ++ ;
    }else{
      macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_nonTerminalMap::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const PMSInt32 inIndentation) const {
  C_String s ;
  s << "<map @nonTerminalMap " ;
  if (isBuilt ()) {
    s.appendSigned (count ()) ;
    s << " object" << ((count () > 1) ? "s " : " ") ;
    cElement * p = firstObject () ;
    PMSInt32 elementID = 0 ;
    while (p != NULL) {
      macroValidPointer (p) ;
      p->appendForMapDescription (inLexique, elementID, s, inIndentation COMMA_THERE) ;
      p = p->nextObject () ;
      elementID ++ ;
    }
  }else{
    s << "not built" ;
  }
  s << "\n" ;
  s.writeStringMultiple ("| ", inIndentation) ;
  s << ">" ;
  return GGS_string (true, s) ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_nonTerminalLabelList  & GGS_nonTerminalMap::cEnumerator::_mLabels (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mLabels ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_bool & GGS_nonTerminalMap::cEnumerator::_mHasParseLabel (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mHasParseLabel ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of wrapper 'grammarGenerationTemplates'           *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_grammarGenerationTemplates_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_grammarGenerationTemplates_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_grammarGenerationTemplates = {
  "",
  0,
  gWrapperAllFiles_grammarGenerationTemplates_0,
  0,
  gWrapperAllDirectories_grammarGenerationTemplates_0
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       'html' template of 'grammarGenerationTemplates' filewrapper         *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_grammarGenerationTemplates_html (C_Compiler & /* inLexique */,
                                const GGS_string& var_cas_GRAMMAR_NAME) {
  C_String result ;
  const bool isBuilt = var_cas_GRAMMAR_NAME.isBuilt () ;
  if (isBuilt) {
    result << "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n"
      "<html><head>\n"
      "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n"
      "<title>'" ;
    result << var_cas_GRAMMAR_NAME ;
    result << "' grammar</title>\n"
      "<style type=\"text/css\">body {\n"
      "  font-family: Helvetica, sans-serif ;\n"
      "  font-size: small ;\n"
      "}\n"
      "\n"
      "h1 {\n"
      "  text-align: center ;\n"
      "}\n"
      "\n"
      "a.header_link {\n"
      "  border: 1px solid #999999 ;\n"
      "  padding: 4px ;\n"
      "  background-color: #FFFFCC ;\n"
      "  font-weight: bold ;\n"
      "}\n"
      "\n"
      "a:visited, a:link, a:active{\n"
      "  color: blue ;\n"
      "  text-decoration: underline ;\n"
      "}\n"
      "\n"
      "a:hover {\n"
      "  color:green ;\n"
      "  background-color: #FFFF00 ;\n"
      "  text-decoration: none ;\n"
      "}\n"
      "\n"
      "table.title {\n"
      "  width: 100% ;\n"
      "  border: 1px solid #666666 ;\n"
      "  background-color: yellow ;\n"
      "  font-weight: bold ;\n"
      "  text-align: center ;\n"
      "}\n"
      "\n"
      "table.result {\n"
      "  border: 2px solid #666666 ;\n"
      "  border-collapse: collapse ;\n"
      "}\n"
      "\n"
      "td.result_title {\n"
      "  font-weight: bold ;\n"
      "  text-align: center ;\n"
      "  border-top: 2px solid #666666 ;\n"
      "}\n"
      "\n"
      "tr.result_line {\n"
      "  background-color: #EEEEEE ;\n"
      "  border-top: 1px solid #999999 ;\n"
      "}\n"
      "td.result_line {\n"
      "  border-right: 1px solid #999999 ;\n"
      "}\n"
      "\n"
      "span.error {\n"
      "  font-weight: bold ;\n"
      "  color: red ;\n"
      "}\n"
      "\n"
      "span.warning {\n"
      "  font-weight: bold ;\n"
      "  color: #FF9966 ;\n"
      "}\n"
      "\n"
      "span.success {\n"
      "  font-weight: bold ;\n"
      "  color: green ;\n"
      "}\n"
      "\n"
      "span.list {\n"
      "  display: block ;\n"
      "  line-height: 100% ;\n"
      "}\n"
      "\n"
      "span.galgas_structure {\n"
      "  display: block ;\n"
      "}\n"
      "\n"
      "span.within_galgas_structure {\n"
      "  display: block ;\n"
      "  padding-left: 1em ;\n"
      "  margin-left: 1em ;\n"
      "  border-left: 1px dotted black ;\n"
      "}\n"
      "\n"
      "span.galgas_keyword {\n"
      "  display: block ;\n"
      "  font-weight: bold ;\n"
      "  color: blue ;\n"
      "}\n"
      "\n"
      "span.galgas_terminal {\n"
      "}\n"
      "\n"
      "span.galgas_nonterminal {\n"
      "}\n"
      "</style></head><body><div>\n"
      "<h1>'lexiqueLL1grammar' grammar</h1><p><a class=\"header_link\" href=\"#pure_bnf\">Pure BNF productions</a></p><p><a class=\"header_link\" href=\"#vocabulary\">Vocabulary</a></p><p><a class=\"header_link\" href=\"#identical_productions\">Identical prod"
      "uctions</a></p><p><a class=\"header_link\" href=\"#useful_symbols\">Useful symbols</a></p><p><a class=\"header_link\" href=\"#empty_strings\">Empty string derivations</a></p><p><a class=\"header_link\" href=\"#first_sets\">First sets</a></p><p><a class="
      "\"header_link\" href=\"#follow_by_empty\">Follow by empty</a></p><p><a class=\"header_link\" href=\"#grammar\">Grammar analysis</a></p><table class=\"title\"><tr><td>\n"
      "Original grammar\n"
      "</td></tr></table>\n"
      "<p>The original grammar has 37 productions.</p><table class=\"result\"><tr><td class=\"result_title\" colspan=\"2\">RULES FROM 'lexiqueModelBuilder' component</td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexique_compone"
      "nt_start_symbol&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 73</td><td><code><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_structure\"><"
      "span class=\"galgas_terminal\">$template$; </span></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">end select;</span></span><span class=\"galgas_terminal\">$lexique$; </span>"
      "<span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_terminal\">$:$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">"
      "while </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;extern_routine_or_function_declaration&gt;; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"ga"
      "lgas_nonterminal\">&lt;template_delimitor&gt;; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;template_replacement&gt;; </span></span><span class=\"galgas_keyw"
      "ord\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexical_attribute_declaration&gt;; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas"
      "_nonterminal\">&lt;style_declaration&gt;; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;terminal_declaration&gt;; </span></span><span class=\"galgas_keyword\">"
      "while </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexical_list_declaration&gt;; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\""
      ">$rule$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexical_explicit_rule&gt;; </span></span><span class=\"galgas_keyword\">or </s"
      "pan><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexical_implicit_rule&gt;; </span></span><span class=\"galgas_keyword\">end select;</span></span><span class=\"galgas_terminal\">$;$; </span></span><span class=\"galga"
      "s_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexical_message_declaration&gt;; </span></span><span class=\"galgas_keyword\">end repeat;</span></span><span class=\"galgas_terminal\">$end$; </sp"
      "an><span class=\"galgas_terminal\">$lexique$; </span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;template_delimitor&gt;</code><br>file '/Volumes/dev-svn/galgas/galga"
      "s_sources/lexiqueLL1grammar.gGrammar'<br>line 144</td><td><code><span class=\"galgas_terminal\">$template$; </span><span class=\"galgas_terminal\">$literal_string$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span"
      "><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$feature$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </s"
      "pan><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$,$; </span></span><span class="
      "\"galgas_keyword\">end repeat;</span></span></span><span class=\"galgas_keyword\">end select;</span></span><span class=\"galgas_terminal\">$...$; </span><span class=\"galgas_terminal\">$literal_string$; </span><span class=\"galgas_terminal\">$;$; </sp"
      "an></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;template_replacement&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 168</td><td><code><span class=\"galgas_term"
      "inal\">$replace$; </span><span class=\"galgas_terminal\">$literal_string$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$...$; </span><span "
      "class=\"galgas_terminal\">$literal_string$; </span><span class=\"galgas_terminal\">$:$; </span><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"><span class=\"ga"
      "lgas_terminal\">$->$; </span><span class=\"galgas_terminal\">$literal_string$; </span></span><span class=\"galgas_keyword\">end select;</span></span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"res"
      "ult_line\">rule <code>&lt;lexical_message_declaration&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 189</td><td><code><span class=\"galgas_terminal\">$message$; </span><span class=\"galgas_termina"
      "l\">$identifier$; </span><span class=\"galgas_terminal\">$:$; </span><span class=\"galgas_terminal\">$literal_string$; </span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&l"
      "t;lexical_implicit_rule&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 204</td><td><code><span class=\"galgas_terminal\">$list$; </span><span class=\"galgas_terminal\">$identifier$; </span></code><"
      "/td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_explicit_rule&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 213</td><td><code><span class=\"galgas_nonterminal\">&"
      "lt;lexical_expression&gt;; </span><span class=\"galgas_terminal\">$:$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">while </span><spa"
      "n class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexical_instruction&gt;; </span></span><span class=\"galgas_keyword\">end repeat;</span></span><span class=\"galgas_terminal\">$end$; </span><span class=\"galgas_terminal\">$ru"
      "le$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 229</td><td><code><span class=\"gal"
      "gas_terminal\">$send$; </span><span class=\"galgas_nonterminal\">&lt;lexical_send_instruction&gt;; </span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_send_ins"
      "truction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 239</td><td><code><span class=\"galgas_terminal\">$terminal$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule "
      "<code>&lt;lexical_send_instruction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 247</td><td><code><span class=\"galgas_terminal\">$search$; </span><span class=\"galgas_structure\"><span class=\"ga"
      "lgas_keyword\">repeat </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_terminal\">$in$; </span><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_terminal\">"
      "$default$; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$search$; </span></span><span class=\"galgas_keyword\">end repeat;</span></span><span class=\"galgas_structur"
      "e\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$terminal$; </span></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"><span class=\"galgas_term"
      "inal\">$error$; </span><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">end select;</span></span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</co"
      "de><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 280</td><td><code><span class=\"galgas_terminal\">$repeat$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"w"
      "ithin_galgas_structure\"></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexical_instruction&gt;; </span></span><span class=\"galgas_keyword\">end repeat;</span></span>"
      "<span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;repeat_while_branch&gt;; </span></span><span class=\"galgas_keyword\">while </span><span class"
      "=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">end repeat;</span></span><span class=\"galgas_terminal\">$end$; </span><span class=\"galgas_terminal\">$repeat$; </span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr"
      " class=\"result_line\"><td class=\"result_line\">rule <code>&lt;repeat_while_branch&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 304</td><td><code><span class=\"galgas_terminal\">$while$; </span><s"
      "pan class=\"galgas_nonterminal\">&lt;lexical_expression&gt;; </span><span class=\"galgas_terminal\">$:$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"></span><span class=\"g"
      "algas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexical_instruction&gt;; </span></span><span class=\"galgas_keyword\">end repeat;</span></span></code></td></tr><tr class=\"result_line\"><td "
      "class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 319</td><td><code><span class=\"galgas_terminal\">$select$; </span><span class=\"galgas_struct"
      "ure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$when$; </span><span class=\"galgas_nonterminal\">&lt;lexical_expression&gt;; </span><span class=\"galgas_terminal\">$:$; </span>"
      "<span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexic"
      "al_instruction&gt;; </span></span><span class=\"galgas_keyword\">end repeat;</span></span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">end repeat;</span></span><span"
      " class=\"galgas_terminal\">$default$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\""
      "><span class=\"galgas_nonterminal\">&lt;lexical_instruction&gt;; </span></span><span class=\"galgas_keyword\">end repeat;</span></span><span class=\"galgas_terminal\">$end$; </span><span class=\"galgas_terminal\">$select$; </span><span class=\"galgas"
      "_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 353</td><td><code><span"
      " class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structu"
      "re\"><span class=\"galgas_terminal\">$!$; </span><span class=\"galgas_nonterminal\">&lt;lexical_output_effective_argument&gt;; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_termi"
      "nal\">$!\?$; </span><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">end repeat;</span></span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_structure\""
      "></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$error$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure"
      "\"><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$,$; </span></span><span class=\"galgas_keyword\">end repeat;</span></spa"
      "n></span><span class=\"galgas_keyword\">end select;</span></span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_output_effective_argument&gt;</code><br>file '/V"
      "olumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 394</td><td><code><span class=\"galgas_terminal\">$literal_char$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_output_ef"
      "fective_argument&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 403</td><td><code><span class=\"galgas_terminal\">$unsigned_literal_integer$; </span></code></td></tr><tr class=\"result_line\"><td c"
      "lass=\"result_line\">rule <code>&lt;lexical_output_effective_argument&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 412</td><td><code><span class=\"galgas_terminal\">$*$; </span></code></td></tr><"
      "tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_output_effective_argument&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 422</td><td><code><span class=\"galgas_terminal\">$i"
      "dentifier$; </span><span class=\"galgas_nonterminal\">&lt;function_call_or_attribute&gt;; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;function_call_or_attribute&gt;</code><br>file '/Volumes/dev-svn/ga"
      "lgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 431</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;function_call_or_attribute&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/l"
      "exiqueLL1grammar.gGrammar'<br>line 437</td><td><code><span class=\"galgas_terminal\">$($; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword"
      "\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$!$; </span><span class=\"galgas_nonterminal\">&lt;lexical_output_effective_argument&gt;; </span></span><span class=\"galgas_keyword\">end repeat;</span></span><s"
      "pan class=\"galgas_terminal\">$)$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 453</t"
      "d><td><code><span class=\"galgas_terminal\">$error$; </span><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_in"
      "struction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 463</td><td><code><span class=\"galgas_terminal\">$warning$; </span><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas"
      "_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 472</td><td><code><span"
      " class=\"galgas_terminal\">$drop$; </span><span class=\"galgas_terminal\">$terminal$; </span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code>"
      "<br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 482</td><td><code><span class=\"galgas_terminal\">$tag$; </span><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_terminal\">$;$; </span><"
      "/code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 492</td><td><code><span class=\"galgas_terminal\""
      ">$rewind$; </span><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_terminal\">$send$; </span><span class=\"galgas_terminal\">$terminal$; </span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr class=\"result_l"
      "ine\"><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 505</td><td><code><span class=\"galgas_terminal\">$log$; </span><span class=\"galgas_"
      "terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_expression&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 513</td><td><code><span c"
      "lass=\"galgas_nonterminal\">&lt;lexical_term&gt;; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_term&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>lin"
      "e 519</td><td><code><span class=\"galgas_nonterminal\">&lt;lexical_factor&gt;; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">while </s"
      "pan><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$|$; </span><span class=\"galgas_nonterminal\">&lt;lexical_factor&gt;; </span></span><span class=\"galgas_keyword\">end repeat;</span></span></code></td></tr><tr class=\"resu"
      "lt_line\"><td class=\"result_line\">rule <code>&lt;lexical_factor&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 532</td><td><code><span class=\"galgas_terminal\">$literal_string$; </span></code></t"
      "d></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_factor&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 540</td><td><code><span class=\"galgas_terminal\">$~$; </span><"
      "span class=\"galgas_terminal\">$literal_string$; </span><span class=\"galgas_terminal\">$error$; </span><span class=\"galgas_terminal\">$identifier$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_fa"
      "ctor&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 552</td><td><code><span class=\"galgas_terminal\">$literal_char$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </s"
      "pan><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$->$; </span><span class=\"galgas_terminal\">$literal_char$; </span></span><span class="
      "\"galgas_keyword\">end select;</span></span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_factor&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 567</td><"
      "td><code><span class=\"galgas_terminal\">$identifier$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_list_declaration&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar"
      ".gGrammar'<br>line 574</td><td><code><span class=\"galgas_terminal\">$list$; </span><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structu"
      "re\"></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$!$; </span><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">end repeat;</span></s"
      "pan><span class=\"galgas_terminal\">$error$; </span><span class=\"galgas_terminal\">$message$; </span><span class=\"galgas_terminal\">$literal_string$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span><span class=\"w"
      "ithin_galgas_structure\"><span class=\"galgas_terminal\">$style$; </span><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">"
      "end select;</span></span><span class=\"galgas_terminal\">$:$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"><span class=\"galgas_nonterminal\">&lt;lexical_list_entry&gt;; <"
      "/span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$,$; </span></span><span class=\"galgas_keyword\">end repeat;</span></span><span class=\"galgas_terminal\">$;$; </span></c"
      "ode></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_list_entry&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 610</td><td><code><span class=\"galgas_terminal\">$l"
      "iteral_string$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"><span class=\"galgas_te"
      "rminal\">$feature$; </span><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">end select;</span></span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_st"
      "ructure\"><span class=\"galgas_terminal\">$->$; </span><span class=\"galgas_terminal\">$terminal$; </span></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">end select;</span></"
      "span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;lexical_attribute_declaration&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 631</td><td><code><span class=\""
      "galgas_terminal\">$type_name$; </span><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_terminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;terminal_declaration&gt;</code>"
      "<br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 642</td><td><code><span class=\"galgas_terminal\">$terminal$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"wi"
      "thin_galgas_structure\"></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$!$; </span><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">en"
      "d repeat;</span></span><span class=\"galgas_terminal\">$error$; </span><span class=\"galgas_terminal\">$message$; </span><span class=\"galgas_terminal\">$literal_string$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </"
      "span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$style$; </span><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"></span><span clas"
      "s=\"galgas_keyword\">end select;</span></span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"><"
      "span class=\"galgas_terminal\">$feature$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyw"
      "ord\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$,$; </span></span><span class=\"galgas_keyword\">end repeat;</span></span></span><span class=\"galgas_keyword\">end select;</span></span><span class=\"galgas_t"
      "erminal\">$;$; </span></code></td></tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;style_declaration&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 681</td><td><code><span cla"
      "ss=\"galgas_terminal\">$style$; </span><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_terminal\">$->$; </span><span class=\"galgas_terminal\">$literal_string$; </span><span class=\"galgas_terminal\">$;$; </span></code></td><"
      "/tr><tr class=\"result_line\"><td class=\"result_line\">rule <code>&lt;extern_routine_or_function_declaration&gt;</code><br>file '/Volumes/dev-svn/galgas/galgas_sources/lexiqueLL1grammar.gGrammar'<br>line 692</td><td><code><span class=\"galgas_te"
      "rminal\">$extern$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$routine$; </span><span class=\"galgas_terminal\">$identifier$; </span><span"
      " class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_structure\"><span class=\"gal"
      "gas_keyword\">select </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$\?!$; </span></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$\?$; </span></span>"
      "<span class=\"galgas_keyword\">end select;</span></span><span class=\"galgas_terminal\">$type_name$; </span><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">end repeat;</span></span><span class=\"galgas_struc"
      "ture\"><span class=\"galgas_keyword\">select </span><span class=\"within_galgas_structure\"></span><span class=\"galgas_keyword\">or </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$error$; </span><span class=\"galgas_stru"
      "cture\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$identifier$; </span></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"ga"
      "lgas_terminal\">$,$; </span></span><span class=\"galgas_keyword\">end repeat;</span></span></span><span class=\"galgas_keyword\">end select;</span></span><span class=\"galgas_terminal\">$;$; </span></span><span class=\"galgas_keyword\">or </span><spa"
      "n class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$function$; </span><span class=\"galgas_terminal\">$identifier$; </span><span class=\"galgas_structure\"><span class=\"galgas_keyword\">repeat </span><span class=\"within_galgas_struct"
      "ure\"></span><span class=\"galgas_keyword\">while </span><span class=\"within_galgas_structure\"><span class=\"galgas_terminal\">$\?$; </span><span class=\"galgas_terminal\">$type_name$; </span><span class=\"galgas_terminal\">$identifier$; </span></span"
      "><span class=\"galgas_keyword\">end repeat;</span></span><span class=\"galgas_terminal\">$->$; </span><span class=\"galgas_terminal\">$type_name$; </span><span class=\"galgas_terminal\">$;$; </span></span><span class=\"galgas_keyword\">end select;</sp"
      "an></span></code></td></tr></table><p></p><table class=\"title\"><tr><td>\n"
      "  Pure BNF productions list\n"
      "</td></tr></table>\n"
      "<p><a name=\"pure_bnf\"></a>Listing of the 119 BNF productions :</p>\n"
      "<table class=\"result\"><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_0\">0</a></td><td class=\"result_line\">rule <code>&lt;lexique_component_start_symbol&gt;</code><br>file 'lexiqueModelBuilder'<br>line 73</td><td><code>&lt"
      ";select_lexiqueModelBuilder_0&gt;<br>$lexique$<br>$identifier$<br>$:$<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;<br>$end$<br>$lexique$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_1\">1</a></td>"
      "<td class=\"result_line\">rule <code>&lt;template_delimitor&gt;</code><br>file 'lexiqueModelBuilder'<br>line 144</td><td><code>$template$<br>$literal_string$<br>&lt;select_lexiqueModelBuilder_3&gt;<br>$...$<br>$literal_string$<br>$;$</code></t"
      "d></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_2\">2</a></td><td class=\"result_line\">rule <code>&lt;template_replacement&gt;</code><br>file 'lexiqueModelBuilder'<br>line 168</td><td><code>$replace$<br>$literal_string"
      "$<br>&lt;select_lexiqueModelBuilder_5&gt;<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_3\">3</a></td><td class=\"result_line\">rule <code>&lt;lexical_message_declaration&gt;</code><br>file 'lexiqueMod"
      "elBuilder'<br>line 189</td><td><code>$message$<br>$identifier$<br>$:$<br>$literal_string$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_4\">4</a></td><td class=\"result_line\">rule <code>&lt;lexical_im"
      "plicit_rule&gt;</code><br>file 'lexiqueModelBuilder'<br>line 204</td><td><code>$list$<br>$identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_5\">5</a></td><td class=\"result_line\">rule <code>&lt;lexic"
      "al_explicit_rule&gt;</code><br>file 'lexiqueModelBuilder'<br>line 213</td><td><code>&lt;lexical_expression&gt;<br>$:$<br>&lt;select_repeat_lexiqueModelBuilder_6&gt;<br>$end$<br>$rule$</code></td></tr><tr class=\"result_line\"><td class=\"result"
      "_line\"><a name=\"pure_bnf_6\">6</a></td><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file 'lexiqueModelBuilder'<br>line 229</td><td><code>$send$<br>&lt;lexical_send_instruction&gt;<br>$;$</code></td></tr><tr class=\""
      "result_line\"><td class=\"result_line\"><a name=\"pure_bnf_7\">7</a></td><td class=\"result_line\">rule <code>&lt;lexical_send_instruction&gt;</code><br>file 'lexiqueModelBuilder'<br>line 239</td><td><code>$terminal$</code></td></tr><tr class=\"resu"
      "lt_line\"><td class=\"result_line\"><a name=\"pure_bnf_8\">8</a></td><td class=\"result_line\">rule <code>&lt;lexical_send_instruction&gt;</code><br>file 'lexiqueModelBuilder'<br>line 247</td><td><code>$search$<br>$identifier$<br>$in$<br>$identifie"
      "r$<br>$default$<br>&lt;select_repeat_lexiqueModelBuilder_7&gt;<br>&lt;select_lexiqueModelBuilder_8&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_9\">9</a></td><td class=\"result_line\">rule <code>&lt;lexi"
      "cal_instruction&gt;</code><br>file 'lexiqueModelBuilder'<br>line 280</td><td><code>$repeat$<br>&lt;select_repeat_lexiqueModelBuilder_9&gt;<br>&lt;repeat_while_branch&gt;<br>&lt;select_repeat_lexiqueModelBuilder_10&gt;<br>$end$<br>$repeat$<br"
      ">$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_10\">10</a></td><td class=\"result_line\">rule <code>&lt;repeat_while_branch&gt;</code><br>file 'lexiqueModelBuilder'<br>line 304</td><td><code>$while$<br>&l"
      "t;lexical_expression&gt;<br>$:$<br>&lt;select_repeat_lexiqueModelBuilder_11&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_11\">11</a></td><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</"
      "code><br>file 'lexiqueModelBuilder'<br>line 319</td><td><code>$select$<br>$when$<br>&lt;lexical_expression&gt;<br>$:$<br>&lt;select_repeat_lexiqueModelBuilder_13&gt;<br>&lt;select_repeat_lexiqueModelBuilder_12&gt;<br>$default$<br>&lt;select_"
      "repeat_lexiqueModelBuilder_14&gt;<br>$end$<br>$select$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_12\">12</a></td><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file 'lex"
      "iqueModelBuilder'<br>line 353</td><td><code>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_15&gt;<br>&lt;select_lexiqueModelBuilder_16&gt;<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_13\">13"
      "</a></td><td class=\"result_line\">rule <code>&lt;lexical_output_effective_argument&gt;</code><br>file 'lexiqueModelBuilder'<br>line 394</td><td><code>$literal_char$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure"
      "_bnf_14\">14</a></td><td class=\"result_line\">rule <code>&lt;lexical_output_effective_argument&gt;</code><br>file 'lexiqueModelBuilder'<br>line 403</td><td><code>$unsigned_literal_integer$</code></td></tr><tr class=\"result_line\"><td class=\"res"
      "ult_line\"><a name=\"pure_bnf_15\">15</a></td><td class=\"result_line\">rule <code>&lt;lexical_output_effective_argument&gt;</code><br>file 'lexiqueModelBuilder'<br>line 412</td><td><code>$*$</code></td></tr><tr class=\"result_line\"><td class=\"res"
      "ult_line\"><a name=\"pure_bnf_16\">16</a></td><td class=\"result_line\">rule <code>&lt;lexical_output_effective_argument&gt;</code><br>file 'lexiqueModelBuilder'<br>line 422</td><td><code>$identifier$<br>&lt;function_call_or_attribute&gt;</code><"
      "/td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_17\">17</a></td><td class=\"result_line\">rule <code>&lt;function_call_or_attribute&gt;</code><br>file 'lexiqueModelBuilder'<br>line 431</td><td><code></code></td></tr><"
      "tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_18\">18</a></td><td class=\"result_line\">rule <code>&lt;function_call_or_attribute&gt;</code><br>file 'lexiqueModelBuilder'<br>line 437</td><td><code>$($<br>&lt;select_repeat_lex"
      "iqueModelBuilder_18&gt;<br>$)$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_19\">19</a></td><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file 'lexiqueModelBuilder'<br>line 453</"
      "td><td><code>$error$<br>$identifier$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_20\">20</a></td><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file 'lexiqueModelBuilder'<"
      "br>line 463</td><td><code>$warning$<br>$identifier$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_21\">21</a></td><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>file 'lexiqu"
      "eModelBuilder'<br>line 472</td><td><code>$drop$<br>$terminal$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_22\">22</a></td><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</code><br>fi"
      "le 'lexiqueModelBuilder'<br>line 482</td><td><code>$tag$<br>$identifier$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_23\">23</a></td><td class=\"result_line\">rule <code>&lt;lexical_instruction&gt;</"
      "code><br>file 'lexiqueModelBuilder'<br>line 492</td><td><code>$rewind$<br>$identifier$<br>$send$<br>$terminal$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_24\">24</a></td><td class=\"result_line\">ru"
      "le <code>&lt;lexical_instruction&gt;</code><br>file 'lexiqueModelBuilder'<br>line 505</td><td><code>$log$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_25\">25</a></td><td class=\"result_line\">rule <c"
      "ode>&lt;lexical_expression&gt;</code><br>file 'lexiqueModelBuilder'<br>line 513</td><td><code>&lt;lexical_term&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_26\">26</a></td><td class=\"result_line\">rule "
      "<code>&lt;lexical_term&gt;</code><br>file 'lexiqueModelBuilder'<br>line 519</td><td><code>&lt;lexical_factor&gt;<br>&lt;select_repeat_lexiqueModelBuilder_19&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bn"
      "f_27\">27</a></td><td class=\"result_line\">rule <code>&lt;lexical_factor&gt;</code><br>file 'lexiqueModelBuilder'<br>line 532</td><td><code>$literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_28\">"
      "28</a></td><td class=\"result_line\">rule <code>&lt;lexical_factor&gt;</code><br>file 'lexiqueModelBuilder'<br>line 540</td><td><code>$~$<br>$literal_string$<br>$error$<br>$identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_"
      "line\"><a name=\"pure_bnf_29\">29</a></td><td class=\"result_line\">rule <code>&lt;lexical_factor&gt;</code><br>file 'lexiqueModelBuilder'<br>line 552</td><td><code>$literal_char$<br>&lt;select_lexiqueModelBuilder_20&gt;</code></td></tr><tr class"
      "=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_30\">30</a></td><td class=\"result_line\">rule <code>&lt;lexical_factor&gt;</code><br>file 'lexiqueModelBuilder'<br>line 567</td><td><code>$identifier$</code></td></tr><tr class=\"result_l"
      "ine\"><td class=\"result_line\"><a name=\"pure_bnf_31\">31</a></td><td class=\"result_line\">rule <code>&lt;lexical_list_declaration&gt;</code><br>file 'lexiqueModelBuilder'<br>line 574</td><td><code>$list$<br>$identifier$<br>&lt;select_repeat_lexi"
      "queModelBuilder_21&gt;<br>$error$<br>$message$<br>$literal_string$<br>&lt;select_lexiqueModelBuilder_22&gt;<br>$:$<br>&lt;lexical_list_entry&gt;<br>&lt;select_repeat_lexiqueModelBuilder_23&gt;<br>$;$</code></td></tr><tr class=\"result_line\"><"
      "td class=\"result_line\"><a name=\"pure_bnf_32\">32</a></td><td class=\"result_line\">rule <code>&lt;lexical_list_entry&gt;</code><br>file 'lexiqueModelBuilder'<br>line 610</td><td><code>$literal_string$<br>&lt;select_lexiqueModelBuilder_24&gt;<br"
      ">&lt;select_lexiqueModelBuilder_25&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_33\">33</a></td><td class=\"result_line\">rule <code>&lt;lexical_attribute_declaration&gt;</code><br>file 'lexiqueModelBuil"
      "der'<br>line 631</td><td><code>$type_name$<br>$identifier$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_34\">34</a></td><td class=\"result_line\">rule <code>&lt;terminal_declaration&gt;</code><br>file"
      " 'lexiqueModelBuilder'<br>line 642</td><td><code>$terminal$<br>&lt;select_repeat_lexiqueModelBuilder_26&gt;<br>$error$<br>$message$<br>$literal_string$<br>&lt;select_lexiqueModelBuilder_27&gt;<br>&lt;select_lexiqueModelBuilder_28&gt;<br>$;$<"
      "/code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_35\">35</a></td><td class=\"result_line\">rule <code>&lt;style_declaration&gt;</code><br>file 'lexiqueModelBuilder'<br>line 681</td><td><code>$style$<br>$identifi"
      "er$<br>$->$<br>$literal_string$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_36\">36</a></td><td class=\"result_line\">rule <code>&lt;extern_routine_or_function_declaration&gt;</code><br>file 'lexique"
      "ModelBuilder'<br>line 692</td><td><code>$extern$<br>&lt;select_lexiqueModelBuilder_30&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_37\">37</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueM"
      "odelBuilder_0&gt;</code><br>file 'lexiqueModelBuilder'<br>line 87</td><td><code>$template$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_38\">38</a></td><td class=\"result_line\">rule <code>&lt;select_lexique"
      "ModelBuilder_0&gt;</code><br>file 'lexiqueModelBuilder'<br>line 87</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_39\">39</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueMo"
      "delBuilder_1&gt;</code><br>file 'lexiqueModelBuilder'<br>line 98</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_40\">40</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueMode"
      "lBuilder_1&gt;</code><br>file 'lexiqueModelBuilder'<br>line 98</td><td><code>&lt;extern_routine_or_function_declaration&gt;<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a nam"
      "e=\"pure_bnf_41\">41</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code><br>file 'lexiqueModelBuilder'<br>line 98</td><td><code>&lt;template_delimitor&gt;<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;"
      "</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_42\">42</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code><br>file 'lexiqueModelBuilder'<br>line 98</td><td><code>&l"
      "t;template_replacement&gt;<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_43\">43</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuild"
      "er_1&gt;</code><br>file 'lexiqueModelBuilder'<br>line 98</td><td><code>&lt;lexical_attribute_declaration&gt;<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_44\""
      ">44</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code><br>file 'lexiqueModelBuilder'<br>line 98</td><td><code>&lt;style_declaration&gt;<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr"
      "><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_45\">45</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code><br>file 'lexiqueModelBuilder'<br>line 98</td><td><code>&lt;terminal_decla"
      "ration&gt;<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_46\">46</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code><"
      "br>file 'lexiqueModelBuilder'<br>line 98</td><td><code>&lt;lexical_list_declaration&gt;<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_47\">47</a></td><td class"
      "=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code><br>file 'lexiqueModelBuilder'<br>line 98</td><td><code>$rule$<br>&lt;select_lexiqueModelBuilder_2&gt;<br>$;$<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></"
      "td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_48\">48</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code><br>file 'lexiqueModelBuilder'<br>line 98</td><td><code>&lt;lexical"
      "_message_declaration&gt;<br>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_49\">49</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_2&gt;<"
      "/code><br>file 'lexiqueModelBuilder'<br>line 115</td><td><code>&lt;lexical_explicit_rule&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_50\">50</a></td><td class=\"result_line\">rule <code>&lt;select_lexiq"
      "ueModelBuilder_2&gt;</code><br>file 'lexiqueModelBuilder'<br>line 115</td><td><code>&lt;lexical_implicit_rule&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_51\">51</a></td><td class=\"result_line\">rule <"
      "code>&lt;select_lexiqueModelBuilder_3&gt;</code><br>file 'lexiqueModelBuilder'<br>line 150</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_52\">52</a></td><td class=\"result_line\">rule <code>&lt"
      ";select_lexiqueModelBuilder_3&gt;</code><br>file 'lexiqueModelBuilder'<br>line 150</td><td><code>$feature$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_4&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name"
      "=\"pure_bnf_53\">53</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_4&gt;</code><br>file 'lexiqueModelBuilder'<br>line 153</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name="
      "\"pure_bnf_54\">54</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_4&gt;</code><br>file 'lexiqueModelBuilder'<br>line 153</td><td><code>$,$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_4&gt;</code><"
      "/td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_55\">55</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_5&gt;</code><br>file 'lexiqueModelBuilder'<br>line 174</td><td><code>$...$<br>$litera"
      "l_string$<br>$:$<br>$identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_56\">56</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_5&gt;</code><br>file 'lexiqueModelBuilder'<br"
      ">line 174</td><td><code>$->$<br>$literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_57\">57</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_6&gt;</code><br>file '"
      "lexiqueModelBuilder'<br>line 219</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_58\">58</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_6&gt;</code><br>file 'l"
      "exiqueModelBuilder'<br>line 219</td><td><code>&lt;lexical_instruction&gt;<br>&lt;select_repeat_lexiqueModelBuilder_6&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_59\">59</a></td><td class=\"result_line\""
      ">rule <code>&lt;select_repeat_lexiqueModelBuilder_7&gt;</code><br>file 'lexiqueModelBuilder'<br>line 251</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_60\">60</a></td><td class=\"result_line\">"
      "rule <code>&lt;select_repeat_lexiqueModelBuilder_7&gt;</code><br>file 'lexiqueModelBuilder'<br>line 251</td><td><code>$search$<br>$identifier$<br>$in$<br>$identifier$<br>$default$<br>&lt;select_repeat_lexiqueModelBuilder_7&gt;</code></td></t"
      "r><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_61\">61</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_8&gt;</code><br>file 'lexiqueModelBuilder'<br>line 263</td><td><code>$terminal$</code></td><"
      "/tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_62\">62</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_8&gt;</code><br>file 'lexiqueModelBuilder'<br>line 263</td><td><code>$error$<br>$identifie"
      "r$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_63\">63</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_9&gt;</code><br>file 'lexiqueModelBuilder'<br>line 284</td><td><code"
      "></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_64\">64</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_9&gt;</code><br>file 'lexiqueModelBuilder'<br>line 284</td><td><code>"
      "&lt;lexical_instruction&gt;<br>&lt;select_repeat_lexiqueModelBuilder_9&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_65\">65</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuil"
      "der_10&gt;</code><br>file 'lexiqueModelBuilder'<br>line 289</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_66\">66</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuil"
      "der_10&gt;</code><br>file 'lexiqueModelBuilder'<br>line 289</td><td><code>&lt;repeat_while_branch&gt;<br>&lt;select_repeat_lexiqueModelBuilder_10&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_67\">67</a"
      "></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_11&gt;</code><br>file 'lexiqueModelBuilder'<br>line 311</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_68\">68</a"
      "></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_11&gt;</code><br>file 'lexiqueModelBuilder'<br>line 311</td><td><code>&lt;lexical_instruction&gt;<br>&lt;select_repeat_lexiqueModelBuilder_11&gt;</code></td></tr>"
      "<tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_69\">69</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_12&gt;</code><br>file 'lexiqueModelBuilder'<br>line 323</td><td><code></code></td></tr>"
      "<tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_70\">70</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_12&gt;</code><br>file 'lexiqueModelBuilder'<br>line 323</td><td><code>$when$<br>&lt;lex"
      "ical_expression&gt;<br>$:$<br>&lt;select_repeat_lexiqueModelBuilder_13&gt;<br>&lt;select_repeat_lexiqueModelBuilder_12&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_71\">71</a></td><td class=\"result_lin"
      "e\">rule <code>&lt;select_repeat_lexiqueModelBuilder_13&gt;</code><br>file 'lexiqueModelBuilder'<br>line 329</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_72\">72</a></td><td class=\"result_lin"
      "e\">rule <code>&lt;select_repeat_lexiqueModelBuilder_13&gt;</code><br>file 'lexiqueModelBuilder'<br>line 329</td><td><code>&lt;lexical_instruction&gt;<br>&lt;select_repeat_lexiqueModelBuilder_13&gt;</code></td></tr><tr class=\"result_line\"><td"
      " class=\"result_line\"><a name=\"pure_bnf_73\">73</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_14&gt;</code><br>file 'lexiqueModelBuilder'<br>line 338</td><td><code></code></td></tr><tr class=\"result_line\"><td"
      " class=\"result_line\"><a name=\"pure_bnf_74\">74</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_14&gt;</code><br>file 'lexiqueModelBuilder'<br>line 338</td><td><code>&lt;lexical_instruction&gt;<br>&lt;select_re"
      "peat_lexiqueModelBuilder_14&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_75\">75</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_15&gt;</code><br>file 'lexiqueModelBuil"
      "der'<br>line 358</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_76\">76</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_15&gt;</code><br>file 'lexiqueModelBuil"
      "der'<br>line 358</td><td><code>$!$<br>&lt;lexical_output_effective_argument&gt;<br>&lt;select_repeat_lexiqueModelBuilder_15&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_77\">77</a></td><td class=\"resul"
      "t_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_15&gt;</code><br>file 'lexiqueModelBuilder'<br>line 358</td><td><code>$!\?$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_15&gt;</code></td></tr><tr class=\"result_line\"><td c"
      "lass=\"result_line\"><a name=\"pure_bnf_78\">78</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_16&gt;</code><br>file 'lexiqueModelBuilder'<br>line 373</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"r"
      "esult_line\"><a name=\"pure_bnf_79\">79</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_16&gt;</code><br>file 'lexiqueModelBuilder'<br>line 373</td><td><code>$error$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBui"
      "lder_17&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_80\">80</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_17&gt;</code><br>file 'lexiqueModelBuilder'<br>line 376</td"
      "><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_81\">81</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_17&gt;</code><br>file 'lexiqueModelBuilder'<br>line 376</td"
      "><td><code>$,$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_17&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_82\">82</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModel"
      "Builder_18&gt;</code><br>file 'lexiqueModelBuilder'<br>line 441</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_83\">83</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModel"
      "Builder_18&gt;</code><br>file 'lexiqueModelBuilder'<br>line 441</td><td><code>$!$<br>&lt;lexical_output_effective_argument&gt;<br>&lt;select_repeat_lexiqueModelBuilder_18&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a"
      " name=\"pure_bnf_84\">84</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_19&gt;</code><br>file 'lexiqueModelBuilder'<br>line 522</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a"
      " name=\"pure_bnf_85\">85</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_19&gt;</code><br>file 'lexiqueModelBuilder'<br>line 522</td><td><code>$|$<br>&lt;lexical_factor&gt;<br>&lt;select_repeat_lexiqueModelBuil"
      "der_19&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_86\">86</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_20&gt;</code><br>file 'lexiqueModelBuilder'<br>line 556</td><td><co"
      "de></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_87\">87</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_20&gt;</code><br>file 'lexiqueModelBuilder'<br>line 556</td><td><code>$->$"
      "<br>$literal_char$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_88\">88</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_21&gt;</code><br>file 'lexiqueModelBuilder'<br>line "
      "580</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_89\">89</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_21&gt;</code><br>file 'lexiqueModelBuilder'<br>line "
      "580</td><td><code>$!$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_21&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_90\">90</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModel"
      "Builder_22&gt;</code><br>file 'lexiqueModelBuilder'<br>line 592</td><td><code>$style$<br>$identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_91\">91</a></td><td class=\"result_line\">rule <code>&lt;sel"
      "ect_lexiqueModelBuilder_22&gt;</code><br>file 'lexiqueModelBuilder'<br>line 592</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_92\">92</a></td><td class=\"result_line\">rule <code>&lt;select_rep"
      "eat_lexiqueModelBuilder_23&gt;</code><br>file 'lexiqueModelBuilder'<br>line 600</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_93\">93</a></td><td class=\"result_line\">rule <code>&lt;select_rep"
      "eat_lexiqueModelBuilder_23&gt;</code><br>file 'lexiqueModelBuilder'<br>line 600</td><td><code>$,$<br>&lt;lexical_list_entry&gt;<br>&lt;select_repeat_lexiqueModelBuilder_23&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><"
      "a name=\"pure_bnf_94\">94</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_24&gt;</code><br>file 'lexiqueModelBuilder'<br>line 614</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name="
      "\"pure_bnf_95\">95</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_24&gt;</code><br>file 'lexiqueModelBuilder'<br>line 614</td><td><code>$feature$<br>$identifier$</code></td></tr><tr class=\"result_line\"><td class=\"res"
      "ult_line\"><a name=\"pure_bnf_96\">96</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_25&gt;</code><br>file 'lexiqueModelBuilder'<br>line 621</td><td><code>$->$<br>$terminal$</code></td></tr><tr class=\"result_line\"><td"
      " class=\"result_line\"><a name=\"pure_bnf_97\">97</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_25&gt;</code><br>file 'lexiqueModelBuilder'<br>line 621</td><td><code></code></td></tr><tr class=\"result_line\"><td class="
      "\"result_line\"><a name=\"pure_bnf_98\">98</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_26&gt;</code><br>file 'lexiqueModelBuilder'<br>line 647</td><td><code></code></td></tr><tr class=\"result_line\"><td class="
      "\"result_line\"><a name=\"pure_bnf_99\">99</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_26&gt;</code><br>file 'lexiqueModelBuilder'<br>line 647</td><td><code>$!$<br>$identifier$<br>&lt;select_repeat_lexiqueMod"
      "elBuilder_26&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_100\">100</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_27&gt;</code><br>file 'lexiqueModelBuilder'<br>line 659</td"
      "><td><code>$style$<br>$identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_101\">101</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_27&gt;</code><br>file 'lexiqueModelBuilde"
      "r'<br>line 659</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_102\">102</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_28&gt;</code><br>file 'lexiqueModelBuilder'<br"
      ">line 666</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_103\">103</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_28&gt;</code><br>file 'lexiqueModelBuilder'<br>line"
      " 666</td><td><code>$feature$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_29&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_104\">104</a></td><td class=\"result_line\">rule <code>&lt;select_rep"
      "eat_lexiqueModelBuilder_29&gt;</code><br>file 'lexiqueModelBuilder'<br>line 669</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_105\">105</a></td><td class=\"result_line\">rule <code>&lt;select_r"
      "epeat_lexiqueModelBuilder_29&gt;</code><br>file 'lexiqueModelBuilder'<br>line 669</td><td><code>$,$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_29&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure"
      "_bnf_106\">106</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_30&gt;</code><br>file 'lexiqueModelBuilder'<br>line 698</td><td><code>$routine$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_31&gt;<br>&lt;se"
      "lect_lexiqueModelBuilder_33&gt;<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_107\">107</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_30&gt;</code><br>file 'lexiqueModelBu"
      "ilder'<br>line 698</td><td><code>$function$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_35&gt;<br>$->$<br>$type_name$<br>$;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_108\">108</a></td><td "
      "class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_31&gt;</code><br>file 'lexiqueModelBuilder'<br>line 702</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_109\">109</a></td><t"
      "d class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_31&gt;</code><br>file 'lexiqueModelBuilder'<br>line 702</td><td><code>&lt;select_lexiqueModelBuilder_32&gt;<br>$type_name$<br>$identifier$<br>&lt;select_repeat_lexiqueMod"
      "elBuilder_31&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_110\">110</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_32&gt;</code><br>file 'lexiqueModelBuilder'<br>line 705</td"
      "><td><code>$\?!$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_111\">111</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_32&gt;</code><br>file 'lexiqueModelBuilder'<br>line 705</td>"
      "<td><code>$\?$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_112\">112</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_33&gt;</code><br>file 'lexiqueModelBuilder'<br>line 717</td><t"
      "d><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_113\">113</a></td><td class=\"result_line\">rule <code>&lt;select_lexiqueModelBuilder_33&gt;</code><br>file 'lexiqueModelBuilder'<br>line 717</td><td><co"
      "de>$error$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_34&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_114\">114</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBu"
      "ilder_34&gt;</code><br>file 'lexiqueModelBuilder'<br>line 720</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_115\">115</a></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModel"
      "Builder_34&gt;</code><br>file 'lexiqueModelBuilder'<br>line 720</td><td><code>$,$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_34&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_116\">116</a><"
      "/td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_35&gt;</code><br>file 'lexiqueModelBuilder'<br>line 733</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_117\">117</a"
      "></td><td class=\"result_line\">rule <code>&lt;select_repeat_lexiqueModelBuilder_35&gt;</code><br>file 'lexiqueModelBuilder'<br>line 733</td><td><code>$\?$<br>$type_name$<br>$identifier$<br>&lt;select_repeat_lexiqueModelBuilder_35&gt;</code></t"
      "d></tr><tr class=\"result_line\"><td class=\"result_line\"><a name=\"pure_bnf_118\">118</a></td><td class=\"result_line\">rule <code>&lt;&gt;</code><br>(added production)</td><td><code>&lt;lexique_component_start_symbol&gt;</code></td></tr></table><"
      "p><a name=\"vocabulary\"></a></p><table class=\"result\"><tr><td class=\"result_title\"colspan=\"2\">Vocabulary</td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">0</td><td><code>$identifier$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">1</td><td><code>$abstract$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">2</td><td><code>$after$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">3</td><td><code>$before$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">4</td><td><code>$between$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">5</td><td><code>$block$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">6</td><td><code>$cast$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">7</td><td><code>$class$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">8</td><td><code>$compile$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">9</td><td><code>$const$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">10</td><td><code>$constructor$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">11</td><td><code>$default$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">12</td><td><code>$description$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">13</td><td><code>$dependency$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">14</td><td><code>$do$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">15</td><td><code>$domain$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">16</td><td><code>$drop$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">17</td><td><code>$else$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">18</td><td><code>$elsif$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">19</td><td><code>$end$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">20</td><td><code>$enum$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">21</td><td><code>$error$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">22</td><td><code>$extends$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">23</td><td><code>$extern$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">24</td><td><code>$extract$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">25</td><td><code>$false$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">26</td><td><code>$feature$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">27</td><td><code>$filewrapper$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">28</td><td><code>$foreach$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">29</td><td><code>$function$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">30</td><td><code>$grammar$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">31</td><td><code>$gui$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">32</td><td><code>$here$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">33</td><td><code>$if$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">34</td><td><code>$import$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">35</td><td><code>$import__$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">36</td><td><code>$in$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">37</td><td><code>$insert$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">38</td><td><code>$label$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">39</td><td><code>$lazy$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">40</td><td><code>$lexique$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">41</td><td><code>$list$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">42</td><td><code>$listmap$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">43</td><td><code>$log$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">44</td><td><code>$loop$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">45</td><td><code>$map$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">46</td><td><code>$mapindex$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">47</td><td><code>$match$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">48</td><td><code>$message$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">49</td><td><code>$method$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">50</td><td><code>$mod$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">51</td><td><code>$modifier$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">52</td><td><code>$nonterminal$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">53</td><td><code>$not$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">54</td><td><code>$on$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">55</td><td><code>$operator$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">56</td><td><code>$option$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">57</td><td><code>$or$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">58</td><td><code>$override$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">59</td><td><code>$parse$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">60</td><td><code>$project$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">61</td><td><code>$program$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">62</td><td><code>$reader$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">63</td><td><code>$remove$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">64</td><td><code>$replace$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">65</td><td><code>$repeat$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">66</td><td><code>$rewind$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">67</td><td><code>$root$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">68</td><td><code>$routine$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">69</td><td><code>$rule$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">70</td><td><code>$search$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">71</td><td><code>$select$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">72</td><td><code>$self$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">73</td><td><code>$semantics$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">74</td><td><code>$send$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">75</td><td><code>$sortedlist$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">76</td><td><code>$state$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">77</td><td><code>$struct$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">78</td><td><code>$style$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">79</td><td><code>$switch$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">80</td><td><code>$syntax$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">81</td><td><code>$tag$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">82</td><td><code>$template$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">83</td><td><code>$then$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">84</td><td><code>$true$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">85</td><td><code>$unused$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">86</td><td><code>$warning$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">87</td><td><code>$when$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">88</td><td><code>$while$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">89</td><td><code>$with$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">90</td><td><code>$literal_double$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">91</td><td><code>$unsigned_literal_integer$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">92</td><td><code>$signed_literal_integer$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">93</td><td><code>$unsigned_literal_integer64$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">94</td><td><code>$signed_literal_integer64$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">95</td><td><code>$.$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">96</td><td><code>$.=$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">97</td><td><code>$...$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">98</td><td><code>$type_name$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">99</td><td><code>$literal_char$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">100</td><td><code>$terminal$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">101</td><td><code>$*$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">102</td><td><code>$|$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">103</td><td><code>$,$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">104</td><td><code>$+$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">105</td><td><code>$--$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">106</td><td><code>$::$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">107</td><td><code>$>$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">108</td><td><code>$;$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">109</td><td><code>$:$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">110</td><td><code>$-$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">111</td><td><code>$($</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">112</td><td><code>$)$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">113</td><td><code>$->$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">114</td><td><code>$\?$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">115</td><td><code>$==$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">116</td><td><code>$\?\?$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">117</td><td><code>$!$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">118</td><td><code>$:=$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">119</td><td><code>$++$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">120</td><td><code>$[$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">121</td><td><code>$]$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">122</td><td><code>$+=$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">123</td><td><code>$\?!$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">124</td><td><code>$!\?$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">125</td><td><code>$/$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">126</td><td><code>$!=$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">127</td><td><code>$>=$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">128</td><td><code>$&$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">129</td><td><code>${$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">130</td><td><code>$}$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">131</td><td><code>$-=$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">132</td><td><code>$^$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">133</td><td><code>$>>$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">134</td><td><code>$~$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">135</td><td><code>$<-$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">136</td><td><code>$<$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">137</td><td><code>$<->$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">138</td><td><code>$<=$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">139</td><td><code>$<<$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">140</td><td><code>$non_terminal_symbol$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">141</td><td><code>$literal_string$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">142</td><td><code>$comment$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">143</td><td><code>$$</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">144</td><td><code>&lt;extern_routine_or_function_declaration&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">145</td><td><code>&lt;function_call_or_attribute&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">146</td><td><code>&lt;lexical_attribute_declaration&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">147</td><td><code>&lt;lexical_explicit_rule&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">148</td><td><code>&lt;lexical_expression&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">149</td><td><code>&lt;lexical_factor&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">150</td><td><code>&lt;lexical_implicit_rule&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">151</td><td><code>&lt;lexical_instruction&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">152</td><td><code>&lt;lexical_list_declaration&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">153</td><td><code>&lt;lexical_list_entry&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">154</td><td><code>&lt;lexical_message_declaration&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">155</td><td><code>&lt;lexical_output_effective_argument&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">156</td><td><code>&lt;lexical_send_instruction&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">157</td><td><code>&lt;lexical_term&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">158</td><td><code>&lt;lexique_component_start_symbol&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">159</td><td><code>&lt;repeat_while_branch&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">160</td><td><code>&lt;style_declaration&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">161</td><td><code>&lt;template_delimitor&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">162</td><td><code>&lt;template_replacement&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">163</td><td><code>&lt;terminal_declaration&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">164</td><td><code>&lt;select_lexiqueModelBuilder_0&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">165</td><td><code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">166</td><td><code>&lt;select_lexiqueModelBuilder_2&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">167</td><td><code>&lt;select_lexiqueModelBuilder_3&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">168</td><td><code>&lt;select_repeat_lexiqueModelBuilder_4&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">169</td><td><code>&lt;select_lexiqueModelBuilder_5&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">170</td><td><code>&lt;select_repeat_lexiqueModelBuilder_6&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">171</td><td><code>&lt;select_repeat_lexiqueModelBuilder_7&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">172</td><td><code>&lt;select_lexiqueModelBuilder_8&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">173</td><td><code>&lt;select_repeat_lexiqueModelBuilder_9&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">174</td><td><code>&lt;select_repeat_lexiqueModelBuilder_10&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">175</td><td><code>&lt;select_repeat_lexiqueModelBuilder_11&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">176</td><td><code>&lt;select_repeat_lexiqueModelBuilder_12&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">177</td><td><code>&lt;select_repeat_lexiqueModelBuilder_13&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">178</td><td><code>&lt;select_repeat_lexiqueModelBuilder_14&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">179</td><td><code>&lt;select_repeat_lexiqueModelBuilder_15&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">180</td><td><code>&lt;select_lexiqueModelBuilder_16&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">181</td><td><code>&lt;select_repeat_lexiqueModelBuilder_17&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">182</td><td><code>&lt;select_repeat_lexiqueModelBuilder_18&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">183</td><td><code>&lt;select_repeat_lexiqueModelBuilder_19&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">184</td><td><code>&lt;select_lexiqueModelBuilder_20&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">185</td><td><code>&lt;select_repeat_lexiqueModelBuilder_21&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">186</td><td><code>&lt;select_lexiqueModelBuilder_22&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">187</td><td><code>&lt;select_repeat_lexiqueModelBuilder_23&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">188</td><td><code>&lt;select_lexiqueModelBuilder_24&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">189</td><td><code>&lt;select_lexiqueModelBuilder_25&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">190</td><td><code>&lt;select_repeat_lexiqueModelBuilder_26&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">191</td><td><code>&lt;select_lexiqueModelBuilder_27&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">192</td><td><code>&lt;select_lexiqueModelBuilder_28&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">193</td><td><code>&lt;select_repeat_lexiqueModelBuilder_29&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">194</td><td><code>&lt;select_lexiqueModelBuilder_30&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">195</td><td><code>&lt;select_repeat_lexiqueModelBuilder_31&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">196</td><td><code>&lt;select_lexiqueModelBuilder_32&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">197</td><td><code>&lt;select_lexiqueModelBuilder_33&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">198</td><td><code>&lt;select_repeat_lexiqueModelBuilder_34&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">199</td><td><code>&lt;select_repeat_lexiqueModelBuilder_35&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">200</td><td><code>&lt;&gt;</code></td></tr>\n"
      "</table><p><a name=\"identical_productions\"></a></p><table class=\"title\"><tr><td>\n"
      "Step 2 : searching for identical productions\n"
      "</td></tr></table>\n"
      "<p><span class=\"success\">Ok : all productions are different.\n"
      "</span></p>For information :\n"
      "<ul><li>143 terminal symbols, numbered from 0 to 142 ;</li>\n"
      "<li> the 'empty string' symbol '$$' is numbered 143 ;</li>\n"
      "<li>57 nonterminal symbols in the pure BNF grammar, numbered from 144 to 200 ;</li>\n"
      "<li>whole vocabulary : 201 elements, 8 bits for BDDs.</li>\n"
      "</ul>\n"
      "<table class=\"title\"><tr><td>\n"
      "Useful terminal and nonterminal symbols\n"
      "</td></tr></table>\n"
      "<p><a name=\"useful_symbols\"></a>Calculus completed in 10 iterations.\n"
      "</p><p><span class=\"success\">All terminal and nonterminal symbols are useful.\n"
      "\n"
      "</span></p><table class=\"title\"><tr><td>\n"
      "Searching for nonterminal symbols deriving in empty string\n"
      "</td></tr></table>\n"
      "<p><a name=\"empty_strings\"></a>32 nonterminal symbols have a empty production :\n"
      "</p><table class=\"result\"><tr class=\"result_line\"><td class=\"result_line\">0</td><td><code>&lt;function_call_or_attribute&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">1</td><td><code>&lt;select_lexiqueModelBuilder_0&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">2</td><td><code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">3</td><td><code>&lt;select_lexiqueModelBuilder_3&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">4</td><td><code>&lt;select_repeat_lexiqueModelBuilder_4&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">5</td><td><code>&lt;select_repeat_lexiqueModelBuilder_6&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">6</td><td><code>&lt;select_repeat_lexiqueModelBuilder_7&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">7</td><td><code>&lt;select_repeat_lexiqueModelBuilder_9&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">8</td><td><code>&lt;select_repeat_lexiqueModelBuilder_10&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">9</td><td><code>&lt;select_repeat_lexiqueModelBuilder_11&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">10</td><td><code>&lt;select_repeat_lexiqueModelBuilder_12&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">11</td><td><code>&lt;select_repeat_lexiqueModelBuilder_13&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">12</td><td><code>&lt;select_repeat_lexiqueModelBuilder_14&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">13</td><td><code>&lt;select_repeat_lexiqueModelBuilder_15&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">14</td><td><code>&lt;select_lexiqueModelBuilder_16&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">15</td><td><code>&lt;select_repeat_lexiqueModelBuilder_17&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">16</td><td><code>&lt;select_repeat_lexiqueModelBuilder_18&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">17</td><td><code>&lt;select_repeat_lexiqueModelBuilder_19&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">18</td><td><code>&lt;select_lexiqueModelBuilder_20&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">19</td><td><code>&lt;select_repeat_lexiqueModelBuilder_21&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">20</td><td><code>&lt;select_lexiqueModelBuilder_22&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">21</td><td><code>&lt;select_repeat_lexiqueModelBuilder_23&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">22</td><td><code>&lt;select_lexiqueModelBuilder_24&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">23</td><td><code>&lt;select_lexiqueModelBuilder_25&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">24</td><td><code>&lt;select_repeat_lexiqueModelBuilder_26&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">25</td><td><code>&lt;select_lexiqueModelBuilder_27&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">26</td><td><code>&lt;select_lexiqueModelBuilder_28&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">27</td><td><code>&lt;select_repeat_lexiqueModelBuilder_29&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">28</td><td><code>&lt;select_repeat_lexiqueModelBuilder_31&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">29</td><td><code>&lt;select_lexiqueModelBuilder_33&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">30</td><td><code>&lt;select_repeat_lexiqueModelBuilder_34&gt;</code></td></tr>\n"
      "<tr class=\"result_line\"><td class=\"result_line\">31</td><td><code>&lt;select_repeat_lexiqueModelBuilder_35&gt;</code></td></tr>\n"
      "</table><p>Nonterminal symbols deriving indirectly in empty string : calculus in 2 iterations.\n"
      "</p><p>No more than those deriving directly to the empty string.\n"
      "</p><p><a name=\"first_sets\"></a></p><table class=\"title\"><tr><td>\n"
      "FIRST set\n"
      "</td></tr></table>\n"
      "<p>Calculus completed in 5 iterations, 179 values ;\n"
      "'$$' means the nonterminal can be derived to empty string (see step 4).\n"
      "</p><table class=\"result\"><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;extern_routine_or_function_declaration&gt;</code></td><td><code> $extern$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;function"
      "_call_or_attribute&gt;</code></td><td><code> $($ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_attribute_declaration&gt;</code></td><td><code> $type_name$</code></td></tr><tr class=\"result_line\"><td cla"
      "ss=\"result_line\"><code>&lt;lexical_explicit_rule&gt;</code></td><td><code> $identifier$ $literal_char$ $~$ $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_expression&gt;</code></td><td><code"
      "> $identifier$ $literal_char$ $~$ $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_factor&gt;</code></td><td><code> $identifier$ $literal_char$ $~$ $literal_string$</code></td></tr><tr class="
      "\"result_line\"><td class=\"result_line\"><code>&lt;lexical_implicit_rule&gt;</code></td><td><code> $list$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_instruction&gt;</code></td><td><code> $identifier$ $drop"
      "$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_list_declaration&gt;</code></td><td><code> $list$</code></td></tr><tr class=\"result_line\"><td"
      " class=\"result_line\"><code>&lt;lexical_list_entry&gt;</code></td><td><code> $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_message_declaration&gt;</code></td><td><code> $message$</code></td"
      "></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_output_effective_argument&gt;</code></td><td><code> $identifier$ $unsigned_literal_integer$ $literal_char$ $*$</code></td></tr><tr class=\"result_line\"><td class=\"result_"
      "line\"><code>&lt;lexical_send_instruction&gt;</code></td><td><code> $search$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_term&gt;</code></td><td><code> $identifier$ $literal_char$ $~$ $literal_"
      "string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexique_component_start_symbol&gt;</code></td><td><code> $lexique$ $template$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;repeat_"
      "while_branch&gt;</code></td><td><code> $while$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;style_declaration&gt;</code></td><td><code> $style$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><cod"
      "e>&lt;template_delimitor&gt;</code></td><td><code> $template$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;template_replacement&gt;</code></td><td><code> $replace$</code></td></tr><tr class=\"result_line\"><td clas"
      "s=\"result_line\"><code>&lt;terminal_declaration&gt;</code></td><td><code> $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_0&gt;</code></td><td><code> $template$ $$</code></td></t"
      "r><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td><td><code> $extern$ $list$ $message$ $replace$ $rule$ $style$ $template$ $type_name$ $terminal$ $$</code></td></tr><tr class=\"resu"
      "lt_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_2&gt;</code></td><td><code> $identifier$ $list$ $literal_char$ $~$ $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqu"
      "eModelBuilder_3&gt;</code></td><td><code> $feature$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_4&gt;</code></td><td><code> $,$ $$</code></td></tr><tr class=\"result_line\"><td"
      " class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_5&gt;</code></td><td><code> $...$ $->$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_6&gt;</code></td><td><code> $identif"
      "ier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_7&gt;</code></td><td><code> $search$ $$</code></td></t"
      "r><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_8&gt;</code></td><td><code> $error$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder"
      "_9&gt;</code></td><td><code> $identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_10&gt;</code></td"
      "><td><code> $while$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_11&gt;</code></td><td><code> $identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warnin"
      "g$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_12&gt;</code></td><td><code> $when$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_"
      "lexiqueModelBuilder_13&gt;</code></td><td><code> $identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuild"
      "er_14&gt;</code></td><td><code> $identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_15&gt;</code><"
      "/td><td><code> $!$ $!\?$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_16&gt;</code></td><td><code> $error$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt"
      ";select_repeat_lexiqueModelBuilder_17&gt;</code></td><td><code> $,$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_18&gt;</code></td><td><code> $!$ $$</code></td></tr><tr class="
      "\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_19&gt;</code></td><td><code> $|$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_20&gt;</code></td><td>"
      "<code> $->$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_21&gt;</code></td><td><code> $!$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_l"
      "exiqueModelBuilder_22&gt;</code></td><td><code> $style$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_23&gt;</code></td><td><code> $,$ $$</code></td></tr><tr class=\"result_line"
      "\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_24&gt;</code></td><td><code> $feature$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_25&gt;</code></td><td><code> $->$ $"
      "$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_26&gt;</code></td><td><code> $!$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBu"
      "ilder_27&gt;</code></td><td><code> $style$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_28&gt;</code></td><td><code> $feature$ $$</code></td></tr><tr class=\"result_line\"><td class=\"r"
      "esult_line\"><code>&lt;select_repeat_lexiqueModelBuilder_29&gt;</code></td><td><code> $,$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_30&gt;</code></td><td><code> $function$ $routine"
      "$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_31&gt;</code></td><td><code> $\?$ $\?!$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueMo"
      "delBuilder_32&gt;</code></td><td><code> $\?$ $\?!$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_33&gt;</code></td><td><code> $error$ $$</code></td></tr><tr class=\"result_line\"><td class=\""
      "result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_34&gt;</code></td><td><code> $,$ $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_35&gt;</code></td><td><code> $\?$ $$</cod"
      "e></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;&gt;</code></td><td><code> $lexique$ $template$</code></td></tr></table><p>Every useful nonterminal should either have a non empty FIRST, either be derived to empty string"
      ", either both. In any way having none: it is an error.</p><p><span class=\"success\">All FIRST are correct.\n"
      "\n"
      "</span></p><table class=\"title\"><tr><td>\n"
      "Nonterminal symbol set followed by empty string\n"
      "</td></tr></table>\n"
      "<p><a name=\"follow_by_empty\"></a>Calculus completed in 2 iterations.\n"
      "</p><p>One nonterminal symbol (the start symbol) can be followed by the empty string.\n"
      "</p><table class=\"result\"><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexique_component_start_symbol&gt;</code></td></tr></table><p></p><table class=\"title\"><tr><td>\n"
      "Computing the FOLLOW sets\n"
      "</td></tr></table>\n"
      "<p>Calculus completed in 4 iterations, 364 values ;\n"
      "'$$' means the nonterminal symbol can be followed by empty string (see step 6) ;\n"
      "\n"
      "the followings of terminal symbols are given for information.\n"
      "</p><table class=\"result\"><tr class=\"result_line\"><td class=\"result_line\"><code>$identifier$</code></td><td><code> $default$ $error$ $feature$ $in$ $send$ $...$ $|$ $,$ $;$ $:$ $($ $)$ $->$ $\?$ $!$ $\?!$ $!\?$</code></td></tr><tr class=\"resul"
      "t_line\"><td class=\"result_line\"><code>$abstract$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$after$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>"
      "$before$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$between$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$block$</code></td><td><code></code></"
      "td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$cast$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$class$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class="
      "\"result_line\"><code>$compile$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$const$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$constructor$</code"
      "></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$default$</code></td><td><code> $identifier$ $drop$ $end$ $error$ $log$ $repeat$ $rewind$ $search$ $select$ $send$ $tag$ $warning$ $terminal$</code></td><"
      "/tr><tr class=\"result_line\"><td class=\"result_line\"><code>$description$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$dependency$</code></td><td><code></code></td></tr><tr class=\"result_line\"><t"
      "d class=\"result_line\"><code>$do$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$domain$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$drop$</code></"
      "td><td><code> $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$else$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$elsif$</code></td><td><code></code></td></tr><"
      "tr class=\"result_line\"><td class=\"result_line\"><code>$end$</code></td><td><code> $lexique$ $repeat$ $rule$ $select$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$enum$</code></td><td><code></code></td></tr><tr class="
      "\"result_line\"><td class=\"result_line\"><code>$error$</code></td><td><code> $identifier$ $message$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$extends$</code></td><td><code></code></td></tr><tr class=\"result_line\"><t"
      "d class=\"result_line\"><code>$extern$</code></td><td><code> $function$ $routine$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$extract$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_l"
      "ine\"><code>$false$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$feature$</code></td><td><code> $identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$filewrapper$</"
      "code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$foreach$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$function$</code></td><td><code> $identifier$</c"
      "ode></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$grammar$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$gui$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td"
      " class=\"result_line\"><code>$here$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$if$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$import$</code></t"
      "d><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$import__$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$in$</code></td><td><code> $identifier$</code></td></tr"
      "><tr class=\"result_line\"><td class=\"result_line\"><code>$insert$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$label$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"resu"
      "lt_line\"><code>$lazy$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$lexique$</code></td><td><code> $identifier$ $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$list$</"
      "code></td><td><code> $identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$listmap$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$log$</code></td><td><code> $;$</co"
      "de></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$loop$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$map$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td cla"
      "ss=\"result_line\"><code>$mapindex$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$match$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$message$</code"
      "></td><td><code> $identifier$ $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$method$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$mod$</code></td><td><c"
      "ode></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$modifier$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$nonterminal$</code></td><td><code></code></td></tr><tr class=\""
      "result_line\"><td class=\"result_line\"><code>$not$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$on$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$op"
      "erator$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$option$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$or$</code></td><td><code></code></td></"
      "tr><tr class=\"result_line\"><td class=\"result_line\"><code>$override$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$parse$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\""
      "result_line\"><code>$project$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$program$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$reader$</code></t"
      "d><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$remove$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$replace$</code></td><td><code> $literal_string$</code></"
      "td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$repeat$</code></td><td><code> $identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ $while$ $;$</code></td></tr><tr class=\"result_line\"><td class=\"r"
      "esult_line\"><code>$rewind$</code></td><td><code> $identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$root$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$routine$<"
      "/code></td><td><code> $identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$rule$</code></td><td><code> $identifier$ $list$ $literal_char$ $;$ $~$ $literal_string$</code></td></tr><tr class=\"result_line\"><td cla"
      "ss=\"result_line\"><code>$search$</code></td><td><code> $identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$select$</code></td><td><code> $when$ $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line"
      "\"><code>$self$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$semantics$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$send$</code></td><td><code> $"
      "search$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$sortedlist$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$state$</code></td><td><code></code></td></tr><"
      "tr class=\"result_line\"><td class=\"result_line\"><code>$struct$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$style$</code></td><td><code> $identifier$</code></td></tr><tr class=\"result_line\"><td "
      "class=\"result_line\"><code>$switch$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$syntax$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$tag$</code><"
      "/td><td><code> $identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$template$</code></td><td><code> $lexique$ $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$then$</code>"
      "</td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$true$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$unused$</code></td><td><code></code></td></tr><tr class"
      "=\"result_line\"><td class=\"result_line\"><code>$warning$</code></td><td><code> $identifier$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$when$</code></td><td><code> $identifier$ $literal_char$ $~$ $literal_string$</co"
      "de></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$while$</code></td><td><code> $identifier$ $literal_char$ $~$ $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$with$</code></td><td><co"
      "de></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$literal_double$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$unsigned_literal_integer$</code></td><td><code> $error$ $"
      ";$ $)$ $!$ $!\?$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$signed_literal_integer$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$unsigned_literal_integer64$</code></t"
      "d><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$signed_literal_integer64$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$.$</code></td><td><code></code></td></"
      "tr><tr class=\"result_line\"><td class=\"result_line\"><code>$.=$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$...$</code></td><td><code> $literal_string$</code></td></tr><tr class=\"result_line\"><t"
      "d class=\"result_line\"><code>$type_name$</code></td><td><code> $identifier$ $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$literal_char$</code></td><td><code> $error$ $|$ $;$ $:$ $)$ $->$ $!$ $!\?$</code></td></tr><"
      "tr class=\"result_line\"><td class=\"result_line\"><code>$terminal$</code></td><td><code> $error$ $,$ $;$ $!$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$*$</code></td><td><code> $error$ $;$ $)$ $!$ $!\?$</code></td></t"
      "r><tr class=\"result_line\"><td class=\"result_line\"><code>$|$</code></td><td><code> $identifier$ $literal_char$ $~$ $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$,$</code></td><td><code> $identifier$ $"
      "literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$+$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$--$</code></td><td><code></code></td></tr><tr class=\"resul"
      "t_line\"><td class=\"result_line\"><code>$::$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$>$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$;$</code>"
      "</td><td><code> $identifier$ $default$ $drop$ $end$ $error$ $extern$ $list$ $log$ $message$ $replace$ $repeat$ $rewind$ $rule$ $select$ $send$ $style$ $tag$ $template$ $warning$ $when$ $while$ $type_name$ $terminal$</code></td></tr><tr class"
      "=\"result_line\"><td class=\"result_line\"><code>$:$</code></td><td><code> $identifier$ $default$ $drop$ $end$ $error$ $extern$ $list$ $log$ $message$ $replace$ $repeat$ $rewind$ $rule$ $select$ $send$ $style$ $tag$ $template$ $warning$ $when$ $"
      "while$ $type_name$ $terminal$ $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$-$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$($</code></td><td><code> $)"
      "$ $!$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$)$</code></td><td><code> $error$ $;$ $)$ $!$ $!\?$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$->$</code></td><td><code> $type_name$ $lite"
      "ral_char$ $terminal$ $literal_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$\?$</code></td><td><code> $type_name$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$==$</code></td><td><code"
      "></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$\?\?$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$!$</code></td><td><code> $identifier$ $unsigned_literal_integer$ $liter"
      "al_char$ $*$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$:=$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$++$</code></td><td><code></code></td></tr><tr class=\"result_"
      "line\"><td class=\"result_line\"><code>$[$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$]$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$+=$</code></"
      "td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$\?!$</code></td><td><code> $type_name$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$!\?$</code></td><td><code> $identifier$</code></"
      "td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$/$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$!=$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"resul"
      "t_line\"><code>$>=$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$&$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>${$</code></td><td><code></code></"
      "td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$}$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$-=$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"resul"
      "t_line\"><code>$^$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$>>$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$~$</code></td><td><code> $literal"
      "_string$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$<-$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$<$</code></td><td><code></code></td></tr><tr class=\"result_line\""
      "><td class=\"result_line\"><code>$<->$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$<=$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$<<$</code></td"
      "><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$non_terminal_symbol$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$literal_string$</code></td><td><code> $error"
      "$ $feature$ $style$ $...$ $|$ $,$ $;$ $:$ $->$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>$comment$</code></td><td><code></code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;extern_routine_or_"
      "function_declaration&gt;</code></td><td><code> $end$ $extern$ $list$ $message$ $replace$ $rule$ $style$ $template$ $type_name$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;function_call_or_attribute&gt"
      ";</code></td><td><code> $error$ $;$ $)$ $!$ $!\?$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_attribute_declaration&gt;</code></td><td><code> $end$ $extern$ $list$ $message$ $replace$ $rule$ $style$ $temp"
      "late$ $type_name$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_explicit_rule&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_expr"
      "ession&gt;</code></td><td><code> $:$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_factor&gt;</code></td><td><code> $|$ $:$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical"
      "_implicit_rule&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_instruction&gt;</code></td><td><code> $identifier$ $default$ $drop$ $end$ $error$ $log$ $repeat$ $rewind$ $select$"
      " $send$ $tag$ $warning$ $when$ $while$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_list_declaration&gt;</code></td><td><code> $end$ $extern$ $list$ $message$ $replace$ $rule$ $style$ $template$ $type_nam"
      "e$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_list_entry&gt;</code></td><td><code> $,$ $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_message_declaratio"
      "n&gt;</code></td><td><code> $end$ $extern$ $list$ $message$ $replace$ $rule$ $style$ $template$ $type_name$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_output_effective_argument&gt;</code></td"
      "><td><code> $error$ $;$ $)$ $!$ $!\?$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexical_send_instruction&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;l"
      "exical_term&gt;</code></td><td><code> $:$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;lexique_component_start_symbol&gt;</code></td><td><code> $$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><"
      "code>&lt;repeat_while_branch&gt;</code></td><td><code> $end$ $while$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;style_declaration&gt;</code></td><td><code> $end$ $extern$ $list$ $message$ $replace$ $rule$ $styl"
      "e$ $template$ $type_name$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;template_delimitor&gt;</code></td><td><code> $end$ $extern$ $list$ $message$ $replace$ $rule$ $style$ $template$ $type_name$ $term"
      "inal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;template_replacement&gt;</code></td><td><code> $end$ $extern$ $list$ $message$ $replace$ $rule$ $style$ $template$ $type_name$ $terminal$</code></td></tr><tr cla"
      "ss=\"result_line\"><td class=\"result_line\"><code>&lt;terminal_declaration&gt;</code></td><td><code> $end$ $extern$ $list$ $message$ $replace$ $rule$ $style$ $template$ $type_name$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"r"
      "esult_line\"><code>&lt;select_lexiqueModelBuilder_0&gt;</code></td><td><code> $lexique$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td><td><code> $end$</code></td><"
      "/tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_2&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_3&gt;</code></td><t"
      "d><code> $...$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_4&gt;</code></td><td><code> $...$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lex"
      "iqueModelBuilder_5&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_6&gt;</code></td><td><code> $end$</code></td></tr><tr class=\"result_line\"><td class="
      "\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_7&gt;</code></td><td><code> $error$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_8&gt;</code></td><td><code> $;$</co"
      "de></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_9&gt;</code></td><td><code> $while$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModel"
      "Builder_10&gt;</code></td><td><code> $end$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_11&gt;</code></td><td><code> $end$ $while$</code></td></tr><tr class=\"result_line\"><td cla"
      "ss=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_12&gt;</code></td><td><code> $default$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_13&gt;</code></td><td><code> $def"
      "ault$ $when$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_14&gt;</code></td><td><code> $end$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repe"
      "at_lexiqueModelBuilder_15&gt;</code></td><td><code> $error$ $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_16&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td"
      " class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_17&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_18&gt;</code></td><td><code> $)$</c"
      "ode></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_19&gt;</code></td><td><code> $:$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_2"
      "0&gt;</code></td><td><code> $|$ $:$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_21&gt;</code></td><td><code> $error$</code></td></tr><tr class=\"result_line\"><td class=\"result_li"
      "ne\"><code>&lt;select_lexiqueModelBuilder_22&gt;</code></td><td><code> $:$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_23&gt;</code></td><td><code> $;$</code></td></tr><tr class="
      "\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_24&gt;</code></td><td><code> $,$ $;$ $->$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_25&gt;</code></td><td><"
      "code> $,$ $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_26&gt;</code></td><td><code> $error$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_l"
      "exiqueModelBuilder_27&gt;</code></td><td><code> $feature$ $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_28&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td c"
      "lass=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_29&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_30&gt;</code></td><td><code> $end$ $extern$ "
      "$list$ $message$ $replace$ $rule$ $style$ $template$ $type_name$ $terminal$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_31&gt;</code></td><td><code> $error$ $;$</code></td></tr>"
      "<tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_32&gt;</code></td><td><code> $type_name$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_lexiqueModelBuilder_33&gt;</code><"
      "/td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_repeat_lexiqueModelBuilder_34&gt;</code></td><td><code> $;$</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><code>&lt;select_"
      "repeat_lexiqueModelBuilder_35&gt;</code></td><td><code> $->$</code></td></tr></table><p>Every useful nonterminal symbol should: either have a non empty FOLLOW, either can be followed by the empty string, either both. In no way none of them :"
      " it is an error.</p><p><span class=\"success\">All FOLLOW are correct.</span></p><a name=\"grammar\"></a><table class=\"title\"><tr><td>\n"
      "Checking LL(1) condition\n"
      "</td></tr></table>\n"
      "<p>The FIRST of a production is :\n"
      " if the production is empty, the FOLLOW of the left nonterminal symbol ;\n"
      " if the production is not empty (e.g. g -&gt; x) :\n"
      "         -- the FIRST of x, and\n"
      "         -- if x est a nonterminal symbol deriving in the empty string, union the FOLLOW of x.\n"
      "\n"
      "Only are listed the nonterminal having more than one production (see step 2\n"
      "for inPureBNFproductions numbering) :\n"
      "\n"
      "</p><table class=\"result\"><tr><td class=\"result_title\" colspan=\"2\"><code>&lt;function_call_or_attribute&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_17\">17</a></td><td><code>$error$ $;$ $)$ $!$ $!\?$"
      " </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_18\">18</a></td><td><code>$($ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;lexical_factor&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_27\">27</a></td><td><code>$literal_string$ </code></td></tr><tr class=\"result_line\"><td "
      "class=\"result_line\"><a href=\"#pure_bnf_28\">28</a></td><td><code>$~$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_29\">29</a></td><td><code>$literal_char$ </code></td></tr><tr class=\"result_line\"><td clas"
      "s=\"result_line\"><a href=\"#pure_bnf_30\">30</a></td><td><code>$identifier$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;lexical_instruction&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_6\">6</a></td><td><code>$send$ </code></td></tr><tr class=\"result_line\"><td class=\""
      "result_line\"><a href=\"#pure_bnf_9\">9</a></td><td><code>$repeat$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_11\">11</a></td><td><code>$select$ </code></td></tr><tr class=\"result_line\"><td class=\"result_"
      "line\"><a href=\"#pure_bnf_12\">12</a></td><td><code>$identifier$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_19\">19</a></td><td><code>$error$ </code></td></tr><tr class=\"result_line\"><td class=\"result_li"
      "ne\"><a href=\"#pure_bnf_20\">20</a></td><td><code>$warning$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_21\">21</a></td><td><code>$drop$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a"
      " href=\"#pure_bnf_22\">22</a></td><td><code>$tag$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_23\">23</a></td><td><code>$rewind$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#"
      "pure_bnf_24\">24</a></td><td><code>$log$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;lexical_output_effective_argument&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_13\">13</a></td><td><code>$literal_char$ </code></td></tr><tr class=\""
      "result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_14\">14</a></td><td><code>$unsigned_literal_integer$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_15\">15</a></td><td><code>$*$ </code></td></tr><tr"
      " class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_16\">16</a></td><td><code>$identifier$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;lexical_send_instruction&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_7\">7</a></td><td><code>$terminal$ </code></td></tr><tr class=\"result_line\"><t"
      "d class=\"result_line\"><a href=\"#pure_bnf_8\">8</a></td><td><code>$search$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_0&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_37\">37</a></td><td><code>$template$ </code></td></tr><tr class=\"result_li"
      "ne\"><td class=\"result_line\"><a href=\"#pure_bnf_38\">38</a></td><td><code>$lexique$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_1&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_39\">39</a></td><td><code>$end$ </code></td></tr><tr class=\"result_"
      "line\"><td class=\"result_line\"><a href=\"#pure_bnf_40\">40</a></td><td><code>$extern$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_41\">41</a></td><td><code>$template$ </code></td></tr><tr class=\"result_lin"
      "e\"><td class=\"result_line\"><a href=\"#pure_bnf_42\">42</a></td><td><code>$replace$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_43\">43</a></td><td><code>$type_name$ </code></td></tr><tr class=\"result_line"
      "\"><td class=\"result_line\"><a href=\"#pure_bnf_44\">44</a></td><td><code>$style$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_45\">45</a></td><td><code>$terminal$ </code></td></tr><tr class=\"result_line\"><t"
      "d class=\"result_line\"><a href=\"#pure_bnf_46\">46</a></td><td><code>$list$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_47\">47</a></td><td><code>$rule$ </code></td></tr><tr class=\"result_line\"><td class=\""
      "result_line\"><a href=\"#pure_bnf_48\">48</a></td><td><code>$message$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_2&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_49\">49</a></td><td><code>$identifier$ $literal_char$ $~$ $literal_string$"
      " </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_50\">50</a></td><td><code>$list$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_3&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_51\">51</a></td><td><code>$...$ </code></td></tr><tr class=\"result_line\"><"
      "td class=\"result_line\"><a href=\"#pure_bnf_52\">52</a></td><td><code>$feature$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_4&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_53\">53</a></td><td><code>$...$ </code></td></tr><tr class=\"result_"
      "line\"><td class=\"result_line\"><a href=\"#pure_bnf_54\">54</a></td><td><code>$,$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_5&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_55\">55</a></td><td><code>$...$ </code></td></tr><tr class=\"result_line\"><"
      "td class=\"result_line\"><a href=\"#pure_bnf_56\">56</a></td><td><code>$->$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_6&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_57\">57</a></td><td><code>$end$ </code></td></tr><tr class=\"result_"
      "line\"><td class=\"result_line\"><a href=\"#pure_bnf_58\">58</a></td><td><code>$identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_7&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_59\">59</a></td><td><code>$error$ $terminal$ </code></td></tr><tr c"
      "lass=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_60\">60</a></td><td><code>$search$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_8&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_61\">61</a></td><td><code>$terminal$ </code></td></tr><tr class=\"result_li"
      "ne\"><td class=\"result_line\"><a href=\"#pure_bnf_62\">62</a></td><td><code>$error$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_9&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_63\">63</a></td><td><code>$while$ </code></td></tr><tr class=\"resul"
      "t_line\"><td class=\"result_line\"><a href=\"#pure_bnf_64\">64</a></td><td><code>$identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_10&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_65\">65</a></td><td><code>$end$ </code></td></tr><tr class=\"result"
      "_line\"><td class=\"result_line\"><a href=\"#pure_bnf_66\">66</a></td><td><code>$while$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_11&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_67\">67</a></td><td><code>$end$ $while$ </code></td></tr><tr class"
      "=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_68\">68</a></td><td><code>$identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_12&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_69\">69</a></td><td><code>$default$ </code></td></tr><tr class=\"re"
      "sult_line\"><td class=\"result_line\"><a href=\"#pure_bnf_70\">70</a></td><td><code>$when$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_13&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_71\">71</a></td><td><code>$default$ $when$ </code></td></tr><tr cl"
      "ass=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_72\">72</a></td><td><code>$identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_14&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_73\">73</a></td><td><code>$end$ </code></td></tr><tr class=\"result"
      "_line\"><td class=\"result_line\"><a href=\"#pure_bnf_74\">74</a></td><td><code>$identifier$ $drop$ $error$ $log$ $repeat$ $rewind$ $select$ $send$ $tag$ $warning$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_15&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_75\">75</a></td><td><code>$error$ $;$ </code></td></tr><tr class=\""
      "result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_76\">76</a></td><td><code>$!$ </code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_77\">77</a></td><td><code>$!\?$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_16&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_78\">78</a></td><td><code>$;$ </code></td></tr><tr class=\"result_line\"><t"
      "d class=\"result_line\"><a href=\"#pure_bnf_79\">79</a></td><td><code>$error$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_17&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_80\">80</a></td><td><code>$;$ </code></td></tr><tr class=\"result_l"
      "ine\"><td class=\"result_line\"><a href=\"#pure_bnf_81\">81</a></td><td><code>$,$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_18&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_82\">82</a></td><td><code>$)$ </code></td></tr><tr class=\"result_l"
      "ine\"><td class=\"result_line\"><a href=\"#pure_bnf_83\">83</a></td><td><code>$!$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_19&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_84\">84</a></td><td><code>$:$ </code></td></tr><tr class=\"result_l"
      "ine\"><td class=\"result_line\"><a href=\"#pure_bnf_85\">85</a></td><td><code>$|$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_20&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_86\">86</a></td><td><code>$|$ $:$ </code></td></tr><tr class=\"result_line"
      "\"><td class=\"result_line\"><a href=\"#pure_bnf_87\">87</a></td><td><code>$->$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_21&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_88\">88</a></td><td><code>$error$ </code></td></tr><tr class=\"resu"
      "lt_line\"><td class=\"result_line\"><a href=\"#pure_bnf_89\">89</a></td><td><code>$!$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_22&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_90\">90</a></td><td><code>$style$ </code></td></tr><tr class=\"result_line"
      "\"><td class=\"result_line\"><a href=\"#pure_bnf_91\">91</a></td><td><code>$:$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_23&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_92\">92</a></td><td><code>$;$ </code></td></tr><tr class=\"result_l"
      "ine\"><td class=\"result_line\"><a href=\"#pure_bnf_93\">93</a></td><td><code>$,$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_24&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_94\">94</a></td><td><code>$,$ $;$ $->$ </code></td></tr><tr class=\"result"
      "_line\"><td class=\"result_line\"><a href=\"#pure_bnf_95\">95</a></td><td><code>$feature$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_25&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_96\">96</a></td><td><code>$->$ </code></td></tr><tr class=\"result_line\"><"
      "td class=\"result_line\"><a href=\"#pure_bnf_97\">97</a></td><td><code>$,$ $;$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_26&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_98\">98</a></td><td><code>$error$ </code></td></tr><tr class=\"resu"
      "lt_line\"><td class=\"result_line\"><a href=\"#pure_bnf_99\">99</a></td><td><code>$!$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_27&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_100\">100</a></td><td><code>$style$ </code></td></tr><tr class=\"result_li"
      "ne\"><td class=\"result_line\"><a href=\"#pure_bnf_101\">101</a></td><td><code>$feature$ $;$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_28&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_102\">102</a></td><td><code>$;$ </code></td></tr><tr class=\"result_line\">"
      "<td class=\"result_line\"><a href=\"#pure_bnf_103\">103</a></td><td><code>$feature$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_29&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_104\">104</a></td><td><code>$;$ </code></td></tr><tr class=\"result"
      "_line\"><td class=\"result_line\"><a href=\"#pure_bnf_105\">105</a></td><td><code>$,$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_30&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_106\">106</a></td><td><code>$routine$ </code></td></tr><tr class=\"result_"
      "line\"><td class=\"result_line\"><a href=\"#pure_bnf_107\">107</a></td><td><code>$function$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_31&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_108\">108</a></td><td><code>$error$ $;$ </code></td></tr><tr class"
      "=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_109\">109</a></td><td><code>$\?$ $\?!$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_32&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_110\">110</a></td><td><code>$\?!$ </code></td></tr><tr class=\"result_line\""
      "><td class=\"result_line\"><a href=\"#pure_bnf_111\">111</a></td><td><code>$\?$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_lexiqueModelBuilder_33&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_112\">112</a></td><td><code>$;$ </code></td></tr><tr class=\"result_line\">"
      "<td class=\"result_line\"><a href=\"#pure_bnf_113\">113</a></td><td><code>$error$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_34&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_114\">114</a></td><td><code>$;$ </code></td></tr><tr class=\"result"
      "_line\"><td class=\"result_line\"><a href=\"#pure_bnf_115\">115</a></td><td><code>$,$ </code></td></tr>\n"
      "<tr><td class=\"result_title\" colspan=\"2\"><code>&lt;select_repeat_lexiqueModelBuilder_35&gt;</code></td></tr><tr class=\"result_line\"><td class=\"result_line\"><a href=\"#pure_bnf_116\">116</a></td><td><code>$->$ </code></td></tr><tr class=\"resul"
      "t_line\"><td class=\"result_line\"><a href=\"#pure_bnf_117\">117</a></td><td><code>$\?$ </code></td></tr>\n"
      "</table><p><span class=\"success\">No conflict : the grammar is LL (1).\n"
      "</span></p><table class=\"title\"><tr><td>\n"
      "OK (no error, no warning)\n"
      "</td></tr></table>\n"
      "</div></body></html>\n" ;
  }
  return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "handleNonTerminalDeclarations"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleNonTerminalDeclarations (C_Compiler & inLexique,
                                GGS_nonTerminalMap  & var_cas_outNonTerminalMap,
                                const GGS_nonterminalDeclarationList   var_cas_inNonterminalDeclarationList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_handleNonTerminalDeclarations at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outNonTerminalMap = GGS_nonTerminalMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
  {
    GGS_nonterminalDeclarationList::cEnumerator enumerator_3641 (var_cas_inNonterminalDeclarationList, true) ;
    const GGS_nonterminalDeclarationList::cElement * operand_3641 = NULL ;
    while (((operand_3641 = enumerator_3641.nextObject ()))) {
      macroValidPointer (operand_3641) ;
      if ((var_cas_outNonTerminalMap.reader_hasKey (inLexique, operand_3641->mNonterminalName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) COMMA_SOURCE_FILE_AT_LINE (69))).isBuiltAndTrue ()) {
        GGS_nonTerminalLabelList  var_cas_labels ;
        GGS_bool var_cas_hasParseLabel ;
        const GGS_nonTerminalMap  temp_3810 = var_cas_outNonTerminalMap ;
        if (temp_3810.isBuilt ()) {
          temp_3810 (HERE)->method_searchKey (inLexique, operand_3641->mNonterminalName, var_cas_labels, var_cas_hasParseLabel COMMA_SOURCE_FILE_AT_LINE (72)) ;
        }
        if (((operand_3641->mHasParseLabel).operator_and ((var_cas_hasParseLabel).operator_not ())).isBuiltAndTrue ()) {
          operand_3641->mNonterminalName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this declaration has a 'parse' label, but declaration of the same non terminal in ")).operator_concat (var_cas_outNonTerminalMap.reader_locationForKey (inLexique, operand_3641->mNonterminalName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (80)) COMMA_SOURCE_FILE_AT_LINE (80)).reader_locationString (inLexique COMMA_SOURCE_FILE_AT_LINE (80)))).operator_concat (GGS_string (" does not have a 'parse' label")) COMMA_SOURCE_FILE_AT_LINE (82)) ;
        }else if ((((operand_3641->mHasParseLabel).operator_not ()).operator_and (var_cas_hasParseLabel)).isBuiltAndTrue ()) {
          operand_3641->mNonterminalName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("this declaration has no 'parse' label, but declaration of the same non terminal in ")).operator_concat (var_cas_outNonTerminalMap.reader_locationForKey (inLexique, operand_3641->mNonterminalName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (84)) COMMA_SOURCE_FILE_AT_LINE (84)).reader_locationString (inLexique COMMA_SOURCE_FILE_AT_LINE (84)))).operator_concat (GGS_string (" has a 'parse' label")) COMMA_SOURCE_FILE_AT_LINE (86)) ;
        }
        if (((var_cas_labels.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (88))).operator_isNotEqual (operand_3641->mLabels.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (88)))).isBuiltAndTrue ()) {
          operand_3641->mNonterminalName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((((GGS_string ("this declaration names ")).operator_concat (operand_3641->mLabels.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (90)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (90)))).operator_concat (GGS_string (" labels, but declaration of the same non terminal in "))).operator_concat (var_cas_outNonTerminalMap.reader_locationForKey (inLexique, operand_3641->mNonterminalName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (92)) COMMA_SOURCE_FILE_AT_LINE (92)).reader_locationString (inLexique COMMA_SOURCE_FILE_AT_LINE (92)))).operator_concat (GGS_string (" names"))).operator_concat (var_cas_labels.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (94)).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (94)))).operator_concat (GGS_string (" labels.")) COMMA_SOURCE_FILE_AT_LINE (97)) ;
        }else{
          {
            GGS_nonTerminalLabelList::cEnumerator enumerator_4996 (operand_3641->mLabels, true) ;
            const GGS_nonTerminalLabelList::cElement * operand_4996 = NULL ;
            GGS_nonTerminalLabelList::cEnumerator enumerator_5004 (var_cas_labels, true) ;
            const GGS_nonTerminalLabelList::cElement * operand_5004 = NULL ;
            while (((operand_4996 = enumerator_4996.nextObject ()))
                && ((operand_5004 = enumerator_5004.nextObject ()))) {
              macroValidPointer (operand_4996) ;
              macroValidPointer (operand_5004) ;
              if (((operand_4996->mLabelName).operator_isNotEqual (operand_5004->mLabelName)).isBuiltAndTrue ()) {
                operand_4996->mLabelName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((GGS_string ("this label should be identical to the label '")).operator_concat (operand_5004->mLabelName)).operator_concat (GGS_string ("' declared in "))).operator_concat (operand_5004->mLabelName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (103)).reader_locationString (inLexique COMMA_SOURCE_FILE_AT_LINE (103))) COMMA_SOURCE_FILE_AT_LINE (105)) ;
              }
              {
                GGS_formalParameterList::cEnumerator enumerator_5363 (operand_4996->mFormalParameters, true) ;
                const GGS_formalParameterList::cElement * operand_5363 = NULL ;
                GGS_formalParameterList::cEnumerator enumerator_5381 (operand_5004->mFormalParameters, true) ;
                const GGS_formalParameterList::cElement * operand_5381 = NULL ;
                while (((operand_5363 = enumerator_5363.nextObject ()))
                    && ((operand_5381 = enumerator_5381.nextObject ()))) {
                  macroValidPointer (operand_5363) ;
                  macroValidPointer (operand_5381) ;
                  if (((operand_5363->mFormalParameterPassingMode).operator_isNotEqual (operand_5381->mFormalParameterPassingMode)).isBuiltAndTrue ()) {
                    operand_5363->mFormalParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((((GGS_string ("the passing mode (")).operator_concat (operand_5363->mFormalParameterPassingMode.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (113)))).operator_concat (GGS_string (") for this parameter should be identical to the passing mode ("))).operator_concat (operand_5381->mFormalParameterPassingMode.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (115)))).operator_concat (GGS_string (") of the parameter declared in"))).operator_concat (operand_5004->mLabelName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (117)).reader_locationString (inLexique COMMA_SOURCE_FILE_AT_LINE (117))) COMMA_SOURCE_FILE_AT_LINE (119)) ;
                  }
                  if (((operand_5363->mFormalParameterName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (120))).operator_isNotEqual (operand_5381->mFormalParameterTypeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (120)))).isBuiltAndTrue ()) {
                    operand_5363->mFormalParameterName.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, (((GGS_string ("this type name should be identical to the '@")).operator_concat (operand_5004->mLabelName)).operator_concat (GGS_string ("' type name used in "))).operator_concat (operand_5004->mLabelName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (124)).reader_locationString (inLexique COMMA_SOURCE_FILE_AT_LINE (124))) COMMA_SOURCE_FILE_AT_LINE (126)) ;
                  }
                }
              }
            }
          }
        }
      }else{
        var_cas_outNonTerminalMap.modifier_insertKey (inLexique, operand_3641->mNonterminalName, operand_3641->mLabels, operand_3641->mHasParseLabel COMMA_SOURCE_FILE_AT_LINE (131)) ;
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_handleNonTerminalDeclarations\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@syntaxInstruction.buildSyntaxInstructionList'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList> gDispatchTableForMethod__syntaxInstruction__buildSyntaxInstructionList ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__syntaxInstruction__buildSyntaxInstructionList (typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__syntaxInstruction__buildSyntaxInstructionList.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList
findCategoryMethod__syntaxInstruction__buildSyntaxInstructionList (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__syntaxInstruction__buildSyntaxInstructionList.count ()) {
    result = gDispatchTableForMethod__syntaxInstruction__buildSyntaxInstructionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__syntaxInstruction__buildSyntaxInstructionList (superClassPtr) ;
      gDispatchTableForMethod__syntaxInstruction__buildSyntaxInstructionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "buildSyntaxInstructionList"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSyntaxInstructionList (C_Compiler & inLexique,
                                const GGS_syntaxInstructionList   var_cas_inInstructionList,
                                GGS_syntaxInstructionList  & var_cas_outSyntaxInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildSyntaxInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outSyntaxInstructionList = GGS_syntaxInstructionList ::constructor_emptyList () ;
  {
    GGS_syntaxInstructionList::cEnumerator enumerator_7659 (var_cas_inInstructionList, true) ;
    const GGS_syntaxInstructionList::cElement * operand_7659 = NULL ;
    while (((operand_7659 = enumerator_7659.nextObject ()))) {
      macroValidPointer (operand_7659) ;
      const GGS_syntaxInstruction  temp_7707 = operand_7659->mInstruction ;
      if (temp_7707.isBuilt ()) {
        typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList method = findCategoryMethod__syntaxInstruction__buildSyntaxInstructionList (temp_7707.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, temp_7707 (HERE), var_cas_outSyntaxInstructionList COMMA_SOURCE_FILE_AT_LINE (160)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildSyntaxInstructionList\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@semanticInstruction.buildSyntaxInstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__semanticInstruction__buildSyntaxInstructionList (C_Compiler &,
                                const cPtr_semanticInstruction * operand_8067,
                                GGS_syntaxInstructionList  & /* var_cas_ioSyntaxInstructionList */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8067 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@nonterminalCallInstruction.buildSyntaxInstructionList'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__nonterminalCallInstruction__buildSyntaxInstructionList (C_Compiler &,
                                const cPtr_nonterminalCallInstruction * operand_8291,
                                GGS_syntaxInstructionList  & var_cas_ioSyntaxInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8291 != NULL) {
    var_cas_ioSyntaxInstructionList.addAssign_operation (operand_8291) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@terminalCheckInstruction.buildSyntaxInstructionList'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__terminalCheckInstruction__buildSyntaxInstructionList (C_Compiler &,
                                const cPtr_terminalCheckInstruction * operand_8543,
                                GGS_syntaxInstructionList  & var_cas_ioSyntaxInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8543 != NULL) {
    var_cas_ioSyntaxInstructionList.addAssign_operation (operand_8543) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@repeatInstruction.buildSyntaxInstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__repeatInstruction__buildSyntaxInstructionList (C_Compiler & inLexique,
                                const cPtr_repeatInstruction * operand_8788,
                                GGS_syntaxInstructionList  & var_cas_ioSyntaxInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_8788 != NULL) {
    GGS_syntaxInstructionList  var_cas_repeatedInstructionList ;
    ::routine_buildSyntaxInstructionList (inLexique,  operand_8788->mRepeatedInstructionList,  var_cas_repeatedInstructionList COMMA_SOURCE_FILE_AT_LINE (195)) ;
    GGS_listOfSyntaxInstructionList  var_cas_repeatBranchList ;
    var_cas_repeatBranchList = GGS_listOfSyntaxInstructionList ::constructor_emptyList () ;
    {
      GGS_listOfSyntaxInstructionList::cEnumerator enumerator_9064 (operand_8788->mRepeatBranchList, true) ;
      const GGS_listOfSyntaxInstructionList::cElement * operand_9064 = NULL ;
      while (((operand_9064 = enumerator_9064.nextObject ()))) {
        macroValidPointer (operand_9064) ;
        GGS_syntaxInstructionList  var_cas_syntaxInstructionList ;
        ::routine_buildSyntaxInstructionList (inLexique,  operand_9064->mSyntaxInstructionList,  var_cas_syntaxInstructionList COMMA_SOURCE_FILE_AT_LINE (199)) ;
        var_cas_repeatBranchList.addAssign_operation (var_cas_syntaxInstructionList) ;
      }
    }
    GGS_repeatInstruction  var_cas_ri ;
    var_cas_ri = GGS_repeatInstruction ::constructor_new (inLexique, var_cas_repeatedInstructionList, var_cas_repeatBranchList COMMA_HERE) ;
    var_cas_ioSyntaxInstructionList.addAssign_operation (var_cas_ri) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@selectInstruction.buildSyntaxInstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__selectInstruction__buildSyntaxInstructionList (C_Compiler & inLexique,
                                const cPtr_selectInstruction * operand_9539,
                                GGS_syntaxInstructionList  & var_cas_ioSyntaxInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_9539 != NULL) {
    GGS_listOfSyntaxInstructionList  var_cas_selectBranchList ;
    var_cas_selectBranchList = GGS_listOfSyntaxInstructionList ::constructor_emptyList () ;
    {
      GGS_listOfSyntaxInstructionList::cEnumerator enumerator_9682 (operand_9539->mSelectBranchList, true) ;
      const GGS_listOfSyntaxInstructionList::cElement * operand_9682 = NULL ;
      while (((operand_9682 = enumerator_9682.nextObject ()))) {
        macroValidPointer (operand_9682) ;
        GGS_syntaxInstructionList  var_cas_syntaxInstructionList ;
        ::routine_buildSyntaxInstructionList (inLexique,  operand_9682->mSyntaxInstructionList,  var_cas_syntaxInstructionList COMMA_SOURCE_FILE_AT_LINE (217)) ;
        var_cas_selectBranchList.addAssign_operation (var_cas_syntaxInstructionList) ;
      }
    }
    GGS_selectInstruction  var_cas_si ;
    var_cas_si = GGS_selectInstruction ::constructor_new (inLexique, var_cas_selectBranchList COMMA_HERE) ;
    var_cas_ioSyntaxInstructionList.addAssign_operation (var_cas_si) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@parseDoInstruction.buildSyntaxInstructionList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__parseDoInstruction__buildSyntaxInstructionList (C_Compiler & inLexique,
                                const cPtr_parseDoInstruction * operand_10129,
                                GGS_syntaxInstructionList  & var_cas_ioSyntaxInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10129 != NULL) {
    GGS_syntaxInstructionList  var_cas_instructionList ;
    const GGS_listOfSyntaxInstructionList  temp_10253 = operand_10129->mParseDoBranchList ;
    if (temp_10253.isBuilt ()) {
      temp_10253 (HERE)->method_first (inLexique, var_cas_instructionList COMMA_SOURCE_FILE_AT_LINE (232)) ;
    }
    {
      GGS_syntaxInstructionList::cEnumerator enumerator_10299 (var_cas_instructionList, true) ;
      const GGS_syntaxInstructionList::cElement * operand_10299 = NULL ;
      while (((operand_10299 = enumerator_10299.nextObject ()))) {
        macroValidPointer (operand_10299) ;
        const GGS_syntaxInstruction  temp_10347 = operand_10299->mInstruction ;
        if (temp_10347.isBuilt ()) {
          typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList method = findCategoryMethod__syntaxInstruction__buildSyntaxInstructionList (temp_10347.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, temp_10347 (HERE), var_cas_ioSyntaxInstructionList COMMA_SOURCE_FILE_AT_LINE (234)) ;
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@blockInstruction.buildSyntaxInstructionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__blockInstruction__buildSyntaxInstructionList (C_Compiler & inLexique,
                                const cPtr_blockInstruction * operand_10546,
                                GGS_syntaxInstructionList  & var_cas_ioSyntaxInstructionList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_10546 != NULL) {
    {
      GGS_syntaxInstructionList::cEnumerator enumerator_10626 (operand_10546->mInstructionList, true) ;
      const GGS_syntaxInstructionList::cElement * operand_10626 = NULL ;
      while (((operand_10626 = enumerator_10626.nextObject ()))) {
        macroValidPointer (operand_10626) ;
        const GGS_syntaxInstruction  temp_10674 = operand_10626->mInstruction ;
        if (temp_10674.isBuilt ()) {
          typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList method = findCategoryMethod__syntaxInstruction__buildSyntaxInstructionList (temp_10674.galgasObjectRunTimeInfo ()) ;
          if (method != NULL) {
            method (inLexique, temp_10674 (HERE), var_cas_ioSyntaxInstructionList COMMA_SOURCE_FILE_AT_LINE (244)) ;
          }
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Implementation of routine "handleRules"                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleRules (C_Compiler & inLexique,
                                const GGS_syntaxRuleList   var_cas_inRuleList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_handleRules at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_syntaxRuleList::cEnumerator enumerator_11198 (var_cas_inRuleList, true) ;
    const GGS_syntaxRuleList::cElement * operand_11198 = NULL ;
    while (((operand_11198 = enumerator_11198.nextObject ()))) {
      macroValidPointer (operand_11198) ;
      GGS_syntaxInstructionList  var_cas_instructionList ;
      GGS_lstring  automatic_var_0 ;
      GGS_formalParameterList  automatic_var_1 ;
      const GGS_syntaxRuleLabelList  temp_11340 = operand_11198->mLabelList ;
      if (temp_11340.isBuilt ()) {
        temp_11340 (HERE)->method_first (inLexique, automatic_var_0, automatic_var_1, var_cas_instructionList COMMA_SOURCE_FILE_AT_LINE (260)) ;
      }
      GGS_syntaxInstructionList  var_cas_syntaxInstructionList ;
      ::routine_buildSyntaxInstructionList (inLexique,  var_cas_instructionList,  var_cas_syntaxInstructionList COMMA_SOURCE_FILE_AT_LINE (262)) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_handleRules\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "compileGrammarComponent"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileGrammarComponent (C_Compiler & inLexique,
                                const GGS_lstring   var_cas_inSourceFile,
                                const GGS_string  /* var_cas_inOutputDirectory */,
                                GGS_parsedComponentStruct & var_cas_ioParsedComponentStruct COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_compileGrammarComponent at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_grammarComponentRoot  var_cas_grammarComponentRoot ;
  const GGS_string _depExtension = GGS_string ("") ;
  const GGS_string _depPath = GGS_string ("") ;
  if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
    grammarLL1grammar::_performSourceFileParsing_ (inLexique,
                                  _depExtension.string (),
                                  _depPath.string (),
                                  NULL,
                                  var_cas_inSourceFile,
                                  var_cas_grammarComponentRoot
                                  COMMA_SOURCE_FILE_AT_LINE (274)) ;
  }
  GGS_lstring  var_cas_componentName ;
  var_cas_componentName = var_cas_grammarComponentRoot.reader_mGrammarName (inLexique COMMA_SOURCE_FILE_AT_LINE (276)) ;
  GGS_string var_cas_basename ;
  var_cas_basename = var_cas_inSourceFile.ggs_string ().reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (277)).reader_stringByDeletingPathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (277)) ;
  if (((var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (278))).operator_isNotEqual (var_cas_basename)).isBuiltAndTrue ()) {
    var_cas_componentName.reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, ((((GGS_string ("GALGAS checks "
      "the component name ('")).operator_concat (var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (280)))).operator_concat (GGS_string ("') against the source file base name ('"))).operator_concat (var_cas_basename)).operator_concat (GGS_string ("'): they should be identical")) COMMA_SOURCE_FILE_AT_LINE (282)) ;
  }
  GGS_string var_cas_lexiqueComponent ;
  var_cas_lexiqueComponent = GGS_string ("") ;
  {
    GGS_lstringlist::cEnumerator enumerator_12402 (var_cas_grammarComponentRoot.reader_mSyntaxComponents (inLexique COMMA_SOURCE_FILE_AT_LINE (286)), true) ;
    const GGS_lstringlist::cElement * operand_12402 = NULL ;
    while (((operand_12402 = enumerator_12402.nextObject ()))) {
      macroValidPointer (operand_12402) ;
      if (((operand_12402->mValue.ggs_string ().reader_pathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (287))).operator_isNotEqual (GGS_string ("gSyntax"))).isBuiltAndTrue ()) {
        operand_12402->mValue.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("a syntax component file should have '.gSyntax' as path extension") COMMA_SOURCE_FILE_AT_LINE (289)) ;
      }else{
        GGS_string var_cas_syntaxComponentName ;
        var_cas_syntaxComponentName = operand_12402->mValue.ggs_string ().reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (290)).reader_stringByDeletingPathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (290)) ;
        GGS_syntaxComponentRoot  var_cas_syntaxComponentRoot ;
        if ((var_cas_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (292)).reader_hasKey (inLexique, var_cas_syntaxComponentName COMMA_SOURCE_FILE_AT_LINE (292))).isBuiltAndTrue ()) {
          const GGS_parsedSyntaxComponentMap  temp_12904 = var_cas_ioParsedComponentStruct.reader_mParsedSyntaxComponentMap (inLexique COMMA_SOURCE_FILE_AT_LINE (293)) ;
          if (temp_12904.isBuilt ()) {
            temp_12904 (HERE)->method_searchKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_syntaxComponentName, GGS_location (inLexique) COMMA_HERE), var_cas_syntaxComponentRoot COMMA_SOURCE_FILE_AT_LINE (293)) ;
          }
        }else{
          GGS_string var_cas_sourceFilePath ;
          var_cas_sourceFilePath = operand_12402->mValue.ggs_string ().reader_absolutePathFromPath (inLexique, var_cas_inSourceFile.ggs_string ().reader_stringByDeletingLastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (295)) COMMA_SOURCE_FILE_AT_LINE (295)) ;
          const GGS_string _depExtension = GGS_string ("") ;
          const GGS_string _depPath = GGS_string ("") ;
          if (_depExtension.isBuilt () && _depPath.isBuilt ()) {
            syntaxSLRgrammar::_performSourceFileParsing_ (inLexique,
                                          _depExtension.string (),
                                          _depPath.string (),
                                          NULL,
                                          GGS_lstring ::constructor_new (inLexique, var_cas_sourceFilePath, operand_12402->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (296)) COMMA_HERE),
                                          var_cas_syntaxComponentRoot
                                          COMMA_SOURCE_FILE_AT_LINE (296)) ;
          }
          var_cas_ioParsedComponentStruct.mParsedSyntaxComponentMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_syntaxComponentName, operand_12402->mValue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (297)) COMMA_HERE), var_cas_syntaxComponentRoot COMMA_SOURCE_FILE_AT_LINE (297)) ;
        }
        GGS_string var_cas_currentLexiqueName ;
        var_cas_currentLexiqueName = var_cas_syntaxComponentRoot.reader_mImportedLexiqueReference (inLexique COMMA_SOURCE_FILE_AT_LINE (300)).ggs_string ().reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (300)).reader_stringByDeletingPathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (300)) ;
        if (((var_cas_lexiqueComponent).operator_isEqual (GGS_string (""))).isBuiltAndTrue ()) {
          var_cas_lexiqueComponent = var_cas_currentLexiqueName ;
        }else if (((var_cas_lexiqueComponent).operator_isNotEqual (var_cas_currentLexiqueName)).isBuiltAndTrue ()) {
          operand_12402->mValue.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((((GGS_string ("this syntax component uses '")).operator_concat (var_cas_currentLexiqueName)).operator_concat (GGS_string ("' lexique component, but the first syntax component uses the '"))).operator_concat (var_cas_lexiqueComponent)).operator_concat (GGS_string ("' lexique component (they should be the same)")) COMMA_SOURCE_FILE_AT_LINE (307)) ;
        }
        GGS_nonTerminalMap  var_cas_nonTerminalMap ;
        ::routine_handleNonTerminalDeclarations (inLexique,  var_cas_nonTerminalMap,  var_cas_syntaxComponentRoot.reader_mNonterminalDeclarationList (inLexique COMMA_SOURCE_FILE_AT_LINE (312)) COMMA_SOURCE_FILE_AT_LINE (310)) ;
        ::routine_handleRules (inLexique,  var_cas_syntaxComponentRoot.reader_mRuleList (inLexique COMMA_SOURCE_FILE_AT_LINE (316)) COMMA_SOURCE_FILE_AT_LINE (315)) ;
      }
    }
  }
  if ((gOption_galgas_5F_cli_5F_options_outputHTMLgrammarFile.value ()).isBuiltAndTrue ()) {
    GGS_string var_cas_s ;
    var_cas_s = template_filewrapper_grammarGenerationTemplates_html (inLexique, var_cas_componentName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (323))) ;
    GGS_string var_cas_htmlOutputFileName ;
    var_cas_htmlOutputFileName = (var_cas_inSourceFile.ggs_string ().reader_stringByDeletingPathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (325))).operator_concat (GGS_string (".html")) ;
    GGS_bool automatic_var_2 ;
    const GGS_string temp_14581 = var_cas_s ;
    if (temp_14581.isBuilt ()) {
      temp_14581 (HERE)->method_writeToFileWhenDifferentContents (inLexique, var_cas_htmlOutputFileName, automatic_var_2 COMMA_SOURCE_FILE_AT_LINE (326)) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_compileGrammarComponent\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_grammarCompilation (void) {
 enterCategoryMethod__syntaxInstruction__buildSyntaxInstructionList ((typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList) category_method__semanticInstruction__buildSyntaxInstructionList, gClassInfoFor__semanticInstruction.slotID ()) ;
 enterCategoryMethod__syntaxInstruction__buildSyntaxInstructionList ((typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList) category_method__nonterminalCallInstruction__buildSyntaxInstructionList, gClassInfoFor__nonterminalCallInstruction.slotID ()) ;
 enterCategoryMethod__syntaxInstruction__buildSyntaxInstructionList ((typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList) category_method__terminalCheckInstruction__buildSyntaxInstructionList, gClassInfoFor__terminalCheckInstruction.slotID ()) ;
 enterCategoryMethod__syntaxInstruction__buildSyntaxInstructionList ((typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList) category_method__repeatInstruction__buildSyntaxInstructionList, gClassInfoFor__repeatInstruction.slotID ()) ;
 enterCategoryMethod__syntaxInstruction__buildSyntaxInstructionList ((typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList) category_method__selectInstruction__buildSyntaxInstructionList, gClassInfoFor__selectInstruction.slotID ()) ;
 enterCategoryMethod__syntaxInstruction__buildSyntaxInstructionList ((typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList) category_method__parseDoInstruction__buildSyntaxInstructionList, gClassInfoFor__parseDoInstruction.slotID ()) ;
 enterCategoryMethod__syntaxInstruction__buildSyntaxInstructionList ((typeCategoryMethod__syntaxInstruction__buildSyntaxInstructionList) category_method__blockInstruction__buildSyntaxInstructionList, gClassInfoFor__blockInstruction.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogueAction prologueEpilogueObjectFor_grammarCompilation (prologueRoutineFor_grammarCompilation,
                                   NULL) ;

//---------------------------------------------------------------------------*

