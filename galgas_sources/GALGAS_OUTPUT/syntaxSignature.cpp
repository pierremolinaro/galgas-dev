//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'syntaxSignature.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 27th, 2010, at 20h29'16"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "syntaxSignature.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "syntaxSignature.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//             Include directives generated by grammar includes              *
//                                                                           *
//---------------------------------------------------------------------------*

#include "syntaxSLRgrammar.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@semanticInstructionForGeneration.appendSyntaxSignature'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__semanticInstructionForGeneration__appendSyntaxSignature (C_Compiler &,
                                const cPtr_semanticInstructionForGeneration * operand_2108,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2108 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@semanticInstructionForGeneration.appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature> gDispatchTableForMethod__semanticInstructionForGeneration__appendSyntaxSignature ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature (typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__semanticInstructionForGeneration__appendSyntaxSignature.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature
findCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__semanticInstructionForGeneration__appendSyntaxSignature.count ()) {
    result = gDispatchTableForMethod__semanticInstructionForGeneration__appendSyntaxSignature (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (NULL == result) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature (superClassPtr) ;
      gDispatchTableForMethod__semanticInstructionForGeneration__appendSyntaxSignature.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of function "syntaxSignatureOfInstructionList"        *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticInstructionListForGeneration  function_syntaxSignatureOfInstructionList (C_Compiler & inLexique,
                                const GGS_semanticInstructionListForGeneration   var_cas_inInstructionList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER function_syntaxSignatureOfInstructionList at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_semanticInstructionListForGeneration  var_cas_outResult ;
  var_cas_outResult = GGS_semanticInstructionListForGeneration ::constructor_emptyList () ;
  {
    GGS_semanticInstructionListForGeneration::cEnumerator enumerator_2534 (var_cas_inInstructionList, true) ;
    const GGS_semanticInstructionListForGeneration::cElement * operand_2534 = NULL ;
    while (((operand_2534 = enumerator_2534.nextObject ()))) {
      macroValidPointer (operand_2534) ;
      { typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature method = findCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature (operand_2534->mInstruction.galgasObjectRunTimeInfo ()) ;
        if (method != NULL) {
          method (inLexique, operand_2534->mInstruction (HERE), var_cas_outResult COMMA_SOURCE_FILE_AT_LINE (46)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE function_syntaxSignatureOfInstructionList\n") ;
  #endif
  return var_cas_outResult ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_syntaxSignatureOfInstructionList (C_Compiler & inLexique,
                           const GGS_objectlist & inEffectiveParameterArray,
                           const GGS_location & inErrorLocation
                           COMMA_LOCATION_ARGS) {
  const GGS_semanticInstructionListForGeneration  arg_0 = GGS_semanticInstructionListForGeneration ::castFromObject (inLexique, inEffectiveParameterArray.reader_mValueAtIndex (inLexique, GGS_uint (0) COMMA_THERE), inErrorLocation COMMA_THERE) ;
  const GGS_semanticInstructionListForGeneration  result = function_syntaxSignatureOfInstructionList (inLexique,
                            arg_0
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

static const C_galgas_type_descriptorEX *
kArgumentTypeList_syntaxSignatureOfInstructionList [1] = {& kTypeDescriptor_GGS_semanticInstructionListForGeneration } ;

const C_galgas_function_descriptorEX
kFunction_descriptor_syntaxSignatureOfInstructionList ("syntaxSignatureOfInstructionList",
                              functionForGenericCall_syntaxSignatureOfInstructionList,
                              & kTypeDescriptor_GGS_semanticInstructionListForGeneration ,
                              1,
                              kArgumentTypeList_syntaxSignatureOfInstructionList) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@nonterminalInstructionForGeneration.appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__nonterminalInstructionForGeneration__appendSyntaxSignature (C_Compiler & inLexique,
                                const cPtr_nonterminalInstructionForGeneration * operand_2778,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2778 != NULL) {
    var_cas_ioInstructionListForGeneration.addAssign_operation (GGS_nonterminalInstructionForGeneration ::constructor_new (inLexique, operand_2778->mInstructionLocation, operand_2778->mNonterminalName, GGS_string ("parse"), GGS_actualParameterListForGeneration ::constructor_emptyList () COMMA_SOURCE_FILE_AT_LINE (55))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@terminalCheckInstructionForGeneration.appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__terminalCheckInstructionForGeneration__appendSyntaxSignature (C_Compiler &,
                                const cPtr_terminalCheckInstructionForGeneration * operand_3220,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3220 != NULL) {
    var_cas_ioInstructionListForGeneration.addAssign_operation (operand_3220) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@repeatInstructionForGeneration.appendSyntaxSignature'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__repeatInstructionForGeneration__appendSyntaxSignature (C_Compiler & inLexique,
                                const cPtr_repeatInstructionForGeneration * operand_3502,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3502 != NULL) {
    const GGS_semanticInstructionListForGeneration  var_cas_repeated_instructionList = function_syntaxSignatureOfInstructionList (inLexique, operand_3502->m_repeated_instructionList COMMA_SOURCE_FILE_AT_LINE (76)) ;
    GGS_listOfSemanticInstructionListForGeneration  var_cas_listOfSemanticInstructionListForGeneration = GGS_listOfSemanticInstructionListForGeneration ::constructor_emptyList () ;
    {
      GGS_listOfSemanticInstructionListForGeneration::cEnumerator enumerator_3873 (operand_3502->mListOfSemanticInstructionListForGeneration, true) ;
      const GGS_listOfSemanticInstructionListForGeneration::cElement * operand_3873 = NULL ;
      while (((operand_3873 = enumerator_3873.nextObject ()))) {
        macroValidPointer (operand_3873) ;
        var_cas_listOfSemanticInstructionListForGeneration.addAssign_operation (function_syntaxSignatureOfInstructionList (inLexique, operand_3873->mInstructionList COMMA_SOURCE_FILE_AT_LINE (80))) ;
      }
    }
    var_cas_ioInstructionListForGeneration.addAssign_operation (GGS_repeatInstructionForGeneration ::constructor_new (inLexique, operand_3502->mSyntaxComponentName, operand_3502->mChoiceIndex, var_cas_repeated_instructionList, var_cas_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (84))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@selectInstructionForGeneration.appendSyntaxSignature'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__selectInstructionForGeneration__appendSyntaxSignature (C_Compiler & inLexique,
                                const cPtr_selectInstructionForGeneration * operand_4378,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_4378 != NULL) {
    GGS_listOfSemanticInstructionListForGeneration  var_cas_listOfSemanticInstructionListForGeneration = GGS_listOfSemanticInstructionListForGeneration ::constructor_emptyList () ;
    {
      GGS_listOfSemanticInstructionListForGeneration::cEnumerator enumerator_4610 (operand_4378->mListOfSemanticInstructionListForGeneration, true) ;
      const GGS_listOfSemanticInstructionListForGeneration::cElement * operand_4610 = NULL ;
      while (((operand_4610 = enumerator_4610.nextObject ()))) {
        macroValidPointer (operand_4610) ;
        var_cas_listOfSemanticInstructionListForGeneration.addAssign_operation (function_syntaxSignatureOfInstructionList (inLexique, operand_4610->mInstructionList COMMA_SOURCE_FILE_AT_LINE (100))) ;
      }
    }
    var_cas_ioInstructionListForGeneration.addAssign_operation (GGS_selectInstructionForGeneration ::constructor_new (inLexique, operand_4378->mSyntaxComponentName, operand_4378->mChoiceIndex, var_cas_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (103))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@parseDoInstructionForGeneration.appendSyntaxSignature'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__parseDoInstructionForGeneration__appendSyntaxSignature (C_Compiler &,
                                const cPtr_parseDoInstructionForGeneration * operand_5080,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5080 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@parseLoopInstructionForGeneration.appendSyntaxSignature' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__parseLoopInstructionForGeneration__appendSyntaxSignature (C_Compiler &,
                                const cPtr_parseLoopInstructionForGeneration * operand_5328,
                                GGS_semanticInstructionListForGeneration  & /* var_cas_ioInstructionListForGeneration */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5328 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category method '@parseWhenInstructionForGeneration.appendSyntaxSignature' *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__parseWhenInstructionForGeneration__appendSyntaxSignature (C_Compiler & inLexique,
                                const cPtr_parseWhenInstructionForGeneration * operand_5576,
                                GGS_semanticInstructionListForGeneration  & var_cas_ioInstructionListForGeneration
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_5576 != NULL) {
    var_cas_ioInstructionListForGeneration.dotAssign_operation (function_syntaxSignatureOfInstructionList (inLexique, operand_5576->mInstructionList COMMA_SOURCE_FILE_AT_LINE (129))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_syntaxSignature (void) {
  enterCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature (category_method__semanticInstructionForGeneration__appendSyntaxSignature, gClassInfoFor__semanticInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature ((typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature) category_method__nonterminalInstructionForGeneration__appendSyntaxSignature, gClassInfoFor__nonterminalInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature ((typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature) category_method__terminalCheckInstructionForGeneration__appendSyntaxSignature, gClassInfoFor__terminalCheckInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature ((typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature) category_method__repeatInstructionForGeneration__appendSyntaxSignature, gClassInfoFor__repeatInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature ((typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature) category_method__selectInstructionForGeneration__appendSyntaxSignature, gClassInfoFor__selectInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature ((typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature) category_method__parseDoInstructionForGeneration__appendSyntaxSignature, gClassInfoFor__parseDoInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature ((typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature) category_method__parseLoopInstructionForGeneration__appendSyntaxSignature, gClassInfoFor__parseLoopInstructionForGeneration.slotID ()) ;
  enterCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature ((typeCategoryMethod__semanticInstructionForGeneration__appendSyntaxSignature) category_method__parseWhenInstructionForGeneration__appendSyntaxSignature, gClassInfoFor__parseWhenInstructionForGeneration.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_syntaxSignature (void) {
  gDispatchTableForMethod__semanticInstructionForGeneration__appendSyntaxSignature.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_syntaxSignature (prologueRoutineFor_syntaxSignature, epilogueRoutineFor_syntaxSignature) ;

//---------------------------------------------------------------------------*

