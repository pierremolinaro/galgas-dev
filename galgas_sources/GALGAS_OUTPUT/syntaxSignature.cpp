//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'syntaxSignature.cpp'                         *
//             Generated by version version GALGAS_BETA_VERSION              *
//                     november 26th, 2010, at 20h42'1"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "syntaxSignature.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "syntaxSignature.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                Function 'syntaxSignatureOfInstructionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListForGeneration function_syntaxSignatureOfInstructionList (const GALGAS_semanticInstructionListForGeneration & constinArgument_inInstructionList,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticInstructionListForGeneration result_semanticInstructionListForGeneration ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_semanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (40)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_semanticInstructionListForGeneration enumerator_2321 (constinArgument_inInstructionList, true) ;
  //--- simple foreach instruction
  while (enumerator_2321.hasCurrentObject ()) {
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_appendSyntaxSignature ((const cPtr_semanticInstructionForGeneration *) enumerator_2321.current_mInstruction (HERE).ptr (), result_semanticInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (42)) ;
    //-------- END @methodCallInstructionForGeneration
    enumerator_2321.gotoNextObject () ;
  }
//---
  return result_semanticInstructionListForGeneration ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_syntaxSignatureOfInstructionList [2] = {
  & kTypeDescriptor_GALGAS_semanticInstructionListForGeneration,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_syntaxSignatureOfInstructionList (C_Compiler * inCompiler,
                                                                                 const cObjectArray & inEffectiveParameterArray,
                                                                                 const GALGAS_location & inErrorLocation
                                                                                 COMMA_LOCATION_ARGS) {
  const GALGAS_semanticInstructionListForGeneration operand0 = GALGAS_semanticInstructionListForGeneration::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_syntaxSignatureOfInstructionList (operand0, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_syntaxSignatureOfInstructionList ("syntaxSignatureOfInstructionList",
                                                                                  functionWithGenericHeader_syntaxSignatureOfInstructionList,
                                                                                  & kTypeDescriptor_GALGAS_semanticInstructionListForGeneration,
                                                                                  1,
                                                                                  functionArgs_syntaxSignatureOfInstructionList) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'compareSyntaxSignature'                     *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_bool function_compareSyntaxSignature (const GALGAS_semanticInstructionListForGeneration & constinArgument_inReferenceSignature,
                                             const GALGAS_semanticInstructionListForGeneration & constinArgument_inTestedSignature,
                                             const GALGAS_location & constinArgument_inErrorLocation,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_bool ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_bool = GALGAS_bool (true) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_semanticInstructionListForGeneration enumerator_7078 (constinArgument_inReferenceSignature, true) ;
  cEnumerator_semanticInstructionListForGeneration enumerator_7113 (constinArgument_inTestedSignature, true) ;
  //--- complex foreach instruction
  bool bool_0 = result_bool.isValidAndTrue () ;
  if (enumerator_7078.hasCurrentObject () && enumerator_7113.hasCurrentObject () && bool_0) {
    while (enumerator_7078.hasCurrentObject () && enumerator_7113.hasCurrentObject () && bool_0) {
      //-------- @assignmentInstructionForGeneration
      result_bool = callCategoryReader_compareSyntaxInstruction ((const cPtr_semanticInstructionForGeneration *) enumerator_7078.current_mInstruction (HERE).ptr (), enumerator_7113.current_mInstruction (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (166)) ;
      enumerator_7078.gotoNextObject () ;
      enumerator_7113.gotoNextObject () ;
      if (enumerator_7078.hasCurrentObject () && enumerator_7113.hasCurrentObject ()) {
        bool_0 = result_bool.isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_1 (result_bool.operator_and (GALGAS_bool (kIsStrictInf, constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (168)).objectCompare (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (168)))) COMMA_SOURCE_FILE_AT_LINE (168))) ;
  if (test_1.isValidAndTrue ()) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_semanticInstructionForGeneration var_instruction = constinArgument_inTestedSignature.reader_mInstructionAtIndex (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (169)), inCompiler COMMA_SOURCE_FILE_AT_LINE (169)) ;
    //-------- @structuredCastInstructionForGeneration
    if (var_instruction.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (var_instruction.ptr ())) {
        GALGAS_syntaxInstructionForGeneration cast_7503_si ((cPtr_syntaxInstructionForGeneration *) var_instruction.ptr ()) ;
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (cast_7503_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (172)), GALGAS_string ("syntax signature error, exceeding instruction; this branch has more syntax instructions than reference branch") COMMA_SOURCE_FILE_AT_LINE (172)) ;
      }else{
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (176)) ;
      }
    }
  }else if (test_1.isValid ()) {
    //-------- @ifInstructionForGeneration
    const GALGAS_bool test_2 (result_bool.operator_and (GALGAS_bool (kIsStrictSup, constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (178)).objectCompare (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (178)))) COMMA_SOURCE_FILE_AT_LINE (178))) ;
    if (test_2.isValidAndTrue ()) {
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("syntax signature error, missing instruction; this branch has less syntax instructions than reference branch") COMMA_SOURCE_FILE_AT_LINE (179)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_semanticInstructionForGeneration var_instruction = constinArgument_inReferenceSignature.reader_mInstructionAtIndex (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (182)), inCompiler COMMA_SOURCE_FILE_AT_LINE (182)) ;
      //-------- @structuredCastInstructionForGeneration
      if (var_instruction.isValid ()) {
        if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (var_instruction.ptr ())) {
          GALGAS_syntaxInstructionForGeneration cast_8168_si ((cPtr_syntaxInstructionForGeneration *) var_instruction.ptr ()) ;
          //-------- @errorInstructionForGeneration
          inCompiler->emitSemanticError (cast_8168_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (185)), GALGAS_string ("this is the syntax instruction in reference branch that corresponds to the first missing instruction") COMMA_SOURCE_FILE_AT_LINE (185)) ;
        }else{
          //-------- @errorInstructionForGeneration
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (189)) ;
        }
      }
    }
  }
//---
  return result_bool ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_compareSyntaxSignature [4] = {
  & kTypeDescriptor_GALGAS_semanticInstructionListForGeneration,
  & kTypeDescriptor_GALGAS_semanticInstructionListForGeneration,
  & kTypeDescriptor_GALGAS_location,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_compareSyntaxSignature (C_Compiler * inCompiler,
                                                                       const cObjectArray & inEffectiveParameterArray,
                                                                       const GALGAS_location & inErrorLocation
                                                                       COMMA_LOCATION_ARGS) {
  const GALGAS_semanticInstructionListForGeneration operand0 = GALGAS_semanticInstructionListForGeneration::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  const GALGAS_semanticInstructionListForGeneration operand1 = GALGAS_semanticInstructionListForGeneration::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  const GALGAS_location operand2 = GALGAS_location::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_compareSyntaxSignature (operand0, operand1, operand2, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_compareSyntaxSignature ("compareSyntaxSignature",
                                                                        functionWithGenericHeader_compareSyntaxSignature,
                                                                        & kTypeDescriptor_GALGAS_bool,
                                                                        3,
                                                                        functionArgs_compareSyntaxSignature) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@semanticInstructionForGeneration appendSyntaxSignature' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticInstructionForGeneration_appendSyntaxSignature> gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_appendSyntaxSignature (const PMSInt32 inClassIndex,
                                                categoryMethodSignature_semanticInstructionForGeneration_appendSyntaxSignature inMethod) {
  gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                               GALGAS_semanticInstructionListForGeneration & io_ioInstructionListForGeneration,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticInstructionForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_semanticInstructionForGeneration_appendSyntaxSignature f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.count ()) {
      f = gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.count ()) {
           f = gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    f (inObject, io_ioInstructionListForGeneration, inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_semanticInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * /* inObject */,
                                                                                   GALGAS_semanticInstructionListForGeneration & /* ioArgument_ioInstructionListForGeneration */,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_semanticInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_semanticInstructionForGeneration.mSlotID,
                                             categoryMethod_semanticInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_semanticInstructionForGeneration_appendSyntaxSignature (void) {
  gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_semanticInstructionForGeneration_appendSyntaxSignature,
                                                                                   freeCategoryMethod_semanticInstructionForGeneration_appendSyntaxSignature) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@nonterminalInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_nonterminalInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                      GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_nonterminalInstructionForGeneration * object = (const cPtr_nonterminalInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_nonterminalInstructionForGeneration) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_nonterminalInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mNonterminalName, GALGAS_string ("parse"), GALGAS_actualParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (55)) COMMA_SOURCE_FILE_AT_LINE (51)) COMMA_SOURCE_FILE_AT_LINE (51)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_nonterminalInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_nonterminalInstructionForGeneration.mSlotID,
                                             categoryMethod_nonterminalInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nonterminalInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_nonterminalInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@terminalCheckInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                        GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_terminalCheckInstructionForGeneration * object = (const cPtr_terminalCheckInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_terminalCheckInstructionForGeneration) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_terminalCheckInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTerminalName, object->mAttribute_mLexiqueIdentifier, GALGAS_terminalCheckAssignementList::constructor_emptyList (SOURCE_FILE_AT_LINE (68)), object->mAttribute_mIndexingKey COMMA_SOURCE_FILE_AT_LINE (64)) COMMA_SOURCE_FILE_AT_LINE (64)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_terminalCheckInstructionForGeneration.mSlotID,
                                             categoryMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@repeatInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_repeatInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                 GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_repeatInstructionForGeneration * object = (const cPtr_repeatInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_repeatInstructionForGeneration) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_semanticInstructionListForGeneration var_repeated_5F_instructionList = function_syntaxSignatureOfInstructionList (object->mAttribute_m_5F_repeated_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (78)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (79)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_3837 (object->mAttribute_mListOfSemanticInstructionListForGeneration, true) ;
  //--- simple foreach instruction
  while (enumerator_3837.hasCurrentObject ()) {
    //-------- @addAssignInstructionForGeneration
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (function_syntaxSignatureOfInstructionList (enumerator_3837.current_mInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (82)), enumerator_3837.current_mEndOfInstructionList (HERE) COMMA_SOURCE_FILE_AT_LINE (81)) ;
    enumerator_3837.gotoNextObject () ;
  }
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_repeatInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mSyntaxComponentName, object->mAttribute_mChoiceIndex, var_repeated_5F_instructionList, object->mAttribute_mEndOfRepeatedInstructions, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (87)) COMMA_SOURCE_FILE_AT_LINE (87)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_repeatInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_repeatInstructionForGeneration.mSlotID,
                                             categoryMethod_repeatInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_repeatInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_repeatInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selectInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selectInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                 GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selectInstructionForGeneration * object = (const cPtr_selectInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_selectInstructionForGeneration) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (102)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_4661 (object->mAttribute_mListOfSemanticInstructionListForGeneration, true) ;
  //--- simple foreach instruction
  while (enumerator_4661.hasCurrentObject ()) {
    //-------- @addAssignInstructionForGeneration
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (function_syntaxSignatureOfInstructionList (enumerator_4661.current_mInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (105)), enumerator_4661.current_mEndOfInstructionList (HERE) COMMA_SOURCE_FILE_AT_LINE (104)) ;
    enumerator_4661.gotoNextObject () ;
  }
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_selectInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mSyntaxComponentName, object->mAttribute_mChoiceIndex, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (109)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selectInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_selectInstructionForGeneration.mSlotID,
                                             categoryMethod_selectInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selectInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_selectInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseRewindInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseRewindInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                      GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseRewindInstructionForGeneration * object = (const cPtr_parseRewindInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseRewindInstructionForGeneration) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_semanticInstructionListForGeneration var_instructionList ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_location joker_5393_0 ; // Joker input parameter
  object->mAttribute_mListOfSemanticInstructionListForGeneration.method_first (var_instructionList, joker_5393_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (123)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @appendInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.dotAssign_operation (function_syntaxSignatureOfInstructionList (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (124)) COMMA_SOURCE_FILE_AT_LINE (124)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseRewindInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_parseRewindInstructionForGeneration.mSlotID,
                                             categoryMethod_parseRewindInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseRewindInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_parseRewindInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseLoopInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseLoopInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseLoopInstructionForGeneration * object = (const cPtr_parseLoopInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseLoopInstructionForGeneration) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.dotAssign_operation (function_syntaxSignatureOfInstructionList (object->mAttribute_mInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (132)) COMMA_SOURCE_FILE_AT_LINE (132)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseLoopInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_parseLoopInstructionForGeneration.mSlotID,
                                             categoryMethod_parseLoopInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseLoopInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_parseLoopInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseWhenInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseWhenInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseWhenInstructionForGeneration * object = (const cPtr_parseWhenInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseWhenInstructionForGeneration) ;
  //-------- @appendInstructionForGeneration
  ioArgument_ioInstructionListForGeneration.dotAssign_operation (function_syntaxSignatureOfInstructionList (object->mAttribute_mInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (140)) COMMA_SOURCE_FILE_AT_LINE (140)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseWhenInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_parseWhenInstructionForGeneration.mSlotID,
                                             categoryMethod_parseWhenInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseWhenInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_parseWhenInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_semanticInstructionForGeneration_compareSyntaxInstruction> gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction ;

//---------------------------------------------------------------------------*

void enterCategoryReader_compareSyntaxInstruction (const PMSInt32 inClassIndex,
                                                   categoryReaderSignature_semanticInstructionForGeneration_compareSyntaxInstruction inReader) {
  gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                         const GALGAS_semanticInstructionForGeneration & constin_inTestedInstruction,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticInstructionForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_semanticInstructionForGeneration_compareSyntaxInstruction f = NULL ;
    if (classIndex < gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.count ()) {
      f = gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.count ()) {
           f = gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, constin_inTestedInstruction, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_semanticInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * /* inObject */,
                                                                                             const GALGAS_semanticInstructionForGeneration & /* constinArgument_inTestedInstruction */,
                                                                                             C_Compiler * /* inCompiler */
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_bool ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_bool = GALGAS_bool (true) ;
//---
  return result_bool ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_semanticInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_semanticInstructionForGeneration.mSlotID,
                                                categoryReader_semanticInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_semanticInstructionForGeneration_compareSyntaxInstruction (void) {
  gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_semanticInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_semanticInstructionForGeneration_compareSyntaxInstruction,
                                                                                      freeCategoryReader_semanticInstructionForGeneration_compareSyntaxInstruction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@terminalCheckInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                                  const GALGAS_semanticInstructionForGeneration & constinArgument_inTestedInstruction,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_bool ; // Returned variable
  const cPtr_terminalCheckInstructionForGeneration * object = (const cPtr_terminalCheckInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_terminalCheckInstructionForGeneration) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_inTestedInstruction.isValid ()) {
    if (constinArgument_inTestedInstruction.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_terminalCheckInstructionForGeneration) {
      GALGAS_terminalCheckInstructionForGeneration cast_8742_si ((cPtr_terminalCheckInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (kIsEqual, object->mAttribute_mTerminalName.reader_string (SOURCE_FILE_AT_LINE (202)).objectCompare (cast_8742_si.reader_mTerminalName (SOURCE_FILE_AT_LINE (202)).reader_string (SOURCE_FILE_AT_LINE (202)))) ;
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_0 (result_bool.operator_not (SOURCE_FILE_AT_LINE (203))) ;
      if (test_0.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (cast_8742_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (204)), GALGAS_string ("syntax signature error; the expected syntax instruction here is the '$").operator_concat (object->mAttribute_mTerminalName.reader_string (SOURCE_FILE_AT_LINE (205)) COMMA_SOURCE_FILE_AT_LINE (205)).operator_concat (GALGAS_string ("$' terminal check") COMMA_SOURCE_FILE_AT_LINE (205)) COMMA_SOURCE_FILE_AT_LINE (204)) ;
      }
    }else if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (constinArgument_inTestedInstruction.ptr ())) {
      GALGAS_syntaxInstructionForGeneration cast_9058_si ((cPtr_syntaxInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (cast_9058_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (209)), GALGAS_string ("syntax signature error; the expected syntax instruction here is the '$").operator_concat (object->mAttribute_mTerminalName.reader_string (SOURCE_FILE_AT_LINE (210)) COMMA_SOURCE_FILE_AT_LINE (210)).operator_concat (GALGAS_string ("$' terminal check") COMMA_SOURCE_FILE_AT_LINE (210)) COMMA_SOURCE_FILE_AT_LINE (209)) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (false) ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (214)) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (false) ;
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_1 (result_bool.operator_not (SOURCE_FILE_AT_LINE (217))) ;
  if (test_1.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("reference syntax instruction is here") COMMA_SOURCE_FILE_AT_LINE (218)) ;
  }
//---
  return result_bool ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_terminalCheckInstructionForGeneration.mSlotID,
                                                categoryReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@nonterminalInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_nonterminalInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                                const GALGAS_semanticInstructionForGeneration & constinArgument_inTestedInstruction,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_bool ; // Returned variable
  const cPtr_nonterminalInstructionForGeneration * object = (const cPtr_nonterminalInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_nonterminalInstructionForGeneration) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_inTestedInstruction.isValid ()) {
    if (constinArgument_inTestedInstruction.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_nonterminalInstructionForGeneration) {
      GALGAS_nonterminalInstructionForGeneration cast_9776_si ((cPtr_nonterminalInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (kIsEqual, object->mAttribute_mNonterminalName.objectCompare (cast_9776_si.reader_mNonterminalName (SOURCE_FILE_AT_LINE (232)))) ;
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_0 (result_bool.operator_not (SOURCE_FILE_AT_LINE (233))) ;
      if (test_0.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (cast_9776_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (234)), GALGAS_string ("syntax signature error; the expected syntax instruction here is the '<").operator_concat (object->mAttribute_mNonterminalName COMMA_SOURCE_FILE_AT_LINE (235)).operator_concat (GALGAS_string (">' nonterminal invocation") COMMA_SOURCE_FILE_AT_LINE (235)) COMMA_SOURCE_FILE_AT_LINE (234)) ;
      }
    }else if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (constinArgument_inTestedInstruction.ptr ())) {
      GALGAS_syntaxInstructionForGeneration cast_10091_si ((cPtr_syntaxInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (cast_10091_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (239)), GALGAS_string ("syntax signature error; the expected syntax instruction here is the '<").operator_concat (object->mAttribute_mNonterminalName COMMA_SOURCE_FILE_AT_LINE (240)).operator_concat (GALGAS_string (">' nonterminal invocation") COMMA_SOURCE_FILE_AT_LINE (240)) COMMA_SOURCE_FILE_AT_LINE (239)) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (false) ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (244)) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (false) ;
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_1 (result_bool.operator_not (SOURCE_FILE_AT_LINE (247))) ;
  if (test_1.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("reference syntax instruction is here") COMMA_SOURCE_FILE_AT_LINE (248)) ;
  }
//---
  return result_bool ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_nonterminalInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_nonterminalInstructionForGeneration.mSlotID,
                                                categoryReader_nonterminalInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_nonterminalInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_nonterminalInstructionForGeneration_compareSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@repeatInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_repeatInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                           const GALGAS_semanticInstructionForGeneration & constinArgument_inTestedInstruction,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_bool ; // Returned variable
  const cPtr_repeatInstructionForGeneration * object = (const cPtr_repeatInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_repeatInstructionForGeneration) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_inTestedInstruction.isValid ()) {
    if (constinArgument_inTestedInstruction.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_repeatInstructionForGeneration) {
      GALGAS_repeatInstructionForGeneration cast_10810_si ((cPtr_repeatInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = function_compareSyntaxSignature (object->mAttribute_m_5F_repeated_5F_instructionList, cast_10810_si.reader_m_5F_repeated_5F_instructionList (SOURCE_FILE_AT_LINE (262)), cast_10810_si.reader_mEndOfRepeatedInstructions (SOURCE_FILE_AT_LINE (262)), inCompiler COMMA_SOURCE_FILE_AT_LINE (262)) ;
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_0 (result_bool.operator_and (GALGAS_bool (kIsNotEqual, object->mAttribute_mListOfSemanticInstructionListForGeneration.reader_length (SOURCE_FILE_AT_LINE (263)).objectCompare (cast_10810_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (263)).reader_length (SOURCE_FILE_AT_LINE (263)))) COMMA_SOURCE_FILE_AT_LINE (263))) ;
      if (test_0.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (cast_10810_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (264)), GALGAS_string ("syntax signature error; the reference 'repeat' instruction has ").operator_concat (object->mAttribute_mListOfSemanticInstructionListForGeneration.reader_length (SOURCE_FILE_AT_LINE (266)).reader_string (SOURCE_FILE_AT_LINE (266)) COMMA_SOURCE_FILE_AT_LINE (266)).operator_concat (GALGAS_string (" 'while' branche(s), but this instruction has ") COMMA_SOURCE_FILE_AT_LINE (267)).operator_concat (cast_10810_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (268)).reader_length (SOURCE_FILE_AT_LINE (268)).reader_string (SOURCE_FILE_AT_LINE (268)) COMMA_SOURCE_FILE_AT_LINE (268)) COMMA_SOURCE_FILE_AT_LINE (264)) ;
        //-------- @assignmentInstructionForGeneration
        result_bool = GALGAS_bool (false) ;
      }
      //-------- @foreachInstructionForGeneration
      cEnumerator_listOfSemanticInstructionListForGeneration enumerator_11517 (object->mAttribute_mListOfSemanticInstructionListForGeneration, true) ;
      cEnumerator_listOfSemanticInstructionListForGeneration enumerator_11583 (cast_10810_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (272)), true) ;
      //--- complex foreach instruction
      bool bool_1 = result_bool.isValidAndTrue () ;
      if (enumerator_11517.hasCurrentObject () && enumerator_11583.hasCurrentObject () && bool_1) {
        while (enumerator_11517.hasCurrentObject () && enumerator_11583.hasCurrentObject () && bool_1) {
          //-------- @assignmentInstructionForGeneration
          result_bool = function_compareSyntaxSignature (enumerator_11517.current_mInstructionList (HERE), enumerator_11583.current_mInstructionList (HERE), enumerator_11583.current_mEndOfInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (273)) ;
          enumerator_11517.gotoNextObject () ;
          enumerator_11583.gotoNextObject () ;
          if (enumerator_11517.hasCurrentObject () && enumerator_11583.hasCurrentObject ()) {
            bool_1 = result_bool.isValidAndTrue () ;
          }
        }
      }
    }else if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (constinArgument_inTestedInstruction.ptr ())) {
      GALGAS_syntaxInstructionForGeneration cast_11786_si ((cPtr_syntaxInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (cast_11786_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (276)), GALGAS_string ("syntax signature error; the expected syntax instruction here is a 'repeat' instruction") COMMA_SOURCE_FILE_AT_LINE (276)) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (false) ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (281)) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (false) ;
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_2 (result_bool.operator_not (SOURCE_FILE_AT_LINE (284))) ;
  if (test_2.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("reference syntax instruction is here") COMMA_SOURCE_FILE_AT_LINE (285)) ;
  }
//---
  return result_bool ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_repeatInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_repeatInstructionForGeneration.mSlotID,
                                                categoryReader_repeatInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_repeatInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_repeatInstructionForGeneration_compareSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@selectInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_selectInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                           const GALGAS_semanticInstructionForGeneration & constinArgument_inTestedInstruction,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_bool ; // Returned variable
  const cPtr_selectInstructionForGeneration * object = (const cPtr_selectInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_selectInstructionForGeneration) ;
  //-------- @structuredCastInstructionForGeneration
  if (constinArgument_inTestedInstruction.isValid ()) {
    if (constinArgument_inTestedInstruction.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_selectInstructionForGeneration) {
      GALGAS_selectInstructionForGeneration cast_12472_si ((cPtr_selectInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (true) ;
      //-------- @ifInstructionForGeneration
      const GALGAS_bool test_0 (result_bool.operator_and (GALGAS_bool (kIsNotEqual, object->mAttribute_mListOfSemanticInstructionListForGeneration.reader_length (SOURCE_FILE_AT_LINE (300)).objectCompare (cast_12472_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (300)).reader_length (SOURCE_FILE_AT_LINE (300)))) COMMA_SOURCE_FILE_AT_LINE (300))) ;
      if (test_0.isValidAndTrue ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (cast_12472_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (301)), GALGAS_string ("syntax signature error; the reference 'select' instruction has ").operator_concat (object->mAttribute_mListOfSemanticInstructionListForGeneration.reader_length (SOURCE_FILE_AT_LINE (303)).reader_string (SOURCE_FILE_AT_LINE (303)) COMMA_SOURCE_FILE_AT_LINE (303)).operator_concat (GALGAS_string (" 'while' branche(s), but this instruction has ") COMMA_SOURCE_FILE_AT_LINE (304)).operator_concat (cast_12472_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (305)).reader_length (SOURCE_FILE_AT_LINE (305)).reader_string (SOURCE_FILE_AT_LINE (305)) COMMA_SOURCE_FILE_AT_LINE (305)) COMMA_SOURCE_FILE_AT_LINE (301)) ;
        //-------- @assignmentInstructionForGeneration
        result_bool = GALGAS_bool (false) ;
      }
      //-------- @foreachInstructionForGeneration
      cEnumerator_listOfSemanticInstructionListForGeneration enumerator_13065 (object->mAttribute_mListOfSemanticInstructionListForGeneration, true) ;
      cEnumerator_listOfSemanticInstructionListForGeneration enumerator_13131 (cast_12472_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (309)), true) ;
      //--- complex foreach instruction
      bool bool_1 = result_bool.isValidAndTrue () ;
      if (enumerator_13065.hasCurrentObject () && enumerator_13131.hasCurrentObject () && bool_1) {
        while (enumerator_13065.hasCurrentObject () && enumerator_13131.hasCurrentObject () && bool_1) {
          //-------- @assignmentInstructionForGeneration
          result_bool = function_compareSyntaxSignature (enumerator_13065.current_mInstructionList (HERE), enumerator_13131.current_mInstructionList (HERE), enumerator_13131.current_mEndOfInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (310)) ;
          enumerator_13065.gotoNextObject () ;
          enumerator_13131.gotoNextObject () ;
          if (enumerator_13065.hasCurrentObject () && enumerator_13131.hasCurrentObject ()) {
            bool_1 = result_bool.isValidAndTrue () ;
          }
        }
      }
    }else if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (constinArgument_inTestedInstruction.ptr ())) {
      GALGAS_syntaxInstructionForGeneration cast_13334_si ((cPtr_syntaxInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (cast_13334_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (313)), GALGAS_string ("syntax signature error; the expected syntax instruction here is a 'select' instruction") COMMA_SOURCE_FILE_AT_LINE (313)) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (false) ;
    }else{
      //-------- @errorInstructionForGeneration
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (318)) ;
      //-------- @assignmentInstructionForGeneration
      result_bool = GALGAS_bool (false) ;
    }
  }
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_2 (result_bool.operator_not (SOURCE_FILE_AT_LINE (321))) ;
  if (test_2.isValidAndTrue ()) {
    //-------- @errorInstructionForGeneration
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("reference syntax instruction is here") COMMA_SOURCE_FILE_AT_LINE (322)) ;
  }
//---
  return result_bool ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_selectInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_selectInstructionForGeneration.mSlotID,
                                                categoryReader_selectInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_selectInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_selectInstructionForGeneration_compareSyntaxInstruction, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


