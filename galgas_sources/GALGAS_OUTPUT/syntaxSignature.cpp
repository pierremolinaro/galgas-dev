//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'syntaxSignature.cpp'                         *
//                        Generated by version 2.4.7                         *
//                       july 6th, 2013, at 9h55'30"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "syntaxSignature.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "galgas_cli_options.h"
#include "grammarLL1grammar.h"
#include "syntaxSLRgrammar.h"
#include "lexiqueLL1grammar.h"
#include "semanticsSLRgrammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "syntaxSignature.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                Function 'syntaxSignatureOfInstructionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_semanticInstructionListForGeneration function_syntaxSignatureOfInstructionList (const GALGAS_string & constinArgument_inPosfix,
                                                                                       const GALGAS_semanticInstructionListForGeneration & constinArgument_inInstructionList,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticInstructionListForGeneration result_outResult ; // Returned variable
  result_outResult = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (42)) ;
  cEnumerator_semanticInstructionListForGeneration enumerator_2406 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_2406.hasCurrentObject ()) {
    callCategoryMethod_appendSyntaxSignature ((const cPtr_semanticInstructionForGeneration *) enumerator_2406.current_mInstruction (HERE).ptr (), constinArgument_inPosfix, result_outResult, inCompiler COMMA_SOURCE_FILE_AT_LINE (44)) ;
    enumerator_2406.gotoNextObject () ;
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_syntaxSignatureOfInstructionList [3] = {
  & kTypeDescriptor_GALGAS_string,
  & kTypeDescriptor_GALGAS_semanticInstructionListForGeneration,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_syntaxSignatureOfInstructionList (C_Compiler * inCompiler,
                                                                                 const cObjectArray & inEffectiveParameterArray,
                                                                                 const GALGAS_location & inErrorLocation
                                                                                 COMMA_LOCATION_ARGS) {
  const GALGAS_string operand0 = GALGAS_string::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  const GALGAS_semanticInstructionListForGeneration operand1 = GALGAS_semanticInstructionListForGeneration::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_syntaxSignatureOfInstructionList (operand0, operand1, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_syntaxSignatureOfInstructionList ("syntaxSignatureOfInstructionList",
                                                                                  functionWithGenericHeader_syntaxSignatureOfInstructionList,
                                                                                  & kTypeDescriptor_GALGAS_semanticInstructionListForGeneration,
                                                                                  2,
                                                                                  functionArgs_syntaxSignatureOfInstructionList) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'compareSyntaxSignature'                     *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_bool function_compareSyntaxSignature (const GALGAS_semanticInstructionListForGeneration & constinArgument_inReferenceSignature,
                                             const GALGAS_semanticInstructionListForGeneration & constinArgument_inTestedSignature,
                                             const GALGAS_location & constinArgument_inErrorLocation,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outOk ; // Returned variable
  result_outOk = GALGAS_bool (true) ;
  cEnumerator_semanticInstructionListForGeneration enumerator_7392 (constinArgument_inReferenceSignature, kEnumeration_up) ;
  cEnumerator_semanticInstructionListForGeneration enumerator_7427 (constinArgument_inTestedSignature, kEnumeration_up) ;
  bool bool_0 = result_outOk.isValidAndTrue () ;
  if (enumerator_7392.hasCurrentObject () && enumerator_7427.hasCurrentObject () && bool_0) {
    while (enumerator_7392.hasCurrentObject () && enumerator_7427.hasCurrentObject () && bool_0) {
      result_outOk = callCategoryReader_compareSyntaxInstruction ((const cPtr_semanticInstructionForGeneration *) enumerator_7392.current_mInstruction (HERE).ptr (), enumerator_7427.current_mInstruction (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (175)) ;
      enumerator_7392.gotoNextObject () ;
      enumerator_7427.gotoNextObject () ;
      if (enumerator_7392.hasCurrentObject () && enumerator_7427.hasCurrentObject ()) {
        bool_0 = result_outOk.isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_1 = result_outOk.operator_and (GALGAS_bool (kIsStrictInf, constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (177)).objectCompare (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (177)))) COMMA_SOURCE_FILE_AT_LINE (177)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_semanticInstructionForGeneration var_instruction = constinArgument_inTestedSignature.reader_mInstructionAtIndex (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (178)), inCompiler COMMA_SOURCE_FILE_AT_LINE (178)) ;
    if (var_instruction.isValid ()) {
      if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (var_instruction.ptr ())) {
        GALGAS_syntaxInstructionForGeneration cast_7817_si ((cPtr_syntaxInstructionForGeneration *) var_instruction.ptr ()) ;
        inCompiler->emitSemanticError (cast_7817_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (181)), GALGAS_string ("syntax signature error, exceeding instruction; this branch has more syntax instructions than reference branch") COMMA_SOURCE_FILE_AT_LINE (181)) ;
      }else{
        inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (185)) ;
      }
    }
  }else if (kBoolFalse == test_1) {
    const enumGalgasBool test_2 = result_outOk.operator_and (GALGAS_bool (kIsStrictSup, constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (187)).objectCompare (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (187)))) COMMA_SOURCE_FILE_AT_LINE (187)).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("syntax signature error, missing instruction; this branch has less syntax instructions than reference branch") COMMA_SOURCE_FILE_AT_LINE (188)) ;
      GALGAS_semanticInstructionForGeneration var_instruction = constinArgument_inReferenceSignature.reader_mInstructionAtIndex (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (191)), inCompiler COMMA_SOURCE_FILE_AT_LINE (191)) ;
      if (var_instruction.isValid ()) {
        if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (var_instruction.ptr ())) {
          GALGAS_syntaxInstructionForGeneration cast_8482_si ((cPtr_syntaxInstructionForGeneration *) var_instruction.ptr ()) ;
          inCompiler->emitSemanticError (cast_8482_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (194)), GALGAS_string ("this is the syntax instruction in reference branch that corresponds to the first missing instruction") COMMA_SOURCE_FILE_AT_LINE (194)) ;
        }else{
          inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (198)) ;
        }
      }
    }
  }
//---
  return result_outOk ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_compareSyntaxSignature [4] = {
  & kTypeDescriptor_GALGAS_semanticInstructionListForGeneration,
  & kTypeDescriptor_GALGAS_semanticInstructionListForGeneration,
  & kTypeDescriptor_GALGAS_location,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_compareSyntaxSignature (C_Compiler * inCompiler,
                                                                       const cObjectArray & inEffectiveParameterArray,
                                                                       const GALGAS_location & inErrorLocation
                                                                       COMMA_LOCATION_ARGS) {
  const GALGAS_semanticInstructionListForGeneration operand0 = GALGAS_semanticInstructionListForGeneration::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  const GALGAS_semanticInstructionListForGeneration operand1 = GALGAS_semanticInstructionListForGeneration::extractObject (inEffectiveParameterArray.objectAtIndex (1 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  const GALGAS_location operand2 = GALGAS_location::extractObject (inEffectiveParameterArray.objectAtIndex (2 COMMA_HERE), inCompiler, inErrorLocation COMMA_THERE) ;
  return function_compareSyntaxSignature (operand0, operand1, operand2, inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_compareSyntaxSignature ("compareSyntaxSignature",
                                                                        functionWithGenericHeader_compareSyntaxSignature,
                                                                        & kTypeDescriptor_GALGAS_bool,
                                                                        3,
                                                                        functionArgs_compareSyntaxSignature) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@semanticInstructionForGeneration appendSyntaxSignature' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticInstructionForGeneration_appendSyntaxSignature> gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_appendSyntaxSignature (const PMSInt32 inClassIndex,
                                                categoryMethodSignature_semanticInstructionForGeneration_appendSyntaxSignature inMethod) {
  gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void callCategoryMethod_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                               const GALGAS_string constin_inPosfix,
                                               GALGAS_semanticInstructionListForGeneration & io_ioInstructionListForGeneration,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticInstructionForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_semanticInstructionForGeneration_appendSyntaxSignature f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.count ()) {
      f = gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.count ()) {
           f = gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inPosfix, io_ioInstructionListForGeneration, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*

static void categoryMethod_semanticInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * /* inObject */,
                                                                                   const GALGAS_string /* constinArgument_inPosfix */,
                                                                                   GALGAS_semanticInstructionListForGeneration & /* ioArgument_ioInstructionListForGeneration */,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_semanticInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_semanticInstructionForGeneration.mSlotID,
                                             categoryMethod_semanticInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_semanticInstructionForGeneration_appendSyntaxSignature (void) {
  gCategoryMethodTable_semanticInstructionForGeneration_appendSyntaxSignature.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_semanticInstructionForGeneration_appendSyntaxSignature,
                                                                                   freeCategoryMethod_semanticInstructionForGeneration_appendSyntaxSignature) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@nonterminalInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_nonterminalInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                      const GALGAS_string constinArgument_inPosfix,
                                                                                      GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_nonterminalInstructionForGeneration * object = (const cPtr_nonterminalInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_nonterminalInstructionForGeneration) ;
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_nonterminalInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mNonterminalName, constinArgument_inPosfix, GALGAS_actualParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (58)) COMMA_SOURCE_FILE_AT_LINE (54)) COMMA_SOURCE_FILE_AT_LINE (54)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_nonterminalInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_nonterminalInstructionForGeneration.mSlotID,
                                             categoryMethod_nonterminalInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nonterminalInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_nonterminalInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@terminalCheckInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                        const GALGAS_string /* constinArgument_inPosfix */,
                                                                                        GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_terminalCheckInstructionForGeneration * object = (const cPtr_terminalCheckInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_terminalCheckInstructionForGeneration) ;
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_terminalCheckInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mTerminalName, object->mAttribute_mLexiqueIdentifier, GALGAS_terminalCheckAssignementList::constructor_emptyList (SOURCE_FILE_AT_LINE (72)), object->mAttribute_mIndexingKeyList COMMA_SOURCE_FILE_AT_LINE (68)) COMMA_SOURCE_FILE_AT_LINE (68)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_terminalCheckInstructionForGeneration.mSlotID,
                                             categoryMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_terminalCheckInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@repeatInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_repeatInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                 const GALGAS_string constinArgument_inPosfix,
                                                                                 GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_repeatInstructionForGeneration * object = (const cPtr_repeatInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_repeatInstructionForGeneration) ;
  GALGAS_semanticInstructionListForGeneration var_repeated_5F_instructionList = function_syntaxSignatureOfInstructionList (constinArgument_inPosfix, object->mAttribute_m_5F_repeated_5F_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (83)) ;
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (84)) ;
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_4017 (object->mAttribute_mListOfSemanticInstructionListForGeneration, kEnumeration_up) ;
  while (enumerator_4017.hasCurrentObject ()) {
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (function_syntaxSignatureOfInstructionList (constinArgument_inPosfix, enumerator_4017.current_mInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (87)), enumerator_4017.current_mEndOfInstructionList (HERE) COMMA_SOURCE_FILE_AT_LINE (86)) ;
    enumerator_4017.gotoNextObject () ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_repeatInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mSyntaxComponentName, object->mAttribute_mChoiceIndex, var_repeated_5F_instructionList, object->mAttribute_mEndOfRepeatedInstructions, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (92)) COMMA_SOURCE_FILE_AT_LINE (92)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_repeatInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_repeatInstructionForGeneration.mSlotID,
                                             categoryMethod_repeatInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_repeatInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_repeatInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@selectInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_selectInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                 const GALGAS_string constinArgument_inPosfix,
                                                                                 GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_selectInstructionForGeneration * object = (const cPtr_selectInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_selectInstructionForGeneration) ;
  GALGAS_listOfSemanticInstructionListForGeneration var_listOfSemanticInstructionListForGeneration = GALGAS_listOfSemanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (108)) ;
  cEnumerator_listOfSemanticInstructionListForGeneration enumerator_4872 (object->mAttribute_mListOfSemanticInstructionListForGeneration, kEnumeration_up) ;
  while (enumerator_4872.hasCurrentObject ()) {
    var_listOfSemanticInstructionListForGeneration.addAssign_operation (function_syntaxSignatureOfInstructionList (constinArgument_inPosfix, enumerator_4872.current_mInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (111)), enumerator_4872.current_mEndOfInstructionList (HERE) COMMA_SOURCE_FILE_AT_LINE (110)) ;
    enumerator_4872.gotoNextObject () ;
  }
  ioArgument_ioInstructionListForGeneration.addAssign_operation (GALGAS_selectInstructionForGeneration::constructor_new (object->mAttribute_mInstructionLocation, object->mAttribute_mSyntaxComponentName, object->mAttribute_mChoiceIndex, var_listOfSemanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (115)) COMMA_SOURCE_FILE_AT_LINE (115)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_selectInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_selectInstructionForGeneration.mSlotID,
                                             categoryMethod_selectInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_selectInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_selectInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseRewindInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseRewindInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                      const GALGAS_string constinArgument_inPosfix,
                                                                                      GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseRewindInstructionForGeneration * object = (const cPtr_parseRewindInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseRewindInstructionForGeneration) ;
  GALGAS_semanticInstructionListForGeneration var_instructionList ;
  GALGAS_location joker_5635_0 ; // Joker input parameter
  object->mAttribute_mListOfSemanticInstructionListForGeneration.method_first (var_instructionList, joker_5635_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (130)) ;
  ioArgument_ioInstructionListForGeneration.dotAssign_operation (function_syntaxSignatureOfInstructionList (constinArgument_inPosfix, var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (131)) COMMA_SOURCE_FILE_AT_LINE (131)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseRewindInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_parseRewindInstructionForGeneration.mSlotID,
                                             categoryMethod_parseRewindInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseRewindInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_parseRewindInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseLoopInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseLoopInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                    const GALGAS_string constinArgument_inPosfix,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseLoopInstructionForGeneration * object = (const cPtr_parseLoopInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseLoopInstructionForGeneration) ;
  ioArgument_ioInstructionListForGeneration.dotAssign_operation (function_syntaxSignatureOfInstructionList (constinArgument_inPosfix, object->mAttribute_mInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (140)) COMMA_SOURCE_FILE_AT_LINE (140)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseLoopInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_parseLoopInstructionForGeneration.mSlotID,
                                             categoryMethod_parseLoopInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseLoopInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_parseLoopInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@parseWhenInstructionForGeneration appendSyntaxSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_parseWhenInstructionForGeneration_appendSyntaxSignature (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                    const GALGAS_string constinArgument_inPosfix,
                                                                                    GALGAS_semanticInstructionListForGeneration & ioArgument_ioInstructionListForGeneration,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_parseWhenInstructionForGeneration * object = (const cPtr_parseWhenInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_parseWhenInstructionForGeneration) ;
  ioArgument_ioInstructionListForGeneration.dotAssign_operation (function_syntaxSignatureOfInstructionList (constinArgument_inPosfix, object->mAttribute_mInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (149)) COMMA_SOURCE_FILE_AT_LINE (149)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_parseWhenInstructionForGeneration_appendSyntaxSignature (void) {
  enterCategoryMethod_appendSyntaxSignature (kTypeDescriptor_GALGAS_parseWhenInstructionForGeneration.mSlotID,
                                             categoryMethod_parseWhenInstructionForGeneration_appendSyntaxSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_parseWhenInstructionForGeneration_appendSyntaxSignature (defineCategoryMethod_parseWhenInstructionForGeneration_appendSyntaxSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@semanticInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_semanticInstructionForGeneration_compareSyntaxInstruction> gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction ;

//---------------------------------------------------------------------------*

void enterCategoryReader_compareSyntaxInstruction (const PMSInt32 inClassIndex,
                                                   categoryReaderSignature_semanticInstructionForGeneration_compareSyntaxInstruction inReader) {
  gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                         const GALGAS_semanticInstructionForGeneration & in_inTestedInstruction,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticInstructionForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_semanticInstructionForGeneration_compareSyntaxInstruction f = NULL ;
    if (classIndex < gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.count ()) {
      f = gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.count ()) {
           f = gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inTestedInstruction, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_semanticInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * /* inObject */,
                                                                                             const GALGAS_semanticInstructionForGeneration & /* constinArgument_inTestedInstruction */,
                                                                                             C_Compiler * /* inCompiler */
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outOk ; // Returned variable
  result_outOk = GALGAS_bool (true) ;
//---
  return result_outOk ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_semanticInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_semanticInstructionForGeneration.mSlotID,
                                                categoryReader_semanticInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_semanticInstructionForGeneration_compareSyntaxInstruction (void) {
  gCategoryReaderTable_semanticInstructionForGeneration_compareSyntaxInstruction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_semanticInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_semanticInstructionForGeneration_compareSyntaxInstruction,
                                                                                      freeCategoryReader_semanticInstructionForGeneration_compareSyntaxInstruction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@terminalCheckInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                                  const GALGAS_semanticInstructionForGeneration & constinArgument_inTestedInstruction,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outOk ; // Returned variable
  const cPtr_terminalCheckInstructionForGeneration * object = (const cPtr_terminalCheckInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_terminalCheckInstructionForGeneration) ;
  if (constinArgument_inTestedInstruction.isValid ()) {
    if (constinArgument_inTestedInstruction.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_terminalCheckInstructionForGeneration) {
      GALGAS_terminalCheckInstructionForGeneration cast_9056_si ((cPtr_terminalCheckInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      result_outOk = GALGAS_bool (kIsEqual, object->mAttribute_mTerminalName.reader_string (SOURCE_FILE_AT_LINE (211)).objectCompare (cast_9056_si.reader_mTerminalName (SOURCE_FILE_AT_LINE (211)).reader_string (SOURCE_FILE_AT_LINE (211)))) ;
      const enumGalgasBool test_0 = result_outOk.operator_not (SOURCE_FILE_AT_LINE (212)).boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->emitSemanticError (cast_9056_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (213)), GALGAS_string ("syntax signature error; the expected syntax instruction here is the '$").operator_concat (object->mAttribute_mTerminalName.reader_string (SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (214)).operator_concat (GALGAS_string ("$' terminal check") COMMA_SOURCE_FILE_AT_LINE (214)) COMMA_SOURCE_FILE_AT_LINE (213)) ;
      }
    }else if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (constinArgument_inTestedInstruction.ptr ())) {
      GALGAS_syntaxInstructionForGeneration cast_9372_si ((cPtr_syntaxInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      inCompiler->emitSemanticError (cast_9372_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (218)), GALGAS_string ("syntax signature error; the expected syntax instruction here is the '$").operator_concat (object->mAttribute_mTerminalName.reader_string (SOURCE_FILE_AT_LINE (219)) COMMA_SOURCE_FILE_AT_LINE (219)).operator_concat (GALGAS_string ("$' terminal check") COMMA_SOURCE_FILE_AT_LINE (219)) COMMA_SOURCE_FILE_AT_LINE (218)) ;
      result_outOk = GALGAS_bool (false) ;
    }else{
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (223)) ;
      result_outOk = GALGAS_bool (false) ;
    }
  }
  const enumGalgasBool test_1 = result_outOk.operator_not (SOURCE_FILE_AT_LINE (226)).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("reference syntax instruction is here") COMMA_SOURCE_FILE_AT_LINE (227)) ;
  }
//---
  return result_outOk ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_terminalCheckInstructionForGeneration.mSlotID,
                                                categoryReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_terminalCheckInstructionForGeneration_compareSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@nonterminalInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_nonterminalInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                                const GALGAS_semanticInstructionForGeneration & constinArgument_inTestedInstruction,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outOk ; // Returned variable
  const cPtr_nonterminalInstructionForGeneration * object = (const cPtr_nonterminalInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_nonterminalInstructionForGeneration) ;
  if (constinArgument_inTestedInstruction.isValid ()) {
    if (constinArgument_inTestedInstruction.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_nonterminalInstructionForGeneration) {
      GALGAS_nonterminalInstructionForGeneration cast_10090_si ((cPtr_nonterminalInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      result_outOk = GALGAS_bool (kIsEqual, object->mAttribute_mNonterminalName.objectCompare (cast_10090_si.reader_mNonterminalName (SOURCE_FILE_AT_LINE (241)))) ;
      const enumGalgasBool test_0 = result_outOk.operator_not (SOURCE_FILE_AT_LINE (242)).boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->emitSemanticError (cast_10090_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (243)), GALGAS_string ("syntax signature error; the expected syntax instruction here is the '<").operator_concat (object->mAttribute_mNonterminalName COMMA_SOURCE_FILE_AT_LINE (244)).operator_concat (GALGAS_string (">' nonterminal invocation") COMMA_SOURCE_FILE_AT_LINE (244)) COMMA_SOURCE_FILE_AT_LINE (243)) ;
      }
    }else if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (constinArgument_inTestedInstruction.ptr ())) {
      GALGAS_syntaxInstructionForGeneration cast_10405_si ((cPtr_syntaxInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      inCompiler->emitSemanticError (cast_10405_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (248)), GALGAS_string ("syntax signature error; the expected syntax instruction here is the '<").operator_concat (object->mAttribute_mNonterminalName COMMA_SOURCE_FILE_AT_LINE (249)).operator_concat (GALGAS_string (">' nonterminal invocation") COMMA_SOURCE_FILE_AT_LINE (249)) COMMA_SOURCE_FILE_AT_LINE (248)) ;
      result_outOk = GALGAS_bool (false) ;
    }else{
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (253)) ;
      result_outOk = GALGAS_bool (false) ;
    }
  }
  const enumGalgasBool test_1 = result_outOk.operator_not (SOURCE_FILE_AT_LINE (256)).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("reference syntax instruction is here") COMMA_SOURCE_FILE_AT_LINE (257)) ;
  }
//---
  return result_outOk ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_nonterminalInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_nonterminalInstructionForGeneration.mSlotID,
                                                categoryReader_nonterminalInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_nonterminalInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_nonterminalInstructionForGeneration_compareSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@repeatInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_repeatInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                           const GALGAS_semanticInstructionForGeneration & constinArgument_inTestedInstruction,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outOk ; // Returned variable
  const cPtr_repeatInstructionForGeneration * object = (const cPtr_repeatInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_repeatInstructionForGeneration) ;
  if (constinArgument_inTestedInstruction.isValid ()) {
    if (constinArgument_inTestedInstruction.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_repeatInstructionForGeneration) {
      GALGAS_repeatInstructionForGeneration cast_11124_si ((cPtr_repeatInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      result_outOk = function_compareSyntaxSignature (object->mAttribute_m_5F_repeated_5F_instructionList, cast_11124_si.reader_m_5F_repeated_5F_instructionList (SOURCE_FILE_AT_LINE (271)), cast_11124_si.reader_mEndOfRepeatedInstructions (SOURCE_FILE_AT_LINE (271)), inCompiler COMMA_SOURCE_FILE_AT_LINE (271)) ;
      const enumGalgasBool test_0 = result_outOk.operator_and (GALGAS_bool (kIsNotEqual, object->mAttribute_mListOfSemanticInstructionListForGeneration.reader_length (SOURCE_FILE_AT_LINE (272)).objectCompare (cast_11124_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (272)).reader_length (SOURCE_FILE_AT_LINE (272)))) COMMA_SOURCE_FILE_AT_LINE (272)).boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->emitSemanticError (cast_11124_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (273)), GALGAS_string ("syntax signature error; the reference 'repeat' instruction has ").operator_concat (object->mAttribute_mListOfSemanticInstructionListForGeneration.reader_length (SOURCE_FILE_AT_LINE (275)).reader_string (SOURCE_FILE_AT_LINE (275)) COMMA_SOURCE_FILE_AT_LINE (275)).operator_concat (GALGAS_string (" 'while' branche(s), but this instruction has ") COMMA_SOURCE_FILE_AT_LINE (276)).operator_concat (cast_11124_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (277)).reader_length (SOURCE_FILE_AT_LINE (277)).reader_string (SOURCE_FILE_AT_LINE (277)) COMMA_SOURCE_FILE_AT_LINE (277)) COMMA_SOURCE_FILE_AT_LINE (273)) ;
        result_outOk = GALGAS_bool (false) ;
      }
      cEnumerator_listOfSemanticInstructionListForGeneration enumerator_11831 (object->mAttribute_mListOfSemanticInstructionListForGeneration, kEnumeration_up) ;
      cEnumerator_listOfSemanticInstructionListForGeneration enumerator_11897 (cast_11124_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (281)), kEnumeration_up) ;
      bool bool_1 = result_outOk.isValidAndTrue () ;
      if (enumerator_11831.hasCurrentObject () && enumerator_11897.hasCurrentObject () && bool_1) {
        while (enumerator_11831.hasCurrentObject () && enumerator_11897.hasCurrentObject () && bool_1) {
          result_outOk = function_compareSyntaxSignature (enumerator_11831.current_mInstructionList (HERE), enumerator_11897.current_mInstructionList (HERE), enumerator_11897.current_mEndOfInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (282)) ;
          enumerator_11831.gotoNextObject () ;
          enumerator_11897.gotoNextObject () ;
          if (enumerator_11831.hasCurrentObject () && enumerator_11897.hasCurrentObject ()) {
            bool_1 = result_outOk.isValidAndTrue () ;
          }
        }
      }
    }else if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (constinArgument_inTestedInstruction.ptr ())) {
      GALGAS_syntaxInstructionForGeneration cast_12100_si ((cPtr_syntaxInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      inCompiler->emitSemanticError (cast_12100_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (285)), GALGAS_string ("syntax signature error; the expected syntax instruction here is a 'repeat' instruction") COMMA_SOURCE_FILE_AT_LINE (285)) ;
      result_outOk = GALGAS_bool (false) ;
    }else{
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (290)) ;
      result_outOk = GALGAS_bool (false) ;
    }
  }
  const enumGalgasBool test_2 = result_outOk.operator_not (SOURCE_FILE_AT_LINE (293)).boolEnum () ;
  if (kBoolTrue == test_2) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("reference syntax instruction is here") COMMA_SOURCE_FILE_AT_LINE (294)) ;
  }
//---
  return result_outOk ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_repeatInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_repeatInstructionForGeneration.mSlotID,
                                                categoryReader_repeatInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_repeatInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_repeatInstructionForGeneration_compareSyntaxInstruction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@selectInstructionForGeneration compareSyntaxInstruction'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_selectInstructionForGeneration_compareSyntaxInstruction (const cPtr_semanticInstructionForGeneration * inObject,
                                                                                           const GALGAS_semanticInstructionForGeneration & constinArgument_inTestedInstruction,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outOk ; // Returned variable
  const cPtr_selectInstructionForGeneration * object = (const cPtr_selectInstructionForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_selectInstructionForGeneration) ;
  if (constinArgument_inTestedInstruction.isValid ()) {
    if (constinArgument_inTestedInstruction.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_selectInstructionForGeneration) {
      GALGAS_selectInstructionForGeneration cast_12786_si ((cPtr_selectInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      result_outOk = GALGAS_bool (true) ;
      const enumGalgasBool test_0 = result_outOk.operator_and (GALGAS_bool (kIsNotEqual, object->mAttribute_mListOfSemanticInstructionListForGeneration.reader_length (SOURCE_FILE_AT_LINE (309)).objectCompare (cast_12786_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (309)).reader_length (SOURCE_FILE_AT_LINE (309)))) COMMA_SOURCE_FILE_AT_LINE (309)).boolEnum () ;
      if (kBoolTrue == test_0) {
        inCompiler->emitSemanticError (cast_12786_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (310)), GALGAS_string ("syntax signature error; the reference 'select' instruction has ").operator_concat (object->mAttribute_mListOfSemanticInstructionListForGeneration.reader_length (SOURCE_FILE_AT_LINE (312)).reader_string (SOURCE_FILE_AT_LINE (312)) COMMA_SOURCE_FILE_AT_LINE (312)).operator_concat (GALGAS_string (" 'while' branche(s), but this instruction has ") COMMA_SOURCE_FILE_AT_LINE (313)).operator_concat (cast_12786_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (314)).reader_length (SOURCE_FILE_AT_LINE (314)).reader_string (SOURCE_FILE_AT_LINE (314)) COMMA_SOURCE_FILE_AT_LINE (314)) COMMA_SOURCE_FILE_AT_LINE (310)) ;
        result_outOk = GALGAS_bool (false) ;
      }
      cEnumerator_listOfSemanticInstructionListForGeneration enumerator_13379 (object->mAttribute_mListOfSemanticInstructionListForGeneration, kEnumeration_up) ;
      cEnumerator_listOfSemanticInstructionListForGeneration enumerator_13445 (cast_12786_si.reader_mListOfSemanticInstructionListForGeneration (SOURCE_FILE_AT_LINE (318)), kEnumeration_up) ;
      bool bool_1 = result_outOk.isValidAndTrue () ;
      if (enumerator_13379.hasCurrentObject () && enumerator_13445.hasCurrentObject () && bool_1) {
        while (enumerator_13379.hasCurrentObject () && enumerator_13445.hasCurrentObject () && bool_1) {
          result_outOk = function_compareSyntaxSignature (enumerator_13379.current_mInstructionList (HERE), enumerator_13445.current_mInstructionList (HERE), enumerator_13445.current_mEndOfInstructionList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (319)) ;
          enumerator_13379.gotoNextObject () ;
          enumerator_13445.gotoNextObject () ;
          if (enumerator_13379.hasCurrentObject () && enumerator_13445.hasCurrentObject ()) {
            bool_1 = result_outOk.isValidAndTrue () ;
          }
        }
      }
    }else if (NULL != dynamic_cast <const cPtr_syntaxInstructionForGeneration *> (constinArgument_inTestedInstruction.ptr ())) {
      GALGAS_syntaxInstructionForGeneration cast_13648_si ((cPtr_syntaxInstructionForGeneration *) constinArgument_inTestedInstruction.ptr ()) ;
      inCompiler->emitSemanticError (cast_13648_si.reader_mInstructionLocation (SOURCE_FILE_AT_LINE (322)), GALGAS_string ("syntax signature error; the expected syntax instruction here is a 'select' instruction") COMMA_SOURCE_FILE_AT_LINE (322)) ;
      result_outOk = GALGAS_bool (false) ;
    }else{
      inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("internal error") COMMA_SOURCE_FILE_AT_LINE (327)) ;
      result_outOk = GALGAS_bool (false) ;
    }
  }
  const enumGalgasBool test_2 = result_outOk.operator_not (SOURCE_FILE_AT_LINE (330)).boolEnum () ;
  if (kBoolTrue == test_2) {
    inCompiler->emitSemanticError (object->mAttribute_mInstructionLocation, GALGAS_string ("reference syntax instruction is here") COMMA_SOURCE_FILE_AT_LINE (331)) ;
  }
//---
  return result_outOk ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_selectInstructionForGeneration_compareSyntaxInstruction (void) {
  enterCategoryReader_compareSyntaxInstruction (kTypeDescriptor_GALGAS_selectInstructionForGeneration.mSlotID,
                                                categoryReader_selectInstructionForGeneration_compareSyntaxInstruction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_selectInstructionForGeneration_compareSyntaxInstruction (defineCategoryReader_selectInstructionForGeneration_compareSyntaxInstruction, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


