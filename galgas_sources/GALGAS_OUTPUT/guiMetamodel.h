//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'guiMetamodel.h'                            *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       june 6th, 2007, at 23h37'3"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef guiMetamodel_METAMODEL_DEFINED
#define guiMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"
#include "commonSemantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

sint32 _metamodel_index_for_guiMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_guiAttributeList ;
class GGS_guiAttribute ;
class cPtr_guiAttribute ;
class GGS_guiLabelList ;
class GGS_guiLabel ;
class cPtr_guiLabel ;
class GGS_guiComponentRootList ;
class GGS_guiComponentRoot ;
class cPtr_guiComponentRoot ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_guiAttribute'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_guiAttribute : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_guiAttribute constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_guiAttribute * getPtr (void) const {
    return (cPtr_guiAttribute *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_guiAttribute * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_guiAttribute * operator () (void) const {
      return (cPtr_guiAttribute *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         list '@guiAttributeList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_guiAttributeList : public AC_galgas_list {
  public : typedef cPtr_guiAttribute element_type ;
//--- Constructor 'emptyList'
  public : static GGS_guiAttributeList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_guiAttributeList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_guiAttributeList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_guiAttribute & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_guiAttribute & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_guiAttribute & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_guiAttribute & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_guiAttribute & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_guiAttributeList _operator_concat (const GGS_guiAttributeList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_guiAttribute & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_guiLabel'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_guiLabel : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_guiLabel constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_guiLabel * getPtr (void) const {
    return (cPtr_guiLabel *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mAttribute1 (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mAttribute2 (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_guiLabel * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_guiLabel * operator () (void) const {
      return (cPtr_guiLabel *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@guiLabelList'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_guiLabelList : public AC_galgas_list {
  public : typedef cPtr_guiLabel element_type ;
//--- Constructor 'emptyList'
  public : static GGS_guiLabelList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_guiLabelList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_guiLabelList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_guiLabel & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_guiLabel & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_guiLabel & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_guiLabel & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_guiLabel & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_guiLabelList _operator_concat (const GGS_guiLabelList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_guiLabel & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_guiComponentRoot'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_guiComponentRoot : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_guiComponentRoot constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_guiAttributeList & argument_2,
                                const GGS_guiLabelList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_guiComponentRoot * getPtr (void) const {
    return (cPtr_guiComponentRoot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mGUIName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mGUIClass (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_guiAttributeList  reader_mAttributes (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_guiLabelList  reader_mLabels (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_guiComponentRoot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_guiComponentRoot * operator () (void) const {
      return (cPtr_guiComponentRoot *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@guiComponentRootList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_guiComponentRootList : public AC_galgas_list {
  public : typedef cPtr_guiComponentRoot element_type ;
//--- Constructor 'emptyList'
  public : static GGS_guiComponentRootList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_guiComponentRootList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_guiAttributeList & argument_2,
                                const GGS_guiLabelList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_guiComponentRootList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_guiComponentRoot & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_guiComponentRoot & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_guiComponentRoot & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_guiComponentRoot & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_guiComponentRoot & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_guiComponentRootList _operator_concat (const GGS_guiComponentRootList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_guiAttributeList & argument_2,
                                const GGS_guiLabelList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_guiAttributeList & argument_2,
                                const GGS_guiLabelList & argument_3) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_guiAttributeList & argument_2,
                                const GGS_guiLabelList & argument_3) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_guiComponentRoot & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@guiAttributeList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_guiAttribute : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mKey ;
  public : GGS_lstring  mValue ;
//--- Constructor
  public : cPtr_guiAttribute (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_guiAttribute * nextObject (void) const {
    return (cPtr_guiAttribute *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_guiAttribute * previousObject (void) const {
    return (cPtr_guiAttribute *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (void) const ;

  public : static sint32 _metamodelComponentIndexForClass (void) ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (void) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (void) const ;

  public : static sint32 _metamodelClassIDForClass (void) ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_guiAttribute * _cloneObject (void) const ;

//--- Super Class Metamodel Component Index
  public : virtual sint32 _superClassMetamodelComponentIndex (void) const ;

//--- Friend class declarations
  friend class GGS_guiAttributeList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@guiLabelList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_guiLabel : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mAttribute1 ;
  public : GGS_lstring  mAttribute2 ;
//--- Constructor
  public : cPtr_guiLabel (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_guiLabel * nextObject (void) const {
    return (cPtr_guiLabel *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_guiLabel * previousObject (void) const {
    return (cPtr_guiLabel *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (void) const ;

  public : static sint32 _metamodelComponentIndexForClass (void) ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (void) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (void) const ;

  public : static sint32 _metamodelClassIDForClass (void) ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_guiLabel * _cloneObject (void) const ;

//--- Super Class Metamodel Component Index
  public : virtual sint32 _superClassMetamodelComponentIndex (void) const ;

//--- Friend class declarations
  friend class GGS_guiLabelList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@guiComponentRootList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_guiComponentRoot : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_lstring  mGUIName ;
  public : GGS_lstring  mGUIClass ;
  public : GGS_guiAttributeList  mAttributes ;
  public : GGS_guiLabelList  mLabels ;
//--- Constructor
  public : cPtr_guiComponentRoot (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_guiAttributeList & ,
                                const GGS_guiLabelList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_guiComponentRoot * nextObject (void) const {
    return (cPtr_guiComponentRoot *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_guiComponentRoot * previousObject (void) const {
    return (cPtr_guiComponentRoot *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (void) const ;

  public : static sint32 _metamodelComponentIndexForClass (void) ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (void) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (void) const ;

  public : static sint32 _metamodelClassIDForClass (void) ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_guiComponentRoot * _cloneObject (void) const ;

//--- Super Class Metamodel Component Index
  public : virtual sint32 _superClassMetamodelComponentIndex (void) const ;

//--- Friend class declarations
  friend class GGS_guiComponentRootList ;
} ;

//---------------------------------------------------------------------------*

#endif
