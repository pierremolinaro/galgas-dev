//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'galgas_start.h'                            *
//               Generated by version 0.14.1 (LL(1) grammar)                 *
//                     october 27th, 2005, at 12h10'42"                      *
//                                                                           *
// This program is free software; you can redistribute it and/or modify it   *
// under the terms of the GNU General Public License as published by the     *
// Free Software Foundation.                                                 *
//                                                                           *
// This program is distributed in the hope it will be useful, but WITHOUT    *
// ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or     *
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
// more details.                                                             *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef galgas_start_DEFINED
#define galgas_start_DEFINED

#include <string.h>

// Include predefined semantics types definition *
#include "galgas/C_GGS_Object.h"
#include "galgas/AC_galgas_io.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_stringset.h"
#include "galgas/AC_galgas_map.h"
// Include scanner definition *
#include "galgas_scanner.h"
// Include imported semantics *
#include "semantics_semantics.h"


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                  Parser class galgas_start declaration                    *
//                                                                           *
//---------------------------------------------------------------------------*

class galgas_start {
  public : virtual ~galgas_start (void) {}

  protected : virtual void nt_galgas_start_symbol_ (galgas_scanner &,
                                GGS_M_lexiqueComponents  &,
                                GGS_M_semanticsComponents  &,
                                GGS_M_syntaxComponents  &,
                                GGS_M_grammarComponents  &,
                                GGS_M_optionComponents  &) = 0 ;

  protected : virtual void nt_galgas_start_symbol_importLexique (galgas_scanner &,
                                GGS_M_lexiqueComponents  &) = 0 ;

  protected : virtual void nt_galgas_start_symbol_importSyntax (galgas_scanner &,
                                GGS_M_syntaxComponents  &) = 0 ;

  protected : virtual void nt_galgas_start_symbol_importSemantics (galgas_scanner &,
                                GGS_M_semanticsComponents  &) = 0 ;

  protected : virtual void nt_galgas_start_symbol_importGrammarForSemantics (galgas_scanner &,
                                GGS_M_grammarComponents  &) = 0 ;

  protected : virtual void nt_galgas_start_symbol_importOptions (galgas_scanner &,
                                GGS_M_optionComponents  &) = 0 ;

  protected : virtual void nt_galgas_start_symbol_compileFile (galgas_scanner &) = 0 ;

  protected : virtual void nt_galgas_component_ (galgas_scanner &,
                                GGS_M_lexiqueComponents  &,
                                GGS_M_semanticsComponents  &,
                                GGS_M_syntaxComponents  &,
                                GGS_M_grammarComponents  &,
                                GGS_M_optionComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importLexique (galgas_scanner &,
                                GGS_M_lexiqueComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importSyntax (galgas_scanner &,
                                GGS_M_syntaxComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importSemantics (galgas_scanner &,
                                GGS_M_semanticsComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importGrammarForSemantics (galgas_scanner &,
                                GGS_M_grammarComponents  &) = 0 ;

  protected : virtual void nt_galgas_component_importOptions (galgas_scanner &,
                                GGS_M_optionComponents  &) = 0 ;

  protected : void pr_galgas_start_symbol_galgas_start_71_27_ (galgas_scanner &,
                                GGS_M_lexiqueComponents  &,
                                GGS_M_semanticsComponents  &,
                                GGS_M_syntaxComponents  &,
                                GGS_M_grammarComponents  &,
                                GGS_M_optionComponents  &) ;

  protected : virtual sint16 select_repeat_galgas_start_0 (galgas_scanner &) = 0 ;

  protected : void pr_galgas_start_symbol_galgas_start_71_27_importLexique (galgas_scanner &,
                                GGS_M_lexiqueComponents  &) ;

  protected : void pr_galgas_start_symbol_galgas_start_71_27_importSyntax (galgas_scanner &,
                                GGS_M_syntaxComponents  &) ;

  protected : void pr_galgas_start_symbol_galgas_start_71_27_importSemantics (galgas_scanner &,
                                GGS_M_semanticsComponents  &) ;

  protected : void pr_galgas_start_symbol_galgas_start_71_27_importGrammarForSemantics (galgas_scanner &,
                                GGS_M_grammarComponents  &) ;

  protected : void pr_galgas_start_symbol_galgas_start_71_27_compileFile (galgas_scanner &) ;

  protected : void pr_galgas_start_symbol_galgas_start_71_27_importOptions (galgas_scanner &,
                                GGS_M_optionComponents  &) ;

} ;

//---------------------------------------------------------------------------*

#endif
