//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'instructionMetamodel.h'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       april 4th, 2007, at 14h57'6"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef instructionMetamodel_METAMODEL_DEFINED
#define instructionMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

uint32 _metamodel_index_for_instructionMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticInstructionList ;
class GGS_semanticInstruction ;
class cPtr_semanticInstruction ;
class GGS_semanticInstructionsList ;
class GGS_semanticInstructions ;
class cPtr_semanticInstructions ;
class GGS_localVariableDeclarationList ;
class GGS_localVariableDeclaration ;
class cPtr_localVariableDeclaration ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_semanticInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticInstruction : public AC_galgas_entity {
//--- getPtr
  public : inline cPtr_semanticInstruction * getPtr (void) const {
    return (cPtr_semanticInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticInstruction * operator () (void) const {
      return (cPtr_semanticInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@semanticInstructionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticInstructionList : public AC_galgas_list {
  public : typedef cPtr_semanticInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_semanticInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_semanticInstructionList constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_semanticInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation () ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticInstructionList _operator_concat (const GGS_semanticInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_semanticInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_semanticInstructions'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticInstructions : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_semanticInstructions constructor_new (C_Compiler & inLexique,
                                const GGS_semanticInstructionList & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_semanticInstructions * getPtr (void) const {
    return (cPtr_semanticInstructions *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticInstructionList  reader_mInstruction (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticInstructions * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticInstructions * operator () (void) const {
      return (cPtr_semanticInstructions *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@semanticInstructionsList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticInstructionsList : public AC_galgas_list {
  public : typedef cPtr_semanticInstructions element_type ;
//--- Constructor 'emptyList'
  public : static GGS_semanticInstructionsList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_semanticInstructionsList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticInstructionList & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_semanticInstructionsList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_semanticInstructionList & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_semanticInstructionList & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_semanticInstructionList & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_semanticInstructionList & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_semanticInstructionList & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticInstructionsList _operator_concat (const GGS_semanticInstructionsList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticInstructionList & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticInstructionList & argument_0) ;

  protected : void _internalPrependValues (const GGS_semanticInstructionList & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_semanticInstructions & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_localVariableDeclaration'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localVariableDeclaration : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_localVariableDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_localVariableDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_localVariableDeclaration * operator () (void) const {
      return (cPtr_localVariableDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@localVariableDeclarationList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localVariableDeclarationList : public AC_galgas_list {
  public : typedef cPtr_localVariableDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_localVariableDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_localVariableDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_localVariableDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
  public : void method_first (C_Compiler & _inLexique,
                              GGS_lstring & _out_0,
                              GGS_lstring & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & _inLexique,
                             GGS_lstring & _out_0,
                             GGS_lstring & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & _inLexique,
                                GGS_lstring & _out_0,
                                GGS_lstring & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & _inLexique,
                                 GGS_lstring & _out_0,
                                 GGS_lstring & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_localVariableDeclarationList _operator_concat (const GGS_localVariableDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_localVariableDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@semanticInstructionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticInstruction : public C_GGS_MetamodelEntity {
//--- Attributes
//--- Constructor
  public : cPtr_semanticInstruction (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_semanticInstruction * nextObject (void) const {
    return (cPtr_semanticInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_semanticInstruction * previousObject (void) const {
    return (cPtr_semanticInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_semanticInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_semanticInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@semanticInstructionsList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticInstructions : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_semanticInstructionList  mInstruction ;
//--- Constructor
  public : cPtr_semanticInstructions (const GGS_semanticInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_semanticInstructions * nextObject (void) const {
    return (cPtr_semanticInstructions *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_semanticInstructions * previousObject (void) const {
    return (cPtr_semanticInstructions *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_semanticInstructions * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_semanticInstructionsList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@localVariableDeclarationList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_localVariableDeclaration : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mVariableName ;
//--- Constructor
  public : cPtr_localVariableDeclaration (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_localVariableDeclaration * nextObject (void) const {
    return (cPtr_localVariableDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_localVariableDeclaration * previousObject (void) const {
    return (cPtr_localVariableDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_localVariableDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_localVariableDeclarationList ;
} ;

//---------------------------------------------------------------------------*

#endif
