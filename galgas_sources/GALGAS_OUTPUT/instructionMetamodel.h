//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'instructionMetamodel.h'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       june 2nd, 2007, at 12h44'5"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef instructionMetamodel_METAMODEL_DEFINED
#define instructionMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"
#include "parameterArgumentMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

uint32 _metamodel_index_for_instructionMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_syntaxInstructionList ;
class GGS_syntaxInstruction ;
class cPtr_syntaxInstruction ;
class GGS_semanticInstructionList ;
class GGS_semanticInstruction ;
class cPtr_semanticInstruction ;
class GGS_semanticInstructionsList ;
class GGS_semanticInstructions ;
class cPtr_semanticInstructions ;
class GGS_semanticDeclarationList ;
class GGS_semanticDeclaration ;
class cPtr_semanticDeclaration ;
class GGS_routineDeclarationList ;
class GGS_routineDeclaration ;
class cPtr_routineDeclaration ;
class GGS_actionDeclarationList ;
class GGS_actionDeclaration ;
class cPtr_actionDeclaration ;
class GGS_localVariableDeclarationList ;
class GGS_localVariableDeclaration ;
class cPtr_localVariableDeclaration ;
class GGS_localVariableDeclarationWithInitializationList ;
class GGS_localVariableDeclarationWithInitialization ;
class cPtr_localVariableDeclarationWithInitialization ;
class GGS_localVariableDeclarationWithAssignmentList ;
class GGS_localVariableDeclarationWithAssignment ;
class cPtr_localVariableDeclarationWithAssignment ;
class GGS_assignmentInstructionList ;
class GGS_assignmentInstruction ;
class cPtr_assignmentInstruction ;
class GGS_foreachInstructionEnumeratedObjectElementList ;
class GGS_foreachInstructionEnumeratedObjectElement ;
class cPtr_foreachInstructionEnumeratedObjectElement ;
class GGS_foreachInstructionJokerList ;
class GGS_foreachInstructionJoker ;
class cPtr_foreachInstructionJoker ;
class GGS_foreachInstructionEnumeratedConstantList ;
class GGS_foreachInstructionEnumeratedConstant ;
class cPtr_foreachInstructionEnumeratedConstant ;
class GGS_foreachInstructionEnumeratedObjectList ;
class GGS_foreachInstructionEnumeratedObject ;
class cPtr_foreachInstructionEnumeratedObject ;
class GGS_foreachInstructionList ;
class GGS_foreachInstruction ;
class cPtr_foreachInstruction ;
class GGS_ifInstructionList ;
class GGS_ifInstruction ;
class cPtr_ifInstruction ;
class GGS_methodCallInstructionList ;
class GGS_methodCallInstruction ;
class cPtr_methodCallInstruction ;
class GGS_modifierCallInstructionList ;
class GGS_modifierCallInstruction ;
class cPtr_modifierCallInstruction ;
class GGS_errorInstructionList ;
class GGS_errorInstruction ;
class cPtr_errorInstruction ;
class GGS_warningInstructionList ;
class GGS_warningInstruction ;
class cPtr_warningInstruction ;
class GGS_routineCallInstructionList ;
class GGS_routineCallInstruction ;
class cPtr_routineCallInstruction ;
class GGS_matchEntryList ;
class GGS_matchEntry ;
class cPtr_matchEntry ;
class GGS_constantMatchEntryList ;
class GGS_constantMatchEntry ;
class cPtr_constantMatchEntry ;
class GGS_classMatchEntryList ;
class GGS_classMatchEntry ;
class cPtr_classMatchEntry ;
class GGS_matchInstructionBranchList ;
class GGS_matchInstructionBranch ;
class cPtr_matchInstructionBranch ;
class GGS_matchInstructionList ;
class GGS_matchInstruction ;
class cPtr_matchInstruction ;
class GGS_castInstructionBranchList ;
class GGS_castInstructionBranch ;
class cPtr_castInstructionBranch ;
class GGS_elseOrDefaultForCastInstructionList ;
class GGS_elseOrDefaultForCastInstruction ;
class cPtr_elseOrDefaultForCastInstruction ;
class GGS_elseForCastInstructionList ;
class GGS_elseForCastInstruction ;
class cPtr_elseForCastInstruction ;
class GGS_defaultForCastInstructionList ;
class GGS_defaultForCastInstruction ;
class cPtr_defaultForCastInstruction ;
class GGS_castInstructionList ;
class GGS_castInstruction ;
class cPtr_castInstruction ;
class GGS_appendInstructionList ;
class GGS_appendInstruction ;
class cPtr_appendInstruction ;
class GGS_incrementInstructionList ;
class GGS_incrementInstruction ;
class cPtr_incrementInstruction ;
class GGS_decrementInstructionList ;
class GGS_decrementInstruction ;
class cPtr_decrementInstruction ;
class GGS_loopInstructionList ;
class GGS_loopInstruction ;
class cPtr_loopInstruction ;
class GGS_messageInstructionList ;
class GGS_messageInstruction ;
class cPtr_messageInstruction ;
class GGS_logInstructionList ;
class GGS_logInstruction ;
class cPtr_logInstruction ;
class GGS_grammarInstructionList ;
class GGS_grammarInstruction ;
class cPtr_grammarInstruction ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_syntaxInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_syntaxInstruction : public AC_galgas_entity {
//--- getPtr
  public : inline cPtr_syntaxInstruction * getPtr (void) const {
    return (cPtr_syntaxInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_syntaxInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_syntaxInstruction * operator () (void) const {
      return (cPtr_syntaxInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@syntaxInstructionList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_syntaxInstructionList : public AC_galgas_list {
  public : typedef cPtr_syntaxInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_syntaxInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_syntaxInstructionList constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_syntaxInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_syntaxInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_syntaxInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_syntaxInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_syntaxInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_syntaxInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_syntaxInstructionList _operator_concat (const GGS_syntaxInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_syntaxInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_semanticInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticInstruction : public GGS_syntaxInstruction {
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticInstruction * operator () (void) const {
      return (cPtr_semanticInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@semanticInstructionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticInstructionList : public AC_galgas_list {
  public : typedef cPtr_semanticInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_semanticInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_semanticInstructionList constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_semanticInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_semanticInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_semanticInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_semanticInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_semanticInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_semanticInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticInstructionList _operator_concat (const GGS_semanticInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_semanticInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_semanticInstructions'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticInstructions : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_semanticInstructions constructor_new (C_Compiler & inLexique,
                                const GGS_semanticInstructionList & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_semanticInstructions * getPtr (void) const {
    return (cPtr_semanticInstructions *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticInstructionList  reader_mInstruction (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticInstructions * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticInstructions * operator () (void) const {
      return (cPtr_semanticInstructions *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@semanticInstructionsList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticInstructionsList : public AC_galgas_list {
  public : typedef cPtr_semanticInstructions element_type ;
//--- Constructor 'emptyList'
  public : static GGS_semanticInstructionsList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_semanticInstructionsList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticInstructionList & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_semanticInstructionsList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_semanticInstructions & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_semanticInstructions & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_semanticInstructions & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_semanticInstructions & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_semanticInstructions & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticInstructionsList _operator_concat (const GGS_semanticInstructionsList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticInstructionList & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticInstructionList & argument_0) ;

  protected : void _internalPrependValues (const GGS_semanticInstructionList & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_semanticInstructions & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_semanticDeclaration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticDeclaration : public AC_galgas_entity {
//--- getPtr
  public : inline cPtr_semanticDeclaration * getPtr (void) const {
    return (cPtr_semanticDeclaration *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticDeclaration * operator () (void) const {
      return (cPtr_semanticDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@semanticDeclarationList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticDeclarationList : public AC_galgas_list {
  public : typedef cPtr_semanticDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_semanticDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_semanticDeclarationList constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_semanticDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_semanticDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_semanticDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_semanticDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_semanticDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_semanticDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_semanticDeclarationList _operator_concat (const GGS_semanticDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_semanticDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_routineDeclaration'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_routineDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_routineDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mRoutineName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mFormalParameters (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mRoutineInstructions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_routineDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_routineDeclaration * operator () (void) const {
      return (cPtr_routineDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@routineDeclarationList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_routineDeclarationList : public AC_galgas_list {
  public : typedef cPtr_routineDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_routineDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_routineDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_routineDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_routineDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_routineDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_routineDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_routineDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_routineDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_routineDeclarationList _operator_concat (const GGS_routineDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1,
                                const GGS_semanticInstructions & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_routineDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_actionDeclaration'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_actionDeclaration : public GGS_semanticDeclaration {
//--- 'new' constructor
  public : static GGS_actionDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mActionName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_formalParameters  reader_mFormalParameters (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_actionDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_actionDeclaration * operator () (void) const {
      return (cPtr_actionDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@actionDeclarationList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_actionDeclarationList : public AC_galgas_list {
  public : typedef cPtr_actionDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_actionDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_actionDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_actionDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_actionDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_actionDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_actionDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_actionDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_actionDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_actionDeclarationList _operator_concat (const GGS_actionDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_formalParameters & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_actionDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_localVariableDeclaration'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localVariableDeclaration : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_localVariableDeclaration constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_localVariableDeclaration * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_localVariableDeclaration * operator () (void) const {
      return (cPtr_localVariableDeclaration *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@localVariableDeclarationList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localVariableDeclarationList : public AC_galgas_list {
  public : typedef cPtr_localVariableDeclaration element_type ;
//--- Constructor 'emptyList'
  public : static GGS_localVariableDeclarationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_localVariableDeclarationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_localVariableDeclarationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_localVariableDeclaration & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_localVariableDeclaration & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_localVariableDeclaration & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_localVariableDeclaration & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_localVariableDeclaration & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_localVariableDeclarationList _operator_concat (const GGS_localVariableDeclarationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_localVariableDeclaration & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//      GALGAS class 'GGS_localVariableDeclarationWithInitialization'        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localVariableDeclarationWithInitialization : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_localVariableDeclarationWithInitialization constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_outExpressionList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstructorName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_outExpressionList  reader_mConstructorArguments (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_localVariableDeclarationWithInitialization * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_localVariableDeclarationWithInitialization * operator () (void) const {
      return (cPtr_localVariableDeclarationWithInitialization *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          list '@localVariableDeclarationWithInitializationList'           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localVariableDeclarationWithInitializationList : public AC_galgas_list {
  public : typedef cPtr_localVariableDeclarationWithInitialization element_type ;
//--- Constructor 'emptyList'
  public : static GGS_localVariableDeclarationWithInitializationList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_localVariableDeclarationWithInitializationList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_outExpressionList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_localVariableDeclarationWithInitializationList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_localVariableDeclarationWithInitialization & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_localVariableDeclarationWithInitialization & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_localVariableDeclarationWithInitialization & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_localVariableDeclarationWithInitialization & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_localVariableDeclarationWithInitialization & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_localVariableDeclarationWithInitializationList _operator_concat (const GGS_localVariableDeclarationWithInitializationList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_outExpressionList & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_outExpressionList & argument_3) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_outExpressionList & argument_3) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_localVariableDeclarationWithInitialization & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_localVariableDeclarationWithAssignment'          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localVariableDeclarationWithAssignment : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_localVariableDeclarationWithAssignment constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mSourceExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_localVariableDeclarationWithAssignment * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_localVariableDeclarationWithAssignment * operator () (void) const {
      return (cPtr_localVariableDeclarationWithAssignment *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            list '@localVariableDeclarationWithAssignmentList'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_localVariableDeclarationWithAssignmentList : public AC_galgas_list {
  public : typedef cPtr_localVariableDeclarationWithAssignment element_type ;
//--- Constructor 'emptyList'
  public : static GGS_localVariableDeclarationWithAssignmentList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_localVariableDeclarationWithAssignmentList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_localVariableDeclarationWithAssignmentList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_localVariableDeclarationWithAssignment & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_localVariableDeclarationWithAssignment & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_localVariableDeclarationWithAssignment & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_localVariableDeclarationWithAssignment & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_localVariableDeclarationWithAssignment & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_localVariableDeclarationWithAssignmentList _operator_concat (const GGS_localVariableDeclarationWithAssignmentList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_localVariableDeclarationWithAssignment & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_assignmentInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_assignmentInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_assignmentInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_semanticExpression & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTargetVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mSourceExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_assignmentInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_assignmentInstruction * operator () (void) const {
      return (cPtr_assignmentInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@assignmentInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_assignmentInstructionList : public AC_galgas_list {
  public : typedef cPtr_assignmentInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_assignmentInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_assignmentInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_semanticExpression & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_assignmentInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_assignmentInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_assignmentInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_assignmentInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_assignmentInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_assignmentInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_assignmentInstructionList _operator_concat (const GGS_assignmentInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_semanticExpression & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_semanticExpression & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_semanticExpression & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_assignmentInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       GALGAS class 'GGS_foreachInstructionEnumeratedObjectElement'        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedObjectElement : public AC_galgas_entity {
//--- getPtr
  public : inline cPtr_foreachInstructionEnumeratedObjectElement * getPtr (void) const {
    return (cPtr_foreachInstructionEnumeratedObjectElement *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_foreachInstructionEnumeratedObjectElement * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_foreachInstructionEnumeratedObjectElement * operator () (void) const {
      return (cPtr_foreachInstructionEnumeratedObjectElement *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          list '@foreachInstructionEnumeratedObjectElementList'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedObjectElementList : public AC_galgas_list {
  public : typedef cPtr_foreachInstructionEnumeratedObjectElement element_type ;
//--- Constructor 'emptyList'
  public : static GGS_foreachInstructionEnumeratedObjectElementList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_foreachInstructionEnumeratedObjectElementList constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_foreachInstructionEnumeratedObjectElementList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_foreachInstructionEnumeratedObjectElement & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_foreachInstructionEnumeratedObjectElement & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_foreachInstructionEnumeratedObjectElement & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_foreachInstructionEnumeratedObjectElement & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_foreachInstructionEnumeratedObjectElement & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_foreachInstructionEnumeratedObjectElementList _operator_concat (const GGS_foreachInstructionEnumeratedObjectElementList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_foreachInstructionEnumeratedObjectElement & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_foreachInstructionJoker'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstructionJoker : public GGS_foreachInstructionEnumeratedObjectElement {
//--- 'new' constructor
  public : static GGS_foreachInstructionJoker constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_foreachInstructionJoker * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_foreachInstructionJoker * operator () (void) const {
      return (cPtr_foreachInstructionJoker *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@foreachInstructionJokerList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstructionJokerList : public AC_galgas_list {
  public : typedef cPtr_foreachInstructionJoker element_type ;
//--- Constructor 'emptyList'
  public : static GGS_foreachInstructionJokerList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_foreachInstructionJokerList constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_foreachInstructionJokerList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_foreachInstructionJoker & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_foreachInstructionJoker & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_foreachInstructionJoker & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_foreachInstructionJoker & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_foreachInstructionJoker & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_foreachInstructionJokerList _operator_concat (const GGS_foreachInstructionJokerList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_foreachInstructionJoker & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_foreachInstructionEnumeratedConstant'           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedConstant : public GGS_foreachInstructionEnumeratedObjectElement {
//--- 'new' constructor
  public : static GGS_foreachInstructionEnumeratedConstant constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstantName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_foreachInstructionEnumeratedConstant * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_foreachInstructionEnumeratedConstant * operator () (void) const {
      return (cPtr_foreachInstructionEnumeratedConstant *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             list '@foreachInstructionEnumeratedConstantList'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedConstantList : public AC_galgas_list {
  public : typedef cPtr_foreachInstructionEnumeratedConstant element_type ;
//--- Constructor 'emptyList'
  public : static GGS_foreachInstructionEnumeratedConstantList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_foreachInstructionEnumeratedConstantList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_foreachInstructionEnumeratedConstantList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_foreachInstructionEnumeratedConstant & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_foreachInstructionEnumeratedConstant & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_foreachInstructionEnumeratedConstant & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_foreachInstructionEnumeratedConstant & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_foreachInstructionEnumeratedConstant & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_foreachInstructionEnumeratedConstantList _operator_concat (const GGS_foreachInstructionEnumeratedConstantList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_foreachInstructionEnumeratedConstant & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_foreachInstructionEnumeratedObject'            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedObject : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_foreachInstructionEnumeratedObject constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_foreachInstructionEnumeratedObject * getPtr (void) const {
    return (cPtr_foreachInstructionEnumeratedObject *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mEnumeratedExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_foreachInstructionEnumeratedObjectElementList  reader_mElements (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mEndsWithEllipsis (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_foreachInstructionEnumeratedObject * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_foreachInstructionEnumeratedObject * operator () (void) const {
      return (cPtr_foreachInstructionEnumeratedObject *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              list '@foreachInstructionEnumeratedObjectList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstructionEnumeratedObjectList : public AC_galgas_list {
  public : typedef cPtr_foreachInstructionEnumeratedObject element_type ;
//--- Constructor 'emptyList'
  public : static GGS_foreachInstructionEnumeratedObjectList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_foreachInstructionEnumeratedObjectList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_foreachInstructionEnumeratedObjectList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_foreachInstructionEnumeratedObject & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_foreachInstructionEnumeratedObject & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_foreachInstructionEnumeratedObject & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_foreachInstructionEnumeratedObject & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_foreachInstructionEnumeratedObject & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_foreachInstructionEnumeratedObjectList _operator_concat (const GGS_foreachInstructionEnumeratedObjectList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2) ;

  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_foreachInstructionEnumeratedObject & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_foreachInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_foreachInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_foreachInstructionEnumeratedObjectList & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_foreachInstructionEnumeratedObjectList  reader_mEnumeratedObjects (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mWhileExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_foreachInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_foreachInstruction * operator () (void) const {
      return (cPtr_foreachInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@foreachInstructionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_foreachInstructionList : public AC_galgas_list {
  public : typedef cPtr_foreachInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_foreachInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_foreachInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_foreachInstructionEnumeratedObjectList & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_foreachInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_foreachInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_foreachInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_foreachInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_foreachInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_foreachInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_foreachInstructionList _operator_concat (const GGS_foreachInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_foreachInstructionEnumeratedObjectList & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticInstructions & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_foreachInstructionEnumeratedObjectList & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticInstructions & argument_2) ;

  protected : void _internalPrependValues (const GGS_foreachInstructionEnumeratedObjectList & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticInstructions & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_foreachInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_ifInstruction'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ifInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_ifInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpressionList & argument_0,
                                const GGS_semanticInstructionsList & argument_1,
                                const GGS_semanticInstructionsList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpressionList  reader_mIFexpressionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionsList  reader_mIFinstructionListList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionsList  reader_mElseInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ifInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ifInstruction * operator () (void) const {
      return (cPtr_ifInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@ifInstructionList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_ifInstructionList : public AC_galgas_list {
  public : typedef cPtr_ifInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_ifInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_ifInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpressionList & argument_0,
                                const GGS_semanticInstructionsList & argument_1,
                                const GGS_semanticInstructionsList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_ifInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_ifInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_ifInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_ifInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_ifInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_ifInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_ifInstructionList _operator_concat (const GGS_ifInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpressionList & argument_0,
                                const GGS_semanticInstructionsList & argument_1,
                                const GGS_semanticInstructionsList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpressionList & argument_0,
                                const GGS_semanticInstructionsList & argument_1,
                                const GGS_semanticInstructionsList & argument_2) ;

  protected : void _internalPrependValues (const GGS_semanticExpressionList & argument_0,
                                const GGS_semanticInstructionsList & argument_1,
                                const GGS_semanticInstructionsList & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_ifInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_methodCallInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_methodCallInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_methodCallInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mReceiverExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mMethodName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameters  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_methodCallInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_methodCallInstruction * operator () (void) const {
      return (cPtr_methodCallInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@methodCallInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_methodCallInstructionList : public AC_galgas_list {
  public : typedef cPtr_methodCallInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_methodCallInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_methodCallInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_methodCallInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_methodCallInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_methodCallInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_methodCallInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_methodCallInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_methodCallInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_methodCallInstructionList _operator_concat (const GGS_methodCallInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2) ;

  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_methodCallInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_modifierCallInstruction'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_modifierCallInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_modifierCallInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mModifierName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameters  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_modifierCallInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_modifierCallInstruction * operator () (void) const {
      return (cPtr_modifierCallInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   list '@modifierCallInstructionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_modifierCallInstructionList : public AC_galgas_list {
  public : typedef cPtr_modifierCallInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_modifierCallInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_modifierCallInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_modifierCallInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_modifierCallInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_modifierCallInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_modifierCallInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_modifierCallInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_modifierCallInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_modifierCallInstructionList _operator_concat (const GGS_modifierCallInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_actualParameters & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_modifierCallInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_errorInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_errorInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_errorInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mReceiverExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mErrorExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_mBuiltVariableList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_errorInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_errorInstruction * operator () (void) const {
      return (cPtr_errorInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@errorInstructionList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_errorInstructionList : public AC_galgas_list {
  public : typedef cPtr_errorInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_errorInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_errorInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_errorInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_errorInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_errorInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_errorInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_errorInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_errorInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_errorInstructionList _operator_concat (const GGS_errorInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_lstringlist & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_lstringlist & argument_2) ;

  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_lstringlist & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_errorInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_warningInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_warningInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_warningInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mReceiverExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mErrorExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_warningInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_warningInstruction * operator () (void) const {
      return (cPtr_warningInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@warningInstructionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_warningInstructionList : public AC_galgas_list {
  public : typedef cPtr_warningInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_warningInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_warningInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_warningInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_warningInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_warningInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_warningInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_warningInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_warningInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_warningInstructionList _operator_concat (const GGS_warningInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1) ;

  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0,
                                const GGS_semanticExpression & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_warningInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_routineCallInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_routineCallInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_routineCallInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_actualParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mRoutineName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameters  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_routineCallInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_routineCallInstruction * operator () (void) const {
      return (cPtr_routineCallInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@routineCallInstructionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_routineCallInstructionList : public AC_galgas_list {
  public : typedef cPtr_routineCallInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_routineCallInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_routineCallInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_actualParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_routineCallInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_routineCallInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_routineCallInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_routineCallInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_routineCallInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_routineCallInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_routineCallInstructionList _operator_concat (const GGS_routineCallInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_actualParameters & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_actualParameters & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_actualParameters & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_routineCallInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_matchEntry'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_matchEntry : public AC_galgas_entity {
//--- getPtr
  public : inline cPtr_matchEntry * getPtr (void) const {
    return (cPtr_matchEntry *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_matchEntry * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_matchEntry * operator () (void) const {
      return (cPtr_matchEntry *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          list '@matchEntryList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_matchEntryList : public AC_galgas_list {
  public : typedef cPtr_matchEntry element_type ;
//--- Constructor 'emptyList'
  public : static GGS_matchEntryList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_matchEntryList constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_matchEntryList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_matchEntry & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_matchEntry & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_matchEntry & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_matchEntry & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_matchEntry & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_matchEntryList _operator_concat (const GGS_matchEntryList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_matchEntry & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_constantMatchEntry'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_constantMatchEntry : public GGS_matchEntry {
//--- 'new' constructor
  public : static GGS_constantMatchEntry constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mConstantName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_constantMatchEntry * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_constantMatchEntry * operator () (void) const {
      return (cPtr_constantMatchEntry *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@constantMatchEntryList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_constantMatchEntryList : public AC_galgas_list {
  public : typedef cPtr_constantMatchEntry element_type ;
//--- Constructor 'emptyList'
  public : static GGS_constantMatchEntryList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_constantMatchEntryList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_constantMatchEntryList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_constantMatchEntry & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_constantMatchEntry & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_constantMatchEntry & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_constantMatchEntry & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_constantMatchEntry & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_constantMatchEntryList _operator_concat (const GGS_constantMatchEntryList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_constantMatchEntry & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_classMatchEntry'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classMatchEntry : public GGS_matchEntry {
//--- 'new' constructor
  public : static GGS_classMatchEntry constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mClassName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_foreachInstructionEnumeratedObjectElementList  reader_mElements (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mEndsWithEllipsis (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_classMatchEntry * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_classMatchEntry * operator () (void) const {
      return (cPtr_classMatchEntry *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@classMatchEntryList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_classMatchEntryList : public AC_galgas_list {
  public : typedef cPtr_classMatchEntry element_type ;
//--- Constructor 'emptyList'
  public : static GGS_classMatchEntryList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_classMatchEntryList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_classMatchEntryList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_classMatchEntry & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_classMatchEntry & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_classMatchEntry & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_classMatchEntry & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_classMatchEntry & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_classMatchEntryList _operator_concat (const GGS_classMatchEntryList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_foreachInstructionEnumeratedObjectElementList & argument_1,
                                const GGS_bool& argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_classMatchEntry & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_matchInstructionBranch'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_matchInstructionBranch : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_matchInstructionBranch constructor_new (C_Compiler & inLexique,
                                const GGS_matchEntryList & argument_0,
                                const GGS_semanticInstructions & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_matchInstructionBranch * getPtr (void) const {
    return (cPtr_matchInstructionBranch *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_matchEntryList  reader_mMatchedEntryList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mMatchBranchInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_matchInstructionBranch * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_matchInstructionBranch * operator () (void) const {
      return (cPtr_matchInstructionBranch *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@matchInstructionBranchList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_matchInstructionBranchList : public AC_galgas_list {
  public : typedef cPtr_matchInstructionBranch element_type ;
//--- Constructor 'emptyList'
  public : static GGS_matchInstructionBranchList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_matchInstructionBranchList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_matchEntryList & argument_0,
                                const GGS_semanticInstructions & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_matchInstructionBranchList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_matchInstructionBranch & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_matchInstructionBranch & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_matchInstructionBranch & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_matchInstructionBranch & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_matchInstructionBranch & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_matchInstructionBranchList _operator_concat (const GGS_matchInstructionBranchList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_matchEntryList & argument_0,
                                const GGS_semanticInstructions & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_matchEntryList & argument_0,
                                const GGS_semanticInstructions & argument_1) ;

  protected : void _internalPrependValues (const GGS_matchEntryList & argument_0,
                                const GGS_semanticInstructions & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_matchInstructionBranch & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_matchInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_matchInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_matchInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstringlist & argument_0,
                                const GGS_matchInstructionBranchList & argument_1,
                                const GGS_semanticInstructionsList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstringlist  reader_mMatchedVariableNameList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_matchInstructionBranchList  reader_mMatchInstructionBranchList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructionsList  reader_mElseInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_matchInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_matchInstruction * operator () (void) const {
      return (cPtr_matchInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@matchInstructionList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_matchInstructionList : public AC_galgas_list {
  public : typedef cPtr_matchInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_matchInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_matchInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstringlist & argument_0,
                                const GGS_matchInstructionBranchList & argument_1,
                                const GGS_semanticInstructionsList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_matchInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_matchInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_matchInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_matchInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_matchInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_matchInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_matchInstructionList _operator_concat (const GGS_matchInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstringlist & argument_0,
                                const GGS_matchInstructionBranchList & argument_1,
                                const GGS_semanticInstructionsList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstringlist & argument_0,
                                const GGS_matchInstructionBranchList & argument_1,
                                const GGS_semanticInstructionsList & argument_2) ;

  protected : void _internalPrependValues (const GGS_lstringlist & argument_0,
                                const GGS_matchInstructionBranchList & argument_1,
                                const GGS_semanticInstructionsList & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_matchInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_castInstructionBranch'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_castInstructionBranch : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_castInstructionBranch constructor_new (C_Compiler & inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructions & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_castInstructionBranch * getPtr (void) const {
    return (cPtr_castInstructionBranch *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_mUseKindOfClass (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstantVarName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mConstantVarNameIsUnused (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mCastBranchInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_castInstructionBranch * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_castInstructionBranch * operator () (void) const {
      return (cPtr_castInstructionBranch *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@castInstructionBranchList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_castInstructionBranchList : public AC_galgas_list {
  public : typedef cPtr_castInstructionBranch element_type ;
//--- Constructor 'emptyList'
  public : static GGS_castInstructionBranchList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_castInstructionBranchList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructions & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_castInstructionBranchList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_castInstructionBranch & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_castInstructionBranch & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_castInstructionBranch & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_castInstructionBranch & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_castInstructionBranch & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_castInstructionBranchList _operator_concat (const GGS_castInstructionBranchList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructions & argument_4
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructions & argument_4) ;

  protected : void _internalPrependValues (const GGS_bool& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3,
                                const GGS_semanticInstructions & argument_4) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_castInstructionBranch & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_elseOrDefaultForCastInstruction'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_elseOrDefaultForCastInstruction : public AC_galgas_entity {
//--- getPtr
  public : inline cPtr_elseOrDefaultForCastInstruction * getPtr (void) const {
    return (cPtr_elseOrDefaultForCastInstruction *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_elseOrDefaultForCastInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_elseOrDefaultForCastInstruction * operator () (void) const {
      return (cPtr_elseOrDefaultForCastInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               list '@elseOrDefaultForCastInstructionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_elseOrDefaultForCastInstructionList : public AC_galgas_list {
  public : typedef cPtr_elseOrDefaultForCastInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_elseOrDefaultForCastInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_elseOrDefaultForCastInstructionList constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_elseOrDefaultForCastInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_elseOrDefaultForCastInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_elseOrDefaultForCastInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_elseOrDefaultForCastInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_elseOrDefaultForCastInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_elseOrDefaultForCastInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_elseOrDefaultForCastInstructionList _operator_concat (const GGS_elseOrDefaultForCastInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_elseOrDefaultForCastInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_elseForCastInstruction'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_elseForCastInstruction : public GGS_elseOrDefaultForCastInstruction {
//--- 'new' constructor
  public : static GGS_elseForCastInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_semanticInstructions & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticInstructions  reader_mElseInstructionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_elseForCastInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_elseForCastInstruction * operator () (void) const {
      return (cPtr_elseForCastInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    list '@elseForCastInstructionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_elseForCastInstructionList : public AC_galgas_list {
  public : typedef cPtr_elseForCastInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_elseForCastInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_elseForCastInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticInstructions & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_elseForCastInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_elseForCastInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_elseForCastInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_elseForCastInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_elseForCastInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_elseForCastInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_elseForCastInstructionList _operator_concat (const GGS_elseForCastInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticInstructions & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticInstructions & argument_0) ;

  protected : void _internalPrependValues (const GGS_semanticInstructions & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_elseForCastInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_defaultForCastInstruction'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_defaultForCastInstruction : public GGS_elseOrDefaultForCastInstruction {
//--- 'new' constructor
  public : static GGS_defaultForCastInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mErrorLocationExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_defaultForCastInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_defaultForCastInstruction * operator () (void) const {
      return (cPtr_defaultForCastInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  list '@defaultForCastInstructionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_defaultForCastInstructionList : public AC_galgas_list {
  public : typedef cPtr_defaultForCastInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_defaultForCastInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_defaultForCastInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_defaultForCastInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_defaultForCastInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_defaultForCastInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_defaultForCastInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_defaultForCastInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_defaultForCastInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_defaultForCastInstructionList _operator_concat (const GGS_defaultForCastInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0) ;

  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_defaultForCastInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_castInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_castInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_castInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_castInstructionBranchList & argument_1,
                                const GGS_elseOrDefaultForCastInstruction & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_castInstructionBranchList  reader_mCastInstructionBranchList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_elseOrDefaultForCastInstruction  reader_mElseOrDefault (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_castInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_castInstruction * operator () (void) const {
      return (cPtr_castInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@castInstructionList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_castInstructionList : public AC_galgas_list {
  public : typedef cPtr_castInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_castInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_castInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_castInstructionBranchList & argument_1,
                                const GGS_elseOrDefaultForCastInstruction & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_castInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_castInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_castInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_castInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_castInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_castInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_castInstructionList _operator_concat (const GGS_castInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_castInstructionBranchList & argument_1,
                                const GGS_elseOrDefaultForCastInstruction & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0,
                                const GGS_castInstructionBranchList & argument_1,
                                const GGS_elseOrDefaultForCastInstruction & argument_2) ;

  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0,
                                const GGS_castInstructionBranchList & argument_1,
                                const GGS_elseOrDefaultForCastInstruction & argument_2) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_castInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_appendInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_appendInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_appendInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_outExpressionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_outExpressionList  reader_mExpressionList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_appendInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_appendInstruction * operator () (void) const {
      return (cPtr_appendInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@appendInstructionList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_appendInstructionList : public AC_galgas_list {
  public : typedef cPtr_appendInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_appendInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_appendInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_outExpressionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_appendInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_appendInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_appendInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_appendInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_appendInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_appendInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_appendInstructionList _operator_concat (const GGS_appendInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_outExpressionList & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_outExpressionList & argument_1) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_outExpressionList & argument_1) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_appendInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_incrementInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_incrementInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_incrementInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_incrementInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_incrementInstruction * operator () (void) const {
      return (cPtr_incrementInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@incrementInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_incrementInstructionList : public AC_galgas_list {
  public : typedef cPtr_incrementInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_incrementInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_incrementInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_incrementInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_incrementInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_incrementInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_incrementInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_incrementInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_incrementInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_incrementInstructionList _operator_concat (const GGS_incrementInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_incrementInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_decrementInstruction'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_decrementInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_decrementInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mReceiverName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_decrementInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_decrementInstruction * operator () (void) const {
      return (cPtr_decrementInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     list '@decrementInstructionList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_decrementInstructionList : public AC_galgas_list {
  public : typedef cPtr_decrementInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_decrementInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_decrementInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_decrementInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_decrementInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_decrementInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_decrementInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_decrementInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_decrementInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_decrementInstructionList _operator_concat (const GGS_decrementInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_decrementInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_loopInstruction'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_loopInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_loopInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_semanticInstructions & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_semanticInstructions & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mVariantExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mFirstInstructions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLoopExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticInstructions  reader_mSecondInstructions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_loopInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_loopInstruction * operator () (void) const {
      return (cPtr_loopInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@loopInstructionList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_loopInstructionList : public AC_galgas_list {
  public : typedef cPtr_loopInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_loopInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_loopInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_semanticInstructions & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_semanticInstructions & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_loopInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_loopInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_loopInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_loopInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_loopInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_loopInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_loopInstructionList _operator_concat (const GGS_loopInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_semanticInstructions & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_semanticInstructions & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0,
                                const GGS_semanticInstructions & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_semanticInstructions & argument_3) ;

  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0,
                                const GGS_semanticInstructions & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_semanticInstructions & argument_3) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_loopInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_messageInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_messageInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_messageInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_messageInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_messageInstruction * operator () (void) const {
      return (cPtr_messageInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@messageInstructionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_messageInstructionList : public AC_galgas_list {
  public : typedef cPtr_messageInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_messageInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_messageInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_messageInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_messageInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_messageInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_messageInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_messageInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_messageInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_messageInstructionList _operator_concat (const GGS_messageInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0) ;

  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_messageInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_logInstruction'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_logInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_logInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstringlist & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstringlist  reader_mLoggedVariableList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_logInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_logInstruction * operator () (void) const {
      return (cPtr_logInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        list '@logInstructionList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_logInstructionList : public AC_galgas_list {
  public : typedef cPtr_logInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_logInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_logInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstringlist & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_logInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_logInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_logInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_logInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_logInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_logInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_logInstructionList _operator_concat (const GGS_logInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstringlist & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstringlist & argument_0) ;

  protected : void _internalPrependValues (const GGS_lstringlist & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_logInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_grammarInstruction'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_grammarInstruction : public GGS_semanticInstruction {
//--- 'new' constructor
  public : static GGS_grammarInstruction constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_actualParameters & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mGrammarComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mLabelName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mSourceFileExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_actualParameters  reader_mActualParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_grammarInstruction * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_grammarInstruction * operator () (void) const {
      return (cPtr_grammarInstruction *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      list '@grammarInstructionList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_grammarInstructionList : public AC_galgas_list {
  public : typedef cPtr_grammarInstruction element_type ;
//--- Constructor 'emptyList'
  public : static GGS_grammarInstructionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS_grammarInstructionList constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_actualParameters & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS_grammarInstructionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_grammarInstruction & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_grammarInstruction & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_grammarInstruction & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_grammarInstruction & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_grammarInstruction & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS_grammarInstructionList _operator_concat (const GGS_grammarInstructionList & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_actualParameters & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_actualParameters & argument_3) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_semanticExpression & argument_2,
                                const GGS_actualParameters & argument_3) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_grammarInstruction & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@syntaxInstructionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_syntaxInstruction : public C_GGS_MetamodelEntity {
//--- Attributes
//--- Constructor
  public : cPtr_syntaxInstruction (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_syntaxInstruction * nextObject (void) const {
    return (cPtr_syntaxInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_syntaxInstruction * previousObject (void) const {
    return (cPtr_syntaxInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_syntaxInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_syntaxInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@semanticInstructionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticInstruction : public cPtr_syntaxInstruction {
//--- Attributes
//--- Constructor
  public : cPtr_semanticInstruction (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_semanticInstruction * nextObject (void) const {
    return (cPtr_semanticInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_semanticInstruction * previousObject (void) const {
    return (cPtr_semanticInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_semanticInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_semanticInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@semanticInstructionsList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticInstructions : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_semanticInstructionList  mInstruction ;
//--- Constructor
  public : cPtr_semanticInstructions (const GGS_semanticInstructionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_semanticInstructions * nextObject (void) const {
    return (cPtr_semanticInstructions *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_semanticInstructions * previousObject (void) const {
    return (cPtr_semanticInstructions *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_semanticInstructions * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_semanticInstructionsList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@semanticDeclarationList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticDeclaration : public C_GGS_MetamodelEntity {
//--- Attributes
//--- Constructor
  public : cPtr_semanticDeclaration (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_semanticDeclaration * nextObject (void) const {
    return (cPtr_semanticDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_semanticDeclaration * previousObject (void) const {
    return (cPtr_semanticDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_semanticDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_semanticDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@routineDeclarationList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_routineDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mRoutineName ;
  public : GGS_formalParameters  mFormalParameters ;
  public : GGS_semanticInstructions  mRoutineInstructions ;
//--- Constructor
  public : cPtr_routineDeclaration (const GGS_lstring & ,
                                const GGS_formalParameters & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_routineDeclaration * nextObject (void) const {
    return (cPtr_routineDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_routineDeclaration * previousObject (void) const {
    return (cPtr_routineDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_routineDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_routineDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@actionDeclarationList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_actionDeclaration : public cPtr_semanticDeclaration {
//--- Attributes
  public : GGS_lstring  mActionName ;
  public : GGS_formalParameters  mFormalParameters ;
//--- Constructor
  public : cPtr_actionDeclaration (const GGS_lstring & ,
                                const GGS_formalParameters & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_actionDeclaration * nextObject (void) const {
    return (cPtr_actionDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_actionDeclaration * previousObject (void) const {
    return (cPtr_actionDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_actionDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_actionDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@localVariableDeclarationList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_localVariableDeclaration : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mVariableName ;
//--- Constructor
  public : cPtr_localVariableDeclaration (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_localVariableDeclaration * nextObject (void) const {
    return (cPtr_localVariableDeclaration *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_localVariableDeclaration * previousObject (void) const {
    return (cPtr_localVariableDeclaration *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_localVariableDeclaration * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_localVariableDeclarationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Element of list '@localVariableDeclarationWithInitializationList'      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_localVariableDeclarationWithInitialization : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mVariableName ;
  public : GGS_lstring  mConstructorName ;
  public : GGS_outExpressionList  mConstructorArguments ;
//--- Constructor
  public : cPtr_localVariableDeclarationWithInitialization (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_outExpressionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_localVariableDeclarationWithInitialization * nextObject (void) const {
    return (cPtr_localVariableDeclarationWithInitialization *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_localVariableDeclarationWithInitialization * previousObject (void) const {
    return (cPtr_localVariableDeclarationWithInitialization *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_localVariableDeclarationWithInitialization * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_localVariableDeclarationWithInitializationList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Element of list '@localVariableDeclarationWithAssignmentList'        *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_localVariableDeclarationWithAssignment : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mVariableName ;
  public : GGS_semanticExpression  mSourceExpression ;
//--- Constructor
  public : cPtr_localVariableDeclarationWithAssignment (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_localVariableDeclarationWithAssignment * nextObject (void) const {
    return (cPtr_localVariableDeclarationWithAssignment *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_localVariableDeclarationWithAssignment * previousObject (void) const {
    return (cPtr_localVariableDeclarationWithAssignment *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_localVariableDeclarationWithAssignment * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_localVariableDeclarationWithAssignmentList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@assignmentInstructionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_assignmentInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mTargetVariableName ;
  public : GGS_semanticExpression  mSourceExpression ;
//--- Constructor
  public : cPtr_assignmentInstruction (const GGS_lstring & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_assignmentInstruction * nextObject (void) const {
    return (cPtr_assignmentInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_assignmentInstruction * previousObject (void) const {
    return (cPtr_assignmentInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_assignmentInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_assignmentInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Element of list '@foreachInstructionEnumeratedObjectElementList'      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_foreachInstructionEnumeratedObjectElement : public C_GGS_MetamodelEntity {
//--- Attributes
//--- Constructor
  public : cPtr_foreachInstructionEnumeratedObjectElement (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_foreachInstructionEnumeratedObjectElement * nextObject (void) const {
    return (cPtr_foreachInstructionEnumeratedObjectElement *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_foreachInstructionEnumeratedObjectElement * previousObject (void) const {
    return (cPtr_foreachInstructionEnumeratedObjectElement *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_foreachInstructionEnumeratedObjectElement * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_foreachInstructionEnumeratedObjectElementList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@foreachInstructionJokerList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_foreachInstructionJoker : public cPtr_foreachInstructionEnumeratedObjectElement {
//--- Attributes
//--- Constructor
  public : cPtr_foreachInstructionJoker (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_foreachInstructionJoker * nextObject (void) const {
    return (cPtr_foreachInstructionJoker *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_foreachInstructionJoker * previousObject (void) const {
    return (cPtr_foreachInstructionJoker *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_foreachInstructionJoker * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_foreachInstructionJokerList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Element of list '@foreachInstructionEnumeratedConstantList'         *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_foreachInstructionEnumeratedConstant : public cPtr_foreachInstructionEnumeratedObjectElement {
//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mConstantName ;
//--- Constructor
  public : cPtr_foreachInstructionEnumeratedConstant (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_foreachInstructionEnumeratedConstant * nextObject (void) const {
    return (cPtr_foreachInstructionEnumeratedConstant *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_foreachInstructionEnumeratedConstant * previousObject (void) const {
    return (cPtr_foreachInstructionEnumeratedConstant *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_foreachInstructionEnumeratedConstant * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_foreachInstructionEnumeratedConstantList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Element of list '@foreachInstructionEnumeratedObjectList'          *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_foreachInstructionEnumeratedObject : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_semanticExpression  mEnumeratedExpression ;
  public : GGS_foreachInstructionEnumeratedObjectElementList  mElements ;
  public : GGS_bool mEndsWithEllipsis ;
//--- Constructor
  public : cPtr_foreachInstructionEnumeratedObject (const GGS_semanticExpression & ,
                                const GGS_foreachInstructionEnumeratedObjectElementList & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_foreachInstructionEnumeratedObject * nextObject (void) const {
    return (cPtr_foreachInstructionEnumeratedObject *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_foreachInstructionEnumeratedObject * previousObject (void) const {
    return (cPtr_foreachInstructionEnumeratedObject *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_foreachInstructionEnumeratedObject * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_foreachInstructionEnumeratedObjectList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@foreachInstructionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_foreachInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_foreachInstructionEnumeratedObjectList  mEnumeratedObjects ;
  public : GGS_semanticExpression  mWhileExpression ;
  public : GGS_semanticInstructions  mInstructionList ;
//--- Constructor
  public : cPtr_foreachInstruction (const GGS_foreachInstructionEnumeratedObjectList & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_foreachInstruction * nextObject (void) const {
    return (cPtr_foreachInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_foreachInstruction * previousObject (void) const {
    return (cPtr_foreachInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_foreachInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_foreachInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@ifInstructionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ifInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_semanticExpressionList  mIFexpressionList ;
  public : GGS_semanticInstructionsList  mIFinstructionListList ;
  public : GGS_semanticInstructionsList  mElseInstructionList ;
//--- Constructor
  public : cPtr_ifInstruction (const GGS_semanticExpressionList & ,
                                const GGS_semanticInstructionsList & ,
                                const GGS_semanticInstructionsList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_ifInstruction * nextObject (void) const {
    return (cPtr_ifInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_ifInstruction * previousObject (void) const {
    return (cPtr_ifInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_ifInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_ifInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@methodCallInstructionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_methodCallInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_semanticExpression  mReceiverExpression ;
  public : GGS_lstring  mMethodName ;
  public : GGS_actualParameters  mActualParameterList ;
//--- Constructor
  public : cPtr_methodCallInstruction (const GGS_semanticExpression & ,
                                const GGS_lstring & ,
                                const GGS_actualParameters & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_methodCallInstruction * nextObject (void) const {
    return (cPtr_methodCallInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_methodCallInstruction * previousObject (void) const {
    return (cPtr_methodCallInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_methodCallInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_methodCallInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@modifierCallInstructionList'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_modifierCallInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mReceiverName ;
  public : GGS_lstring  mModifierName ;
  public : GGS_actualParameters  mActualParameterList ;
//--- Constructor
  public : cPtr_modifierCallInstruction (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_actualParameters & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_modifierCallInstruction * nextObject (void) const {
    return (cPtr_modifierCallInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_modifierCallInstruction * previousObject (void) const {
    return (cPtr_modifierCallInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_modifierCallInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_modifierCallInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@errorInstructionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_errorInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_semanticExpression  mReceiverExpression ;
  public : GGS_semanticExpression  mErrorExpression ;
  public : GGS_lstringlist  mBuiltVariableList ;
//--- Constructor
  public : cPtr_errorInstruction (const GGS_semanticExpression & ,
                                const GGS_semanticExpression & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_errorInstruction * nextObject (void) const {
    return (cPtr_errorInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_errorInstruction * previousObject (void) const {
    return (cPtr_errorInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_errorInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_errorInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@warningInstructionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_warningInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_semanticExpression  mReceiverExpression ;
  public : GGS_semanticExpression  mErrorExpression ;
//--- Constructor
  public : cPtr_warningInstruction (const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_warningInstruction * nextObject (void) const {
    return (cPtr_warningInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_warningInstruction * previousObject (void) const {
    return (cPtr_warningInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_warningInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_warningInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@routineCallInstructionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_routineCallInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mRoutineName ;
  public : GGS_actualParameters  mActualParameterList ;
//--- Constructor
  public : cPtr_routineCallInstruction (const GGS_lstring & ,
                                const GGS_actualParameters & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_routineCallInstruction * nextObject (void) const {
    return (cPtr_routineCallInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_routineCallInstruction * previousObject (void) const {
    return (cPtr_routineCallInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_routineCallInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_routineCallInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@matchEntryList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_matchEntry : public C_GGS_MetamodelEntity {
//--- Attributes
//--- Constructor
  public : cPtr_matchEntry (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_matchEntry * nextObject (void) const {
    return (cPtr_matchEntry *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_matchEntry * previousObject (void) const {
    return (cPtr_matchEntry *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_matchEntry * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_matchEntryList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@constantMatchEntryList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_constantMatchEntry : public cPtr_matchEntry {
//--- Attributes
  public : GGS_lstring  mConstantName ;
//--- Constructor
  public : cPtr_constantMatchEntry (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_constantMatchEntry * nextObject (void) const {
    return (cPtr_constantMatchEntry *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_constantMatchEntry * previousObject (void) const {
    return (cPtr_constantMatchEntry *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_constantMatchEntry * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_constantMatchEntryList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@classMatchEntryList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_classMatchEntry : public cPtr_matchEntry {
//--- Attributes
  public : GGS_lstring  mClassName ;
  public : GGS_foreachInstructionEnumeratedObjectElementList  mElements ;
  public : GGS_bool mEndsWithEllipsis ;
//--- Constructor
  public : cPtr_classMatchEntry (const GGS_lstring & ,
                                const GGS_foreachInstructionEnumeratedObjectElementList & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_classMatchEntry * nextObject (void) const {
    return (cPtr_classMatchEntry *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_classMatchEntry * previousObject (void) const {
    return (cPtr_classMatchEntry *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_classMatchEntry * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_classMatchEntryList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@matchInstructionBranchList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_matchInstructionBranch : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_matchEntryList  mMatchedEntryList ;
  public : GGS_semanticInstructions  mMatchBranchInstructionList ;
//--- Constructor
  public : cPtr_matchInstructionBranch (const GGS_matchEntryList & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_matchInstructionBranch * nextObject (void) const {
    return (cPtr_matchInstructionBranch *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_matchInstructionBranch * previousObject (void) const {
    return (cPtr_matchInstructionBranch *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_matchInstructionBranch * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_matchInstructionBranchList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@matchInstructionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_matchInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstringlist  mMatchedVariableNameList ;
  public : GGS_matchInstructionBranchList  mMatchInstructionBranchList ;
  public : GGS_semanticInstructionsList  mElseInstructionList ;
//--- Constructor
  public : cPtr_matchInstruction (const GGS_lstringlist & ,
                                const GGS_matchInstructionBranchList & ,
                                const GGS_semanticInstructionsList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_matchInstruction * nextObject (void) const {
    return (cPtr_matchInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_matchInstruction * previousObject (void) const {
    return (cPtr_matchInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_matchInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_matchInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@castInstructionBranchList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_castInstructionBranch : public C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_bool mUseKindOfClass ;
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mConstantVarName ;
  public : GGS_bool mConstantVarNameIsUnused ;
  public : GGS_semanticInstructions  mCastBranchInstructionList ;
//--- Constructor
  public : cPtr_castInstructionBranch (const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_castInstructionBranch * nextObject (void) const {
    return (cPtr_castInstructionBranch *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_castInstructionBranch * previousObject (void) const {
    return (cPtr_castInstructionBranch *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_castInstructionBranch * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_castInstructionBranchList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of list '@elseOrDefaultForCastInstructionList'           *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_elseOrDefaultForCastInstruction : public C_GGS_MetamodelEntity {
//--- Attributes
//--- Constructor
  public : cPtr_elseOrDefaultForCastInstruction (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_elseOrDefaultForCastInstruction * nextObject (void) const {
    return (cPtr_elseOrDefaultForCastInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_elseOrDefaultForCastInstruction * previousObject (void) const {
    return (cPtr_elseOrDefaultForCastInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_elseOrDefaultForCastInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_elseOrDefaultForCastInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@elseForCastInstructionList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_elseForCastInstruction : public cPtr_elseOrDefaultForCastInstruction {
//--- Attributes
  public : GGS_semanticInstructions  mElseInstructionList ;
//--- Constructor
  public : cPtr_elseForCastInstruction (const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_elseForCastInstruction * nextObject (void) const {
    return (cPtr_elseForCastInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_elseForCastInstruction * previousObject (void) const {
    return (cPtr_elseForCastInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_elseForCastInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_elseForCastInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Element of list '@defaultForCastInstructionList'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_defaultForCastInstruction : public cPtr_elseOrDefaultForCastInstruction {
//--- Attributes
  public : GGS_semanticExpression  mErrorLocationExpression ;
//--- Constructor
  public : cPtr_defaultForCastInstruction (const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_defaultForCastInstruction * nextObject (void) const {
    return (cPtr_defaultForCastInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_defaultForCastInstruction * previousObject (void) const {
    return (cPtr_defaultForCastInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_defaultForCastInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_defaultForCastInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@castInstructionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_castInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_semanticExpression  mExpression ;
  public : GGS_castInstructionBranchList  mCastInstructionBranchList ;
  public : GGS_elseOrDefaultForCastInstruction  mElseOrDefault ;
//--- Constructor
  public : cPtr_castInstruction (const GGS_semanticExpression & ,
                                const GGS_castInstructionBranchList & ,
                                const GGS_elseOrDefaultForCastInstruction & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_castInstruction * nextObject (void) const {
    return (cPtr_castInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_castInstruction * previousObject (void) const {
    return (cPtr_castInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_castInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_castInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@appendInstructionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_appendInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mReceiverName ;
  public : GGS_outExpressionList  mExpressionList ;
//--- Constructor
  public : cPtr_appendInstruction (const GGS_lstring & ,
                                const GGS_outExpressionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_appendInstruction * nextObject (void) const {
    return (cPtr_appendInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_appendInstruction * previousObject (void) const {
    return (cPtr_appendInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_appendInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_appendInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@incrementInstructionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_incrementInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mReceiverName ;
//--- Constructor
  public : cPtr_incrementInstruction (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_incrementInstruction * nextObject (void) const {
    return (cPtr_incrementInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_incrementInstruction * previousObject (void) const {
    return (cPtr_incrementInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_incrementInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_incrementInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@decrementInstructionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_decrementInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mReceiverName ;
//--- Constructor
  public : cPtr_decrementInstruction (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_decrementInstruction * nextObject (void) const {
    return (cPtr_decrementInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_decrementInstruction * previousObject (void) const {
    return (cPtr_decrementInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_decrementInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_decrementInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@loopInstructionList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_loopInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_semanticExpression  mVariantExpression ;
  public : GGS_semanticInstructions  mFirstInstructions ;
  public : GGS_semanticExpression  mLoopExpression ;
  public : GGS_semanticInstructions  mSecondInstructions ;
//--- Constructor
  public : cPtr_loopInstruction (const GGS_semanticExpression & ,
                                const GGS_semanticInstructions & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticInstructions & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_loopInstruction * nextObject (void) const {
    return (cPtr_loopInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_loopInstruction * previousObject (void) const {
    return (cPtr_loopInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_loopInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_loopInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@messageInstructionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_messageInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_semanticExpression  mExpression ;
//--- Constructor
  public : cPtr_messageInstruction (const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_messageInstruction * nextObject (void) const {
    return (cPtr_messageInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_messageInstruction * previousObject (void) const {
    return (cPtr_messageInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_messageInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_messageInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@logInstructionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_logInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstringlist  mLoggedVariableList ;
//--- Constructor
  public : cPtr_logInstruction (const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_logInstruction * nextObject (void) const {
    return (cPtr_logInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_logInstruction * previousObject (void) const {
    return (cPtr_logInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_logInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_logInstructionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@grammarInstructionList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_grammarInstruction : public cPtr_semanticInstruction {
//--- Attributes
  public : GGS_lstring  mGrammarComponentName ;
  public : GGS_lstring  mLabelName ;
  public : GGS_semanticExpression  mSourceFileExpression ;
  public : GGS_actualParameters  mActualParameterList ;
//--- Constructor
  public : cPtr_grammarInstruction (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_semanticExpression & ,
                                const GGS_actualParameters & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_grammarInstruction * nextObject (void) const {
    return (cPtr_grammarInstruction *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_grammarInstruction * previousObject (void) const {
    return (cPtr_grammarInstruction *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Index
  public : virtual uint32 _metamodelIndex (void) const ;

//--- Metamodel Class ID
  public : virtual uint32 _metamodelClassID (void) const ;

//--- 'clone' virtual method
  public : virtual cPtr_grammarInstruction * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS_grammarInstructionList ;
} ;

//---------------------------------------------------------------------------*

#endif
