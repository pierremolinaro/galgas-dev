//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticAnalysis.cpp'                         *
//                        Generated by version 2.5.0                         *
//                       july 10th, 2013, at 19h2'41"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                     Function 'forbiddenKeysForStruct'                     *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_stringset function_forbiddenKeysForStruct (C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'check_K_escapeCharacters'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_check_5F_K_5F_escapeCharacters (GALGAS_lstring inArgument0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'check_K_L_escapeCharacters'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_check_5F_K_5F_L_5F_escapeCharacters (GALGAS_lstring inArgument0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Function 'forbiddenKeysForMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_stringset function_forbiddenKeysForMap (C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkMethodSignatures'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkMethodSignatures (const GALGAS_formalParameterListForGeneration constinArgument_inTestedSignature,
                                    const GALGAS_location constinArgument_inErrorLocation,
                                    const GALGAS_formalParameterSignature constinArgument_inReferenceSignature,
                                    const GALGAS_location constinArgument_inReferenceLocation,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (37)).objectCompare (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (37)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("this method declares ").operator_concat (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (38)).reader_string (SOURCE_FILE_AT_LINE (38)) COMMA_SOURCE_FILE_AT_LINE (38)).operator_concat (GALGAS_string (" formal parameter(s), but overriden method declares ") COMMA_SOURCE_FILE_AT_LINE (39)).operator_concat (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (39)).reader_string (SOURCE_FILE_AT_LINE (39)) COMMA_SOURCE_FILE_AT_LINE (39)) COMMA_SOURCE_FILE_AT_LINE (38)) ;
    inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden method is declared here") COMMA_SOURCE_FILE_AT_LINE (41)) ;
  }else if (kBoolFalse == test_0) {
    cEnumerator_formalParameterSignature enumerator_2544 (constinArgument_inReferenceSignature, kEnumeration_up) ;
    cEnumerator_formalParameterListForGeneration enumerator_2571 (constinArgument_inTestedSignature, kEnumeration_up) ;
    while (enumerator_2544.hasCurrentObject () && enumerator_2571.hasCurrentObject ()) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_2544.current_mFormalArgumentPassingMode (HERE).objectCompare (enumerator_2571.current_mFormalArgumentPassingMode (HERE))).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_2571.current_mFormalArgumentName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_2571.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (GALGAS_string ("' formal parameter is declared as ") COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (categoryReader_formalArgumentMessage (enumerator_2571.current_mFormalArgumentPassingMode (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (GALGAS_string (", but overriden method declares it as ") COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (categoryReader_formalArgumentMessage (enumerator_2544.current_mFormalArgumentPassingMode (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (45)) ;
        inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden method is declared here") COMMA_SOURCE_FILE_AT_LINE (48)) ;
      }
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_2571.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (50)).objectCompare (enumerator_2544.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (50)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_2571.current_mFormalArgumentName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the '").operator_concat (enumerator_2571.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (51)) COMMA_SOURCE_FILE_AT_LINE (51)).operator_concat (GALGAS_string ("' formal parameter has the '@") COMMA_SOURCE_FILE_AT_LINE (51)).operator_concat (enumerator_2571.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (52)) COMMA_SOURCE_FILE_AT_LINE (52)).operator_concat (GALGAS_string ("' type, but overriden method declares with the '@") COMMA_SOURCE_FILE_AT_LINE (52)).operator_concat (enumerator_2544.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (53)) COMMA_SOURCE_FILE_AT_LINE (53)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (53)) COMMA_SOURCE_FILE_AT_LINE (51)) ;
        inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden method is declared here") COMMA_SOURCE_FILE_AT_LINE (54)) ;
      }
      enumerator_2544.gotoNextObject () ;
      enumerator_2571.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkReaderSignatures'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkReaderSignatures (const GALGAS_formalInputParameterListForGeneration constinArgument_inTestedSignature,
                                    const GALGAS_unifiedTypeMapProxy constinArgument_inReturnType,
                                    const GALGAS_location constinArgument_inErrorLocation,
                                    const GALGAS_unifiedTypeMapProxyList constinArgument_inReferenceSignature,
                                    const GALGAS_unifiedTypeMapProxy constinArgument_inInheritedReturnType,
                                    const GALGAS_location constinArgument_inReferenceLocation,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inReturnType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (74)).objectCompare (constinArgument_inInheritedReturnType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (74)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the return type is '@").operator_concat (constinArgument_inReturnType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (76)) COMMA_SOURCE_FILE_AT_LINE (76)).operator_concat (GALGAS_string ("', but overriden reader names '@") COMMA_SOURCE_FILE_AT_LINE (76)).operator_concat (constinArgument_inInheritedReturnType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (77)) COMMA_SOURCE_FILE_AT_LINE (77)).operator_concat (GALGAS_string ("' as return type") COMMA_SOURCE_FILE_AT_LINE (77)) COMMA_SOURCE_FILE_AT_LINE (75)) ;
    inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden reader is declared here") COMMA_SOURCE_FILE_AT_LINE (78)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (80)).objectCompare (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (80)))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("this reader declares ").operator_concat (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (81)).reader_string (SOURCE_FILE_AT_LINE (81)) COMMA_SOURCE_FILE_AT_LINE (81)).operator_concat (GALGAS_string (" formal parameter(s), but overriden reader declares ") COMMA_SOURCE_FILE_AT_LINE (82)).operator_concat (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (82)).reader_string (SOURCE_FILE_AT_LINE (82)) COMMA_SOURCE_FILE_AT_LINE (82)) COMMA_SOURCE_FILE_AT_LINE (81)) ;
    inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden reader is declared here") COMMA_SOURCE_FILE_AT_LINE (84)) ;
  }else if (kBoolFalse == test_1) {
    cEnumerator_unifiedTypeMapProxyList enumerator_4837 (constinArgument_inReferenceSignature, kEnumeration_up) ;
    cEnumerator_formalInputParameterListForGeneration enumerator_4864 (constinArgument_inTestedSignature, kEnumeration_up) ;
    while (enumerator_4837.hasCurrentObject () && enumerator_4864.hasCurrentObject ()) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_4864.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (87)).objectCompare (enumerator_4837.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (87)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_location location_3 (enumerator_4864.current_mFormalArgumentName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (enumerator_4864.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (88)) COMMA_SOURCE_FILE_AT_LINE (88)).operator_concat (GALGAS_string ("' formal parameter has the '@") COMMA_SOURCE_FILE_AT_LINE (88)).operator_concat (enumerator_4864.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (89)) COMMA_SOURCE_FILE_AT_LINE (89)).operator_concat (GALGAS_string ("' type, but overriden reader declares with the '@") COMMA_SOURCE_FILE_AT_LINE (89)).operator_concat (enumerator_4837.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (90)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (88)) ;
        inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden reader is declared here") COMMA_SOURCE_FILE_AT_LINE (91)) ;
      }
      enumerator_4837.gotoNextObject () ;
      enumerator_4864.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------*

cMapElement_attributeIndexMap::cMapElement_attributeIndexMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_unifiedTypeMapProxy & in_mAttributeTypeIndex
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAttributeTypeIndex (in_mAttributeTypeIndex) {
}

//---------------------------------------------------------------------------*

bool cMapElement_attributeIndexMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeTypeIndex.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_attributeIndexMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_attributeIndexMap (mAttribute_lkey, mAttribute_mAttributeTypeIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_attributeIndexMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeTypeIndex" ":" ;
  mAttribute_mAttributeTypeIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_attributeIndexMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_attributeIndexMap * operand = (cMapElement_attributeIndexMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeTypeIndex.objectCompare (operand->mAttribute_mAttributeTypeIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap::GALGAS_attributeIndexMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap::GALGAS_attributeIndexMap (const GALGAS_attributeIndexMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap & GALGAS_attributeIndexMap::operator = (const GALGAS_attributeIndexMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_attributeIndexMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::constructor_mapWithMapToOverride (const GALGAS_attributeIndexMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_attributeIndexMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_attributeIndexMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMapProxy inArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_attributeIndexMap * p = NULL ;
  macroMyNew (p, cMapElement_attributeIndexMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' attribute is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_attributeIndexMap_searchKey = "the '%K' attribute is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_unifiedTypeMapProxy & outArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_attributeIndexMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_attributeIndexMap) ;
    outArgument0 = p->mAttribute_mAttributeTypeIndex ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_attributeIndexMap::reader_mAttributeTypeIndexForKey (const GALGAS_string & inKey,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_attributeIndexMap) ;
    result = p->mAttribute_mAttributeTypeIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::modifier_setMAttributeTypeIndexForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_attributeIndexMap * p = (cMapElement_attributeIndexMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
    p->mAttribute_mAttributeTypeIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_attributeIndexMap * GALGAS_attributeIndexMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                    const GALGAS_string & inKey
                                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_attributeIndexMap * result = (cMapElement_attributeIndexMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_attributeIndexMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_attributeIndexMap * GALGAS_attributeIndexMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                       const GALGAS_lstring & inKey
                                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_attributeIndexMap_searchKey COMMA_THERE) ;
  cMapElement_attributeIndexMap * result = (cMapElement_attributeIndexMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_attributeIndexMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_attributeIndexMap::cEnumerator_attributeIndexMap (const GALGAS_attributeIndexMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element cEnumerator_attributeIndexMap::current (LOCATION_ARGS) const {
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_attributeIndexMap) ;
  return GALGAS_attributeIndexMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAttributeTypeIndex) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_attributeIndexMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_attributeIndexMap::current_mAttributeTypeIndex (LOCATION_ARGS) const {
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_attributeIndexMap) ;
  return p->mAttribute_mAttributeTypeIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @attributeIndexMap type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeIndexMap ("attributeIndexMap",
                                          NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeIndexMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeIndexMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeIndexMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeIndexMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_attributeIndexMap result ;
  const GALGAS_attributeIndexMap * p = (const GALGAS_attributeIndexMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeIndexMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeIndexMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  Once function 'forbiddenKeysForStruct'                   *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_forbiddenKeysForStruct (C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (241)) ;
  result_outResult.addAssign_operation (GALGAS_string ("description") COMMA_SOURCE_FILE_AT_LINE (242)) ;
  result_outResult.addAssign_operation (GALGAS_string ("object") COMMA_SOURCE_FILE_AT_LINE (243)) ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------*
//  Function implementation                                                  *
//---------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_forbiddenKeysForStruct = false ;
static GALGAS_stringset gOnceFunctionResult_forbiddenKeysForStruct ;

//---------------------------------------------------------------------------*

GALGAS_stringset function_forbiddenKeysForStruct (C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_forbiddenKeysForStruct) {
    gOnceFunctionResult_forbiddenKeysForStruct = onceFunction_forbiddenKeysForStruct (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_forbiddenKeysForStruct = true ;
  }
  return gOnceFunctionResult_forbiddenKeysForStruct ;
}

//---------------------------------------------------------------------------*

static void releaseOnceFunctionResult_forbiddenKeysForStruct (void) {
  gOnceFunctionResult_forbiddenKeysForStruct.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_forbiddenKeysForStruct (NULL,
                                                                    releaseOnceFunctionResult_forbiddenKeysForStruct) ;

//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_forbiddenKeysForStruct [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_forbiddenKeysForStruct (C_Compiler * inCompiler,
                                                                       const cObjectArray & /* inEffectiveParameterArray */,
                                                                       const GALGAS_location & /* inErrorLocation */
                                                                       COMMA_LOCATION_ARGS) {
  return function_forbiddenKeysForStruct (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_forbiddenKeysForStruct ("forbiddenKeysForStruct",
                                                                        functionWithGenericHeader_forbiddenKeysForStruct,
                                                                        & kTypeDescriptor_GALGAS_stringset,
                                                                        0,
                                                                        functionArgs_forbiddenKeysForStruct) ;

//---------------------------------------------------------------------------*

cMapElement_constantIndexMap::cMapElement_constantIndexMap (const GALGAS_lstring & inKey,
                                                            const GALGAS_uint & in_mIndex
                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIndex (in_mIndex) {
}

//---------------------------------------------------------------------------*

bool cMapElement_constantIndexMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_constantIndexMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_constantIndexMap (mAttribute_lkey, mAttribute_mIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_constantIndexMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIndex" ":" ;
  mAttribute_mIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_constantIndexMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_constantIndexMap * operand = (cMapElement_constantIndexMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIndex.objectCompare (operand->mAttribute_mIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap::GALGAS_constantIndexMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap::GALGAS_constantIndexMap (const GALGAS_constantIndexMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap & GALGAS_constantIndexMap::operator = (const GALGAS_constantIndexMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap GALGAS_constantIndexMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_constantIndexMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap GALGAS_constantIndexMap::constructor_mapWithMapToOverride (const GALGAS_constantIndexMap & inMapToOverride
                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_constantIndexMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap GALGAS_constantIndexMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_constantIndexMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_constantIndexMap::modifier_insertKey (GALGAS_lstring inKey,
                                                  GALGAS_uint inArgument0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_constantIndexMap * p = NULL ;
  macroMyNew (p, cMapElement_constantIndexMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' constant is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_constantIndexMap_searchKey = "the '%K' constant is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_constantIndexMap::method_searchKey (GALGAS_lstring inKey,
                                                GALGAS_uint & outArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  const cMapElement_constantIndexMap * p = (const cMapElement_constantIndexMap *) performSearch (inKey,
                                                                                                   inCompiler,
                                                                                                   kSearchErrorMessage_constantIndexMap_searchKey
                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_constantIndexMap) ;
    outArgument0 = p->mAttribute_mIndex ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_constantIndexMap::reader_mIndexForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_constantIndexMap * p = (const cMapElement_constantIndexMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_constantIndexMap) ;
    result = p->mAttribute_mIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_constantIndexMap::modifier_setMIndexForKey (GALGAS_uint inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constantIndexMap * p = (cMapElement_constantIndexMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constantIndexMap) ;
    p->mAttribute_mIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_constantIndexMap * GALGAS_constantIndexMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                  const GALGAS_string & inKey
                                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constantIndexMap * result = (cMapElement_constantIndexMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_constantIndexMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_constantIndexMap * GALGAS_constantIndexMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                     const GALGAS_lstring & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_constantIndexMap_searchKey COMMA_THERE) ;
  cMapElement_constantIndexMap * result = (cMapElement_constantIndexMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_constantIndexMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_constantIndexMap::cEnumerator_constantIndexMap (const GALGAS_constantIndexMap & inEnumeratedObject,
                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element cEnumerator_constantIndexMap::current (LOCATION_ARGS) const {
  const cMapElement_constantIndexMap * p = (const cMapElement_constantIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_constantIndexMap) ;
  return GALGAS_constantIndexMap_2E_element (p->mAttribute_lkey, p->mAttribute_mIndex) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_constantIndexMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_uint cEnumerator_constantIndexMap::current_mIndex (LOCATION_ARGS) const {
  const cMapElement_constantIndexMap * p = (const cMapElement_constantIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_constantIndexMap) ;
  return p->mAttribute_mIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @constantIndexMap type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constantIndexMap ("constantIndexMap",
                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constantIndexMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constantIndexMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constantIndexMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constantIndexMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap GALGAS_constantIndexMap::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_constantIndexMap result ;
  const GALGAS_constantIndexMap * p = (const GALGAS_constantIndexMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constantIndexMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constantIndexMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_insertMethodMap::cMapElement_insertMethodMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_insertMethodMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_insertMethodMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_insertMethodMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_insertMethodMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_insertMethodMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_insertMethodMap * operand = (cMapElement_insertMethodMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap::GALGAS_insertMethodMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap::GALGAS_insertMethodMap (const GALGAS_insertMethodMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap & GALGAS_insertMethodMap::operator = (const GALGAS_insertMethodMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_insertMethodMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::constructor_mapWithMapToOverride (const GALGAS_insertMethodMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_insertMethodMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_insertMethodMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_insertMethodMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_insertMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_insertMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' insert modifier is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

cMapElement_insertMethodMap * GALGAS_insertMethodMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_insertMethodMap * result = (cMapElement_insertMethodMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_insertMethodMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_insertMethodMap::cEnumerator_insertMethodMap (const GALGAS_insertMethodMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element cEnumerator_insertMethodMap::current (LOCATION_ARGS) const {
  const cMapElement_insertMethodMap * p = (const cMapElement_insertMethodMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_insertMethodMap) ;
  return GALGAS_insertMethodMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_insertMethodMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @insertMethodMap type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_insertMethodMap ("insertMethodMap",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_insertMethodMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_insertMethodMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_insertMethodMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_insertMethodMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_insertMethodMap result ;
  const GALGAS_insertMethodMap * p = (const GALGAS_insertMethodMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_insertMethodMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("insertMethodMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_searchMethodMap::cMapElement_searchMethodMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_searchMethodMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_searchMethodMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_searchMethodMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_searchMethodMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_searchMethodMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_searchMethodMap * operand = (cMapElement_searchMethodMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap::GALGAS_searchMethodMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap::GALGAS_searchMethodMap (const GALGAS_searchMethodMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap & GALGAS_searchMethodMap::operator = (const GALGAS_searchMethodMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_searchMethodMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::constructor_mapWithMapToOverride (const GALGAS_searchMethodMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_searchMethodMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_searchMethodMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_searchMethodMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_searchMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_searchMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' search method is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

cMapElement_searchMethodMap * GALGAS_searchMethodMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_searchMethodMap * result = (cMapElement_searchMethodMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_searchMethodMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_searchMethodMap::cEnumerator_searchMethodMap (const GALGAS_searchMethodMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element cEnumerator_searchMethodMap::current (LOCATION_ARGS) const {
  const cMapElement_searchMethodMap * p = (const cMapElement_searchMethodMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_searchMethodMap) ;
  return GALGAS_searchMethodMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_searchMethodMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @searchMethodMap type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_searchMethodMap ("searchMethodMap",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_searchMethodMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_searchMethodMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_searchMethodMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_searchMethodMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_searchMethodMap result ;
  const GALGAS_searchMethodMap * p = (const GALGAS_searchMethodMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_searchMethodMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("searchMethodMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'check_K_escapeCharacters'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_check_5F_K_5F_escapeCharacters (GALGAS_lstring inArgument_inString,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_stringlist enumerator_17274 (inArgument_inString.reader_string (SOURCE_FILE_AT_LINE (432)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (432)), kEnumeration_up) ;
  while (enumerator_17274.hasCurrentObject ()) {
    GALGAS_stringlist var_explodedArray = enumerator_17274.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (433)) ;
    {
    GALGAS_string joker_17384_0 ; // Joker input parameter
    var_explodedArray.modifier_popFirst (joker_17384_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (434)) ;
    }
    cEnumerator_stringlist enumerator_17416 (var_explodedArray, kEnumeration_up) ;
    while (enumerator_17416.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, enumerator_17416.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (436)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_char var_c = enumerator_17416.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (437)) ;
        const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (inArgument_inString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("only '%K' and '%%' escape sequences are allowed in this error message") COMMA_SOURCE_FILE_AT_LINE (439)) ;
        }
      }
      enumerator_17416.gotoNextObject () ;
    }
    enumerator_17274.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'check_K_L_escapeCharacters'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_check_5F_K_5F_L_5F_escapeCharacters (GALGAS_lstring inArgument_inString,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_stringlist enumerator_17969 (inArgument_inString.reader_string (SOURCE_FILE_AT_LINE (452)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (452)), kEnumeration_up) ;
  while (enumerator_17969.hasCurrentObject ()) {
    GALGAS_stringlist var_explodedArray = enumerator_17969.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (453)) ;
    {
    GALGAS_string joker_18079_0 ; // Joker input parameter
    var_explodedArray.modifier_popFirst (joker_18079_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (454)) ;
    }
    cEnumerator_stringlist enumerator_18111 (var_explodedArray, kEnumeration_up) ;
    while (enumerator_18111.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, enumerator_18111.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (456)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_char var_c = enumerator_18111.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (457)) ;
        const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).operator_and (GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (76)))) COMMA_SOURCE_FILE_AT_LINE (458)).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (inArgument_inString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("only '%K', '%L' and '%%' escape sequences are allowed in this error message") COMMA_SOURCE_FILE_AT_LINE (459)) ;
        }
      }
      enumerator_18111.gotoNextObject () ;
    }
    enumerator_17969.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                    Once function 'forbiddenKeysForMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_forbiddenKeysForMap (C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (469)) ;
  result_outResult.addAssign_operation (GALGAS_string ("lkey") COMMA_SOURCE_FILE_AT_LINE (470)) ;
  result_outResult.addAssign_operation (GALGAS_string ("description") COMMA_SOURCE_FILE_AT_LINE (471)) ;
  result_outResult.addAssign_operation (GALGAS_string ("object") COMMA_SOURCE_FILE_AT_LINE (472)) ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------*
//  Function implementation                                                  *
//---------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_forbiddenKeysForMap = false ;
static GALGAS_stringset gOnceFunctionResult_forbiddenKeysForMap ;

//---------------------------------------------------------------------------*

GALGAS_stringset function_forbiddenKeysForMap (C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_forbiddenKeysForMap) {
    gOnceFunctionResult_forbiddenKeysForMap = onceFunction_forbiddenKeysForMap (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_forbiddenKeysForMap = true ;
  }
  return gOnceFunctionResult_forbiddenKeysForMap ;
}

//---------------------------------------------------------------------------*

static void releaseOnceFunctionResult_forbiddenKeysForMap (void) {
  gOnceFunctionResult_forbiddenKeysForMap.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_forbiddenKeysForMap (NULL,
                                                                 releaseOnceFunctionResult_forbiddenKeysForMap) ;

//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_forbiddenKeysForMap [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_forbiddenKeysForMap (C_Compiler * inCompiler,
                                                                    const cObjectArray & /* inEffectiveParameterArray */,
                                                                    const GALGAS_location & /* inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  return function_forbiddenKeysForMap (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_forbiddenKeysForMap ("forbiddenKeysForMap",
                                                                     functionWithGenericHeader_forbiddenKeysForMap,
                                                                     & kTypeDescriptor_GALGAS_stringset,
                                                                     0,
                                                                     functionArgs_forbiddenKeysForMap) ;

//---------------------------------------------------------------------------*

cMapElement_declaredMethodMap::cMapElement_declaredMethodMap (const GALGAS_lstring & inKey
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_declaredMethodMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_declaredMethodMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_declaredMethodMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_declaredMethodMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_declaredMethodMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_declaredMethodMap * operand = (cMapElement_declaredMethodMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap::GALGAS_declaredMethodMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap::GALGAS_declaredMethodMap (const GALGAS_declaredMethodMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap & GALGAS_declaredMethodMap::operator = (const GALGAS_declaredMethodMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_declaredMethodMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::constructor_mapWithMapToOverride (const GALGAS_declaredMethodMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_declaredMethodMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_declaredMethodMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_declaredMethodMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_declaredMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_declaredMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' method is already declared in %L for this class" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

cMapElement_declaredMethodMap * GALGAS_declaredMethodMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                    const GALGAS_string & inKey
                                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_declaredMethodMap * result = (cMapElement_declaredMethodMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_declaredMethodMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_declaredMethodMap::cEnumerator_declaredMethodMap (const GALGAS_declaredMethodMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element cEnumerator_declaredMethodMap::current (LOCATION_ARGS) const {
  const cMapElement_declaredMethodMap * p = (const cMapElement_declaredMethodMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_declaredMethodMap) ;
  return GALGAS_declaredMethodMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_declaredMethodMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @declaredMethodMap type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredMethodMap ("declaredMethodMap",
                                          NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredMethodMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredMethodMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredMethodMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredMethodMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_declaredMethodMap result ;
  const GALGAS_declaredMethodMap * p = (const GALGAS_declaredMethodMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredMethodMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredMethodMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Routine 'buildLocalVariableMapAndSignature'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildLocalVariableMapAndSignature (const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                const GALGAS_formalParameterListAST constinArgument_inRoutineSignatureAST,
                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                GALGAS_formalParameterListForGeneration & outArgument_outRoutineSignature,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outRoutineSignature.drop () ; // Release 'out' argument
  outArgument_outRoutineSignature = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (958)) ;
  cEnumerator_formalParameterListAST enumerator_38048 (constinArgument_inRoutineSignatureAST, kEnumeration_up) ;
  while (enumerator_38048.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_38048.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (960)) ;
    GALGAS_string var_formalArgumentCppName ;
    if (enumerator_38048.current_mFormalArgumentPassingMode (HERE).isValid ()) {
      switch (enumerator_38048.current_mFormalArgumentPassingMode (HERE).enumValue ()) {
      case GALGAS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentIn: {
        var_formalArgumentCppName = GALGAS_string ("inArgument_").operator_concat (enumerator_38048.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (964)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (964)) COMMA_SOURCE_FILE_AT_LINE (964)) ;
        const enumGalgasBool test_0 = enumerator_38048.current_mIsUnused (HERE).boolEnum () ;
        if (kBoolTrue == test_0) {
          {
          ioArgument_ioVariableMap.modifier_insertInputFormalArgumentDeclaredAsUnused (enumerator_38048.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (966)) ;
          }
        }else if (kBoolFalse == test_0) {
          {
          ioArgument_ioVariableMap.modifier_insertInputFormalArgument (enumerator_38048.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (968)) ;
          }
        }
        } break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentOut: {
        var_formalArgumentCppName = GALGAS_string ("outArgument_").operator_concat (enumerator_38048.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (971)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (971)) COMMA_SOURCE_FILE_AT_LINE (971)) ;
        {
        ioArgument_ioVariableMap.modifier_insertOutputFormalArgument (enumerator_38048.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (972)) ;
        }
        } break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentInOut: {
        var_formalArgumentCppName = GALGAS_string ("ioArgument_").operator_concat (enumerator_38048.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (974)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (974)) COMMA_SOURCE_FILE_AT_LINE (974)) ;
        const enumGalgasBool test_1 = enumerator_38048.current_mIsUnused (HERE).boolEnum () ;
        if (kBoolTrue == test_1) {
          {
          ioArgument_ioVariableMap.modifier_insertInputOutputFormalArgumentDeclaredAsUnused (enumerator_38048.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (976)) ;
          }
        }else if (kBoolFalse == test_1) {
          {
          ioArgument_ioVariableMap.modifier_insertInputOutputFormalArgument (enumerator_38048.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (978)) ;
          }
        }
        } break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentConstantIn: {
        var_formalArgumentCppName = GALGAS_string ("constinArgument_").operator_concat (enumerator_38048.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (981)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (981)) COMMA_SOURCE_FILE_AT_LINE (981)) ;
        const enumGalgasBool test_2 = enumerator_38048.current_mIsUnused (HERE).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          ioArgument_ioVariableMap.modifier_insertConstantInputFormalArgumentDeclaredAsUnused (enumerator_38048.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (983)) ;
          }
        }else if (kBoolFalse == test_2) {
          {
          ioArgument_ioVariableMap.modifier_insertConstantInputFormalArgument (enumerator_38048.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (985)) ;
          }
        }
        } break ;
      }
    }
    outArgument_outRoutineSignature.addAssign_operation (enumerator_38048.current_mFormalArgumentPassingMode (HERE), var_type, enumerator_38048.current_mFormalArgumentName (HERE), var_formalArgumentCppName COMMA_SOURCE_FILE_AT_LINE (988)) ;
    enumerator_38048.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'analyzeRoutineBody'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeRoutineBody (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                 const GALGAS_formalParameterListAST constinArgument_inRoutineSignatureAST,
                                 const GALGAS_localConstantList constinArgument_inLocalConstantList,
                                 const GALGAS_typedAttributeList constinArgument_inNonMutableTypedAttributeList,
                                 const GALGAS_typedAttributeList constinArgument_inMutableTypedAttributeList,
                                 const GALGAS_string constinArgument_inAttributeVariableNamePrefix,
                                 const GALGAS_semanticInstructionListAST constinArgument_inInstructionList,
                                 const GALGAS_location constinArgument_inEndOfMethodLocation,
                                 GALGAS_semanticInstructionListForGeneration & outArgument_outSemanticInstructionListForGeneration,
                                 GALGAS_formalParameterListForGeneration & outArgument_outRoutineSignature,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticInstructionListForGeneration.drop () ; // Release 'out' argument
  outArgument_outRoutineSignature.drop () ; // Release 'out' argument
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1006)) ;
  cEnumerator_localConstantList enumerator_40736 (constinArgument_inLocalConstantList, kEnumeration_up) ;
  while (enumerator_40736.hasCurrentObject ()) {
    const enumGalgasBool test_0 = enumerator_40736.current_mNoWarningIfUnused (HERE).boolEnum () ;
    if (kBoolTrue == test_0) {
      {
      var_variableMap.modifier_insertUsedLocalConstant (enumerator_40736.current_mName (HERE), enumerator_40736.current_mType (HERE), enumerator_40736.current_mCppName (HERE), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1010)) ;
      }
    }else if (kBoolFalse == test_0) {
      {
      var_variableMap.modifier_insertLocalConstant (enumerator_40736.current_mName (HERE), enumerator_40736.current_mType (HERE), enumerator_40736.current_mCppName (HERE), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1012)) ;
      }
    }
    enumerator_40736.gotoNextObject () ;
  }
  cEnumerator_typedAttributeList enumerator_41110 (constinArgument_inNonMutableTypedAttributeList, kEnumeration_up) ;
  while (enumerator_41110.hasCurrentObject ()) {
    {
    var_variableMap.modifier_insertNonMutableAttribute (enumerator_41110.current_mAttributeName (HERE), enumerator_41110.current_mAttributeTypeProxy (HERE), constinArgument_inAttributeVariableNamePrefix.operator_concat (GALGAS_string ("mAttribute_") COMMA_SOURCE_FILE_AT_LINE (1020)).operator_concat (enumerator_41110.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1020)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1020)) COMMA_SOURCE_FILE_AT_LINE (1020)), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1017)) ;
    }
    enumerator_41110.gotoNextObject () ;
  }
  cEnumerator_typedAttributeList enumerator_41458 (constinArgument_inMutableTypedAttributeList, kEnumeration_up) ;
  while (enumerator_41458.hasCurrentObject ()) {
    {
    var_variableMap.modifier_insertMutableAttribute (enumerator_41458.current_mAttributeName (HERE), enumerator_41458.current_mAttributeTypeProxy (HERE), constinArgument_inAttributeVariableNamePrefix.operator_concat (GALGAS_string ("mAttribute_") COMMA_SOURCE_FILE_AT_LINE (1029)).operator_concat (enumerator_41458.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1029)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1029)) COMMA_SOURCE_FILE_AT_LINE (1029)), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1026)) ;
    }
    enumerator_41458.gotoNextObject () ;
  }
  {
  routine_buildLocalVariableMapAndSignature (constinArgument_inAnalysisContext.mAttribute_mSemanticContext, constinArgument_inRoutineSignatureAST, var_variableMap, outArgument_outRoutineSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (1034)) ;
  }
  outArgument_outSemanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1041)) ;
  cEnumerator_semanticInstructionListAST enumerator_42061 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_42061.hasCurrentObject ()) {
    callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) enumerator_42061.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, outArgument_outSemanticInstructionListForGeneration, var_variableMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1043)) ;
    enumerator_42061.gotoNextObject () ;
  }
  var_variableMap.method_checkAutomatonStates (constinArgument_inEndOfMethodLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1050)) ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'analyzeFunctionBody'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeFunctionBody (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                  const GALGAS_formalInputParameterListAST constinArgument_inFunctionSignature,
                                  const GALGAS_typedAttributeList constinArgument_inTypedAttributeList,
                                  const GALGAS_string constinArgument_inAttributeVariableNamePrefix,
                                  const GALGAS_semanticInstructionListAST constinArgument_inInstructionList,
                                  const GALGAS_lstring constinArgument_inReturnVariableName,
                                  const GALGAS_lstring constinArgument_inResultTypeName,
                                  const GALGAS_location constinArgument_inEndOfFunctionLocation,
                                  GALGAS_formalInputParameterListForGeneration & outArgument_outSignatureForGeneration,
                                  GALGAS_unifiedTypeMapProxy & outArgument_outReturnedType,
                                  GALGAS_string & outArgument_outResultVariableCppName,
                                  GALGAS_semanticInstructionListForGeneration & outArgument_outSemanticInstructionListForGeneration,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSignatureForGeneration.drop () ; // Release 'out' argument
  outArgument_outReturnedType.drop () ; // Release 'out' argument
  outArgument_outResultVariableCppName.drop () ; // Release 'out' argument
  outArgument_outSemanticInstructionListForGeneration.drop () ; // Release 'out' argument
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1258)) ;
  cEnumerator_typedAttributeList enumerator_49502 (constinArgument_inTypedAttributeList, kEnumeration_up) ;
  while (enumerator_49502.hasCurrentObject ()) {
    {
    var_variableMap.modifier_insertNonMutableAttribute (enumerator_49502.current_mAttributeName (HERE), enumerator_49502.current_mAttributeTypeProxy (HERE), constinArgument_inAttributeVariableNamePrefix.operator_concat (GALGAS_string ("mAttribute_") COMMA_SOURCE_FILE_AT_LINE (1264)).operator_concat (enumerator_49502.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1264)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1264)) COMMA_SOURCE_FILE_AT_LINE (1264)), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1261)) ;
    }
    enumerator_49502.gotoNextObject () ;
  }
  outArgument_outSignatureForGeneration = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1269)) ;
  cEnumerator_formalInputParameterListAST enumerator_49916 (constinArgument_inFunctionSignature, kEnumeration_up) ;
  while (enumerator_49916.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_parameterType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_49916.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1271)) ;
    const enumGalgasBool test_0 = enumerator_49916.current_mIsConstant (HERE).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_cppName = GALGAS_string ("constinArgument_").operator_concat (enumerator_49916.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1273)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1273)) COMMA_SOURCE_FILE_AT_LINE (1273)) ;
      outArgument_outSignatureForGeneration.addAssign_operation (var_parameterType, var_cppName, enumerator_49916.current_mFormalArgumentName (HERE), enumerator_49916.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (1274)) ;
      const enumGalgasBool test_1 = enumerator_49916.current_mIsUnused (HERE).boolEnum () ;
      if (kBoolTrue == test_1) {
        {
        var_variableMap.modifier_insertConstantInputFormalArgumentDeclaredAsUnused (enumerator_49916.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1281)) ;
        }
      }else if (kBoolFalse == test_1) {
        {
        var_variableMap.modifier_insertConstantInputFormalArgument (enumerator_49916.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1283)) ;
        }
      }
    }else if (kBoolFalse == test_0) {
      GALGAS_string var_cppName = GALGAS_string ("inArgument_").operator_concat (enumerator_49916.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1286)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1286)) COMMA_SOURCE_FILE_AT_LINE (1286)) ;
      outArgument_outSignatureForGeneration.addAssign_operation (var_parameterType, var_cppName, enumerator_49916.current_mFormalArgumentName (HERE), enumerator_49916.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (1287)) ;
      const enumGalgasBool test_2 = enumerator_49916.current_mIsUnused (HERE).boolEnum () ;
      if (kBoolTrue == test_2) {
        {
        var_variableMap.modifier_insertInputFormalArgumentDeclaredAsUnused (enumerator_49916.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1294)) ;
        }
      }else if (kBoolFalse == test_2) {
        {
        var_variableMap.modifier_insertInputFormalArgument (enumerator_49916.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1296)) ;
        }
      }
    }
    enumerator_49916.gotoNextObject () ;
  }
  outArgument_outReturnedType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, constinArgument_inResultTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1301)) ;
  outArgument_outResultVariableCppName = GALGAS_string ("result_").operator_concat (constinArgument_inReturnVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1302)) COMMA_SOURCE_FILE_AT_LINE (1302)) ;
  {
  var_variableMap.modifier_insertOutputFormalArgument (constinArgument_inReturnVariableName, outArgument_outReturnedType, outArgument_outResultVariableCppName, outArgument_outResultVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1303)) ;
  }
  outArgument_outSemanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1305)) ;
  cEnumerator_semanticInstructionListAST enumerator_51699 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_51699.hasCurrentObject ()) {
    callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) enumerator_51699.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, outArgument_outSemanticInstructionListForGeneration, var_variableMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1307)) ;
    enumerator_51699.gotoNextObject () ;
  }
  var_variableMap.method_checkAutomatonStates (constinArgument_inEndOfFunctionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1314)) ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                      Function 'buildPredefinedTypes'                      *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_predefinedTypes function_buildPredefinedTypes (const GALGAS_semanticContext & constinArgument_inSemanticContext,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_predefinedTypes result_outPredefinedTypes ; // Returned variable
  result_outPredefinedTypes = GALGAS_predefinedTypes::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("location"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2196)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2196)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("bool"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2197)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2197)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("char"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2198)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2198)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("string"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2199)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2199)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("uint"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2200)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2200)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("sint"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2201)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2201)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("uint64"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2202)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2202)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("sint64"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2203)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2203)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("double"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2204)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2204)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lbool"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2205)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2205)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lchar"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2206)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2206)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lstring"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2207)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2207)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("luint"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2208)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2208)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lsint"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2209)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2209)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("luint64"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2210)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2210)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lsint64"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2211)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2211)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("ldouble"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2212)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2212)) COMMA_SOURCE_FILE_AT_LINE (2195)) ;
//---
  return result_outPredefinedTypes ;
}


//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_buildPredefinedTypes [2] = {
  & kTypeDescriptor_GALGAS_semanticContext,
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_buildPredefinedTypes (C_Compiler * inCompiler,
                                                                     const cObjectArray & inEffectiveParameterArray,
                                                                     const GALGAS_location & /* §§ inErrorLocation */
                                                                     COMMA_LOCATION_ARGS) {
  const GALGAS_semanticContext operand0 = GALGAS_semanticContext::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                 inCompiler
                                                                                 COMMA_THERE) ;
  return function_buildPredefinedTypes (operand0,
                                        inCompiler
                                        COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_buildPredefinedTypes ("buildPredefinedTypes",
                                                                      functionWithGenericHeader_buildPredefinedTypes,
                                                                      & kTypeDescriptor_GALGAS_predefinedTypes,
                                                                      1,
                                                                      functionArgs_buildPredefinedTypes) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'performSemanticAnalysis'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_performSemanticAnalysis (const GALGAS_semanticDeclarationListAST constinArgument_inDeclarationList,
                                      const GALGAS_semanticContext constinArgument_inSemanticContext,
                                      const GALGAS_location constinArgument_inEndOfSource,
                                      GALGAS_semanticDeclarationSortedListForGeneration & outArgument_outDecoratedDeclarationListForGeneration,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outDecoratedDeclarationListForGeneration.drop () ; // Release 'out' argument
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_unsolvedProxyCount (SOURCE_FILE_AT_LINE (2229)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_s = GALGAS_string ("the following types are not defined:") ;
    cEnumerator_stringlist enumerator_88137 (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_unsolvedProxyKeyList (SOURCE_FILE_AT_LINE (2231)), kEnumeration_up) ;
    while (enumerator_88137.hasCurrentObject ()) {
      var_s.dotAssign_operation (GALGAS_string ("\n"
        "  - @").operator_concat (enumerator_88137.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (2232)) COMMA_SOURCE_FILE_AT_LINE (2232)) ;
      enumerator_88137.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (constinArgument_inEndOfSource, var_s COMMA_SOURCE_FILE_AT_LINE (2234)) ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_88404 (constinArgument_inDeclarationList, kEnumeration_up) ;
  while (enumerator_88404.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_88404.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2239)) ;
    enumerator_88404.gotoNextObject () ;
  }
  outArgument_outDecoratedDeclarationListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE_AT_LINE (2242)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (2243)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (constinArgument_inSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (2244)) ;
    cEnumerator_semanticDeclarationListAST enumerator_88774 (var_semanticDeclarationList, kEnumeration_up) ;
    while (enumerator_88774.hasCurrentObject ()) {
      callCategoryMethod_semanticAnalysis ((const cPtr_semanticDeclarationAST *) enumerator_88774.current_mSemanticDeclaration (HERE).ptr (), constinArgument_inSemanticContext, var_predefinedTypes, outArgument_outDecoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (2246)) ;
      enumerator_88774.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//    Abstract category method '@semanticDeclarationAST semanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_semanticAnalysis> gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_semanticAnalysis (const PMSInt32 inClassIndex,
                                           categoryMethodSignature_semanticDeclarationAST_semanticAnalysis inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_semanticAnalysis (void) {
  gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_semanticAnalysis (NULL,
                                                                    freeCategoryMethod_semanticDeclarationAST_semanticAnalysis) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                          const GALGAS_semanticContext constin_inSemanticContext,
                                          const GALGAS_predefinedTypes constin_inPredefinedTypes,
                                          GALGAS_semanticDeclarationSortedListForGeneration & io_ioSemanticDeclarationListForGeneration,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_semanticAnalysis f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inSemanticContext, constin_inPredefinedTypes, io_ioSemanticDeclarationListForGeneration, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@predefinedTypeAST semanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_predefinedTypeAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_predefinedTypeAST * object = (const cPtr_predefinedTypeAST *) inObject ;
  macroValidSharedObject (object, const cPtr_predefinedTypeAST) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_primitiveTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mPredefinedTypeName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (118)), inCompiler COMMA_SOURCE_FILE_AT_LINE (118)), object->mAttribute_mPredefinedTypeName, object->mAttribute_mKind COMMA_SOURCE_FILE_AT_LINE (116)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (116)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_predefinedTypeAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_predefinedTypeAST.mSlotID,
                                        categoryMethod_predefinedTypeAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_predefinedTypeAST_semanticAnalysis (defineCategoryMethod_predefinedTypeAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@listDeclarationAST semanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_listDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (142)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (143)) ;
  cEnumerator_attributeInCollectionListAST enumerator_7230 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_7230.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_7230.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (145)) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_7409 (enumerator_7230.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_7409.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_7409.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
      if (kBoolTrue == test_0) {
        const enumGalgasBool test_1 = var_hasGetter.operator_not (SOURCE_FILE_AT_LINE (150)).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (enumerator_7409.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("duplicate feature") COMMA_SOURCE_FILE_AT_LINE (151)) ;
        }
        var_hasGetter = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_7409.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("setter"))).boolEnum () ;
        if (kBoolTrue == test_3) {
          const enumGalgasBool test_4 = var_hasSetter.boolEnum () ;
          if (kBoolTrue == test_4) {
            GALGAS_location location_5 (enumerator_7409.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_5, GALGAS_string ("duplicate feature") COMMA_SOURCE_FILE_AT_LINE (156)) ;
          }
          var_hasSetter = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_3) {
          GALGAS_location location_6 (enumerator_7409.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_6, GALGAS_string ("unknown feature; the features available here are: 'nogetter', 'setter'") COMMA_SOURCE_FILE_AT_LINE (160)) ;
        }
      }
      enumerator_7409.gotoNextObject () ;
    }
    var_typedAttributeList.addAssign_operation (var_t, enumerator_7230.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (163)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_7230.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (169)) ;
    }
    enumerator_7230.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_listTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (185)), var_typedAttributeList COMMA_SOURCE_FILE_AT_LINE (183)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (182)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_listDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                        categoryMethod_listDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listDeclarationAST_semanticAnalysis (defineCategoryMethod_listDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@sortedListDeclarationAST semanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_sortedListDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                      const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                      GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_sortedListDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (200)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (201)) ;
  cEnumerator_attributeInCollectionListAST enumerator_9074 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_9074.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_9074.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (203)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_9074.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (206)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_9074.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (212)) ;
    }
    enumerator_9074.gotoNextObject () ;
  }
  GALGAS_stringset var_attributesUsedForSorting = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (215)) ;
  GALGAS_sortDescriptorListForGeneration var_sortDescriptorList = GALGAS_sortDescriptorListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (216)) ;
  cEnumerator_sortedListSortDescriptorListAST enumerator_9562 (object->mAttribute_mSortDescriptorList, kEnumeration_up) ;
  while (enumerator_9562.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_type ;
    var_attributeMap.method_searchKey (enumerator_9562.current_mSortedAttributeName (HERE), var_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (219)) ;
    var_sortDescriptorList.addAssign_operation (var_type, enumerator_9562.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (220)), enumerator_9562.current_mAscending (HERE) COMMA_SOURCE_FILE_AT_LINE (220)) ;
    const enumGalgasBool test_0 = var_attributesUsedForSorting.reader_hasKey (enumerator_9562.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (221)) COMMA_SOURCE_FILE_AT_LINE (221)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_9562.current_mSortedAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_9562.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (222)) COMMA_SOURCE_FILE_AT_LINE (222)).operator_concat (GALGAS_string ("' is already used for sorting") COMMA_SOURCE_FILE_AT_LINE (222)) COMMA_SOURCE_FILE_AT_LINE (222)) ;
    }
    var_attributesUsedForSorting.addAssign_operation (enumerator_9562.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (224)) COMMA_SOURCE_FILE_AT_LINE (224)) ;
    enumerator_9562.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_sortedListTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSortedListTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (229)), var_typedAttributeList, var_sortDescriptorList COMMA_SOURCE_FILE_AT_LINE (227)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (227)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_sortedListDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                        categoryMethod_sortedListDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_sortedListDeclarationAST_semanticAnalysis (defineCategoryMethod_sortedListDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@structDeclarationAST semanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_structDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                  const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                  const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structDeclarationAST * object = (const cPtr_structDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_structDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (253)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (254)) ;
  cEnumerator_attributeInCollectionListAST enumerator_10968 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_10968.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_10968.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (256)) ;
    cEnumerator_lstringlist enumerator_11086 (enumerator_10968.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_11086.hasCurrentObject ()) {
      GALGAS_location location_0 (enumerator_11086.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_0, GALGAS_string ("a struct attribute accepts no feature") COMMA_SOURCE_FILE_AT_LINE (258)) ;
      enumerator_11086.gotoNextObject () ;
    }
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (false) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_10968.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (262)) ;
    const enumGalgasBool test_1 = function_forbiddenKeysForStruct (inCompiler COMMA_SOURCE_FILE_AT_LINE (268)).reader_hasKey (enumerator_10968.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (268)).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_string var_m = GALGAS_string ("an attribute cannot be named:") ;
      cEnumerator_stringset enumerator_11495 (function_forbiddenKeysForStruct (inCompiler COMMA_SOURCE_FILE_AT_LINE (270)), kEnumeration_up) ;
      while (enumerator_11495.hasCurrentObject ()) {
        var_m.dotAssign_operation (GALGAS_string (" ").operator_concat (enumerator_11495.current (HERE) COMMA_SOURCE_FILE_AT_LINE (271)) COMMA_SOURCE_FILE_AT_LINE (271)) ;
        enumerator_11495.gotoNextObject () ;
      }
      var_m.dotAssign_operation (GALGAS_string ("; theses names are reserved") COMMA_SOURCE_FILE_AT_LINE (273)) ;
      GALGAS_location location_2 (enumerator_10968.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, var_m COMMA_SOURCE_FILE_AT_LINE (274)) ;
    }
    {
    var_attributeMap.modifier_insertKey (enumerator_10968.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (276)) ;
    }
    enumerator_10968.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_structTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mStructTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (280)), var_typedAttributeList COMMA_SOURCE_FILE_AT_LINE (278)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (278)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_structDeclarationAST.mSlotID,
                                        categoryMethod_structDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclarationAST_semanticAnalysis (defineCategoryMethod_structDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@graphDeclarationAST semanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_graphDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_graphDeclarationAST * object = (const cPtr_graphDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_graphDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_graphTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mGraphTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (294)) ;
  GALGAS_unifiedTypeMapProxy var_associatedListTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (295)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_associatedListTypeProxy.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (296)).objectCompare (GALGAS_typeKindEnum::constructor_listType (SOURCE_FILE_AT_LINE (296)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAssociatedListTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (297)) COMMA_SOURCE_FILE_AT_LINE (297)).operator_concat (GALGAS_string ("' type should be a list") COMMA_SOURCE_FILE_AT_LINE (297)) COMMA_SOURCE_FILE_AT_LINE (297)) ;
  }
  GALGAS_stringset var_reservedModifierNames = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (300)) ;
  var_reservedModifierNames.addAssign_operation (GALGAS_string ("noteNode") COMMA_SOURCE_FILE_AT_LINE (301)) ;
  var_reservedModifierNames.addAssign_operation (GALGAS_string ("addArc") COMMA_SOURCE_FILE_AT_LINE (302)) ;
  cEnumerator_graphInsertModifierList enumerator_12825 (object->mAttribute_mInsertModifierList, kEnumeration_up) ;
  while (enumerator_12825.hasCurrentObject ()) {
    const enumGalgasBool test_2 = var_reservedModifierNames.reader_hasKey (enumerator_12825.current_mInsertModifierName (HERE).reader_string (SOURCE_FILE_AT_LINE (304)) COMMA_SOURCE_FILE_AT_LINE (304)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (enumerator_12825.current_mInsertModifierName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (enumerator_12825.current_mInsertModifierName (HERE).reader_string (SOURCE_FILE_AT_LINE (305)) COMMA_SOURCE_FILE_AT_LINE (305)).operator_concat (GALGAS_string ("' modifier name is reserved for a graph type") COMMA_SOURCE_FILE_AT_LINE (305)) COMMA_SOURCE_FILE_AT_LINE (305)) ;
    }
    {
    routine_check_5F_K_5F_L_5F_escapeCharacters (enumerator_12825.current_mInsertErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (307)) ;
    }
    enumerator_12825.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_graphDeclarationForGeneration::constructor_new (GALGAS_bool (true), var_graphTypeProxy, var_associatedListTypeProxy, object->mAttribute_mInsertModifierList COMMA_SOURCE_FILE_AT_LINE (310)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (310)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_graphDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_graphDeclarationAST.mSlotID,
                                        categoryMethod_graphDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_graphDeclarationAST_semanticAnalysis (defineCategoryMethod_graphDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@externTypeDeclarationAST semanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_externTypeDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                      const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                      GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externTypeDeclarationAST * object = (const cPtr_externTypeDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externTypeDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_externTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mExternTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (327)) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_externTypeDeclarationForGeneration::constructor_new (GALGAS_bool (true), var_externTypeProxy, object->mAttribute_mExternTypeName.mAttribute_string, object->mAttribute_mCppPreDeclarationCode, object->mAttribute_mCppClassCode COMMA_SOURCE_FILE_AT_LINE (329)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (329)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_externTypeDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_externTypeDeclarationAST.mSlotID,
                                        categoryMethod_externTypeDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externTypeDeclarationAST_semanticAnalysis (defineCategoryMethod_externTypeDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@enumDeclarationAST semanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_enumDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_enumDeclarationAST * object = (const cPtr_enumDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_enumDeclarationAST) ;
  GALGAS_stringlist var_constantList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (356)) ;
  GALGAS_constantIndexMap var_constantMap = GALGAS_constantIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (357)) ;
  cEnumerator_lstringlist enumerator_14668 (object->mAttribute_mConstantList, kEnumeration_up) ;
  while (enumerator_14668.hasCurrentObject ()) {
    var_constantList.addAssign_operation (enumerator_14668.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (359)) COMMA_SOURCE_FILE_AT_LINE (359)) ;
    {
    var_constantMap.modifier_insertKey (enumerator_14668.current_mValue (HERE), var_constantMap.reader_count (SOURCE_FILE_AT_LINE (360)), inCompiler COMMA_SOURCE_FILE_AT_LINE (360)) ;
    }
    enumerator_14668.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_enumTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mEnumTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (365)), var_constantList COMMA_SOURCE_FILE_AT_LINE (363)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (363)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_enumDeclarationAST.mSlotID,
                                        categoryMethod_enumDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclarationAST_semanticAnalysis (defineCategoryMethod_enumDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@arrayDeclarationAST semanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_arrayDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_arrayDeclarationAST * object = (const cPtr_arrayDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_arrayDeclarationAST) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_arrayTypeForGeneration::constructor_new (GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mArrayTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (382)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mElementTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (383)), object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (384)) COMMA_SOURCE_FILE_AT_LINE (380)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (380)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_arrayDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_arrayDeclarationAST.mSlotID,
                                        categoryMethod_arrayDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_arrayDeclarationAST_semanticAnalysis (defineCategoryMethod_arrayDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@listmapDeclarationAST semanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_listmapDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                   const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                   GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_listmapDeclarationAST) ;
  GALGAS_typeKindEnum var_typeKindEnum ;
  GALGAS_typedAttributeList var_listTypeAttributeList ;
  GALGAS_bool joker_16121_2 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_16121_1 ; // Joker input parameter
  GALGAS_attributeMap joker_16163_19 ; // Joker input parameter
  GALGAS_typedAttributeList joker_16163_18 ; // Joker input parameter
  GALGAS_constructorMap joker_16163_17 ; // Joker input parameter
  GALGAS_readerMap joker_16163_16 ; // Joker input parameter
  GALGAS_modifierMap joker_16163_15 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_16163_14 ; // Joker input parameter
  GALGAS_classMethodMap joker_16163_13 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_16163_12 ; // Joker input parameter
  GALGAS_stringlist joker_16163_11 ; // Joker input parameter
  GALGAS_uint joker_16163_10 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyList joker_16163_9 ; // Joker input parameter
  GALGAS_stringset joker_16163_8 ; // Joker input parameter
  GALGAS_lstringlist joker_16163_7 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_16163_6 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_16163_5 ; // Joker input parameter
  GALGAS_withAccessorMap joker_16163_4 ; // Joker input parameter
  GALGAS_bool joker_16163_3 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_16163_2 ; // Joker input parameter
  GALGAS_string joker_16163_1 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedListTypeName, joker_16121_2, joker_16121_1, var_typeKindEnum, var_listTypeAttributeList, joker_16163_19, joker_16163_18, joker_16163_17, joker_16163_16, joker_16163_15, joker_16163_14, joker_16163_13, joker_16163_12, joker_16163_11, joker_16163_10, joker_16163_9, joker_16163_8, joker_16163_7, joker_16163_6, joker_16163_5, joker_16163_4, joker_16163_3, joker_16163_2, joker_16163_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (400)) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_listmapTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListmapTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (404)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (405)), var_listTypeAttributeList COMMA_SOURCE_FILE_AT_LINE (402)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (402)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_listmapDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                        categoryMethod_listmapDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listmapDeclarationAST_semanticAnalysis (defineCategoryMethod_listmapDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@mapDeclarationAST semanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_mapDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_mapDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (483)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (484)) ;
  cEnumerator_attributeInCollectionListAST enumerator_19152 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_19152.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_19152.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (486)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_19152.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (489)) ;
    const enumGalgasBool test_0 = function_forbiddenKeysForMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (495)).reader_hasKey (enumerator_19152.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (495)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_m = GALGAS_string ("an attribute cannot be named:") ;
      cEnumerator_stringset enumerator_19562 (function_forbiddenKeysForMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (497)), kEnumeration_up) ;
      while (enumerator_19562.hasCurrentObject ()) {
        var_m.dotAssign_operation (GALGAS_string (" ").operator_concat (enumerator_19562.current (HERE) COMMA_SOURCE_FILE_AT_LINE (498)) COMMA_SOURCE_FILE_AT_LINE (498)) ;
        enumerator_19562.gotoNextObject () ;
      }
      var_m.dotAssign_operation (GALGAS_string ("; theses names are reserved") COMMA_SOURCE_FILE_AT_LINE (500)) ;
      GALGAS_location location_1 (enumerator_19152.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, var_m COMMA_SOURCE_FILE_AT_LINE (501)) ;
    }
    {
    var_attributeMap.modifier_insertKey (enumerator_19152.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (503)) ;
    }
    enumerator_19152.gotoNextObject () ;
  }
  GALGAS_insertMethodMap var_insertMethodMap = GALGAS_insertMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (506)) ;
  cEnumerator_insertMethodListAST enumerator_19863 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_19863.hasCurrentObject ()) {
    {
    var_insertMethodMap.modifier_insertKey (enumerator_19863.current_mInsertMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (508)) ;
    }
    {
    routine_check_5F_K_5F_L_5F_escapeCharacters (enumerator_19863.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (509)) ;
    }
    {
    routine_check_5F_K_5F_L_5F_escapeCharacters (enumerator_19863.current_mShadowErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (510)) ;
    }
    enumerator_19863.gotoNextObject () ;
  }
  GALGAS_searchMethodMap var_searchMethodMap = GALGAS_searchMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (513)) ;
  cEnumerator_mapSearchMethodListAST enumerator_20141 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_20141.hasCurrentObject ()) {
    {
    var_searchMethodMap.modifier_insertKey (enumerator_20141.current_mSearchMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (515)) ;
    }
    {
    routine_check_5F_K_5F_escapeCharacters (enumerator_20141.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (516)) ;
    }
    enumerator_20141.gotoNextObject () ;
  }
  cEnumerator_mapRemoveMethodListAST enumerator_20315 (object->mAttribute_mRemoveMethodList, kEnumeration_up) ;
  while (enumerator_20315.hasCurrentObject ()) {
    {
    var_insertMethodMap.modifier_insertKey (enumerator_20315.current_mMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (520)) ;
    }
    {
    routine_check_5F_K_5F_escapeCharacters (enumerator_20315.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (521)) ;
    }
    enumerator_20315.gotoNextObject () ;
  }
  cEnumerator_insertOrReplaceDeclarationListAST enumerator_20545 (object->mAttribute_mInsertOrReplaceDeclarationListAST, kEnumeration_up) ;
  GALGAS_uint index_20539 ((PMUInt32) 0) ;
  while (enumerator_20545.hasCurrentObject ()) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, index_20539.objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticWarning (enumerator_20545.current_mInsertOrReplaceDeclarationLocation (HERE), GALGAS_string ("the 'insertOrReplace' modifier is already declared") COMMA_SOURCE_FILE_AT_LINE (526)) ;
    }
    enumerator_20545.gotoNextObject () ;
    index_20539.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (524)) ;
  }
  GALGAS_bool var_hasInsertOrReplaceModifier = GALGAS_bool (kIsStrictSup, object->mAttribute_mInsertOrReplaceDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (529)).objectCompare (GALGAS_uint ((PMUInt32) 0U))) ;
  const enumGalgasBool test_3 = var_hasInsertOrReplaceModifier.operator_and (var_insertMethodMap.reader_hasKey (GALGAS_string ("insertOrReplace") COMMA_SOURCE_FILE_AT_LINE (530)) COMMA_SOURCE_FILE_AT_LINE (530)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location var_insertOrReplaceDeclarationLocation ;
    object->mAttribute_mInsertOrReplaceDeclarationListAST.method_first (var_insertOrReplaceDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (532)) ;
    inCompiler->emitSemanticError (var_insertOrReplaceDeclarationLocation, GALGAS_string ("the insertOrReplace' modifier cannot be declared : an insert modifier or a remove modifier has been declared with this name") COMMA_SOURCE_FILE_AT_LINE (533)) ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (536)) ;
  {
  var_withAccessorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("hasKey"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (537)), constinArgument_inPredefinedTypes.mAttribute_mStringType, inCompiler COMMA_SOURCE_FILE_AT_LINE (537)) ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_21411 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_21411.hasCurrentObject ()) {
    {
    var_withAccessorMap.modifier_insertKey (enumerator_21411.current_mSearchMethodName (HERE), constinArgument_inPredefinedTypes.mAttribute_mLStringType, inCompiler COMMA_SOURCE_FILE_AT_LINE (539)) ;
    }
    enumerator_21411.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_mapTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (547)), object->mAttribute_mMapTypeName, var_typedAttributeList, object->mAttribute_mInsertMethodList, object->mAttribute_mSearchMethodList, object->mAttribute_mRemoveMethodList, var_hasInsertOrReplaceModifier, var_withAccessorMap COMMA_SOURCE_FILE_AT_LINE (545)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (545)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_mapDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                        categoryMethod_mapDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapDeclarationAST_semanticAnalysis (defineCategoryMethod_mapDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@uniqueMapDeclarationAST semanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_uniqueMapDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                     const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                     const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                     GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_uniqueMapDeclarationAST * object = (const cPtr_uniqueMapDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_uniqueMapDeclarationAST) ;
  GALGAS_stringset var_initialStateSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (568)) ;
  cEnumerator_insertMethodListAST enumerator_22327 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_22327.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (570)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_22327.current_mInitialStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (571)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_22327.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_22327.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (572)) COMMA_SOURCE_FILE_AT_LINE (572)).operator_concat (GALGAS_string ("' insert method should name an automaton state") COMMA_SOURCE_FILE_AT_LINE (572)) COMMA_SOURCE_FILE_AT_LINE (572)) ;
      }else if (kBoolFalse == test_1) {
        var_initialStateSet.addAssign_operation (enumerator_22327.current_mInitialStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (574)) COMMA_SOURCE_FILE_AT_LINE (574)) ;
      }
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_22327.current_mInitialStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (576)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_22327.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the '").operator_concat (enumerator_22327.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (577)) COMMA_SOURCE_FILE_AT_LINE (577)).operator_concat (GALGAS_string ("' insert method should not name an automaton state") COMMA_SOURCE_FILE_AT_LINE (577)) COMMA_SOURCE_FILE_AT_LINE (577)) ;
      }
    }
    enumerator_22327.gotoNextObject () ;
  }
  GALGAS_mapAutomatonActionMap var_mapAutomatonActionMap = GALGAS_mapAutomatonActionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (581)) ;
  cEnumerator_mapSearchMethodListAST enumerator_22930 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_22930.hasCurrentObject ()) {
    const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (583)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_5) {
      const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, enumerator_22930.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (584)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_6) {
        GALGAS_location location_7 (enumerator_22930.current_mSearchMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_7, GALGAS_string ("the '").operator_concat (enumerator_22930.current_mSearchMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (585)) COMMA_SOURCE_FILE_AT_LINE (585)).operator_concat (GALGAS_string ("' search method should name an automaton action") COMMA_SOURCE_FILE_AT_LINE (585)) COMMA_SOURCE_FILE_AT_LINE (585)) ;
      }else if (kBoolFalse == test_6) {
        const enumGalgasBool test_8 = var_mapAutomatonActionMap.reader_hasKey (enumerator_22930.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (586)) COMMA_SOURCE_FILE_AT_LINE (586)).operator_not (SOURCE_FILE_AT_LINE (586)).boolEnum () ;
        if (kBoolTrue == test_8) {
          {
          var_mapAutomatonActionMap.modifier_insertKey (enumerator_22930.current_mActionName (HERE), var_mapAutomatonActionMap.reader_count (SOURCE_FILE_AT_LINE (588)), inCompiler COMMA_SOURCE_FILE_AT_LINE (588)) ;
          }
        }
      }
    }else if (kBoolFalse == test_5) {
      const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, enumerator_22930.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (592)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_9) {
        GALGAS_location location_10 (enumerator_22930.current_mSearchMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_10, GALGAS_string ("the '").operator_concat (enumerator_22930.current_mSearchMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (593)) COMMA_SOURCE_FILE_AT_LINE (593)).operator_concat (GALGAS_string ("' search method should not name an automaton action") COMMA_SOURCE_FILE_AT_LINE (593)) COMMA_SOURCE_FILE_AT_LINE (593)) ;
      }
    }
    enumerator_22930.gotoNextObject () ;
  }
  GALGAS_mapAutomatonStateMap var_mapAutomatonStateMap = GALGAS_mapAutomatonStateMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (597)) ;
  cEnumerator_mapStateList enumerator_23743 (object->mAttribute_mMapStateList, kEnumeration_up) ;
  while (enumerator_23743.hasCurrentObject ()) {
    {
    var_mapAutomatonStateMap.modifier_insertKey (enumerator_23743.current_mStateName (HERE), var_mapAutomatonStateMap.reader_count (SOURCE_FILE_AT_LINE (599)), inCompiler COMMA_SOURCE_FILE_AT_LINE (599)) ;
    }
    enumerator_23743.gotoNextObject () ;
  }
  cEnumerator_mapStateList enumerator_23869 (object->mAttribute_mMapStateList, kEnumeration_up) ;
  while (enumerator_23869.hasCurrentObject ()) {
    cEnumerator_mapStateTransitionList enumerator_23900 (enumerator_23869.current_mTransitionList (HERE), kEnumeration_up) ;
    while (enumerator_23900.hasCurrentObject ()) {
      GALGAS_uint joker_23959_0 ; // Joker input parameter
      var_mapAutomatonStateMap.method_searchKey (enumerator_23900.current_mTargetStateName (HERE), joker_23959_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (603)) ;
      enumerator_23900.gotoNextObject () ;
    }
    enumerator_23869.gotoNextObject () ;
  }
  GALGAS_stringset var_allActions = var_mapAutomatonActionMap.reader_keySet (SOURCE_FILE_AT_LINE (607)) ;
  GALGAS_mapStateSortedList var_mapStateSortedList = GALGAS_mapStateSortedList::constructor_emptySortedList (SOURCE_FILE_AT_LINE (608)) ;
  cEnumerator_mapStateList enumerator_24195 (object->mAttribute_mMapStateList, kEnumeration_up) ;
  while (enumerator_24195.hasCurrentObject ()) {
    GALGAS_stringset var_actionsForCurrentState = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (610)) ;
    GALGAS_mapStateTransitionSortedList var_mapStateTransitionSortedList = GALGAS_mapStateTransitionSortedList::constructor_emptySortedList (SOURCE_FILE_AT_LINE (611)) ;
    cEnumerator_mapStateTransitionList enumerator_24360 (enumerator_24195.current_mTransitionList (HERE), kEnumeration_up) ;
    while (enumerator_24360.hasCurrentObject ()) {
      GALGAS_uint var_actionIndex ;
      var_mapAutomatonActionMap.method_searchKey (enumerator_24360.current_mActionName (HERE), var_actionIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (614)) ;
      const enumGalgasBool test_11 = var_actionsForCurrentState.reader_hasKey (enumerator_24360.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (615)) COMMA_SOURCE_FILE_AT_LINE (615)).boolEnum () ;
      if (kBoolTrue == test_11) {
        GALGAS_location location_12 (enumerator_24360.current_mActionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_12, GALGAS_string ("the '").operator_concat (enumerator_24360.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (616)) COMMA_SOURCE_FILE_AT_LINE (616)).operator_concat (GALGAS_string ("' action is already used for this state") COMMA_SOURCE_FILE_AT_LINE (616)) COMMA_SOURCE_FILE_AT_LINE (616)) ;
      }
      var_actionsForCurrentState.addAssign_operation (enumerator_24360.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (618)) COMMA_SOURCE_FILE_AT_LINE (618)) ;
      GALGAS_uint var_targetStateIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_24360.current_mTargetStateName (HERE), var_targetStateIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (620)) ;
      var_mapStateTransitionSortedList.addAssign_operation (var_actionIndex, enumerator_24360.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (623)), var_targetStateIndex, enumerator_24360.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (625)), enumerator_24360.current_mTransitionMessageKind (HERE), enumerator_24360.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (627)) COMMA_SOURCE_FILE_AT_LINE (621)) ;
      enumerator_24360.gotoNextObject () ;
    }
    GALGAS_uint var_stateIndex ;
    var_mapAutomatonStateMap.method_searchKey (enumerator_24195.current_mStateName (HERE), var_stateIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (631)) ;
    var_mapStateSortedList.addAssign_operation (var_stateIndex, enumerator_24195.current_mStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (634)), enumerator_24195.current_mStateMessageKind (HERE), enumerator_24195.current_mStateMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (636)), var_mapStateTransitionSortedList COMMA_SOURCE_FILE_AT_LINE (632)) ;
    GALGAS_stringset var_missingActions = var_allActions.substract_operation (var_actionsForCurrentState, inCompiler COMMA_SOURCE_FILE_AT_LINE (639)) ;
    const enumGalgasBool test_13 = GALGAS_bool (kIsStrictSup, var_missingActions.reader_count (SOURCE_FILE_AT_LINE (640)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_13) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_25470 (var_missingActions, kEnumeration_up) ;
      while (enumerator_25470.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("'").operator_concat (enumerator_25470.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (643)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (643)) COMMA_SOURCE_FILE_AT_LINE (643)) ;
        if (enumerator_25470.hasNextObject ()) {
          var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (644)) ;
        }
        enumerator_25470.gotoNextObject () ;
      }
      GALGAS_location location_14 (enumerator_24195.current_mStateName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_14, GALGAS_string ("the following actions are not named in a transition from this state: ").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (646)) COMMA_SOURCE_FILE_AT_LINE (646)) ;
    }
    enumerator_24195.gotoNextObject () ;
  }
  GALGAS_stringset var_accessibleStates = var_initialStateSet ;
  GALGAS_bool var_progress = GALGAS_bool (true) ;
  if (object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (652)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (652)).isValid ()) {
    PMUInt32 variant_25799 = object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (652)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (652)).uintValue () ;
    bool loop_25799 = true ;
    while (loop_25799) {
      loop_25799 = var_progress.isValid () ;
      if (loop_25799) {
        loop_25799 = var_progress.boolValue () ;
      }
      if (loop_25799 && (0 == variant_25799)) {
        loop_25799 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (652)) ;
      }
      if (loop_25799) {
        variant_25799 -- ;
        var_progress = GALGAS_bool (false) ;
        cEnumerator_mapStateList enumerator_25895 (object->mAttribute_mMapStateList, kEnumeration_up) ;
        while (enumerator_25895.hasCurrentObject ()) {
          const enumGalgasBool test_15 = var_accessibleStates.reader_hasKey (enumerator_25895.current_mStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (655)) COMMA_SOURCE_FILE_AT_LINE (655)).boolEnum () ;
          if (kBoolTrue == test_15) {
            cEnumerator_mapStateTransitionList enumerator_25991 (enumerator_25895.current_mTransitionList (HERE), kEnumeration_up) ;
            while (enumerator_25991.hasCurrentObject ()) {
              const enumGalgasBool test_16 = var_accessibleStates.reader_hasKey (enumerator_25991.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (657)) COMMA_SOURCE_FILE_AT_LINE (657)).operator_not (SOURCE_FILE_AT_LINE (657)).boolEnum () ;
              if (kBoolTrue == test_16) {
                var_accessibleStates.addAssign_operation (enumerator_25991.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (658)) COMMA_SOURCE_FILE_AT_LINE (658)) ;
                var_progress = GALGAS_bool (true) ;
              }
              enumerator_25991.gotoNextObject () ;
            }
          }
          enumerator_25895.gotoNextObject () ;
        }
      }
    }
  }
  GALGAS_stringset var_uselessStates = var_mapAutomatonStateMap.reader_keySet (SOURCE_FILE_AT_LINE (665)).substract_operation (var_accessibleStates, inCompiler COMMA_SOURCE_FILE_AT_LINE (665)) ;
  const enumGalgasBool test_17 = GALGAS_bool (kIsStrictSup, var_uselessStates.reader_count (SOURCE_FILE_AT_LINE (666)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_17) {
    GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
    cEnumerator_stringset enumerator_26425 (var_uselessStates, kEnumeration_up) ;
    while (enumerator_26425.hasCurrentObject ()) {
      var_s.dotAssign_operation (GALGAS_string ("'").operator_concat (enumerator_26425.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (669)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (669)) COMMA_SOURCE_FILE_AT_LINE (669)) ;
      if (enumerator_26425.hasNextObject ()) {
        var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (670)) ;
      }
      enumerator_26425.gotoNextObject () ;
    }
    inCompiler->emitSemanticWarning (inCompiler->here (), GALGAS_string ("the following map automaton states are useless: ").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (672)) COMMA_SOURCE_FILE_AT_LINE (672)) ;
  }
  GALGAS_stringset var_neededAssociations = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (676)) ;
  GALGAS_stringset var_accessibilityGraph = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (677)) ;
  cEnumerator_mapAutomatonStateMap enumerator_26789 (var_mapAutomatonStateMap, kEnumeration_up) ;
  while (enumerator_26789.hasCurrentObject ()) {
    GALGAS_stringset var_reachableStates = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (679)) ;
    var_reachableStates.addAssign_operation (enumerator_26789.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (680)) COMMA_SOURCE_FILE_AT_LINE (680)) ;
    GALGAS_bool var_progress = GALGAS_bool (true) ;
    if (var_mapAutomatonStateMap.reader_count (SOURCE_FILE_AT_LINE (682)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (682)).isValid ()) {
      PMUInt32 variant_26913 = var_mapAutomatonStateMap.reader_count (SOURCE_FILE_AT_LINE (682)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (682)).uintValue () ;
      bool loop_26913 = true ;
      while (loop_26913) {
        loop_26913 = var_progress.isValid () ;
        if (loop_26913) {
          loop_26913 = var_progress.boolValue () ;
        }
        if (loop_26913 && (0 == variant_26913)) {
          loop_26913 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (682)) ;
        }
        if (loop_26913) {
          variant_26913 -- ;
          var_progress = GALGAS_bool (false) ;
          cEnumerator_mapStateList enumerator_27019 (object->mAttribute_mMapStateList, kEnumeration_up) ;
          while (enumerator_27019.hasCurrentObject ()) {
            const enumGalgasBool test_18 = var_reachableStates.reader_hasKey (enumerator_27019.current_mStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (685)) COMMA_SOURCE_FILE_AT_LINE (685)).boolEnum () ;
            if (kBoolTrue == test_18) {
              cEnumerator_mapStateTransitionList enumerator_27118 (enumerator_27019.current_mTransitionList (HERE), kEnumeration_up) ;
              while (enumerator_27118.hasCurrentObject ()) {
                const enumGalgasBool test_19 = var_reachableStates.reader_hasKey (enumerator_27118.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (687)) COMMA_SOURCE_FILE_AT_LINE (687)).operator_not (SOURCE_FILE_AT_LINE (687)).boolEnum () ;
                if (kBoolTrue == test_19) {
                  var_reachableStates.addAssign_operation (enumerator_27118.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (688)) COMMA_SOURCE_FILE_AT_LINE (688)) ;
                  var_accessibilityGraph.addAssign_operation (enumerator_26789.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (689)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (689)).operator_concat (enumerator_27118.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (689)) COMMA_SOURCE_FILE_AT_LINE (689)) COMMA_SOURCE_FILE_AT_LINE (689)) ;
                  var_progress = GALGAS_bool (true) ;
                }
                enumerator_27118.gotoNextObject () ;
              }
            }
            enumerator_27019.gotoNextObject () ;
          }
        }
      }
    }
    cEnumerator_stringset enumerator_27504 (var_reachableStates, kEnumeration_up) ;
    while (enumerator_27504.hasCurrentObject ()) {
      const enumGalgasBool test_20 = GALGAS_bool (kIsNotEqual, enumerator_26789.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (697)).objectCompare (enumerator_27504.current_key (HERE))).boolEnum () ;
      if (kBoolTrue == test_20) {
        var_neededAssociations.addAssign_operation (enumerator_26789.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (698)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (698)).operator_concat (enumerator_27504.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (698)) COMMA_SOURCE_FILE_AT_LINE (698)) ;
      }
      enumerator_27504.gotoNextObject () ;
    }
    enumerator_26789.gotoNextObject () ;
  }
  GALGAS_mapOverrideList var_mapOverrideList = GALGAS_mapOverrideList::constructor_emptyList (SOURCE_FILE_AT_LINE (703)) ;
  cEnumerator_mapOverrideBlockListAST enumerator_27739 (object->mAttribute_mMapOverrideBlockListAST, kEnumeration_up) ;
  while (enumerator_27739.hasCurrentObject ()) {
    GALGAS_stringset var_handledAssociations = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (705)) ;
    GALGAS_stringset var_neededCombinaisons = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (706)) ;
    GALGAS_branchBehaviourSortedListForMapOverride var_branchBehaviourSortedListForMapOverride_31_ = GALGAS_branchBehaviourSortedListForMapOverride::constructor_emptySortedList (SOURCE_FILE_AT_LINE (707)) ;
    cEnumerator_mapOverrideBlockDescriptorAST enumerator_27987 (enumerator_27739.current_mMapOverrideBlockDescriptor_31_AST (HERE), kEnumeration_up) ;
    while (enumerator_27987.hasCurrentObject ()) {
      GALGAS_uint var_startStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_27987.current_mLeftState (HERE), var_startStateNameIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (710)) ;
      GALGAS_uint var_currentStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_27987.current_mRightState (HERE), var_currentStateNameIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (712)) ;
      GALGAS_string var_association = enumerator_27987.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (713)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (713)).operator_concat (enumerator_27987.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (713)) COMMA_SOURCE_FILE_AT_LINE (713)) ;
      const enumGalgasBool test_21 = var_neededAssociations.reader_hasKey (var_association COMMA_SOURCE_FILE_AT_LINE (714)).operator_not (SOURCE_FILE_AT_LINE (714)).boolEnum () ;
      if (kBoolTrue == test_21) {
        GALGAS_location location_22 (enumerator_27987.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_22, GALGAS_string ("the '").operator_concat (var_association COMMA_SOURCE_FILE_AT_LINE (715)).operator_concat (GALGAS_string ("' association is useless") COMMA_SOURCE_FILE_AT_LINE (715)) COMMA_SOURCE_FILE_AT_LINE (715)) ;
      }
      const enumGalgasBool test_23 = var_handledAssociations.reader_hasKey (var_association COMMA_SOURCE_FILE_AT_LINE (717)).boolEnum () ;
      if (kBoolTrue == test_23) {
        GALGAS_location location_24 (enumerator_27987.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_24, GALGAS_string ("the '").operator_concat (var_association COMMA_SOURCE_FILE_AT_LINE (719)).operator_concat (GALGAS_string ("' association is already defined") COMMA_SOURCE_FILE_AT_LINE (719)) COMMA_SOURCE_FILE_AT_LINE (718)) ;
      }
      var_handledAssociations.addAssign_operation (var_association COMMA_SOURCE_FILE_AT_LINE (721)) ;
      GALGAS_uint var_finalStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_27987.current_mResultingState (HERE), var_finalStateNameIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (723)) ;
      const enumGalgasBool test_25 = GALGAS_bool (kIsNotEqual, enumerator_27987.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (724)).objectCompare (enumerator_27987.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (724)))).boolEnum () ;
      if (kBoolTrue == test_25) {
        var_neededCombinaisons.addAssign_operation (enumerator_27987.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (725)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (725)).operator_concat (enumerator_27987.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (725)) COMMA_SOURCE_FILE_AT_LINE (725)) COMMA_SOURCE_FILE_AT_LINE (725)) ;
        var_neededCombinaisons.addAssign_operation (enumerator_27987.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (726)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (726)).operator_concat (enumerator_27987.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (726)) COMMA_SOURCE_FILE_AT_LINE (726)) COMMA_SOURCE_FILE_AT_LINE (726)) ;
        const enumGalgasBool test_26 = var_accessibilityGraph.reader_hasKey (enumerator_27987.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (727)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (727)).operator_concat (enumerator_27987.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (727)) COMMA_SOURCE_FILE_AT_LINE (727)) COMMA_SOURCE_FILE_AT_LINE (727)).operator_not (SOURCE_FILE_AT_LINE (727)).boolEnum () ;
        if (kBoolTrue == test_26) {
          GALGAS_location location_27 (enumerator_27987.current_mResultingState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_27, GALGAS_string ("the '").operator_concat (enumerator_27987.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (729)) COMMA_SOURCE_FILE_AT_LINE (729)).operator_concat (GALGAS_string ("' state is not reachable from '") COMMA_SOURCE_FILE_AT_LINE (729)).operator_concat (enumerator_27987.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (729)) COMMA_SOURCE_FILE_AT_LINE (729)).operator_concat (GALGAS_string ("' state") COMMA_SOURCE_FILE_AT_LINE (729)) COMMA_SOURCE_FILE_AT_LINE (728)) ;
        }
      }
      {
      routine_check_5F_K_5F_escapeCharacters (enumerator_27987.current_mTransitionMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (733)) ;
      }
      var_branchBehaviourSortedListForMapOverride_31_.addAssign_operation (var_startStateNameIndex, enumerator_27987.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (736)), var_currentStateNameIndex, enumerator_27987.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (738)), var_finalStateNameIndex, enumerator_27987.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (740)), enumerator_27987.current_mMessageKind (HERE), enumerator_27987.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (742)) COMMA_SOURCE_FILE_AT_LINE (734)) ;
      enumerator_27987.gotoNextObject () ;
    }
    GALGAS_stringset var_forgottenAssociations = var_neededAssociations.substract_operation (var_handledAssociations, inCompiler COMMA_SOURCE_FILE_AT_LINE (745)) ;
    const enumGalgasBool test_28 = GALGAS_bool (kIsStrictSup, var_forgottenAssociations.reader_count (SOURCE_FILE_AT_LINE (746)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_28) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_29843 (var_forgottenAssociations, kEnumeration_up) ;
      while (enumerator_29843.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_29843.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (749)) COMMA_SOURCE_FILE_AT_LINE (749)) ;
        enumerator_29843.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (inCompiler->here (), var_forgottenAssociations.reader_count (SOURCE_FILE_AT_LINE (751)).reader_string (SOURCE_FILE_AT_LINE (751)).operator_concat (GALGAS_string (" associations should be defined:") COMMA_SOURCE_FILE_AT_LINE (751)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (751)) COMMA_SOURCE_FILE_AT_LINE (751)) ;
    }
    GALGAS_stringset var_definedCombinaisons = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (753)) ;
    GALGAS_branchBehaviourSortedListForMapOverride var_branchBehaviourSortedListForMapOverride_32_ = GALGAS_branchBehaviourSortedListForMapOverride::constructor_emptySortedList (SOURCE_FILE_AT_LINE (754)) ;
    cEnumerator_mapOverrideBlockDescriptorAST enumerator_30207 (enumerator_27739.current_mMapOverrideBlockDescriptor_32_AST (HERE), kEnumeration_up) ;
    while (enumerator_30207.hasCurrentObject ()) {
      GALGAS_uint var_leftStateIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_30207.current_mLeftState (HERE), var_leftStateIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (757)) ;
      GALGAS_uint var_rightStateIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_30207.current_mRightState (HERE), var_rightStateIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (759)) ;
      GALGAS_string var_combinaison = enumerator_30207.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (760)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (760)).operator_concat (enumerator_30207.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (760)) COMMA_SOURCE_FILE_AT_LINE (760)) ;
      const enumGalgasBool test_29 = var_neededCombinaisons.reader_hasKey (var_combinaison COMMA_SOURCE_FILE_AT_LINE (761)).operator_not (SOURCE_FILE_AT_LINE (761)).boolEnum () ;
      if (kBoolTrue == test_29) {
        GALGAS_location location_30 (enumerator_30207.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_30, GALGAS_string ("the '").operator_concat (enumerator_30207.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (763)) COMMA_SOURCE_FILE_AT_LINE (763)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (763)).operator_concat (enumerator_30207.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (763)) COMMA_SOURCE_FILE_AT_LINE (763)).operator_concat (GALGAS_string ("' combinaison is useless") COMMA_SOURCE_FILE_AT_LINE (763)) COMMA_SOURCE_FILE_AT_LINE (762)) ;
      }
      const enumGalgasBool test_31 = var_definedCombinaisons.reader_hasKey (var_combinaison COMMA_SOURCE_FILE_AT_LINE (765)).boolEnum () ;
      if (kBoolTrue == test_31) {
        GALGAS_location location_32 (enumerator_30207.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_32, GALGAS_string ("the '").operator_concat (enumerator_30207.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (767)) COMMA_SOURCE_FILE_AT_LINE (767)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (767)).operator_concat (enumerator_30207.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (767)) COMMA_SOURCE_FILE_AT_LINE (767)).operator_concat (GALGAS_string ("' combinaison is already defined") COMMA_SOURCE_FILE_AT_LINE (767)) COMMA_SOURCE_FILE_AT_LINE (766)) ;
      }
      var_definedCombinaisons.addAssign_operation (var_combinaison COMMA_SOURCE_FILE_AT_LINE (769)) ;
      GALGAS_uint var_resultingStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_30207.current_mResultingState (HERE), var_resultingStateNameIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (771)) ;
      const enumGalgasBool test_33 = GALGAS_bool (kIsNotEqual, enumerator_30207.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (772)).objectCompare (enumerator_30207.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (772)))).operator_and (GALGAS_bool (kIsNotEqual, enumerator_30207.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (773)).objectCompare (enumerator_30207.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (773)))) COMMA_SOURCE_FILE_AT_LINE (773)).operator_and (var_accessibilityGraph.reader_hasKey (enumerator_30207.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (774)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (774)).operator_concat (enumerator_30207.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (774)) COMMA_SOURCE_FILE_AT_LINE (774)) COMMA_SOURCE_FILE_AT_LINE (774)).operator_not (SOURCE_FILE_AT_LINE (774)) COMMA_SOURCE_FILE_AT_LINE (774)).boolEnum () ;
      if (kBoolTrue == test_33) {
        GALGAS_location location_34 (enumerator_30207.current_mResultingState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_34, GALGAS_string ("the '").operator_concat (enumerator_30207.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (776)) COMMA_SOURCE_FILE_AT_LINE (776)).operator_concat (GALGAS_string ("' state cannot be reached from the '") COMMA_SOURCE_FILE_AT_LINE (776)).operator_concat (enumerator_30207.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (776)) COMMA_SOURCE_FILE_AT_LINE (776)).operator_concat (GALGAS_string ("' state") COMMA_SOURCE_FILE_AT_LINE (776)) COMMA_SOURCE_FILE_AT_LINE (775)) ;
      }
      {
      routine_check_5F_K_5F_escapeCharacters (enumerator_30207.current_mTransitionMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (778)) ;
      }
      const enumGalgasBool test_35 = GALGAS_bool (kIsEqual, enumerator_30207.current_mMessageKind (HERE).objectCompare (GALGAS_mapAutomatonMessageKind::constructor_noMessage (SOURCE_FILE_AT_LINE (779)))).boolEnum () ;
      if (kBoolTrue == test_35) {
        var_definedCombinaisons.addAssign_operation (enumerator_30207.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (780)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (780)).operator_concat (enumerator_30207.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (780)) COMMA_SOURCE_FILE_AT_LINE (780)) COMMA_SOURCE_FILE_AT_LINE (780)) ;
        var_branchBehaviourSortedListForMapOverride_32_.addAssign_operation (var_rightStateIndex, enumerator_30207.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (783)), var_leftStateIndex, enumerator_30207.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (785)), var_resultingStateNameIndex, enumerator_30207.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (787)), enumerator_30207.current_mMessageKind (HERE), enumerator_30207.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (789)) COMMA_SOURCE_FILE_AT_LINE (781)) ;
      }
      var_branchBehaviourSortedListForMapOverride_32_.addAssign_operation (var_leftStateIndex, enumerator_30207.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (794)), var_rightStateIndex, enumerator_30207.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (796)), var_resultingStateNameIndex, enumerator_30207.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (798)), enumerator_30207.current_mMessageKind (HERE), enumerator_30207.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (800)) COMMA_SOURCE_FILE_AT_LINE (792)) ;
      enumerator_30207.gotoNextObject () ;
    }
    const enumGalgasBool test_36 = GALGAS_bool (kIsEqual, var_forgottenAssociations.reader_count (SOURCE_FILE_AT_LINE (803)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_36) {
      GALGAS_stringset var_forgottenCombinaisons = var_neededCombinaisons.substract_operation (var_definedCombinaisons, inCompiler COMMA_SOURCE_FILE_AT_LINE (804)) ;
      const enumGalgasBool test_37 = GALGAS_bool (kIsStrictSup, var_forgottenCombinaisons.reader_count (SOURCE_FILE_AT_LINE (805)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_37) {
        GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
        cEnumerator_stringset enumerator_32528 (var_forgottenCombinaisons, kEnumeration_up) ;
        while (enumerator_32528.hasCurrentObject ()) {
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - ").operator_concat (enumerator_32528.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (808)) COMMA_SOURCE_FILE_AT_LINE (808)) ;
          enumerator_32528.gotoNextObject () ;
        }
        inCompiler->emitSemanticError (inCompiler->here (), var_forgottenCombinaisons.reader_count (SOURCE_FILE_AT_LINE (810)).reader_string (SOURCE_FILE_AT_LINE (810)).operator_concat (GALGAS_string (" combinaisons are forgotten:") COMMA_SOURCE_FILE_AT_LINE (810)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (810)) COMMA_SOURCE_FILE_AT_LINE (810)) ;
      }
    }
    var_mapOverrideList.addAssign_operation (enumerator_27739.current_mOverrideBlockName (HERE).reader_string (SOURCE_FILE_AT_LINE (814)), var_branchBehaviourSortedListForMapOverride_31_, var_branchBehaviourSortedListForMapOverride_32_ COMMA_SOURCE_FILE_AT_LINE (813)) ;
    enumerator_27739.gotoNextObject () ;
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (820)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (821)) ;
  cEnumerator_attributeInCollectionListAST enumerator_33039 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_33039.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_33039.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (823)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_33039.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (826)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_33039.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (832)) ;
    }
    enumerator_33039.gotoNextObject () ;
  }
  GALGAS_insertMethodMap var_insertMethodMap = GALGAS_insertMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (835)) ;
  cEnumerator_insertMethodListAST enumerator_33461 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_33461.hasCurrentObject ()) {
    {
    var_insertMethodMap.modifier_insertKey (enumerator_33461.current_mInsertMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (837)) ;
    }
    cEnumerator_stringlist enumerator_33654 (enumerator_33461.current_mErrorMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (839)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (839)), kEnumeration_up) ;
    while (enumerator_33654.hasCurrentObject ()) {
      GALGAS_stringlist var_explodedArray = enumerator_33654.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (840)) ;
      {
      GALGAS_string joker_33768_0 ; // Joker input parameter
      var_explodedArray.modifier_popFirst (joker_33768_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (841)) ;
      }
      cEnumerator_stringlist enumerator_33802 (var_explodedArray, kEnumeration_up) ;
      while (enumerator_33802.hasCurrentObject ()) {
        const enumGalgasBool test_38 = GALGAS_bool (kIsStrictSup, enumerator_33802.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (843)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
        if (kBoolTrue == test_38) {
          GALGAS_char var_c = enumerator_33802.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (844)) ;
          const enumGalgasBool test_39 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).operator_and (GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (76)))) COMMA_SOURCE_FILE_AT_LINE (845)).boolEnum () ;
          if (kBoolTrue == test_39) {
            GALGAS_location location_40 (enumerator_33461.current_mErrorMessage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_40, GALGAS_string ("only '%K', '%L' and '%%' escape sequences are allowed in an insert error message") COMMA_SOURCE_FILE_AT_LINE (846)) ;
          }
        }
        enumerator_33802.gotoNextObject () ;
      }
      enumerator_33654.gotoNextObject () ;
    }
    cEnumerator_stringlist enumerator_34281 (enumerator_33461.current_mShadowErrorMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (852)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (852)), kEnumeration_up) ;
    while (enumerator_34281.hasCurrentObject ()) {
      GALGAS_stringlist var_explodedArray = enumerator_34281.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (853)) ;
      {
      GALGAS_string joker_34395_0 ; // Joker input parameter
      var_explodedArray.modifier_popFirst (joker_34395_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (854)) ;
      }
      cEnumerator_stringlist enumerator_34429 (var_explodedArray, kEnumeration_up) ;
      while (enumerator_34429.hasCurrentObject ()) {
        const enumGalgasBool test_41 = GALGAS_bool (kIsStrictSup, enumerator_34429.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (856)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
        if (kBoolTrue == test_41) {
          GALGAS_char var_c = enumerator_34429.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (857)) ;
          const enumGalgasBool test_42 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).operator_and (GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (76)))) COMMA_SOURCE_FILE_AT_LINE (858)).boolEnum () ;
          if (kBoolTrue == test_42) {
            GALGAS_location location_43 (enumerator_33461.current_mErrorMessage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_43, GALGAS_string ("only '%K', '%L' and '%%' escape sequences are allowed in a shadow error message") COMMA_SOURCE_FILE_AT_LINE (859)) ;
          }
        }
        enumerator_34429.gotoNextObject () ;
      }
      enumerator_34281.gotoNextObject () ;
    }
    enumerator_33461.gotoNextObject () ;
  }
  GALGAS_searchMethodMap var_searchMethodMap = GALGAS_searchMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (866)) ;
  cEnumerator_mapSearchMethodListAST enumerator_34877 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_34877.hasCurrentObject ()) {
    const enumGalgasBool test_44 = GALGAS_bool (kIsEqual, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (868)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_44) {
      {
      var_searchMethodMap.modifier_insertKey (enumerator_34877.current_mSearchMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (869)) ;
      }
    }else if (kBoolFalse == test_44) {
      {
      var_searchMethodMap.modifier_insertKey (enumerator_34877.current_mSearchMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (871)) ;
      }
    }
    cEnumerator_stringlist enumerator_35191 (enumerator_34877.current_mErrorMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (874)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (874)), kEnumeration_up) ;
    while (enumerator_35191.hasCurrentObject ()) {
      GALGAS_stringlist var_explodedArray = enumerator_35191.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (875)) ;
      {
      GALGAS_string joker_35305_0 ; // Joker input parameter
      var_explodedArray.modifier_popFirst (joker_35305_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (876)) ;
      }
      cEnumerator_stringlist enumerator_35339 (var_explodedArray, kEnumeration_up) ;
      while (enumerator_35339.hasCurrentObject ()) {
        const enumGalgasBool test_45 = GALGAS_bool (kIsStrictSup, enumerator_35339.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (878)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
        if (kBoolTrue == test_45) {
          GALGAS_char var_c = enumerator_35339.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (879)) ;
          const enumGalgasBool test_46 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).boolEnum () ;
          if (kBoolTrue == test_46) {
            GALGAS_location location_47 (enumerator_34877.current_mErrorMessage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_47, GALGAS_string ("only '%K' and '%%' escape sequences are allowed in a search error message") COMMA_SOURCE_FILE_AT_LINE (881)) ;
          }
        }
        enumerator_35339.gotoNextObject () ;
      }
      enumerator_35191.gotoNextObject () ;
    }
    enumerator_34877.gotoNextObject () ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (888)) ;
  {
  var_withAccessorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("hasKey"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (889)), constinArgument_inPredefinedTypes.mAttribute_mStringType, inCompiler COMMA_SOURCE_FILE_AT_LINE (889)) ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_35866 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_35866.hasCurrentObject ()) {
    {
    var_withAccessorMap.modifier_insertKey (enumerator_35866.current_mSearchMethodName (HERE), constinArgument_inPredefinedTypes.mAttribute_mLStringType, inCompiler COMMA_SOURCE_FILE_AT_LINE (891)) ;
    }
    enumerator_35866.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_uniqueMapTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (899)), object->mAttribute_mMapTypeName, var_typedAttributeList, object->mAttribute_mInsertMethodList, object->mAttribute_mSearchMethodList, var_withAccessorMap, var_mapAutomatonStateMap, var_mapAutomatonActionMap, var_mapStateSortedList, var_mapOverrideList COMMA_SOURCE_FILE_AT_LINE (897)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (897)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_uniqueMapDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_uniqueMapDeclarationAST.mSlotID,
                                        categoryMethod_uniqueMapDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_uniqueMapDeclarationAST_semanticAnalysis (defineCategoryMethod_uniqueMapDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@mapProxyDeclarationAST semanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_mapProxyDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                    const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                    const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                    GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapProxyDeclarationAST * object = (const cPtr_mapProxyDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_mapProxyDeclarationAST) ;
  GALGAS_typedAttributeList var_listTypeAttributeList ;
  GALGAS_mapSearchMethodListAST var_searchMethodList ;
  GALGAS_bool joker_36942_5 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_36942_4 ; // Joker input parameter
  GALGAS_typeKindEnum joker_36942_3 ; // Joker input parameter
  GALGAS_typedAttributeList joker_36942_2 ; // Joker input parameter
  GALGAS_attributeMap joker_36942_1 ; // Joker input parameter
  GALGAS_constructorMap joker_36978_11 ; // Joker input parameter
  GALGAS_readerMap joker_36978_10 ; // Joker input parameter
  GALGAS_modifierMap joker_36978_9 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_36978_8 ; // Joker input parameter
  GALGAS_classMethodMap joker_36978_7 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_36978_6 ; // Joker input parameter
  GALGAS_stringlist joker_36978_5 ; // Joker input parameter
  GALGAS_uint joker_36978_4 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyList joker_36978_3 ; // Joker input parameter
  GALGAS_stringset joker_36978_2 ; // Joker input parameter
  GALGAS_lstringlist joker_36978_1 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_37008_5 ; // Joker input parameter
  GALGAS_withAccessorMap joker_37008_4 ; // Joker input parameter
  GALGAS_bool joker_37008_3 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_37008_2 ; // Joker input parameter
  GALGAS_string joker_37008_1 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedMapTypeName, joker_36942_5, joker_36942_4, joker_36942_3, joker_36942_2, joker_36942_1, var_listTypeAttributeList, joker_36978_11, joker_36978_10, joker_36978_9, joker_36978_8, joker_36978_7, joker_36978_6, joker_36978_5, joker_36978_4, joker_36978_3, joker_36978_2, joker_36978_1, var_searchMethodList, joker_37008_5, joker_37008_4, joker_37008_3, joker_37008_2, joker_37008_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (924)) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_mapProxyTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapProxyTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (935)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedMapTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (936)), var_listTypeAttributeList, var_searchMethodList COMMA_SOURCE_FILE_AT_LINE (933)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (933)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_mapProxyDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_mapProxyDeclarationAST.mSlotID,
                                        categoryMethod_mapProxyDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapProxyDeclarationAST_semanticAnalysis (defineCategoryMethod_mapProxyDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@externFunctionDeclarationAST semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_externFunctionDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                          const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                          const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                          GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externFunctionDeclarationAST * object = (const cPtr_externFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externFunctionDeclarationAST) ;
  GALGAS_formalInputParameterListForGeneration var_formalArgumentList = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1060)) ;
  cEnumerator_formalInputParameterListAST enumerator_42729 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_42729.hasCurrentObject ()) {
    var_formalArgumentList.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_42729.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1063)), enumerator_42729.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1064)), enumerator_42729.current_mFormalArgumentName (HERE), enumerator_42729.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (1062)) ;
    enumerator_42729.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_functionPrototypeDeclarationForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1071)), var_formalArgumentList, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mResultTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1073)) COMMA_SOURCE_FILE_AT_LINE (1069)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1069)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_externFunctionDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_externFunctionDeclarationAST.mSlotID,
                                        categoryMethod_externFunctionDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externFunctionDeclarationAST_semanticAnalysis (defineCategoryMethod_externFunctionDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@externRoutineDeclarationAST semanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_externRoutineDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externRoutineDeclarationAST * object = (const cPtr_externRoutineDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_externRoutineDeclarationAST) ;
  GALGAS_formalParameterListForGeneration var_formalArgumentList = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1086)) ;
  cEnumerator_formalParameterListAST enumerator_43642 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_43642.hasCurrentObject ()) {
    var_formalArgumentList.addAssign_operation (enumerator_43642.current_mFormalArgumentPassingMode (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_43642.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1090)), enumerator_43642.current_mFormalArgumentName (HERE), enumerator_43642.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1092)) COMMA_SOURCE_FILE_AT_LINE (1088)) ;
    enumerator_43642.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_routinePrototypeDeclarationForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (1097)), var_formalArgumentList COMMA_SOURCE_FILE_AT_LINE (1095)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1095)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_externRoutineDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_externRoutineDeclarationAST.mSlotID,
                                        categoryMethod_externRoutineDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externRoutineDeclarationAST_semanticAnalysis (defineCategoryMethod_externRoutineDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@routineDeclarationAST semanticAnalysis'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_routineDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                   const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                   GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_routineDeclarationAST * object = (const cPtr_routineDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_routineDeclarationAST) ;
  GALGAS_formalParameterListForGeneration var_formalArgumentList = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1112)) ;
  GALGAS_semanticInstructionListForGeneration var_instructionList ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1117)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1119)) COMMA_SOURCE_FILE_AT_LINE (1114)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mFormalArgumentList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1124)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1125)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1126)), GALGAS_string::makeEmptyString (), object->mAttribute_mRoutineInstructionList, object->mAttribute_mEndOfRoutineInstructionList, var_instructionList, var_formalArgumentList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1121)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_routineImplementationForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (1136)), var_formalArgumentList, var_instructionList COMMA_SOURCE_FILE_AT_LINE (1134)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1134)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_routineDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_routineDeclarationAST.mSlotID,
                                        categoryMethod_routineDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_routineDeclarationAST_semanticAnalysis (defineCategoryMethod_routineDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@classDeclarationAST semanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_classDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_classDeclarationAST * object = (const cPtr_classDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_classDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mClassTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1152)) ;
  GALGAS_unifiedTypeMapProxy var_superClassProxy ;
  GALGAS_typedAttributeList var_allAttributeList ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (1158)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_superClassProxy = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1159)) ;
    var_allAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1160)) ;
    GALGAS_bool var_generatedInSeparateFileFeature = GALGAS_bool (false) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mClassFeatureList.reader_length (SOURCE_FILE_AT_LINE (1162)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_1) {
      cEnumerator_lstringlist enumerator_46171 (object->mAttribute_mClassFeatureList, kEnumeration_up) ;
      while (enumerator_46171.hasCurrentObject ()) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_46171.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1164)).objectCompare (GALGAS_string ("generatedInSeparateFile"))).boolEnum () ;
        if (kBoolTrue == test_2) {
          const enumGalgasBool test_3 = var_generatedInSeparateFileFeature.boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (enumerator_46171.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("the 'generatedInSeparateFile' is already named") COMMA_SOURCE_FILE_AT_LINE (1166)) ;
          }
          var_generatedInSeparateFileFeature = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_2) {
          GALGAS_location location_5 (enumerator_46171.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_5, GALGAS_string ("only the 'generatedInSeparateFile' feature is allowed here") COMMA_SOURCE_FILE_AT_LINE (1170)) ;
        }
        enumerator_46171.gotoNextObject () ;
      }
    }
  }else if (kBoolFalse == test_0) {
    var_superClassProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSuperClassName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1175)) ;
    var_allAttributeList = var_superClassProxy.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1176)) ;
    const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, object->mAttribute_mClassFeatureList.reader_length (SOURCE_FILE_AT_LINE (1177)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_6) {
      cEnumerator_lstringlist enumerator_46832 (object->mAttribute_mClassFeatureList, kEnumeration_up) ;
      while (enumerator_46832.hasCurrentObject ()) {
        GALGAS_location location_7 (enumerator_46832.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_7, GALGAS_string ("a class that has a super class does not accept any feature") COMMA_SOURCE_FILE_AT_LINE (1179)) ;
        enumerator_46832.gotoNextObject () ;
      }
    }
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1184)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1185)) ;
  cEnumerator_attributeInCollectionListAST enumerator_47115 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_47115.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_47115.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1187)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    cEnumerator_lstringlist enumerator_47300 (enumerator_47115.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_47300.hasCurrentObject ()) {
      const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_47300.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1191)).objectCompare (GALGAS_string ("setter"))).boolEnum () ;
      if (kBoolTrue == test_8) {
        const enumGalgasBool test_9 = var_hasSetter.boolEnum () ;
        if (kBoolTrue == test_9) {
          GALGAS_location location_10 (enumerator_47300.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_10, GALGAS_string ("the 'setter' feature is already named") COMMA_SOURCE_FILE_AT_LINE (1193)) ;
        }
        var_hasSetter = GALGAS_bool (true) ;
      }else if (kBoolFalse == test_8) {
        const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_47300.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1196)).objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
        if (kBoolTrue == test_11) {
          const enumGalgasBool test_12 = var_hasGetter.operator_not (SOURCE_FILE_AT_LINE (1197)).boolEnum () ;
          if (kBoolTrue == test_12) {
            GALGAS_location location_13 (enumerator_47300.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_13, GALGAS_string ("the 'nogetter' feature is already named") COMMA_SOURCE_FILE_AT_LINE (1198)) ;
          }
          var_hasGetter = GALGAS_bool (false) ;
        }else if (kBoolFalse == test_11) {
          GALGAS_location location_14 (enumerator_47300.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_14, GALGAS_string ("only the 'setter' or 'nogetter' are allowed here") COMMA_SOURCE_FILE_AT_LINE (1202)) ;
        }
      }
      enumerator_47300.gotoNextObject () ;
    }
    var_typedAttributeList.addAssign_operation (var_t, enumerator_47115.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (1205)) ;
    var_allAttributeList.addAssign_operation (var_t, enumerator_47115.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (1211)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_47115.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (1217)) ;
    }
    enumerator_47115.gotoNextObject () ;
  }
  GALGAS_string var_sortString = var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1220)) ;
  GALGAS_unifiedTypeMapProxy var_t = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1221)) ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1222)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1222)).isValid ()) {
    PMUInt32 variant_48216 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1222)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1222)).uintValue () ;
    bool loop_48216 = true ;
    while (loop_48216) {
      loop_48216 = var_t.reader_isNull (SOURCE_FILE_AT_LINE (1223)).operator_not (SOURCE_FILE_AT_LINE (1223)).isValid () ;
      if (loop_48216) {
        loop_48216 = var_t.reader_isNull (SOURCE_FILE_AT_LINE (1223)).operator_not (SOURCE_FILE_AT_LINE (1223)).boolValue () ;
      }
      if (loop_48216 && (0 == variant_48216)) {
        loop_48216 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1222)) ;
      }
      if (loop_48216) {
        variant_48216 -- ;
        var_sortString = var_t.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1224)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1224)).operator_concat (var_sortString COMMA_SOURCE_FILE_AT_LINE (1224)) ;
        var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1225)) ;
      }
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_classTypeForGeneration::constructor_new (object->mAttribute_mIsGlobal, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mClassTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1230)), object->mAttribute_mIsAbstract, object->mAttribute_mClassTypeName, var_superClassProxy, var_allAttributeList, var_typedAttributeList, var_selfType.reader_mGenerateHeaderInSeparateFile (inCompiler COMMA_SOURCE_FILE_AT_LINE (1236)) COMMA_SOURCE_FILE_AT_LINE (1228)), var_sortString COMMA_SOURCE_FILE_AT_LINE (1228)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_classDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_classDeclarationAST.mSlotID,
                                        categoryMethod_classDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_classDeclarationAST_semanticAnalysis (defineCategoryMethod_classDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@functionDeclarationAST semanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_functionDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                    const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                    const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                    GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_functionDeclarationAST * object = (const cPtr_functionDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_functionDeclarationAST) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_formalInputParameterListForGeneration var_formalInputParameterList ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_resultVariableCppName ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1332)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1334)) COMMA_SOURCE_FILE_AT_LINE (1329)) ;
  {
  routine_analyzeFunctionBody (var_analysisContext, object->mAttribute_mFormalArgumentList, GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1339)), GALGAS_string::makeEmptyString (), object->mAttribute_mFunctionInstructionList, object->mAttribute_mResultVariableName, object->mAttribute_mResultTypeName, object->mAttribute_mEndOfFunctionInstructionList, var_formalInputParameterList, var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1336)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_functionImplementationForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1353)), var_formalInputParameterList, var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1351)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1351)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_functionDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_functionDeclarationAST.mSlotID,
                                        categoryMethod_functionDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_functionDeclarationAST_semanticAnalysis (defineCategoryMethod_functionDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@onceFunctionDeclarationAST semanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_onceFunctionDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                        const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                        const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                        GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_onceFunctionDeclarationAST * object = (const cPtr_onceFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_onceFunctionDeclarationAST) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_resultVariableCppName ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1377)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1379)) COMMA_SOURCE_FILE_AT_LINE (1374)) ;
  {
  GALGAS_formalInputParameterListForGeneration joker_54197_0 ; // Joker input parameter
  routine_analyzeFunctionBody (var_analysisContext, GALGAS_formalInputParameterListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1383)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1384)), GALGAS_string::makeEmptyString (), object->mAttribute_mFunctionInstructionList, object->mAttribute_mResultVariableName, object->mAttribute_mResultTypeName, object->mAttribute_mEndOfFunctionInstructionList, joker_54197_0, var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1381)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_onceFunctionDeclarationForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1398)), var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1396)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1396)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_onceFunctionDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_onceFunctionDeclarationAST.mSlotID,
                                        categoryMethod_onceFunctionDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_onceFunctionDeclarationAST_semanticAnalysis (defineCategoryMethod_onceFunctionDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@filewrapperDeclarationAST semanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_filewrapperDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                       const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                       GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperDeclarationAST * object = (const cPtr_filewrapperDeclarationAST *) inObject ;
  macroValidSharedObject (object, const cPtr_filewrapperDeclarationAST) ;
  GALGAS_wrapperFileMap var_wrapperFileMap ;
  GALGAS_wrapperDirectoryMap var_wrapperDirectoryMap ;
  GALGAS_lstring joker_55340_0 ; // Joker input parameter
  GALGAS_lstringlist joker_55347_0 ; // Joker input parameter
  GALGAS_filewrapperTemplateMap joker_55399_0 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mFilewrapperMap.method_searchKey (object->mAttribute_mFilewrapperName, joker_55340_0, joker_55347_0, var_wrapperFileMap, var_wrapperDirectoryMap, joker_55399_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1421)) ;
  GALGAS_string var_absoluteSourcePath ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1431)).reader_firstCharacterOrNul (SOURCE_FILE_AT_LINE (1431)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_absoluteSourcePath = object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1432)) ;
  }else if (kBoolFalse == test_0) {
    var_absoluteSourcePath = constinArgument_inSemanticContext.reader_mSourceFileAbsolutePath (SOURCE_FILE_AT_LINE (1434)).reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (1434)).operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1434)).operator_concat (object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1434)) COMMA_SOURCE_FILE_AT_LINE (1434)) ;
  }
  const enumGalgasBool test_1 = var_absoluteSourcePath.reader_directoryExists (SOURCE_FILE_AT_LINE (1436)).operator_not (SOURCE_FILE_AT_LINE (1436)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("The '").operator_concat (var_absoluteSourcePath COMMA_SOURCE_FILE_AT_LINE (1437)).operator_concat (GALGAS_string ("' directory does not exist") COMMA_SOURCE_FILE_AT_LINE (1437)) COMMA_SOURCE_FILE_AT_LINE (1437)) ;
  }else if (kBoolFalse == test_1) {
    GALGAS_filewrapperTemplateListForGeneration var_filewrapperTemplateListForGeneration = GALGAS_filewrapperTemplateListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1440)) ;
    cEnumerator_filewrapperTemplateListAST enumerator_56059 (object->mAttribute_mFilewrapperTemplateList, kEnumeration_up) ;
    while (enumerator_56059.hasCurrentObject ()) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_56059.current_mFilewrapperTemplatePath (HERE).reader_string (SOURCE_FILE_AT_LINE (1442)).reader_firstCharacterOrNul (SOURCE_FILE_AT_LINE (1442)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_56059.current_mFilewrapperTemplatePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the path should not begin with a '/'; it is relative to filewrapper path '").operator_concat (var_absoluteSourcePath COMMA_SOURCE_FILE_AT_LINE (1443)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1443)) COMMA_SOURCE_FILE_AT_LINE (1443)) ;
      }
      GALGAS_string var_absoluteTemplatePath = var_absoluteSourcePath.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1445)).operator_concat (enumerator_56059.current_mFilewrapperTemplatePath (HERE).reader_string (SOURCE_FILE_AT_LINE (1445)) COMMA_SOURCE_FILE_AT_LINE (1445)) ;
      GALGAS_templateInstructionListAST var_resultingInstructionList ;
      {
      cGrammar_templateGrammar::_performSourceFileParsing_ (inCompiler, GALGAS_lstring::constructor_new (var_absoluteTemplatePath, enumerator_56059.current_mFilewrapperTemplatePath (HERE).reader_location (SOURCE_FILE_AT_LINE (1448)) COMMA_SOURCE_FILE_AT_LINE (1448)), var_resultingInstructionList COMMA_SOURCE_FILE_AT_LINE (1448)) ;
      }
      GALGAS_templateVariableMap var_templateVariableMap = GALGAS_templateVariableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1450)) ;
      GALGAS_formalInputParameterListForGeneration var_filewrapperTemplateFormalInputParameters = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1451)) ;
      cEnumerator_formalTemplateInputParameterListAST enumerator_56872 (enumerator_56059.current_mFilewrapperTemplateFormalInputParameters (HERE), kEnumeration_up) ;
      while (enumerator_56872.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_56872.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1453)) ;
        GALGAS_string var_cppVarName = GALGAS_string ("in_").operator_concat (enumerator_56872.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1454)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1454)) COMMA_SOURCE_FILE_AT_LINE (1454)) ;
        {
        var_templateVariableMap.modifier_insertKey (enumerator_56872.current_mFormalArgumentName (HERE), var_type, var_cppVarName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1455)) ;
        }
        var_filewrapperTemplateFormalInputParameters.addAssign_operation (var_type, var_cppVarName, enumerator_56872.current_mFormalArgumentName (HERE), GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1456)) ;
        enumerator_56872.gotoNextObject () ;
      }
      GALGAS_templateInstructionListForGeneration var_templateInstructionListForGeneration = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1459)) ;
      GALGAS_templateAnalysisContext var_templateAnalysisContext = GALGAS_templateAnalysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_templateVariableMap COMMA_SOURCE_FILE_AT_LINE (1460)) ;
      {
      routine_templateInstructionListAnalysis (var_templateAnalysisContext, var_resultingInstructionList, var_templateInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1465)) ;
      }
      var_filewrapperTemplateListForGeneration.addAssign_operation (enumerator_56059.current_mFilewrapperTemplateName (HERE).reader_string (SOURCE_FILE_AT_LINE (1468)), var_filewrapperTemplateFormalInputParameters, var_templateInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1467)) ;
      enumerator_56059.gotoNextObject () ;
    }
    ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_filewrapperDeclarationForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1476)), object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1477)), var_wrapperFileMap, var_wrapperDirectoryMap, var_filewrapperTemplateListForGeneration COMMA_SOURCE_FILE_AT_LINE (1474)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1474)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_filewrapperDeclarationAST.mSlotID,
                                        categoryMethod_filewrapperDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperDeclarationAST_semanticAnalysis (defineCategoryMethod_filewrapperDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@abstractCategoryMethodAST semanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                       const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                       GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryMethodAST * object = (const cPtr_abstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_abstractCategoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1495)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1497)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1497)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1498)) COMMA_SOURCE_FILE_AT_LINE (1498)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1498)) COMMA_SOURCE_FILE_AT_LINE (1498)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1499)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1500)) COMMA_SOURCE_FILE_AT_LINE (1500)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1500)) COMMA_SOURCE_FILE_AT_LINE (1500)) ;
    }
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1503)) ;
  cEnumerator_formalParameterListAST enumerator_59305 (object->mAttribute_mAbstractCategoryMethodFormalParameterList, kEnumeration_up) ;
  while (enumerator_59305.hasCurrentObject ()) {
    var_formalParameterListForGeneration.addAssign_operation (enumerator_59305.current_mFormalArgumentPassingMode (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_59305.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1507)), enumerator_59305.current_mFormalArgumentName (HERE), enumerator_59305.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1509)) COMMA_SOURCE_FILE_AT_LINE (1505)) ;
    enumerator_59305.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_abstractCategoryMethodForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1515)), object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1516)), var_formalParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (1513)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1513)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                        categoryMethod_abstractCategoryMethodAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryMethodAST_semanticAnalysis (defineCategoryMethod_abstractCategoryMethodAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@categoryMethodAST semanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_categoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryMethodAST * object = (const cPtr_categoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_categoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1531)) ;
  GALGAS_string var_selfObjectName ;
  GALGAS_string var_selfObjectAccessor ;
  GALGAS_bool var_implementedAsFunction ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1536)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1536)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_selfObjectName = GALGAS_string ("object") ;
    var_selfObjectAccessor = GALGAS_string ("object->") ;
    var_implementedAsFunction = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    var_selfObjectName = GALGAS_string ("inObject") ;
    var_selfObjectAccessor = GALGAS_string ("inObject.") ;
    var_implementedAsFunction = GALGAS_bool (true) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1546)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, var_selfObjectName, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1553)) COMMA_SOURCE_FILE_AT_LINE (1548)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mCategoryMethodFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1558)), var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1559)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1560)), var_selfObjectAccessor, object->mAttribute_mCategoryMethodInstructionList, object->mAttribute_mEndOfMethodLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1555)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_categoryMethodForGeneration::constructor_new (object->mAttribute_mIsGlobal, var_selfType, object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1571)), var_implementedAsFunction, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1574)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1568)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1568)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_categoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                        categoryMethod_categoryMethodAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryMethodAST_semanticAnalysis (defineCategoryMethod_categoryMethodAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingCategoryMethodAST semanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryMethodAST * object = (const cPtr_overridingCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingCategoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1589)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1591)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1591)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1592)) COMMA_SOURCE_FILE_AT_LINE (1592)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1592)) COMMA_SOURCE_FILE_AT_LINE (1592)) ;
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1596)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1597)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1599)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1599)).isValid ()) {
    PMUInt32 variant_62707 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1599)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1599)).uintValue () ;
    bool loop_62707 = true ;
    while (loop_62707) {
      loop_62707 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1600)).operator_not (SOURCE_FILE_AT_LINE (1600)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1600)).isValid () ;
      if (loop_62707) {
        loop_62707 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1600)).operator_not (SOURCE_FILE_AT_LINE (1600)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1600)).boolValue () ;
      }
      if (loop_62707 && (0 == variant_62707)) {
        loop_62707 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1599)) ;
      }
      if (loop_62707) {
        variant_62707 -- ;
        const enumGalgasBool test_2 = var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1601)).reader_hasKey (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1601)) COMMA_SOURCE_FILE_AT_LINE (1601)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_63013_0 ; // Joker input parameter
          GALGAS_bool joker_63066_0 ; // Joker input parameter
          GALGAS_string joker_63080_0 ; // Joker input parameter
          var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1603)).method_searchKey (object->mAttribute_mOverridingCategoryMethodName, joker_63013_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_63066_0, var_qualifier, joker_63080_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1603)) ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1604)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1605)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1608)) ;
      }
    }
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1611)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, GALGAS_string ("object"), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1618)) COMMA_SOURCE_FILE_AT_LINE (1613)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mOverridingCategoryMethodFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1623)), var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1624)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1625)), GALGAS_string ("object->"), object->mAttribute_mOverridingCategoryMethodInstructionList, object->mAttribute_mEndOfMethodLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1620)) ;
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryMethodName.reader_location (SOURCE_FILE_AT_LINE (1636)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1634)) ;
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_overridingCategoryMethodForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1644)), var_baseTypeName, object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1646)), var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1648)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1642)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1642)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                        categoryMethod_overridingCategoryMethodAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryMethodAST_semanticAnalysis (defineCategoryMethod_overridingCategoryMethodAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingAbstractCategoryMethodAST semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                                 GALGAS_semanticDeclarationSortedListForGeneration & /* ioArgument_ioSemanticDeclarationListForGeneration */,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryMethodAST * object = (const cPtr_overridingAbstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingAbstractCategoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1663)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1665)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1665)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1666)) COMMA_SOURCE_FILE_AT_LINE (1666)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1666)) COMMA_SOURCE_FILE_AT_LINE (1666)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1667)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1668)) COMMA_SOURCE_FILE_AT_LINE (1668)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1668)) COMMA_SOURCE_FILE_AT_LINE (1668)) ;
    }
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1672)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1673)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1675)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1675)).isValid ()) {
    PMUInt32 variant_65741 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1675)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1675)).uintValue () ;
    bool loop_65741 = true ;
    while (loop_65741) {
      loop_65741 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1676)).operator_not (SOURCE_FILE_AT_LINE (1676)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1676)).isValid () ;
      if (loop_65741) {
        loop_65741 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1676)).operator_not (SOURCE_FILE_AT_LINE (1676)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1676)).boolValue () ;
      }
      if (loop_65741 && (0 == variant_65741)) {
        loop_65741 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1675)) ;
      }
      if (loop_65741) {
        variant_65741 -- ;
        const enumGalgasBool test_4 = var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1677)).reader_hasKey (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1677)) COMMA_SOURCE_FILE_AT_LINE (1677)).boolEnum () ;
        if (kBoolTrue == test_4) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_66047_0 ; // Joker input parameter
          GALGAS_bool joker_66100_0 ; // Joker input parameter
          GALGAS_string joker_66114_0 ; // Joker input parameter
          var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1679)).method_searchKey (object->mAttribute_mOverridingCategoryMethodName, joker_66047_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_66100_0, var_qualifier, joker_66114_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1679)) ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1680)))).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1681)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1684)) ;
      }
    }
  }
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1687)) ;
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration ;
  {
  routine_buildLocalVariableMapAndSignature (constinArgument_inSemanticContext, object->mAttribute_mOverridingCategoryMethodFormalParameterList, var_variableMap, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1689)) ;
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryMethodName.reader_location (SOURCE_FILE_AT_LINE (1699)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1697)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                        categoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryMethodAST_semanticAnalysis (defineCategoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@abstractCategoryModifierAST semanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryModifierAST * object = (const cPtr_abstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_abstractCategoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1714)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1716)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1716)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1717)) COMMA_SOURCE_FILE_AT_LINE (1717)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1717)) COMMA_SOURCE_FILE_AT_LINE (1717)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1718)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1719)) COMMA_SOURCE_FILE_AT_LINE (1719)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1719)) COMMA_SOURCE_FILE_AT_LINE (1719)) ;
    }
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1722)) ;
  cEnumerator_formalParameterListAST enumerator_67908 (object->mAttribute_mAbstractCategoryModifierFormalParameterList, kEnumeration_up) ;
  while (enumerator_67908.hasCurrentObject ()) {
    var_formalParameterListForGeneration.addAssign_operation (enumerator_67908.current_mFormalArgumentPassingMode (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_67908.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1726)), enumerator_67908.current_mFormalArgumentName (HERE), enumerator_67908.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1728)) COMMA_SOURCE_FILE_AT_LINE (1724)) ;
    enumerator_67908.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_abstractCategoryModifierForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1734)), object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1735)), var_formalParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (1732)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1732)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                        categoryMethod_abstractCategoryModifierAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryModifierAST_semanticAnalysis (defineCategoryMethod_abstractCategoryModifierAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@categoryModifierAST semanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_categoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryModifierAST * object = (const cPtr_categoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_categoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1750)) ;
  GALGAS_string var_selfObjectName ;
  GALGAS_string var_selfObjectAccessor ;
  GALGAS_bool var_implementedAsFunction ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1755)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1755)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_selfObjectName = GALGAS_string ("object") ;
    var_selfObjectAccessor = GALGAS_string ("object->") ;
    var_implementedAsFunction = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    var_selfObjectName = GALGAS_string ("ioObject") ;
    var_selfObjectAccessor = GALGAS_string ("ioObject.") ;
    var_implementedAsFunction = GALGAS_bool (true) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1765)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, var_selfObjectName, var_selfType COMMA_SOURCE_FILE_AT_LINE (1767)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mCategoryModifierFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1777)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1778)), var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1779)), var_selfObjectAccessor, object->mAttribute_mCategoryModifierInstructionList, object->mAttribute_mEndOfModifierLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1774)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_categoryModifierForGeneration::constructor_new (object->mAttribute_mIsGlobal, var_selfType, object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1790)), var_implementedAsFunction, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1793)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1787)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1787)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_categoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                        categoryMethod_categoryModifierAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryModifierAST_semanticAnalysis (defineCategoryMethod_categoryModifierAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingCategoryModifierAST semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                           const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                           const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                           GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryModifierAST * object = (const cPtr_overridingCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingCategoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1808)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1810)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1810)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1811)) COMMA_SOURCE_FILE_AT_LINE (1811)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1811)) COMMA_SOURCE_FILE_AT_LINE (1811)) ;
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1815)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1816)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1818)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1818)).isValid ()) {
    PMUInt32 variant_71313 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1818)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1818)).uintValue () ;
    bool loop_71313 = true ;
    while (loop_71313) {
      loop_71313 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1819)).operator_not (SOURCE_FILE_AT_LINE (1819)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1819)).isValid () ;
      if (loop_71313) {
        loop_71313 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1819)).operator_not (SOURCE_FILE_AT_LINE (1819)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1819)).boolValue () ;
      }
      if (loop_71313 && (0 == variant_71313)) {
        loop_71313 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1818)) ;
      }
      if (loop_71313) {
        variant_71313 -- ;
        const enumGalgasBool test_2 = var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1820)).reader_hasKey (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1820)) COMMA_SOURCE_FILE_AT_LINE (1820)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_71611_0 ; // Joker input parameter
          GALGAS_bool joker_71634_0 ; // Joker input parameter
          GALGAS_string joker_71648_0 ; // Joker input parameter
          var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1822)).method_searchKey (object->mAttribute_mOverridingCategoryModifierName, joker_71611_0, var_inheritedSignature, joker_71634_0, var_qualifier, joker_71648_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1822)) ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1823)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1824)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1827)) ;
      }
    }
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1830)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, GALGAS_string ("object"), var_selfType COMMA_SOURCE_FILE_AT_LINE (1832)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mOverridingCategoryModifierFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1842)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1843)), var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1844)), GALGAS_string ("object->"), object->mAttribute_mOverridingCategoryModifierInstructionList, object->mAttribute_mEndOfModifierLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1839)) ;
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryModifierName.reader_location (SOURCE_FILE_AT_LINE (1855)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1853)) ;
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_overridingCategoryModifierForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1863)), var_baseTypeName, object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1865)), var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1867)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1861)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1861)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                        categoryMethod_overridingCategoryModifierAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryModifierAST_semanticAnalysis (defineCategoryMethod_overridingCategoryModifierAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingAbstractCategoryModifierAST semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                                   const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                                   GALGAS_semanticDeclarationSortedListForGeneration & /* ioArgument_ioSemanticDeclarationListForGeneration */,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryModifierAST * object = (const cPtr_overridingAbstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingAbstractCategoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1882)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1884)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1884)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1885)) COMMA_SOURCE_FILE_AT_LINE (1885)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1885)) COMMA_SOURCE_FILE_AT_LINE (1885)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1886)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1887)) COMMA_SOURCE_FILE_AT_LINE (1887)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1887)) COMMA_SOURCE_FILE_AT_LINE (1887)) ;
    }
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1891)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1892)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1894)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1894)).isValid ()) {
    PMUInt32 variant_74312 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1894)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1894)).uintValue () ;
    bool loop_74312 = true ;
    while (loop_74312) {
      loop_74312 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1895)).operator_not (SOURCE_FILE_AT_LINE (1895)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1895)).isValid () ;
      if (loop_74312) {
        loop_74312 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1895)).operator_not (SOURCE_FILE_AT_LINE (1895)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1895)).boolValue () ;
      }
      if (loop_74312 && (0 == variant_74312)) {
        loop_74312 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1894)) ;
      }
      if (loop_74312) {
        variant_74312 -- ;
        const enumGalgasBool test_4 = var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1896)).reader_hasKey (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1896)) COMMA_SOURCE_FILE_AT_LINE (1896)).boolEnum () ;
        if (kBoolTrue == test_4) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_74610_0 ; // Joker input parameter
          GALGAS_bool joker_74633_0 ; // Joker input parameter
          GALGAS_string joker_74647_0 ; // Joker input parameter
          var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1898)).method_searchKey (object->mAttribute_mOverridingCategoryModifierName, joker_74610_0, var_inheritedSignature, joker_74633_0, var_qualifier, joker_74647_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1898)) ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1899)))).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1900)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1903)) ;
      }
    }
  }
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1906)) ;
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration ;
  {
  routine_buildLocalVariableMapAndSignature (constinArgument_inSemanticContext, object->mAttribute_mOverridingCategoryModifierFormalParameterList, var_variableMap, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1908)) ;
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryModifierName.reader_location (SOURCE_FILE_AT_LINE (1918)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1916)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                        categoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryModifierAST_semanticAnalysis (defineCategoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@abstractCategoryReaderAST semanticAnalysis'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                       const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                       GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryReaderAST * object = (const cPtr_abstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_abstractCategoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1933)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1935)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1935)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1936)) COMMA_SOURCE_FILE_AT_LINE (1936)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1936)) COMMA_SOURCE_FILE_AT_LINE (1936)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1937)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1938)) COMMA_SOURCE_FILE_AT_LINE (1938)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1938)) COMMA_SOURCE_FILE_AT_LINE (1938)) ;
    }
  }
  GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1941)) ;
  cEnumerator_formalInputParameterListAST enumerator_76441 (object->mAttribute_mAbstractCategoryReaderFormalInputParameterList, kEnumeration_up) ;
  while (enumerator_76441.hasCurrentObject ()) {
    var_formalParameterListForGeneration.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_76441.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1944)), enumerator_76441.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1945)), enumerator_76441.current_mFormalArgumentName (HERE), enumerator_76441.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (1943)) ;
    enumerator_76441.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_abstractCategoryReaderForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1953)), object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (1954)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAbstractCategoryReaderReturnedTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1955)), var_formalParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (1951)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1951)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                        categoryMethod_abstractCategoryReaderAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryReaderAST_semanticAnalysis (defineCategoryMethod_abstractCategoryReaderAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@categoryReaderAST semanticAnalysis'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_categoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryReaderAST * object = (const cPtr_categoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_categoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1972)) ;
  GALGAS_string var_selfObjectName ;
  GALGAS_string var_selfObjectAccessor ;
  GALGAS_bool var_implementedAsFunction ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1977)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1977)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_selfObjectName = GALGAS_string ("object") ;
    var_selfObjectAccessor = GALGAS_string ("object->") ;
    var_implementedAsFunction = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    var_selfObjectName = GALGAS_string ("inObject") ;
    var_selfObjectAccessor = GALGAS_string ("inObject.") ;
    var_implementedAsFunction = GALGAS_bool (true) ;
  }
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, var_selfObjectName, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1992)) COMMA_SOURCE_FILE_AT_LINE (1987)) ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_returnVariableCppName ;
  GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  {
  routine_analyzeFunctionBody (var_analysisContext, object->mAttribute_mCategoryReaderFormalInputParameterList, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2001)), var_selfObjectAccessor, object->mAttribute_mCategoryReaderInstructionList, object->mAttribute_mCategoryReaderReturnedVariableName, object->mAttribute_mCategoryReaderReturnedTypeName, object->mAttribute_mEndOfReaderLocation, var_formalParameterListForGeneration, var_returnType, var_returnVariableCppName, var_semanticInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1998)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_categoryReaderForGeneration::constructor_new (object->mAttribute_mIsGlobal, var_selfType, object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2016)), var_implementedAsFunction, var_returnType, var_returnVariableCppName, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2021)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (2013)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (2013)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_categoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                        categoryMethod_categoryReaderAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryReaderAST_semanticAnalysis (defineCategoryMethod_categoryReaderAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingCategoryReaderAST semanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryReaderAST * object = (const cPtr_overridingCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingCategoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2036)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2038)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2038)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2039)) COMMA_SOURCE_FILE_AT_LINE (2039)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (2039)) COMMA_SOURCE_FILE_AT_LINE (2039)) ;
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2043)) ;
  GALGAS_unifiedTypeMapProxyList var_inheritedSignature = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2044)) ;
  GALGAS_unifiedTypeMapProxy var_inheritedReturnType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2045)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2047)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2047)).isValid ()) {
    PMUInt32 variant_80149 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2047)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2047)).uintValue () ;
    bool loop_80149 = true ;
    while (loop_80149) {
      loop_80149 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (2048)).operator_not (SOURCE_FILE_AT_LINE (2048)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (2048)).isValid () ;
      if (loop_80149) {
        loop_80149 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (2048)).operator_not (SOURCE_FILE_AT_LINE (2048)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (2048)).boolValue () ;
      }
      if (loop_80149 && (0 == variant_80149)) {
        loop_80149 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2047)) ;
      }
      if (loop_80149) {
        variant_80149 -- ;
        const enumGalgasBool test_2 = var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2049)).reader_hasKey (object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2049)) COMMA_SOURCE_FILE_AT_LINE (2049)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_80455_0 ; // Joker input parameter
          GALGAS_bool joker_80532_0 ; // Joker input parameter
          GALGAS_string joker_80591_0 ; // Joker input parameter
          var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2051)).method_searchKey (object->mAttribute_mOverridingCategoryReaderName, joker_80455_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_80532_0, var_inheritedReturnType, var_qualifier, joker_80591_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2051)) ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2061)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2062)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2065)) ;
      }
    }
  }
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, GALGAS_string ("object"), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2073)) COMMA_SOURCE_FILE_AT_LINE (2068)) ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_returnVariableCppName ;
  GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  {
  routine_analyzeFunctionBody (var_analysisContext, object->mAttribute_mOverridingCategoryReaderFormalInputParameterList, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2082)), GALGAS_string ("object->"), object->mAttribute_mOverridingCategoryReaderInstructionList, object->mAttribute_mOverridingCategoryReaderReturnedVariableName, object->mAttribute_mOverridingCategoryReaderReturnedTypeName, object->mAttribute_mEndOfReaderLocation, var_formalParameterListForGeneration, var_returnType, var_returnVariableCppName, var_semanticInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (2079)) ;
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    {
    routine_checkReaderSignatures (var_formalParameterListForGeneration, var_returnType, object->mAttribute_mOverridingCategoryReaderName.reader_location (SOURCE_FILE_AT_LINE (2098)), var_inheritedSignature, var_inheritedReturnType, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (2095)) ;
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_overrideCategoryReaderForGeneration::constructor_new (object->mAttribute_mIsGlobal, object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (2107)), var_baseTypeName, object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2109)), var_returnType, var_returnVariableCppName, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2113)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (2105)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (2105)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                        categoryMethod_overridingCategoryReaderAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryReaderAST_semanticAnalysis (defineCategoryMethod_overridingCategoryReaderAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@overridingAbstractCategoryReaderAST semanticAnalysis'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                                 GALGAS_semanticDeclarationSortedListForGeneration & /* ioArgument_ioSemanticDeclarationListForGeneration */,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryReaderAST * object = (const cPtr_overridingAbstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, const cPtr_overridingAbstractCategoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2128)) ;
  GALGAS_unifiedTypeMapProxy var_returnType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAbstractCategoryReaderReturnedTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2130)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2132)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2132)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2133)) COMMA_SOURCE_FILE_AT_LINE (2133)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (2133)) COMMA_SOURCE_FILE_AT_LINE (2133)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (2134)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2135)) COMMA_SOURCE_FILE_AT_LINE (2135)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (2135)) COMMA_SOURCE_FILE_AT_LINE (2135)) ;
    }
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2139)) ;
  GALGAS_unifiedTypeMapProxyList var_inheritedSignature = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2140)) ;
  GALGAS_unifiedTypeMapProxy var_inheritedReturnType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2141)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2143)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2143)).isValid ()) {
    PMUInt32 variant_83694 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2143)).add_operation (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2143)).uintValue () ;
    bool loop_83694 = true ;
    while (loop_83694) {
      loop_83694 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (2144)).operator_not (SOURCE_FILE_AT_LINE (2144)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (2144)).isValid () ;
      if (loop_83694) {
        loop_83694 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (2144)).operator_not (SOURCE_FILE_AT_LINE (2144)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (2144)).boolValue () ;
      }
      if (loop_83694 && (0 == variant_83694)) {
        loop_83694 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2143)) ;
      }
      if (loop_83694) {
        variant_83694 -- ;
        const enumGalgasBool test_4 = var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2145)).reader_hasKey (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2145)) COMMA_SOURCE_FILE_AT_LINE (2145)).boolEnum () ;
        if (kBoolTrue == test_4) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_83996_0 ; // Joker input parameter
          GALGAS_bool joker_84073_0 ; // Joker input parameter
          GALGAS_string joker_84132_0 ; // Joker input parameter
          var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2147)).method_searchKey (object->mAttribute_mAbstractCategoryReaderName, joker_83996_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_84073_0, var_inheritedReturnType, var_qualifier, joker_84132_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2147)) ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2157)))).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2158)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2161)) ;
      }
    }
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2165)) ;
    cEnumerator_formalInputParameterListAST enumerator_84529 (object->mAttribute_mAbstractCategoryReaderFormalInputParameterList, kEnumeration_up) ;
    while (enumerator_84529.hasCurrentObject ()) {
      var_formalParameterListForGeneration.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_84529.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2168)), enumerator_84529.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (2169)), enumerator_84529.current_mFormalArgumentName (HERE), enumerator_84529.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (2167)) ;
      enumerator_84529.gotoNextObject () ;
    }
    {
    routine_checkReaderSignatures (var_formalParameterListForGeneration, var_returnType, object->mAttribute_mAbstractCategoryReaderName.reader_location (SOURCE_FILE_AT_LINE (2177)), var_inheritedSignature, var_inheritedReturnType, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (2174)) ;
    }
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                        categoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryReaderAST_semanticAnalysis (defineCategoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element::GALGAS_attributeIndexMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAttributeTypeIndex () {
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element::~ GALGAS_attributeIndexMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element::GALGAS_attributeIndexMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                          const GALGAS_unifiedTypeMapProxy & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mAttributeTypeIndex (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element GALGAS_attributeIndexMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_attributeIndexMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                              GALGAS_unifiedTypeMapProxy::constructor_null (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element GALGAS_attributeIndexMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                          const GALGAS_unifiedTypeMapProxy & inOperand1 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_attributeIndexMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_attributeIndexMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_attributeIndexMap_2E_element::objectCompare (const GALGAS_attributeIndexMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeTypeIndex.objectCompare (inOperand.mAttribute_mAttributeTypeIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_attributeIndexMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeTypeIndex.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeIndexMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAttributeTypeIndex.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeIndexMap_2E_element::description (C_String & ioString,
                                                       const PMSInt32 inIndentation) const {
  ioString << "<struct @attributeIndexMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeTypeIndex.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_attributeIndexMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_attributeIndexMap_2E_element::reader_mAttributeTypeIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeTypeIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                      @attributeIndexMap.element type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeIndexMap_2E_element ("attributeIndexMap.element",
                                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeIndexMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeIndexMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeIndexMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeIndexMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element GALGAS_attributeIndexMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_attributeIndexMap_2E_element result ;
  const GALGAS_attributeIndexMap_2E_element * p = (const GALGAS_attributeIndexMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeIndexMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeIndexMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element::GALGAS_constantIndexMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mIndex () {
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element::~ GALGAS_constantIndexMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element::GALGAS_constantIndexMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                        const GALGAS_uint & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mIndex (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element GALGAS_constantIndexMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_constantIndexMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                             GALGAS_uint::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element GALGAS_constantIndexMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_uint & inOperand1 
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_constantIndexMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_constantIndexMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_constantIndexMap_2E_element::objectCompare (const GALGAS_constantIndexMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIndex.objectCompare (inOperand.mAttribute_mIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_constantIndexMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_constantIndexMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mIndex.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_constantIndexMap_2E_element::description (C_String & ioString,
                                                      const PMSInt32 inIndentation) const {
  ioString << "<struct @constantIndexMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIndex.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_constantIndexMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_uint GALGAS_constantIndexMap_2E_element::reader_mIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIndex ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                      @constantIndexMap.element type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constantIndexMap_2E_element ("constantIndexMap.element",
                                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constantIndexMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constantIndexMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constantIndexMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constantIndexMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element GALGAS_constantIndexMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_constantIndexMap_2E_element result ;
  const GALGAS_constantIndexMap_2E_element * p = (const GALGAS_constantIndexMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constantIndexMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constantIndexMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element::GALGAS_insertMethodMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element::~ GALGAS_insertMethodMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element::GALGAS_insertMethodMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element GALGAS_insertMethodMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_insertMethodMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element GALGAS_insertMethodMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_insertMethodMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_insertMethodMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_insertMethodMap_2E_element::objectCompare (const GALGAS_insertMethodMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_insertMethodMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_insertMethodMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_insertMethodMap_2E_element::description (C_String & ioString,
                                                     const PMSInt32 inIndentation) const {
  ioString << "<struct @insertMethodMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_insertMethodMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @insertMethodMap.element type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_insertMethodMap_2E_element ("insertMethodMap.element",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_insertMethodMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_insertMethodMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_insertMethodMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_insertMethodMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element GALGAS_insertMethodMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_insertMethodMap_2E_element result ;
  const GALGAS_insertMethodMap_2E_element * p = (const GALGAS_insertMethodMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_insertMethodMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("insertMethodMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element::GALGAS_searchMethodMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element::~ GALGAS_searchMethodMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element::GALGAS_searchMethodMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element GALGAS_searchMethodMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_searchMethodMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element GALGAS_searchMethodMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_searchMethodMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_searchMethodMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_searchMethodMap_2E_element::objectCompare (const GALGAS_searchMethodMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_searchMethodMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_searchMethodMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_searchMethodMap_2E_element::description (C_String & ioString,
                                                     const PMSInt32 inIndentation) const {
  ioString << "<struct @searchMethodMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_searchMethodMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @searchMethodMap.element type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_searchMethodMap_2E_element ("searchMethodMap.element",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_searchMethodMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_searchMethodMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_searchMethodMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_searchMethodMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element GALGAS_searchMethodMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_searchMethodMap_2E_element result ;
  const GALGAS_searchMethodMap_2E_element * p = (const GALGAS_searchMethodMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_searchMethodMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("searchMethodMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element::GALGAS_declaredMethodMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element::~ GALGAS_declaredMethodMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element::GALGAS_declaredMethodMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element GALGAS_declaredMethodMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_declaredMethodMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element GALGAS_declaredMethodMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_declaredMethodMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_declaredMethodMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_declaredMethodMap_2E_element::objectCompare (const GALGAS_declaredMethodMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_declaredMethodMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_declaredMethodMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_declaredMethodMap_2E_element::description (C_String & ioString,
                                                       const PMSInt32 inIndentation) const {
  ioString << "<struct @declaredMethodMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_declaredMethodMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                      @declaredMethodMap.element type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredMethodMap_2E_element ("declaredMethodMap.element",
                                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredMethodMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredMethodMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredMethodMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredMethodMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element GALGAS_declaredMethodMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_declaredMethodMap_2E_element result ;
  const GALGAS_declaredMethodMap_2E_element * p = (const GALGAS_declaredMethodMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredMethodMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredMethodMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


