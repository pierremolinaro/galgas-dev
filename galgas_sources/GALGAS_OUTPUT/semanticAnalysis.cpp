//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            File 'semanticAnalysis.cpp'                                              *
//                                             Generated by version 3.0.0                                              *
//                                         september 25th, 2014, at 19h17'27"                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"
#include "semanticAnalysis.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Routine 'checkMethodSignatures'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_checkMethodSignatures (const GALGAS_formalParameterListForGeneration constinArgument_inTestedSignature,
                                    const GALGAS_location constinArgument_inErrorLocation,
                                    const GALGAS_formalParameterSignature constinArgument_inReferenceSignature,
                                    const GALGAS_location constinArgument_inReferenceLocation,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inTestedSignature.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 37)).objectCompare (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 37)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("this method declares ").operator_concat (constinArgument_inTestedSignature.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 38)).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 38))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 38)).operator_concat (GALGAS_string (" formal parameter(s), but overriden method declares ")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 38)).operator_concat (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 39)).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 39))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 39))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 38)) ;
    inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden method is declared here")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 41)) ;
  }else if (kBoolFalse == test_0) {
    cEnumerator_formalParameterSignature enumerator_2533 (constinArgument_inReferenceSignature, kEnumeration_up) ;
    cEnumerator_formalParameterListForGeneration enumerator_2559 (constinArgument_inTestedSignature, kEnumeration_up) ;
    while (enumerator_2533.hasCurrentObject () && enumerator_2559.hasCurrentObject ()) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_2533.current_mFormalArgumentPassingMode (HERE).objectCompare (enumerator_2559.current_mFormalArgumentPassingMode (HERE))).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_2559.current_mFormalArgumentName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_2559.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 45))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 45)).operator_concat (GALGAS_string ("' formal parameter is declared as ")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 45)).operator_concat (categoryReader_formalArgumentMessage (enumerator_2559.current_mFormalArgumentPassingMode (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 46))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 45)).operator_concat (GALGAS_string (", but overriden method declares it as ")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 46)).operator_concat (categoryReader_formalArgumentMessage (enumerator_2533.current_mFormalArgumentPassingMode (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 47))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 46))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 45)) ;
        inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden method is declared here")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 48)) ;
      }
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_2559.current_mFormalSelector (HERE).mAttribute_string.objectCompare (enumerator_2533.current_mFormalSelector (HERE).mAttribute_string)).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_string temp_4 ;
        const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, enumerator_2533.current_mFormalSelector (HERE).mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
        if (kBoolTrue == test_5) {
          temp_4 = GALGAS_string (":") ;
        }else if (kBoolFalse == test_5) {
          temp_4 = GALGAS_string::makeEmptyString () ;
        }
        GALGAS_location location_6 (enumerator_2559.current_mFormalSelector (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_6, GALGAS_string ("the selector should be '").operator_concat (categoryReader_string (enumerator_2533.current_mFormalArgumentPassingMode (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 51))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 51)).operator_concat (enumerator_2533.current_mFormalSelector (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 51))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 51)).operator_concat (temp_4.add_operation (GALGAS_string ("'"), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 51))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 51))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 51)) ;
      }
      const enumGalgasBool test_7 = GALGAS_bool (kIsNotEqual, enumerator_2559.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 53)).objectCompare (enumerator_2533.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 53)))).boolEnum () ;
      if (kBoolTrue == test_7) {
        GALGAS_location location_8 (enumerator_2559.current_mFormalArgumentName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_8, GALGAS_string ("the '").operator_concat (enumerator_2559.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 54))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 54)).operator_concat (GALGAS_string ("' formal parameter has the '@")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 54)).operator_concat (enumerator_2559.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 55))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 54)).operator_concat (GALGAS_string ("' type, but overriden method declares with the '@")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 55)).operator_concat (enumerator_2533.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 56))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 55)).operator_concat (GALGAS_string ("' type")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 56))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 54)) ;
        inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden method is declared here")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 57)) ;
      }
      enumerator_2533.gotoNextObject () ;
      enumerator_2559.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Routine 'checkReaderSignatures'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_checkReaderSignatures (const GALGAS_formalInputParameterListForGeneration constinArgument_inTestedSignature,
                                    const GALGAS_unifiedTypeMapProxy constinArgument_inReturnType,
                                    const GALGAS_location constinArgument_inErrorLocation,
                                    const GALGAS_functionSignature constinArgument_inReferenceSignature,
                                    const GALGAS_unifiedTypeMapProxy constinArgument_inInheritedReturnType,
                                    const GALGAS_location constinArgument_inReferenceLocation,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inReturnType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 77)).objectCompare (constinArgument_inInheritedReturnType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 77)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the return type is '@").operator_concat (constinArgument_inReturnType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 79))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 78)).operator_concat (GALGAS_string ("', but overriden getter names '@")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 79)).operator_concat (constinArgument_inInheritedReturnType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 80))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 79)).operator_concat (GALGAS_string ("' as return type")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 80))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 78)) ;
    inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden getter is declared here")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 81)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, constinArgument_inTestedSignature.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 83)).objectCompare (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 83)))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("this getter declares ").operator_concat (constinArgument_inTestedSignature.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 84)).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 84))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 84)).operator_concat (GALGAS_string (" formal parameter(s), but overriden getter declares ")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 84)).operator_concat (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 85)).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 85))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 85))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 84)) ;
    inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden getter is declared here")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 87)) ;
  }else if (kBoolFalse == test_1) {
    cEnumerator_functionSignature enumerator_5086 (constinArgument_inReferenceSignature, kEnumeration_up) ;
    cEnumerator_formalInputParameterListForGeneration enumerator_5112 (constinArgument_inTestedSignature, kEnumeration_up) ;
    while (enumerator_5086.hasCurrentObject () && enumerator_5112.hasCurrentObject ()) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_5112.current_mFormalSelector (HERE).mAttribute_string.objectCompare (enumerator_5086.current_mFormalSelector (HERE).mAttribute_string)).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_string temp_3 ;
        const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, enumerator_5086.current_mFormalSelector (HERE).mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
        if (kBoolTrue == test_4) {
          temp_3 = GALGAS_string (":") ;
        }else if (kBoolFalse == test_4) {
          temp_3 = GALGAS_string::makeEmptyString () ;
        }
        GALGAS_location location_5 (enumerator_5112.current_mFormalSelector (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_5, GALGAS_string ("the selector should be '\?").operator_concat (enumerator_5086.current_mFormalSelector (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 91))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 91)).operator_concat (temp_3.add_operation (GALGAS_string ("'"), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 91))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 91))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 91)) ;
      }
      const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, enumerator_5112.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 93)).objectCompare (enumerator_5086.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 93)))).boolEnum () ;
      if (kBoolTrue == test_6) {
        GALGAS_location location_7 (enumerator_5112.current_mFormalArgumentName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_7, GALGAS_string ("the '").operator_concat (enumerator_5112.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 94))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 94)).operator_concat (GALGAS_string ("' formal parameter has the '@")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 94)).operator_concat (enumerator_5112.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 95))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 94)).operator_concat (GALGAS_string ("' type, but overriden getter declares with the '@")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 95)).operator_concat (enumerator_5086.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 96))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 95)).operator_concat (GALGAS_string ("' type")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 96))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 94)) ;
        inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden getter is declared here")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 97)) ;
      }
      enumerator_5086.gotoNextObject () ;
      enumerator_5112.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*

cMapElement_attributeIndexMap::cMapElement_attributeIndexMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_unifiedTypeMapProxy & in_mAttributeTypeIndex
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAttributeTypeIndex (in_mAttributeTypeIndex) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_attributeIndexMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeTypeIndex.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_attributeIndexMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_attributeIndexMap (mAttribute_lkey, mAttribute_mAttributeTypeIndex COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_attributeIndexMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeTypeIndex" ":" ;
  mAttribute_mAttributeTypeIndex.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_attributeIndexMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_attributeIndexMap * operand = (cMapElement_attributeIndexMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeTypeIndex.objectCompare (operand->mAttribute_mAttributeTypeIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap::GALGAS_attributeIndexMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap::GALGAS_attributeIndexMap (const GALGAS_attributeIndexMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap & GALGAS_attributeIndexMap::operator = (const GALGAS_attributeIndexMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_attributeIndexMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::constructor_mapWithMapToOverride (const GALGAS_attributeIndexMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_attributeIndexMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_attributeIndexMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    const GALGAS_unifiedTypeMapProxy & inArgument0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_attributeIndexMap * p = NULL ;
  macroMyNew (p, cMapElement_attributeIndexMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@attributeIndexMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMapProxy inArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_attributeIndexMap * p = NULL ;
  macroMyNew (p, cMapElement_attributeIndexMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' attribute is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_attributeIndexMap_searchKey = "the '%K' attribute is not declared" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_unifiedTypeMapProxy & outArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_attributeIndexMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
    outArgument0 = p->mAttribute_mAttributeTypeIndex ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_attributeIndexMap::reader_mAttributeTypeIndexForKey (const GALGAS_string & inKey,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
    result = p->mAttribute_mAttributeTypeIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::modifier_setMAttributeTypeIndexForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_attributeIndexMap * p = (cMapElement_attributeIndexMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
    p->mAttribute_mAttributeTypeIndex = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_attributeIndexMap * GALGAS_attributeIndexMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_attributeIndexMap * result = (cMapElement_attributeIndexMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_attributeIndexMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_attributeIndexMap::cEnumerator_attributeIndexMap (const GALGAS_attributeIndexMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2D_element cEnumerator_attributeIndexMap::current (LOCATION_ARGS) const {
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
  return GALGAS_attributeIndexMap_2D_element (p->mAttribute_lkey, p->mAttribute_mAttributeTypeIndex) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_attributeIndexMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_attributeIndexMap::current_mAttributeTypeIndex (LOCATION_ARGS) const {
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
  return p->mAttribute_mAttributeTypeIndex ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @attributeIndexMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeIndexMap ("attributeIndexMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeIndexMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeIndexMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeIndexMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeIndexMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_attributeIndexMap result ;
  const GALGAS_attributeIndexMap * p = (const GALGAS_attributeIndexMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeIndexMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeIndexMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Once function 'forbiddenKeysForStruct'                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_forbiddenKeysForStruct (C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 240)) ;
  result_outResult.addAssign_operation (GALGAS_string ("description")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 241)) ;
  result_outResult.addAssign_operation (GALGAS_string ("object")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 242)) ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------------------------------------------------*
//  Function implementation                                                                                            *
//---------------------------------------------------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_forbiddenKeysForStruct = false ;
static GALGAS_stringset gOnceFunctionResult_forbiddenKeysForStruct ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset function_forbiddenKeysForStruct (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_forbiddenKeysForStruct) {
    gOnceFunctionResult_forbiddenKeysForStruct = onceFunction_forbiddenKeysForStruct (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_forbiddenKeysForStruct = true ;
  }
  return gOnceFunctionResult_forbiddenKeysForStruct ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void releaseOnceFunctionResult_forbiddenKeysForStruct (void) {
  gOnceFunctionResult_forbiddenKeysForStruct.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_forbiddenKeysForStruct (NULL,
                                                                    releaseOnceFunctionResult_forbiddenKeysForStruct) ;

//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_forbiddenKeysForStruct [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_forbiddenKeysForStruct (C_Compiler * inCompiler,
                                                                       const cObjectArray & /* inEffectiveParameterArray */,
                                                                       const GALGAS_location & /* inErrorLocation */
                                                                       COMMA_LOCATION_ARGS) {
  return function_forbiddenKeysForStruct (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_forbiddenKeysForStruct ("forbiddenKeysForStruct",
                                                                        functionWithGenericHeader_forbiddenKeysForStruct,
                                                                        & kTypeDescriptor_GALGAS_stringset,
                                                                        0,
                                                                        functionArgs_forbiddenKeysForStruct) ;

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_insertMethodMap::cMapElement_insertMethodMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_insertMethodMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_insertMethodMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_insertMethodMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_insertMethodMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_insertMethodMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_insertMethodMap * operand = (cMapElement_insertMethodMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap::GALGAS_insertMethodMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap::GALGAS_insertMethodMap (const GALGAS_insertMethodMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap & GALGAS_insertMethodMap::operator = (const GALGAS_insertMethodMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_insertMethodMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::constructor_mapWithMapToOverride (const GALGAS_insertMethodMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_insertMethodMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_insertMethodMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_insertMethodMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_insertMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_insertMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@insertMethodMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_insertMethodMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_insertMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_insertMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' insert modifier is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_insertMethodMap * GALGAS_insertMethodMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_insertMethodMap * result = (cMapElement_insertMethodMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_insertMethodMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_insertMethodMap::cEnumerator_insertMethodMap (const GALGAS_insertMethodMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap_2D_element cEnumerator_insertMethodMap::current (LOCATION_ARGS) const {
  const cMapElement_insertMethodMap * p = (const cMapElement_insertMethodMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_insertMethodMap) ;
  return GALGAS_insertMethodMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_insertMethodMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @insertMethodMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_insertMethodMap ("insertMethodMap",
                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_insertMethodMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_insertMethodMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_insertMethodMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_insertMethodMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_insertMethodMap result ;
  const GALGAS_insertMethodMap * p = (const GALGAS_insertMethodMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_insertMethodMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("insertMethodMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_searchMethodMap::cMapElement_searchMethodMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_searchMethodMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_searchMethodMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_searchMethodMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_searchMethodMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_searchMethodMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_searchMethodMap * operand = (cMapElement_searchMethodMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap::GALGAS_searchMethodMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap::GALGAS_searchMethodMap (const GALGAS_searchMethodMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap & GALGAS_searchMethodMap::operator = (const GALGAS_searchMethodMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_searchMethodMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::constructor_mapWithMapToOverride (const GALGAS_searchMethodMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_searchMethodMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_searchMethodMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_searchMethodMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_searchMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_searchMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@searchMethodMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_searchMethodMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_searchMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_searchMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' search method is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_searchMethodMap * GALGAS_searchMethodMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_searchMethodMap * result = (cMapElement_searchMethodMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_searchMethodMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_searchMethodMap::cEnumerator_searchMethodMap (const GALGAS_searchMethodMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap_2D_element cEnumerator_searchMethodMap::current (LOCATION_ARGS) const {
  const cMapElement_searchMethodMap * p = (const cMapElement_searchMethodMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_searchMethodMap) ;
  return GALGAS_searchMethodMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_searchMethodMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @searchMethodMap type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_searchMethodMap ("searchMethodMap",
                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_searchMethodMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_searchMethodMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_searchMethodMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_searchMethodMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_searchMethodMap result ;
  const GALGAS_searchMethodMap * p = (const GALGAS_searchMethodMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_searchMethodMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("searchMethodMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Routine 'check_K_escapeCharacters'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_check_5F_K_5F_escapeCharacters (GALGAS_lstring inArgument_inString,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_stringlist enumerator_19232 (inArgument_inString.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 461)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 461)), kEnumeration_up) ;
  while (enumerator_19232.hasCurrentObject ()) {
    GALGAS_stringlist var_explodedArray = enumerator_19232.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 462)) ;
    {
    GALGAS_string joker_19344_0 ; // Joker input parameter
    var_explodedArray.modifier_popFirst (joker_19344_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 463)) ;
    }
    cEnumerator_stringlist enumerator_19374 (var_explodedArray, kEnumeration_up) ;
    while (enumerator_19374.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, enumerator_19374.current_mValue (HERE).reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 465)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_char var_c = enumerator_19374.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 466)) ;
        const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (inArgument_inString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("only '%K' and '%%' escape sequences are allowed in this error message")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 468)) ;
        }
      }
      enumerator_19374.gotoNextObject () ;
    }
    enumerator_19232.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'check_K_L_escapeCharacters'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_check_5F_K_5F_L_5F_escapeCharacters (GALGAS_lstring inArgument_inString,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_stringlist enumerator_19921 (inArgument_inString.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 481)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 481)), kEnumeration_up) ;
  while (enumerator_19921.hasCurrentObject ()) {
    GALGAS_stringlist var_explodedArray = enumerator_19921.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 482)) ;
    {
    GALGAS_string joker_20033_0 ; // Joker input parameter
    var_explodedArray.modifier_popFirst (joker_20033_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 483)) ;
    }
    cEnumerator_stringlist enumerator_20063 (var_explodedArray, kEnumeration_up) ;
    while (enumerator_20063.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, enumerator_20063.current_mValue (HERE).reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 485)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_char var_c = enumerator_20063.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 486)) ;
        const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).operator_and (GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (76)))) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 487)).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (inArgument_inString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("only '%K', '%L' and '%%' escape sequences are allowed in this error message")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 488)) ;
        }
      }
      enumerator_20063.gotoNextObject () ;
    }
    enumerator_19921.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         Once function 'forbiddenKeysForMap'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_forbiddenKeysForMap (C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 498)) ;
  result_outResult.addAssign_operation (GALGAS_string ("lkey")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 499)) ;
  result_outResult.addAssign_operation (GALGAS_string ("description")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 500)) ;
  result_outResult.addAssign_operation (GALGAS_string ("object")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 501)) ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------------------------------------------------*
//  Function implementation                                                                                            *
//---------------------------------------------------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_forbiddenKeysForMap = false ;
static GALGAS_stringset gOnceFunctionResult_forbiddenKeysForMap ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset function_forbiddenKeysForMap (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_forbiddenKeysForMap) {
    gOnceFunctionResult_forbiddenKeysForMap = onceFunction_forbiddenKeysForMap (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_forbiddenKeysForMap = true ;
  }
  return gOnceFunctionResult_forbiddenKeysForMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void releaseOnceFunctionResult_forbiddenKeysForMap (void) {
  gOnceFunctionResult_forbiddenKeysForMap.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_forbiddenKeysForMap (NULL,
                                                                 releaseOnceFunctionResult_forbiddenKeysForMap) ;

//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_forbiddenKeysForMap [1] = {
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_forbiddenKeysForMap (C_Compiler * inCompiler,
                                                                    const cObjectArray & /* inEffectiveParameterArray */,
                                                                    const GALGAS_location & /* inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  return function_forbiddenKeysForMap (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_forbiddenKeysForMap ("forbiddenKeysForMap",
                                                                     functionWithGenericHeader_forbiddenKeysForMap,
                                                                     & kTypeDescriptor_GALGAS_stringset,
                                                                     0,
                                                                     functionArgs_forbiddenKeysForMap) ;

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_declaredMethodMap::cMapElement_declaredMethodMap (const GALGAS_lstring & inKey
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_declaredMethodMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_declaredMethodMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_declaredMethodMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_declaredMethodMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_declaredMethodMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_declaredMethodMap * operand = (cMapElement_declaredMethodMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap::GALGAS_declaredMethodMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap::GALGAS_declaredMethodMap (const GALGAS_declaredMethodMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap & GALGAS_declaredMethodMap::operator = (const GALGAS_declaredMethodMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_declaredMethodMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::constructor_mapWithMapToOverride (const GALGAS_declaredMethodMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_declaredMethodMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_declaredMethodMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredMethodMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_declaredMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_declaredMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@declaredMethodMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredMethodMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_declaredMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_declaredMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' method is already declared in %L for this class" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_declaredMethodMap * GALGAS_declaredMethodMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                             const GALGAS_string & inKey
                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_declaredMethodMap * result = (cMapElement_declaredMethodMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_declaredMethodMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_declaredMethodMap::cEnumerator_declaredMethodMap (const GALGAS_declaredMethodMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2D_element cEnumerator_declaredMethodMap::current (LOCATION_ARGS) const {
  const cMapElement_declaredMethodMap * p = (const cMapElement_declaredMethodMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_declaredMethodMap) ;
  return GALGAS_declaredMethodMap_2D_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_declaredMethodMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @declaredMethodMap type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredMethodMap ("declaredMethodMap",
                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredMethodMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredMethodMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredMethodMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredMethodMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_declaredMethodMap result ;
  const GALGAS_declaredMethodMap * p = (const GALGAS_declaredMethodMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredMethodMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredMethodMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     Routine 'buildLocalVariableMapAndSignature'                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_buildLocalVariableMapAndSignature (const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                const GALGAS_formalParameterListAST constinArgument_inRoutineSignatureAST,
                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                GALGAS_formalParameterListForGeneration & outArgument_outRoutineSignature,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outRoutineSignature.drop () ; // Release 'out' argument
  outArgument_outRoutineSignature = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 989)) ;
  cEnumerator_formalParameterListAST enumerator_40265 (constinArgument_inRoutineSignatureAST, kEnumeration_up) ;
  while (enumerator_40265.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_40265.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 991)) ;
    GALGAS_string var_formalArgumentCppName ;
    if (enumerator_40265.current_mFormalArgumentPassingMode (HERE).isValid ()) {
      switch (enumerator_40265.current_mFormalArgumentPassingMode (HERE).enumValue ()) {
      case GALGAS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentIn: {
        var_formalArgumentCppName = GALGAS_string ("inArgument_").operator_concat (enumerator_40265.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 995)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 995))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 995)) ;
        const enumGalgasBool test_0 = enumerator_40265.current_mIsUnused (HERE).boolEnum () ;
        if (kBoolTrue == test_0) {
          {
          ioArgument_ioVariableMap.modifier_insertInputFormalArgumentDeclaredAsUnused (enumerator_40265.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 997)) ;
          }
        }else if (kBoolFalse == test_0) {
          {
          ioArgument_ioVariableMap.modifier_insertInputFormalArgument (enumerator_40265.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 999)) ;
          }
        }
        } break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentOut: {
        var_formalArgumentCppName = GALGAS_string ("outArgument_").operator_concat (enumerator_40265.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1002)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1002))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1002)) ;
        {
        ioArgument_ioVariableMap.modifier_insertOutputFormalArgument (enumerator_40265.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1003)) ;
        }
        } break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentInOut: {
        var_formalArgumentCppName = GALGAS_string ("ioArgument_").operator_concat (enumerator_40265.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1005)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1005))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1005)) ;
        const enumGalgasBool test_1 = enumerator_40265.current_mIsUnused (HERE).boolEnum () ;
        if (kBoolTrue == test_1) {
          {
          ioArgument_ioVariableMap.modifier_insertInputOutputFormalArgumentDeclaredAsUnused (enumerator_40265.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1007)) ;
          }
        }else if (kBoolFalse == test_1) {
          {
          ioArgument_ioVariableMap.modifier_insertInputOutputFormalArgument (enumerator_40265.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1009)) ;
          }
        }
        } break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentConstantIn: {
        var_formalArgumentCppName = GALGAS_string ("constinArgument_").operator_concat (enumerator_40265.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1012)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1012))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1012)) ;
        const enumGalgasBool test_2 = enumerator_40265.current_mIsUnused (HERE).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          ioArgument_ioVariableMap.modifier_insertConstantInputFormalArgumentDeclaredAsUnused (enumerator_40265.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1014)) ;
          }
        }else if (kBoolFalse == test_2) {
          {
          ioArgument_ioVariableMap.modifier_insertConstantInputFormalArgument (enumerator_40265.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1016)) ;
          }
        }
        } break ;
      }
    }
    outArgument_outRoutineSignature.addAssign_operation (enumerator_40265.current_mFormalSelector (HERE), enumerator_40265.current_mFormalArgumentPassingMode (HERE), var_type, enumerator_40265.current_mFormalArgumentName (HERE), var_formalArgumentCppName  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1019)) ;
    enumerator_40265.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'analyzeRoutineBody'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_analyzeRoutineBody (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                 const GALGAS_formalParameterListAST constinArgument_inRoutineSignatureAST,
                                 const GALGAS_localConstantList constinArgument_inLocalConstantList,
                                 const GALGAS_typedAttributeList constinArgument_inNonMutableTypedAttributeList,
                                 const GALGAS_typedAttributeList constinArgument_inMutableTypedAttributeList,
                                 const GALGAS_string constinArgument_inAttributeVariableNamePrefix,
                                 const GALGAS_semanticInstructionListAST constinArgument_inInstructionList,
                                 const GALGAS_location constinArgument_inEndOfMethodLocation,
                                 GALGAS_semanticInstructionListForGeneration & outArgument_outSemanticInstructionListForGeneration,
                                 GALGAS_formalParameterListForGeneration & outArgument_outRoutineSignature,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticInstructionListForGeneration.drop () ; // Release 'out' argument
  outArgument_outRoutineSignature.drop () ; // Release 'out' argument
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 1037)) ;
  cEnumerator_localConstantList enumerator_42973 (constinArgument_inLocalConstantList, kEnumeration_up) ;
  while (enumerator_42973.hasCurrentObject ()) {
    const enumGalgasBool test_0 = enumerator_42973.current_mNoWarningIfUnused (HERE).boolEnum () ;
    if (kBoolTrue == test_0) {
      {
      var_variableMap.modifier_insertUsedLocalConstant (enumerator_42973.current_mName (HERE), enumerator_42973.current_mType (HERE), enumerator_42973.current_mCppName (HERE), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1041)) ;
      }
    }else if (kBoolFalse == test_0) {
      {
      var_variableMap.modifier_insertLocalConstant (enumerator_42973.current_mName (HERE), enumerator_42973.current_mType (HERE), enumerator_42973.current_mCppName (HERE), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1043)) ;
      }
    }
    enumerator_42973.gotoNextObject () ;
  }
  cEnumerator_typedAttributeList enumerator_43347 (constinArgument_inNonMutableTypedAttributeList, kEnumeration_up) ;
  while (enumerator_43347.hasCurrentObject ()) {
    {
    var_variableMap.modifier_insertNonMutableAttribute (enumerator_43347.current_mAttributeName (HERE), enumerator_43347.current_mAttributeTypeProxy (HERE), constinArgument_inAttributeVariableNamePrefix.operator_concat (GALGAS_string ("mAttribute_")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1051)).operator_concat (enumerator_43347.current_mAttributeName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1051)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1051))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1051)), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1048)) ;
    }
    enumerator_43347.gotoNextObject () ;
  }
  cEnumerator_typedAttributeList enumerator_43695 (constinArgument_inMutableTypedAttributeList, kEnumeration_up) ;
  while (enumerator_43695.hasCurrentObject ()) {
    {
    var_variableMap.modifier_insertMutableAttribute (enumerator_43695.current_mAttributeName (HERE), enumerator_43695.current_mAttributeTypeProxy (HERE), constinArgument_inAttributeVariableNamePrefix.operator_concat (GALGAS_string ("mAttribute_")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1060)).operator_concat (enumerator_43695.current_mAttributeName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1060)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1060))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1060)), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1057)) ;
    }
    enumerator_43695.gotoNextObject () ;
  }
  {
  routine_buildLocalVariableMapAndSignature (constinArgument_inAnalysisContext.mAttribute_mSemanticContext, constinArgument_inRoutineSignatureAST, var_variableMap, outArgument_outRoutineSignature, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1065)) ;
  }
  outArgument_outSemanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1072)) ;
  cEnumerator_semanticInstructionListAST enumerator_44298 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_44298.hasCurrentObject ()) {
    callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) enumerator_44298.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, outArgument_outSemanticInstructionListForGeneration, var_variableMap, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1074)) ;
    enumerator_44298.gotoNextObject () ;
  }
  var_variableMap.method_checkAutomatonStates (constinArgument_inEndOfMethodLocation, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1081)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            Routine 'analyzeFunctionBody'                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_analyzeFunctionBody (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                  const GALGAS_formalInputParameterListAST constinArgument_inFunctionSignature,
                                  const GALGAS_typedAttributeList constinArgument_inTypedAttributeList,
                                  const GALGAS_string constinArgument_inAttributeVariableNamePrefix,
                                  const GALGAS_semanticInstructionListAST constinArgument_inInstructionList,
                                  const GALGAS_lstring constinArgument_inReturnVariableName,
                                  const GALGAS_lstring constinArgument_inResultTypeName,
                                  const GALGAS_location constinArgument_inEndOfFunctionLocation,
                                  GALGAS_formalInputParameterListForGeneration & outArgument_outSignatureForGeneration,
                                  GALGAS_unifiedTypeMapProxy & outArgument_outReturnedType,
                                  GALGAS_string & outArgument_outResultVariableCppName,
                                  GALGAS_semanticInstructionListForGeneration & outArgument_outSemanticInstructionListForGeneration,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSignatureForGeneration.drop () ; // Release 'out' argument
  outArgument_outReturnedType.drop () ; // Release 'out' argument
  outArgument_outResultVariableCppName.drop () ; // Release 'out' argument
  outArgument_outSemanticInstructionListForGeneration.drop () ; // Release 'out' argument
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 1301)) ;
  cEnumerator_typedAttributeList enumerator_52133 (constinArgument_inTypedAttributeList, kEnumeration_up) ;
  while (enumerator_52133.hasCurrentObject ()) {
    {
    var_variableMap.modifier_insertNonMutableAttribute (enumerator_52133.current_mAttributeName (HERE), enumerator_52133.current_mAttributeTypeProxy (HERE), constinArgument_inAttributeVariableNamePrefix.operator_concat (GALGAS_string ("mAttribute_")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1307)).operator_concat (enumerator_52133.current_mAttributeName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1307)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1307))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1307)), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1304)) ;
    }
    enumerator_52133.gotoNextObject () ;
  }
  outArgument_outSignatureForGeneration = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1312)) ;
  cEnumerator_formalInputParameterListAST enumerator_52547 (constinArgument_inFunctionSignature, kEnumeration_up) ;
  while (enumerator_52547.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_parameterType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_52547.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1314)) ;
    const enumGalgasBool test_0 = enumerator_52547.current_mIsConstant (HERE).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_cppName = GALGAS_string ("constinArgument_").operator_concat (enumerator_52547.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1316)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1316))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1316)) ;
      outArgument_outSignatureForGeneration.addAssign_operation (enumerator_52547.current_mFormalSelector (HERE), var_parameterType, var_cppName, enumerator_52547.current_mFormalArgumentName (HERE), enumerator_52547.current_mIsConstant (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1317)) ;
      const enumGalgasBool test_1 = enumerator_52547.current_mIsUnused (HERE).boolEnum () ;
      if (kBoolTrue == test_1) {
        {
        var_variableMap.modifier_insertConstantInputFormalArgumentDeclaredAsUnused (enumerator_52547.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1325)) ;
        }
      }else if (kBoolFalse == test_1) {
        {
        var_variableMap.modifier_insertConstantInputFormalArgument (enumerator_52547.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1327)) ;
        }
      }
    }else if (kBoolFalse == test_0) {
      GALGAS_string var_cppName = GALGAS_string ("inArgument_").operator_concat (enumerator_52547.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1330)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1330))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1330)) ;
      outArgument_outSignatureForGeneration.addAssign_operation (enumerator_52547.current_mFormalSelector (HERE), var_parameterType, var_cppName, enumerator_52547.current_mFormalArgumentName (HERE), enumerator_52547.current_mIsConstant (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1331)) ;
      const enumGalgasBool test_2 = enumerator_52547.current_mIsUnused (HERE).boolEnum () ;
      if (kBoolTrue == test_2) {
        {
        var_variableMap.modifier_insertInputFormalArgumentDeclaredAsUnused (enumerator_52547.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1339)) ;
        }
      }else if (kBoolFalse == test_2) {
        {
        var_variableMap.modifier_insertInputFormalArgument (enumerator_52547.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1341)) ;
        }
      }
    }
    enumerator_52547.gotoNextObject () ;
  }
  outArgument_outReturnedType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, constinArgument_inResultTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1346)) ;
  outArgument_outResultVariableCppName = GALGAS_string ("result_").operator_concat (constinArgument_inReturnVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1347))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1347)) ;
  {
  var_variableMap.modifier_insertOutputFormalArgument (constinArgument_inReturnVariableName, outArgument_outReturnedType, outArgument_outResultVariableCppName, outArgument_outResultVariableCppName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1348)) ;
  }
  outArgument_outSemanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1350)) ;
  cEnumerator_semanticInstructionListAST enumerator_54383 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_54383.hasCurrentObject ()) {
    callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) enumerator_54383.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, outArgument_outSemanticInstructionListForGeneration, var_variableMap, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1352)) ;
    enumerator_54383.gotoNextObject () ;
  }
  var_variableMap.method_checkAutomatonStates (constinArgument_inEndOfFunctionLocation, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1359)) ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           Function 'buildPredefinedTypes'                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_predefinedTypes function_buildPredefinedTypes (const GALGAS_semanticContext & constinArgument_inSemanticContext,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_predefinedTypes result_outPredefinedTypes ; // Returned variable
  result_outPredefinedTypes = GALGAS_predefinedTypes::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("location"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2303)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2303)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("bool"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2304)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2304)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("char"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2305)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2305)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("string"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2306)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2306)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("uint"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2307)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2307)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("sint"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2308)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2308)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("uint64"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2309)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2309)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("sint64"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2310)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2310)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("double"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2311)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2311)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lbool"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2312)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2312)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lchar"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2313)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2313)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lstring"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2314)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2314)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("luint"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2315)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2315)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lsint"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2316)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2316)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("luint64"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2317)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2317)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lsint64"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2318)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2318)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("ldouble"), inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2319)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2319))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2302)) ;
//---
  return result_outPredefinedTypes ;
}


//---------------------------------------------------------------------------------------------------------------------*
//  Function introspection                                                                                             *
//---------------------------------------------------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_buildPredefinedTypes [2] = {
  & kTypeDescriptor_GALGAS_semanticContext,
  NULL
} ;

//---------------------------------------------------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_buildPredefinedTypes (C_Compiler * inCompiler,
                                                                     const cObjectArray & inEffectiveParameterArray,
                                                                     const GALGAS_location & /* §§ inErrorLocation */
                                                                     COMMA_LOCATION_ARGS) {
  const GALGAS_semanticContext operand0 = GALGAS_semanticContext::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                 inCompiler
                                                                                 COMMA_THERE) ;
  return function_buildPredefinedTypes (operand0,
                                        inCompiler
                                        COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_buildPredefinedTypes ("buildPredefinedTypes",
                                                                      functionWithGenericHeader_buildPredefinedTypes,
                                                                      & kTypeDescriptor_GALGAS_predefinedTypes,
                                                                      1,
                                                                      functionArgs_buildPredefinedTypes) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Routine 'performSemanticAnalysis'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_performSemanticAnalysis (const GALGAS_semanticDeclarationListAST constinArgument_inDeclarationList,
                                      const GALGAS_semanticContext constinArgument_inSemanticContext,
                                      GALGAS_semanticDeclarationSortedListForGeneration & outArgument_outDecoratedDeclarationListForGeneration,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outDecoratedDeclarationListForGeneration.drop () ; // Release 'out' argument
  cEnumerator_lstringlist enumerator_93996 (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_unsolvedProxyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 2335)), kEnumeration_up) ;
  while (enumerator_93996.hasCurrentObject ()) {
    GALGAS_location location_0 (enumerator_93996.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_0, GALGAS_string ("the '").operator_concat (enumerator_93996.current_mValue (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2336))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2336)).operator_concat (GALGAS_string ("' type is undefined")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2336))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2336)) ;
    enumerator_93996.gotoNextObject () ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_94250 (constinArgument_inDeclarationList, kEnumeration_up) ;
  while (enumerator_94250.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_94250.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2341)) ;
    enumerator_94250.gotoNextObject () ;
  }
  outArgument_outDecoratedDeclarationListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE ("semanticAnalysis.gSemantics", 2344)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("semanticAnalysis.gSemantics", 2345)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (constinArgument_inSemanticContext, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2346)) ;
    cEnumerator_semanticDeclarationListAST enumerator_94620 (var_semanticDeclarationList, kEnumeration_up) ;
    while (enumerator_94620.hasCurrentObject ()) {
      callCategoryMethod_semanticAnalysis ((const cPtr_semanticDeclarationAST *) enumerator_94620.current_mSemanticDeclaration (HERE).ptr (), constinArgument_inSemanticContext, var_predefinedTypes, outArgument_outDecoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2348)) ;
      enumerator_94620.gotoNextObject () ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Abstract category method '@semanticDeclarationAST semanticAnalysis'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_semanticAnalysis> gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_semanticAnalysis (const int32_t inClassIndex,
                                           categoryMethodSignature_semanticDeclarationAST_semanticAnalysis inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_semanticAnalysis (void) {
  gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_semanticAnalysis (NULL,
                                                                    freeCategoryMethod_semanticDeclarationAST_semanticAnalysis) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                          const GALGAS_semanticContext constin_inSemanticContext,
                                          const GALGAS_predefinedTypes constin_inPredefinedTypes,
                                          GALGAS_semanticDeclarationSortedListForGeneration & io_ioSemanticDeclarationListForGeneration,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_semanticAnalysis f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inSemanticContext, constin_inPredefinedTypes, io_ioSemanticDeclarationListForGeneration, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Overriding category method '@predefinedTypeAST semanticAnalysis'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_predefinedTypeAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_predefinedTypeAST * object = (const cPtr_predefinedTypeAST *) inObject ;
  macroValidSharedObject (object, cPtr_predefinedTypeAST) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("Predefined type ").operator_concat (object->mAttribute_mPredefinedTypeName  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 123)), GALGAS_primitiveTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mPredefinedTypeName, inCompiler->here ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 125)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 125)), object->mAttribute_mPredefinedTypeName, object->mAttribute_mKind  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 124)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 122)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_predefinedTypeAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_predefinedTypeAST.mSlotID,
                                        categoryMethod_predefinedTypeAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_predefinedTypeAST_semanticAnalysis (defineCategoryMethod_predefinedTypeAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Overriding category method '@listDeclarationAST semanticAnalysis'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_listDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 149)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 150)) ;
  cEnumerator_attributeInCollectionListAST enumerator_7785 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_7785.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_7785.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 152)) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_7966 (enumerator_7785.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_7966.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_7966.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
      if (kBoolTrue == test_0) {
        const enumGalgasBool test_1 = var_hasGetter.operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 157)).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (enumerator_7966.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("duplicate feature")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 158)) ;
        }
        var_hasGetter = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_7966.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("setter"))).boolEnum () ;
        if (kBoolTrue == test_3) {
          const enumGalgasBool test_4 = var_hasSetter.boolEnum () ;
          if (kBoolTrue == test_4) {
            GALGAS_location location_5 (enumerator_7966.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_5, GALGAS_string ("duplicate feature")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 163)) ;
          }
          var_hasSetter = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_3) {
          GALGAS_location location_6 (enumerator_7966.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_6, GALGAS_string ("unknown feature; the features available here are: 'nogetter', 'setter'")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 167)) ;
        }
      }
      enumerator_7966.gotoNextObject () ;
    }
    var_typedAttributeList.addAssign_operation (var_t, enumerator_7785.current_mAttributeName (HERE), var_hasSetter, var_hasGetter  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 170)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_7785.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 176)) ;
    }
    enumerator_7785.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("list type ").operator_concat (object->mAttribute_mListTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 180))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 180)), GALGAS_listTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 182)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 183))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 183)), object->mAttribute_mListTypeName.mAttribute_location  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 183)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 183)), var_typedAttributeList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 181)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 179)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_listDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                        categoryMethod_listDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listDeclarationAST_semanticAnalysis (defineCategoryMethod_listDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Overriding category method '@sortedListDeclarationAST semanticAnalysis'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_sortedListDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                      const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                      GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_sortedListDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 198)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 199)) ;
  cEnumerator_attributeInCollectionListAST enumerator_9468 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_9468.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_9468.current_mAttributeTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 201)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_9468.current_mAttributeName (HERE), var_hasSetter, var_hasGetter  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 204)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_9468.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 210)) ;
    }
    enumerator_9468.gotoNextObject () ;
  }
  GALGAS_stringset var_attributesUsedForSorting = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 213)) ;
  GALGAS_sortDescriptorListForGeneration var_sortDescriptorList = GALGAS_sortDescriptorListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 214)) ;
  cEnumerator_sortedListSortDescriptorListAST enumerator_9965 (object->mAttribute_mSortDescriptorList, kEnumeration_up) ;
  while (enumerator_9965.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_type ;
    var_attributeMap.method_searchKey (enumerator_9965.current_mSortedAttributeName (HERE), var_type, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 216)) ;
    var_sortDescriptorList.addAssign_operation (var_type, enumerator_9965.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 217)), enumerator_9965.current_mAscending (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 217)) ;
    const enumGalgasBool test_0 = var_attributesUsedForSorting.reader_hasKey (enumerator_9965.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 218)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 218)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_9965.current_mSortedAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_9965.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 219))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 219)).operator_concat (GALGAS_string ("' is already used for sorting")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 219))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 219)) ;
    }
    var_attributesUsedForSorting.addAssign_operation (enumerator_9965.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 221))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 221)) ;
    enumerator_9965.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("sorted list ").operator_concat (object->mAttribute_mSortedListTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 225))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 225)), GALGAS_sortedListTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSortedListTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 227)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mSortedListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 228))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 228)), object->mAttribute_mSortedListTypeName.mAttribute_location  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 228)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 228)), var_typedAttributeList, var_sortDescriptorList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 226)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 224)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_sortedListDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                        categoryMethod_sortedListDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_sortedListDeclarationAST_semanticAnalysis (defineCategoryMethod_sortedListDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Overriding category method '@structDeclarationAST semanticAnalysis'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_structDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                  const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                  const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structDeclarationAST * object = (const cPtr_structDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_structDeclarationAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mAttributeList.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 252)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mStructTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("a structure cannot be empty: it must have at least one field")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 253)) ;
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 255)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 256)) ;
  cEnumerator_attributeInCollectionListAST enumerator_11711 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_11711.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_11711.current_mAttributeTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 258)) ;
    cEnumerator_lstringlist enumerator_11838 (enumerator_11711.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_11838.hasCurrentObject ()) {
      GALGAS_location location_2 (enumerator_11838.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("a struct attribute does not accept any feature")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 260)) ;
      enumerator_11838.gotoNextObject () ;
    }
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (false) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_11711.current_mAttributeName (HERE), var_hasSetter, var_hasGetter  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 264)) ;
    const enumGalgasBool test_3 = function_forbiddenKeysForStruct (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 270)).reader_hasKey (enumerator_11711.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 270)).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_string var_m = GALGAS_string ("an attribute cannot be named:") ;
      cEnumerator_stringset enumerator_12268 (function_forbiddenKeysForStruct (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 272)), kEnumeration_up) ;
      while (enumerator_12268.hasCurrentObject ()) {
        var_m.dotAssign_operation (GALGAS_string (" ").operator_concat (enumerator_12268.current (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 273))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 273)) ;
        enumerator_12268.gotoNextObject () ;
      }
      var_m.dotAssign_operation (GALGAS_string ("; theses names are reserved")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 275)) ;
      GALGAS_location location_4 (enumerator_11711.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, var_m  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 276)) ;
    }
    {
    var_attributeMap.modifier_insertKey (enumerator_11711.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 278)) ;
    }
    enumerator_11711.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("struct ").operator_concat (object->mAttribute_mStructTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 281))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 281)), GALGAS_structTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mStructTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 283)), var_typedAttributeList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 282)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 280)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_structDeclarationAST.mSlotID,
                                        categoryMethod_structDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclarationAST_semanticAnalysis (defineCategoryMethod_structDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Overriding category method '@graphDeclarationAST semanticAnalysis'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_graphDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_graphDeclarationAST * object = (const cPtr_graphDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_graphDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_graphTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mGraphTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 297)) ;
  GALGAS_unifiedTypeMapProxy var_associatedListTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 298)) ;
  GALGAS_unifiedTypeMapProxy var_associatedListElementTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mAssociatedListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 301))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 301)), object->mAttribute_mAssociatedListTypeName.mAttribute_location  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 301)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 299)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_associatedListTypeProxy.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 303)).objectCompare (GALGAS_typeKindEnum::constructor_listType (SOURCE_FILE ("semanticAnalysis.gSemantics", 303)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAssociatedListTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 304))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 304)).operator_concat (GALGAS_string ("' type should be a list")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 304))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 304)) ;
  }
  GALGAS_stringset var_reservedModifierNames = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 307)) ;
  var_reservedModifierNames.addAssign_operation (GALGAS_string ("noteNode")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 308)) ;
  var_reservedModifierNames.addAssign_operation (GALGAS_string ("addArc")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 309)) ;
  cEnumerator_graphInsertModifierList enumerator_13862 (object->mAttribute_mInsertModifierList, kEnumeration_up) ;
  while (enumerator_13862.hasCurrentObject ()) {
    const enumGalgasBool test_2 = var_reservedModifierNames.reader_hasKey (enumerator_13862.current_mInsertModifierName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 311)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 311)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (enumerator_13862.current_mInsertModifierName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (enumerator_13862.current_mInsertModifierName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 312))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 312)).operator_concat (GALGAS_string ("' modifier name is reserved for a graph type")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 312))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 312)) ;
    }
    {
    routine_check_5F_K_5F_L_5F_escapeCharacters (enumerator_13862.current_mInsertErrorMessage (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 314)) ;
    }
    enumerator_13862.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("graph ").operator_concat (object->mAttribute_mGraphTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 318))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 318)), GALGAS_graphDeclarationForGeneration::constructor_new (var_graphTypeProxy, var_associatedListTypeProxy, var_associatedListElementTypeProxy, object->mAttribute_mInsertModifierList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 319)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 317)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_graphDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_graphDeclarationAST.mSlotID,
                                        categoryMethod_graphDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_graphDeclarationAST_semanticAnalysis (defineCategoryMethod_graphDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Overriding category method '@externTypeDeclarationAST semanticAnalysis'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_externTypeDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                      const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                      GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externTypeDeclarationAST * object = (const cPtr_externTypeDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externTypeDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_externTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mExternTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 336)) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("extern type ").operator_concat (object->mAttribute_mExternTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 339))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 339)), GALGAS_externTypeDeclarationForGeneration::constructor_new (var_externTypeProxy, object->mAttribute_mExternTypeName.mAttribute_string, object->mAttribute_mCppPreDeclarationCode, object->mAttribute_mCppClassCode  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 340)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 338)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_externTypeDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_externTypeDeclarationAST.mSlotID,
                                        categoryMethod_externTypeDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externTypeDeclarationAST_semanticAnalysis (defineCategoryMethod_externTypeDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Overriding category method '@enumDeclarationAST semanticAnalysis'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_enumDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_enumDeclarationAST * object = (const cPtr_enumDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_enumDeclarationAST) ;
  GALGAS_stringlist var_constantList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 358)) ;
  GALGAS_constantIndexMap var_constantMap = GALGAS_constantIndexMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 359)) ;
  cEnumerator_enumConstantList enumerator_15532 (object->mAttribute_mConstantList, kEnumeration_up) ;
  while (enumerator_15532.hasCurrentObject ()) {
    var_constantList.addAssign_operation (enumerator_15532.current_mConstantName (HERE).mAttribute_string  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 361)) ;
    GALGAS_unifiedTypeMapProxyList var_associatedTypeList = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 362)) ;
    GALGAS_stringset var_associatedValueNameSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 363)) ;
    cEnumerator__32_lstringlist enumerator_15727 (enumerator_15532.current_mAssociatedValueDefinitionList (HERE), kEnumeration_up) ;
    while (enumerator_15727.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_associatedTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_15727.current_mValue_30_ (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 365)) ;
      var_associatedTypeList.addAssign_operation (var_associatedTypeProxy  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 366)) ;
      const enumGalgasBool test_0 = var_associatedValueNameSet.reader_hasKey (enumerator_15727.current_mValue_31_ (HERE).mAttribute_string COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 367)).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_location location_1 (enumerator_15727.current_mValue_31_ (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_1, GALGAS_string ("duplicated name")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 368)) ;
      }
      var_associatedValueNameSet.addAssign_operation (enumerator_15727.current_mValue_31_ (HERE).mAttribute_string  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 370)) ;
      enumerator_15727.gotoNextObject () ;
    }
    {
    var_constantMap.modifier_insertKey (enumerator_15532.current_mConstantName (HERE), var_constantMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 372)), var_associatedTypeList, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 372)) ;
    }
    enumerator_15532.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("enum ").operator_concat (object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 376))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 376)), GALGAS_enumTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mEnumTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 378)), object->mAttribute_mConstantList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 377)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 375)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_enumDeclarationAST.mSlotID,
                                        categoryMethod_enumDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclarationAST_semanticAnalysis (defineCategoryMethod_enumDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Overriding category method '@arrayDeclarationAST semanticAnalysis'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_arrayDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_arrayDeclarationAST * object = (const cPtr_arrayDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_arrayDeclarationAST) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("array ").operator_concat (object->mAttribute_mArrayTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 394))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 394)), GALGAS_arrayTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mArrayTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 396)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mElementTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 397)), object->mAttribute_mDimension.reader_uint (SOURCE_FILE ("semanticAnalysis.gSemantics", 398))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 395)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 393)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_arrayDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_arrayDeclarationAST.mSlotID,
                                        categoryMethod_arrayDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_arrayDeclarationAST_semanticAnalysis (defineCategoryMethod_arrayDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Overriding category method '@listmapDeclarationAST semanticAnalysis'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_listmapDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                   const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                   GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listmapDeclarationAST) ;
  GALGAS_typeKindEnum var_typeKindEnum ;
  GALGAS_typedAttributeList var_listTypeAttributeList ;
  GALGAS_bool joker_17598_3 ; // Joker input parameter
  GALGAS_bool joker_17598_2 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_17598_1 ; // Joker input parameter
  GALGAS_bool joker_17639_0 ; // Joker input parameter
  GALGAS_attributeMap joker_17694_20 ; // Joker input parameter
  GALGAS_typedAttributeList joker_17694_19 ; // Joker input parameter
  GALGAS_constructorMap joker_17694_18 ; // Joker input parameter
  GALGAS_readerMap joker_17694_17 ; // Joker input parameter
  GALGAS_modifierMap joker_17694_16 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_17694_15 ; // Joker input parameter
  GALGAS_classMethodMap joker_17694_14 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_17694_13 ; // Joker input parameter
  GALGAS_stringlist joker_17694_12 ; // Joker input parameter
  GALGAS_uint joker_17694_11 ; // Joker input parameter
  GALGAS_functionSignature joker_17694_10 ; // Joker input parameter
  GALGAS_constantIndexMap joker_17694_9 ; // Joker input parameter
  GALGAS_enumConstantList joker_17694_8 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_17694_7 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_17694_6 ; // Joker input parameter
  GALGAS_bool joker_17694_5 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_17694_4 ; // Joker input parameter
  GALGAS_string joker_17694_3 ; // Joker input parameter
  GALGAS_string joker_17694_2 ; // Joker input parameter
  GALGAS_headerKind joker_17694_1 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedListTypeName, joker_17598_3, joker_17598_2, joker_17598_1, var_typeKindEnum, joker_17639_0, var_listTypeAttributeList, joker_17694_20, joker_17694_19, joker_17694_18, joker_17694_17, joker_17694_16, joker_17694_15, joker_17694_14, joker_17694_13, joker_17694_12, joker_17694_11, joker_17694_10, joker_17694_9, joker_17694_8, joker_17694_7, joker_17694_6, joker_17694_5, joker_17694_4, joker_17694_3, joker_17694_2, joker_17694_1, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 414)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_typeKindEnum.objectCompare (GALGAS_typeKindEnum::constructor_listType (SOURCE_FILE ("semanticAnalysis.gSemantics", 423)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAssociatedListTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("associated type should be a list type")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 424)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("list map ").operator_concat (object->mAttribute_mListmapTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 428))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 428)), GALGAS_listmapTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListmapTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 430)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 431)), var_listTypeAttributeList, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mListmapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 433))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 433)), object->mAttribute_mListmapTypeName.mAttribute_location  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 433)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 433))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 429)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 427)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_listmapDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                        categoryMethod_listmapDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listmapDeclarationAST_semanticAnalysis (defineCategoryMethod_listmapDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Overriding category method '@mapDeclarationAST semanticAnalysis'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_mapDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 512)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 513)) ;
  cEnumerator_attributeInCollectionListAST enumerator_21105 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_21105.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_21105.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 515)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_21105.current_mAttributeName (HERE), var_hasSetter, var_hasGetter  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 518)) ;
    const enumGalgasBool test_0 = function_forbiddenKeysForMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 524)).reader_hasKey (enumerator_21105.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 524)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_m = GALGAS_string ("an attribute cannot be named:") ;
      cEnumerator_stringset enumerator_21515 (function_forbiddenKeysForMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 526)), kEnumeration_up) ;
      while (enumerator_21515.hasCurrentObject ()) {
        var_m.dotAssign_operation (GALGAS_string (" ").operator_concat (enumerator_21515.current (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 527))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 527)) ;
        enumerator_21515.gotoNextObject () ;
      }
      var_m.dotAssign_operation (GALGAS_string ("; theses names are reserved")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 529)) ;
      GALGAS_location location_1 (enumerator_21105.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, var_m  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 530)) ;
    }
    {
    var_attributeMap.modifier_insertKey (enumerator_21105.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 532)) ;
    }
    enumerator_21105.gotoNextObject () ;
  }
  GALGAS_insertMethodMap var_insertMethodMap = GALGAS_insertMethodMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 535)) ;
  cEnumerator_insertMethodListAST enumerator_21816 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_21816.hasCurrentObject ()) {
    {
    var_insertMethodMap.modifier_insertKey (enumerator_21816.current_mInsertMethodName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 537)) ;
    }
    {
    routine_check_5F_K_5F_L_5F_escapeCharacters (enumerator_21816.current_mErrorMessage (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 538)) ;
    }
    {
    routine_check_5F_K_5F_L_5F_escapeCharacters (enumerator_21816.current_mShadowErrorMessage (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 539)) ;
    }
    enumerator_21816.gotoNextObject () ;
  }
  GALGAS_searchMethodMap var_searchMethodMap = GALGAS_searchMethodMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 542)) ;
  cEnumerator_mapSearchMethodListAST enumerator_22094 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_22094.hasCurrentObject ()) {
    {
    var_searchMethodMap.modifier_insertKey (enumerator_22094.current_mSearchMethodName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 544)) ;
    }
    {
    routine_check_5F_K_5F_escapeCharacters (enumerator_22094.current_mErrorMessage (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 545)) ;
    }
    enumerator_22094.gotoNextObject () ;
  }
  cEnumerator_mapRemoveMethodListAST enumerator_22268 (object->mAttribute_mRemoveMethodList, kEnumeration_up) ;
  while (enumerator_22268.hasCurrentObject ()) {
    {
    var_insertMethodMap.modifier_insertKey (enumerator_22268.current_mMethodName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 549)) ;
    }
    {
    routine_check_5F_K_5F_escapeCharacters (enumerator_22268.current_mErrorMessage (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 550)) ;
    }
    enumerator_22268.gotoNextObject () ;
  }
  cEnumerator_insertOrReplaceDeclarationListAST enumerator_22495 (object->mAttribute_mInsertOrReplaceDeclarationListAST, kEnumeration_up) ;
  GALGAS_uint index_22460 ((uint32_t) 0) ;
  while (enumerator_22495.hasCurrentObject ()) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, index_22460.objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticWarning (enumerator_22495.current_mInsertOrReplaceDeclarationLocation (HERE), GALGAS_string ("the 'insertOrReplace' modifier is already declared")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 555)) ;
    }
    enumerator_22495.gotoNextObject () ;
    index_22460.increment_operation (inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 553)) ;
  }
  GALGAS_bool var_hasInsertOrReplaceModifier = GALGAS_bool (kIsStrictSup, object->mAttribute_mInsertOrReplaceDeclarationListAST.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 558)).objectCompare (GALGAS_uint ((uint32_t) 0U))) ;
  const enumGalgasBool test_3 = var_hasInsertOrReplaceModifier.operator_and (var_insertMethodMap.reader_hasKey (GALGAS_string ("insertOrReplace") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 559)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 559)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location var_insertOrReplaceDeclarationLocation ;
    object->mAttribute_mInsertOrReplaceDeclarationListAST.method_first (var_insertOrReplaceDeclarationLocation, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 561)) ;
    inCompiler->emitSemanticError (var_insertOrReplaceDeclarationLocation, GALGAS_string ("the insertOrReplace' modifier cannot be declared : an insert modifier or a remove modifier has been declared with this name")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 562)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("map ").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 575))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 575)), GALGAS_mapTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 577)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mMapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 578))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 578)), object->mAttribute_mMapTypeName.mAttribute_location  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 578)), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 578)), object->mAttribute_mMapTypeName, var_typedAttributeList, object->mAttribute_mInsertMethodList, object->mAttribute_mSearchMethodList, object->mAttribute_mRemoveMethodList, var_hasInsertOrReplaceModifier  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 576)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 574)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_mapDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                        categoryMethod_mapDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapDeclarationAST_semanticAnalysis (defineCategoryMethod_mapDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Overriding category method '@uniqueMapDeclarationAST semanticAnalysis'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_uniqueMapDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                     const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                     const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                     GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_uniqueMapDeclarationAST * object = (const cPtr_uniqueMapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_uniqueMapDeclarationAST) ;
  GALGAS_stringset var_initialStateSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 599)) ;
  cEnumerator_insertMethodListAST enumerator_24490 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_24490.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 601)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_24490.current_mInitialStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 602)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_24490.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_24490.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 603))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 603)).operator_concat (GALGAS_string ("' insert method should name an automaton state")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 603))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 603)) ;
      }else if (kBoolFalse == test_1) {
        var_initialStateSet.addAssign_operation (enumerator_24490.current_mInitialStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 605))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 605)) ;
      }
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_24490.current_mInitialStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 607)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_24490.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the '").operator_concat (enumerator_24490.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 608))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 608)).operator_concat (GALGAS_string ("' insert method should not name an automaton state")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 608))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 608)) ;
      }
    }
    enumerator_24490.gotoNextObject () ;
  }
  GALGAS_mapAutomatonActionMap var_mapAutomatonActionMap = GALGAS_mapAutomatonActionMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 612)) ;
  cEnumerator_mapSearchMethodListAST enumerator_25093 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_25093.hasCurrentObject ()) {
    const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 614)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_5) {
      const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, enumerator_25093.current_mActionName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 615)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_6) {
        GALGAS_location location_7 (enumerator_25093.current_mSearchMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_7, GALGAS_string ("the '").operator_concat (enumerator_25093.current_mSearchMethodName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 616))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 616)).operator_concat (GALGAS_string ("' search method should name an automaton action")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 616))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 616)) ;
      }else if (kBoolFalse == test_6) {
        const enumGalgasBool test_8 = var_mapAutomatonActionMap.reader_hasKey (enumerator_25093.current_mActionName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 617)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 617)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 617)).boolEnum () ;
        if (kBoolTrue == test_8) {
          {
          var_mapAutomatonActionMap.modifier_insertKey (enumerator_25093.current_mActionName (HERE), var_mapAutomatonActionMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 619)), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 619)) ;
          }
        }
      }
    }else if (kBoolFalse == test_5) {
      const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, enumerator_25093.current_mActionName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 623)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_9) {
        GALGAS_location location_10 (enumerator_25093.current_mSearchMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_10, GALGAS_string ("the '").operator_concat (enumerator_25093.current_mSearchMethodName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 624))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 624)).operator_concat (GALGAS_string ("' search method should not name an automaton action")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 624))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 624)) ;
      }
    }
    enumerator_25093.gotoNextObject () ;
  }
  GALGAS_mapAutomatonStateMap var_mapAutomatonStateMap = GALGAS_mapAutomatonStateMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 628)) ;
  cEnumerator_mapStateList enumerator_25906 (object->mAttribute_mMapStateList, kEnumeration_up) ;
  while (enumerator_25906.hasCurrentObject ()) {
    {
    var_mapAutomatonStateMap.modifier_insertKey (enumerator_25906.current_mStateName (HERE), var_mapAutomatonStateMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 630)), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 630)) ;
    }
    enumerator_25906.gotoNextObject () ;
  }
  cEnumerator_mapStateList enumerator_26032 (object->mAttribute_mMapStateList, kEnumeration_up) ;
  while (enumerator_26032.hasCurrentObject ()) {
    cEnumerator_mapStateTransitionList enumerator_26063 (enumerator_26032.current_mTransitionList (HERE), kEnumeration_up) ;
    while (enumerator_26063.hasCurrentObject ()) {
      GALGAS_uint joker_26124_0 ; // Joker input parameter
      var_mapAutomatonStateMap.method_searchKey (enumerator_26063.current_mTargetStateName (HERE), joker_26124_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 634)) ;
      enumerator_26063.gotoNextObject () ;
    }
    enumerator_26032.gotoNextObject () ;
  }
  GALGAS_stringset var_allActions = var_mapAutomatonActionMap.reader_keySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 638)) ;
  GALGAS_mapStateSortedList var_mapStateSortedList = GALGAS_mapStateSortedList::constructor_emptySortedList (SOURCE_FILE ("semanticAnalysis.gSemantics", 639)) ;
  cEnumerator_mapStateList enumerator_26358 (object->mAttribute_mMapStateList, kEnumeration_up) ;
  while (enumerator_26358.hasCurrentObject ()) {
    GALGAS_stringset var_actionsForCurrentState = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 641)) ;
    GALGAS_mapStateTransitionSortedList var_mapStateTransitionSortedList = GALGAS_mapStateTransitionSortedList::constructor_emptySortedList (SOURCE_FILE ("semanticAnalysis.gSemantics", 642)) ;
    cEnumerator_mapStateTransitionList enumerator_26523 (enumerator_26358.current_mTransitionList (HERE), kEnumeration_up) ;
    while (enumerator_26523.hasCurrentObject ()) {
      GALGAS_uint var_actionIndex ;
      var_mapAutomatonActionMap.method_searchKey (enumerator_26523.current_mActionName (HERE), var_actionIndex, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 645)) ;
      const enumGalgasBool test_11 = var_actionsForCurrentState.reader_hasKey (enumerator_26523.current_mActionName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 646)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 646)).boolEnum () ;
      if (kBoolTrue == test_11) {
        GALGAS_location location_12 (enumerator_26523.current_mActionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_12, GALGAS_string ("the '").operator_concat (enumerator_26523.current_mActionName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 647))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 647)).operator_concat (GALGAS_string ("' action is already used for this state")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 647))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 647)) ;
      }
      var_actionsForCurrentState.addAssign_operation (enumerator_26523.current_mActionName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 649))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 649)) ;
      GALGAS_uint var_targetStateIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_26523.current_mTargetStateName (HERE), var_targetStateIndex, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 651)) ;
      var_mapStateTransitionSortedList.addAssign_operation (var_actionIndex, enumerator_26523.current_mActionName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 654)), var_targetStateIndex, enumerator_26523.current_mTargetStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 656)), enumerator_26523.current_mTransitionMessageKind (HERE), enumerator_26523.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 658))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 652)) ;
      enumerator_26523.gotoNextObject () ;
    }
    GALGAS_uint var_stateIndex ;
    var_mapAutomatonStateMap.method_searchKey (enumerator_26358.current_mStateName (HERE), var_stateIndex, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 662)) ;
    var_mapStateSortedList.addAssign_operation (var_stateIndex, enumerator_26358.current_mStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 665)), enumerator_26358.current_mStateMessageKind (HERE), enumerator_26358.current_mStateMessage (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 667)), var_mapStateTransitionSortedList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 663)) ;
    GALGAS_stringset var_missingActions = var_allActions.substract_operation (var_actionsForCurrentState, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 670)) ;
    const enumGalgasBool test_13 = GALGAS_bool (kIsStrictSup, var_missingActions.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 671)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_13) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_27625 (var_missingActions, kEnumeration_up) ;
      while (enumerator_27625.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("'").operator_concat (enumerator_27625.current_key (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 674)).operator_concat (GALGAS_string ("'")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 674))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 674)) ;
        if (enumerator_27625.hasNextObject ()) {
          var_s.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 675)) ;
        }
        enumerator_27625.gotoNextObject () ;
      }
      GALGAS_location location_14 (enumerator_26358.current_mStateName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_14, GALGAS_string ("the following actions are not named in a transition from this state: ").operator_concat (var_s  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 677))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 677)) ;
    }
    enumerator_26358.gotoNextObject () ;
  }
  GALGAS_stringset var_accessibleStates = var_initialStateSet ;
  GALGAS_bool var_progress = GALGAS_bool (true) ;
  if (object->mAttribute_mMapStateList.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 683)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 683)).isValid ()) {
    uint32_t variant_27963 = object->mAttribute_mMapStateList.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 683)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 683)).uintValue () ;
    bool loop_27963 = true ;
    while (loop_27963) {
      loop_27963 = var_progress.isValid () ;
      if (loop_27963) {
        loop_27963 = var_progress.boolValue () ;
      }
      if (loop_27963 && (0 == variant_27963)) {
        loop_27963 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("semanticAnalysis.gSemantics", 683)) ;
      }
      if (loop_27963) {
        variant_27963 -- ;
        var_progress = GALGAS_bool (false) ;
        cEnumerator_mapStateList enumerator_28060 (object->mAttribute_mMapStateList, kEnumeration_up) ;
        while (enumerator_28060.hasCurrentObject ()) {
          const enumGalgasBool test_15 = var_accessibleStates.reader_hasKey (enumerator_28060.current_mStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 686)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 686)).boolEnum () ;
          if (kBoolTrue == test_15) {
            cEnumerator_mapStateTransitionList enumerator_28156 (enumerator_28060.current_mTransitionList (HERE), kEnumeration_up) ;
            while (enumerator_28156.hasCurrentObject ()) {
              const enumGalgasBool test_16 = var_accessibleStates.reader_hasKey (enumerator_28156.current_mTargetStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 688)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 688)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 688)).boolEnum () ;
              if (kBoolTrue == test_16) {
                var_accessibleStates.addAssign_operation (enumerator_28156.current_mTargetStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 689))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 689)) ;
                var_progress = GALGAS_bool (true) ;
              }
              enumerator_28156.gotoNextObject () ;
            }
          }
          enumerator_28060.gotoNextObject () ;
        }
      }
    }
  }
  GALGAS_stringset var_uselessStates = var_mapAutomatonStateMap.reader_keySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 696)).substract_operation (var_accessibleStates, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 696)) ;
  const enumGalgasBool test_17 = GALGAS_bool (kIsStrictSup, var_uselessStates.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 697)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_17) {
    GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
    cEnumerator_stringset enumerator_28584 (var_uselessStates, kEnumeration_up) ;
    while (enumerator_28584.hasCurrentObject ()) {
      var_s.dotAssign_operation (GALGAS_string ("'").operator_concat (enumerator_28584.current_key (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 700)).operator_concat (GALGAS_string ("'")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 700))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 700)) ;
      if (enumerator_28584.hasNextObject ()) {
        var_s.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 701)) ;
      }
      enumerator_28584.gotoNextObject () ;
    }
    inCompiler->emitSemanticWarning (inCompiler->here (), GALGAS_string ("the following map automaton states are useless: ").operator_concat (var_s  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 703))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 703)) ;
  }
  GALGAS_stringset var_neededAssociations = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 707)) ;
  GALGAS_stringset var_accessibilityGraph = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 708)) ;
  cEnumerator_mapAutomatonStateMap enumerator_28954 (var_mapAutomatonStateMap, kEnumeration_up) ;
  while (enumerator_28954.hasCurrentObject ()) {
    GALGAS_stringset var_reachableStates = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 710)) ;
    var_reachableStates.addAssign_operation (enumerator_28954.current_lkey (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 711))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 711)) ;
    GALGAS_bool var_progress = GALGAS_bool (true) ;
    if (var_mapAutomatonStateMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 713)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 713)).isValid ()) {
      uint32_t variant_29079 = var_mapAutomatonStateMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 713)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 713)).uintValue () ;
      bool loop_29079 = true ;
      while (loop_29079) {
        loop_29079 = var_progress.isValid () ;
        if (loop_29079) {
          loop_29079 = var_progress.boolValue () ;
        }
        if (loop_29079 && (0 == variant_29079)) {
          loop_29079 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE ("semanticAnalysis.gSemantics", 713)) ;
        }
        if (loop_29079) {
          variant_29079 -- ;
          var_progress = GALGAS_bool (false) ;
          cEnumerator_mapStateList enumerator_29186 (object->mAttribute_mMapStateList, kEnumeration_up) ;
          while (enumerator_29186.hasCurrentObject ()) {
            const enumGalgasBool test_18 = var_reachableStates.reader_hasKey (enumerator_29186.current_mStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 716)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 716)).boolEnum () ;
            if (kBoolTrue == test_18) {
              cEnumerator_mapStateTransitionList enumerator_29285 (enumerator_29186.current_mTransitionList (HERE), kEnumeration_up) ;
              while (enumerator_29285.hasCurrentObject ()) {
                const enumGalgasBool test_19 = var_reachableStates.reader_hasKey (enumerator_29285.current_mTargetStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 718)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 718)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 718)).boolEnum () ;
                if (kBoolTrue == test_19) {
                  var_reachableStates.addAssign_operation (enumerator_29285.current_mTargetStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 719))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 719)) ;
                  var_accessibilityGraph.addAssign_operation (enumerator_28954.current_lkey (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 720)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 720)).operator_concat (enumerator_29285.current_mTargetStateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 720))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 720))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 720)) ;
                  var_progress = GALGAS_bool (true) ;
                }
                enumerator_29285.gotoNextObject () ;
              }
            }
            enumerator_29186.gotoNextObject () ;
          }
        }
      }
    }
    cEnumerator_stringset enumerator_29671 (var_reachableStates, kEnumeration_up) ;
    while (enumerator_29671.hasCurrentObject ()) {
      const enumGalgasBool test_20 = GALGAS_bool (kIsNotEqual, enumerator_28954.current_lkey (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 728)).objectCompare (enumerator_29671.current_key (HERE))).boolEnum () ;
      if (kBoolTrue == test_20) {
        var_neededAssociations.addAssign_operation (enumerator_28954.current_lkey (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 729)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 729)).operator_concat (enumerator_29671.current_key (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 729))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 729)) ;
      }
      enumerator_29671.gotoNextObject () ;
    }
    enumerator_28954.gotoNextObject () ;
  }
  GALGAS_mapOverrideList var_mapOverrideList = GALGAS_mapOverrideList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 734)) ;
  cEnumerator_mapOverrideBlockListAST enumerator_29906 (object->mAttribute_mMapOverrideBlockListAST, kEnumeration_up) ;
  while (enumerator_29906.hasCurrentObject ()) {
    GALGAS_stringset var_handledAssociations = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 736)) ;
    GALGAS_stringset var_neededCombinaisons = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 737)) ;
    GALGAS_branchBehaviourSortedListForMapOverride var_branchBehaviourSortedListForMapOverride_31_ = GALGAS_branchBehaviourSortedListForMapOverride::constructor_emptySortedList (SOURCE_FILE ("semanticAnalysis.gSemantics", 738)) ;
    cEnumerator_mapOverrideBlockDescriptorAST enumerator_30154 (enumerator_29906.current_mMapOverrideBlockDescriptor_31_AST (HERE), kEnumeration_up) ;
    while (enumerator_30154.hasCurrentObject ()) {
      GALGAS_uint var_startStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_30154.current_mLeftState (HERE), var_startStateNameIndex, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 741)) ;
      GALGAS_uint var_currentStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_30154.current_mRightState (HERE), var_currentStateNameIndex, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 743)) ;
      GALGAS_string var_association = enumerator_30154.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 744)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 744)).operator_concat (enumerator_30154.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 744))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 744)) ;
      const enumGalgasBool test_21 = var_neededAssociations.reader_hasKey (var_association COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 745)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 745)).boolEnum () ;
      if (kBoolTrue == test_21) {
        GALGAS_location location_22 (enumerator_30154.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_22, GALGAS_string ("the '").operator_concat (var_association  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 746)).operator_concat (GALGAS_string ("' association is useless")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 746))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 746)) ;
      }
      const enumGalgasBool test_23 = var_handledAssociations.reader_hasKey (var_association COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 748)).boolEnum () ;
      if (kBoolTrue == test_23) {
        GALGAS_location location_24 (enumerator_30154.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_24, GALGAS_string ("the '").operator_concat (var_association  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 750)).operator_concat (GALGAS_string ("' association is already defined")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 750))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 749)) ;
      }
      var_handledAssociations.addAssign_operation (var_association  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 752)) ;
      GALGAS_uint var_finalStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_30154.current_mResultingState (HERE), var_finalStateNameIndex, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 754)) ;
      const enumGalgasBool test_25 = GALGAS_bool (kIsNotEqual, enumerator_30154.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 755)).objectCompare (enumerator_30154.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 755)))).boolEnum () ;
      if (kBoolTrue == test_25) {
        var_neededCombinaisons.addAssign_operation (enumerator_30154.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 756)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 756)).operator_concat (enumerator_30154.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 756))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 756))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 756)) ;
        var_neededCombinaisons.addAssign_operation (enumerator_30154.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 757)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 757)).operator_concat (enumerator_30154.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 757))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 757))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 757)) ;
        const enumGalgasBool test_26 = var_accessibilityGraph.reader_hasKey (enumerator_30154.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 758)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 758)).operator_concat (enumerator_30154.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 758))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 758)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 758)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 758)).boolEnum () ;
        if (kBoolTrue == test_26) {
          GALGAS_location location_27 (enumerator_30154.current_mResultingState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_27, GALGAS_string ("the '").operator_concat (enumerator_30154.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 760))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 760)).operator_concat (GALGAS_string ("' state is not reachable from '")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 760)).operator_concat (enumerator_30154.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 760))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 760)).operator_concat (GALGAS_string ("' state")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 760))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 759)) ;
        }
      }
      {
      routine_check_5F_K_5F_escapeCharacters (enumerator_30154.current_mTransitionMessage (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 764)) ;
      }
      var_branchBehaviourSortedListForMapOverride_31_.addAssign_operation (var_startStateNameIndex, enumerator_30154.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 767)), var_currentStateNameIndex, enumerator_30154.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 769)), var_finalStateNameIndex, enumerator_30154.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 771)), enumerator_30154.current_mMessageKind (HERE), enumerator_30154.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 773))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 765)) ;
      enumerator_30154.gotoNextObject () ;
    }
    GALGAS_stringset var_forgottenAssociations = var_neededAssociations.substract_operation (var_handledAssociations, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 776)) ;
    const enumGalgasBool test_28 = GALGAS_bool (kIsStrictSup, var_forgottenAssociations.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 777)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_28) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_32010 (var_forgottenAssociations, kEnumeration_up) ;
      while (enumerator_32010.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_32010.current_key (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 780))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 780)) ;
        enumerator_32010.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (inCompiler->here (), var_forgottenAssociations.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 782)).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 782)).operator_concat (GALGAS_string (" associations should be defined:")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 782)).operator_concat (var_s  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 782))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 782)) ;
    }
    GALGAS_stringset var_definedCombinaisons = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("semanticAnalysis.gSemantics", 784)) ;
    GALGAS_branchBehaviourSortedListForMapOverride var_branchBehaviourSortedListForMapOverride_32_ = GALGAS_branchBehaviourSortedListForMapOverride::constructor_emptySortedList (SOURCE_FILE ("semanticAnalysis.gSemantics", 785)) ;
    cEnumerator_mapOverrideBlockDescriptorAST enumerator_32374 (enumerator_29906.current_mMapOverrideBlockDescriptor_32_AST (HERE), kEnumeration_up) ;
    while (enumerator_32374.hasCurrentObject ()) {
      GALGAS_uint var_leftStateIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_32374.current_mLeftState (HERE), var_leftStateIndex, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 788)) ;
      GALGAS_uint var_rightStateIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_32374.current_mRightState (HERE), var_rightStateIndex, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 790)) ;
      GALGAS_string var_combinaison = enumerator_32374.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 791)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 791)).operator_concat (enumerator_32374.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 791))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 791)) ;
      const enumGalgasBool test_29 = var_neededCombinaisons.reader_hasKey (var_combinaison COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 792)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 792)).boolEnum () ;
      if (kBoolTrue == test_29) {
        GALGAS_location location_30 (enumerator_32374.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_30, GALGAS_string ("the '").operator_concat (enumerator_32374.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 794))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 794)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 794)).operator_concat (enumerator_32374.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 794))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 794)).operator_concat (GALGAS_string ("' combinaison is useless")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 794))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 793)) ;
      }
      const enumGalgasBool test_31 = var_definedCombinaisons.reader_hasKey (var_combinaison COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 796)).boolEnum () ;
      if (kBoolTrue == test_31) {
        GALGAS_location location_32 (enumerator_32374.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_32, GALGAS_string ("the '").operator_concat (enumerator_32374.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 798))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 798)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 798)).operator_concat (enumerator_32374.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 798))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 798)).operator_concat (GALGAS_string ("' combinaison is already defined")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 798))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 797)) ;
      }
      var_definedCombinaisons.addAssign_operation (var_combinaison  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 800)) ;
      GALGAS_uint var_resultingStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_32374.current_mResultingState (HERE), var_resultingStateNameIndex, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 802)) ;
      const enumGalgasBool test_33 = GALGAS_bool (kIsNotEqual, enumerator_32374.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 803)).objectCompare (enumerator_32374.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 803)))).operator_and (GALGAS_bool (kIsNotEqual, enumerator_32374.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 804)).objectCompare (enumerator_32374.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 804)))) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 803)).operator_and (var_accessibilityGraph.reader_hasKey (enumerator_32374.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 805)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 805)).operator_concat (enumerator_32374.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 805))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 805)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 805)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 805)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 804)).boolEnum () ;
      if (kBoolTrue == test_33) {
        GALGAS_location location_34 (enumerator_32374.current_mResultingState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_34, GALGAS_string ("the '").operator_concat (enumerator_32374.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 807))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 807)).operator_concat (GALGAS_string ("' state cannot be reached from the '")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 807)).operator_concat (enumerator_32374.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 807))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 807)).operator_concat (GALGAS_string ("' state")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 807))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 806)) ;
      }
      {
      routine_check_5F_K_5F_escapeCharacters (enumerator_32374.current_mTransitionMessage (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 809)) ;
      }
      const enumGalgasBool test_35 = GALGAS_bool (kIsEqual, enumerator_32374.current_mMessageKind (HERE).objectCompare (GALGAS_mapAutomatonMessageKind::constructor_noMessage (SOURCE_FILE ("semanticAnalysis.gSemantics", 810)))).boolEnum () ;
      if (kBoolTrue == test_35) {
        var_definedCombinaisons.addAssign_operation (enumerator_32374.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 811)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 811)).operator_concat (enumerator_32374.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 811))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 811))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 811)) ;
        var_branchBehaviourSortedListForMapOverride_32_.addAssign_operation (var_rightStateIndex, enumerator_32374.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 814)), var_leftStateIndex, enumerator_32374.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 816)), var_resultingStateNameIndex, enumerator_32374.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 818)), enumerator_32374.current_mMessageKind (HERE), enumerator_32374.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 820))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 812)) ;
      }
      var_branchBehaviourSortedListForMapOverride_32_.addAssign_operation (var_leftStateIndex, enumerator_32374.current_mLeftState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 825)), var_rightStateIndex, enumerator_32374.current_mRightState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 827)), var_resultingStateNameIndex, enumerator_32374.current_mResultingState (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 829)), enumerator_32374.current_mMessageKind (HERE), enumerator_32374.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 831))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 823)) ;
      enumerator_32374.gotoNextObject () ;
    }
    const enumGalgasBool test_36 = GALGAS_bool (kIsEqual, var_forgottenAssociations.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 834)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_36) {
      GALGAS_stringset var_forgottenCombinaisons = var_neededCombinaisons.substract_operation (var_definedCombinaisons, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 835)) ;
      const enumGalgasBool test_37 = GALGAS_bool (kIsStrictSup, var_forgottenCombinaisons.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 836)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_37) {
        GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
        cEnumerator_stringset enumerator_34695 (var_forgottenCombinaisons, kEnumeration_up) ;
        while (enumerator_34695.hasCurrentObject ()) {
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - ").operator_concat (enumerator_34695.current_key (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 839))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 839)) ;
          enumerator_34695.gotoNextObject () ;
        }
        inCompiler->emitSemanticError (inCompiler->here (), var_forgottenCombinaisons.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 841)).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 841)).operator_concat (GALGAS_string (" combinaisons are forgotten:")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 841)).operator_concat (var_s  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 841))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 841)) ;
      }
    }
    var_mapOverrideList.addAssign_operation (enumerator_29906.current_mOverrideBlockName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 845)), var_branchBehaviourSortedListForMapOverride_31_, var_branchBehaviourSortedListForMapOverride_32_  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 844)) ;
    enumerator_29906.gotoNextObject () ;
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 851)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 852)) ;
  cEnumerator_attributeInCollectionListAST enumerator_35206 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_35206.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_35206.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 854)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_35206.current_mAttributeName (HERE), var_hasSetter, var_hasGetter  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 857)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_35206.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 863)) ;
    }
    enumerator_35206.gotoNextObject () ;
  }
  GALGAS_insertMethodMap var_insertMethodMap = GALGAS_insertMethodMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 866)) ;
  cEnumerator_insertMethodListAST enumerator_35628 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_35628.hasCurrentObject ()) {
    {
    var_insertMethodMap.modifier_insertKey (enumerator_35628.current_mInsertMethodName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 868)) ;
    }
    cEnumerator_stringlist enumerator_35821 (enumerator_35628.current_mErrorMessage (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 870)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 870)), kEnumeration_up) ;
    while (enumerator_35821.hasCurrentObject ()) {
      GALGAS_stringlist var_explodedArray = enumerator_35821.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 871)) ;
      {
      GALGAS_string joker_35937_0 ; // Joker input parameter
      var_explodedArray.modifier_popFirst (joker_35937_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 872)) ;
      }
      cEnumerator_stringlist enumerator_35969 (var_explodedArray, kEnumeration_up) ;
      while (enumerator_35969.hasCurrentObject ()) {
        const enumGalgasBool test_38 = GALGAS_bool (kIsStrictSup, enumerator_35969.current_mValue (HERE).reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 874)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_38) {
          GALGAS_char var_c = enumerator_35969.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 875)) ;
          const enumGalgasBool test_39 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).operator_and (GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (76)))) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 876)).boolEnum () ;
          if (kBoolTrue == test_39) {
            GALGAS_location location_40 (enumerator_35628.current_mErrorMessage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_40, GALGAS_string ("only '%K', '%L' and '%%' escape sequences are allowed in an insert error message")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 877)) ;
          }
        }
        enumerator_35969.gotoNextObject () ;
      }
      enumerator_35821.gotoNextObject () ;
    }
    cEnumerator_stringlist enumerator_36448 (enumerator_35628.current_mShadowErrorMessage (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 883)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 883)), kEnumeration_up) ;
    while (enumerator_36448.hasCurrentObject ()) {
      GALGAS_stringlist var_explodedArray = enumerator_36448.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 884)) ;
      {
      GALGAS_string joker_36564_0 ; // Joker input parameter
      var_explodedArray.modifier_popFirst (joker_36564_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 885)) ;
      }
      cEnumerator_stringlist enumerator_36596 (var_explodedArray, kEnumeration_up) ;
      while (enumerator_36596.hasCurrentObject ()) {
        const enumGalgasBool test_41 = GALGAS_bool (kIsStrictSup, enumerator_36596.current_mValue (HERE).reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 887)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_41) {
          GALGAS_char var_c = enumerator_36596.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 888)) ;
          const enumGalgasBool test_42 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).operator_and (GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (76)))) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 889)).boolEnum () ;
          if (kBoolTrue == test_42) {
            GALGAS_location location_43 (enumerator_35628.current_mErrorMessage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_43, GALGAS_string ("only '%K', '%L' and '%%' escape sequences are allowed in a shadow error message")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 890)) ;
          }
        }
        enumerator_36596.gotoNextObject () ;
      }
      enumerator_36448.gotoNextObject () ;
    }
    enumerator_35628.gotoNextObject () ;
  }
  GALGAS_searchMethodMap var_searchMethodMap = GALGAS_searchMethodMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 897)) ;
  cEnumerator_mapSearchMethodListAST enumerator_37044 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_37044.hasCurrentObject ()) {
    const enumGalgasBool test_44 = GALGAS_bool (kIsEqual, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 899)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_44) {
      {
      var_searchMethodMap.modifier_insertKey (enumerator_37044.current_mSearchMethodName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 900)) ;
      }
    }else if (kBoolFalse == test_44) {
      {
      var_searchMethodMap.modifier_insertKey (enumerator_37044.current_mSearchMethodName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 902)) ;
      }
    }
    cEnumerator_stringlist enumerator_37358 (enumerator_37044.current_mErrorMessage (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 905)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 905)), kEnumeration_up) ;
    while (enumerator_37358.hasCurrentObject ()) {
      GALGAS_stringlist var_explodedArray = enumerator_37358.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 906)) ;
      {
      GALGAS_string joker_37474_0 ; // Joker input parameter
      var_explodedArray.modifier_popFirst (joker_37474_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 907)) ;
      }
      cEnumerator_stringlist enumerator_37506 (var_explodedArray, kEnumeration_up) ;
      while (enumerator_37506.hasCurrentObject ()) {
        const enumGalgasBool test_45 = GALGAS_bool (kIsStrictSup, enumerator_37506.current_mValue (HERE).reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 909)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_45) {
          GALGAS_char var_c = enumerator_37506.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 910)) ;
          const enumGalgasBool test_46 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).boolEnum () ;
          if (kBoolTrue == test_46) {
            GALGAS_location location_47 (enumerator_37044.current_mErrorMessage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_47, GALGAS_string ("only '%K' and '%%' escape sequences are allowed in a search error message")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 912)) ;
          }
        }
        enumerator_37506.gotoNextObject () ;
      }
      enumerator_37358.gotoNextObject () ;
    }
    enumerator_37044.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("unique map ").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 929))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 929)), GALGAS_uniqueMapTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 931)), object->mAttribute_mMapTypeName, var_typedAttributeList, object->mAttribute_mInsertMethodList, object->mAttribute_mSearchMethodList, var_mapAutomatonStateMap, var_mapAutomatonActionMap, var_mapStateSortedList, var_mapOverrideList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 930)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 928)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_uniqueMapDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_uniqueMapDeclarationAST.mSlotID,
                                        categoryMethod_uniqueMapDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_uniqueMapDeclarationAST_semanticAnalysis (defineCategoryMethod_uniqueMapDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Overriding category method '@mapProxyDeclarationAST semanticAnalysis'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_mapProxyDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                    const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                    const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                    GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapProxyDeclarationAST * object = (const cPtr_mapProxyDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapProxyDeclarationAST) ;
  GALGAS_typedAttributeList var_listTypeAttributeList ;
  GALGAS_mapSearchMethodListAST var_searchMethodList ;
  GALGAS_bool joker_39076_7 ; // Joker input parameter
  GALGAS_bool joker_39076_6 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_39076_5 ; // Joker input parameter
  GALGAS_typeKindEnum joker_39076_4 ; // Joker input parameter
  GALGAS_bool joker_39076_3 ; // Joker input parameter
  GALGAS_typedAttributeList joker_39076_2 ; // Joker input parameter
  GALGAS_attributeMap joker_39076_1 ; // Joker input parameter
  GALGAS_constructorMap joker_39132_11 ; // Joker input parameter
  GALGAS_readerMap joker_39132_10 ; // Joker input parameter
  GALGAS_modifierMap joker_39132_9 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_39132_8 ; // Joker input parameter
  GALGAS_classMethodMap joker_39132_7 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_39132_6 ; // Joker input parameter
  GALGAS_stringlist joker_39132_5 ; // Joker input parameter
  GALGAS_uint joker_39132_4 ; // Joker input parameter
  GALGAS_functionSignature joker_39132_3 ; // Joker input parameter
  GALGAS_constantIndexMap joker_39132_2 ; // Joker input parameter
  GALGAS_enumConstantList joker_39132_1 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_39188_6 ; // Joker input parameter
  GALGAS_bool joker_39188_5 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_39188_4 ; // Joker input parameter
  GALGAS_string joker_39188_3 ; // Joker input parameter
  GALGAS_string joker_39188_2 ; // Joker input parameter
  GALGAS_headerKind joker_39188_1 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedMapTypeName, joker_39076_7, joker_39076_6, joker_39076_5, joker_39076_4, joker_39076_3, joker_39076_2, joker_39076_1, var_listTypeAttributeList, joker_39132_11, joker_39132_10, joker_39132_9, joker_39132_8, joker_39132_7, joker_39132_6, joker_39132_5, joker_39132_4, joker_39132_3, joker_39132_2, joker_39132_1, var_searchMethodList, joker_39188_6, joker_39188_5, joker_39188_4, joker_39188_3, joker_39188_2, joker_39188_1, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 954)) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("map proxy ").operator_concat (object->mAttribute_mMapProxyTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 964))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 964)), GALGAS_mapProxyTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapProxyTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 966)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedMapTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 967)), var_listTypeAttributeList, var_searchMethodList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 965)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 963)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_mapProxyDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_mapProxyDeclarationAST.mSlotID,
                                        categoryMethod_mapProxyDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapProxyDeclarationAST_semanticAnalysis (defineCategoryMethod_mapProxyDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Overriding category method '@externFunctionDeclarationAST semanticAnalysis'                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_externFunctionDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                          const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                          const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                          GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externFunctionDeclarationAST * object = (const cPtr_externFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externFunctionDeclarationAST) ;
  GALGAS_formalInputParameterListForGeneration var_formalArgumentList = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1091)) ;
  cEnumerator_formalInputParameterListAST enumerator_44966 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_44966.hasCurrentObject ()) {
    var_formalArgumentList.addAssign_operation (enumerator_44966.current_mFormalSelector (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_44966.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1095)), enumerator_44966.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1096)), enumerator_44966.current_mFormalArgumentName (HERE), enumerator_44966.current_mIsConstant (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1093)) ;
    enumerator_44966.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("extern func ").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1102))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1102)), GALGAS_functionPrototypeDeclarationForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("func-").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1105))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1105)), object->mAttribute_mFunctionName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1106)), var_formalArgumentList, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mResultTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1108))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1103)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1101)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_externFunctionDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_externFunctionDeclarationAST.mSlotID,
                                        categoryMethod_externFunctionDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externFunctionDeclarationAST_semanticAnalysis (defineCategoryMethod_externFunctionDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Overriding category method '@externRoutineDeclarationAST semanticAnalysis'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_externRoutineDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externRoutineDeclarationAST * object = (const cPtr_externRoutineDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externRoutineDeclarationAST) ;
  GALGAS_formalParameterListForGeneration var_formalArgumentList = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1121)) ;
  cEnumerator_formalParameterListAST enumerator_46007 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_46007.hasCurrentObject ()) {
    var_formalArgumentList.addAssign_operation (enumerator_46007.current_mFormalSelector (HERE), enumerator_46007.current_mFormalArgumentPassingMode (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_46007.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1126)), enumerator_46007.current_mFormalArgumentName (HERE), enumerator_46007.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1128))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1123)) ;
    enumerator_46007.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("extern proc ").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1132))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1132)), GALGAS_routinePrototypeDeclarationForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("proc-").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1135))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1135)), object->mAttribute_mRoutineName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1136)), var_formalArgumentList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1133)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1131)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_externRoutineDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_externRoutineDeclarationAST.mSlotID,
                                        categoryMethod_externRoutineDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externRoutineDeclarationAST_semanticAnalysis (defineCategoryMethod_externRoutineDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Overriding category method '@routineDeclarationAST semanticAnalysis'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_routineDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                   const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                   GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_routineDeclarationAST * object = (const cPtr_routineDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_routineDeclarationAST) ;
  GALGAS_formalParameterListForGeneration var_formalArgumentList = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1151)) ;
  GALGAS_semanticInstructionListForGeneration var_instructionList ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 1156)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 1158))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1153)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mFormalArgumentList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1163)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1164)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1165)), GALGAS_string::makeEmptyString (), object->mAttribute_mRoutineInstructionList, object->mAttribute_mEndOfRoutineInstructionList, var_instructionList, var_formalArgumentList, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1160)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("proc ").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1174))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1174)), GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("proc-").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1177))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1177)), object->mAttribute_mRoutineName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1178)), var_formalArgumentList, var_instructionList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1175)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1173)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_routineDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_routineDeclarationAST.mSlotID,
                                        categoryMethod_routineDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_routineDeclarationAST_semanticAnalysis (defineCategoryMethod_routineDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Overriding category method '@classDeclarationAST semanticAnalysis'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_classDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_classDeclarationAST * object = (const cPtr_classDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_classDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mClassTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1194)) ;
  GALGAS_unifiedTypeMapProxy var_superClassProxy ;
  GALGAS_typedAttributeList var_allAttributeList ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1200)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_superClassProxy = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 1201)) ;
    var_allAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1202)) ;
    GALGAS_bool var_generatedInSeparateFileFeature = GALGAS_bool (false) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mClassFeatureList.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 1204)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_1) {
      cEnumerator_lstringlist enumerator_48759 (object->mAttribute_mClassFeatureList, kEnumeration_up) ;
      while (enumerator_48759.hasCurrentObject ()) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_48759.current_mValue (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1206)).objectCompare (GALGAS_string ("generatedInSeparateFile"))).boolEnum () ;
        if (kBoolTrue == test_2) {
          const enumGalgasBool test_3 = var_generatedInSeparateFileFeature.boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (enumerator_48759.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("the 'generatedInSeparateFile' is already named")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1208)) ;
          }
          var_generatedInSeparateFileFeature = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_2) {
          GALGAS_location location_5 (enumerator_48759.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_5, GALGAS_string ("only the 'generatedInSeparateFile' feature is allowed here")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1212)) ;
        }
        enumerator_48759.gotoNextObject () ;
      }
    }
  }else if (kBoolFalse == test_0) {
    var_superClassProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSuperClassName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1217)) ;
    var_allAttributeList = var_superClassProxy.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1218)) ;
    const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, object->mAttribute_mClassFeatureList.reader_length (SOURCE_FILE ("semanticAnalysis.gSemantics", 1219)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_6) {
      cEnumerator_lstringlist enumerator_49420 (object->mAttribute_mClassFeatureList, kEnumeration_up) ;
      while (enumerator_49420.hasCurrentObject ()) {
        GALGAS_location location_7 (enumerator_49420.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_7, GALGAS_string ("a class that has a super class does not accept any feature")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1221)) ;
        enumerator_49420.gotoNextObject () ;
      }
    }
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1226)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 1227)) ;
  cEnumerator_attributeInCollectionListAST enumerator_49703 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_49703.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_49703.current_mAttributeTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1229)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    cEnumerator_lstringlist enumerator_49891 (enumerator_49703.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_49891.hasCurrentObject ()) {
      const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_49891.current_mValue (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1233)).objectCompare (GALGAS_string ("setter"))).boolEnum () ;
      if (kBoolTrue == test_8) {
        const enumGalgasBool test_9 = var_hasSetter.boolEnum () ;
        if (kBoolTrue == test_9) {
          GALGAS_location location_10 (enumerator_49891.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_10, GALGAS_string ("the 'setter' feature is already named")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1235)) ;
        }
        var_hasSetter = GALGAS_bool (true) ;
      }else if (kBoolFalse == test_8) {
        const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_49891.current_mValue (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1238)).objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
        if (kBoolTrue == test_11) {
          const enumGalgasBool test_12 = var_hasGetter.operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1239)).boolEnum () ;
          if (kBoolTrue == test_12) {
            GALGAS_location location_13 (enumerator_49891.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_13, GALGAS_string ("the 'nogetter' feature is already named")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1240)) ;
          }
          var_hasGetter = GALGAS_bool (false) ;
        }else if (kBoolFalse == test_11) {
          GALGAS_location location_14 (enumerator_49891.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_14, GALGAS_string ("only the 'setter' or 'nogetter' are allowed here")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1244)) ;
        }
      }
      enumerator_49891.gotoNextObject () ;
    }
    var_typedAttributeList.addAssign_operation (var_t, enumerator_49703.current_mAttributeName (HERE), var_hasSetter, var_hasGetter  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1247)) ;
    var_allAttributeList.addAssign_operation (var_t, enumerator_49703.current_mAttributeName (HERE), var_hasSetter, var_hasGetter  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1253)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_49703.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1259)) ;
    }
    enumerator_49703.gotoNextObject () ;
  }
  GALGAS_string var_sortString = var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1262)) ;
  GALGAS_unifiedTypeMapProxy var_t = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1263)) ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1264)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1264)).isValid ()) {
    uint32_t variant_50808 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1264)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1264)).uintValue () ;
    bool loop_50808 = true ;
    while (loop_50808) {
      loop_50808 = var_t.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1265)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1265)).isValid () ;
      if (loop_50808) {
        loop_50808 = var_t.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1265)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1265)).boolValue () ;
      }
      if (loop_50808 && (0 == variant_50808)) {
        loop_50808 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("semanticAnalysis.gSemantics", 1264)) ;
      }
      if (loop_50808) {
        variant_50808 -- ;
        var_sortString = var_t.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1266)).operator_concat (GALGAS_string (".")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1266)).operator_concat (var_sortString  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1266)) ;
        var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1267)) ;
      }
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("class ").operator_concat (object->mAttribute_mClassTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1271))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1271)), GALGAS_classTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mClassTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1273)), object->mAttribute_mIsAbstract, object->mAttribute_mClassTypeName, var_superClassProxy, var_allAttributeList, var_typedAttributeList, var_selfType.reader_mGenerateHeaderInSeparateFile (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1279))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1272)), var_sortString  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1270)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_classDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_classDeclarationAST.mSlotID,
                                        categoryMethod_classDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_classDeclarationAST_semanticAnalysis (defineCategoryMethod_classDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Overriding category method '@functionDeclarationAST semanticAnalysis'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_functionDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                    const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                    const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                    GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_functionDeclarationAST * object = (const cPtr_functionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_functionDeclarationAST) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_formalInputParameterListForGeneration var_formalInputParameterList ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_resultVariableCppName ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 1377)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 1379))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1374)) ;
  {
  routine_analyzeFunctionBody (var_analysisContext, object->mAttribute_mFormalArgumentList, GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1384)), GALGAS_string::makeEmptyString (), object->mAttribute_mFunctionInstructionList, object->mAttribute_mResultVariableName, object->mAttribute_mResultTypeName, object->mAttribute_mEndOfFunctionInstructionList, var_formalInputParameterList, var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1381)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("function ").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1397))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1397)), GALGAS_functionImplementationForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("func-").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1400))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1400)), object->mAttribute_mFunctionName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1401)), var_formalInputParameterList, var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1398)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1396)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_functionDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_functionDeclarationAST.mSlotID,
                                        categoryMethod_functionDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_functionDeclarationAST_semanticAnalysis (defineCategoryMethod_functionDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Overriding category method '@onceFunctionDeclarationAST semanticAnalysis'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_onceFunctionDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                        const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                        const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                        GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_onceFunctionDeclarationAST * object = (const cPtr_onceFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_onceFunctionDeclarationAST) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_resultVariableCppName ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 1425)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 1427))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1422)) ;
  {
  GALGAS_formalInputParameterListForGeneration joker_56995_0 ; // Joker input parameter
  routine_analyzeFunctionBody (var_analysisContext, GALGAS_formalInputParameterListAST::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1431)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1432)), GALGAS_string::makeEmptyString (), object->mAttribute_mFunctionInstructionList, object->mAttribute_mResultVariableName, object->mAttribute_mResultTypeName, object->mAttribute_mEndOfFunctionInstructionList, joker_56995_0, var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1429)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("once function ").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1445))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1445)), GALGAS_onceFunctionDeclarationForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("func-").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1448))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1448)), object->mAttribute_mFunctionName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1449)), var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1446)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1444)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_onceFunctionDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_onceFunctionDeclarationAST.mSlotID,
                                        categoryMethod_onceFunctionDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_onceFunctionDeclarationAST_semanticAnalysis (defineCategoryMethod_onceFunctionDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Overriding category method '@filewrapperDeclarationAST semanticAnalysis'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_filewrapperDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                       const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                       GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperDeclarationAST * object = (const cPtr_filewrapperDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_filewrapperDeclarationAST) ;
  GALGAS_wrapperFileMap var_wrapperFileMap ;
  GALGAS_wrapperDirectoryMap var_wrapperDirectoryMap ;
  GALGAS_lstring joker_58167_0 ; // Joker input parameter
  GALGAS_lstringlist joker_58174_0 ; // Joker input parameter
  GALGAS_filewrapperTemplateMap joker_58265_2 ; // Joker input parameter
  GALGAS_bool joker_58265_1 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mFilewrapperMap.method_searchKey (object->mAttribute_mFilewrapperName, joker_58167_0, joker_58174_0, var_wrapperFileMap, var_wrapperDirectoryMap, joker_58265_2, joker_58265_1, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1470)) ;
  GALGAS_string var_absoluteSourcePath ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mFilewrapperPath.mAttribute_string.reader_firstCharacterOrNul (SOURCE_FILE ("semanticAnalysis.gSemantics", 1480)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_absoluteSourcePath = object->mAttribute_mFilewrapperPath.mAttribute_string ;
  }else if (kBoolFalse == test_0) {
    var_absoluteSourcePath = object->mAttribute_mSourceFileAbsolutePath.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("semanticAnalysis.gSemantics", 1483)).operator_concat (GALGAS_string ("/")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1483)).operator_concat (object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1483))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1483)) ;
  }
  const enumGalgasBool test_1 = var_absoluteSourcePath.reader_directoryExists (SOURCE_FILE ("semanticAnalysis.gSemantics", 1485)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1485)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("The '").operator_concat (var_absoluteSourcePath  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1486)).operator_concat (GALGAS_string ("' directory does not exist")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1486))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1486)) ;
  }else if (kBoolFalse == test_1) {
    GALGAS_filewrapperTemplateListForGeneration var_filewrapperTemplateListForGeneration = GALGAS_filewrapperTemplateListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1489)) ;
    cEnumerator_filewrapperTemplateListAST enumerator_58902 (object->mAttribute_mFilewrapperTemplateList, kEnumeration_up) ;
    while (enumerator_58902.hasCurrentObject ()) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_58902.current_mFilewrapperTemplatePath (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1491)).reader_firstCharacterOrNul (SOURCE_FILE ("semanticAnalysis.gSemantics", 1491)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_58902.current_mFilewrapperTemplatePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the path should not begin with a '/'; it is relative to filewrapper path '").operator_concat (var_absoluteSourcePath  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1492)).operator_concat (GALGAS_string ("'")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1492))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1492)) ;
      }
      GALGAS_string var_absoluteTemplatePath = var_absoluteSourcePath.operator_concat (GALGAS_string ("/")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1494)).operator_concat (enumerator_58902.current_mFilewrapperTemplatePath (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1494))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1494)) ;
      GALGAS_templateInstructionListAST var_resultingInstructionList ;
      var_resultingInstructionList.drop () ;
      cGrammar_templateGrammar::_performSourceFileParsing_ (inCompiler, GALGAS_lstring::constructor_new (var_absoluteTemplatePath, enumerator_58902.current_mFilewrapperTemplatePath (HERE).reader_location (SOURCE_FILE ("semanticAnalysis.gSemantics", 1497))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1497)), var_resultingInstructionList  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1497)) ;
      GALGAS_templateVariableMap var_templateVariableMap = GALGAS_templateVariableMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 1499)) ;
      GALGAS_formalInputParameterListForGeneration var_filewrapperTemplateFormalInputParameters = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1500)) ;
      cEnumerator_formalTemplateInputParameterListAST enumerator_59710 (enumerator_58902.current_mFilewrapperTemplateFormalInputParameters (HERE), kEnumeration_up) ;
      while (enumerator_59710.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_59710.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1502)) ;
        GALGAS_string var_cppVarName = GALGAS_string ("in_").operator_concat (enumerator_59710.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1503)).reader_identifierRepresentation (SOURCE_FILE ("semanticAnalysis.gSemantics", 1503))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1503)) ;
        {
        var_templateVariableMap.modifier_insertKey (enumerator_59710.current_mFormalArgumentName (HERE), var_type, var_cppVarName, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1504)) ;
        }
        var_filewrapperTemplateFormalInputParameters.addAssign_operation (enumerator_59710.current_mFormalTemplateSelector (HERE), var_type, var_cppVarName, enumerator_59710.current_mFormalArgumentName (HERE), GALGAS_bool (true)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1505)) ;
        enumerator_59710.gotoNextObject () ;
      }
      GALGAS_templateInstructionListForGeneration var_templateInstructionListForGeneration = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1508)) ;
      GALGAS_templateAnalysisContext var_templateAnalysisContext = GALGAS_templateAnalysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_templateVariableMap  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1509)) ;
      {
      routine_templateInstructionListAnalysis (var_templateAnalysisContext, var_resultingInstructionList, var_templateInstructionListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1514)) ;
      }
      var_filewrapperTemplateListForGeneration.addAssign_operation (enumerator_58902.current_mFilewrapperTemplateName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1517)), var_filewrapperTemplateFormalInputParameters, var_templateInstructionListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1516)) ;
      enumerator_58902.gotoNextObject () ;
    }
    ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("filewrapper ").operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1524))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1524)), GALGAS_filewrapperDeclarationForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("filewrapper-").operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1527))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1527)), object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1528)), object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1529)), var_wrapperFileMap, var_wrapperDirectoryMap, var_filewrapperTemplateListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1525)), GALGAS_string::makeEmptyString ()  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1523)) ;
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_filewrapperDeclarationAST.mSlotID,
                                        categoryMethod_filewrapperDeclarationAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperDeclarationAST_semanticAnalysis (defineCategoryMethod_filewrapperDeclarationAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Overriding category method '@abstractCategoryMethodAST semanticAnalysis'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                       const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                       GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryMethodAST * object = (const cPtr_abstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1547)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1549)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1549)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1550))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1550)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1550))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1550)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1551)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1552))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1552)).operator_concat (GALGAS_string ("' is not an abstract class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1552))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1552)) ;
    }
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1555)) ;
  cEnumerator_formalParameterListAST enumerator_62299 (object->mAttribute_mAbstractCategoryMethodFormalParameterList, kEnumeration_up) ;
  while (enumerator_62299.hasCurrentObject ()) {
    var_formalParameterListForGeneration.addAssign_operation (enumerator_62299.current_mFormalSelector (HERE), enumerator_62299.current_mFormalArgumentPassingMode (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_62299.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1560)), enumerator_62299.current_mFormalArgumentName (HERE), enumerator_62299.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1562))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1557)) ;
    enumerator_62299.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("abstract extension method ").operator_concat (object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1567))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1567)), GALGAS_abstractCategoryMethodForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("method-").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1570))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1570)).operator_concat (GALGAS_string ("-")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1570)).operator_concat (object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1570))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1570)), var_selfType, object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1572)), var_formalParameterListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1568)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1566)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                        categoryMethod_abstractCategoryMethodAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryMethodAST_semanticAnalysis (defineCategoryMethod_abstractCategoryMethodAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Overriding category method '@categoryMethodAST semanticAnalysis'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_categoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryMethodAST * object = (const cPtr_categoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1587)) ;
  GALGAS_string var_selfObjectName ;
  GALGAS_string var_selfObjectAccessor ;
  GALGAS_bool var_implementedAsFunction ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1592)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1592)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_selfObjectName = GALGAS_string ("object") ;
    var_selfObjectAccessor = GALGAS_string ("object->") ;
    var_implementedAsFunction = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    var_selfObjectName = GALGAS_string ("inObject") ;
    var_selfObjectAccessor = GALGAS_string ("inObject.") ;
    var_implementedAsFunction = GALGAS_bool (true) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1602)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, var_selfObjectName, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 1609))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1604)) ;
  {
  GALGAS_typedAttributeList temp_1 ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1615)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1615)))).operator_or (GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1615)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1615)))) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1615)).boolEnum () ;
  if (kBoolTrue == test_2) {
    temp_1 = var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1616)) ;
  }else if (kBoolFalse == test_2) {
    temp_1 = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1617)) ;
  }
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mCategoryMethodFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1614)), temp_1, GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1619)), var_selfObjectAccessor, object->mAttribute_mCategoryMethodInstructionList, object->mAttribute_mEndOfMethodLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1611)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("extension method ").operator_concat (object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1628))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1628)), GALGAS_categoryMethodForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("method-").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1631))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1631)).operator_concat (GALGAS_string ("-")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1631)).operator_concat (object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1631))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1631)), var_selfType, object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1633)), var_implementedAsFunction, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1636)), var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1629)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1627)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_categoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                        categoryMethod_categoryMethodAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryMethodAST_semanticAnalysis (defineCategoryMethod_categoryMethodAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Overriding category method '@overridingCategoryMethodAST semanticAnalysis'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryMethodAST * object = (const cPtr_overridingCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1651)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1653)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1653)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1654))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1654)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1654))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1654)) ;
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1658)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1659)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1661)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1661)).isValid ()) {
    uint32_t variant_66226 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1661)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1661)).uintValue () ;
    bool loop_66226 = true ;
    while (loop_66226) {
      loop_66226 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1662)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1662)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1662)).isValid () ;
      if (loop_66226) {
        loop_66226 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1662)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1662)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1662)).boolValue () ;
      }
      if (loop_66226 && (0 == variant_66226)) {
        loop_66226 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("semanticAnalysis.gSemantics", 1661)) ;
      }
      if (loop_66226) {
        variant_66226 -- ;
        const enumGalgasBool test_2 = var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1663)).reader_hasKey (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1663)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1663)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_66535_0 ; // Joker input parameter
          GALGAS_bool joker_66588_0 ; // Joker input parameter
          GALGAS_string joker_66602_0 ; // Joker input parameter
          var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1665)).method_searchKey (object->mAttribute_mOverridingCategoryMethodName, joker_66535_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_66588_0, var_qualifier, joker_66602_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1665)) ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE ("semanticAnalysis.gSemantics", 1666)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1667)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1670)) ;
      }
    }
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_location location_5 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("this method is not declared by a super class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1673)) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1676)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, GALGAS_string ("object"), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 1683))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1678)) ;
  {
  GALGAS_typedAttributeList temp_6 ;
  const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1689)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1689)))).operator_or (GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1689)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1689)))) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1689)).boolEnum () ;
  if (kBoolTrue == test_7) {
    temp_6 = var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1690)) ;
  }else if (kBoolFalse == test_7) {
    temp_6 = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1691)) ;
  }
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mOverridingCategoryMethodFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1688)), temp_6, GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1693)), GALGAS_string ("object->"), object->mAttribute_mOverridingCategoryMethodInstructionList, object->mAttribute_mEndOfMethodLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1685)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryMethodName.reader_location (SOURCE_FILE ("semanticAnalysis.gSemantics", 1704)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1702)) ;
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("override extension method ").operator_concat (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1711))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1711)), GALGAS_overridingCategoryMethodForGeneration::constructor_new (GALGAS_bool (false), GALGAS_string ("method-").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1714))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1714)).operator_concat (GALGAS_string ("-")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1714)).operator_concat (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1714))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1714)), var_selfType, var_baseTypeName, object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1717)), var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1719)), var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1712)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1710)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                        categoryMethod_overridingCategoryMethodAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryMethodAST_semanticAnalysis (defineCategoryMethod_overridingCategoryMethodAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                 Overriding category method '@overridingAbstractCategoryMethodAST semanticAnalysis'                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                                 GALGAS_semanticDeclarationSortedListForGeneration & /* ioArgument_ioSemanticDeclarationListForGeneration */,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryMethodAST * object = (const cPtr_overridingAbstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1734)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1736)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1736)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1737))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1737)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1737))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1737)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1738)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1739))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1739)).operator_concat (GALGAS_string ("' is not an abstract class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1739))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1739)) ;
    }
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1743)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1744)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1746)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1746)).isValid ()) {
    uint32_t variant_69757 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1746)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1746)).uintValue () ;
    bool loop_69757 = true ;
    while (loop_69757) {
      loop_69757 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1747)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1747)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1747)).isValid () ;
      if (loop_69757) {
        loop_69757 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1747)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1747)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1747)).boolValue () ;
      }
      if (loop_69757 && (0 == variant_69757)) {
        loop_69757 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("semanticAnalysis.gSemantics", 1746)) ;
      }
      if (loop_69757) {
        variant_69757 -- ;
        const enumGalgasBool test_4 = var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1748)).reader_hasKey (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1748)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1748)).boolEnum () ;
        if (kBoolTrue == test_4) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_70066_0 ; // Joker input parameter
          GALGAS_bool joker_70119_0 ; // Joker input parameter
          GALGAS_string joker_70133_0 ; // Joker input parameter
          var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1750)).method_searchKey (object->mAttribute_mOverridingCategoryMethodName, joker_70066_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_70119_0, var_qualifier, joker_70133_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1750)) ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE ("semanticAnalysis.gSemantics", 1751)))).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1752)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1755)) ;
      }
    }
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    GALGAS_location location_7 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_7, GALGAS_string ("this getter is not declared by a super class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1758)) ;
  }
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 1761)) ;
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration ;
  {
  routine_buildLocalVariableMapAndSignature (constinArgument_inSemanticContext, object->mAttribute_mOverridingCategoryMethodFormalParameterList, var_variableMap, var_formalParameterListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1763)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryMethodName.reader_location (SOURCE_FILE ("semanticAnalysis.gSemantics", 1773)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1771)) ;
    }
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                        categoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryMethodAST_semanticAnalysis (defineCategoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Overriding category method '@abstractCategoryModifierAST semanticAnalysis'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryModifierAST * object = (const cPtr_abstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1788)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1790)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1790)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1791))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1791)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1791))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1791)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1792)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1793))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1793)).operator_concat (GALGAS_string ("' is not an abstract class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1793))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1793)) ;
    }
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1796)) ;
  cEnumerator_formalParameterListAST enumerator_72054 (object->mAttribute_mAbstractCategoryModifierFormalParameterList, kEnumeration_up) ;
  while (enumerator_72054.hasCurrentObject ()) {
    var_formalParameterListForGeneration.addAssign_operation (enumerator_72054.current_mFormalSelector (HERE), enumerator_72054.current_mFormalArgumentPassingMode (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_72054.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1801)), enumerator_72054.current_mFormalArgumentName (HERE), enumerator_72054.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1803))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1798)) ;
    enumerator_72054.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string (" abstract extension setter ").operator_concat (object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1808))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1808)), GALGAS_abstractCategoryModifierForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("setter-").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1811))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1811)).operator_concat (GALGAS_string ("-")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1811)).operator_concat (object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1811))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1811)), var_selfType, object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1813)), var_formalParameterListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1809)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1807)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                        categoryMethod_abstractCategoryModifierAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryModifierAST_semanticAnalysis (defineCategoryMethod_abstractCategoryModifierAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Overriding category method '@categoryModifierAST semanticAnalysis'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_categoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryModifierAST * object = (const cPtr_categoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1828)) ;
  GALGAS_string var_selfObjectName ;
  GALGAS_string var_selfObjectAccessor ;
  GALGAS_bool var_implementedAsFunction ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1833)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1833)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_selfObjectName = GALGAS_string ("object") ;
    var_selfObjectAccessor = GALGAS_string ("object->") ;
    var_implementedAsFunction = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    var_selfObjectName = GALGAS_string ("ioObject") ;
    var_selfObjectAccessor = GALGAS_string ("ioObject.") ;
    var_implementedAsFunction = GALGAS_bool (true) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1843)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, var_selfObjectName, var_selfType  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1845)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mCategoryModifierFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1855)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1856)), var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1857)), var_selfObjectAccessor, object->mAttribute_mCategoryModifierInstructionList, object->mAttribute_mEndOfModifierLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1852)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("extension setter ").operator_concat (object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1866))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1866)), GALGAS_categoryModifierForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("setter-").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1869))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1869)).operator_concat (GALGAS_string ("-")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1869)).operator_concat (object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1869))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1869)), var_selfType, object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1871)), var_implementedAsFunction, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1874)), var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1867)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1865)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_categoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                        categoryMethod_categoryModifierAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryModifierAST_semanticAnalysis (defineCategoryMethod_categoryModifierAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                    Overriding category method '@overridingCategoryModifierAST semanticAnalysis'                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                           const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                           const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                           GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryModifierAST * object = (const cPtr_overridingCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1889)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1891)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1891)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1892))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1892)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1892))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1892)) ;
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1896)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1897)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1899)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1899)).isValid ()) {
    uint32_t variant_75805 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1899)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1899)).uintValue () ;
    bool loop_75805 = true ;
    while (loop_75805) {
      loop_75805 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1900)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1900)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1900)).isValid () ;
      if (loop_75805) {
        loop_75805 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1900)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1900)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1900)).boolValue () ;
      }
      if (loop_75805 && (0 == variant_75805)) {
        loop_75805 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("semanticAnalysis.gSemantics", 1899)) ;
      }
      if (loop_75805) {
        variant_75805 -- ;
        const enumGalgasBool test_2 = var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1901)).reader_hasKey (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1901)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1901)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_76106_0 ; // Joker input parameter
          GALGAS_bool joker_76129_0 ; // Joker input parameter
          GALGAS_string joker_76143_0 ; // Joker input parameter
          var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1903)).method_searchKey (object->mAttribute_mOverridingCategoryModifierName, joker_76106_0, var_inheritedSignature, joker_76129_0, var_qualifier, joker_76143_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1903)) ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE ("semanticAnalysis.gSemantics", 1904)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1905)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1908)) ;
      }
    }
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_location location_5 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("this modifier is not declared by a super class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1911)) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1914)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, GALGAS_string ("object"), var_selfType  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1916)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mOverridingCategoryModifierFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1926)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1927)), var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1928)), GALGAS_string ("object->"), object->mAttribute_mOverridingCategoryModifierInstructionList, object->mAttribute_mEndOfModifierLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1923)) ;
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryModifierName.reader_location (SOURCE_FILE ("semanticAnalysis.gSemantics", 1939)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1937)) ;
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string (" overriding extension setter ").operator_concat (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1946))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1946)), GALGAS_overridingCategoryModifierForGeneration::constructor_new (GALGAS_bool (false), GALGAS_string ("setter-").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1949))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1949)).operator_concat (GALGAS_string ("-")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1949)).operator_concat (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1949))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1949)), var_selfType, var_baseTypeName, object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1952)), var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1954)), var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1947)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1945)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                        categoryMethod_overridingCategoryModifierAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryModifierAST_semanticAnalysis (defineCategoryMethod_overridingCategoryModifierAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                Overriding category method '@overridingAbstractCategoryModifierAST semanticAnalysis'                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                                   const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                                   GALGAS_semanticDeclarationSortedListForGeneration & /* ioArgument_ioSemanticDeclarationListForGeneration */,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryModifierAST * object = (const cPtr_overridingAbstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1969)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1971)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 1971)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1972))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1972)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1972))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1972)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1973)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1974))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1974)).operator_concat (GALGAS_string ("' is not an abstract class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1974))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1974)) ;
    }
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1978)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 1979)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1981)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1981)).isValid ()) {
    uint32_t variant_79124 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 1981)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1981)).uintValue () ;
    bool loop_79124 = true ;
    while (loop_79124) {
      loop_79124 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1982)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1982)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1982)).isValid () ;
      if (loop_79124) {
        loop_79124 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 1982)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 1982)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1982)).boolValue () ;
      }
      if (loop_79124 && (0 == variant_79124)) {
        loop_79124 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("semanticAnalysis.gSemantics", 1981)) ;
      }
      if (loop_79124) {
        variant_79124 -- ;
        const enumGalgasBool test_4 = var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1983)).reader_hasKey (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 1983)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1983)).boolEnum () ;
        if (kBoolTrue == test_4) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_79425_0 ; // Joker input parameter
          GALGAS_bool joker_79448_0 ; // Joker input parameter
          GALGAS_string joker_79462_0 ; // Joker input parameter
          var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1985)).method_searchKey (object->mAttribute_mOverridingCategoryModifierName, joker_79425_0, var_inheritedSignature, joker_79448_0, var_qualifier, joker_79462_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1985)) ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE ("semanticAnalysis.gSemantics", 1986)))).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1987)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1990)) ;
      }
    }
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    GALGAS_location location_7 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_7, GALGAS_string ("this modifier is not declared by a super class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1993)) ;
  }
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE ("semanticAnalysis.gSemantics", 1996)) ;
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration ;
  {
  routine_buildLocalVariableMapAndSignature (constinArgument_inSemanticContext, object->mAttribute_mOverridingCategoryModifierFormalParameterList, var_variableMap, var_formalParameterListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 1998)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryModifierName.reader_location (SOURCE_FILE ("semanticAnalysis.gSemantics", 2008)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2006)) ;
    }
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                        categoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryModifierAST_semanticAnalysis (defineCategoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Overriding category method '@abstractCategoryReaderAST semanticAnalysis'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                       const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                       GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryReaderAST * object = (const cPtr_abstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2023)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2025)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 2025)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2026))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2026)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2026))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2026)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2027)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2028))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2028)).operator_concat (GALGAS_string ("' is not an abstract class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2028))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2028)) ;
    }
  }
  GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 2031)) ;
  cEnumerator_formalInputParameterListAST enumerator_81387 (object->mAttribute_mAbstractCategoryReaderFormalInputParameterList, kEnumeration_up) ;
  while (enumerator_81387.hasCurrentObject ()) {
    var_formalParameterListForGeneration.addAssign_operation (enumerator_81387.current_mFormalSelector (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_81387.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2035)), enumerator_81387.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2036)), enumerator_81387.current_mFormalArgumentName (HERE), enumerator_81387.current_mIsConstant (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2033)) ;
    enumerator_81387.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("abstract extension getter ").operator_concat (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2043))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2043)), GALGAS_abstractCategoryReaderForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("getter-").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2046))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2046)).operator_concat (GALGAS_string ("-")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2046)).operator_concat (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2046))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2046)), var_selfType, object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2048)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAbstractCategoryReaderReturnedTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2049)), var_formalParameterListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2044)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2042)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                        categoryMethod_abstractCategoryReaderAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryReaderAST_semanticAnalysis (defineCategoryMethod_abstractCategoryReaderAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Overriding category method '@categoryReaderAST semanticAnalysis'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_categoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryReaderAST * object = (const cPtr_categoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2066)) ;
  GALGAS_string var_selfObjectName ;
  GALGAS_string var_selfObjectAccessor ;
  GALGAS_bool var_implementedAsFunction ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2071)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 2071)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_selfObjectName = GALGAS_string ("object") ;
    var_selfObjectAccessor = GALGAS_string ("object->") ;
    var_implementedAsFunction = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    var_selfObjectName = GALGAS_string ("inObject") ;
    var_selfObjectAccessor = GALGAS_string ("inObject.") ;
    var_implementedAsFunction = GALGAS_bool (true) ;
  }
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, var_selfObjectName, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 2086))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2081)) ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_returnVariableCppName ;
  GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  {
  GALGAS_typedAttributeList temp_1 ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2095)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 2095)))).operator_or (GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2095)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE ("semanticAnalysis.gSemantics", 2095)))) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2095)).operator_or (GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2095)).objectCompare (GALGAS_typeKindEnum::constructor_mapProxyType (SOURCE_FILE ("semanticAnalysis.gSemantics", 2095)))) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2095)).boolEnum () ;
  if (kBoolTrue == test_2) {
    temp_1 = var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2096)) ;
  }else if (kBoolFalse == test_2) {
    temp_1 = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 2097)) ;
  }
  routine_analyzeFunctionBody (var_analysisContext, object->mAttribute_mCategoryReaderFormalInputParameterList, temp_1, var_selfObjectAccessor, object->mAttribute_mCategoryReaderInstructionList, object->mAttribute_mCategoryReaderReturnedVariableName, object->mAttribute_mCategoryReaderReturnedTypeName, object->mAttribute_mEndOfReaderLocation, var_formalParameterListForGeneration, var_returnType, var_returnVariableCppName, var_semanticInstructionListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2092)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("extension getter ").operator_concat (object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2111))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2111)), GALGAS_categoryReaderForGeneration::constructor_new (GALGAS_bool (true), GALGAS_string ("getter-").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2114))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2114)).operator_concat (GALGAS_string ("-")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2114)).operator_concat (object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2114))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2114)), var_selfType, object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2116)), var_implementedAsFunction, var_returnType, var_returnVariableCppName, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2121)), var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2112)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2110)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_categoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                        categoryMethod_categoryReaderAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryReaderAST_semanticAnalysis (defineCategoryMethod_categoryReaderAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Overriding category method '@overridingCategoryReaderAST semanticAnalysis'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryReaderAST * object = (const cPtr_overridingCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2136)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2138)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 2138)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2139))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2139)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2139))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2139)) ;
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2143)) ;
  GALGAS_functionSignature var_inheritedSignature = GALGAS_functionSignature::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 2144)) ;
  GALGAS_unifiedTypeMapProxy var_inheritedReturnType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 2145)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 2147)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2147)).isValid ()) {
    uint32_t variant_85670 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 2147)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2147)).uintValue () ;
    bool loop_85670 = true ;
    while (loop_85670) {
      loop_85670 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 2148)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 2148)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2148)).isValid () ;
      if (loop_85670) {
        loop_85670 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 2148)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 2148)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2148)).boolValue () ;
      }
      if (loop_85670 && (0 == variant_85670)) {
        loop_85670 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("semanticAnalysis.gSemantics", 2147)) ;
      }
      if (loop_85670) {
        variant_85670 -- ;
        const enumGalgasBool test_2 = var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2149)).reader_hasKey (object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2149)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2149)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_85944_0 ; // Joker input parameter
          GALGAS_bool joker_86021_0 ; // Joker input parameter
          GALGAS_string joker_86098_0 ; // Joker input parameter
          var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2150)).method_searchKey (object->mAttribute_mOverridingCategoryReaderName, joker_85944_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_86021_0, var_inheritedReturnType, var_qualifier, joker_86098_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2150)) ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE ("semanticAnalysis.gSemantics", 2160)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2161)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2164)) ;
      }
    }
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_location location_5 (object->mAttribute_mOverridingCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("this getter is not declared by a super class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2167)) ;
  }
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, GALGAS_string ("object"), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 2175))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2170)) ;
  GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_returnVariableCppName ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  {
  GALGAS_typedAttributeList temp_6 ;
  const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2180)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 2180)))).operator_or (GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2180)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE ("semanticAnalysis.gSemantics", 2180)))) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2180)).boolEnum () ;
  if (kBoolTrue == test_7) {
    temp_6 = var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2181)) ;
  }else if (kBoolFalse == test_7) {
    temp_6 = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 2182)) ;
  }
  routine_analyzeFunctionBody (var_analysisContext, object->mAttribute_mOverridingCategoryReaderFormalInputParameterList, temp_6, GALGAS_string ("object->"), object->mAttribute_mOverridingCategoryReaderInstructionList, object->mAttribute_mOverridingCategoryReaderReturnedVariableName, object->mAttribute_mOverridingCategoryReaderReturnedTypeName, object->mAttribute_mEndOfReaderLocation, var_formalParameterListForGeneration, var_returnType, var_returnVariableCppName, var_semanticInstructionListForGeneration, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2177)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    {
    routine_checkReaderSignatures (var_formalParameterListForGeneration, var_returnType, object->mAttribute_mOverridingCategoryReaderName.reader_location (SOURCE_FILE ("semanticAnalysis.gSemantics", 2199)), var_inheritedSignature, var_inheritedReturnType, var_inheritedDeclarationLocation, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2196)) ;
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (GALGAS_string ("override extension getter ").operator_concat (object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2207))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2207)), GALGAS_overrideCategoryReaderForGeneration::constructor_new (GALGAS_bool (false), GALGAS_string ("getter-").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2210))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2210)).operator_concat (GALGAS_string ("-")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2210)).operator_concat (object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2210))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2210)), var_selfType, var_baseTypeName, object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2213)), var_returnType, var_returnVariableCppName, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2217)), var_semanticInstructionListForGeneration  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2208)), GALGAS_string ("~")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2206)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                        categoryMethod_overridingCategoryReaderAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryReaderAST_semanticAnalysis (defineCategoryMethod_overridingCategoryReaderAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                 Overriding category method '@overridingAbstractCategoryReaderAST semanticAnalysis'                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                                 GALGAS_semanticDeclarationSortedListForGeneration & /* ioArgument_ioSemanticDeclarationListForGeneration */,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryReaderAST * object = (const cPtr_overridingAbstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2232)) ;
  GALGAS_unifiedTypeMapProxy var_returnType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAbstractCategoryReaderReturnedTypeName, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2234)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2236)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE ("semanticAnalysis.gSemantics", 2236)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2237))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2237)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2237))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2237)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2238)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2239))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2239)).operator_concat (GALGAS_string ("' is not an abstract class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2239))  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2239)) ;
    }
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2243)) ;
  GALGAS_functionSignature var_inheritedSignature = GALGAS_functionSignature::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 2244)) ;
  GALGAS_unifiedTypeMapProxy var_inheritedReturnType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE ("semanticAnalysis.gSemantics", 2245)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 2247)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2247)).isValid ()) {
    uint32_t variant_89567 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE ("semanticAnalysis.gSemantics", 2247)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2247)).uintValue () ;
    bool loop_89567 = true ;
    while (loop_89567) {
      loop_89567 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 2248)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 2248)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2248)).isValid () ;
      if (loop_89567) {
        loop_89567 = var_superType.reader_isNull (SOURCE_FILE ("semanticAnalysis.gSemantics", 2248)).operator_not (SOURCE_FILE ("semanticAnalysis.gSemantics", 2248)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2248)).boolValue () ;
      }
      if (loop_89567 && (0 == variant_89567)) {
        loop_89567 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("semanticAnalysis.gSemantics", 2247)) ;
      }
      if (loop_89567) {
        variant_89567 -- ;
        const enumGalgasBool test_4 = var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2249)).reader_hasKey (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2249)) COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2249)).boolEnum () ;
        if (kBoolTrue == test_4) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_89872_0 ; // Joker input parameter
          GALGAS_bool joker_89949_0 ; // Joker input parameter
          GALGAS_string joker_90008_0 ; // Joker input parameter
          var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2251)).method_searchKey (object->mAttribute_mAbstractCategoryReaderName, joker_89872_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_89949_0, var_inheritedReturnType, var_qualifier, joker_90008_0, inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2251)) ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE ("semanticAnalysis.gSemantics", 2261)))).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2262)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2265)) ;
      }
    }
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    GALGAS_location location_7 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_7, GALGAS_string ("this getter is not declared by a super class")  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2268)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE ("semanticAnalysis.gSemantics", 2272)) ;
    cEnumerator_formalInputParameterListAST enumerator_90530 (object->mAttribute_mAbstractCategoryReaderFormalInputParameterList, kEnumeration_up) ;
    while (enumerator_90530.hasCurrentObject ()) {
      var_formalParameterListForGeneration.addAssign_operation (enumerator_90530.current_mFormalSelector (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_90530.current_mFormalArgumentTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2276)), enumerator_90530.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE ("semanticAnalysis.gSemantics", 2277)), enumerator_90530.current_mFormalArgumentName (HERE), enumerator_90530.current_mIsConstant (HERE)  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2274)) ;
      enumerator_90530.gotoNextObject () ;
    }
    {
    routine_checkReaderSignatures (var_formalParameterListForGeneration, var_returnType, object->mAttribute_mAbstractCategoryReaderName.reader_location (SOURCE_FILE ("semanticAnalysis.gSemantics", 2285)), var_inheritedSignature, var_inheritedReturnType, var_inheritedDeclarationLocation, inCompiler  COMMA_SOURCE_FILE ("semanticAnalysis.gSemantics", 2282)) ;
    }
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                        categoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryReaderAST_semanticAnalysis (defineCategoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2D_element::GALGAS_attributeIndexMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mAttributeTypeIndex () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2D_element::~ GALGAS_attributeIndexMap_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2D_element::GALGAS_attributeIndexMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                          const GALGAS_unifiedTypeMapProxy & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mAttributeTypeIndex (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2D_element GALGAS_attributeIndexMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_attributeIndexMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                              GALGAS_unifiedTypeMapProxy::constructor_null (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2D_element GALGAS_attributeIndexMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                          const GALGAS_unifiedTypeMapProxy & inOperand1 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_attributeIndexMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_attributeIndexMap_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_attributeIndexMap_2D_element::objectCompare (const GALGAS_attributeIndexMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeTypeIndex.objectCompare (inOperand.mAttribute_mAttributeTypeIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_attributeIndexMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeTypeIndex.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_attributeIndexMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAttributeTypeIndex.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_attributeIndexMap_2D_element::description (C_String & ioString,
                                                       const int32_t inIndentation) const {
  ioString << "<struct @attributeIndexMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeTypeIndex.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_attributeIndexMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_attributeIndexMap_2D_element::reader_mAttributeTypeIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeTypeIndex ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @attributeIndexMap-element type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeIndexMap_2D_element ("attributeIndexMap-element",
                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeIndexMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeIndexMap_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeIndexMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeIndexMap_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2D_element GALGAS_attributeIndexMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_attributeIndexMap_2D_element result ;
  const GALGAS_attributeIndexMap_2D_element * p = (const GALGAS_attributeIndexMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeIndexMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeIndexMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap_2D_element::GALGAS_insertMethodMap_2D_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap_2D_element::~ GALGAS_insertMethodMap_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap_2D_element::GALGAS_insertMethodMap_2D_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap_2D_element GALGAS_insertMethodMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_insertMethodMap_2D_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap_2D_element GALGAS_insertMethodMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_insertMethodMap_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_insertMethodMap_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_insertMethodMap_2D_element::objectCompare (const GALGAS_insertMethodMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_insertMethodMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_insertMethodMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_insertMethodMap_2D_element::description (C_String & ioString,
                                                     const int32_t inIndentation) const {
  ioString << "<struct @insertMethodMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_insertMethodMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @insertMethodMap-element type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_insertMethodMap_2D_element ("insertMethodMap-element",
                                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_insertMethodMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_insertMethodMap_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_insertMethodMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_insertMethodMap_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_insertMethodMap_2D_element GALGAS_insertMethodMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_insertMethodMap_2D_element result ;
  const GALGAS_insertMethodMap_2D_element * p = (const GALGAS_insertMethodMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_insertMethodMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("insertMethodMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap_2D_element::GALGAS_searchMethodMap_2D_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap_2D_element::~ GALGAS_searchMethodMap_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap_2D_element::GALGAS_searchMethodMap_2D_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap_2D_element GALGAS_searchMethodMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_searchMethodMap_2D_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap_2D_element GALGAS_searchMethodMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_searchMethodMap_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_searchMethodMap_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_searchMethodMap_2D_element::objectCompare (const GALGAS_searchMethodMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_searchMethodMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_searchMethodMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_searchMethodMap_2D_element::description (C_String & ioString,
                                                     const int32_t inIndentation) const {
  ioString << "<struct @searchMethodMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_searchMethodMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @searchMethodMap-element type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_searchMethodMap_2D_element ("searchMethodMap-element",
                                                   NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_searchMethodMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_searchMethodMap_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_searchMethodMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_searchMethodMap_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_searchMethodMap_2D_element GALGAS_searchMethodMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_searchMethodMap_2D_element result ;
  const GALGAS_searchMethodMap_2D_element * p = (const GALGAS_searchMethodMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_searchMethodMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("searchMethodMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2D_element::GALGAS_declaredMethodMap_2D_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2D_element::~ GALGAS_declaredMethodMap_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2D_element::GALGAS_declaredMethodMap_2D_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2D_element GALGAS_declaredMethodMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_declaredMethodMap_2D_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2D_element GALGAS_declaredMethodMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_declaredMethodMap_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_declaredMethodMap_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_declaredMethodMap_2D_element::objectCompare (const GALGAS_declaredMethodMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_declaredMethodMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredMethodMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_declaredMethodMap_2D_element::description (C_String & ioString,
                                                       const int32_t inIndentation) const {
  ioString << "<struct @declaredMethodMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_declaredMethodMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @declaredMethodMap-element type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredMethodMap_2D_element ("declaredMethodMap-element",
                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredMethodMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredMethodMap_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredMethodMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredMethodMap_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2D_element GALGAS_declaredMethodMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_declaredMethodMap_2D_element result ;
  const GALGAS_declaredMethodMap_2D_element * p = (const GALGAS_declaredMethodMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredMethodMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredMethodMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


