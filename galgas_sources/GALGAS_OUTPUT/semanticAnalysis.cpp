//-----------------------------------------------------------------------------*
//                                                                             *
//                        File 'semanticAnalysis.cpp'                          *
//                         Generated by version 2.6.0                          *
//                        july 12th, 2014, at 10h53'6"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"
#include "templateGrammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                       Routine 'checkMethodSignatures'                       *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_checkMethodSignatures (const GALGAS_formalParameterListForGeneration constinArgument_inTestedSignature,
                                    const GALGAS_location constinArgument_inErrorLocation,
                                    const GALGAS_formalParameterSignature constinArgument_inReferenceSignature,
                                    const GALGAS_location constinArgument_inReferenceLocation,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (37)).objectCompare (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (37)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("this method declares ").operator_concat (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (38)).reader_string (SOURCE_FILE_AT_LINE (38)) COMMA_SOURCE_FILE_AT_LINE (38)).operator_concat (GALGAS_string (" formal parameter(s), but overriden method declares ") COMMA_SOURCE_FILE_AT_LINE (38)).operator_concat (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (39)).reader_string (SOURCE_FILE_AT_LINE (39)) COMMA_SOURCE_FILE_AT_LINE (39)) COMMA_SOURCE_FILE_AT_LINE (38)) ;
    inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden method is declared here") COMMA_SOURCE_FILE_AT_LINE (41)) ;
  }else if (kBoolFalse == test_0) {
    cEnumerator_formalParameterSignature enumerator_2533 (constinArgument_inReferenceSignature, kEnumeration_up) ;
    cEnumerator_formalParameterListForGeneration enumerator_2559 (constinArgument_inTestedSignature, kEnumeration_up) ;
    while (enumerator_2533.hasCurrentObject () && enumerator_2559.hasCurrentObject ()) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_2533.current_mFormalArgumentPassingMode (HERE).objectCompare (enumerator_2559.current_mFormalArgumentPassingMode (HERE))).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_2559.current_mFormalArgumentName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_2559.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (45)) COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (GALGAS_string ("' formal parameter is declared as ") COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (categoryReader_formalArgumentMessage (enumerator_2559.current_mFormalArgumentPassingMode (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (45)).operator_concat (GALGAS_string (", but overriden method declares it as ") COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (categoryReader_formalArgumentMessage (enumerator_2533.current_mFormalArgumentPassingMode (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (47)) COMMA_SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (45)) ;
        inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden method is declared here") COMMA_SOURCE_FILE_AT_LINE (48)) ;
      }
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_2559.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (50)).objectCompare (enumerator_2533.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (50)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_2559.current_mFormalArgumentName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the '").operator_concat (enumerator_2559.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (51)) COMMA_SOURCE_FILE_AT_LINE (51)).operator_concat (GALGAS_string ("' formal parameter has the '@") COMMA_SOURCE_FILE_AT_LINE (51)).operator_concat (enumerator_2559.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (52)) COMMA_SOURCE_FILE_AT_LINE (51)).operator_concat (GALGAS_string ("' type, but overriden method declares with the '@") COMMA_SOURCE_FILE_AT_LINE (52)).operator_concat (enumerator_2533.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (53)) COMMA_SOURCE_FILE_AT_LINE (52)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (53)) COMMA_SOURCE_FILE_AT_LINE (51)) ;
        inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden method is declared here") COMMA_SOURCE_FILE_AT_LINE (54)) ;
      }
      enumerator_2533.gotoNextObject () ;
      enumerator_2559.gotoNextObject () ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                       Routine 'checkReaderSignatures'                       *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_checkReaderSignatures (const GALGAS_formalInputParameterListForGeneration constinArgument_inTestedSignature,
                                    const GALGAS_unifiedTypeMapProxy constinArgument_inReturnType,
                                    const GALGAS_location constinArgument_inErrorLocation,
                                    const GALGAS_unifiedTypeMapProxyAndParameterList constinArgument_inReferenceSignature,
                                    const GALGAS_unifiedTypeMapProxy constinArgument_inInheritedReturnType,
                                    const GALGAS_location constinArgument_inReferenceLocation,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inReturnType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (74)).objectCompare (constinArgument_inInheritedReturnType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (74)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("the return type is '@").operator_concat (constinArgument_inReturnType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (76)) COMMA_SOURCE_FILE_AT_LINE (75)).operator_concat (GALGAS_string ("', but overriden reader names '@") COMMA_SOURCE_FILE_AT_LINE (76)).operator_concat (constinArgument_inInheritedReturnType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (77)) COMMA_SOURCE_FILE_AT_LINE (76)).operator_concat (GALGAS_string ("' as return type") COMMA_SOURCE_FILE_AT_LINE (77)) COMMA_SOURCE_FILE_AT_LINE (75)) ;
    inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden reader is declared here") COMMA_SOURCE_FILE_AT_LINE (78)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (80)).objectCompare (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (80)))).boolEnum () ;
  if (kBoolTrue == test_1) {
    inCompiler->emitSemanticError (constinArgument_inErrorLocation, GALGAS_string ("this reader declares ").operator_concat (constinArgument_inTestedSignature.reader_length (SOURCE_FILE_AT_LINE (81)).reader_string (SOURCE_FILE_AT_LINE (81)) COMMA_SOURCE_FILE_AT_LINE (81)).operator_concat (GALGAS_string (" formal parameter(s), but overriden reader declares ") COMMA_SOURCE_FILE_AT_LINE (81)).operator_concat (constinArgument_inReferenceSignature.reader_length (SOURCE_FILE_AT_LINE (82)).reader_string (SOURCE_FILE_AT_LINE (82)) COMMA_SOURCE_FILE_AT_LINE (82)) COMMA_SOURCE_FILE_AT_LINE (81)) ;
    inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden reader is declared here") COMMA_SOURCE_FILE_AT_LINE (84)) ;
  }else if (kBoolFalse == test_1) {
    cEnumerator_unifiedTypeMapProxyAndParameterList enumerator_4829 (constinArgument_inReferenceSignature, kEnumeration_up) ;
    cEnumerator_formalInputParameterListForGeneration enumerator_4855 (constinArgument_inTestedSignature, kEnumeration_up) ;
    while (enumerator_4829.hasCurrentObject () && enumerator_4855.hasCurrentObject ()) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_4855.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (87)).objectCompare (enumerator_4829.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (87)))).boolEnum () ;
      if (kBoolTrue == test_2) {
        GALGAS_location location_3 (enumerator_4855.current_mFormalArgumentName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (enumerator_4855.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (88)) COMMA_SOURCE_FILE_AT_LINE (88)).operator_concat (GALGAS_string ("' formal parameter has the '@") COMMA_SOURCE_FILE_AT_LINE (88)).operator_concat (enumerator_4855.current_mFormalArgumentType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (89)) COMMA_SOURCE_FILE_AT_LINE (88)).operator_concat (GALGAS_string ("' type, but overriden reader declares with the '@") COMMA_SOURCE_FILE_AT_LINE (89)).operator_concat (enumerator_4829.current_mType (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (89)).operator_concat (GALGAS_string ("' type") COMMA_SOURCE_FILE_AT_LINE (90)) COMMA_SOURCE_FILE_AT_LINE (88)) ;
        inCompiler->emitSemanticError (constinArgument_inReferenceLocation, GALGAS_string ("overriden reader is declared here") COMMA_SOURCE_FILE_AT_LINE (91)) ;
      }
      enumerator_4829.gotoNextObject () ;
      enumerator_4855.gotoNextObject () ;
    }
  }
}


//-----------------------------------------------------------------------------*

cMapElement_attributeIndexMap::cMapElement_attributeIndexMap (const GALGAS_lstring & inKey,
                                                              const GALGAS_unifiedTypeMapProxy & in_mAttributeTypeIndex
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAttributeTypeIndex (in_mAttributeTypeIndex) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_attributeIndexMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeTypeIndex.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_attributeIndexMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_attributeIndexMap (mAttribute_lkey, mAttribute_mAttributeTypeIndex COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_attributeIndexMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeTypeIndex" ":" ;
  mAttribute_mAttributeTypeIndex.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_attributeIndexMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_attributeIndexMap * operand = (cMapElement_attributeIndexMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeTypeIndex.objectCompare (operand->mAttribute_mAttributeTypeIndex) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap::GALGAS_attributeIndexMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap::GALGAS_attributeIndexMap (const GALGAS_attributeIndexMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap & GALGAS_attributeIndexMap::operator = (const GALGAS_attributeIndexMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_attributeIndexMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::constructor_mapWithMapToOverride (const GALGAS_attributeIndexMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_attributeIndexMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_attributeIndexMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   GALGAS_unifiedTypeMapProxy inArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_attributeIndexMap * p = NULL ;
  macroMyNew (p, cMapElement_attributeIndexMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' attribute is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_attributeIndexMap_searchKey = "the '%K' attribute is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::method_searchKey (GALGAS_lstring inKey,
                                                 GALGAS_unifiedTypeMapProxy & outArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) performSearch (inKey,
                                                                                                     inCompiler,
                                                                                                     kSearchErrorMessage_attributeIndexMap_searchKey
                                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
    outArgument0 = p->mAttribute_mAttributeTypeIndex ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_attributeIndexMap::reader_mAttributeTypeIndexForKey (const GALGAS_string & inKey,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
    result = p->mAttribute_mAttributeTypeIndex ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeIndexMap::modifier_setMAttributeTypeIndexForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_attributeIndexMap * p = (cMapElement_attributeIndexMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
    p->mAttribute_mAttributeTypeIndex = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_attributeIndexMap * GALGAS_attributeIndexMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                    const GALGAS_string & inKey
                                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_attributeIndexMap * result = (cMapElement_attributeIndexMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_attributeIndexMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_attributeIndexMap * GALGAS_attributeIndexMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                       const GALGAS_lstring & inKey
                                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_attributeIndexMap_searchKey COMMA_THERE) ;
  cMapElement_attributeIndexMap * result = (cMapElement_attributeIndexMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_attributeIndexMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_attributeIndexMap::cEnumerator_attributeIndexMap (const GALGAS_attributeIndexMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element cEnumerator_attributeIndexMap::current (LOCATION_ARGS) const {
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
  return GALGAS_attributeIndexMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAttributeTypeIndex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_attributeIndexMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_attributeIndexMap::current_mAttributeTypeIndex (LOCATION_ARGS) const {
  const cMapElement_attributeIndexMap * p = (const cMapElement_attributeIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_attributeIndexMap) ;
  return p->mAttribute_mAttributeTypeIndex ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                           @attributeIndexMap type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeIndexMap ("attributeIndexMap",
                                          NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeIndexMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeIndexMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeIndexMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeIndexMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap GALGAS_attributeIndexMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_attributeIndexMap result ;
  const GALGAS_attributeIndexMap * p = (const GALGAS_attributeIndexMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeIndexMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeIndexMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                   Once function 'forbiddenKeysForStruct'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_forbiddenKeysForStruct (C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (233)) ;
  result_outResult.addAssign_operation (GALGAS_string ("description") COMMA_SOURCE_FILE_AT_LINE (234)) ;
  result_outResult.addAssign_operation (GALGAS_string ("object") COMMA_SOURCE_FILE_AT_LINE (235)) ;
//---
  return result_outResult ;
}



//-----------------------------------------------------------------------------*
//  Function implementation                                                    *
//-----------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_forbiddenKeysForStruct = false ;
static GALGAS_stringset gOnceFunctionResult_forbiddenKeysForStruct ;

//-----------------------------------------------------------------------------*

GALGAS_stringset function_forbiddenKeysForStruct (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_forbiddenKeysForStruct) {
    gOnceFunctionResult_forbiddenKeysForStruct = onceFunction_forbiddenKeysForStruct (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_forbiddenKeysForStruct = true ;
  }
  return gOnceFunctionResult_forbiddenKeysForStruct ;
}

//-----------------------------------------------------------------------------*

static void releaseOnceFunctionResult_forbiddenKeysForStruct (void) {
  gOnceFunctionResult_forbiddenKeysForStruct.drop () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_forbiddenKeysForStruct (NULL,
                                                                    releaseOnceFunctionResult_forbiddenKeysForStruct) ;

//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_forbiddenKeysForStruct [1] = {
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_forbiddenKeysForStruct (C_Compiler * inCompiler,
                                                                       const cObjectArray & /* inEffectiveParameterArray */,
                                                                       const GALGAS_location & /* inErrorLocation */
                                                                       COMMA_LOCATION_ARGS) {
  return function_forbiddenKeysForStruct (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_forbiddenKeysForStruct ("forbiddenKeysForStruct",
                                                                        functionWithGenericHeader_forbiddenKeysForStruct,
                                                                        & kTypeDescriptor_GALGAS_stringset,
                                                                        0,
                                                                        functionArgs_forbiddenKeysForStruct) ;

//-----------------------------------------------------------------------------*

cMapElement_constantIndexMap::cMapElement_constantIndexMap (const GALGAS_lstring & inKey,
                                                            const GALGAS_uint & in_mIndex
                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIndex (in_mIndex) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_constantIndexMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_constantIndexMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_constantIndexMap (mAttribute_lkey, mAttribute_mIndex COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_constantIndexMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIndex" ":" ;
  mAttribute_mIndex.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_constantIndexMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_constantIndexMap * operand = (cMapElement_constantIndexMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIndex.objectCompare (operand->mAttribute_mIndex) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap::GALGAS_constantIndexMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap::GALGAS_constantIndexMap (const GALGAS_constantIndexMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap & GALGAS_constantIndexMap::operator = (const GALGAS_constantIndexMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap GALGAS_constantIndexMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_constantIndexMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap GALGAS_constantIndexMap::constructor_mapWithMapToOverride (const GALGAS_constantIndexMap & inMapToOverride
                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_constantIndexMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap GALGAS_constantIndexMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_constantIndexMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_constantIndexMap::modifier_insertKey (GALGAS_lstring inKey,
                                                  GALGAS_uint inArgument0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_constantIndexMap * p = NULL ;
  macroMyNew (p, cMapElement_constantIndexMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' constant is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_constantIndexMap_searchKey = "the '%K' constant is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_constantIndexMap::method_searchKey (GALGAS_lstring inKey,
                                                GALGAS_uint & outArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  const cMapElement_constantIndexMap * p = (const cMapElement_constantIndexMap *) performSearch (inKey,
                                                                                                   inCompiler,
                                                                                                   kSearchErrorMessage_constantIndexMap_searchKey
                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_constantIndexMap) ;
    outArgument0 = p->mAttribute_mIndex ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_constantIndexMap::reader_mIndexForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_constantIndexMap * p = (const cMapElement_constantIndexMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constantIndexMap) ;
    result = p->mAttribute_mIndex ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_constantIndexMap::modifier_setMIndexForKey (GALGAS_uint inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constantIndexMap * p = (cMapElement_constantIndexMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_constantIndexMap) ;
    p->mAttribute_mIndex = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_constantIndexMap * GALGAS_constantIndexMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                  const GALGAS_string & inKey
                                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_constantIndexMap * result = (cMapElement_constantIndexMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_constantIndexMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_constantIndexMap * GALGAS_constantIndexMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                     const GALGAS_lstring & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_constantIndexMap_searchKey COMMA_THERE) ;
  cMapElement_constantIndexMap * result = (cMapElement_constantIndexMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_constantIndexMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_constantIndexMap::cEnumerator_constantIndexMap (const GALGAS_constantIndexMap & inEnumeratedObject,
                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element cEnumerator_constantIndexMap::current (LOCATION_ARGS) const {
  const cMapElement_constantIndexMap * p = (const cMapElement_constantIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constantIndexMap) ;
  return GALGAS_constantIndexMap_2E_element (p->mAttribute_lkey, p->mAttribute_mIndex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_constantIndexMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint cEnumerator_constantIndexMap::current_mIndex (LOCATION_ARGS) const {
  const cMapElement_constantIndexMap * p = (const cMapElement_constantIndexMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_constantIndexMap) ;
  return p->mAttribute_mIndex ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                           @constantIndexMap type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constantIndexMap ("constantIndexMap",
                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constantIndexMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constantIndexMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constantIndexMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constantIndexMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap GALGAS_constantIndexMap::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_constantIndexMap result ;
  const GALGAS_constantIndexMap * p = (const GALGAS_constantIndexMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constantIndexMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constantIndexMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_insertMethodMap::cMapElement_insertMethodMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_insertMethodMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_insertMethodMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_insertMethodMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_insertMethodMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_insertMethodMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_insertMethodMap * operand = (cMapElement_insertMethodMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap::GALGAS_insertMethodMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap::GALGAS_insertMethodMap (const GALGAS_insertMethodMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap & GALGAS_insertMethodMap::operator = (const GALGAS_insertMethodMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_insertMethodMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::constructor_mapWithMapToOverride (const GALGAS_insertMethodMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_insertMethodMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_insertMethodMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_insertMethodMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_insertMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_insertMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' insert modifier is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

cMapElement_insertMethodMap * GALGAS_insertMethodMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_insertMethodMap * result = (cMapElement_insertMethodMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_insertMethodMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_insertMethodMap::cEnumerator_insertMethodMap (const GALGAS_insertMethodMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element cEnumerator_insertMethodMap::current (LOCATION_ARGS) const {
  const cMapElement_insertMethodMap * p = (const cMapElement_insertMethodMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_insertMethodMap) ;
  return GALGAS_insertMethodMap_2E_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_insertMethodMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @insertMethodMap type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_insertMethodMap ("insertMethodMap",
                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_insertMethodMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_insertMethodMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_insertMethodMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_insertMethodMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap GALGAS_insertMethodMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_insertMethodMap result ;
  const GALGAS_insertMethodMap * p = (const GALGAS_insertMethodMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_insertMethodMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("insertMethodMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_searchMethodMap::cMapElement_searchMethodMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_searchMethodMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_searchMethodMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_searchMethodMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_searchMethodMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_searchMethodMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_searchMethodMap * operand = (cMapElement_searchMethodMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap::GALGAS_searchMethodMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap::GALGAS_searchMethodMap (const GALGAS_searchMethodMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap & GALGAS_searchMethodMap::operator = (const GALGAS_searchMethodMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_searchMethodMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::constructor_mapWithMapToOverride (const GALGAS_searchMethodMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_searchMethodMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_searchMethodMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_searchMethodMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_searchMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_searchMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' search method is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

cMapElement_searchMethodMap * GALGAS_searchMethodMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_searchMethodMap * result = (cMapElement_searchMethodMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_searchMethodMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_searchMethodMap::cEnumerator_searchMethodMap (const GALGAS_searchMethodMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element cEnumerator_searchMethodMap::current (LOCATION_ARGS) const {
  const cMapElement_searchMethodMap * p = (const cMapElement_searchMethodMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_searchMethodMap) ;
  return GALGAS_searchMethodMap_2E_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_searchMethodMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @searchMethodMap type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_searchMethodMap ("searchMethodMap",
                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_searchMethodMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_searchMethodMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_searchMethodMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_searchMethodMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap GALGAS_searchMethodMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_searchMethodMap result ;
  const GALGAS_searchMethodMap * p = (const GALGAS_searchMethodMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_searchMethodMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("searchMethodMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                     Routine 'check_K_escapeCharacters'                      *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_check_5F_K_5F_escapeCharacters (GALGAS_lstring inArgument_inString,
                                             C_Compiler * inCompiler
                                             COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_stringlist enumerator_17230 (inArgument_inString.reader_string (SOURCE_FILE_AT_LINE (433)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (433)), kEnumeration_up) ;
  while (enumerator_17230.hasCurrentObject ()) {
    GALGAS_stringlist var_explodedArray = enumerator_17230.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (434)) ;
    {
    GALGAS_string joker_17342_0 ; // Joker input parameter
    var_explodedArray.modifier_popFirst (joker_17342_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (435)) ;
    }
    cEnumerator_stringlist enumerator_17372 (var_explodedArray, kEnumeration_up) ;
    while (enumerator_17372.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, enumerator_17372.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (437)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_char var_c = enumerator_17372.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (438)) ;
        const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (inArgument_inString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("only '%K' and '%%' escape sequences are allowed in this error message") COMMA_SOURCE_FILE_AT_LINE (440)) ;
        }
      }
      enumerator_17372.gotoNextObject () ;
    }
    enumerator_17230.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                    Routine 'check_K_L_escapeCharacters'                     *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_check_5F_K_5F_L_5F_escapeCharacters (GALGAS_lstring inArgument_inString,
                                                  C_Compiler * inCompiler
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_stringlist enumerator_17919 (inArgument_inString.reader_string (SOURCE_FILE_AT_LINE (453)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (453)), kEnumeration_up) ;
  while (enumerator_17919.hasCurrentObject ()) {
    GALGAS_stringlist var_explodedArray = enumerator_17919.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (454)) ;
    {
    GALGAS_string joker_18031_0 ; // Joker input parameter
    var_explodedArray.modifier_popFirst (joker_18031_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (455)) ;
    }
    cEnumerator_stringlist enumerator_18061 (var_explodedArray, kEnumeration_up) ;
    while (enumerator_18061.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, enumerator_18061.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (457)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_0) {
        GALGAS_char var_c = enumerator_18061.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (458)) ;
        const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).operator_and (GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (76)))) COMMA_SOURCE_FILE_AT_LINE (459)).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (inArgument_inString.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("only '%K', '%L' and '%%' escape sequences are allowed in this error message") COMMA_SOURCE_FILE_AT_LINE (460)) ;
        }
      }
      enumerator_18061.gotoNextObject () ;
    }
    enumerator_17919.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                     Once function 'forbiddenKeysForMap'                     *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_forbiddenKeysForMap (C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (470)) ;
  result_outResult.addAssign_operation (GALGAS_string ("lkey") COMMA_SOURCE_FILE_AT_LINE (471)) ;
  result_outResult.addAssign_operation (GALGAS_string ("description") COMMA_SOURCE_FILE_AT_LINE (472)) ;
  result_outResult.addAssign_operation (GALGAS_string ("object") COMMA_SOURCE_FILE_AT_LINE (473)) ;
//---
  return result_outResult ;
}



//-----------------------------------------------------------------------------*
//  Function implementation                                                    *
//-----------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_forbiddenKeysForMap = false ;
static GALGAS_stringset gOnceFunctionResult_forbiddenKeysForMap ;

//-----------------------------------------------------------------------------*

GALGAS_stringset function_forbiddenKeysForMap (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_forbiddenKeysForMap) {
    gOnceFunctionResult_forbiddenKeysForMap = onceFunction_forbiddenKeysForMap (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_forbiddenKeysForMap = true ;
  }
  return gOnceFunctionResult_forbiddenKeysForMap ;
}

//-----------------------------------------------------------------------------*

static void releaseOnceFunctionResult_forbiddenKeysForMap (void) {
  gOnceFunctionResult_forbiddenKeysForMap.drop () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_forbiddenKeysForMap (NULL,
                                                                 releaseOnceFunctionResult_forbiddenKeysForMap) ;

//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_forbiddenKeysForMap [1] = {
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_forbiddenKeysForMap (C_Compiler * inCompiler,
                                                                    const cObjectArray & /* inEffectiveParameterArray */,
                                                                    const GALGAS_location & /* inErrorLocation */
                                                                    COMMA_LOCATION_ARGS) {
  return function_forbiddenKeysForMap (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_forbiddenKeysForMap ("forbiddenKeysForMap",
                                                                     functionWithGenericHeader_forbiddenKeysForMap,
                                                                     & kTypeDescriptor_GALGAS_stringset,
                                                                     0,
                                                                     functionArgs_forbiddenKeysForMap) ;

//-----------------------------------------------------------------------------*

cMapElement_declaredMethodMap::cMapElement_declaredMethodMap (const GALGAS_lstring & inKey
                                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_declaredMethodMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_declaredMethodMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_declaredMethodMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_declaredMethodMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_declaredMethodMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_declaredMethodMap * operand = (cMapElement_declaredMethodMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap::GALGAS_declaredMethodMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap::GALGAS_declaredMethodMap (const GALGAS_declaredMethodMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap & GALGAS_declaredMethodMap::operator = (const GALGAS_declaredMethodMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_declaredMethodMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::constructor_mapWithMapToOverride (const GALGAS_declaredMethodMap & inMapToOverride
                                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_declaredMethodMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_declaredMethodMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_declaredMethodMap::modifier_insertKey (GALGAS_lstring inKey,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_declaredMethodMap * p = NULL ;
  macroMyNew (p, cMapElement_declaredMethodMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' method is already declared in %L for this class" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

cMapElement_declaredMethodMap * GALGAS_declaredMethodMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                    const GALGAS_string & inKey
                                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_declaredMethodMap * result = (cMapElement_declaredMethodMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_declaredMethodMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_declaredMethodMap::cEnumerator_declaredMethodMap (const GALGAS_declaredMethodMap & inEnumeratedObject,
                                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element cEnumerator_declaredMethodMap::current (LOCATION_ARGS) const {
  const cMapElement_declaredMethodMap * p = (const cMapElement_declaredMethodMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_declaredMethodMap) ;
  return GALGAS_declaredMethodMap_2E_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_declaredMethodMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                           @declaredMethodMap type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredMethodMap ("declaredMethodMap",
                                          NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredMethodMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredMethodMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredMethodMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredMethodMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap GALGAS_declaredMethodMap::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_declaredMethodMap result ;
  const GALGAS_declaredMethodMap * p = (const GALGAS_declaredMethodMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredMethodMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredMethodMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                 Routine 'buildLocalVariableMapAndSignature'                 *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildLocalVariableMapAndSignature (const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                const GALGAS_formalParameterListAST constinArgument_inRoutineSignatureAST,
                                                GALGAS_variableMap & ioArgument_ioVariableMap,
                                                GALGAS_formalParameterListForGeneration & outArgument_outRoutineSignature,
                                                C_Compiler * inCompiler
                                                COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outRoutineSignature.drop () ; // Release 'out' argument
  outArgument_outRoutineSignature = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (962)) ;
  cEnumerator_formalParameterListAST enumerator_38076 (constinArgument_inRoutineSignatureAST, kEnumeration_up) ;
  while (enumerator_38076.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_38076.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (964)) ;
    GALGAS_string var_formalArgumentCppName ;
    if (enumerator_38076.current_mFormalArgumentPassingMode (HERE).isValid ()) {
      switch (enumerator_38076.current_mFormalArgumentPassingMode (HERE).enumValue ()) {
      case GALGAS_formalArgumentPassingModeAST::kNotBuilt:
        break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentIn: {
        var_formalArgumentCppName = GALGAS_string ("inArgument_").operator_concat (enumerator_38076.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (968)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (968)) COMMA_SOURCE_FILE_AT_LINE (968)) ;
        const enumGalgasBool test_0 = enumerator_38076.current_mIsUnused (HERE).boolEnum () ;
        if (kBoolTrue == test_0) {
          {
          ioArgument_ioVariableMap.modifier_insertInputFormalArgumentDeclaredAsUnused (enumerator_38076.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (970)) ;
          }
        }else if (kBoolFalse == test_0) {
          {
          ioArgument_ioVariableMap.modifier_insertInputFormalArgument (enumerator_38076.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (972)) ;
          }
        }
        } break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentOut: {
        var_formalArgumentCppName = GALGAS_string ("outArgument_").operator_concat (enumerator_38076.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (975)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (975)) COMMA_SOURCE_FILE_AT_LINE (975)) ;
        {
        ioArgument_ioVariableMap.modifier_insertOutputFormalArgument (enumerator_38076.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (976)) ;
        }
        } break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentInOut: {
        var_formalArgumentCppName = GALGAS_string ("ioArgument_").operator_concat (enumerator_38076.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (978)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (978)) COMMA_SOURCE_FILE_AT_LINE (978)) ;
        const enumGalgasBool test_1 = enumerator_38076.current_mIsUnused (HERE).boolEnum () ;
        if (kBoolTrue == test_1) {
          {
          ioArgument_ioVariableMap.modifier_insertInputOutputFormalArgumentDeclaredAsUnused (enumerator_38076.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (980)) ;
          }
        }else if (kBoolFalse == test_1) {
          {
          ioArgument_ioVariableMap.modifier_insertInputOutputFormalArgument (enumerator_38076.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (982)) ;
          }
        }
        } break ;
      case GALGAS_formalArgumentPassingModeAST::kEnum_argumentConstantIn: {
        var_formalArgumentCppName = GALGAS_string ("constinArgument_").operator_concat (enumerator_38076.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (985)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (985)) COMMA_SOURCE_FILE_AT_LINE (985)) ;
        const enumGalgasBool test_2 = enumerator_38076.current_mIsUnused (HERE).boolEnum () ;
        if (kBoolTrue == test_2) {
          {
          ioArgument_ioVariableMap.modifier_insertConstantInputFormalArgumentDeclaredAsUnused (enumerator_38076.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (987)) ;
          }
        }else if (kBoolFalse == test_2) {
          {
          ioArgument_ioVariableMap.modifier_insertConstantInputFormalArgument (enumerator_38076.current_mFormalArgumentName (HERE), var_type, var_formalArgumentCppName, var_formalArgumentCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (989)) ;
          }
        }
        } break ;
      }
    }
    outArgument_outRoutineSignature.addAssign_operation (enumerator_38076.current_mFormalArgumentPassingMode (HERE), var_type, enumerator_38076.current_mFormalArgumentName (HERE), var_formalArgumentCppName COMMA_SOURCE_FILE_AT_LINE (992)) ;
    enumerator_38076.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'analyzeRoutineBody'                         *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_analyzeRoutineBody (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                 const GALGAS_formalParameterListAST constinArgument_inRoutineSignatureAST,
                                 const GALGAS_localConstantList constinArgument_inLocalConstantList,
                                 const GALGAS_typedAttributeList constinArgument_inNonMutableTypedAttributeList,
                                 const GALGAS_typedAttributeList constinArgument_inMutableTypedAttributeList,
                                 const GALGAS_string constinArgument_inAttributeVariableNamePrefix,
                                 const GALGAS_semanticInstructionListAST constinArgument_inInstructionList,
                                 const GALGAS_location constinArgument_inEndOfMethodLocation,
                                 GALGAS_semanticInstructionListForGeneration & outArgument_outSemanticInstructionListForGeneration,
                                 GALGAS_formalParameterListForGeneration & outArgument_outRoutineSignature,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticInstructionListForGeneration.drop () ; // Release 'out' argument
  outArgument_outRoutineSignature.drop () ; // Release 'out' argument
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1010)) ;
  cEnumerator_localConstantList enumerator_40767 (constinArgument_inLocalConstantList, kEnumeration_up) ;
  while (enumerator_40767.hasCurrentObject ()) {
    const enumGalgasBool test_0 = enumerator_40767.current_mNoWarningIfUnused (HERE).boolEnum () ;
    if (kBoolTrue == test_0) {
      {
      var_variableMap.modifier_insertUsedLocalConstant (enumerator_40767.current_mName (HERE), enumerator_40767.current_mType (HERE), enumerator_40767.current_mCppName (HERE), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1014)) ;
      }
    }else if (kBoolFalse == test_0) {
      {
      var_variableMap.modifier_insertLocalConstant (enumerator_40767.current_mName (HERE), enumerator_40767.current_mType (HERE), enumerator_40767.current_mCppName (HERE), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1016)) ;
      }
    }
    enumerator_40767.gotoNextObject () ;
  }
  cEnumerator_typedAttributeList enumerator_41141 (constinArgument_inNonMutableTypedAttributeList, kEnumeration_up) ;
  while (enumerator_41141.hasCurrentObject ()) {
    {
    var_variableMap.modifier_insertNonMutableAttribute (enumerator_41141.current_mAttributeName (HERE), enumerator_41141.current_mAttributeTypeProxy (HERE), constinArgument_inAttributeVariableNamePrefix.operator_concat (GALGAS_string ("mAttribute_") COMMA_SOURCE_FILE_AT_LINE (1024)).operator_concat (enumerator_41141.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1024)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1024)) COMMA_SOURCE_FILE_AT_LINE (1024)), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1021)) ;
    }
    enumerator_41141.gotoNextObject () ;
  }
  cEnumerator_typedAttributeList enumerator_41489 (constinArgument_inMutableTypedAttributeList, kEnumeration_up) ;
  while (enumerator_41489.hasCurrentObject ()) {
    {
    var_variableMap.modifier_insertMutableAttribute (enumerator_41489.current_mAttributeName (HERE), enumerator_41489.current_mAttributeTypeProxy (HERE), constinArgument_inAttributeVariableNamePrefix.operator_concat (GALGAS_string ("mAttribute_") COMMA_SOURCE_FILE_AT_LINE (1033)).operator_concat (enumerator_41489.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1033)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1033)) COMMA_SOURCE_FILE_AT_LINE (1033)), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1030)) ;
    }
    enumerator_41489.gotoNextObject () ;
  }
  {
  routine_buildLocalVariableMapAndSignature (constinArgument_inAnalysisContext.mAttribute_mSemanticContext, constinArgument_inRoutineSignatureAST, var_variableMap, outArgument_outRoutineSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (1038)) ;
  }
  outArgument_outSemanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1045)) ;
  cEnumerator_semanticInstructionListAST enumerator_42092 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_42092.hasCurrentObject ()) {
    callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) enumerator_42092.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, outArgument_outSemanticInstructionListForGeneration, var_variableMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1047)) ;
    enumerator_42092.gotoNextObject () ;
  }
  var_variableMap.method_checkAutomatonStates (constinArgument_inEndOfMethodLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1054)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'analyzeFunctionBody'                        *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_analyzeFunctionBody (const GALGAS_analysisContext constinArgument_inAnalysisContext,
                                  const GALGAS_formalInputParameterListAST constinArgument_inFunctionSignature,
                                  const GALGAS_typedAttributeList constinArgument_inTypedAttributeList,
                                  const GALGAS_string constinArgument_inAttributeVariableNamePrefix,
                                  const GALGAS_semanticInstructionListAST constinArgument_inInstructionList,
                                  const GALGAS_lstring constinArgument_inReturnVariableName,
                                  const GALGAS_lstring constinArgument_inResultTypeName,
                                  const GALGAS_location constinArgument_inEndOfFunctionLocation,
                                  GALGAS_formalInputParameterListForGeneration & outArgument_outSignatureForGeneration,
                                  GALGAS_unifiedTypeMapProxy & outArgument_outReturnedType,
                                  GALGAS_string & outArgument_outResultVariableCppName,
                                  GALGAS_semanticInstructionListForGeneration & outArgument_outSemanticInstructionListForGeneration,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSignatureForGeneration.drop () ; // Release 'out' argument
  outArgument_outReturnedType.drop () ; // Release 'out' argument
  outArgument_outResultVariableCppName.drop () ; // Release 'out' argument
  outArgument_outSemanticInstructionListForGeneration.drop () ; // Release 'out' argument
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1269)) ;
  cEnumerator_typedAttributeList enumerator_49710 (constinArgument_inTypedAttributeList, kEnumeration_up) ;
  while (enumerator_49710.hasCurrentObject ()) {
    {
    var_variableMap.modifier_insertNonMutableAttribute (enumerator_49710.current_mAttributeName (HERE), enumerator_49710.current_mAttributeTypeProxy (HERE), constinArgument_inAttributeVariableNamePrefix.operator_concat (GALGAS_string ("mAttribute_") COMMA_SOURCE_FILE_AT_LINE (1275)).operator_concat (enumerator_49710.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1275)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1275)) COMMA_SOURCE_FILE_AT_LINE (1275)), constinArgument_inAnalysisContext.mAttribute_mSelfObjectCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1272)) ;
    }
    enumerator_49710.gotoNextObject () ;
  }
  outArgument_outSignatureForGeneration = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1280)) ;
  cEnumerator_formalInputParameterListAST enumerator_50124 (constinArgument_inFunctionSignature, kEnumeration_up) ;
  while (enumerator_50124.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_parameterType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, enumerator_50124.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1282)) ;
    const enumGalgasBool test_0 = enumerator_50124.current_mIsConstant (HERE).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_cppName = GALGAS_string ("constinArgument_").operator_concat (enumerator_50124.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1284)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1284)) COMMA_SOURCE_FILE_AT_LINE (1284)) ;
      outArgument_outSignatureForGeneration.addAssign_operation (var_parameterType, var_cppName, enumerator_50124.current_mFormalArgumentName (HERE), enumerator_50124.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (1285)) ;
      const enumGalgasBool test_1 = enumerator_50124.current_mIsUnused (HERE).boolEnum () ;
      if (kBoolTrue == test_1) {
        {
        var_variableMap.modifier_insertConstantInputFormalArgumentDeclaredAsUnused (enumerator_50124.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1292)) ;
        }
      }else if (kBoolFalse == test_1) {
        {
        var_variableMap.modifier_insertConstantInputFormalArgument (enumerator_50124.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1294)) ;
        }
      }
    }else if (kBoolFalse == test_0) {
      GALGAS_string var_cppName = GALGAS_string ("inArgument_").operator_concat (enumerator_50124.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1297)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1297)) COMMA_SOURCE_FILE_AT_LINE (1297)) ;
      outArgument_outSignatureForGeneration.addAssign_operation (var_parameterType, var_cppName, enumerator_50124.current_mFormalArgumentName (HERE), enumerator_50124.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (1298)) ;
      const enumGalgasBool test_2 = enumerator_50124.current_mIsUnused (HERE).boolEnum () ;
      if (kBoolTrue == test_2) {
        {
        var_variableMap.modifier_insertInputFormalArgumentDeclaredAsUnused (enumerator_50124.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1305)) ;
        }
      }else if (kBoolFalse == test_2) {
        {
        var_variableMap.modifier_insertInputFormalArgument (enumerator_50124.current_mFormalArgumentName (HERE), var_parameterType, var_cppName, var_cppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1307)) ;
        }
      }
    }
    enumerator_50124.gotoNextObject () ;
  }
  outArgument_outReturnedType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inAnalysisContext.mAttribute_mSemanticContext.mAttribute_mTypeMap, constinArgument_inResultTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1312)) ;
  outArgument_outResultVariableCppName = GALGAS_string ("result_").operator_concat (constinArgument_inReturnVariableName.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1313)) COMMA_SOURCE_FILE_AT_LINE (1313)) ;
  {
  var_variableMap.modifier_insertOutputFormalArgument (constinArgument_inReturnVariableName, outArgument_outReturnedType, outArgument_outResultVariableCppName, outArgument_outResultVariableCppName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1314)) ;
  }
  outArgument_outSemanticInstructionListForGeneration = GALGAS_semanticInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1316)) ;
  cEnumerator_semanticInstructionListAST enumerator_51910 (constinArgument_inInstructionList, kEnumeration_up) ;
  while (enumerator_51910.hasCurrentObject ()) {
    callCategoryMethod_analyzeSemanticInstruction ((const cPtr_semanticInstructionAST *) enumerator_51910.current_mInstruction (HERE).ptr (), constinArgument_inAnalysisContext, outArgument_outSemanticInstructionListForGeneration, var_variableMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1318)) ;
    enumerator_51910.gotoNextObject () ;
  }
  var_variableMap.method_checkAutomatonStates (constinArgument_inEndOfFunctionLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1325)) ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                       Function 'buildPredefinedTypes'                       *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_predefinedTypes function_buildPredefinedTypes (const GALGAS_semanticContext & constinArgument_inSemanticContext,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_predefinedTypes result_outPredefinedTypes ; // Returned variable
  result_outPredefinedTypes = GALGAS_predefinedTypes::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("location"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2256)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2256)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("bool"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2257)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2257)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("char"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2258)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2258)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("string"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2259)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2259)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("uint"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2260)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2260)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("sint"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2261)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2261)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("uint64"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2262)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2262)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("sint64"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2263)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2263)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("double"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2264)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2264)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lbool"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2265)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2265)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lchar"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2266)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2266)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lstring"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2267)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2267)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("luint"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2268)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2268)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lsint"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2269)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2269)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("luint64"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2270)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2270)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("lsint64"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2271)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2271)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (GALGAS_string ("ldouble"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2272)), inCompiler COMMA_SOURCE_FILE_AT_LINE (2272)) COMMA_SOURCE_FILE_AT_LINE (2255)) ;
//---
  return result_outPredefinedTypes ;
}


//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_buildPredefinedTypes [2] = {
  & kTypeDescriptor_GALGAS_semanticContext,
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_buildPredefinedTypes (C_Compiler * inCompiler,
                                                                     const cObjectArray & inEffectiveParameterArray,
                                                                     const GALGAS_location & /* §§ inErrorLocation */
                                                                     COMMA_LOCATION_ARGS) {
  const GALGAS_semanticContext operand0 = GALGAS_semanticContext::extractObject (inEffectiveParameterArray.objectAtIndex (0 COMMA_HERE),
                                                                                 inCompiler
                                                                                 COMMA_THERE) ;
  return function_buildPredefinedTypes (operand0,
                                        inCompiler
                                        COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_buildPredefinedTypes ("buildPredefinedTypes",
                                                                      functionWithGenericHeader_buildPredefinedTypes,
                                                                      & kTypeDescriptor_GALGAS_predefinedTypes,
                                                                      1,
                                                                      functionArgs_buildPredefinedTypes) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//                      Routine 'performSemanticAnalysis'                      *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_performSemanticAnalysis (const GALGAS_semanticDeclarationListAST constinArgument_inDeclarationList,
                                      const GALGAS_semanticContext constinArgument_inSemanticContext,
                                      GALGAS_semanticDeclarationSortedListForGeneration & outArgument_outDecoratedDeclarationListForGeneration,
                                      C_Compiler * inCompiler
                                      COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outDecoratedDeclarationListForGeneration.drop () ; // Release 'out' argument
  cEnumerator_lstringlist enumerator_90616 (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_unsolvedProxyList (SOURCE_FILE_AT_LINE (2288)), kEnumeration_up) ;
  while (enumerator_90616.hasCurrentObject ()) {
    GALGAS_location location_0 (enumerator_90616.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_0, GALGAS_string ("the '").operator_concat (enumerator_90616.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2289)) COMMA_SOURCE_FILE_AT_LINE (2289)).operator_concat (GALGAS_string ("' type is undefined") COMMA_SOURCE_FILE_AT_LINE (2289)) COMMA_SOURCE_FILE_AT_LINE (2289)) ;
    enumerator_90616.gotoNextObject () ;
  }
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_90870 (constinArgument_inDeclarationList, kEnumeration_up) ;
  while (enumerator_90870.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_90870.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE_AT_LINE (2294)) ;
    enumerator_90870.gotoNextObject () ;
  }
  outArgument_outDecoratedDeclarationListForGeneration = GALGAS_semanticDeclarationSortedListForGeneration::constructor_emptySortedList (SOURCE_FILE_AT_LINE (2297)) ;
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (2298)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_predefinedTypes var_predefinedTypes = function_buildPredefinedTypes (constinArgument_inSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (2299)) ;
    cEnumerator_semanticDeclarationListAST enumerator_91240 (var_semanticDeclarationList, kEnumeration_up) ;
    while (enumerator_91240.hasCurrentObject ()) {
      callCategoryMethod_semanticAnalysis ((const cPtr_semanticDeclarationAST *) enumerator_91240.current_mSemanticDeclaration (HERE).ptr (), constinArgument_inSemanticContext, var_predefinedTypes, outArgument_outDecoratedDeclarationListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (2301)) ;
      enumerator_91240.gotoNextObject () ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//     Abstract category method '@semanticDeclarationAST semanticAnalysis'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_semanticAnalysis> gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_semanticAnalysis (const int32_t inClassIndex,
                                           categoryMethodSignature_semanticDeclarationAST_semanticAnalysis inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_semanticAnalysis (void) {
  gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_semanticAnalysis (NULL,
                                                                    freeCategoryMethod_semanticDeclarationAST_semanticAnalysis) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                          const GALGAS_semanticContext constin_inSemanticContext,
                                          const GALGAS_predefinedTypes constin_inPredefinedTypes,
                                          GALGAS_semanticDeclarationSortedListForGeneration & io_ioSemanticDeclarationListForGeneration,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_semanticAnalysis f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_semanticAnalysis.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inSemanticContext, constin_inPredefinedTypes, io_ioSemanticDeclarationListForGeneration, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category method '@predefinedTypeAST semanticAnalysis'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_predefinedTypeAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_predefinedTypeAST * object = (const cPtr_predefinedTypeAST *) inObject ;
  macroValidSharedObject (object, cPtr_predefinedTypeAST) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_primitiveTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mPredefinedTypeName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (119)), inCompiler COMMA_SOURCE_FILE_AT_LINE (119)), object->mAttribute_mPredefinedTypeName, object->mAttribute_mKind COMMA_SOURCE_FILE_AT_LINE (118)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (116)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_predefinedTypeAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_predefinedTypeAST.mSlotID,
                                        categoryMethod_predefinedTypeAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_predefinedTypeAST_semanticAnalysis (defineCategoryMethod_predefinedTypeAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category method '@listDeclarationAST semanticAnalysis'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_listDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (143)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (144)) ;
  cEnumerator_attributeInCollectionListAST enumerator_7239 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_7239.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_7239.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (146)) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_7420 (enumerator_7239.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_7420.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_7420.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
      if (kBoolTrue == test_0) {
        const enumGalgasBool test_1 = var_hasGetter.operator_not (SOURCE_FILE_AT_LINE (151)).boolEnum () ;
        if (kBoolTrue == test_1) {
          GALGAS_location location_2 (enumerator_7420.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_2, GALGAS_string ("duplicate feature") COMMA_SOURCE_FILE_AT_LINE (152)) ;
        }
        var_hasGetter = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_7420.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("setter"))).boolEnum () ;
        if (kBoolTrue == test_3) {
          const enumGalgasBool test_4 = var_hasSetter.boolEnum () ;
          if (kBoolTrue == test_4) {
            GALGAS_location location_5 (enumerator_7420.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_5, GALGAS_string ("duplicate feature") COMMA_SOURCE_FILE_AT_LINE (157)) ;
          }
          var_hasSetter = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_3) {
          GALGAS_location location_6 (enumerator_7420.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_6, GALGAS_string ("unknown feature; the features available here are: 'nogetter', 'setter'") COMMA_SOURCE_FILE_AT_LINE (161)) ;
        }
      }
      enumerator_7420.gotoNextObject () ;
    }
    var_typedAttributeList.addAssign_operation (var_t, enumerator_7239.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (164)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_7239.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (170)) ;
    }
    enumerator_7239.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_listTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (176)), var_typedAttributeList COMMA_SOURCE_FILE_AT_LINE (175)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (173)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_listDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                        categoryMethod_listDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listDeclarationAST_semanticAnalysis (defineCategoryMethod_listDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@sortedListDeclarationAST semanticAnalysis'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_sortedListDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                      const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                      GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_sortedListDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (191)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (192)) ;
  cEnumerator_attributeInCollectionListAST enumerator_8747 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_8747.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_8747.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (194)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_8747.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (197)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_8747.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (203)) ;
    }
    enumerator_8747.gotoNextObject () ;
  }
  GALGAS_stringset var_attributesUsedForSorting = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (206)) ;
  GALGAS_sortDescriptorListForGeneration var_sortDescriptorList = GALGAS_sortDescriptorListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (207)) ;
  cEnumerator_sortedListSortDescriptorListAST enumerator_9235 (object->mAttribute_mSortDescriptorList, kEnumeration_up) ;
  while (enumerator_9235.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_type ;
    var_attributeMap.method_searchKey (enumerator_9235.current_mSortedAttributeName (HERE), var_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (210)) ;
    var_sortDescriptorList.addAssign_operation (var_type, enumerator_9235.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (211)), enumerator_9235.current_mAscending (HERE) COMMA_SOURCE_FILE_AT_LINE (211)) ;
    const enumGalgasBool test_0 = var_attributesUsedForSorting.reader_hasKey (enumerator_9235.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (212)) COMMA_SOURCE_FILE_AT_LINE (212)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_9235.current_mSortedAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_9235.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (213)) COMMA_SOURCE_FILE_AT_LINE (213)).operator_concat (GALGAS_string ("' is already used for sorting") COMMA_SOURCE_FILE_AT_LINE (213)) COMMA_SOURCE_FILE_AT_LINE (213)) ;
    }
    var_attributesUsedForSorting.addAssign_operation (enumerator_9235.current_mSortedAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (215)) COMMA_SOURCE_FILE_AT_LINE (215)) ;
    enumerator_9235.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_sortedListTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSortedListTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (221)), var_typedAttributeList, var_sortDescriptorList COMMA_SOURCE_FILE_AT_LINE (220)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (218)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_sortedListDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                        categoryMethod_sortedListDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_sortedListDeclarationAST_semanticAnalysis (defineCategoryMethod_sortedListDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category method '@structDeclarationAST semanticAnalysis'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_structDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                  const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                  const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                  GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structDeclarationAST * object = (const cPtr_structDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_structDeclarationAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mAttributeList.reader_length (SOURCE_FILE_AT_LINE (245)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mStructTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("a structure cannot be empty: it must have at least one field") COMMA_SOURCE_FILE_AT_LINE (246)) ;
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (248)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (249)) ;
  cEnumerator_attributeInCollectionListAST enumerator_10796 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_10796.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_10796.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (251)) ;
    cEnumerator_lstringlist enumerator_10923 (enumerator_10796.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_10923.hasCurrentObject ()) {
      GALGAS_location location_2 (enumerator_10923.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("a struct attribute does not accept any feature") COMMA_SOURCE_FILE_AT_LINE (253)) ;
      enumerator_10923.gotoNextObject () ;
    }
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (false) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_10796.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (257)) ;
    const enumGalgasBool test_3 = function_forbiddenKeysForStruct (inCompiler COMMA_SOURCE_FILE_AT_LINE (263)).reader_hasKey (enumerator_10796.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (263)).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_string var_m = GALGAS_string ("an attribute cannot be named:") ;
      cEnumerator_stringset enumerator_11353 (function_forbiddenKeysForStruct (inCompiler COMMA_SOURCE_FILE_AT_LINE (265)), kEnumeration_up) ;
      while (enumerator_11353.hasCurrentObject ()) {
        var_m.dotAssign_operation (GALGAS_string (" ").operator_concat (enumerator_11353.current (HERE) COMMA_SOURCE_FILE_AT_LINE (266)) COMMA_SOURCE_FILE_AT_LINE (266)) ;
        enumerator_11353.gotoNextObject () ;
      }
      var_m.dotAssign_operation (GALGAS_string ("; theses names are reserved") COMMA_SOURCE_FILE_AT_LINE (268)) ;
      GALGAS_location location_4 (enumerator_10796.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, var_m COMMA_SOURCE_FILE_AT_LINE (269)) ;
    }
    {
    var_attributeMap.modifier_insertKey (enumerator_10796.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (271)) ;
    }
    enumerator_10796.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_structTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mStructTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (276)), var_typedAttributeList COMMA_SOURCE_FILE_AT_LINE (275)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (273)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_structDeclarationAST.mSlotID,
                                        categoryMethod_structDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclarationAST_semanticAnalysis (defineCategoryMethod_structDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category method '@graphDeclarationAST semanticAnalysis'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_graphDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_graphDeclarationAST * object = (const cPtr_graphDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_graphDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_graphTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mGraphTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (290)) ;
  GALGAS_unifiedTypeMapProxy var_associatedListTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (291)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_associatedListTypeProxy.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (292)).objectCompare (GALGAS_typeKindEnum::constructor_listType (SOURCE_FILE_AT_LINE (292)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAssociatedListTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (293)) COMMA_SOURCE_FILE_AT_LINE (293)).operator_concat (GALGAS_string ("' type should be a list") COMMA_SOURCE_FILE_AT_LINE (293)) COMMA_SOURCE_FILE_AT_LINE (293)) ;
  }
  GALGAS_stringset var_reservedModifierNames = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (296)) ;
  var_reservedModifierNames.addAssign_operation (GALGAS_string ("noteNode") COMMA_SOURCE_FILE_AT_LINE (297)) ;
  var_reservedModifierNames.addAssign_operation (GALGAS_string ("addArc") COMMA_SOURCE_FILE_AT_LINE (298)) ;
  cEnumerator_graphInsertModifierList enumerator_12705 (object->mAttribute_mInsertModifierList, kEnumeration_up) ;
  while (enumerator_12705.hasCurrentObject ()) {
    const enumGalgasBool test_2 = var_reservedModifierNames.reader_hasKey (enumerator_12705.current_mInsertModifierName (HERE).reader_string (SOURCE_FILE_AT_LINE (300)) COMMA_SOURCE_FILE_AT_LINE (300)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (enumerator_12705.current_mInsertModifierName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (enumerator_12705.current_mInsertModifierName (HERE).reader_string (SOURCE_FILE_AT_LINE (301)) COMMA_SOURCE_FILE_AT_LINE (301)).operator_concat (GALGAS_string ("' modifier name is reserved for a graph type") COMMA_SOURCE_FILE_AT_LINE (301)) COMMA_SOURCE_FILE_AT_LINE (301)) ;
    }
    {
    routine_check_5F_K_5F_L_5F_escapeCharacters (enumerator_12705.current_mInsertErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (303)) ;
    }
    enumerator_12705.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_graphDeclarationForGeneration::constructor_new (var_graphTypeProxy, var_associatedListTypeProxy, object->mAttribute_mInsertModifierList COMMA_SOURCE_FILE_AT_LINE (308)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (306)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_graphDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_graphDeclarationAST.mSlotID,
                                        categoryMethod_graphDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_graphDeclarationAST_semanticAnalysis (defineCategoryMethod_graphDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@externTypeDeclarationAST semanticAnalysis'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_externTypeDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                      const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                      GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externTypeDeclarationAST * object = (const cPtr_externTypeDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externTypeDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_externTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mExternTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (324)) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_externTypeDeclarationForGeneration::constructor_new (var_externTypeProxy, object->mAttribute_mExternTypeName.mAttribute_string, object->mAttribute_mCppPreDeclarationCode, object->mAttribute_mCppClassCode COMMA_SOURCE_FILE_AT_LINE (328)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (326)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_externTypeDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_externTypeDeclarationAST.mSlotID,
                                        categoryMethod_externTypeDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externTypeDeclarationAST_semanticAnalysis (defineCategoryMethod_externTypeDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category method '@enumDeclarationAST semanticAnalysis'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_enumDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_enumDeclarationAST * object = (const cPtr_enumDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_enumDeclarationAST) ;
  GALGAS_stringlist var_constantList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (354)) ;
  GALGAS_constantIndexMap var_constantMap = GALGAS_constantIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (355)) ;
  cEnumerator_lstringlist enumerator_14575 (object->mAttribute_mConstantList, kEnumeration_up) ;
  while (enumerator_14575.hasCurrentObject ()) {
    var_constantList.addAssign_operation (enumerator_14575.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (357)) COMMA_SOURCE_FILE_AT_LINE (357)) ;
    {
    var_constantMap.modifier_insertKey (enumerator_14575.current_mValue (HERE), var_constantMap.reader_count (SOURCE_FILE_AT_LINE (358)), inCompiler COMMA_SOURCE_FILE_AT_LINE (358)) ;
    }
    enumerator_14575.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_enumTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mEnumTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (364)), var_constantList COMMA_SOURCE_FILE_AT_LINE (363)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (361)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_enumDeclarationAST.mSlotID,
                                        categoryMethod_enumDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclarationAST_semanticAnalysis (defineCategoryMethod_enumDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category method '@arrayDeclarationAST semanticAnalysis'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_arrayDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_arrayDeclarationAST * object = (const cPtr_arrayDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_arrayDeclarationAST) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_arrayTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mArrayTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (382)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mElementTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (383)), object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (384)) COMMA_SOURCE_FILE_AT_LINE (381)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (379)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_arrayDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_arrayDeclarationAST.mSlotID,
                                        categoryMethod_arrayDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_arrayDeclarationAST_semanticAnalysis (defineCategoryMethod_arrayDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@listmapDeclarationAST semanticAnalysis'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_listmapDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                   const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                   GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listmapDeclarationAST) ;
  GALGAS_typeKindEnum var_typeKindEnum ;
  GALGAS_typedAttributeList var_listTypeAttributeList ;
  GALGAS_bool joker_16069_2 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_16069_1 ; // Joker input parameter
  GALGAS_attributeMap joker_16110_20 ; // Joker input parameter
  GALGAS_typedAttributeList joker_16110_19 ; // Joker input parameter
  GALGAS_constructorMap joker_16110_18 ; // Joker input parameter
  GALGAS_readerMap joker_16110_17 ; // Joker input parameter
  GALGAS_modifierMap joker_16110_16 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_16110_15 ; // Joker input parameter
  GALGAS_classMethodMap joker_16110_14 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_16110_13 ; // Joker input parameter
  GALGAS_stringlist joker_16110_12 ; // Joker input parameter
  GALGAS_uint joker_16110_11 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyAndParameterList joker_16110_10 ; // Joker input parameter
  GALGAS_stringset joker_16110_9 ; // Joker input parameter
  GALGAS_lstringlist joker_16110_8 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_16110_7 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_16110_6 ; // Joker input parameter
  GALGAS_withAccessorMap joker_16110_5 ; // Joker input parameter
  GALGAS_bool joker_16110_4 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_16110_3 ; // Joker input parameter
  GALGAS_string joker_16110_2 ; // Joker input parameter
  GALGAS_string joker_16110_1 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedListTypeName, joker_16069_2, joker_16069_1, var_typeKindEnum, var_listTypeAttributeList, joker_16110_20, joker_16110_19, joker_16110_18, joker_16110_17, joker_16110_16, joker_16110_15, joker_16110_14, joker_16110_13, joker_16110_12, joker_16110_11, joker_16110_10, joker_16110_9, joker_16110_8, joker_16110_7, joker_16110_6, joker_16110_5, joker_16110_4, joker_16110_3, joker_16110_2, joker_16110_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (400)) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_listmapTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListmapTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (405)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (406)), var_listTypeAttributeList COMMA_SOURCE_FILE_AT_LINE (404)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (402)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_listmapDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                        categoryMethod_listmapDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listmapDeclarationAST_semanticAnalysis (defineCategoryMethod_listmapDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category method '@mapDeclarationAST semanticAnalysis'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_mapDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (484)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (485)) ;
  cEnumerator_attributeInCollectionListAST enumerator_19096 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_19096.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_19096.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (487)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_19096.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (490)) ;
    const enumGalgasBool test_0 = function_forbiddenKeysForMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (496)).reader_hasKey (enumerator_19096.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (496)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_m = GALGAS_string ("an attribute cannot be named:") ;
      cEnumerator_stringset enumerator_19506 (function_forbiddenKeysForMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (498)), kEnumeration_up) ;
      while (enumerator_19506.hasCurrentObject ()) {
        var_m.dotAssign_operation (GALGAS_string (" ").operator_concat (enumerator_19506.current (HERE) COMMA_SOURCE_FILE_AT_LINE (499)) COMMA_SOURCE_FILE_AT_LINE (499)) ;
        enumerator_19506.gotoNextObject () ;
      }
      var_m.dotAssign_operation (GALGAS_string ("; theses names are reserved") COMMA_SOURCE_FILE_AT_LINE (501)) ;
      GALGAS_location location_1 (enumerator_19096.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, var_m COMMA_SOURCE_FILE_AT_LINE (502)) ;
    }
    {
    var_attributeMap.modifier_insertKey (enumerator_19096.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (504)) ;
    }
    enumerator_19096.gotoNextObject () ;
  }
  GALGAS_insertMethodMap var_insertMethodMap = GALGAS_insertMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (507)) ;
  cEnumerator_insertMethodListAST enumerator_19807 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_19807.hasCurrentObject ()) {
    {
    var_insertMethodMap.modifier_insertKey (enumerator_19807.current_mInsertMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (509)) ;
    }
    {
    routine_check_5F_K_5F_L_5F_escapeCharacters (enumerator_19807.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (510)) ;
    }
    {
    routine_check_5F_K_5F_L_5F_escapeCharacters (enumerator_19807.current_mShadowErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (511)) ;
    }
    enumerator_19807.gotoNextObject () ;
  }
  GALGAS_searchMethodMap var_searchMethodMap = GALGAS_searchMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (514)) ;
  cEnumerator_mapSearchMethodListAST enumerator_20085 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_20085.hasCurrentObject ()) {
    {
    var_searchMethodMap.modifier_insertKey (enumerator_20085.current_mSearchMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (516)) ;
    }
    {
    routine_check_5F_K_5F_escapeCharacters (enumerator_20085.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (517)) ;
    }
    enumerator_20085.gotoNextObject () ;
  }
  cEnumerator_mapRemoveMethodListAST enumerator_20259 (object->mAttribute_mRemoveMethodList, kEnumeration_up) ;
  while (enumerator_20259.hasCurrentObject ()) {
    {
    var_insertMethodMap.modifier_insertKey (enumerator_20259.current_mMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (521)) ;
    }
    {
    routine_check_5F_K_5F_escapeCharacters (enumerator_20259.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (522)) ;
    }
    enumerator_20259.gotoNextObject () ;
  }
  cEnumerator_insertOrReplaceDeclarationListAST enumerator_20486 (object->mAttribute_mInsertOrReplaceDeclarationListAST, kEnumeration_up) ;
  GALGAS_uint index_20451 ((uint32_t) 0) ;
  while (enumerator_20486.hasCurrentObject ()) {
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, index_20451.objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      inCompiler->emitSemanticWarning (enumerator_20486.current_mInsertOrReplaceDeclarationLocation (HERE), GALGAS_string ("the 'insertOrReplace' modifier is already declared") COMMA_SOURCE_FILE_AT_LINE (527)) ;
    }
    enumerator_20486.gotoNextObject () ;
    index_20451.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (525)) ;
  }
  GALGAS_bool var_hasInsertOrReplaceModifier = GALGAS_bool (kIsStrictSup, object->mAttribute_mInsertOrReplaceDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (530)).objectCompare (GALGAS_uint ((uint32_t) 0U))) ;
  const enumGalgasBool test_3 = var_hasInsertOrReplaceModifier.operator_and (var_insertMethodMap.reader_hasKey (GALGAS_string ("insertOrReplace") COMMA_SOURCE_FILE_AT_LINE (531)) COMMA_SOURCE_FILE_AT_LINE (531)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location var_insertOrReplaceDeclarationLocation ;
    object->mAttribute_mInsertOrReplaceDeclarationListAST.method_first (var_insertOrReplaceDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (533)) ;
    inCompiler->emitSemanticError (var_insertOrReplaceDeclarationLocation, GALGAS_string ("the insertOrReplace' modifier cannot be declared : an insert modifier or a remove modifier has been declared with this name") COMMA_SOURCE_FILE_AT_LINE (534)) ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (537)) ;
  {
  var_withAccessorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("hasKey"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (538)), constinArgument_inPredefinedTypes.mAttribute_mStringType, inCompiler COMMA_SOURCE_FILE_AT_LINE (538)) ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_21355 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_21355.hasCurrentObject ()) {
    {
    var_withAccessorMap.modifier_insertKey (enumerator_21355.current_mSearchMethodName (HERE), constinArgument_inPredefinedTypes.mAttribute_mLStringType, inCompiler COMMA_SOURCE_FILE_AT_LINE (540)) ;
    }
    enumerator_21355.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_mapTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (549)), object->mAttribute_mMapTypeName, var_typedAttributeList, object->mAttribute_mInsertMethodList, object->mAttribute_mSearchMethodList, object->mAttribute_mRemoveMethodList, var_hasInsertOrReplaceModifier, var_withAccessorMap COMMA_SOURCE_FILE_AT_LINE (548)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (546)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_mapDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                        categoryMethod_mapDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapDeclarationAST_semanticAnalysis (defineCategoryMethod_mapDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@uniqueMapDeclarationAST semanticAnalysis'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_uniqueMapDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                     const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                     const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                     GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_uniqueMapDeclarationAST * object = (const cPtr_uniqueMapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_uniqueMapDeclarationAST) ;
  GALGAS_stringset var_initialStateSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (570)) ;
  cEnumerator_insertMethodListAST enumerator_22299 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_22299.hasCurrentObject ()) {
    const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (572)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_22299.current_mInitialStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (573)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_22299.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("the '").operator_concat (enumerator_22299.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (574)) COMMA_SOURCE_FILE_AT_LINE (574)).operator_concat (GALGAS_string ("' insert method should name an automaton state") COMMA_SOURCE_FILE_AT_LINE (574)) COMMA_SOURCE_FILE_AT_LINE (574)) ;
      }else if (kBoolFalse == test_1) {
        var_initialStateSet.addAssign_operation (enumerator_22299.current_mInitialStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (576)) COMMA_SOURCE_FILE_AT_LINE (576)) ;
      }
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, enumerator_22299.current_mInitialStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (578)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_22299.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the '").operator_concat (enumerator_22299.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (579)) COMMA_SOURCE_FILE_AT_LINE (579)).operator_concat (GALGAS_string ("' insert method should not name an automaton state") COMMA_SOURCE_FILE_AT_LINE (579)) COMMA_SOURCE_FILE_AT_LINE (579)) ;
      }
    }
    enumerator_22299.gotoNextObject () ;
  }
  GALGAS_mapAutomatonActionMap var_mapAutomatonActionMap = GALGAS_mapAutomatonActionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (583)) ;
  cEnumerator_mapSearchMethodListAST enumerator_22902 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_22902.hasCurrentObject ()) {
    const enumGalgasBool test_5 = GALGAS_bool (kIsStrictSup, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (585)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_5) {
      const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, enumerator_22902.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (586)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_6) {
        GALGAS_location location_7 (enumerator_22902.current_mSearchMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_7, GALGAS_string ("the '").operator_concat (enumerator_22902.current_mSearchMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (587)) COMMA_SOURCE_FILE_AT_LINE (587)).operator_concat (GALGAS_string ("' search method should name an automaton action") COMMA_SOURCE_FILE_AT_LINE (587)) COMMA_SOURCE_FILE_AT_LINE (587)) ;
      }else if (kBoolFalse == test_6) {
        const enumGalgasBool test_8 = var_mapAutomatonActionMap.reader_hasKey (enumerator_22902.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (588)) COMMA_SOURCE_FILE_AT_LINE (588)).operator_not (SOURCE_FILE_AT_LINE (588)).boolEnum () ;
        if (kBoolTrue == test_8) {
          {
          var_mapAutomatonActionMap.modifier_insertKey (enumerator_22902.current_mActionName (HERE), var_mapAutomatonActionMap.reader_count (SOURCE_FILE_AT_LINE (590)), inCompiler COMMA_SOURCE_FILE_AT_LINE (590)) ;
          }
        }
      }
    }else if (kBoolFalse == test_5) {
      const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, enumerator_22902.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (594)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_9) {
        GALGAS_location location_10 (enumerator_22902.current_mSearchMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_10, GALGAS_string ("the '").operator_concat (enumerator_22902.current_mSearchMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (595)) COMMA_SOURCE_FILE_AT_LINE (595)).operator_concat (GALGAS_string ("' search method should not name an automaton action") COMMA_SOURCE_FILE_AT_LINE (595)) COMMA_SOURCE_FILE_AT_LINE (595)) ;
      }
    }
    enumerator_22902.gotoNextObject () ;
  }
  GALGAS_mapAutomatonStateMap var_mapAutomatonStateMap = GALGAS_mapAutomatonStateMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (599)) ;
  cEnumerator_mapStateList enumerator_23715 (object->mAttribute_mMapStateList, kEnumeration_up) ;
  while (enumerator_23715.hasCurrentObject ()) {
    {
    var_mapAutomatonStateMap.modifier_insertKey (enumerator_23715.current_mStateName (HERE), var_mapAutomatonStateMap.reader_count (SOURCE_FILE_AT_LINE (601)), inCompiler COMMA_SOURCE_FILE_AT_LINE (601)) ;
    }
    enumerator_23715.gotoNextObject () ;
  }
  cEnumerator_mapStateList enumerator_23841 (object->mAttribute_mMapStateList, kEnumeration_up) ;
  while (enumerator_23841.hasCurrentObject ()) {
    cEnumerator_mapStateTransitionList enumerator_23872 (enumerator_23841.current_mTransitionList (HERE), kEnumeration_up) ;
    while (enumerator_23872.hasCurrentObject ()) {
      GALGAS_uint joker_23933_0 ; // Joker input parameter
      var_mapAutomatonStateMap.method_searchKey (enumerator_23872.current_mTargetStateName (HERE), joker_23933_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (605)) ;
      enumerator_23872.gotoNextObject () ;
    }
    enumerator_23841.gotoNextObject () ;
  }
  GALGAS_stringset var_allActions = var_mapAutomatonActionMap.reader_keySet (SOURCE_FILE_AT_LINE (609)) ;
  GALGAS_mapStateSortedList var_mapStateSortedList = GALGAS_mapStateSortedList::constructor_emptySortedList (SOURCE_FILE_AT_LINE (610)) ;
  cEnumerator_mapStateList enumerator_24167 (object->mAttribute_mMapStateList, kEnumeration_up) ;
  while (enumerator_24167.hasCurrentObject ()) {
    GALGAS_stringset var_actionsForCurrentState = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (612)) ;
    GALGAS_mapStateTransitionSortedList var_mapStateTransitionSortedList = GALGAS_mapStateTransitionSortedList::constructor_emptySortedList (SOURCE_FILE_AT_LINE (613)) ;
    cEnumerator_mapStateTransitionList enumerator_24332 (enumerator_24167.current_mTransitionList (HERE), kEnumeration_up) ;
    while (enumerator_24332.hasCurrentObject ()) {
      GALGAS_uint var_actionIndex ;
      var_mapAutomatonActionMap.method_searchKey (enumerator_24332.current_mActionName (HERE), var_actionIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (616)) ;
      const enumGalgasBool test_11 = var_actionsForCurrentState.reader_hasKey (enumerator_24332.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (617)) COMMA_SOURCE_FILE_AT_LINE (617)).boolEnum () ;
      if (kBoolTrue == test_11) {
        GALGAS_location location_12 (enumerator_24332.current_mActionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_12, GALGAS_string ("the '").operator_concat (enumerator_24332.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (618)) COMMA_SOURCE_FILE_AT_LINE (618)).operator_concat (GALGAS_string ("' action is already used for this state") COMMA_SOURCE_FILE_AT_LINE (618)) COMMA_SOURCE_FILE_AT_LINE (618)) ;
      }
      var_actionsForCurrentState.addAssign_operation (enumerator_24332.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (620)) COMMA_SOURCE_FILE_AT_LINE (620)) ;
      GALGAS_uint var_targetStateIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_24332.current_mTargetStateName (HERE), var_targetStateIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (622)) ;
      var_mapStateTransitionSortedList.addAssign_operation (var_actionIndex, enumerator_24332.current_mActionName (HERE).reader_string (SOURCE_FILE_AT_LINE (625)), var_targetStateIndex, enumerator_24332.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (627)), enumerator_24332.current_mTransitionMessageKind (HERE), enumerator_24332.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (629)) COMMA_SOURCE_FILE_AT_LINE (623)) ;
      enumerator_24332.gotoNextObject () ;
    }
    GALGAS_uint var_stateIndex ;
    var_mapAutomatonStateMap.method_searchKey (enumerator_24167.current_mStateName (HERE), var_stateIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (633)) ;
    var_mapStateSortedList.addAssign_operation (var_stateIndex, enumerator_24167.current_mStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (636)), enumerator_24167.current_mStateMessageKind (HERE), enumerator_24167.current_mStateMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (638)), var_mapStateTransitionSortedList COMMA_SOURCE_FILE_AT_LINE (634)) ;
    GALGAS_stringset var_missingActions = var_allActions.substract_operation (var_actionsForCurrentState, inCompiler COMMA_SOURCE_FILE_AT_LINE (641)) ;
    const enumGalgasBool test_13 = GALGAS_bool (kIsStrictSup, var_missingActions.reader_count (SOURCE_FILE_AT_LINE (642)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_13) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_25434 (var_missingActions, kEnumeration_up) ;
      while (enumerator_25434.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("'").operator_concat (enumerator_25434.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (645)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (645)) COMMA_SOURCE_FILE_AT_LINE (645)) ;
        if (enumerator_25434.hasNextObject ()) {
          var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (646)) ;
        }
        enumerator_25434.gotoNextObject () ;
      }
      GALGAS_location location_14 (enumerator_24167.current_mStateName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_14, GALGAS_string ("the following actions are not named in a transition from this state: ").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (648)) COMMA_SOURCE_FILE_AT_LINE (648)) ;
    }
    enumerator_24167.gotoNextObject () ;
  }
  GALGAS_stringset var_accessibleStates = var_initialStateSet ;
  GALGAS_bool var_progress = GALGAS_bool (true) ;
  if (object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (654)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (654)).isValid ()) {
    uint32_t variant_25772 = object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (654)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (654)).uintValue () ;
    bool loop_25772 = true ;
    while (loop_25772) {
      loop_25772 = var_progress.isValid () ;
      if (loop_25772) {
        loop_25772 = var_progress.boolValue () ;
      }
      if (loop_25772 && (0 == variant_25772)) {
        loop_25772 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (654)) ;
      }
      if (loop_25772) {
        variant_25772 -- ;
        var_progress = GALGAS_bool (false) ;
        cEnumerator_mapStateList enumerator_25869 (object->mAttribute_mMapStateList, kEnumeration_up) ;
        while (enumerator_25869.hasCurrentObject ()) {
          const enumGalgasBool test_15 = var_accessibleStates.reader_hasKey (enumerator_25869.current_mStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (657)) COMMA_SOURCE_FILE_AT_LINE (657)).boolEnum () ;
          if (kBoolTrue == test_15) {
            cEnumerator_mapStateTransitionList enumerator_25965 (enumerator_25869.current_mTransitionList (HERE), kEnumeration_up) ;
            while (enumerator_25965.hasCurrentObject ()) {
              const enumGalgasBool test_16 = var_accessibleStates.reader_hasKey (enumerator_25965.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (659)) COMMA_SOURCE_FILE_AT_LINE (659)).operator_not (SOURCE_FILE_AT_LINE (659)).boolEnum () ;
              if (kBoolTrue == test_16) {
                var_accessibleStates.addAssign_operation (enumerator_25965.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (660)) COMMA_SOURCE_FILE_AT_LINE (660)) ;
                var_progress = GALGAS_bool (true) ;
              }
              enumerator_25965.gotoNextObject () ;
            }
          }
          enumerator_25869.gotoNextObject () ;
        }
      }
    }
  }
  GALGAS_stringset var_uselessStates = var_mapAutomatonStateMap.reader_keySet (SOURCE_FILE_AT_LINE (667)).substract_operation (var_accessibleStates, inCompiler COMMA_SOURCE_FILE_AT_LINE (667)) ;
  const enumGalgasBool test_17 = GALGAS_bool (kIsStrictSup, var_uselessStates.reader_count (SOURCE_FILE_AT_LINE (668)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_17) {
    GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
    cEnumerator_stringset enumerator_26393 (var_uselessStates, kEnumeration_up) ;
    while (enumerator_26393.hasCurrentObject ()) {
      var_s.dotAssign_operation (GALGAS_string ("'").operator_concat (enumerator_26393.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (671)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (671)) COMMA_SOURCE_FILE_AT_LINE (671)) ;
      if (enumerator_26393.hasNextObject ()) {
        var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (672)) ;
      }
      enumerator_26393.gotoNextObject () ;
    }
    inCompiler->emitSemanticWarning (inCompiler->here (), GALGAS_string ("the following map automaton states are useless: ").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (674)) COMMA_SOURCE_FILE_AT_LINE (674)) ;
  }
  GALGAS_stringset var_neededAssociations = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (678)) ;
  GALGAS_stringset var_accessibilityGraph = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (679)) ;
  cEnumerator_mapAutomatonStateMap enumerator_26763 (var_mapAutomatonStateMap, kEnumeration_up) ;
  while (enumerator_26763.hasCurrentObject ()) {
    GALGAS_stringset var_reachableStates = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (681)) ;
    var_reachableStates.addAssign_operation (enumerator_26763.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (682)) COMMA_SOURCE_FILE_AT_LINE (682)) ;
    GALGAS_bool var_progress = GALGAS_bool (true) ;
    if (var_mapAutomatonStateMap.reader_count (SOURCE_FILE_AT_LINE (684)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (684)).isValid ()) {
      uint32_t variant_26888 = var_mapAutomatonStateMap.reader_count (SOURCE_FILE_AT_LINE (684)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (684)).uintValue () ;
      bool loop_26888 = true ;
      while (loop_26888) {
        loop_26888 = var_progress.isValid () ;
        if (loop_26888) {
          loop_26888 = var_progress.boolValue () ;
        }
        if (loop_26888 && (0 == variant_26888)) {
          loop_26888 = false ;
          inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (684)) ;
        }
        if (loop_26888) {
          variant_26888 -- ;
          var_progress = GALGAS_bool (false) ;
          cEnumerator_mapStateList enumerator_26995 (object->mAttribute_mMapStateList, kEnumeration_up) ;
          while (enumerator_26995.hasCurrentObject ()) {
            const enumGalgasBool test_18 = var_reachableStates.reader_hasKey (enumerator_26995.current_mStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (687)) COMMA_SOURCE_FILE_AT_LINE (687)).boolEnum () ;
            if (kBoolTrue == test_18) {
              cEnumerator_mapStateTransitionList enumerator_27094 (enumerator_26995.current_mTransitionList (HERE), kEnumeration_up) ;
              while (enumerator_27094.hasCurrentObject ()) {
                const enumGalgasBool test_19 = var_reachableStates.reader_hasKey (enumerator_27094.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (689)) COMMA_SOURCE_FILE_AT_LINE (689)).operator_not (SOURCE_FILE_AT_LINE (689)).boolEnum () ;
                if (kBoolTrue == test_19) {
                  var_reachableStates.addAssign_operation (enumerator_27094.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (690)) COMMA_SOURCE_FILE_AT_LINE (690)) ;
                  var_accessibilityGraph.addAssign_operation (enumerator_26763.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (691)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (691)).operator_concat (enumerator_27094.current_mTargetStateName (HERE).reader_string (SOURCE_FILE_AT_LINE (691)) COMMA_SOURCE_FILE_AT_LINE (691)) COMMA_SOURCE_FILE_AT_LINE (691)) ;
                  var_progress = GALGAS_bool (true) ;
                }
                enumerator_27094.gotoNextObject () ;
              }
            }
            enumerator_26995.gotoNextObject () ;
          }
        }
      }
    }
    cEnumerator_stringset enumerator_27480 (var_reachableStates, kEnumeration_up) ;
    while (enumerator_27480.hasCurrentObject ()) {
      const enumGalgasBool test_20 = GALGAS_bool (kIsNotEqual, enumerator_26763.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (699)).objectCompare (enumerator_27480.current_key (HERE))).boolEnum () ;
      if (kBoolTrue == test_20) {
        var_neededAssociations.addAssign_operation (enumerator_26763.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (700)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (700)).operator_concat (enumerator_27480.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (700)) COMMA_SOURCE_FILE_AT_LINE (700)) ;
      }
      enumerator_27480.gotoNextObject () ;
    }
    enumerator_26763.gotoNextObject () ;
  }
  GALGAS_mapOverrideList var_mapOverrideList = GALGAS_mapOverrideList::constructor_emptyList (SOURCE_FILE_AT_LINE (705)) ;
  cEnumerator_mapOverrideBlockListAST enumerator_27715 (object->mAttribute_mMapOverrideBlockListAST, kEnumeration_up) ;
  while (enumerator_27715.hasCurrentObject ()) {
    GALGAS_stringset var_handledAssociations = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (707)) ;
    GALGAS_stringset var_neededCombinaisons = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (708)) ;
    GALGAS_branchBehaviourSortedListForMapOverride var_branchBehaviourSortedListForMapOverride_31_ = GALGAS_branchBehaviourSortedListForMapOverride::constructor_emptySortedList (SOURCE_FILE_AT_LINE (709)) ;
    cEnumerator_mapOverrideBlockDescriptorAST enumerator_27963 (enumerator_27715.current_mMapOverrideBlockDescriptor_31_AST (HERE), kEnumeration_up) ;
    while (enumerator_27963.hasCurrentObject ()) {
      GALGAS_uint var_startStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_27963.current_mLeftState (HERE), var_startStateNameIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (712)) ;
      GALGAS_uint var_currentStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_27963.current_mRightState (HERE), var_currentStateNameIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (714)) ;
      GALGAS_string var_association = enumerator_27963.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (715)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (715)).operator_concat (enumerator_27963.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (715)) COMMA_SOURCE_FILE_AT_LINE (715)) ;
      const enumGalgasBool test_21 = var_neededAssociations.reader_hasKey (var_association COMMA_SOURCE_FILE_AT_LINE (716)).operator_not (SOURCE_FILE_AT_LINE (716)).boolEnum () ;
      if (kBoolTrue == test_21) {
        GALGAS_location location_22 (enumerator_27963.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticWarning (location_22, GALGAS_string ("the '").operator_concat (var_association COMMA_SOURCE_FILE_AT_LINE (717)).operator_concat (GALGAS_string ("' association is useless") COMMA_SOURCE_FILE_AT_LINE (717)) COMMA_SOURCE_FILE_AT_LINE (717)) ;
      }
      const enumGalgasBool test_23 = var_handledAssociations.reader_hasKey (var_association COMMA_SOURCE_FILE_AT_LINE (719)).boolEnum () ;
      if (kBoolTrue == test_23) {
        GALGAS_location location_24 (enumerator_27963.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_24, GALGAS_string ("the '").operator_concat (var_association COMMA_SOURCE_FILE_AT_LINE (721)).operator_concat (GALGAS_string ("' association is already defined") COMMA_SOURCE_FILE_AT_LINE (721)) COMMA_SOURCE_FILE_AT_LINE (720)) ;
      }
      var_handledAssociations.addAssign_operation (var_association COMMA_SOURCE_FILE_AT_LINE (723)) ;
      GALGAS_uint var_finalStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_27963.current_mResultingState (HERE), var_finalStateNameIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (725)) ;
      const enumGalgasBool test_25 = GALGAS_bool (kIsNotEqual, enumerator_27963.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (726)).objectCompare (enumerator_27963.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (726)))).boolEnum () ;
      if (kBoolTrue == test_25) {
        var_neededCombinaisons.addAssign_operation (enumerator_27963.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (727)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (727)).operator_concat (enumerator_27963.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (727)) COMMA_SOURCE_FILE_AT_LINE (727)) COMMA_SOURCE_FILE_AT_LINE (727)) ;
        var_neededCombinaisons.addAssign_operation (enumerator_27963.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (728)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (728)).operator_concat (enumerator_27963.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (728)) COMMA_SOURCE_FILE_AT_LINE (728)) COMMA_SOURCE_FILE_AT_LINE (728)) ;
        const enumGalgasBool test_26 = var_accessibilityGraph.reader_hasKey (enumerator_27963.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (729)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (729)).operator_concat (enumerator_27963.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (729)) COMMA_SOURCE_FILE_AT_LINE (729)) COMMA_SOURCE_FILE_AT_LINE (729)).operator_not (SOURCE_FILE_AT_LINE (729)).boolEnum () ;
        if (kBoolTrue == test_26) {
          GALGAS_location location_27 (enumerator_27963.current_mResultingState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_27, GALGAS_string ("the '").operator_concat (enumerator_27963.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (731)) COMMA_SOURCE_FILE_AT_LINE (731)).operator_concat (GALGAS_string ("' state is not reachable from '") COMMA_SOURCE_FILE_AT_LINE (731)).operator_concat (enumerator_27963.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (731)) COMMA_SOURCE_FILE_AT_LINE (731)).operator_concat (GALGAS_string ("' state") COMMA_SOURCE_FILE_AT_LINE (731)) COMMA_SOURCE_FILE_AT_LINE (730)) ;
        }
      }
      {
      routine_check_5F_K_5F_escapeCharacters (enumerator_27963.current_mTransitionMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (735)) ;
      }
      var_branchBehaviourSortedListForMapOverride_31_.addAssign_operation (var_startStateNameIndex, enumerator_27963.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (738)), var_currentStateNameIndex, enumerator_27963.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (740)), var_finalStateNameIndex, enumerator_27963.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (742)), enumerator_27963.current_mMessageKind (HERE), enumerator_27963.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (744)) COMMA_SOURCE_FILE_AT_LINE (736)) ;
      enumerator_27963.gotoNextObject () ;
    }
    GALGAS_stringset var_forgottenAssociations = var_neededAssociations.substract_operation (var_handledAssociations, inCompiler COMMA_SOURCE_FILE_AT_LINE (747)) ;
    const enumGalgasBool test_28 = GALGAS_bool (kIsStrictSup, var_forgottenAssociations.reader_count (SOURCE_FILE_AT_LINE (748)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_28) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_29819 (var_forgottenAssociations, kEnumeration_up) ;
      while (enumerator_29819.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - ").operator_concat (enumerator_29819.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (751)) COMMA_SOURCE_FILE_AT_LINE (751)) ;
        enumerator_29819.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (inCompiler->here (), var_forgottenAssociations.reader_count (SOURCE_FILE_AT_LINE (753)).reader_string (SOURCE_FILE_AT_LINE (753)).operator_concat (GALGAS_string (" associations should be defined:") COMMA_SOURCE_FILE_AT_LINE (753)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (753)) COMMA_SOURCE_FILE_AT_LINE (753)) ;
    }
    GALGAS_stringset var_definedCombinaisons = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (755)) ;
    GALGAS_branchBehaviourSortedListForMapOverride var_branchBehaviourSortedListForMapOverride_32_ = GALGAS_branchBehaviourSortedListForMapOverride::constructor_emptySortedList (SOURCE_FILE_AT_LINE (756)) ;
    cEnumerator_mapOverrideBlockDescriptorAST enumerator_30183 (enumerator_27715.current_mMapOverrideBlockDescriptor_32_AST (HERE), kEnumeration_up) ;
    while (enumerator_30183.hasCurrentObject ()) {
      GALGAS_uint var_leftStateIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_30183.current_mLeftState (HERE), var_leftStateIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (759)) ;
      GALGAS_uint var_rightStateIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_30183.current_mRightState (HERE), var_rightStateIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (761)) ;
      GALGAS_string var_combinaison = enumerator_30183.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (762)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (762)).operator_concat (enumerator_30183.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (762)) COMMA_SOURCE_FILE_AT_LINE (762)) ;
      const enumGalgasBool test_29 = var_neededCombinaisons.reader_hasKey (var_combinaison COMMA_SOURCE_FILE_AT_LINE (763)).operator_not (SOURCE_FILE_AT_LINE (763)).boolEnum () ;
      if (kBoolTrue == test_29) {
        GALGAS_location location_30 (enumerator_30183.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_30, GALGAS_string ("the '").operator_concat (enumerator_30183.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (765)) COMMA_SOURCE_FILE_AT_LINE (765)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (765)).operator_concat (enumerator_30183.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (765)) COMMA_SOURCE_FILE_AT_LINE (765)).operator_concat (GALGAS_string ("' combinaison is useless") COMMA_SOURCE_FILE_AT_LINE (765)) COMMA_SOURCE_FILE_AT_LINE (764)) ;
      }
      const enumGalgasBool test_31 = var_definedCombinaisons.reader_hasKey (var_combinaison COMMA_SOURCE_FILE_AT_LINE (767)).boolEnum () ;
      if (kBoolTrue == test_31) {
        GALGAS_location location_32 (enumerator_30183.current_mRightState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_32, GALGAS_string ("the '").operator_concat (enumerator_30183.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (769)) COMMA_SOURCE_FILE_AT_LINE (769)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (769)).operator_concat (enumerator_30183.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (769)) COMMA_SOURCE_FILE_AT_LINE (769)).operator_concat (GALGAS_string ("' combinaison is already defined") COMMA_SOURCE_FILE_AT_LINE (769)) COMMA_SOURCE_FILE_AT_LINE (768)) ;
      }
      var_definedCombinaisons.addAssign_operation (var_combinaison COMMA_SOURCE_FILE_AT_LINE (771)) ;
      GALGAS_uint var_resultingStateNameIndex ;
      var_mapAutomatonStateMap.method_searchKey (enumerator_30183.current_mResultingState (HERE), var_resultingStateNameIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (773)) ;
      const enumGalgasBool test_33 = GALGAS_bool (kIsNotEqual, enumerator_30183.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (774)).objectCompare (enumerator_30183.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (774)))).operator_and (GALGAS_bool (kIsNotEqual, enumerator_30183.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (775)).objectCompare (enumerator_30183.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (775)))) COMMA_SOURCE_FILE_AT_LINE (774)).operator_and (var_accessibilityGraph.reader_hasKey (enumerator_30183.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (776)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (776)).operator_concat (enumerator_30183.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (776)) COMMA_SOURCE_FILE_AT_LINE (776)) COMMA_SOURCE_FILE_AT_LINE (776)).operator_not (SOURCE_FILE_AT_LINE (776)) COMMA_SOURCE_FILE_AT_LINE (775)).boolEnum () ;
      if (kBoolTrue == test_33) {
        GALGAS_location location_34 (enumerator_30183.current_mResultingState (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_34, GALGAS_string ("the '").operator_concat (enumerator_30183.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (778)) COMMA_SOURCE_FILE_AT_LINE (778)).operator_concat (GALGAS_string ("' state cannot be reached from the '") COMMA_SOURCE_FILE_AT_LINE (778)).operator_concat (enumerator_30183.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (778)) COMMA_SOURCE_FILE_AT_LINE (778)).operator_concat (GALGAS_string ("' state") COMMA_SOURCE_FILE_AT_LINE (778)) COMMA_SOURCE_FILE_AT_LINE (777)) ;
      }
      {
      routine_check_5F_K_5F_escapeCharacters (enumerator_30183.current_mTransitionMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (780)) ;
      }
      const enumGalgasBool test_35 = GALGAS_bool (kIsEqual, enumerator_30183.current_mMessageKind (HERE).objectCompare (GALGAS_mapAutomatonMessageKind::constructor_noMessage (SOURCE_FILE_AT_LINE (781)))).boolEnum () ;
      if (kBoolTrue == test_35) {
        var_definedCombinaisons.addAssign_operation (enumerator_30183.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (782)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (782)).operator_concat (enumerator_30183.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (782)) COMMA_SOURCE_FILE_AT_LINE (782)) COMMA_SOURCE_FILE_AT_LINE (782)) ;
        var_branchBehaviourSortedListForMapOverride_32_.addAssign_operation (var_rightStateIndex, enumerator_30183.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (785)), var_leftStateIndex, enumerator_30183.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (787)), var_resultingStateNameIndex, enumerator_30183.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (789)), enumerator_30183.current_mMessageKind (HERE), enumerator_30183.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (791)) COMMA_SOURCE_FILE_AT_LINE (783)) ;
      }
      var_branchBehaviourSortedListForMapOverride_32_.addAssign_operation (var_leftStateIndex, enumerator_30183.current_mLeftState (HERE).reader_string (SOURCE_FILE_AT_LINE (796)), var_rightStateIndex, enumerator_30183.current_mRightState (HERE).reader_string (SOURCE_FILE_AT_LINE (798)), var_resultingStateNameIndex, enumerator_30183.current_mResultingState (HERE).reader_string (SOURCE_FILE_AT_LINE (800)), enumerator_30183.current_mMessageKind (HERE), enumerator_30183.current_mTransitionMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (802)) COMMA_SOURCE_FILE_AT_LINE (794)) ;
      enumerator_30183.gotoNextObject () ;
    }
    const enumGalgasBool test_36 = GALGAS_bool (kIsEqual, var_forgottenAssociations.reader_count (SOURCE_FILE_AT_LINE (805)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_36) {
      GALGAS_stringset var_forgottenCombinaisons = var_neededCombinaisons.substract_operation (var_definedCombinaisons, inCompiler COMMA_SOURCE_FILE_AT_LINE (806)) ;
      const enumGalgasBool test_37 = GALGAS_bool (kIsStrictSup, var_forgottenCombinaisons.reader_count (SOURCE_FILE_AT_LINE (807)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_37) {
        GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
        cEnumerator_stringset enumerator_32504 (var_forgottenCombinaisons, kEnumeration_up) ;
        while (enumerator_32504.hasCurrentObject ()) {
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - ").operator_concat (enumerator_32504.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (810)) COMMA_SOURCE_FILE_AT_LINE (810)) ;
          enumerator_32504.gotoNextObject () ;
        }
        inCompiler->emitSemanticError (inCompiler->here (), var_forgottenCombinaisons.reader_count (SOURCE_FILE_AT_LINE (812)).reader_string (SOURCE_FILE_AT_LINE (812)).operator_concat (GALGAS_string (" combinaisons are forgotten:") COMMA_SOURCE_FILE_AT_LINE (812)).operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (812)) COMMA_SOURCE_FILE_AT_LINE (812)) ;
      }
    }
    var_mapOverrideList.addAssign_operation (enumerator_27715.current_mOverrideBlockName (HERE).reader_string (SOURCE_FILE_AT_LINE (816)), var_branchBehaviourSortedListForMapOverride_31_, var_branchBehaviourSortedListForMapOverride_32_ COMMA_SOURCE_FILE_AT_LINE (815)) ;
    enumerator_27715.gotoNextObject () ;
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (822)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (823)) ;
  cEnumerator_attributeInCollectionListAST enumerator_33015 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_33015.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_33015.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (825)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_t, enumerator_33015.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (828)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_33015.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (834)) ;
    }
    enumerator_33015.gotoNextObject () ;
  }
  GALGAS_insertMethodMap var_insertMethodMap = GALGAS_insertMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (837)) ;
  cEnumerator_insertMethodListAST enumerator_33437 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_33437.hasCurrentObject ()) {
    {
    var_insertMethodMap.modifier_insertKey (enumerator_33437.current_mInsertMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (839)) ;
    }
    cEnumerator_stringlist enumerator_33630 (enumerator_33437.current_mErrorMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (841)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (841)), kEnumeration_up) ;
    while (enumerator_33630.hasCurrentObject ()) {
      GALGAS_stringlist var_explodedArray = enumerator_33630.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (842)) ;
      {
      GALGAS_string joker_33746_0 ; // Joker input parameter
      var_explodedArray.modifier_popFirst (joker_33746_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (843)) ;
      }
      cEnumerator_stringlist enumerator_33778 (var_explodedArray, kEnumeration_up) ;
      while (enumerator_33778.hasCurrentObject ()) {
        const enumGalgasBool test_38 = GALGAS_bool (kIsStrictSup, enumerator_33778.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (845)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_38) {
          GALGAS_char var_c = enumerator_33778.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (846)) ;
          const enumGalgasBool test_39 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).operator_and (GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (76)))) COMMA_SOURCE_FILE_AT_LINE (847)).boolEnum () ;
          if (kBoolTrue == test_39) {
            GALGAS_location location_40 (enumerator_33437.current_mErrorMessage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_40, GALGAS_string ("only '%K', '%L' and '%%' escape sequences are allowed in an insert error message") COMMA_SOURCE_FILE_AT_LINE (848)) ;
          }
        }
        enumerator_33778.gotoNextObject () ;
      }
      enumerator_33630.gotoNextObject () ;
    }
    cEnumerator_stringlist enumerator_34257 (enumerator_33437.current_mShadowErrorMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (854)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (854)), kEnumeration_up) ;
    while (enumerator_34257.hasCurrentObject ()) {
      GALGAS_stringlist var_explodedArray = enumerator_34257.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (855)) ;
      {
      GALGAS_string joker_34373_0 ; // Joker input parameter
      var_explodedArray.modifier_popFirst (joker_34373_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (856)) ;
      }
      cEnumerator_stringlist enumerator_34405 (var_explodedArray, kEnumeration_up) ;
      while (enumerator_34405.hasCurrentObject ()) {
        const enumGalgasBool test_41 = GALGAS_bool (kIsStrictSup, enumerator_34405.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (858)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_41) {
          GALGAS_char var_c = enumerator_34405.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (859)) ;
          const enumGalgasBool test_42 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).operator_and (GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (76)))) COMMA_SOURCE_FILE_AT_LINE (860)).boolEnum () ;
          if (kBoolTrue == test_42) {
            GALGAS_location location_43 (enumerator_33437.current_mErrorMessage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_43, GALGAS_string ("only '%K', '%L' and '%%' escape sequences are allowed in a shadow error message") COMMA_SOURCE_FILE_AT_LINE (861)) ;
          }
        }
        enumerator_34405.gotoNextObject () ;
      }
      enumerator_34257.gotoNextObject () ;
    }
    enumerator_33437.gotoNextObject () ;
  }
  GALGAS_searchMethodMap var_searchMethodMap = GALGAS_searchMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (868)) ;
  cEnumerator_mapSearchMethodListAST enumerator_34853 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_34853.hasCurrentObject ()) {
    const enumGalgasBool test_44 = GALGAS_bool (kIsEqual, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (870)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_44) {
      {
      var_searchMethodMap.modifier_insertKey (enumerator_34853.current_mSearchMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (871)) ;
      }
    }else if (kBoolFalse == test_44) {
      {
      var_searchMethodMap.modifier_insertKey (enumerator_34853.current_mSearchMethodName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (873)) ;
      }
    }
    cEnumerator_stringlist enumerator_35167 (enumerator_34853.current_mErrorMessage (HERE).reader_string (SOURCE_FILE_AT_LINE (876)).reader_componentsSeparatedByString (GALGAS_string ("%%") COMMA_SOURCE_FILE_AT_LINE (876)), kEnumeration_up) ;
    while (enumerator_35167.hasCurrentObject ()) {
      GALGAS_stringlist var_explodedArray = enumerator_35167.current_mValue (HERE).reader_componentsSeparatedByString (GALGAS_string ("%") COMMA_SOURCE_FILE_AT_LINE (877)) ;
      {
      GALGAS_string joker_35283_0 ; // Joker input parameter
      var_explodedArray.modifier_popFirst (joker_35283_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (878)) ;
      }
      cEnumerator_stringlist enumerator_35315 (var_explodedArray, kEnumeration_up) ;
      while (enumerator_35315.hasCurrentObject ()) {
        const enumGalgasBool test_45 = GALGAS_bool (kIsStrictSup, enumerator_35315.current_mValue (HERE).reader_length (SOURCE_FILE_AT_LINE (880)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
        if (kBoolTrue == test_45) {
          GALGAS_char var_c = enumerator_35315.current_mValue (HERE).reader_characterAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (881)) ;
          const enumGalgasBool test_46 = GALGAS_bool (kIsNotEqual, var_c.objectCompare (GALGAS_char (TO_UNICODE (75)))).boolEnum () ;
          if (kBoolTrue == test_46) {
            GALGAS_location location_47 (enumerator_34853.current_mErrorMessage (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_47, GALGAS_string ("only '%K' and '%%' escape sequences are allowed in a search error message") COMMA_SOURCE_FILE_AT_LINE (883)) ;
          }
        }
        enumerator_35315.gotoNextObject () ;
      }
      enumerator_35167.gotoNextObject () ;
    }
    enumerator_34853.gotoNextObject () ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (890)) ;
  {
  var_withAccessorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("hasKey"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (891)), constinArgument_inPredefinedTypes.mAttribute_mStringType, inCompiler COMMA_SOURCE_FILE_AT_LINE (891)) ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_35842 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_35842.hasCurrentObject ()) {
    {
    var_withAccessorMap.modifier_insertKey (enumerator_35842.current_mSearchMethodName (HERE), constinArgument_inPredefinedTypes.mAttribute_mLStringType, inCompiler COMMA_SOURCE_FILE_AT_LINE (893)) ;
    }
    enumerator_35842.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_uniqueMapTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (902)), object->mAttribute_mMapTypeName, var_typedAttributeList, object->mAttribute_mInsertMethodList, object->mAttribute_mSearchMethodList, var_withAccessorMap, var_mapAutomatonStateMap, var_mapAutomatonActionMap, var_mapStateSortedList, var_mapOverrideList COMMA_SOURCE_FILE_AT_LINE (901)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (899)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_uniqueMapDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_uniqueMapDeclarationAST.mSlotID,
                                        categoryMethod_uniqueMapDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_uniqueMapDeclarationAST_semanticAnalysis (defineCategoryMethod_uniqueMapDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@mapProxyDeclarationAST semanticAnalysis'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_mapProxyDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                    const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                    const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                    GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapProxyDeclarationAST * object = (const cPtr_mapProxyDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapProxyDeclarationAST) ;
  GALGAS_typedAttributeList var_listTypeAttributeList ;
  GALGAS_mapSearchMethodListAST var_searchMethodList ;
  GALGAS_bool joker_36952_5 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_36952_4 ; // Joker input parameter
  GALGAS_typeKindEnum joker_36952_3 ; // Joker input parameter
  GALGAS_typedAttributeList joker_36952_2 ; // Joker input parameter
  GALGAS_attributeMap joker_36952_1 ; // Joker input parameter
  GALGAS_constructorMap joker_36987_11 ; // Joker input parameter
  GALGAS_readerMap joker_36987_10 ; // Joker input parameter
  GALGAS_modifierMap joker_36987_9 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_36987_8 ; // Joker input parameter
  GALGAS_classMethodMap joker_36987_7 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_36987_6 ; // Joker input parameter
  GALGAS_stringlist joker_36987_5 ; // Joker input parameter
  GALGAS_uint joker_36987_4 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyAndParameterList joker_36987_3 ; // Joker input parameter
  GALGAS_stringset joker_36987_2 ; // Joker input parameter
  GALGAS_lstringlist joker_36987_1 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_37018_6 ; // Joker input parameter
  GALGAS_withAccessorMap joker_37018_5 ; // Joker input parameter
  GALGAS_bool joker_37018_4 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_37018_3 ; // Joker input parameter
  GALGAS_string joker_37018_2 ; // Joker input parameter
  GALGAS_string joker_37018_1 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedMapTypeName, joker_36952_5, joker_36952_4, joker_36952_3, joker_36952_2, joker_36952_1, var_listTypeAttributeList, joker_36987_11, joker_36987_10, joker_36987_9, joker_36987_8, joker_36987_7, joker_36987_6, joker_36987_5, joker_36987_4, joker_36987_3, joker_36987_2, joker_36987_1, var_searchMethodList, joker_37018_6, joker_37018_5, joker_37018_4, joker_37018_3, joker_37018_2, joker_37018_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (927)) ;
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_mapProxyTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapProxyTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (939)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedMapTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (940)), var_listTypeAttributeList, var_searchMethodList COMMA_SOURCE_FILE_AT_LINE (938)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (936)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_mapProxyDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_mapProxyDeclarationAST.mSlotID,
                                        categoryMethod_mapProxyDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapProxyDeclarationAST_semanticAnalysis (defineCategoryMethod_mapProxyDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@externFunctionDeclarationAST semanticAnalysis' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_externFunctionDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                          const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                          const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                          GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externFunctionDeclarationAST * object = (const cPtr_externFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externFunctionDeclarationAST) ;
  GALGAS_formalInputParameterListForGeneration var_formalArgumentList = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1064)) ;
  cEnumerator_formalInputParameterListAST enumerator_42760 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_42760.hasCurrentObject ()) {
    var_formalArgumentList.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_42760.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1067)), enumerator_42760.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1068)), enumerator_42760.current_mFormalArgumentName (HERE), enumerator_42760.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (1066)) ;
    enumerator_42760.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_functionPrototypeDeclarationForGeneration::constructor_new (GALGAS_string ("func-").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1076)) COMMA_SOURCE_FILE_AT_LINE (1076)), object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1077)), var_formalArgumentList, GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mResultTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1079)) COMMA_SOURCE_FILE_AT_LINE (1075)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1073)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_externFunctionDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_externFunctionDeclarationAST.mSlotID,
                                        categoryMethod_externFunctionDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externFunctionDeclarationAST_semanticAnalysis (defineCategoryMethod_externFunctionDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@externRoutineDeclarationAST semanticAnalysis'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_externRoutineDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externRoutineDeclarationAST * object = (const cPtr_externRoutineDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externRoutineDeclarationAST) ;
  GALGAS_formalParameterListForGeneration var_formalArgumentList = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1092)) ;
  cEnumerator_formalParameterListAST enumerator_43722 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_43722.hasCurrentObject ()) {
    var_formalArgumentList.addAssign_operation (enumerator_43722.current_mFormalArgumentPassingMode (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_43722.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1096)), enumerator_43722.current_mFormalArgumentName (HERE), enumerator_43722.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1098)) COMMA_SOURCE_FILE_AT_LINE (1094)) ;
    enumerator_43722.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_routinePrototypeDeclarationForGeneration::constructor_new (GALGAS_string ("proc-").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (1104)) COMMA_SOURCE_FILE_AT_LINE (1104)), object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (1105)), var_formalArgumentList COMMA_SOURCE_FILE_AT_LINE (1103)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1101)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_externRoutineDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_externRoutineDeclarationAST.mSlotID,
                                        categoryMethod_externRoutineDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externRoutineDeclarationAST_semanticAnalysis (defineCategoryMethod_externRoutineDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@routineDeclarationAST semanticAnalysis'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_routineDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                   const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                   GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_routineDeclarationAST * object = (const cPtr_routineDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_routineDeclarationAST) ;
  GALGAS_formalParameterListForGeneration var_formalArgumentList = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1120)) ;
  GALGAS_semanticInstructionListForGeneration var_instructionList ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1125)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1127)) COMMA_SOURCE_FILE_AT_LINE (1122)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mFormalArgumentList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1132)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1133)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1134)), GALGAS_string::makeEmptyString (), object->mAttribute_mRoutineInstructionList, object->mAttribute_mEndOfRoutineInstructionList, var_instructionList, var_formalArgumentList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1129)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_routineImplementationForGeneration::constructor_new (GALGAS_string ("proc-").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (1145)) COMMA_SOURCE_FILE_AT_LINE (1145)), object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (1146)), var_formalArgumentList, var_instructionList COMMA_SOURCE_FILE_AT_LINE (1144)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1142)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_routineDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_routineDeclarationAST.mSlotID,
                                        categoryMethod_routineDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_routineDeclarationAST_semanticAnalysis (defineCategoryMethod_routineDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category method '@classDeclarationAST semanticAnalysis'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_classDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_classDeclarationAST * object = (const cPtr_classDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_classDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mClassTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1162)) ;
  GALGAS_unifiedTypeMapProxy var_superClassProxy ;
  GALGAS_typedAttributeList var_allAttributeList ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (1168)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_superClassProxy = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1169)) ;
    var_allAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1170)) ;
    GALGAS_bool var_generatedInSeparateFileFeature = GALGAS_bool (false) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsStrictSup, object->mAttribute_mClassFeatureList.reader_length (SOURCE_FILE_AT_LINE (1172)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_1) {
      cEnumerator_lstringlist enumerator_46348 (object->mAttribute_mClassFeatureList, kEnumeration_up) ;
      while (enumerator_46348.hasCurrentObject ()) {
        const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_46348.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1174)).objectCompare (GALGAS_string ("generatedInSeparateFile"))).boolEnum () ;
        if (kBoolTrue == test_2) {
          const enumGalgasBool test_3 = var_generatedInSeparateFileFeature.boolEnum () ;
          if (kBoolTrue == test_3) {
            GALGAS_location location_4 (enumerator_46348.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_4, GALGAS_string ("the 'generatedInSeparateFile' is already named") COMMA_SOURCE_FILE_AT_LINE (1176)) ;
          }
          var_generatedInSeparateFileFeature = GALGAS_bool (true) ;
        }else if (kBoolFalse == test_2) {
          GALGAS_location location_5 (enumerator_46348.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_5, GALGAS_string ("only the 'generatedInSeparateFile' feature is allowed here") COMMA_SOURCE_FILE_AT_LINE (1180)) ;
        }
        enumerator_46348.gotoNextObject () ;
      }
    }
  }else if (kBoolFalse == test_0) {
    var_superClassProxy = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSuperClassName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1185)) ;
    var_allAttributeList = var_superClassProxy.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1186)) ;
    const enumGalgasBool test_6 = GALGAS_bool (kIsStrictSup, object->mAttribute_mClassFeatureList.reader_length (SOURCE_FILE_AT_LINE (1187)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_6) {
      cEnumerator_lstringlist enumerator_47009 (object->mAttribute_mClassFeatureList, kEnumeration_up) ;
      while (enumerator_47009.hasCurrentObject ()) {
        GALGAS_location location_7 (enumerator_47009.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_7, GALGAS_string ("a class that has a super class does not accept any feature") COMMA_SOURCE_FILE_AT_LINE (1189)) ;
        enumerator_47009.gotoNextObject () ;
      }
    }
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1194)) ;
  GALGAS_attributeIndexMap var_attributeMap = GALGAS_attributeIndexMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1195)) ;
  cEnumerator_attributeInCollectionListAST enumerator_47292 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_47292.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_t = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_47292.current_mAttributeTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1197)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    cEnumerator_lstringlist enumerator_47480 (enumerator_47292.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_47480.hasCurrentObject ()) {
      const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_47480.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1201)).objectCompare (GALGAS_string ("setter"))).boolEnum () ;
      if (kBoolTrue == test_8) {
        const enumGalgasBool test_9 = var_hasSetter.boolEnum () ;
        if (kBoolTrue == test_9) {
          GALGAS_location location_10 (enumerator_47480.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_10, GALGAS_string ("the 'setter' feature is already named") COMMA_SOURCE_FILE_AT_LINE (1203)) ;
        }
        var_hasSetter = GALGAS_bool (true) ;
      }else if (kBoolFalse == test_8) {
        const enumGalgasBool test_11 = GALGAS_bool (kIsEqual, enumerator_47480.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1206)).objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
        if (kBoolTrue == test_11) {
          const enumGalgasBool test_12 = var_hasGetter.operator_not (SOURCE_FILE_AT_LINE (1207)).boolEnum () ;
          if (kBoolTrue == test_12) {
            GALGAS_location location_13 (enumerator_47480.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_13, GALGAS_string ("the 'nogetter' feature is already named") COMMA_SOURCE_FILE_AT_LINE (1208)) ;
          }
          var_hasGetter = GALGAS_bool (false) ;
        }else if (kBoolFalse == test_11) {
          GALGAS_location location_14 (enumerator_47480.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_14, GALGAS_string ("only the 'setter' or 'nogetter' are allowed here") COMMA_SOURCE_FILE_AT_LINE (1212)) ;
        }
      }
      enumerator_47480.gotoNextObject () ;
    }
    var_typedAttributeList.addAssign_operation (var_t, enumerator_47292.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (1215)) ;
    var_allAttributeList.addAssign_operation (var_t, enumerator_47292.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (1221)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_47292.current_mAttributeName (HERE), var_t, inCompiler COMMA_SOURCE_FILE_AT_LINE (1227)) ;
    }
    enumerator_47292.gotoNextObject () ;
  }
  GALGAS_string var_sortString = var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1230)) ;
  GALGAS_unifiedTypeMapProxy var_t = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1231)) ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1232)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1232)).isValid ()) {
    uint32_t variant_48397 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1232)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1232)).uintValue () ;
    bool loop_48397 = true ;
    while (loop_48397) {
      loop_48397 = var_t.reader_isNull (SOURCE_FILE_AT_LINE (1233)).operator_not (SOURCE_FILE_AT_LINE (1233)).isValid () ;
      if (loop_48397) {
        loop_48397 = var_t.reader_isNull (SOURCE_FILE_AT_LINE (1233)).operator_not (SOURCE_FILE_AT_LINE (1233)).boolValue () ;
      }
      if (loop_48397 && (0 == variant_48397)) {
        loop_48397 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1232)) ;
      }
      if (loop_48397) {
        variant_48397 -- ;
        var_sortString = var_t.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1234)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1234)).operator_concat (var_sortString COMMA_SOURCE_FILE_AT_LINE (1234)) ;
        var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1235)) ;
      }
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_classTypeForGeneration::constructor_new (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mClassTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1241)), object->mAttribute_mIsAbstract, object->mAttribute_mClassTypeName, var_superClassProxy, var_allAttributeList, var_typedAttributeList, var_selfType.reader_mGenerateHeaderInSeparateFile (inCompiler COMMA_SOURCE_FILE_AT_LINE (1247)) COMMA_SOURCE_FILE_AT_LINE (1240)), var_sortString COMMA_SOURCE_FILE_AT_LINE (1238)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_classDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_classDeclarationAST.mSlotID,
                                        categoryMethod_classDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_classDeclarationAST_semanticAnalysis (defineCategoryMethod_classDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@functionDeclarationAST semanticAnalysis'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_functionDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                    const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                    const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                    GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_functionDeclarationAST * object = (const cPtr_functionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_functionDeclarationAST) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_formalInputParameterListForGeneration var_formalInputParameterList ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_resultVariableCppName ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1343)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1345)) COMMA_SOURCE_FILE_AT_LINE (1340)) ;
  {
  routine_analyzeFunctionBody (var_analysisContext, object->mAttribute_mFormalArgumentList, GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1350)), GALGAS_string::makeEmptyString (), object->mAttribute_mFunctionInstructionList, object->mAttribute_mResultVariableName, object->mAttribute_mResultTypeName, object->mAttribute_mEndOfFunctionInstructionList, var_formalInputParameterList, var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1347)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_functionImplementationForGeneration::constructor_new (GALGAS_string ("func-").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1365)) COMMA_SOURCE_FILE_AT_LINE (1365)), object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1366)), var_formalInputParameterList, var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1364)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1362)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_functionDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_functionDeclarationAST.mSlotID,
                                        categoryMethod_functionDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_functionDeclarationAST_semanticAnalysis (defineCategoryMethod_functionDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@onceFunctionDeclarationAST semanticAnalysis'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_onceFunctionDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                        const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                        const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                        GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_onceFunctionDeclarationAST * object = (const cPtr_onceFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_onceFunctionDeclarationAST) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_resultVariableCppName ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1390)), GALGAS_string::makeEmptyString (), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1392)) COMMA_SOURCE_FILE_AT_LINE (1387)) ;
  {
  GALGAS_formalInputParameterListForGeneration joker_54469_0 ; // Joker input parameter
  routine_analyzeFunctionBody (var_analysisContext, GALGAS_formalInputParameterListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1396)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1397)), GALGAS_string::makeEmptyString (), object->mAttribute_mFunctionInstructionList, object->mAttribute_mResultVariableName, object->mAttribute_mResultTypeName, object->mAttribute_mEndOfFunctionInstructionList, joker_54469_0, var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1394)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_onceFunctionDeclarationForGeneration::constructor_new (GALGAS_string ("func-").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1412)) COMMA_SOURCE_FILE_AT_LINE (1412)), object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (1413)), var_returnType, var_resultVariableCppName, var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1411)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1409)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_onceFunctionDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_onceFunctionDeclarationAST.mSlotID,
                                        categoryMethod_onceFunctionDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_onceFunctionDeclarationAST_semanticAnalysis (defineCategoryMethod_onceFunctionDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@filewrapperDeclarationAST semanticAnalysis'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_filewrapperDeclarationAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                       const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                       GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperDeclarationAST * object = (const cPtr_filewrapperDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_filewrapperDeclarationAST) ;
  GALGAS_wrapperFileMap var_wrapperFileMap ;
  GALGAS_wrapperDirectoryMap var_wrapperDirectoryMap ;
  GALGAS_lstring joker_55663_0 ; // Joker input parameter
  GALGAS_lstringlist joker_55670_0 ; // Joker input parameter
  GALGAS_filewrapperTemplateMap joker_55722_0 ; // Joker input parameter
  constinArgument_inSemanticContext.mAttribute_mFilewrapperMap.method_searchKey (object->mAttribute_mFilewrapperName, joker_55663_0, joker_55670_0, var_wrapperFileMap, var_wrapperDirectoryMap, joker_55722_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1436)) ;
  GALGAS_string var_absoluteSourcePath ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mFilewrapperPath.mAttribute_string.reader_firstCharacterOrNul (SOURCE_FILE_AT_LINE (1446)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_absoluteSourcePath = object->mAttribute_mFilewrapperPath.mAttribute_string ;
  }else if (kBoolFalse == test_0) {
    var_absoluteSourcePath = object->mAttribute_mSourceFileAbsolutePath.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (1449)).operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1449)).operator_concat (object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1449)) COMMA_SOURCE_FILE_AT_LINE (1449)) ;
  }
  const enumGalgasBool test_1 = var_absoluteSourcePath.reader_directoryExists (SOURCE_FILE_AT_LINE (1451)).operator_not (SOURCE_FILE_AT_LINE (1451)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_location location_2 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("The '").operator_concat (var_absoluteSourcePath COMMA_SOURCE_FILE_AT_LINE (1452)).operator_concat (GALGAS_string ("' directory does not exist") COMMA_SOURCE_FILE_AT_LINE (1452)) COMMA_SOURCE_FILE_AT_LINE (1452)) ;
  }else if (kBoolFalse == test_1) {
    GALGAS_filewrapperTemplateListForGeneration var_filewrapperTemplateListForGeneration = GALGAS_filewrapperTemplateListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1455)) ;
    cEnumerator_filewrapperTemplateListAST enumerator_56358 (object->mAttribute_mFilewrapperTemplateList, kEnumeration_up) ;
    while (enumerator_56358.hasCurrentObject ()) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_56358.current_mFilewrapperTemplatePath (HERE).reader_string (SOURCE_FILE_AT_LINE (1457)).reader_firstCharacterOrNul (SOURCE_FILE_AT_LINE (1457)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_56358.current_mFilewrapperTemplatePath (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("the path should not begin with a '/'; it is relative to filewrapper path '").operator_concat (var_absoluteSourcePath COMMA_SOURCE_FILE_AT_LINE (1458)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1458)) COMMA_SOURCE_FILE_AT_LINE (1458)) ;
      }
      GALGAS_string var_absoluteTemplatePath = var_absoluteSourcePath.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1460)).operator_concat (enumerator_56358.current_mFilewrapperTemplatePath (HERE).reader_string (SOURCE_FILE_AT_LINE (1460)) COMMA_SOURCE_FILE_AT_LINE (1460)) ;
      GALGAS_templateInstructionListAST var_resultingInstructionList ;
      var_resultingInstructionList.drop () ;
      cGrammar_templateGrammar::_performSourceFileParsing_ (inCompiler, GALGAS_lstring::constructor_new (var_absoluteTemplatePath, enumerator_56358.current_mFilewrapperTemplatePath (HERE).reader_location (SOURCE_FILE_AT_LINE (1463)) COMMA_SOURCE_FILE_AT_LINE (1463)), var_resultingInstructionList COMMA_SOURCE_FILE_AT_LINE (1463)) ;
      GALGAS_templateVariableMap var_templateVariableMap = GALGAS_templateVariableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1465)) ;
      GALGAS_formalInputParameterListForGeneration var_filewrapperTemplateFormalInputParameters = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1466)) ;
      cEnumerator_formalTemplateInputParameterListAST enumerator_57171 (enumerator_56358.current_mFilewrapperTemplateFormalInputParameters (HERE), kEnumeration_up) ;
      while (enumerator_57171.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_type = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_57171.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1468)) ;
        GALGAS_string var_cppVarName = GALGAS_string ("in_").operator_concat (enumerator_57171.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1469)).reader_identifierRepresentation (SOURCE_FILE_AT_LINE (1469)) COMMA_SOURCE_FILE_AT_LINE (1469)) ;
        {
        var_templateVariableMap.modifier_insertKey (enumerator_57171.current_mFormalArgumentName (HERE), var_type, var_cppVarName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1470)) ;
        }
        var_filewrapperTemplateFormalInputParameters.addAssign_operation (var_type, var_cppVarName, enumerator_57171.current_mFormalArgumentName (HERE), GALGAS_bool (true) COMMA_SOURCE_FILE_AT_LINE (1471)) ;
        enumerator_57171.gotoNextObject () ;
      }
      GALGAS_templateInstructionListForGeneration var_templateInstructionListForGeneration = GALGAS_templateInstructionListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1474)) ;
      GALGAS_templateAnalysisContext var_templateAnalysisContext = GALGAS_templateAnalysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_templateVariableMap COMMA_SOURCE_FILE_AT_LINE (1475)) ;
      {
      routine_templateInstructionListAnalysis (var_templateAnalysisContext, var_resultingInstructionList, var_templateInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1480)) ;
      }
      var_filewrapperTemplateListForGeneration.addAssign_operation (enumerator_56358.current_mFilewrapperTemplateName (HERE).reader_string (SOURCE_FILE_AT_LINE (1483)), var_filewrapperTemplateFormalInputParameters, var_templateInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1482)) ;
      enumerator_56358.gotoNextObject () ;
    }
    ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_filewrapperDeclarationForGeneration::constructor_new (GALGAS_string ("filewrapper-").operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1492)) COMMA_SOURCE_FILE_AT_LINE (1492)), object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (1493)), object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1494)), var_wrapperFileMap, var_wrapperDirectoryMap, var_filewrapperTemplateListForGeneration COMMA_SOURCE_FILE_AT_LINE (1491)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1489)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperDeclarationAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_filewrapperDeclarationAST.mSlotID,
                                        categoryMethod_filewrapperDeclarationAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperDeclarationAST_semanticAnalysis (defineCategoryMethod_filewrapperDeclarationAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@abstractCategoryMethodAST semanticAnalysis'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                       const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                       GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryMethodAST * object = (const cPtr_abstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1512)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1514)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1514)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1515)) COMMA_SOURCE_FILE_AT_LINE (1515)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1515)) COMMA_SOURCE_FILE_AT_LINE (1515)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1516)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1517)) COMMA_SOURCE_FILE_AT_LINE (1517)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1517)) COMMA_SOURCE_FILE_AT_LINE (1517)) ;
    }
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1520)) ;
  cEnumerator_formalParameterListAST enumerator_59674 (object->mAttribute_mAbstractCategoryMethodFormalParameterList, kEnumeration_up) ;
  while (enumerator_59674.hasCurrentObject ()) {
    var_formalParameterListForGeneration.addAssign_operation (enumerator_59674.current_mFormalArgumentPassingMode (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_59674.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1524)), enumerator_59674.current_mFormalArgumentName (HERE), enumerator_59674.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1526)) COMMA_SOURCE_FILE_AT_LINE (1522)) ;
    enumerator_59674.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_abstractCategoryMethodForGeneration::constructor_new (GALGAS_string ("method-").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1533)) COMMA_SOURCE_FILE_AT_LINE (1533)).operator_concat (object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1533)) COMMA_SOURCE_FILE_AT_LINE (1533)), object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1534)), object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1535)), var_formalParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (1532)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1530)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                        categoryMethod_abstractCategoryMethodAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryMethodAST_semanticAnalysis (defineCategoryMethod_abstractCategoryMethodAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category method '@categoryMethodAST semanticAnalysis'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryMethodAST * object = (const cPtr_categoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1550)) ;
  GALGAS_string var_selfObjectName ;
  GALGAS_string var_selfObjectAccessor ;
  GALGAS_bool var_implementedAsFunction ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1555)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1555)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_selfObjectName = GALGAS_string ("object") ;
    var_selfObjectAccessor = GALGAS_string ("object->") ;
    var_implementedAsFunction = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    var_selfObjectName = GALGAS_string ("inObject") ;
    var_selfObjectAccessor = GALGAS_string ("inObject.") ;
    var_implementedAsFunction = GALGAS_bool (true) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1565)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, var_selfObjectName, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1572)) COMMA_SOURCE_FILE_AT_LINE (1567)) ;
  {
  //--- @ifExpressionForGeneration
  GALGAS_typedAttributeList temp_1 ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1578)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1578)))).operator_or (GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1578)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (1578)))) COMMA_SOURCE_FILE_AT_LINE (1578)).boolEnum () ;
  if (kBoolTrue == test_2) {
    temp_1 = var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1579)) ;
  }else if (kBoolFalse == test_2) {
    temp_1 = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1580)) ;
  }
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mCategoryMethodFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1577)), temp_1, GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1582)), var_selfObjectAccessor, object->mAttribute_mCategoryMethodInstructionList, object->mAttribute_mEndOfMethodLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1574)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_categoryMethodForGeneration::constructor_new (GALGAS_string ("method-").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1593)) COMMA_SOURCE_FILE_AT_LINE (1593)).operator_concat (GALGAS_string ("-") COMMA_SOURCE_FILE_AT_LINE (1593)).operator_concat (object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1593)) COMMA_SOURCE_FILE_AT_LINE (1593)), var_selfType, object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1595)), var_implementedAsFunction, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1598)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1592)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1590)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                        categoryMethod_categoryMethodAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryMethodAST_semanticAnalysis (defineCategoryMethod_categoryMethodAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@overridingCategoryMethodAST semanticAnalysis'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryMethodAST * object = (const cPtr_overridingCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1613)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1615)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1615)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1616)) COMMA_SOURCE_FILE_AT_LINE (1616)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1616)) COMMA_SOURCE_FILE_AT_LINE (1616)) ;
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1620)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1621)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1623)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1623)).isValid ()) {
    uint32_t variant_63426 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1623)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1623)).uintValue () ;
    bool loop_63426 = true ;
    while (loop_63426) {
      loop_63426 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1624)).operator_not (SOURCE_FILE_AT_LINE (1624)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1624)).isValid () ;
      if (loop_63426) {
        loop_63426 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1624)).operator_not (SOURCE_FILE_AT_LINE (1624)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1624)).boolValue () ;
      }
      if (loop_63426 && (0 == variant_63426)) {
        loop_63426 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1623)) ;
      }
      if (loop_63426) {
        variant_63426 -- ;
        const enumGalgasBool test_2 = var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1625)).reader_hasKey (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1625)) COMMA_SOURCE_FILE_AT_LINE (1625)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_63735_0 ; // Joker input parameter
          GALGAS_bool joker_63788_0 ; // Joker input parameter
          GALGAS_string joker_63802_0 ; // Joker input parameter
          var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1627)).method_searchKey (object->mAttribute_mOverridingCategoryMethodName, joker_63735_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_63788_0, var_qualifier, joker_63802_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1627)) ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1628)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1629)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1632)) ;
      }
    }
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_location location_5 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("this method is not declared by a super class") COMMA_SOURCE_FILE_AT_LINE (1635)) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1638)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, GALGAS_string ("object"), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1645)) COMMA_SOURCE_FILE_AT_LINE (1640)) ;
  {
  //--- @ifExpressionForGeneration
  GALGAS_typedAttributeList temp_6 ;
  const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1651)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1651)))).operator_or (GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1651)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (1651)))) COMMA_SOURCE_FILE_AT_LINE (1651)).boolEnum () ;
  if (kBoolTrue == test_7) {
    temp_6 = var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1652)) ;
  }else if (kBoolFalse == test_7) {
    temp_6 = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1653)) ;
  }
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mOverridingCategoryMethodFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1650)), temp_6, GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1655)), GALGAS_string ("object->"), object->mAttribute_mOverridingCategoryMethodInstructionList, object->mAttribute_mEndOfMethodLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1647)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryMethodName.reader_location (SOURCE_FILE_AT_LINE (1666)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1664)) ;
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_overridingCategoryMethodForGeneration::constructor_new (GALGAS_string::makeEmptyString (), object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1676)), var_baseTypeName, object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1678)), var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1680)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1674)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1672)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                        categoryMethod_overridingCategoryMethodAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryMethodAST_semanticAnalysis (defineCategoryMethod_overridingCategoryMethodAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryMethodAST semanticAnalysis'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                                 GALGAS_semanticDeclarationSortedListForGeneration & /* ioArgument_ioSemanticDeclarationListForGeneration */,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryMethodAST * object = (const cPtr_overridingAbstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryMethodAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1695)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1697)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1697)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1698)) COMMA_SOURCE_FILE_AT_LINE (1698)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1698)) COMMA_SOURCE_FILE_AT_LINE (1698)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1699)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category method: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1700)) COMMA_SOURCE_FILE_AT_LINE (1700)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1700)) COMMA_SOURCE_FILE_AT_LINE (1700)) ;
    }
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1704)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1705)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1707)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1707)).isValid ()) {
    uint32_t variant_66872 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1707)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1707)).uintValue () ;
    bool loop_66872 = true ;
    while (loop_66872) {
      loop_66872 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1708)).operator_not (SOURCE_FILE_AT_LINE (1708)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1708)).isValid () ;
      if (loop_66872) {
        loop_66872 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1708)).operator_not (SOURCE_FILE_AT_LINE (1708)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1708)).boolValue () ;
      }
      if (loop_66872 && (0 == variant_66872)) {
        loop_66872 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1707)) ;
      }
      if (loop_66872) {
        variant_66872 -- ;
        const enumGalgasBool test_4 = var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1709)).reader_hasKey (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (1709)) COMMA_SOURCE_FILE_AT_LINE (1709)).boolEnum () ;
        if (kBoolTrue == test_4) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_67181_0 ; // Joker input parameter
          GALGAS_bool joker_67234_0 ; // Joker input parameter
          GALGAS_string joker_67248_0 ; // Joker input parameter
          var_superType.reader_mInstanceMethodMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1711)).method_searchKey (object->mAttribute_mOverridingCategoryMethodName, joker_67181_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_67234_0, var_qualifier, joker_67248_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1711)) ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1712)))).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1713)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1716)) ;
      }
    }
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    GALGAS_location location_7 (object->mAttribute_mOverridingCategoryMethodName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_7, GALGAS_string ("this reader is not declared by a super class") COMMA_SOURCE_FILE_AT_LINE (1719)) ;
  }
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1722)) ;
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration ;
  {
  routine_buildLocalVariableMapAndSignature (constinArgument_inSemanticContext, object->mAttribute_mOverridingCategoryMethodFormalParameterList, var_variableMap, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1724)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryMethodName.reader_location (SOURCE_FILE_AT_LINE (1734)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1732)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                        categoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryMethodAST_semanticAnalysis (defineCategoryMethod_overridingAbstractCategoryMethodAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@abstractCategoryModifierAST semanticAnalysis'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryModifierAST * object = (const cPtr_abstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1749)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1751)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1751)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1752)) COMMA_SOURCE_FILE_AT_LINE (1752)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1752)) COMMA_SOURCE_FILE_AT_LINE (1752)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1753)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1754)) COMMA_SOURCE_FILE_AT_LINE (1754)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1754)) COMMA_SOURCE_FILE_AT_LINE (1754)) ;
    }
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1757)) ;
  cEnumerator_formalParameterListAST enumerator_69169 (object->mAttribute_mAbstractCategoryModifierFormalParameterList, kEnumeration_up) ;
  while (enumerator_69169.hasCurrentObject ()) {
    var_formalParameterListForGeneration.addAssign_operation (enumerator_69169.current_mFormalArgumentPassingMode (HERE), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_69169.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1761)), enumerator_69169.current_mFormalArgumentName (HERE), enumerator_69169.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1763)) COMMA_SOURCE_FILE_AT_LINE (1759)) ;
    enumerator_69169.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_abstractCategoryModifierForGeneration::constructor_new (GALGAS_string ("setter-").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1770)) COMMA_SOURCE_FILE_AT_LINE (1770)).operator_concat (GALGAS_string ("-") COMMA_SOURCE_FILE_AT_LINE (1770)).operator_concat (object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1770)) COMMA_SOURCE_FILE_AT_LINE (1770)), object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1771)), object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1772)), var_formalParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (1769)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1767)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                        categoryMethod_abstractCategoryModifierAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryModifierAST_semanticAnalysis (defineCategoryMethod_abstractCategoryModifierAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category method '@categoryModifierAST semanticAnalysis'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                 const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                 GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryModifierAST * object = (const cPtr_categoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1787)) ;
  GALGAS_string var_selfObjectName ;
  GALGAS_string var_selfObjectAccessor ;
  GALGAS_bool var_implementedAsFunction ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1792)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1792)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_selfObjectName = GALGAS_string ("object") ;
    var_selfObjectAccessor = GALGAS_string ("object->") ;
    var_implementedAsFunction = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    var_selfObjectName = GALGAS_string ("ioObject") ;
    var_selfObjectAccessor = GALGAS_string ("ioObject.") ;
    var_implementedAsFunction = GALGAS_bool (true) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1802)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, var_selfObjectName, var_selfType COMMA_SOURCE_FILE_AT_LINE (1804)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mCategoryModifierFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1814)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1815)), var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1816)), var_selfObjectAccessor, object->mAttribute_mCategoryModifierInstructionList, object->mAttribute_mEndOfModifierLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1811)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_categoryModifierForGeneration::constructor_new (GALGAS_string ("setter-").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1827)) COMMA_SOURCE_FILE_AT_LINE (1827)).operator_concat (GALGAS_string ("-") COMMA_SOURCE_FILE_AT_LINE (1827)).operator_concat (object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1827)) COMMA_SOURCE_FILE_AT_LINE (1827)), var_selfType, object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1829)), var_implementedAsFunction, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1832)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1826)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1824)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                        categoryMethod_categoryModifierAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryModifierAST_semanticAnalysis (defineCategoryMethod_categoryModifierAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryModifierAST semanticAnalysis' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                           const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                           const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                           GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryModifierAST * object = (const cPtr_overridingCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1847)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1849)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1849)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1850)) COMMA_SOURCE_FILE_AT_LINE (1850)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1850)) COMMA_SOURCE_FILE_AT_LINE (1850)) ;
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1854)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1855)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1857)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1857)).isValid ()) {
    uint32_t variant_72751 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1857)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1857)).uintValue () ;
    bool loop_72751 = true ;
    while (loop_72751) {
      loop_72751 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1858)).operator_not (SOURCE_FILE_AT_LINE (1858)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1858)).isValid () ;
      if (loop_72751) {
        loop_72751 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1858)).operator_not (SOURCE_FILE_AT_LINE (1858)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1858)).boolValue () ;
      }
      if (loop_72751 && (0 == variant_72751)) {
        loop_72751 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1857)) ;
      }
      if (loop_72751) {
        variant_72751 -- ;
        const enumGalgasBool test_2 = var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1859)).reader_hasKey (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1859)) COMMA_SOURCE_FILE_AT_LINE (1859)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_73052_0 ; // Joker input parameter
          GALGAS_bool joker_73075_0 ; // Joker input parameter
          GALGAS_string joker_73089_0 ; // Joker input parameter
          var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1861)).method_searchKey (object->mAttribute_mOverridingCategoryModifierName, joker_73052_0, var_inheritedSignature, joker_73075_0, var_qualifier, joker_73089_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1861)) ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1862)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1863)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1866)) ;
      }
    }
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_location location_5 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("this modifier is not declared by a super class") COMMA_SOURCE_FILE_AT_LINE (1869)) ;
  }
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1872)) ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, GALGAS_string ("object"), var_selfType COMMA_SOURCE_FILE_AT_LINE (1874)) ;
  {
  routine_analyzeRoutineBody (var_analysisContext, object->mAttribute_mOverridingCategoryModifierFormalParameterList, GALGAS_localConstantList::constructor_emptyList (SOURCE_FILE_AT_LINE (1884)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1885)), var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1886)), GALGAS_string ("object->"), object->mAttribute_mOverridingCategoryModifierInstructionList, object->mAttribute_mEndOfModifierLocation, var_semanticInstructionListForGeneration, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1881)) ;
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryModifierName.reader_location (SOURCE_FILE_AT_LINE (1897)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1895)) ;
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_overridingCategoryModifierForGeneration::constructor_new (GALGAS_string::makeEmptyString (), object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (1907)), var_baseTypeName, object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1909)), var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (1911)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1905)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1903)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                        categoryMethod_overridingCategoryModifierAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryModifierAST_semanticAnalysis (defineCategoryMethod_overridingCategoryModifierAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryModifierAST semanticAnalysis'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                                   const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                                   const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                                   GALGAS_semanticDeclarationSortedListForGeneration & /* ioArgument_ioSemanticDeclarationListForGeneration */,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryModifierAST * object = (const cPtr_overridingAbstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryModifierAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1926)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1928)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1928)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1929)) COMMA_SOURCE_FILE_AT_LINE (1929)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1929)) COMMA_SOURCE_FILE_AT_LINE (1929)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1930)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category modifier: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1931)) COMMA_SOURCE_FILE_AT_LINE (1931)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1931)) COMMA_SOURCE_FILE_AT_LINE (1931)) ;
    }
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1935)) ;
  GALGAS_formalParameterSignature var_inheritedSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1936)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1938)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1938)).isValid ()) {
    uint32_t variant_75986 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (1938)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1938)).uintValue () ;
    bool loop_75986 = true ;
    while (loop_75986) {
      loop_75986 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1939)).operator_not (SOURCE_FILE_AT_LINE (1939)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1939)).isValid () ;
      if (loop_75986) {
        loop_75986 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (1939)).operator_not (SOURCE_FILE_AT_LINE (1939)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (1939)).boolValue () ;
      }
      if (loop_75986 && (0 == variant_75986)) {
        loop_75986 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (1938)) ;
      }
      if (loop_75986) {
        variant_75986 -- ;
        const enumGalgasBool test_4 = var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1940)).reader_hasKey (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (1940)) COMMA_SOURCE_FILE_AT_LINE (1940)).boolEnum () ;
        if (kBoolTrue == test_4) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_76287_0 ; // Joker input parameter
          GALGAS_bool joker_76310_0 ; // Joker input parameter
          GALGAS_string joker_76324_0 ; // Joker input parameter
          var_superType.reader_mModifierMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (1942)).method_searchKey (object->mAttribute_mOverridingCategoryModifierName, joker_76287_0, var_inheritedSignature, joker_76310_0, var_qualifier, joker_76324_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1942)) ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1943)))).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1944)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (1947)) ;
      }
    }
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    GALGAS_location location_7 (object->mAttribute_mOverridingCategoryModifierName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_7, GALGAS_string ("this modifier is not declared by a super class") COMMA_SOURCE_FILE_AT_LINE (1950)) ;
  }
  GALGAS_variableMap var_variableMap = GALGAS_variableMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1953)) ;
  GALGAS_formalParameterListForGeneration var_formalParameterListForGeneration ;
  {
  routine_buildLocalVariableMapAndSignature (constinArgument_inSemanticContext, object->mAttribute_mOverridingCategoryModifierFormalParameterList, var_variableMap, var_formalParameterListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1955)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    {
    routine_checkMethodSignatures (var_formalParameterListForGeneration, object->mAttribute_mOverridingCategoryModifierName.reader_location (SOURCE_FILE_AT_LINE (1965)), var_inheritedSignature, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (1963)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                        categoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryModifierAST_semanticAnalysis (defineCategoryMethod_overridingAbstractCategoryModifierAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@abstractCategoryReaderAST semanticAnalysis'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                       const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                       GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryReaderAST * object = (const cPtr_abstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1980)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (1982)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (1982)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1983)) COMMA_SOURCE_FILE_AT_LINE (1983)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (1983)) COMMA_SOURCE_FILE_AT_LINE (1983)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (1984)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (1985)) COMMA_SOURCE_FILE_AT_LINE (1985)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (1985)) COMMA_SOURCE_FILE_AT_LINE (1985)) ;
    }
  }
  GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1988)) ;
  cEnumerator_formalInputParameterListAST enumerator_78249 (object->mAttribute_mAbstractCategoryReaderFormalInputParameterList, kEnumeration_up) ;
  while (enumerator_78249.hasCurrentObject ()) {
    var_formalParameterListForGeneration.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_78249.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1991)), enumerator_78249.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1992)), enumerator_78249.current_mFormalArgumentName (HERE), enumerator_78249.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (1990)) ;
    enumerator_78249.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_abstractCategoryReaderForGeneration::constructor_new (GALGAS_string ("getter-").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (2001)) COMMA_SOURCE_FILE_AT_LINE (2001)).operator_concat (GALGAS_string ("-") COMMA_SOURCE_FILE_AT_LINE (2001)).operator_concat (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2001)) COMMA_SOURCE_FILE_AT_LINE (2001)), object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (2002)), object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2003)), GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAbstractCategoryReaderReturnedTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2004)), var_formalParameterListForGeneration COMMA_SOURCE_FILE_AT_LINE (2000)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (1998)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                        categoryMethod_abstractCategoryReaderAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryReaderAST_semanticAnalysis (defineCategoryMethod_abstractCategoryReaderAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category method '@categoryReaderAST semanticAnalysis'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                               const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                               const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                               GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryReaderAST * object = (const cPtr_categoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2021)) ;
  GALGAS_string var_selfObjectName ;
  GALGAS_string var_selfObjectAccessor ;
  GALGAS_bool var_implementedAsFunction ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2026)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2026)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_selfObjectName = GALGAS_string ("object") ;
    var_selfObjectAccessor = GALGAS_string ("object->") ;
    var_implementedAsFunction = GALGAS_bool (false) ;
  }else if (kBoolFalse == test_0) {
    var_selfObjectName = GALGAS_string ("inObject") ;
    var_selfObjectAccessor = GALGAS_string ("inObject.") ;
    var_implementedAsFunction = GALGAS_bool (true) ;
  }
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, var_selfObjectName, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2041)) COMMA_SOURCE_FILE_AT_LINE (2036)) ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_returnVariableCppName ;
  GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  {
  //--- @ifExpressionForGeneration
  GALGAS_typedAttributeList temp_1 ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2050)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2050)))).operator_or (GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2050)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (2050)))) COMMA_SOURCE_FILE_AT_LINE (2050)).boolEnum () ;
  if (kBoolTrue == test_2) {
    temp_1 = var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2051)) ;
  }else if (kBoolFalse == test_2) {
    temp_1 = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2052)) ;
  }
  routine_analyzeFunctionBody (var_analysisContext, object->mAttribute_mCategoryReaderFormalInputParameterList, temp_1, var_selfObjectAccessor, object->mAttribute_mCategoryReaderInstructionList, object->mAttribute_mCategoryReaderReturnedVariableName, object->mAttribute_mCategoryReaderReturnedTypeName, object->mAttribute_mEndOfReaderLocation, var_formalParameterListForGeneration, var_returnType, var_returnVariableCppName, var_semanticInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (2047)) ;
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_categoryReaderForGeneration::constructor_new (GALGAS_string ("getter-").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2068)) COMMA_SOURCE_FILE_AT_LINE (2068)).operator_concat (GALGAS_string ("-") COMMA_SOURCE_FILE_AT_LINE (2068)).operator_concat (object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2068)) COMMA_SOURCE_FILE_AT_LINE (2068)), var_selfType, object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2070)), var_implementedAsFunction, var_returnType, var_returnVariableCppName, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2075)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (2067)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (2065)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                        categoryMethod_categoryReaderAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryReaderAST_semanticAnalysis (defineCategoryMethod_categoryReaderAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@overridingCategoryReaderAST semanticAnalysis'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                         const GALGAS_predefinedTypes constinArgument_inPredefinedTypes,
                                                                         GALGAS_semanticDeclarationSortedListForGeneration & ioArgument_ioSemanticDeclarationListForGeneration,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryReaderAST * object = (const cPtr_overridingCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2090)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2092)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2092)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mOverridingCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2093)) COMMA_SOURCE_FILE_AT_LINE (2093)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (2093)) COMMA_SOURCE_FILE_AT_LINE (2093)) ;
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2097)) ;
  GALGAS_unifiedTypeMapProxyAndParameterList var_inheritedSignature = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2098)) ;
  GALGAS_unifiedTypeMapProxy var_inheritedReturnType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2099)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2101)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2101)).isValid ()) {
    uint32_t variant_82331 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2101)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2101)).uintValue () ;
    bool loop_82331 = true ;
    while (loop_82331) {
      loop_82331 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (2102)).operator_not (SOURCE_FILE_AT_LINE (2102)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (2102)).isValid () ;
      if (loop_82331) {
        loop_82331 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (2102)).operator_not (SOURCE_FILE_AT_LINE (2102)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (2102)).boolValue () ;
      }
      if (loop_82331 && (0 == variant_82331)) {
        loop_82331 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2101)) ;
      }
      if (loop_82331) {
        variant_82331 -- ;
        const enumGalgasBool test_2 = var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2103)).reader_hasKey (object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2103)) COMMA_SOURCE_FILE_AT_LINE (2103)).boolEnum () ;
        if (kBoolTrue == test_2) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_82605_0 ; // Joker input parameter
          GALGAS_bool joker_82682_0 ; // Joker input parameter
          GALGAS_string joker_82759_0 ; // Joker input parameter
          var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2104)).method_searchKey (object->mAttribute_mOverridingCategoryReaderName, joker_82605_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_82682_0, var_inheritedReturnType, var_qualifier, joker_82759_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2104)) ;
          const enumGalgasBool test_3 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2114)))).boolEnum () ;
          if (kBoolTrue == test_3) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2115)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2118)) ;
      }
    }
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_location location_5 (object->mAttribute_mOverridingCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("this reader is not declared by a super class") COMMA_SOURCE_FILE_AT_LINE (2121)) ;
  }
  GALGAS_analysisContext var_analysisContext = GALGAS_analysisContext::constructor_new (constinArgument_inSemanticContext, constinArgument_inPredefinedTypes, var_selfType, GALGAS_string ("object"), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2129)) COMMA_SOURCE_FILE_AT_LINE (2124)) ;
  GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration ;
  GALGAS_unifiedTypeMapProxy var_returnType ;
  GALGAS_string var_returnVariableCppName ;
  GALGAS_semanticInstructionListForGeneration var_semanticInstructionListForGeneration ;
  {
  //--- @ifExpressionForGeneration
  GALGAS_typedAttributeList temp_6 ;
  const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2135)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2135)))).operator_or (GALGAS_bool (kIsEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2135)).objectCompare (GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (2135)))) COMMA_SOURCE_FILE_AT_LINE (2135)).boolEnum () ;
  if (kBoolTrue == test_7) {
    temp_6 = var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2136)) ;
  }else if (kBoolFalse == test_7) {
    temp_6 = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2137)) ;
  }
  routine_analyzeFunctionBody (var_analysisContext, object->mAttribute_mOverridingCategoryReaderFormalInputParameterList, temp_6, GALGAS_string ("object->"), object->mAttribute_mOverridingCategoryReaderInstructionList, object->mAttribute_mOverridingCategoryReaderReturnedVariableName, object->mAttribute_mOverridingCategoryReaderReturnedTypeName, object->mAttribute_mEndOfReaderLocation, var_formalParameterListForGeneration, var_returnType, var_returnVariableCppName, var_semanticInstructionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (2131)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    {
    routine_checkReaderSignatures (var_formalParameterListForGeneration, var_returnType, object->mAttribute_mOverridingCategoryReaderName.reader_location (SOURCE_FILE_AT_LINE (2154)), var_inheritedSignature, var_inheritedReturnType, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (2151)) ;
    }
  }
  ioArgument_ioSemanticDeclarationListForGeneration.addAssign_operation (object->mAttribute_mIsPredefined, GALGAS_overrideCategoryReaderForGeneration::constructor_new (GALGAS_string::makeEmptyString (), object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (2165)), var_baseTypeName, object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2167)), var_returnType, var_returnVariableCppName, var_formalParameterListForGeneration, var_selfType.reader_mAllTypedAttributeList (inCompiler COMMA_SOURCE_FILE_AT_LINE (2171)), var_semanticInstructionListForGeneration COMMA_SOURCE_FILE_AT_LINE (2163)), GALGAS_string ("~") COMMA_SOURCE_FILE_AT_LINE (2161)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                        categoryMethod_overridingCategoryReaderAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryReaderAST_semanticAnalysis (defineCategoryMethod_overridingCategoryReaderAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryReaderAST semanticAnalysis'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis (const cPtr_semanticDeclarationAST * inObject,
                                                                                 const GALGAS_semanticContext constinArgument_inSemanticContext,
                                                                                 const GALGAS_predefinedTypes /* constinArgument_inPredefinedTypes */,
                                                                                 GALGAS_semanticDeclarationSortedListForGeneration & /* ioArgument_ioSemanticDeclarationListForGeneration */,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryReaderAST * object = (const cPtr_overridingAbstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryReaderAST) ;
  GALGAS_unifiedTypeMapProxy var_selfType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2186)) ;
  GALGAS_unifiedTypeMapProxy var_returnType = GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAbstractCategoryReaderReturnedTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2188)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_selfType.reader_mTypeKindEnum (inCompiler COMMA_SOURCE_FILE_AT_LINE (2190)).objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2190)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("cannot declare a category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2191)) COMMA_SOURCE_FILE_AT_LINE (2191)).operator_concat (GALGAS_string ("' is not a class") COMMA_SOURCE_FILE_AT_LINE (2191)) COMMA_SOURCE_FILE_AT_LINE (2191)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_selfType.reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (2192)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("cannot declare an abstract category reader: '@").operator_concat (var_selfType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2193)) COMMA_SOURCE_FILE_AT_LINE (2193)).operator_concat (GALGAS_string ("' is not an abstract class") COMMA_SOURCE_FILE_AT_LINE (2193)) COMMA_SOURCE_FILE_AT_LINE (2193)) ;
    }
  }
  GALGAS_string var_baseTypeName = GALGAS_string::makeEmptyString () ;
  GALGAS_unifiedTypeMapProxy var_superType = var_selfType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2197)) ;
  GALGAS_unifiedTypeMapProxyAndParameterList var_inheritedSignature = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2198)) ;
  GALGAS_unifiedTypeMapProxy var_inheritedReturnType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2199)) ;
  GALGAS_location var_inheritedDeclarationLocation = inCompiler->here () ;
  if (constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2201)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2201)).isValid ()) {
    uint32_t variant_86212 = constinArgument_inSemanticContext.mAttribute_mTypeMap.reader_count (SOURCE_FILE_AT_LINE (2201)).add_operation (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (2201)).uintValue () ;
    bool loop_86212 = true ;
    while (loop_86212) {
      loop_86212 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (2202)).operator_not (SOURCE_FILE_AT_LINE (2202)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (2202)).isValid () ;
      if (loop_86212) {
        loop_86212 = var_superType.reader_isNull (SOURCE_FILE_AT_LINE (2202)).operator_not (SOURCE_FILE_AT_LINE (2202)).operator_and (GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())) COMMA_SOURCE_FILE_AT_LINE (2202)).boolValue () ;
      }
      if (loop_86212 && (0 == variant_86212)) {
        loop_86212 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2201)) ;
      }
      if (loop_86212) {
        variant_86212 -- ;
        const enumGalgasBool test_4 = var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2203)).reader_hasKey (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (2203)) COMMA_SOURCE_FILE_AT_LINE (2203)).boolEnum () ;
        if (kBoolTrue == test_4) {
          GALGAS_methodQualifier var_qualifier ;
          GALGAS_methodKind joker_86517_0 ; // Joker input parameter
          GALGAS_bool joker_86594_0 ; // Joker input parameter
          GALGAS_string joker_86653_0 ; // Joker input parameter
          var_superType.reader_mReaderMap (inCompiler COMMA_SOURCE_FILE_AT_LINE (2205)).method_searchKey (object->mAttribute_mAbstractCategoryReaderName, joker_86517_0, var_inheritedSignature, var_inheritedDeclarationLocation, joker_86594_0, var_inheritedReturnType, var_qualifier, joker_86653_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2205)) ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsInfOrEqual, var_qualifier.objectCompare (GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2215)))).boolEnum () ;
          if (kBoolTrue == test_5) {
            var_baseTypeName = var_superType.reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2216)) ;
          }
        }
        var_superType = var_superType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE_AT_LINE (2219)) ;
      }
    }
  }
  const enumGalgasBool test_6 = GALGAS_bool (kIsEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_6) {
    GALGAS_location location_7 (object->mAttribute_mAbstractCategoryReaderName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_7, GALGAS_string ("this reader is not declared by a super class") COMMA_SOURCE_FILE_AT_LINE (2222)) ;
  }
  const enumGalgasBool test_8 = GALGAS_bool (kIsNotEqual, var_baseTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_8) {
    GALGAS_formalInputParameterListForGeneration var_formalParameterListForGeneration = GALGAS_formalInputParameterListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (2226)) ;
    cEnumerator_formalInputParameterListAST enumerator_87175 (object->mAttribute_mAbstractCategoryReaderFormalInputParameterList, kEnumeration_up) ;
    while (enumerator_87175.hasCurrentObject ()) {
      var_formalParameterListForGeneration.addAssign_operation (GALGAS_unifiedTypeMapProxy::constructor_searchKey (constinArgument_inSemanticContext.mAttribute_mTypeMap, enumerator_87175.current_mFormalArgumentTypeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2229)), enumerator_87175.current_mFormalArgumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (2230)), enumerator_87175.current_mFormalArgumentName (HERE), enumerator_87175.current_mIsConstant (HERE) COMMA_SOURCE_FILE_AT_LINE (2228)) ;
      enumerator_87175.gotoNextObject () ;
    }
    {
    routine_checkReaderSignatures (var_formalParameterListForGeneration, var_returnType, object->mAttribute_mAbstractCategoryReaderName.reader_location (SOURCE_FILE_AT_LINE (2238)), var_inheritedSignature, var_inheritedReturnType, var_inheritedDeclarationLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (2235)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                        categoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryReaderAST_semanticAnalysis (defineCategoryMethod_overridingAbstractCategoryReaderAST_semanticAnalysis, NULL) ;

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element::GALGAS_attributeIndexMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAttributeTypeIndex () {
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element::~ GALGAS_attributeIndexMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element::GALGAS_attributeIndexMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                          const GALGAS_unifiedTypeMapProxy & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mAttributeTypeIndex (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element GALGAS_attributeIndexMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_attributeIndexMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                              GALGAS_unifiedTypeMapProxy::constructor_null (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element GALGAS_attributeIndexMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                          const GALGAS_unifiedTypeMapProxy & inOperand1 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_attributeIndexMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_attributeIndexMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_attributeIndexMap_2E_element::objectCompare (const GALGAS_attributeIndexMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeTypeIndex.objectCompare (inOperand.mAttribute_mAttributeTypeIndex) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_attributeIndexMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeTypeIndex.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeIndexMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAttributeTypeIndex.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeIndexMap_2E_element::description (C_String & ioString,
                                                       const int32_t inIndentation) const {
  ioString << "<struct @attributeIndexMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeTypeIndex.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_attributeIndexMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_attributeIndexMap_2E_element::reader_mAttributeTypeIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeTypeIndex ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @attributeIndexMap.element type                       *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeIndexMap_2E_element ("attributeIndexMap.element",
                                                     NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeIndexMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeIndexMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeIndexMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeIndexMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeIndexMap_2E_element GALGAS_attributeIndexMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_attributeIndexMap_2E_element result ;
  const GALGAS_attributeIndexMap_2E_element * p = (const GALGAS_attributeIndexMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeIndexMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeIndexMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element::GALGAS_constantIndexMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mIndex () {
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element::~ GALGAS_constantIndexMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element::GALGAS_constantIndexMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                        const GALGAS_uint & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mIndex (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element GALGAS_constantIndexMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_constantIndexMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                             GALGAS_uint::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element GALGAS_constantIndexMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_uint & inOperand1 
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_constantIndexMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_constantIndexMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_constantIndexMap_2E_element::objectCompare (const GALGAS_constantIndexMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIndex.objectCompare (inOperand.mAttribute_mIndex) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_constantIndexMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIndex.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_constantIndexMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mIndex.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_constantIndexMap_2E_element::description (C_String & ioString,
                                                      const int32_t inIndentation) const {
  ioString << "<struct @constantIndexMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIndex.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_constantIndexMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_constantIndexMap_2E_element::reader_mIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIndex ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @constantIndexMap.element type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_constantIndexMap_2E_element ("constantIndexMap.element",
                                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_constantIndexMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_constantIndexMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_constantIndexMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_constantIndexMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_constantIndexMap_2E_element GALGAS_constantIndexMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_constantIndexMap_2E_element result ;
  const GALGAS_constantIndexMap_2E_element * p = (const GALGAS_constantIndexMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_constantIndexMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("constantIndexMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element::GALGAS_insertMethodMap_2E_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element::~ GALGAS_insertMethodMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element::GALGAS_insertMethodMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element GALGAS_insertMethodMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_insertMethodMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element GALGAS_insertMethodMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_insertMethodMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_insertMethodMap_2E_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_insertMethodMap_2E_element::objectCompare (const GALGAS_insertMethodMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_insertMethodMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_insertMethodMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_insertMethodMap_2E_element::description (C_String & ioString,
                                                     const int32_t inIndentation) const {
  ioString << "<struct @insertMethodMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_insertMethodMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @insertMethodMap.element type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_insertMethodMap_2E_element ("insertMethodMap.element",
                                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_insertMethodMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_insertMethodMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_insertMethodMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_insertMethodMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_insertMethodMap_2E_element GALGAS_insertMethodMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_insertMethodMap_2E_element result ;
  const GALGAS_insertMethodMap_2E_element * p = (const GALGAS_insertMethodMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_insertMethodMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("insertMethodMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element::GALGAS_searchMethodMap_2E_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element::~ GALGAS_searchMethodMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element::GALGAS_searchMethodMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element GALGAS_searchMethodMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_searchMethodMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element GALGAS_searchMethodMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_searchMethodMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_searchMethodMap_2E_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_searchMethodMap_2E_element::objectCompare (const GALGAS_searchMethodMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_searchMethodMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_searchMethodMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_searchMethodMap_2E_element::description (C_String & ioString,
                                                     const int32_t inIndentation) const {
  ioString << "<struct @searchMethodMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_searchMethodMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @searchMethodMap.element type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_searchMethodMap_2E_element ("searchMethodMap.element",
                                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_searchMethodMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_searchMethodMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_searchMethodMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_searchMethodMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_searchMethodMap_2E_element GALGAS_searchMethodMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_searchMethodMap_2E_element result ;
  const GALGAS_searchMethodMap_2E_element * p = (const GALGAS_searchMethodMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_searchMethodMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("searchMethodMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element::GALGAS_declaredMethodMap_2E_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element::~ GALGAS_declaredMethodMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element::GALGAS_declaredMethodMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element GALGAS_declaredMethodMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_declaredMethodMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element GALGAS_declaredMethodMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_declaredMethodMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_declaredMethodMap_2E_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_declaredMethodMap_2E_element::objectCompare (const GALGAS_declaredMethodMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_declaredMethodMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_declaredMethodMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_declaredMethodMap_2E_element::description (C_String & ioString,
                                                       const int32_t inIndentation) const {
  ioString << "<struct @declaredMethodMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_declaredMethodMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @declaredMethodMap.element type                       *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_declaredMethodMap_2E_element ("declaredMethodMap.element",
                                                     NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_declaredMethodMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_declaredMethodMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_declaredMethodMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_declaredMethodMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_declaredMethodMap_2E_element GALGAS_declaredMethodMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_declaredMethodMap_2E_element result ;
  const GALGAS_declaredMethodMap_2E_element * p = (const GALGAS_declaredMethodMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_declaredMethodMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("declaredMethodMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


