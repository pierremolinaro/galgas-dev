//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'expressionMetamodel.h'                        *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       june 26th, 2007, at 19h31'4"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef expressionMetamodel_METAMODEL_DEFINED
#define expressionMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

sint32 _metamodel_index_for_expressionMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_semanticExpression ;
class GGS_semanticExpression ;
class cPtr_semanticExpression ;
class GGS__list_outExpressionList ;
class GGS_outExpressionList ;
class cPtr_outExpressionList ;
class GGS__list_variableExpression ;
class GGS_variableExpression ;
class cPtr_variableExpression ;
class GGS__list_selfInExpression ;
class GGS_selfInExpression ;
class cPtr_selfInExpression ;
class GGS__list_hereExpression ;
class GGS_hereExpression ;
class cPtr_hereExpression ;
class GGS__list_trueExpression ;
class GGS_trueExpression ;
class cPtr_trueExpression ;
class GGS__list_falseExpression ;
class GGS_falseExpression ;
class cPtr_falseExpression ;
class GGS__list_literalCharExpression ;
class GGS_literalCharExpression ;
class cPtr_literalCharExpression ;
class GGS__list_literalStringExpression ;
class GGS_literalStringExpression ;
class cPtr_literalStringExpression ;
class GGS__list_literalDoubleExpression ;
class GGS_literalDoubleExpression ;
class cPtr_literalDoubleExpression ;
class GGS__list_literalUIntExpression ;
class GGS_literalUIntExpression ;
class cPtr_literalUIntExpression ;
class GGS__list_literalUInt64Expression ;
class GGS_literalUInt64Expression ;
class cPtr_literalUInt64Expression ;
class GGS__list_literalSIntExpression ;
class GGS_literalSIntExpression ;
class cPtr_literalSIntExpression ;
class GGS__list_literalSInt64Expression ;
class GGS_literalSInt64Expression ;
class cPtr_literalSInt64Expression ;
class GGS__list_constructorExpression ;
class GGS_constructorExpression ;
class cPtr_constructorExpression ;
class GGS__list_readerCallExpression ;
class GGS_readerCallExpression ;
class cPtr_readerCallExpression ;
class GGS__list_optionExpression ;
class GGS_optionExpression ;
class cPtr_optionExpression ;
class GGS__list_concatExpression ;
class GGS_concatExpression ;
class cPtr_concatExpression ;
class GGS__list_orExpression ;
class GGS_orExpression ;
class cPtr_orExpression ;
class GGS__list_xorExpression ;
class GGS_xorExpression ;
class cPtr_xorExpression ;
class GGS__list_andExpression ;
class GGS_andExpression ;
class cPtr_andExpression ;
class GGS__list_equalExpression ;
class GGS_equalExpression ;
class cPtr_equalExpression ;
class GGS__list_notEqualExpression ;
class GGS_notEqualExpression ;
class cPtr_notEqualExpression ;
class GGS__list_lowerOrEqualExpression ;
class GGS_lowerOrEqualExpression ;
class cPtr_lowerOrEqualExpression ;
class GGS__list_greaterOrEqualExpression ;
class GGS_greaterOrEqualExpression ;
class cPtr_greaterOrEqualExpression ;
class GGS__list_strictGreaterExpression ;
class GGS_strictGreaterExpression ;
class cPtr_strictGreaterExpression ;
class GGS__list_strictLowerExpression ;
class GGS_strictLowerExpression ;
class cPtr_strictLowerExpression ;
class GGS__list_leftShiftExpression ;
class GGS_leftShiftExpression ;
class cPtr_leftShiftExpression ;
class GGS__list_rightShiftExpression ;
class GGS_rightShiftExpression ;
class cPtr_rightShiftExpression ;
class GGS__list_addExpression ;
class GGS_addExpression ;
class cPtr_addExpression ;
class GGS__list_subExpression ;
class GGS_subExpression ;
class cPtr_subExpression ;
class GGS__list_multiplicationExpression ;
class GGS_multiplicationExpression ;
class cPtr_multiplicationExpression ;
class GGS__list_divisionExpression ;
class GGS_divisionExpression ;
class cPtr_divisionExpression ;
class GGS__list_moduloExpression ;
class GGS_moduloExpression ;
class cPtr_moduloExpression ;
class GGS__list_unaryMinusExpression ;
class GGS_unaryMinusExpression ;
class cPtr_unaryMinusExpression ;
class GGS__list_notExpression ;
class GGS_notExpression ;
class cPtr_notExpression ;
class GGS__list_negateExpression ;
class GGS_negateExpression ;
class cPtr_negateExpression ;
class GGS__list_varInExpression ;
class GGS_varInExpression ;
class cPtr_varInExpression ;
class GGS__list_descriptionInExpression ;
class GGS_descriptionInExpression ;
class cPtr_descriptionInExpression ;
class GGS__list_castInExpression ;
class GGS_castInExpression ;
class cPtr_castInExpression ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS entity '@semanticExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_semanticExpression : public AC_galgas_entity {
//--- getPtr
  public : inline cPtr_semanticExpression * getPtr (void) const {
    return (cPtr_semanticExpression *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_semanticExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_semanticExpression * operator () (void) const {
      return (cPtr_semanticExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS list of entity '@semanticExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_semanticExpression : public AC_galgas_entity_list {
  public : typedef cPtr_semanticExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_semanticExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_semanticExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_semanticExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_semanticExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_semanticExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_semanticExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_semanticExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_semanticExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_semanticExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_semanticExpression _operator_concat (const GGS__list_semanticExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_semanticExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues () ; */

/*  protected : void _internalPrependValues () ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_semanticExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@outExpressionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_outExpressionList : public AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_outExpressionList constructor_new (C_Compiler & inLexique,
                                const GGS__list_semanticExpression & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_outExpressionList * getPtr (void) const {
    return (cPtr_outExpressionList *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS__list_semanticExpression  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mEndOfExpressionLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_outExpressionList * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_outExpressionList * operator () (void) const {
      return (cPtr_outExpressionList *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@outExpressionList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_outExpressionList : public AC_galgas_entity_list {
  public : typedef cPtr_outExpressionList element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_outExpressionList constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_outExpressionList
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_outExpressionList & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_outExpressionList * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_outExpressionList & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_outExpressionList & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_outExpressionList & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_outExpressionList & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_outExpressionList & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_outExpressionList _operator_concat (const GGS__list_outExpressionList & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_outExpressionList & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS__list_semanticExpression & argument_0,
                                const GGS_location & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS__list_semanticExpression & argument_0,
                                const GGS_location & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_outExpressionList & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS entity '@variableExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_variableExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_variableExpression constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mVariableName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_variableExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_variableExpression * operator () (void) const {
      return (cPtr_variableExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS list of entity '@variableExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_variableExpression : public AC_galgas_entity_list {
  public : typedef cPtr_variableExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_variableExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_variableExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_variableExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_variableExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_variableExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_variableExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_variableExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_variableExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_variableExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_variableExpression _operator_concat (const GGS__list_variableExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_variableExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_variableExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@selfInExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_selfInExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_selfInExpression constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_selfInExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_selfInExpression * operator () (void) const {
      return (cPtr_selfInExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@selfInExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_selfInExpression : public AC_galgas_entity_list {
  public : typedef cPtr_selfInExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_selfInExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_selfInExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_selfInExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_selfInExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_selfInExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_selfInExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_selfInExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_selfInExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_selfInExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_selfInExpression _operator_concat (const GGS__list_selfInExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_selfInExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues () ; */

/*  protected : void _internalPrependValues () ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_selfInExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@hereExpression'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_hereExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_hereExpression constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_hereExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_hereExpression * operator () (void) const {
      return (cPtr_hereExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@hereExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_hereExpression : public AC_galgas_entity_list {
  public : typedef cPtr_hereExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_hereExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_hereExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_hereExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_hereExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_hereExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_hereExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_hereExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_hereExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_hereExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_hereExpression _operator_concat (const GGS__list_hereExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_hereExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues () ; */

/*  protected : void _internalPrependValues () ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_hereExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@trueExpression'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_trueExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_trueExpression constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_trueExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_trueExpression * operator () (void) const {
      return (cPtr_trueExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@trueExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_trueExpression : public AC_galgas_entity_list {
  public : typedef cPtr_trueExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_trueExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_trueExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_trueExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_trueExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_trueExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_trueExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_trueExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_trueExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_trueExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_trueExpression _operator_concat (const GGS__list_trueExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_trueExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues () ; */

/*  protected : void _internalPrependValues () ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_trueExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@falseExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_falseExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_falseExpression constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_falseExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_falseExpression * operator () (void) const {
      return (cPtr_falseExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@falseExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_falseExpression : public AC_galgas_entity_list {
  public : typedef cPtr_falseExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_falseExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_falseExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_falseExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_falseExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_falseExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_falseExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_falseExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_falseExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_falseExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_falseExpression _operator_concat (const GGS__list_falseExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_falseExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues () ; */

/*  protected : void _internalPrependValues () ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_falseExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@literalCharExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_literalCharExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_literalCharExpression constructor_new (C_Compiler & inLexique,
                                const GGS_lchar & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lchar  reader_mCharacter (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalCharExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalCharExpression * operator () (void) const {
      return (cPtr_literalCharExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@literalCharExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_literalCharExpression : public AC_galgas_entity_list {
  public : typedef cPtr_literalCharExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_literalCharExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_literalCharExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_literalCharExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_literalCharExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_literalCharExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_literalCharExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_literalCharExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_literalCharExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_literalCharExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_literalCharExpression _operator_concat (const GGS__list_literalCharExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_literalCharExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lchar & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS_lchar & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_literalCharExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@literalStringExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_literalStringExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_literalStringExpression constructor_new (C_Compiler & inLexique,
                                const GGS_stringlist & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_stringlist  reader_mStringSequence (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalStringExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalStringExpression * operator () (void) const {
      return (cPtr_literalStringExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@literalStringExpression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_literalStringExpression : public AC_galgas_entity_list {
  public : typedef cPtr_literalStringExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_literalStringExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_literalStringExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_literalStringExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_literalStringExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_literalStringExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_literalStringExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_literalStringExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_literalStringExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_literalStringExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_literalStringExpression _operator_concat (const GGS__list_literalStringExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_literalStringExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_stringlist & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS_stringlist & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_literalStringExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@literalDoubleExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_literalDoubleExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_literalDoubleExpression constructor_new (C_Compiler & inLexique,
                                const GGS_ldouble & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_ldouble  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalDoubleExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalDoubleExpression * operator () (void) const {
      return (cPtr_literalDoubleExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@literalDoubleExpression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_literalDoubleExpression : public AC_galgas_entity_list {
  public : typedef cPtr_literalDoubleExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_literalDoubleExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_literalDoubleExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_literalDoubleExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_literalDoubleExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_literalDoubleExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_literalDoubleExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_literalDoubleExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_literalDoubleExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_literalDoubleExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_literalDoubleExpression _operator_concat (const GGS__list_literalDoubleExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_literalDoubleExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_ldouble & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS_ldouble & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_literalDoubleExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@literalUIntExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_literalUIntExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_literalUIntExpression constructor_new (C_Compiler & inLexique,
                                const GGS_luint & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalUIntExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalUIntExpression * operator () (void) const {
      return (cPtr_literalUIntExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@literalUIntExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_literalUIntExpression : public AC_galgas_entity_list {
  public : typedef cPtr_literalUIntExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_literalUIntExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_literalUIntExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_literalUIntExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_literalUIntExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_literalUIntExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_literalUIntExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_literalUIntExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_literalUIntExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_literalUIntExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_literalUIntExpression _operator_concat (const GGS__list_literalUIntExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_literalUIntExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_luint & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS_luint & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_literalUIntExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@literalUInt64Expression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_literalUInt64Expression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_literalUInt64Expression constructor_new (C_Compiler & inLexique,
                                const GGS_luint64 & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint64  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalUInt64Expression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalUInt64Expression * operator () (void) const {
      return (cPtr_literalUInt64Expression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@literalUInt64Expression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_literalUInt64Expression : public AC_galgas_entity_list {
  public : typedef cPtr_literalUInt64Expression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_literalUInt64Expression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_literalUInt64Expression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_literalUInt64Expression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_literalUInt64Expression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_literalUInt64Expression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_literalUInt64Expression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_literalUInt64Expression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_literalUInt64Expression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_literalUInt64Expression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_literalUInt64Expression _operator_concat (const GGS__list_literalUInt64Expression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_literalUInt64Expression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_luint64 & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS_luint64 & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_literalUInt64Expression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@literalSIntExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_literalSIntExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_literalSIntExpression constructor_new (C_Compiler & inLexique,
                                const GGS_lsint & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lsint  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalSIntExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalSIntExpression * operator () (void) const {
      return (cPtr_literalSIntExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@literalSIntExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_literalSIntExpression : public AC_galgas_entity_list {
  public : typedef cPtr_literalSIntExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_literalSIntExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_literalSIntExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_literalSIntExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_literalSIntExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_literalSIntExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_literalSIntExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_literalSIntExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_literalSIntExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_literalSIntExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_literalSIntExpression _operator_concat (const GGS__list_literalSIntExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_literalSIntExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lsint & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS_lsint & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_literalSIntExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@literalSInt64Expression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_literalSInt64Expression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_literalSInt64Expression constructor_new (C_Compiler & inLexique,
                                const GGS_lsint64 & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lsint64  reader_mValue (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_literalSInt64Expression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_literalSInt64Expression * operator () (void) const {
      return (cPtr_literalSInt64Expression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@literalSInt64Expression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_literalSInt64Expression : public AC_galgas_entity_list {
  public : typedef cPtr_literalSInt64Expression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_literalSInt64Expression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_literalSInt64Expression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_literalSInt64Expression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_literalSInt64Expression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_literalSInt64Expression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_literalSInt64Expression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_literalSInt64Expression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_literalSInt64Expression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_literalSInt64Expression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_literalSInt64Expression _operator_concat (const GGS__list_literalSInt64Expression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_literalSInt64Expression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lsint64 & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS_lsint64 & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_literalSInt64Expression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@constructorExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_constructorExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_constructorExpression constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_outExpressionList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mConstructorName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_outExpressionList  reader_mExpressions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_constructorExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_constructorExpression * operator () (void) const {
      return (cPtr_constructorExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@constructorExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_constructorExpression : public AC_galgas_entity_list {
  public : typedef cPtr_constructorExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_constructorExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_constructorExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_constructorExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_constructorExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_constructorExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_constructorExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_constructorExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_constructorExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_constructorExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_constructorExpression _operator_concat (const GGS__list_constructorExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_constructorExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_outExpressionList & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_outExpressionList & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_constructorExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@readerCallExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_readerCallExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_readerCallExpression constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_outExpressionList & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mReceiver (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mReaderName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_outExpressionList  reader_mExpressions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_readerCallExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_readerCallExpression * operator () (void) const {
      return (cPtr_readerCallExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@readerCallExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_readerCallExpression : public AC_galgas_entity_list {
  public : typedef cPtr_readerCallExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_readerCallExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_readerCallExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_readerCallExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_readerCallExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_readerCallExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_readerCallExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_readerCallExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_readerCallExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_readerCallExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_readerCallExpression _operator_concat (const GGS__list_readerCallExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_readerCallExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_outExpressionList & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_outExpressionList & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_readerCallExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@optionExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_optionExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_optionExpression constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mOptionComponentName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mOptionEntryName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_optionExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_optionExpression * operator () (void) const {
      return (cPtr_optionExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@optionExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_optionExpression : public AC_galgas_entity_list {
  public : typedef cPtr_optionExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_optionExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_optionExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_optionExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_optionExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_optionExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_optionExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_optionExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_optionExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_optionExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_optionExpression _operator_concat (const GGS__list_optionExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_optionExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_optionExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@concatExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_concatExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_concatExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_concatExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_concatExpression * operator () (void) const {
      return (cPtr_concatExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@concatExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_concatExpression : public AC_galgas_entity_list {
  public : typedef cPtr_concatExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_concatExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_concatExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_concatExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_concatExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_concatExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_concatExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_concatExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_concatExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_concatExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_concatExpression _operator_concat (const GGS__list_concatExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_concatExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_concatExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS entity '@orExpression'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_orExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_orExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_orExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_orExpression * operator () (void) const {
      return (cPtr_orExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS list of entity '@orExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_orExpression : public AC_galgas_entity_list {
  public : typedef cPtr_orExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_orExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_orExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_orExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_orExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_orExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_orExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_orExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_orExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_orExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_orExpression _operator_concat (const GGS__list_orExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_orExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_orExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS entity '@xorExpression'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_xorExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_xorExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_xorExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_xorExpression * operator () (void) const {
      return (cPtr_xorExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS list of entity '@xorExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_xorExpression : public AC_galgas_entity_list {
  public : typedef cPtr_xorExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_xorExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_xorExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_xorExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_xorExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_xorExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_xorExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_xorExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_xorExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_xorExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_xorExpression _operator_concat (const GGS__list_xorExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_xorExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_xorExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS entity '@andExpression'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_andExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_andExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_andExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_andExpression * operator () (void) const {
      return (cPtr_andExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS list of entity '@andExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_andExpression : public AC_galgas_entity_list {
  public : typedef cPtr_andExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_andExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_andExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_andExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_andExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_andExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_andExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_andExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_andExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_andExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_andExpression _operator_concat (const GGS__list_andExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_andExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_andExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@equalExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_equalExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_equalExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_equalExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_equalExpression * operator () (void) const {
      return (cPtr_equalExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@equalExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_equalExpression : public AC_galgas_entity_list {
  public : typedef cPtr_equalExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_equalExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_equalExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_equalExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_equalExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_equalExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_equalExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_equalExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_equalExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_equalExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_equalExpression _operator_concat (const GGS__list_equalExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_equalExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_equalExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS entity '@notEqualExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_notEqualExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_notEqualExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_notEqualExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_notEqualExpression * operator () (void) const {
      return (cPtr_notEqualExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS list of entity '@notEqualExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_notEqualExpression : public AC_galgas_entity_list {
  public : typedef cPtr_notEqualExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_notEqualExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_notEqualExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_notEqualExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_notEqualExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_notEqualExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_notEqualExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_notEqualExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_notEqualExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_notEqualExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_notEqualExpression _operator_concat (const GGS__list_notEqualExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_notEqualExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_notEqualExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@lowerOrEqualExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_lowerOrEqualExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_lowerOrEqualExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lowerOrEqualExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lowerOrEqualExpression * operator () (void) const {
      return (cPtr_lowerOrEqualExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@lowerOrEqualExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_lowerOrEqualExpression : public AC_galgas_entity_list {
  public : typedef cPtr_lowerOrEqualExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_lowerOrEqualExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_lowerOrEqualExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_lowerOrEqualExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_lowerOrEqualExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_lowerOrEqualExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_lowerOrEqualExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_lowerOrEqualExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_lowerOrEqualExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_lowerOrEqualExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_lowerOrEqualExpression _operator_concat (const GGS__list_lowerOrEqualExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_lowerOrEqualExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_lowerOrEqualExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS entity '@greaterOrEqualExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_greaterOrEqualExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_greaterOrEqualExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_greaterOrEqualExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_greaterOrEqualExpression * operator () (void) const {
      return (cPtr_greaterOrEqualExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS list of entity '@greaterOrEqualExpression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_greaterOrEqualExpression : public AC_galgas_entity_list {
  public : typedef cPtr_greaterOrEqualExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_greaterOrEqualExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_greaterOrEqualExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_greaterOrEqualExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_greaterOrEqualExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_greaterOrEqualExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_greaterOrEqualExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_greaterOrEqualExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_greaterOrEqualExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_greaterOrEqualExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_greaterOrEqualExpression _operator_concat (const GGS__list_greaterOrEqualExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_greaterOrEqualExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_greaterOrEqualExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@strictGreaterExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_strictGreaterExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_strictGreaterExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_strictGreaterExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_strictGreaterExpression * operator () (void) const {
      return (cPtr_strictGreaterExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@strictGreaterExpression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_strictGreaterExpression : public AC_galgas_entity_list {
  public : typedef cPtr_strictGreaterExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_strictGreaterExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_strictGreaterExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_strictGreaterExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_strictGreaterExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_strictGreaterExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_strictGreaterExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_strictGreaterExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_strictGreaterExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_strictGreaterExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_strictGreaterExpression _operator_concat (const GGS__list_strictGreaterExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_strictGreaterExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_strictGreaterExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@strictLowerExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_strictLowerExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_strictLowerExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_strictLowerExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_strictLowerExpression * operator () (void) const {
      return (cPtr_strictLowerExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@strictLowerExpression'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_strictLowerExpression : public AC_galgas_entity_list {
  public : typedef cPtr_strictLowerExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_strictLowerExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_strictLowerExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_strictLowerExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_strictLowerExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_strictLowerExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_strictLowerExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_strictLowerExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_strictLowerExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_strictLowerExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_strictLowerExpression _operator_concat (const GGS__list_strictLowerExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_strictLowerExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_strictLowerExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS entity '@leftShiftExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_leftShiftExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_leftShiftExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_leftShiftExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_leftShiftExpression * operator () (void) const {
      return (cPtr_leftShiftExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS list of entity '@leftShiftExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_leftShiftExpression : public AC_galgas_entity_list {
  public : typedef cPtr_leftShiftExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_leftShiftExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_leftShiftExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_leftShiftExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_leftShiftExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_leftShiftExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_leftShiftExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_leftShiftExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_leftShiftExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_leftShiftExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_leftShiftExpression _operator_concat (const GGS__list_leftShiftExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_leftShiftExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_leftShiftExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@rightShiftExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_rightShiftExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_rightShiftExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_rightShiftExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_rightShiftExpression * operator () (void) const {
      return (cPtr_rightShiftExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@rightShiftExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_rightShiftExpression : public AC_galgas_entity_list {
  public : typedef cPtr_rightShiftExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_rightShiftExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_rightShiftExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_rightShiftExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_rightShiftExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_rightShiftExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_rightShiftExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_rightShiftExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_rightShiftExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_rightShiftExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_rightShiftExpression _operator_concat (const GGS__list_rightShiftExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_rightShiftExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_rightShiftExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS entity '@addExpression'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_addExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_addExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_addExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_addExpression * operator () (void) const {
      return (cPtr_addExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS list of entity '@addExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_addExpression : public AC_galgas_entity_list {
  public : typedef cPtr_addExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_addExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_addExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_addExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_addExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_addExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_addExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_addExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_addExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_addExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_addExpression _operator_concat (const GGS__list_addExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_addExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_addExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS entity '@subExpression'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_subExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_subExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_subExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_subExpression * operator () (void) const {
      return (cPtr_subExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS list of entity '@subExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_subExpression : public AC_galgas_entity_list {
  public : typedef cPtr_subExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_subExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_subExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_subExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_subExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_subExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_subExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_subExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_subExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_subExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_subExpression _operator_concat (const GGS__list_subExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_subExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_subExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS entity '@multiplicationExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_multiplicationExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_multiplicationExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_multiplicationExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_multiplicationExpression * operator () (void) const {
      return (cPtr_multiplicationExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS list of entity '@multiplicationExpression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_multiplicationExpression : public AC_galgas_entity_list {
  public : typedef cPtr_multiplicationExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_multiplicationExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_multiplicationExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_multiplicationExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_multiplicationExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_multiplicationExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_multiplicationExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_multiplicationExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_multiplicationExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_multiplicationExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_multiplicationExpression _operator_concat (const GGS__list_multiplicationExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_multiplicationExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_multiplicationExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS entity '@divisionExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_divisionExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_divisionExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_divisionExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_divisionExpression * operator () (void) const {
      return (cPtr_divisionExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS list of entity '@divisionExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_divisionExpression : public AC_galgas_entity_list {
  public : typedef cPtr_divisionExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_divisionExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_divisionExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_divisionExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_divisionExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_divisionExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_divisionExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_divisionExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_divisionExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_divisionExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_divisionExpression _operator_concat (const GGS__list_divisionExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_divisionExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_divisionExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@moduloExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_moduloExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_moduloExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mLeftExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mRightExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_moduloExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_moduloExpression * operator () (void) const {
      return (cPtr_moduloExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@moduloExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_moduloExpression : public AC_galgas_entity_list {
  public : typedef cPtr_moduloExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_moduloExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_moduloExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_moduloExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_moduloExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_moduloExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_moduloExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_moduloExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_moduloExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_moduloExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_moduloExpression _operator_concat (const GGS__list_moduloExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_moduloExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1,
                                const GGS_semanticExpression & argument_2) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_moduloExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@unaryMinusExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_unaryMinusExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_unaryMinusExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_unaryMinusExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_unaryMinusExpression * operator () (void) const {
      return (cPtr_unaryMinusExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@unaryMinusExpression'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_unaryMinusExpression : public AC_galgas_entity_list {
  public : typedef cPtr_unaryMinusExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_unaryMinusExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_unaryMinusExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_unaryMinusExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_unaryMinusExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_unaryMinusExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_unaryMinusExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_unaryMinusExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_unaryMinusExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_unaryMinusExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_unaryMinusExpression _operator_concat (const GGS__list_unaryMinusExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_unaryMinusExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_unaryMinusExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS entity '@notExpression'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_notExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_notExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_notExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_notExpression * operator () (void) const {
      return (cPtr_notExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS list of entity '@notExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_notExpression : public AC_galgas_entity_list {
  public : typedef cPtr_notExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_notExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_notExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_notExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_notExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_notExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_notExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_notExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_notExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_notExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_notExpression _operator_concat (const GGS__list_notExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_notExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_notExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@negateExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_negateExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_negateExpression constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_mOperatorLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_negateExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_negateExpression * operator () (void) const {
      return (cPtr_negateExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@negateExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_negateExpression : public AC_galgas_entity_list {
  public : typedef cPtr_negateExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_negateExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_negateExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_negateExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_negateExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_negateExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_negateExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_negateExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_negateExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_negateExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_negateExpression _operator_concat (const GGS__list_negateExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_negateExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_location & argument_0,
                                const GGS_semanticExpression & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_negateExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@varInExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_varInExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_varInExpression constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mVarName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_varInExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_varInExpression * operator () (void) const {
      return (cPtr_varInExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@varInExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_varInExpression : public AC_galgas_entity_list {
  public : typedef cPtr_varInExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_varInExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_varInExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_varInExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_varInExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_varInExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_varInExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_varInExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_varInExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_varInExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_varInExpression _operator_concat (const GGS__list_varInExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_varInExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_lstring & argument_0) ; */

/*  protected : void _internalPrependValues (const GGS_lstring & argument_0) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_varInExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS entity '@descriptionInExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_descriptionInExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_descriptionInExpression constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mReceiverExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_location  reader_mLocation (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_descriptionInExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_descriptionInExpression * operator () (void) const {
      return (cPtr_descriptionInExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS list of entity '@descriptionInExpression'              *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_descriptionInExpression : public AC_galgas_entity_list {
  public : typedef cPtr_descriptionInExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_descriptionInExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_descriptionInExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_descriptionInExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_descriptionInExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_descriptionInExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_descriptionInExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_descriptionInExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_descriptionInExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_descriptionInExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_descriptionInExpression _operator_concat (const GGS__list_descriptionInExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_descriptionInExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0,
                                const GGS_location & argument_1) ; */

/*  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0,
                                const GGS_location & argument_1) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_descriptionInExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@castInExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_castInExpression : public GGS_semanticExpression {
//--- 'new' constructor
  public : static GGS_castInExpression constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticExpression & argument_3
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mReceiverExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mUseKindOfClass (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_semanticExpression  reader_mErrorLocationExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_castInExpression * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_castInExpression * operator () (void) const {
      return (cPtr_castInExpression *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@castInExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_castInExpression : public AC_galgas_entity_list {
  public : typedef cPtr_castInExpression element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_castInExpression constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_castInExpression
  constructor_listWithValue (C_Compiler & _inLexique,
                             const GGS_castInExpression & inObject
                             COMMA_LOCATION_ARGS) ;

//--- Get first object
/*  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }*/
//--- Get last object
/*  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }*/
//--- Operator () used for method call
  public : inline const GGS__list_castInExpression * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_castInExpression & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_castInExpression & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_castInExpression & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_castInExpression & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_castInExpression & inObject) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_castInExpression _operator_concat (const GGS__list_castInExpression & inOperand) const ;
  public : void
  modifier_prependValue (C_Compiler & _inLexique,
                         const GGS_castInExpression & inObject
                         COMMA_LOCATION_ARGS) ;

//--- Internal Methods
/*  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticExpression & argument_3) ; */

/*  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0,
                                const GGS_bool& argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_semanticExpression & argument_3) ; */

//--- List Insulation
//  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
//  public : void _addModel (const GGS_castInExpression & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@semanticExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_semanticExpression : public cPtr_entity {
//--- Attributes
//--- Constructor
  public : cPtr_semanticExpression (LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_semanticExpression * nextObject (void) const {
    return (cPtr_semanticExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_semanticExpression * previousObject (void) const {
    return (cPtr_semanticExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_semanticExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_semanticExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@outExpressionList'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_outExpressionList : public cPtr_entity {
//--- Attributes
  public : GGS__list_semanticExpression  mExpression ;
  public : GGS_location  mEndOfExpressionLocation ;
//--- Constructor
  public : cPtr_outExpressionList (const GGS__list_semanticExpression & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_outExpressionList * nextObject (void) const {
    return (cPtr_outExpressionList *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_outExpressionList * previousObject (void) const {
    return (cPtr_outExpressionList *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_outExpressionList * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_outExpressionList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@variableExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_variableExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_lstring  mVariableName ;
//--- Constructor
  public : cPtr_variableExpression (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_variableExpression * nextObject (void) const {
    return (cPtr_variableExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_variableExpression * previousObject (void) const {
    return (cPtr_variableExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_variableExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_variableExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@selfInExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_selfInExpression : public cPtr_semanticExpression {
//--- Attributes
//--- Constructor
  public : cPtr_selfInExpression (LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_selfInExpression * nextObject (void) const {
    return (cPtr_selfInExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_selfInExpression * previousObject (void) const {
    return (cPtr_selfInExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_selfInExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_selfInExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@hereExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_hereExpression : public cPtr_semanticExpression {
//--- Attributes
//--- Constructor
  public : cPtr_hereExpression (LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_hereExpression * nextObject (void) const {
    return (cPtr_hereExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_hereExpression * previousObject (void) const {
    return (cPtr_hereExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_hereExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_hereExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@trueExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_trueExpression : public cPtr_semanticExpression {
//--- Attributes
//--- Constructor
  public : cPtr_trueExpression (LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_trueExpression * nextObject (void) const {
    return (cPtr_trueExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_trueExpression * previousObject (void) const {
    return (cPtr_trueExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_trueExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_trueExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@falseExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_falseExpression : public cPtr_semanticExpression {
//--- Attributes
//--- Constructor
  public : cPtr_falseExpression (LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_falseExpression * nextObject (void) const {
    return (cPtr_falseExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_falseExpression * previousObject (void) const {
    return (cPtr_falseExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_falseExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_falseExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@literalCharExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalCharExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_lchar  mCharacter ;
//--- Constructor
  public : cPtr_literalCharExpression (const GGS_lchar & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_literalCharExpression * nextObject (void) const {
    return (cPtr_literalCharExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_literalCharExpression * previousObject (void) const {
    return (cPtr_literalCharExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_literalCharExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_literalCharExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@literalStringExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalStringExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_stringlist  mStringSequence ;
//--- Constructor
  public : cPtr_literalStringExpression (const GGS_stringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_literalStringExpression * nextObject (void) const {
    return (cPtr_literalStringExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_literalStringExpression * previousObject (void) const {
    return (cPtr_literalStringExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_literalStringExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_literalStringExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@literalDoubleExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalDoubleExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_ldouble  mValue ;
//--- Constructor
  public : cPtr_literalDoubleExpression (const GGS_ldouble & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_literalDoubleExpression * nextObject (void) const {
    return (cPtr_literalDoubleExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_literalDoubleExpression * previousObject (void) const {
    return (cPtr_literalDoubleExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_literalDoubleExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_literalDoubleExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@literalUIntExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalUIntExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_luint  mValue ;
//--- Constructor
  public : cPtr_literalUIntExpression (const GGS_luint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_literalUIntExpression * nextObject (void) const {
    return (cPtr_literalUIntExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_literalUIntExpression * previousObject (void) const {
    return (cPtr_literalUIntExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_literalUIntExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_literalUIntExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@literalUInt64Expression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalUInt64Expression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_luint64  mValue ;
//--- Constructor
  public : cPtr_literalUInt64Expression (const GGS_luint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_literalUInt64Expression * nextObject (void) const {
    return (cPtr_literalUInt64Expression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_literalUInt64Expression * previousObject (void) const {
    return (cPtr_literalUInt64Expression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_literalUInt64Expression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_literalUInt64Expression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@literalSIntExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalSIntExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_lsint  mValue ;
//--- Constructor
  public : cPtr_literalSIntExpression (const GGS_lsint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_literalSIntExpression * nextObject (void) const {
    return (cPtr_literalSIntExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_literalSIntExpression * previousObject (void) const {
    return (cPtr_literalSIntExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_literalSIntExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_literalSIntExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@literalSInt64Expression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_literalSInt64Expression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_lsint64  mValue ;
//--- Constructor
  public : cPtr_literalSInt64Expression (const GGS_lsint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_literalSInt64Expression * nextObject (void) const {
    return (cPtr_literalSInt64Expression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_literalSInt64Expression * previousObject (void) const {
    return (cPtr_literalSInt64Expression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_literalSInt64Expression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_literalSInt64Expression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@constructorExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_constructorExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_lstring  mTypeName ;
  public : GGS_lstring  mConstructorName ;
  public : GGS_outExpressionList  mExpressions ;
//--- Constructor
  public : cPtr_constructorExpression (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_outExpressionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_constructorExpression * nextObject (void) const {
    return (cPtr_constructorExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_constructorExpression * previousObject (void) const {
    return (cPtr_constructorExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_constructorExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_constructorExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@readerCallExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_readerCallExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_semanticExpression  mReceiver ;
  public : GGS_lstring  mReaderName ;
  public : GGS_outExpressionList  mExpressions ;
//--- Constructor
  public : cPtr_readerCallExpression (const GGS_semanticExpression & ,
                                const GGS_lstring & ,
                                const GGS_outExpressionList & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_readerCallExpression * nextObject (void) const {
    return (cPtr_readerCallExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_readerCallExpression * previousObject (void) const {
    return (cPtr_readerCallExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_readerCallExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_readerCallExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@optionExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_optionExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_lstring  mOptionComponentName ;
  public : GGS_lstring  mOptionEntryName ;
//--- Constructor
  public : cPtr_optionExpression (const GGS_lstring & ,
                                const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_optionExpression * nextObject (void) const {
    return (cPtr_optionExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_optionExpression * previousObject (void) const {
    return (cPtr_optionExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_optionExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_optionExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@concatExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_concatExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_concatExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_concatExpression * nextObject (void) const {
    return (cPtr_concatExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_concatExpression * previousObject (void) const {
    return (cPtr_concatExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_concatExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_concatExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@orExpression'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_orExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_orExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_orExpression * nextObject (void) const {
    return (cPtr_orExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_orExpression * previousObject (void) const {
    return (cPtr_orExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_orExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_orExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@xorExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_xorExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_xorExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_xorExpression * nextObject (void) const {
    return (cPtr_xorExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_xorExpression * previousObject (void) const {
    return (cPtr_xorExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_xorExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_xorExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@andExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_andExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_andExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_andExpression * nextObject (void) const {
    return (cPtr_andExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_andExpression * previousObject (void) const {
    return (cPtr_andExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_andExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_andExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@equalExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_equalExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_equalExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_equalExpression * nextObject (void) const {
    return (cPtr_equalExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_equalExpression * previousObject (void) const {
    return (cPtr_equalExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_equalExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_equalExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@notEqualExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_notEqualExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_notEqualExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_notEqualExpression * nextObject (void) const {
    return (cPtr_notEqualExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_notEqualExpression * previousObject (void) const {
    return (cPtr_notEqualExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_notEqualExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_notEqualExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@lowerOrEqualExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lowerOrEqualExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_lowerOrEqualExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_lowerOrEqualExpression * nextObject (void) const {
    return (cPtr_lowerOrEqualExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_lowerOrEqualExpression * previousObject (void) const {
    return (cPtr_lowerOrEqualExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_lowerOrEqualExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_lowerOrEqualExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@greaterOrEqualExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_greaterOrEqualExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_greaterOrEqualExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_greaterOrEqualExpression * nextObject (void) const {
    return (cPtr_greaterOrEqualExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_greaterOrEqualExpression * previousObject (void) const {
    return (cPtr_greaterOrEqualExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_greaterOrEqualExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_greaterOrEqualExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@strictGreaterExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_strictGreaterExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_strictGreaterExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_strictGreaterExpression * nextObject (void) const {
    return (cPtr_strictGreaterExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_strictGreaterExpression * previousObject (void) const {
    return (cPtr_strictGreaterExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_strictGreaterExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_strictGreaterExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@strictLowerExpression'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_strictLowerExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_strictLowerExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_strictLowerExpression * nextObject (void) const {
    return (cPtr_strictLowerExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_strictLowerExpression * previousObject (void) const {
    return (cPtr_strictLowerExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_strictLowerExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_strictLowerExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@leftShiftExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_leftShiftExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_leftShiftExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_leftShiftExpression * nextObject (void) const {
    return (cPtr_leftShiftExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_leftShiftExpression * previousObject (void) const {
    return (cPtr_leftShiftExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_leftShiftExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_leftShiftExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@rightShiftExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_rightShiftExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_rightShiftExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_rightShiftExpression * nextObject (void) const {
    return (cPtr_rightShiftExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_rightShiftExpression * previousObject (void) const {
    return (cPtr_rightShiftExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_rightShiftExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_rightShiftExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@addExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_addExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_addExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_addExpression * nextObject (void) const {
    return (cPtr_addExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_addExpression * previousObject (void) const {
    return (cPtr_addExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_addExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_addExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@subExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_subExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_subExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_subExpression * nextObject (void) const {
    return (cPtr_subExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_subExpression * previousObject (void) const {
    return (cPtr_subExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_subExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_subExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@multiplicationExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_multiplicationExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_multiplicationExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_multiplicationExpression * nextObject (void) const {
    return (cPtr_multiplicationExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_multiplicationExpression * previousObject (void) const {
    return (cPtr_multiplicationExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_multiplicationExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_multiplicationExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@divisionExpression'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_divisionExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_divisionExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_divisionExpression * nextObject (void) const {
    return (cPtr_divisionExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_divisionExpression * previousObject (void) const {
    return (cPtr_divisionExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_divisionExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_divisionExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@moduloExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_moduloExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mLeftExpression ;
  public : GGS_semanticExpression  mRightExpression ;
//--- Constructor
  public : cPtr_moduloExpression (const GGS_location & ,
                                const GGS_semanticExpression & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_moduloExpression * nextObject (void) const {
    return (cPtr_moduloExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_moduloExpression * previousObject (void) const {
    return (cPtr_moduloExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_moduloExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_moduloExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@unaryMinusExpression'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_unaryMinusExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mExpression ;
//--- Constructor
  public : cPtr_unaryMinusExpression (const GGS_location & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_unaryMinusExpression * nextObject (void) const {
    return (cPtr_unaryMinusExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_unaryMinusExpression * previousObject (void) const {
    return (cPtr_unaryMinusExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_unaryMinusExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_unaryMinusExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of list '@notExpression'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_notExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mExpression ;
//--- Constructor
  public : cPtr_notExpression (const GGS_location & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_notExpression * nextObject (void) const {
    return (cPtr_notExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_notExpression * previousObject (void) const {
    return (cPtr_notExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_notExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_notExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@negateExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_negateExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_location  mOperatorLocation ;
  public : GGS_semanticExpression  mExpression ;
//--- Constructor
  public : cPtr_negateExpression (const GGS_location & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_negateExpression * nextObject (void) const {
    return (cPtr_negateExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_negateExpression * previousObject (void) const {
    return (cPtr_negateExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_negateExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_negateExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@varInExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_varInExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_lstring  mVarName ;
//--- Constructor
  public : cPtr_varInExpression (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_varInExpression * nextObject (void) const {
    return (cPtr_varInExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_varInExpression * previousObject (void) const {
    return (cPtr_varInExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_varInExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_varInExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@descriptionInExpression'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_descriptionInExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_semanticExpression  mReceiverExpression ;
  public : GGS_location  mLocation ;
//--- Constructor
  public : cPtr_descriptionInExpression (const GGS_semanticExpression & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_descriptionInExpression * nextObject (void) const {
    return (cPtr_descriptionInExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_descriptionInExpression * previousObject (void) const {
    return (cPtr_descriptionInExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_descriptionInExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_descriptionInExpression ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@castInExpression'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_castInExpression : public cPtr_semanticExpression {
//--- Attributes
  public : GGS_semanticExpression  mReceiverExpression ;
  public : GGS_bool mUseKindOfClass ;
  public : GGS_lstring  mTypeName ;
  public : GGS_semanticExpression  mErrorLocationExpression ;
//--- Constructor
  public : cPtr_castInExpression (const GGS_semanticExpression & ,
                                const GGS_bool& ,
                                const GGS_lstring & ,
                                const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
/*  public : inline cPtr_castInExpression * nextObject (void) const {
    return (cPtr_castInExpression *) internalNextItem () ;
  } */

//--- Access to previous
/*  public : inline cPtr_castInExpression * previousObject (void) const {
    return (cPtr_castInExpression *) internalPreviousItem () ;
  } */

//--- Element comparison
  public : virtual bool isEqualToObject (const cPtr_entity * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
//  public : virtual cPtr_castInExpression * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_castInExpression ;
} ;

//---------------------------------------------------------------------------*

#endif
