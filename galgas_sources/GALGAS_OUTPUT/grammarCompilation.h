//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'grammarCompilation.h'                         *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 19th, 2010, at 14h10'19"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef grammarCompilation_ENTITIES_DEFINED
#define grammarCompilation_ENTITIES_DEFINED

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*

#include "allASTTypes.h"
#include "lexiqueTypesForAST.h"
#include "semanticsTypesForAST.h"
#include "optionTypesForAST.h"
#include "guiTypesForAST.h"
#include "syntaxMetamodel.h"
#include "grammarMetamodel.h"
#include "optionSemantics.h"
#include "programMetamodel.h"
#include "grammarSemantics.h"

//---------------------------------------------------------------------------*

class GALGAS__32_stringlist ;
class GALGAS_abstractCategoryMethodAST ;
class GALGAS_abstractCategoryReaderAST ;
class GALGAS_abstractLexicalRoutineActualArgumentAST ;
class GALGAS_abstractLexicalRuleAST ;
class GALGAS_abstractMethodDefinitionListAST ;
class GALGAS_abstractSyntaxInstructionForGrammarAnalysis ;
class GALGAS_actualInputParameterListAST ;
class GALGAS_actualParameterAST ;
class GALGAS_actualParameterListAST ;
class GALGAS_addExpressionAST ;
class GALGAS_addInstructionAST ;
class GALGAS_andExpressionAST ;
class GALGAS_appendInstructionAST ;
class GALGAS_application ;
class GALGAS_assignmentInstructionAST ;
class GALGAS_attributeInCollectionListAST ;
class GALGAS_binaryset ;
class GALGAS_blockInstruction ;
class GALGAS_bool ;
class GALGAS_branchListForGrammarAnalysis ;
class GALGAS_castInExpressionAST ;
class GALGAS_castInstructionBranchListAST ;
class GALGAS_categoryMethodAST ;
class GALGAS_categoryReaderAST ;
class GALGAS_char ;
class GALGAS_classDeclarationAST ;
class GALGAS_commandLineOptionListAST ;
class GALGAS_commandLineOptionMap ;
class GALGAS_complementExpressionAST ;
class GALGAS_concatExpressionAST ;
class GALGAS_constructorExpressionAST ;
class GALGAS_data ;
class GALGAS_decrementInstructionAST ;
class GALGAS_divisionExpressionAST ;
class GALGAS_double ;
class GALGAS_dropInstructionAST ;
class GALGAS_enumDeclarationAST ;
class GALGAS_enumMessageAssociationListAST ;
class GALGAS_enumMessageListAST ;
class GALGAS_equalExpressionAST ;
class GALGAS_errorInstructionAST ;
class GALGAS_externFunctionDeclarationAST ;
class GALGAS_externFunctionListAST ;
class GALGAS_externRoutineDeclarationAST ;
class GALGAS_externRoutineListAST ;
class GALGAS_falseExpressionAST ;
class GALGAS_filewrapper ;
class GALGAS_filewrapperDeclarationAST ;
class GALGAS_filewrapperInExpressionAST ;
class GALGAS_filewrapperObjectInstanciationInExpressionAST ;
class GALGAS_filewrapperTemplateInExpressionAST ;
class GALGAS_filewrapperTemplateListAST ;
class GALGAS_foreachInstructionAST ;
class GALGAS_foreachInstructionEnumeratedObjectElementListAST ;
class GALGAS_foreachInstructionEnumeratedObjectListAST ;
class GALGAS_formalArgumentPassingModeAST ;
class GALGAS_formalInputParameterListAST ;
class GALGAS_formalParameterListAST ;
class GALGAS_formalTemplateInputParameterListAST ;
class GALGAS_function ;
class GALGAS_functionCallExpressionAST ;
class GALGAS_functionDeclarationAST ;
class GALGAS_functionlist ;
class GALGAS_grammarComponentAST ;
class GALGAS_grammarInstructionAST ;
class GALGAS_greaterOrEqualExpressionAST ;
class GALGAS_guiComponentAST ;
class GALGAS_guiCompoundAttributeListAST ;
class GALGAS_guiLabelListAST ;
class GALGAS_guiSimpleAttributeListAST ;
class GALGAS_hereExpressionAST ;
class GALGAS_ifExpressionAST ;
class GALGAS_ifInstructionAST ;
class GALGAS_incrementInstructionAST ;
class GALGAS_inputActualParameterAST ;
class GALGAS_inputJokerActualParameterAST ;
class GALGAS_insertMethodListAST ;
class GALGAS_insertOrReplaceDeclarationListAST ;
class GALGAS_lbool ;
class GALGAS_lchar ;
class GALGAS_ldouble ;
class GALGAS_leftShiftExpressionAST ;
class GALGAS_lexicalArgumentModeAST ;
class GALGAS_lexicalAttributeInputArgumentAST ;
class GALGAS_lexicalAttributeInputOutputArgumentAST ;
class GALGAS_lexicalAttributeListAST ;
class GALGAS_lexicalCharacterInputArgumentAST ;
class GALGAS_lexicalCharacterIntervalMatchAST ;
class GALGAS_lexicalCharacterMatchAST ;
class GALGAS_lexicalCharacterSetMatchAST ;
class GALGAS_lexicalCurrentCharacterInputArgumentAST ;
class GALGAS_lexicalDropInstructionAST ;
class GALGAS_lexicalErrorByDefaultAST ;
class GALGAS_lexicalErrorInstructionAST ;
class GALGAS_lexicalExplicitRuleAST ;
class GALGAS_lexicalExpressionAST ;
class GALGAS_lexicalExternFunctionFormalArgumentListAST ;
class GALGAS_lexicalExternRoutineFormalArgumentListAST ;
class GALGAS_lexicalFormalInputArgumentAST ;
class GALGAS_lexicalFunctionCallActualArgumentListAST ;
class GALGAS_lexicalFunctionInputArgumentAST ;
class GALGAS_lexicalImplicitRuleAST ;
class GALGAS_lexicalInstructionAST ;
class GALGAS_lexicalInstructionListAST ;
class GALGAS_lexicalListDeclarationListAST ;
class GALGAS_lexicalListEntryListAST ;
class GALGAS_lexicalLogInstructionAST ;
class GALGAS_lexicalMessageDeclarationListAST ;
class GALGAS_lexicalOrExpressionAST ;
class GALGAS_lexicalRepeatInstructionAST ;
class GALGAS_lexicalRewindInstructionAST ;
class GALGAS_lexicalRoutineCallActualArgumentListAST ;
class GALGAS_lexicalRoutineInstructionAST ;
class GALGAS_lexicalRoutineOrFunctionFormalInputArgumentAST ;
class GALGAS_lexicalRuleListAST ;
class GALGAS_lexicalSelectBranchListAST ;
class GALGAS_lexicalSelectInstructionAST ;
class GALGAS_lexicalSendDefaultActionAST ;
class GALGAS_lexicalSendSearchListAST ;
class GALGAS_lexicalSendTerminalByDefaultAST ;
class GALGAS_lexicalSimpleSendInstructionAST ;
class GALGAS_lexicalStringMatchAST ;
class GALGAS_lexicalStringNotMatchAST ;
class GALGAS_lexicalStructuredSendInstructionAST ;
class GALGAS_lexicalStyleListAST ;
class GALGAS_lexicalTagInstructionAST ;
class GALGAS_lexicalUnsignedInputArgumentAST ;
class GALGAS_lexicalWarningInstructionAST ;
class GALGAS_lexicalWhileBranchListAST ;
class GALGAS_lexiqueComponentAST ;
class GALGAS_listDeclarationAST ;
class GALGAS_listOfSyntaxInstructionList ;
class GALGAS_listmapDeclarationAST ;
class GALGAS_literalCharExpressionAST ;
class GALGAS_literalDoubleExpressionAST ;
class GALGAS_literalSInt_36__34_ExpressionAST ;
class GALGAS_literalSIntExpressionAST ;
class GALGAS_literalStringExpressionAST ;
class GALGAS_literalTypeInExpressionAST ;
class GALGAS_literalUInt_36__34_ExpressionAST ;
class GALGAS_literalUIntExpressionAST ;
class GALGAS_localVariableDeclarationAST ;
class GALGAS_localVariableOrConstantDeclarationWithAssignmentAST ;
class GALGAS_localVariableOrConstantDeclarationWithConstructorCallAST ;
class GALGAS_location ;
class GALGAS_logInstructionAST ;
class GALGAS_logListAST ;
class GALGAS_loopInstructionAST ;
class GALGAS_lowerOrEqualExpressionAST ;
class GALGAS_lsint ;
class GALGAS_lsint_36__34_ ;
class GALGAS_lstring ;
class GALGAS_lstringlist ;
class GALGAS_luint ;
class GALGAS_luint_36__34_ ;
class GALGAS_luintlist ;
class GALGAS_mapAutomatonMessageKind ;
class GALGAS_mapDeclarationAST ;
class GALGAS_mapOverrideBlockDescriptorAST ;
class GALGAS_mapOverrideBlockListAST ;
class GALGAS_mapProxyDeclarationAST ;
class GALGAS_mapRemoveMethodListAST ;
class GALGAS_mapSearchMethodListAST ;
class GALGAS_mapStateList ;
class GALGAS_mapStateTransitionList ;
class GALGAS_matchEntryListAST ;
class GALGAS_matchInstructionAST ;
class GALGAS_matchInstructionBranchListAST ;
class GALGAS_messageInstructionAST ;
class GALGAS_metamodelTemplateDelimitorListAST ;
class GALGAS_methodCallInstructionAST ;
class GALGAS_methodDefinitionListAST ;
class GALGAS_modifierCallInstructionAST ;
class GALGAS_moduloExpressionAST ;
class GALGAS_multiplicationExpressionAST ;
class GALGAS_nonTerminalInstructionForGrammarAnalysis ;
class GALGAS_nonTerminalLabelListAST ;
class GALGAS_nonTerminalSymbolMapForGrammarAnalysis ;
class GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis ;
class GALGAS_nonTerminalToAddList ;
class GALGAS_nonterminalCallInstruction ;
class GALGAS_nonterminalDeclarationListAST ;
class GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis ;
class GALGAS_notEqualExpressionAST ;
class GALGAS_notExpressionAST ;
class GALGAS_object ;
class GALGAS_objectlist ;
class GALGAS_onceFunctionDeclarationAST ;
class GALGAS_optionComponentAST ;
class GALGAS_optionDefaultValueEnumAST ;
class GALGAS_optionExpressionAST ;
class GALGAS_orExpressionAST ;
class GALGAS_outputActualParameterAST ;
class GALGAS_outputInputActualParameterAST ;
class GALGAS_overridingAbstractCategoryMethodAST ;
class GALGAS_overridingAbstractCategoryReaderAST ;
class GALGAS_overridingCategoryMethodAST ;
class GALGAS_overridingCategoryReaderAST ;
class GALGAS_parseLoopInstruction ;
class GALGAS_parseRewindInstruction ;
class GALGAS_parseWhenInstruction ;
class GALGAS_parsedComponentStruct ;
class GALGAS_parsedGrammarComponentMap ;
class GALGAS_parsedLexiqueComponentMap ;
class GALGAS_parsedOptionComponentMap ;
class GALGAS_parsedProgramComponentMap ;
class GALGAS_parsedSemanticsComponentMap ;
class GALGAS_parsedSyntaxComponentMap ;
class GALGAS_productionRuleListForGrammarAnalysis ;
class GALGAS_programComponentAST ;
class GALGAS_programRuleList ;
class GALGAS_readAccessWithInstructionAST ;
class GALGAS_readWriteAccessWithInstructionAST ;
class GALGAS_readerCallExpressionAST ;
class GALGAS_repeatInstruction ;
class GALGAS_repeatInstructionForGrammarAnalysis ;
class GALGAS_rightShiftExpressionAST ;
class GALGAS_routineCallInstructionAST ;
class GALGAS_routineDeclarationAST ;
class GALGAS_selectInstruction ;
class GALGAS_selectInstructionForGrammarAnalysis ;
class GALGAS_selfCopyInExpressionAST ;
class GALGAS_semanticDeclarationAST ;
class GALGAS_semanticDeclarationListAST ;
class GALGAS_semanticExpressionAST ;
class GALGAS_semanticExpressionListAST ;
class GALGAS_semanticInstructionAST ;
class GALGAS_semanticInstructionListAST ;
class GALGAS_semanticsComponentAST ;
class GALGAS_signatureForGrammarAnalysis ;
class GALGAS_sint ;
class GALGAS_sint_36__34_ ;
class GALGAS_sortedListDeclarationAST ;
class GALGAS_sortedListSortDescriptorListAST ;
class GALGAS_strictGreaterExpressionAST ;
class GALGAS_strictLowerExpressionAST ;
class GALGAS_string ;
class GALGAS_stringlist ;
class GALGAS_stringset ;
class GALGAS_structDeclarationAST ;
class GALGAS_structuredCastInstructionAST ;
class GALGAS_subExpressionAST ;
class GALGAS_superMethodCallInstructionAST ;
class GALGAS_superModifierCallInstructionAST ;
class GALGAS_superReaderCallExpressionAST ;
class GALGAS_switchBranchesAST ;
class GALGAS_switchInstructionAST ;
class GALGAS_syntaxComponentAST ;
class GALGAS_syntaxComponentListForGrammarAnalysis ;
class GALGAS_syntaxInstructionAST ;
class GALGAS_syntaxInstructionList ;
class GALGAS_syntaxInstructionListForGrammarAnalysis ;
class GALGAS_syntaxRuleLabelListAST ;
class GALGAS_syntaxRuleListAST ;
class GALGAS_templateReplacementListAST ;
class GALGAS_terminalCheckInstruction ;
class GALGAS_terminalDeclarationListAST ;
class GALGAS_terminalInstructionForGrammarAnalysis ;
class GALGAS_terminalSymbolsMapForGrammarAnalysis ;
class GALGAS_thisMethodCallInstructionAST ;
class GALGAS_thisModifierCallInstructionAST ;
class GALGAS_thisReaderCallExpressionAST ;
class GALGAS_trueExpressionAST ;
class GALGAS_type ;
class GALGAS_typeMethodCallInstructionAST ;
class GALGAS_typelist ;
class GALGAS_uint ;
class GALGAS_uint_36__34_ ;
class GALGAS_uint_36__34_list ;
class GALGAS_uintlist ;
class GALGAS_unaryMinusExpressionAST ;
class GALGAS_uniqueMapDeclarationAST ;
class GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis ;
class GALGAS_varInExpressionAST ;
class GALGAS_warningInstructionAST ;
class GALGAS_withLexiqueListAST ;
class GALGAS_xorExpressionAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'transformLabelMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis function_transformLabelMap (const GALGAS_nonTerminalLabelListAST & constinArgument0,
                                                                               const GALGAS_bool & constinArgument1,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'checkLabelMap'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkLabelMap (const GALGAS_location constinArgument0,
                            const GALGAS_nonTerminalLabelListAST constinArgument1,
                            const GALGAS_bool constinArgument2,
                            const GALGAS_location constinArgument3,
                            const GALGAS_nonterminalSymbolLabelMapForGrammarAnalysis constinArgument4,
                            C_Compiler * inCompiler
                            COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'transformInstructionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_transformInstructionList (const GALGAS_syntaxInstructionList constinArgument0,
                                       GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument1,
                                       const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument2,
                                       GALGAS_uint & ioArgument3,
                                       GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument4,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        @nonTerminalToAddList list                         *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_nonTerminalToAddList  ;

//---------------------------------------------------------------------------*

class GALGAS_nonTerminalToAddList : public AC_GALGAS_list {
//--------------------------------- Default constructor
  public : GALGAS_nonTerminalToAddList (void) ;

//--------------------------------- List constructor used by listmap
  public : GALGAS_nonTerminalToAddList (cSharedList * inSharedListPtr) ;

//--------------------------------- Element constructor used by listmap
  public : static cCollectionElement_nonTerminalToAddList * makeElement (const GALGAS_string & in_mSyntaxComponentName,
                                                                         const GALGAS_uint & in_mNonTerminalToAddCount
                                                                         COMMA_LOCATION_ARGS) ;

//-- Start of generic part --*

//--------------------------------- Object cloning
  protected : virtual AC_GALGAS_root * clonedObject (void) const ;

//--------------------------------- Object extraction
  public : static GALGAS_nonTerminalToAddList extractObject (const GALGAS_object & inObject,
                                                             C_Compiler * inCompiler,
                                                             const GALGAS_location & inErrorLocation
                                                             COMMA_LOCATION_ARGS) ;

//--------------------------------- GALGAS constructors
  public : static GALGAS_nonTerminalToAddList constructor_emptyList (LOCATION_ARGS) ;

  public : static GALGAS_nonTerminalToAddList constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                         const GALGAS_uint & inOperand1
                                                                         COMMA_LOCATION_ARGS) ;

//--------------------------------- .= operator
  public : VIRTUAL_IN_DEBUG void dotAssign_operation (const GALGAS_nonTerminalToAddList inOperand
                                                      COMMA_LOCATION_ARGS) ;

//--------------------------------- += operator
  public : VIRTUAL_IN_DEBUG void addAssign_operation (const GALGAS_string & inOperand0,
                                                      const GALGAS_uint & inOperand1
                                                      COMMA_LOCATION_ARGS) ;
//--------------------------------- . (concat) operator
  public : VIRTUAL_IN_DEBUG GALGAS_nonTerminalToAddList operator_concat (const GALGAS_nonTerminalToAddList & inOperand
                                                                         COMMA_LOCATION_ARGS) const ;


//--------------------------------- Modifiers
  public : VIRTUAL_IN_DEBUG void modifier_popFirst (GALGAS_string & outArgument0,
                                                    GALGAS_uint & outArgument1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_popLast (GALGAS_string & outArgument0,
                                                   GALGAS_uint & outArgument1,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_prependValue (GALGAS_string constinArgument0,
                                                        GALGAS_uint constinArgument1
                                                        COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMNonTerminalToAddCountAtIndex (GALGAS_uint constinArgument0,
                                                                            GALGAS_uint constinArgument1,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) ;

  public : VIRTUAL_IN_DEBUG void modifier_setMSyntaxComponentNameAtIndex (GALGAS_string constinArgument0,
                                                                          GALGAS_uint constinArgument1,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) ;


//--------------------------------- Instance Methods
  public : VIRTUAL_IN_DEBUG void method_first (GALGAS_string & outArgument0,
                                               GALGAS_uint & outArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG void method_last (GALGAS_string & outArgument0,
                                              GALGAS_uint & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const ;

//--------------------------------- Class Methods

//--------------------------------- Readers
  public : VIRTUAL_IN_DEBUG GALGAS_uint reader_mNonTerminalToAddCountAtIndex (const GALGAS_uint & constinOperand0,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_string reader_mSyntaxComponentNameAtIndex (const GALGAS_uint & constinOperand0,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_nonTerminalToAddList reader_subListFromIndex (const GALGAS_uint & constinOperand0,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const ;

  public : VIRTUAL_IN_DEBUG GALGAS_nonTerminalToAddList reader_subListWithRange (const GALGAS_uint & constinOperand0,
                                                                                 const GALGAS_uint & constinOperand1,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const ;


//--------------------------------- Introspection
  public : VIRTUAL_IN_DEBUG const C_galgas_type_descriptor * staticTypeDescriptor (void) const ;
//--------------------------------- Friend

  friend class cEnumerator_nonTerminalToAddList ;
 
} ; // End of GALGAS_nonTerminalToAddList class

//---------------------------------------------------------------------------*
//   Enumerator declaration                                                  *
//---------------------------------------------------------------------------*

class cEnumerator_nonTerminalToAddList : public cGenericAbstractEnumerator {
  public : cEnumerator_nonTerminalToAddList (const GALGAS_nonTerminalToAddList & inEnumeratedObject,
                                             const bool inAscending) ;

//--- Current element access
  public : GALGAS_string current_mSyntaxComponentName (LOCATION_ARGS) const ;
  public : GALGAS_uint current_mNonTerminalToAddCount (LOCATION_ARGS) const ;
} ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_nonTerminalToAddList ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'parseGrammarComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseGrammarComponent (const GALGAS_lstring constinArgument0,
                                    GALGAS_parsedComponentStruct & ioArgument1,
                                    GALGAS_grammarComponentAST & outArgument2,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'grammarAnalysisAndGeneration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_grammarAnalysisAndGeneration (const GALGAS_lstring constinArgument0,
                                           const GALGAS_lstring constinArgument1,
                                           const GALGAS_uint constinArgument2,
                                           const GALGAS_string constinArgument3,
                                           const GALGAS_location constinArgument4,
                                           const GALGAS_terminalSymbolsMapForGrammarAnalysis constinArgument5,
                                           const GALGAS_syntaxComponentListForGrammarAnalysis constinArgument6,
                                           const GALGAS_unusedNonTerminalSymbolMapForGrammarAnalysis constinArgument7,
                                           const GALGAS_string constinArgument8,
                                           const GALGAS_string constinArgument9,
                                           const GALGAS_nonTerminalSymbolSortedListForGrammarAnalysis constinArgument10,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'compileGrammarComponent'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileGrammarComponent (const GALGAS_lstring constinArgument0,
                                      const GALGAS_string constinArgument1,
                                      const GALGAS_string constinArgument2,
                                      GALGAS_parsedComponentStruct & ioArgument3,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Abstract category method '@syntaxInstructionAST transformInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*categoryMethodSignature_syntaxInstructionAST_transformInstruction) (const cPtr_syntaxInstructionAST * inObject,
                                                                                   GALGAS_terminalSymbolsMapForGrammarAnalysis & ioArgument0,
                                                                                   const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constinArgument1,
                                                                                   GALGAS_uint & ioArgument2,
                                                                                   GALGAS_syntaxInstructionListForGrammarAnalysis & ioArgument3,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_transformInstruction (const PMSInt32 inClassIndex,
                                               categoryMethodSignature_syntaxInstructionAST_transformInstruction inMethod) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_transformInstruction (const cPtr_syntaxInstructionAST * inObject,
                                              GALGAS_terminalSymbolsMapForGrammarAnalysis & io_ioActuallyUsedTerminalSymbolMap,
                                              const GALGAS_nonTerminalSymbolMapForGrammarAnalysis constin_inNonTerminalSymbolMap,
                                              GALGAS_uint & io_ioAddedNonTerminalIndex,
                                              GALGAS_syntaxInstructionListForGrammarAnalysis & io_ioSyntaxInstructionList,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

#endif
