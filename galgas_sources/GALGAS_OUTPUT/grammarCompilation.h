//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'grammarCompilation.h'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 1st, 2010, at 21h23'38"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef grammarCompilation_DEFINED
#define grammarCompilation_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "allASTTypes.h"
#include "galgas_cli_options.h"
#include "grammarSemantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_nonTerminalToAddList ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'transformLabelMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_transformLabelMap ;

//---------------------------------------------------------------------------*

GGS_nonterminalSymbolLabelMapForGrammarAnalysis  function_transformLabelMap (C_CompilerEx &,
                                const GGS_nonTerminalLabelListAST  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'checkLabelMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkLabelMap (C_CompilerEx &,
                                const GGS_location  ,
                                const GGS_nonTerminalLabelListAST  ,
                                const GGS_bool ,
                                const GGS_location  ,
                                const GGS_nonterminalSymbolLabelMapForGrammarAnalysis   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'handleNonTerminalDeclarations'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleNonTerminalDeclarations (C_CompilerEx &,
                                GGS_nonTerminalSymbolMapForGrammarAnalysis  &,
                                const GGS_nonterminalDeclarationListAST   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@syntaxInstructionAST.transformInstruction'        *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__syntaxInstructionAST__transformInstruction)  (C_CompilerEx & inLexique,
                                const cPtr_syntaxInstructionAST * inObjectPtr,
                                GGS_terminalSymbolsMapForGrammarAnalysis  & var_cas_ioActuallyUsedTerminalSymbolMap,
                                const GGS_nonTerminalSymbolMapForGrammarAnalysis   var_cas_inNonTerminalSymbolMap,
                                GGS_uint  & var_cas_ioAddedNonTerminalIndex,
                                GGS_syntaxInstructionListForGrammarAnalysis  & var_cas_ioSyntaxInstructionList
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__syntaxInstructionAST__transformInstruction (typeCategoryMethod__syntaxInstructionAST__transformInstruction inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__syntaxInstructionAST__transformInstruction
findCategoryMethod__syntaxInstructionAST__transformInstruction (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'transformInstructionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_transformInstructionList (C_CompilerEx &,
                                const GGS_syntaxInstructionList  ,
                                GGS_terminalSymbolsMapForGrammarAnalysis  &,
                                const GGS_nonTerminalSymbolMapForGrammarAnalysis  ,
                                GGS_uint  &,
                                GGS_syntaxInstructionListForGrammarAnalysis  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'buildRuleList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildRuleList (C_CompilerEx &,
                                const GGS_nonTerminalSymbolMapForGrammarAnalysis  ,
                                const GGS_lstring  ,
                                const GGS_syntaxRuleListAST  ,
                                GGS_terminalSymbolsMapForGrammarAnalysis  &,
                                GGS_syntaxComponentListForGrammarAnalysis  &,
                                GGS_uint  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       list '@nonTerminalToAddList'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_nonTerminalToAddList ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_nonTerminalToAddList ;

//---------------------------------------------------------------------------*

class GGS_nonTerminalToAddList : public AC_GGS_list {
  public : typedef elementOf_GGS_nonTerminalToAddList cElement ;

//--- Constructor 'emptyList'
  public : static GGS_nonTerminalToAddList constructor_emptyList (void) ;
  public : static GGS_nonTerminalToAddList constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_uint & argument_1) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_nonTerminalToAddList & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_nonTerminalToAddList
  reader_subListWithRange (C_CompilerEx & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_nonTerminalToAddList
  reader_subListFromIndex (C_CompilerEx & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_nonTerminalToAddList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_CompilerEx & inLexique,
                              GGS_string& _out_0,
                              GGS_uint & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_CompilerEx & inLexique,
                             GGS_string& _out_0,
                             GGS_uint & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_CompilerEx & inLexique,
                                GGS_string& _out_0,
                                GGS_uint & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_CompilerEx & inLexique,
                                 GGS_string& _out_0,
                                 GGS_uint & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_nonTerminalToAddList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_uint & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_nonTerminalToAddList operator_concat (const GGS_nonTerminalToAddList & inOperand) const ;
  public : void modifier_prependValue (C_CompilerEx & inLexique,
                                const GGS_string& argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_string& argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_string
  reader_mSyntaxComponentNameAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;
  public : GGS_uint 
  reader_mNonTerminalToAddCountAtIndex (C_CompilerEx & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setMSyntaxComponentNameAtIndex (C_CompilerEx & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;
  public : void
  modifier_setMNonTerminalToAddCountAtIndex (C_CompilerEx & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_nonTerminalToAddList castFromObject (C_CompilerEx & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_nonTerminalToAddList & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _mSyntaxComponentName (LOCATION_ARGS) const ;
    public : /* const */ GGS_uint   & _mNonTerminalToAddCount (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'parseGrammarComponent'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_parseGrammarComponent (C_CompilerEx &,
                                const GGS_lstring  ,
                                GGS_parsedComponentStruct &,
                                GGS_grammarComponentAST  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'compileGrammarComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileGrammarComponent (C_CompilerEx &,
                                const GGS_lstring  ,
                                const GGS_string ,
                                const GGS_string ,
                                GGS_parsedComponentStruct & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@nonTerminalToAddList'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_nonTerminalToAddList : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_string mSyntaxComponentName ;
  public : GGS_uint  mNonTerminalToAddCount ;
//--- Constructor
  public : elementOf_GGS_nonTerminalToAddList (const GGS_string& ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_nonTerminalToAddList * nextObject (void) const { return (elementOf_GGS_nonTerminalToAddList *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_nonTerminalToAddList * previousObject (void) const { return (elementOf_GGS_nonTerminalToAddList *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_nonTerminalToAddList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Declarations for 'grammarGenerationTemplate' wrapper            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const cDirectoryWrapperEx gWrapperDirectory_0_grammarGenerationTemplate ;

//---------------------------------------------------------------------------*
//                                                                           *
//'oldGrammarZone2Header' template of 'grammarGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_grammarGenerationTemplate_oldGrammarZone2Header (C_CompilerEx & inLexique,
                                const GGS_grammarComponentAST & var_cas_GRAMMAR_COMPONENT_ROOT) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'oldGrammarZone3Header' template of 'grammarGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_grammarGenerationTemplate_oldGrammarZone3Header (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_LEXIQUE_CLASS,
                                const GGS_grammarComponentAST & var_cas_GRAMMAR_COMPONENT_ROOT,
                                const GGS_nonTerminalSymbolMapForGrammarAnalysis & var_cas_NON_TERMINAL_MAP,
                                const GGS_nonTerminalToAddList & var_cas_ADDED_NON_TERMINAL_LIST) ;

//---------------------------------------------------------------------------*
//                                                                           *
// 'grammarZone2Header' template of 'grammarGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_grammarGenerationTemplate_grammarZone2Header (C_CompilerEx & inLexique,
                                const GGS_grammarComponentAST & var_cas_GRAMMAR_COMPONENT_ROOT) ;

//---------------------------------------------------------------------------*
//                                                                           *
// 'grammarZone3Header' template of 'grammarGenerationTemplate' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_grammarGenerationTemplate_grammarZone3Header (C_CompilerEx & inLexique,
                                const GGS_string& var_cas_LEXIQUE_IDENTIFIER,
                                const GGS_grammarComponentAST & var_cas_GRAMMAR_COMPONENT_ROOT,
                                const GGS_nonTerminalSymbolMapForGrammarAnalysis & var_cas_NON_TERMINAL_MAP,
                                const GGS_nonTerminalToAddList & var_cas_ADDED_NON_TERMINAL_LIST) ;

//---------------------------------------------------------------------------*

#endif
