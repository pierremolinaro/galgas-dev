//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'grammarCompilation.h'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 8th, 2009, at 21h23'8"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef grammarCompilation_DEFINED
#define grammarCompilation_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_data.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_listmap.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

// Include imported semantics
#include "galgas_cli_options.h"
#include "grammarMetamodel.h"
#include "grammarSemantics.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'transformLabelMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_nonterminalSymbolLabelMapForGrammarAnalysis  function_transformLabelMap (C_Compiler &,
                                const GGS_nonTerminalLabelList  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'checkLabelMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkLabelMap (C_Compiler &,
                                const GGS_location  ,
                                const GGS_nonTerminalLabelList  ,
                                const GGS_bool ,
                                const GGS_location  ,
                                const GGS_nonterminalSymbolLabelMapForGrammarAnalysis   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'handleNonTerminalDeclarations'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_handleNonTerminalDeclarations (C_Compiler &,
                                GGS_nonTerminalSymbolMapForGrammarAnalysis  &,
                                const GGS_nonterminalDeclarationList   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@syntaxInstruction.transformInstruction'          *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__syntaxInstruction__transformInstruction)  (C_Compiler & inLexique,
                                const cPtr_syntaxInstruction * inObjectPtr,
                                GGS_terminalSymbolsMapForGrammarAnalysis  & var_cas_ioActuallyUsedTerminalSymbolMap,
                                const GGS_nonTerminalSymbolMapForGrammarAnalysis   var_cas_inNonTerminalSymbolMap,
                                GGS_uint  & var_cas_ioAddedNonTerminalIndex,
                                GGS_syntaxInstructionListForGrammarAnalysis  & var_cas_ioSyntaxInstructionList
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__syntaxInstruction__transformInstruction (typeCategoryMethod__syntaxInstruction__transformInstruction inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__syntaxInstruction__transformInstruction
findCategoryMethod__syntaxInstruction__transformInstruction (AC_galgasClassRunTimeInformation * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'transformInstructionList'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_transformInstructionList (C_Compiler &,
                                const GGS_syntaxInstructionList  ,
                                GGS_terminalSymbolsMapForGrammarAnalysis  &,
                                const GGS_nonTerminalSymbolMapForGrammarAnalysis  ,
                                GGS_uint  &,
                                GGS_syntaxInstructionListForGrammarAnalysis  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'buildRuleList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildRuleList (C_Compiler &,
                                const GGS_nonTerminalSymbolMapForGrammarAnalysis  ,
                                const GGS_lstring  ,
                                const GGS_syntaxRuleList  ,
                                GGS_terminalSymbolsMapForGrammarAnalysis  &,
                                GGS_syntaxComponentListForGrammarAnalysis  &,
                                GGS_uint  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'compileGrammarComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileGrammarComponent (C_Compiler &,
                                const GGS_lstring  ,
                                const GGS_string ,
                                GGS_parsedComponentStruct & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

#endif
