//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticsReaders.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     january 13th, 2010, at 16h44'31"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsReaders.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsReaders.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                           class 'e_readerMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

e_readerMap::e_readerMap (void) :
mArgumentTypeList (),
mHasLexiqueAndLocationArguments (),
mReturnedType () {
}

//---------------------------------------------------------------------------*
//                                                                           *
//                          class map '@readerMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor kTypeDescriptor_GGS_readerMap ("readerMap", false, NULL) ;

//---------------------------------------------------------------------------*

elementOf_GGS_readerMap::
elementOf_GGS_readerMap (const GGS_lstring & inKey,
              const PMSInt32 inIndex,
              const e_readerMap & inInfo) :
AC_galgas_map_element (inKey, inIndex),
mInfo (inInfo) {
}

//---------------------------------------------------------------------------*

void elementOf_GGS_readerMap::
appendForMapDescription (const PMSInt32 inElementIndex,
                         C_String & ioString,
                         const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-key " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mKey.reader_description (inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mArgumentTypeList.reader_description (inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mHasLexiqueAndLocationArguments.reader_description (inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mReturnedType.reader_description (inIndentation + 1) ;
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_readerMap::
isEqualToMapElement (const AC_galgas_map_element * inOperand) const {
  const elementOf_GGS_readerMap * ptr = dynamic_cast <const elementOf_GGS_readerMap *> (inOperand) ;
  macroValidPointer (ptr) ;
  return (mInfo.mArgumentTypeList.operator_isEqual (ptr->mInfo.mArgumentTypeList)).boolValue ()
           && (mInfo.mHasLexiqueAndLocationArguments.operator_isEqual (ptr->mInfo.mHasLexiqueAndLocationArguments)).boolValue ()
           && (mInfo.mReturnedType.operator_isEqual (ptr->mInfo.mReturnedType)).boolValue () ;
}

//---------------------------------------------------------------------------*

AC_galgas_map_element * GGS_readerMap::
new_element (const GGS_lstring & inKey, void * inInfo) {
  MF_Assert (reinterpret_cast <e_readerMap *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  AC_galgas_map_element * p = NULL ;
  e_readerMap * info = (e_readerMap *) inInfo ;
  macroMyNew (p, cElement (inKey, nextIndex (), * info)) ;
  return p ;
}

//---------------------------------------------------------------------------*

void GGS_readerMap::
assignInfo (AC_galgas_map_element * inPtr, void * inInfo) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  MF_Assert (reinterpret_cast <e_readerMap *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  e_readerMap * info = (e_readerMap *) inInfo ;
  p->mInfo = * info ;
}

//---------------------------------------------------------------------------*

GGS_readerMap GGS_readerMap::
constructor_emptyMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap result ;
  macroMyNew (result.mSharedMapRoot, cMapRoot) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_readerMap::
enterIndex (const GGS_lstring & inKey,
            AC_galgas_index_core & outIndex) {
  e_readerMap info  ;
  internalEnterIndex (inKey,
                      (void *) & info,
                      outIndex) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_readerMap::
operator_isEqual (const GGS_readerMap & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_readerMap::
operator_isNotEqual (const GGS_readerMap & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), ! isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

void GGS_readerMap::
internalInsertForDuplication (AC_galgas_map_element * inPtr) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  PMSInt32 attributeIndex = -1 ; // Unused here
  GGS_location existingKeyLocation ; // Unused here
  internalInsert (p->mKey, (void *) & p->mInfo, attributeIndex, existingKeyLocation) ;
}

//---------------------------------------------------------------------------*

void GGS_readerMap::
insertElement (C_Compiler & inLexique,
                const utf32 * inErrorMessage,
                const GGS_lstring & inKey,
                const GGS_typeList & inParameter0,
                const GGS_bool& inParameter1,
                const GGS_ACGalgasType & inParameter2,
                GGS_luint * outIndex
                COMMA_LOCATION_ARGS) {
  PMSInt32 elementID = - 1 ;
  if (isBuilt ()
   && inParameter0.isBuilt ()
   && inParameter1.isBuilt ()
   && inParameter2.isBuilt ()
   && inKey.isBuilt ()) {
    insulateMap () ;
    e_readerMap info  ;
    info.mArgumentTypeList = inParameter0 ;
    info.mHasLexiqueAndLocationArguments = inParameter1 ;
    info.mReturnedType = inParameter2 ;
    GGS_location existingKeyLocation ;
    internalInsert (inKey, (void *) & info, elementID, existingKeyLocation) ;
    if (elementID < 0) {
      emitInsertMapSemanticErrorMessage (inLexique, inKey, inErrorMessage, existingKeyLocation COMMA_THERE) ;
    }
  }
  if (outIndex != NULL) {
    * outIndex = GGS_luint (GGS_uint (elementID >= 0, (PMUInt32) elementID), inKey) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_readerMap::
searchElement (C_Compiler & inLexique,
               const utf32 * inErrorMessage,
               const GGS_lstring & inKey,
               GGS_typeList   & outParameter0,
               GGS_bool  & outParameter1,
               GGS_ACGalgasType   & outParameter2,
               GGS_luint * outIndex
               COMMA_LOCATION_ARGS) const {
  cElement * node = NULL  ;
  if (isBuilt () && inKey.isBuilt ()) {
    AC_galgas_map_element * p = internal_search (inKey.string ()) ;
    MF_Assert ((p == NULL) || (reinterpret_cast <cElement *> (p) != NULL), "Dynamic cast error", 0, 0) ;
    node = (cElement *) p ;
    if (node == NULL) {
      emitMapSemanticErrorMessage (inLexique, inKey, inErrorMessage COMMA_THERE) ;
    }
  }
  if (node == NULL) {
    outParameter0.drop () ;
    outParameter1.drop () ;
    outParameter2.drop () ;
    if (outIndex != NULL) {
      outIndex->drop () ;
     }
  }else{
    outParameter0 = node->mInfo.mArgumentTypeList ;
    outParameter1 = node->mInfo.mHasLexiqueAndLocationArguments ;
    outParameter2 = node->mInfo.mReturnedType ;
    if (outIndex != NULL) {
      * outIndex = GGS_luint (GGS_uint (true, (PMUInt32) node->mID), inKey) ;
    }
  }
}

//---------------------------------------------------------------------------*

const utf32 GGS_readerMap::kSearchMessage_searchKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_readerMap::
method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_typeList   & outParameter0,
                                GGS_bool  & outParameter1,
                                GGS_ACGalgasType   & outParameter2 COMMA_LOCATION_ARGS) const {
  searchElement (inLexique,
                  kSearchMessage_searchKey,
                  inKey,
                  outParameter0,
                  outParameter1,
                  outParameter2,
                  NULL
                  COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const utf32 GGS_readerMap::kInsertMessage_insertKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE (' '),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('y'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('f'),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_readerMap::
modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_typeList & inParameter0,
                                const GGS_bool& inParameter1,
                                const GGS_ACGalgasType & inParameter2 COMMA_LOCATION_ARGS) {
  insertElement (inLexique,
                 kInsertMessage_insertKey,
                 inKey,
                 inParameter0,
                 inParameter1,
                 inParameter2,
                 NULL
                 COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GGS_readerMap GGS_readerMap::
constructor_mapWithMapToOverride (C_Compiler & /* inLexique */,
                                  const GGS_readerMap & inMapToOverride
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap result ; // Not Built
  if (inMapToOverride.mSharedMapRoot != NULL) {
    macroValidPointer (inMapToOverride.mSharedMapRoot) ;
    macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    result.mSharedMapRoot->mNextMap = inMapToOverride.mSharedMapRoot ;
    inMapToOverride.mSharedMapRoot->mReferenceCount ++ ;
    result.mSharedMapRoot->mSequenceNumber = inMapToOverride.mSharedMapRoot->mSequenceNumber ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_readerMap GGS_readerMap::
reader_overriddenMap (C_Compiler & /* inLexique */
                      COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_readerMap result ; // Not Built
  if (mSharedMapRoot != NULL) {
    macroValidPointer (mSharedMapRoot) ;
    result.mSharedMapRoot = mSharedMapRoot->mNextMap ;
    if (result.mSharedMapRoot != NULL) {
      macroValidPointer (result.mSharedMapRoot) ;
      result.mSharedMapRoot->mReferenceCount ++ ;
    }else{
      macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_readerMap::
reader_description (const PMSInt32 inIndentation) const {
  C_String s ;
  s << "<map @readerMap " ;
  if (isBuilt ()) {
    s.appendSigned (count ()) ;
    s << " object" << ((count () > 1) ? "s " : " ") ;
    cElement * p = firstObject () ;
    PMSInt32 elementID = 0 ;
    while (p != NULL) {
      macroValidPointer (p) ;
      p->appendForMapDescription (elementID, s, inIndentation) ;
      p = p->nextObject () ;
      elementID ++ ;
    }
  }else{
    s << "not built" ;
  }
  s << "\n" ;
  s.writeStringMultiple ("| ", inIndentation) ;
  s << ">" ;
  return GGS_string (true, s) ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_typeList  & GGS_readerMap::cEnumerator::_mArgumentTypeList (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mArgumentTypeList ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_bool & GGS_readerMap::cEnumerator::_mHasLexiqueAndLocationArguments (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mHasLexiqueAndLocationArguments ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_ACGalgasType  & GGS_readerMap::cEnumerator::_mReturnedType (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mReturnedType ;
}

//---------------------------------------------------------------------------*

GGS_object GGS_readerMap::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_readerMap * p = NULL ;
    macroMyNew (p, GGS_readerMap (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_readerMap GGS_readerMap::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_readerMap result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_readerMap * p = dynamic_cast <const GGS_readerMap *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_readerMap, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GGS_readerMap::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_readerMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "enterReaderWithoutArgument"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWithoutArgument (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioReaderMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), GGS_typeList ::constructor_emptyList (), var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (42)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterReaderWithStringArgument"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWithStringArgument (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderWithStringArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_argList = GGS_typeList ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioReaderMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (60)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderWithStringArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterReaderWith2StringArguments"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWith2StringArguments (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderWith2StringArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_argList = GGS_typeList ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_argList.addAssign_operation (GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioReaderMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (79)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderWith2StringArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterReaderWithBoolArgument"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWithBoolArgument (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderWithBoolArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_argList = GGS_typeList ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioReaderMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (97)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderWithBoolArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of routine "enterReaderWithBoolStringlistArguments"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWithBoolStringlistArguments (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderWithBoolStringlistArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_argList = GGS_typeList ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_argList.addAssign_operation (function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (115))) ;
  var_cas_ioReaderMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (116)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderWithBoolStringlistArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterReaderWithUintArgument"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWithUintArgument (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderWithUintArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_argList = GGS_typeList ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioReaderMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (134)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderWithUintArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterReaderWith2UintArguments"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWith2UintArguments (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderWith2UintArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_argList = GGS_typeList ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_argList.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioReaderMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (153)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderWith2UintArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterReaderWith3UintArguments"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWith3UintArguments (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderWith3UintArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_argList = GGS_typeList ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_argList.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_argList.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioReaderMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (173)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderWith3UintArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterReaderWithUintCharArguments"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderWithUintCharArguments (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                const GGS_string  var_cas_inName,
                                const GGS_ACGalgasType   var_cas_inReturnedType,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderWithUintCharArguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_typeList  var_cas_argList = GGS_typeList ::constructor_emptyList () ;
  var_cas_argList.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_argList.addAssign_operation (GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
  var_cas_ioReaderMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inName, GGS_location (inLexique) COMMA_HERE), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_inReturnedType COMMA_SOURCE_FILE_AT_LINE (192)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderWithUintCharArguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of once function "commonReaderMapForAllTypes"        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_commonReaderMapForAllTypes ;
static bool gCacheFlagForOnceFunction_commonReaderMapForAllTypes = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_commonReaderMapForAllTypes (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_commonReaderMapForAllTypes) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_commonReaderMapForAllTypes at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = GGS_readerMap ::constructor_emptyMap (inLexique COMMA_HERE) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("description"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (204)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("object"),  GGS_objectGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (205)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("dynamicType"),  GGS_typeGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (206)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_commonReaderMapForAllTypes\n") ;
    #endif
    gCacheFlagForOnceFunction_commonReaderMapForAllTypes = true ;
    gCachedResultForOnceFunction_commonReaderMapForAllTypes = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_commonReaderMapForAllTypes ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_commonReaderMapForAllTypes (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_commonReaderMapForAllTypes (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_commonReaderMapForAllTypes ("commonReaderMapForAllTypes",
                              functionForGenericCall_commonReaderMapForAllTypes,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Virtual Table for category reader '@ACGalgasType.readerMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__readerMap> gDispatchTableForReader__ACGalgasType__readerMap ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__readerMap (typeCategoryReader__ACGalgasType__readerMap inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__readerMap.forceObjectAtIndex (inClassID, inRoutine, NULL) ;
}

//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__ACGalgasType_defaultReader (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_readerMap  () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__readerMap
findCategoryReader__ACGalgasType__readerMap (AC_galgasClassRunTimeInformation * inClassPtr) {
  typeCategoryReader__ACGalgasType__readerMap result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__readerMap.count ()) {
    result = gDispatchTableForReader__ACGalgasType__readerMap (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformation * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__readerMap (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__readerMap.forceObjectAtIndex (inClassPtr->slotID (), result, NULL) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "readerMapFor_location"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_location ;
static bool gCacheFlagForOnceFunction_readerMapFor_location = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_location (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_location) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_location at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (216)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (217)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationIndex"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (218)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("line"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (219)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("column"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (220)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_location\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_location = true ;
    gCachedResultForOnceFunction_readerMapFor_location = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_location ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_location (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_location (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_location ("readerMapFor_location",
                              functionForGenericCall_readerMapFor_location,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@locationGalgasType.readerMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__locationGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_locationGalgasType * operand_7488
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_7488 != NULL) {
    var_cas_outMap = function_readerMapFor_location (inLexique COMMA_SOURCE_FILE_AT_LINE (226)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_string"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_string ;
static bool gCacheFlagForOnceFunction_readerMapFor_string = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_string (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_string) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_string at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (232)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("doesEnvironmentVariableExist"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (233)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("length"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (234)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("identifierRepresentation"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (235)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("HTMLRepresentation"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (236)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("utf8Representation"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (237)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("utf32Representation"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (238)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringByTrimmingWhiteSpaces"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (239)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("md5"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (240)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("decimalUnsignedNumber"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (241)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isDecimalUnsignedNumber"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (242)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("capacity"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (243)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("fileExists"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (244)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("directoryExists"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (245)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("pathExtension"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (246)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("nativePathWithUnixPath"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (247)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("unixPathWithNativePath"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (248)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("lastPathComponent"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (249)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringByDeletingPathExtension"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (250)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringByCapitalizingFirstCharacter"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (251)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("firstCharacterOrNul"),  GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (252)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringByDeletingLastPathComponent"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (253)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringByStandardizingPath"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (254)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("lowercaseString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (255)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uppercaseString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (256)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("reversedString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (257)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("system"),  GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (258)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("characterAtIndex"),  GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (259)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("stringByRemovingCharacterAtIndex"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (260)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("rightSubString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (261)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("leftSubString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (262)) ;
    ::routine_enterReaderWith2UintArguments (inLexique,  var_cas_outMap,  GGS_string ("subString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (263)) ;
    ::routine_enterReaderWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("absolutePathFromPath"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (264)) ;
    ::routine_enterReaderWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("relativePathFromPath"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (265)) ;
    ::routine_enterReaderWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("componentsSeparatedByString"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (266)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (266)) ;
    ::routine_enterReaderWithUintCharArguments (inLexique,  var_cas_outMap,  GGS_string ("stringByLeftPadding"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (267)) ;
    ::routine_enterReaderWithUintCharArguments (inLexique,  var_cas_outMap,  GGS_string ("stringByRightPadding"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (268)) ;
    ::routine_enterReaderWithUintCharArguments (inLexique,  var_cas_outMap,  GGS_string ("stringByLeftAndRightPadding"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (269)) ;
    ::routine_enterReaderWith2StringArguments (inLexique,  var_cas_outMap,  GGS_string ("stringByReplacingStringByString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (270)) ;
    ::routine_enterReaderWithBoolArgument (inLexique,  var_cas_outMap,  GGS_string ("regularFiles"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (271)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (271)) ;
    ::routine_enterReaderWithBoolArgument (inLexique,  var_cas_outMap,  GGS_string ("hiddenFiles"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (272)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (272)) ;
    ::routine_enterReaderWithBoolArgument (inLexique,  var_cas_outMap,  GGS_string ("directories"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (273)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (273)) ;
    ::routine_enterReaderWithBoolStringlistArguments (inLexique,  var_cas_outMap,  GGS_string ("directoriesWithExtensions"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (274)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (274)) ;
    ::routine_enterReaderWithBoolStringlistArguments (inLexique,  var_cas_outMap,  GGS_string ("regularFilesWithExtensions"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (275)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (275)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_string\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_string = true ;
    gCachedResultForOnceFunction_readerMapFor_string = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_string ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_string (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_string (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_string ("readerMapFor_string",
                              functionForGenericCall_readerMapFor_string,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@stringGalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__stringGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_stringGalgasType * operand_12001
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_12001 != NULL) {
    var_cas_outMap = function_readerMapFor_string (inLexique COMMA_SOURCE_FILE_AT_LINE (281)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_char"             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_char ;
static bool gCacheFlagForOnceFunction_readerMapFor_char = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_char (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_char) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_char at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (287)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (288)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("utf32CharConstantRepresentation"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (289)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (290)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isalnum"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (291)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isalpha"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (292)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("iscntrl"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (293)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isdigit"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (294)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("islower"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (295)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isupper"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (296)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isxdigit"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (297)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uintValue"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (298)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isUnicodeLetter"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (299)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isUnicodeMark"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (300)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isUnicodeNumber"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (301)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isUnicodeSeparator"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (302)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isUnicodeCommand"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (303)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isUnicodePunctuation"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (304)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isUnicodeSymbol"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (305)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("unicodeName"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (306)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("unicodeToLower"),  GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (307)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("unicodeToUpper"),  GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (308)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_char\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_char = true ;
    gCachedResultForOnceFunction_readerMapFor_char = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_char ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_char (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_char (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_char ("readerMapFor_char",
                              functionForGenericCall_readerMapFor_char,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@charGalgasType.readerMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__charGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_charGalgasType * operand_14185
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_14185 != NULL) {
    var_cas_outMap = function_readerMapFor_char (inLexique COMMA_SOURCE_FILE_AT_LINE (314)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_bool"             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_bool ;
static bool gCacheFlagForOnceFunction_readerMapFor_bool = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_bool (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_bool) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_bool at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (320)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("cString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (321)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("ocString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (322)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (323)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint"),  GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (324)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint64"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (325)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint64"),  GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (326)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_bool\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_bool = true ;
    gCachedResultForOnceFunction_readerMapFor_bool = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_bool ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_bool (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_bool (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_bool ("readerMapFor_bool",
                              functionForGenericCall_readerMapFor_bool,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@boolGalgasType.readerMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__boolGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_boolGalgasType * operand_15044
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_15044 != NULL) {
    var_cas_outMap = function_readerMapFor_bool (inLexique COMMA_SOURCE_FILE_AT_LINE (332)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_uint"             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_uint ;
static bool gCacheFlagForOnceFunction_readerMapFor_uint = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_uint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_uint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_uint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (338)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("double"),  GGS_doubleGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (339)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint"),  GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (340)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint64"),  GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (341)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint64"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (342)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("lsbIndex"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (343)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("significantBitCount"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (344)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (345)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("hexString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (346)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isUnicodeValueAssigned"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (347)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_uint\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_uint = true ;
    gCachedResultForOnceFunction_readerMapFor_uint = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_uint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_uint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_uint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_uint ("readerMapFor_uint",
                              functionForGenericCall_readerMapFor_uint,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@uintGalgasType.readerMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__uintGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_uintGalgasType * operand_16180
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_16180 != NULL) {
    var_cas_outMap = function_readerMapFor_uint (inLexique COMMA_SOURCE_FILE_AT_LINE (353)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_sint"             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_sint ;
static bool gCacheFlagForOnceFunction_readerMapFor_sint = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_sint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_sint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_sint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (359)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("double"),  GGS_doubleGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (360)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint64"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (361)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint64"),  GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (362)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (363)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (364)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_sint\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_sint = true ;
    gCachedResultForOnceFunction_readerMapFor_sint = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_sint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_sint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_sint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_sint ("readerMapFor_sint",
                              functionForGenericCall_readerMapFor_sint,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@sintGalgasType.readerMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__sintGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_sintGalgasType * operand_16958
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_16958 != NULL) {
    var_cas_outMap = function_readerMapFor_sint (inLexique COMMA_SOURCE_FILE_AT_LINE (370)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_uint64"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_uint64 ;
static bool gCacheFlagForOnceFunction_readerMapFor_uint64 = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_uint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_uint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_uint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (376)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("double"),  GGS_doubleGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (377)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint"),  GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (378)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint64"),  GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (379)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (380)) ;
    ::routine_enterReaderWith2UintArguments (inLexique,  var_cas_outMap,  GGS_string ("uintSlice"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (381)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (382)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("hexString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (383)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_uint64\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_uint64 = true ;
    gCachedResultForOnceFunction_readerMapFor_uint64 = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_uint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_uint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_uint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_uint64 ("readerMapFor_uint64",
                              functionForGenericCall_readerMapFor_uint64,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@uint64GalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__uint64GalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_uint64GalgasType * operand_17907
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_17907 != NULL) {
    var_cas_outMap = function_readerMapFor_uint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (389)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_sint64"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_sint64 ;
static bool gCacheFlagForOnceFunction_readerMapFor_sint64 = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_sint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_sint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_sint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (395)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("double"),  GGS_doubleGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (396)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint64"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (397)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint"),  GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (398)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (399)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (400)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_sint64\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_sint64 = true ;
    gCachedResultForOnceFunction_readerMapFor_sint64 = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_sint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_sint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_sint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_sint64 ("readerMapFor_sint64",
                              functionForGenericCall_readerMapFor_sint64,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@sint64GalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__sint64GalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_sint64GalgasType * operand_18687
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_18687 != NULL) {
    var_cas_outMap = function_readerMapFor_sint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (406)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_double"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_double ;
static bool gCacheFlagForOnceFunction_readerMapFor_double = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_double (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_double) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_double at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (412)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (413)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_double\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_double = true ;
    gCachedResultForOnceFunction_readerMapFor_double = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_double ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_double (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_double (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_double ("readerMapFor_double",
                              functionForGenericCall_readerMapFor_double,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@doubleGalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__doubleGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_doubleGalgasType * operand_19147
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_19147 != NULL) {
    var_cas_outMap = function_readerMapFor_double (inLexique COMMA_SOURCE_FILE_AT_LINE (419)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_lstring"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_lstring ;
static bool gCacheFlagForOnceFunction_readerMapFor_lstring = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_lstring (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_lstring) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_lstring at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_readerMapFor_string (inLexique COMMA_SOURCE_FILE_AT_LINE (425)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (426)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("location"),  GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (427)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (428)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_lstring\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_lstring = true ;
    gCachedResultForOnceFunction_readerMapFor_lstring = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_lstring ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_lstring (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_lstring (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_lstring ("readerMapFor_lstring",
                              functionForGenericCall_readerMapFor_lstring,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@lstringGalgasType.readerMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__lstringGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_lstringGalgasType * operand_19778
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_19778 != NULL) {
    var_cas_outMap = function_readerMapFor_lstring (inLexique COMMA_SOURCE_FILE_AT_LINE (434)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_lchar"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_lchar ;
static bool gCacheFlagForOnceFunction_readerMapFor_lchar = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_lchar (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_lchar) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_lchar at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (440)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("char"),  GGS_charGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (441)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (442)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("location"),  GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (443)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_lchar\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_lchar = true ;
    gCachedResultForOnceFunction_readerMapFor_lchar = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_lchar ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_lchar (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_lchar (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_lchar ("readerMapFor_lchar",
                              functionForGenericCall_readerMapFor_lchar,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@lcharGalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__lcharGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_lcharGalgasType * operand_20409
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_20409 != NULL) {
    var_cas_outMap = function_readerMapFor_lchar (inLexique COMMA_SOURCE_FILE_AT_LINE (449)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_lbool"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_lbool ;
static bool gCacheFlagForOnceFunction_readerMapFor_lbool = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_lbool (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_lbool) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_lbool at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (455)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("bool"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (456)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("location"),  GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (457)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_lbool\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_lbool = true ;
    gCachedResultForOnceFunction_readerMapFor_lbool = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_lbool ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_lbool (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_lbool (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_lbool ("readerMapFor_lbool",
                              functionForGenericCall_readerMapFor_lbool,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@lboolGalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__lboolGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_lboolGalgasType * operand_20948
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_20948 != NULL) {
    var_cas_outMap = function_readerMapFor_lbool (inLexique COMMA_SOURCE_FILE_AT_LINE (463)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_luint"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_luint ;
static bool gCacheFlagForOnceFunction_readerMapFor_luint = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_luint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_luint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_luint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (469)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (470)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("location"),  GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (471)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (472)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_luint\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_luint = true ;
    gCachedResultForOnceFunction_readerMapFor_luint = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_luint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_luint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_luint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_luint ("readerMapFor_luint",
                              functionForGenericCall_readerMapFor_luint,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@luintGalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__luintGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_luintGalgasType * operand_21577
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_21577 != NULL) {
    var_cas_outMap = function_readerMapFor_luint (inLexique COMMA_SOURCE_FILE_AT_LINE (478)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_lsint"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_lsint ;
static bool gCacheFlagForOnceFunction_readerMapFor_lsint = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_lsint (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_lsint) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_lsint at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (484)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint"),  GGS_sintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (485)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (486)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("location"),  GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (487)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (488)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_lsint\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_lsint = true ;
    gCachedResultForOnceFunction_readerMapFor_lsint = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_lsint ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_lsint (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_lsint (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_lsint ("readerMapFor_lsint",
                              functionForGenericCall_readerMapFor_lsint,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@lsintGalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__lsintGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_lsintGalgasType * operand_22288
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_22288 != NULL) {
    var_cas_outMap = function_readerMapFor_lsint (inLexique COMMA_SOURCE_FILE_AT_LINE (494)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_luint64"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_luint64 ;
static bool gCacheFlagForOnceFunction_readerMapFor_luint64 = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_luint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_luint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_luint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (500)) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint64"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (502)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("location"),  GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (503)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (504)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_luint64\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_luint64 = true ;
    gCachedResultForOnceFunction_readerMapFor_luint64 = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_luint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_luint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_luint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_luint64 ("readerMapFor_luint64",
                              functionForGenericCall_readerMapFor_luint64,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@luint64GalgasType.readerMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__luint64GalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_luint64GalgasType * operand_22953
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_22953 != NULL) {
    var_cas_outMap = function_readerMapFor_luint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (510)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_lsint64"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_lsint64 ;
static bool gCacheFlagForOnceFunction_readerMapFor_lsint64 = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_lsint64 (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_lsint64) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_lsint64 at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (516)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("sint64"),  GGS_sint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (517)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (518)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("location"),  GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (519)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (520)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_lsint64\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_lsint64 = true ;
    gCachedResultForOnceFunction_readerMapFor_lsint64 = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_lsint64 ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_lsint64 (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_lsint64 (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_lsint64 ("readerMapFor_lsint64",
                              functionForGenericCall_readerMapFor_lsint64,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@lsint64GalgasType.readerMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__lsint64GalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_lsint64GalgasType * operand_23674
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_23674 != NULL) {
    var_cas_outMap = function_readerMapFor_lsint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (526)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_ldouble"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_ldouble ;
static bool gCacheFlagForOnceFunction_readerMapFor_ldouble = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_ldouble (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_ldouble) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_ldouble at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (532)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("double"),  GGS_doubleGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (533)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("string"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (534)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("location"),  GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (535)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationString"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (536)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_ldouble\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_ldouble = true ;
    gCachedResultForOnceFunction_readerMapFor_ldouble = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_ldouble ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_ldouble (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_ldouble (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_ldouble ("readerMapFor_ldouble",
                              functionForGenericCall_readerMapFor_ldouble,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@ldoubleGalgasType.readerMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__ldoubleGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_ldoubleGalgasType * operand_24395
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_24395 != NULL) {
    var_cas_outMap = function_readerMapFor_ldouble (inLexique COMMA_SOURCE_FILE_AT_LINE (542)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "readerMapFor_stringset"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_stringset ;
static bool gCacheFlagForOnceFunction_readerMapFor_stringset = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_stringset (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_stringset) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_stringset at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (548)) ;
    ::routine_enterReaderWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("hasKey"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (549)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("count"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (550)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringList"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (551)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (551)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_stringset\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_stringset = true ;
    gCachedResultForOnceFunction_readerMapFor_stringset = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_stringset ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_stringset (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_stringset (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_stringset ("readerMapFor_stringset",
                              functionForGenericCall_readerMapFor_stringset,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@stringsetGalgasType.readerMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__stringsetGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_stringsetGalgasType * operand_25029
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_25029 != NULL) {
    var_cas_outMap = function_readerMapFor_stringset (inLexique COMMA_SOURCE_FILE_AT_LINE (557)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "readerMapFor_binaryset"          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_binaryset ;
static bool gCacheFlagForOnceFunction_readerMapFor_binaryset = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_binaryset (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_binaryset) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_binaryset at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (563)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isFull"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (564)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isEmpty"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (565)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("significantVariableCount"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (566)) ;
    GGS_typeList  var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("ITE"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (570)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("forAllOnBitIndex"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (571)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("forAllOnBitIndexAndBeyond"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (572)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("existOnBitIndex"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (573)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("valueCount"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (574)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("compressedValueCount"),  GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (575)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("uint64ValueList"),  function_build_uint64list_type (inLexique COMMA_SOURCE_FILE_AT_LINE (576)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (576)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("stringValueList"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (577)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (577)) ;
    var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (580))) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("stringValueListWithNameList"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (581)) COMMA_SOURCE_FILE_AT_LINE (581)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("predicateStringValue"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (582)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("compressedStringValueList"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (583)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (583)) ;
    ::routine_enterReaderWith2UintArguments (inLexique,  var_cas_outMap,  GGS_string ("swap21"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (584)) ;
    ::routine_enterReaderWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("swap132"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (585)) ;
    ::routine_enterReaderWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("swap213"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (586)) ;
    ::routine_enterReaderWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("swap231"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (587)) ;
    ::routine_enterReaderWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("swap312"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (588)) ;
    ::routine_enterReaderWith3UintArguments (inLexique,  var_cas_outMap,  GGS_string ("swap321"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (589)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("transitiveClosure"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (590)) ;
    var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("accessibleStates"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (594)) ;
    var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("equalTo"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (597)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("notEqualTo"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (598)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lowerOrEqualTo"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (599)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("greaterOrEqualTo"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (600)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("greaterThan"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (601)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("lowerThan"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (602)) ;
    ::routine_enterReaderWith2UintArguments (inLexique,  var_cas_outMap,  GGS_string ("binarySetByTranslatingFromIndex"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (603)) ;
    var_cas_t = GGS_typeList ::constructor_emptyList () ;
    var_cas_t.addAssign_operation (GGS_uint64GalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_t.addAssign_operation (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("containsValue"), GGS_location (inLexique) COMMA_HERE), var_cas_t, GGS_bool (false), GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (608)) ;
    ::routine_enterReaderWith2UintArguments (inLexique,  var_cas_outMap,  GGS_string ("existsOnBitRange"),  GGS_binarysetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (609)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_binaryset\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_binaryset = true ;
    gCachedResultForOnceFunction_readerMapFor_binaryset = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_binaryset ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_binaryset (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_binaryset (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_binaryset ("readerMapFor_binaryset",
                              functionForGenericCall_readerMapFor_binaryset,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@binarysetGalgasType.readerMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__binarysetGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_binarysetGalgasType * operand_28889
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_28889 != NULL) {
    var_cas_outMap = function_readerMapFor_binaryset (inLexique COMMA_SOURCE_FILE_AT_LINE (615)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_type"             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_type ;
static bool gCacheFlagForOnceFunction_readerMapFor_type = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_type (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_type) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_type at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (621)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("name"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (622)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isClassType"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (623)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("hasSuperclass"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (624)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("superclass"),  GGS_typeGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (625)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_type\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_type = true ;
    gCachedResultForOnceFunction_readerMapFor_type = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_type ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_type (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_type (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_type ("readerMapFor_type",
                              functionForGenericCall_readerMapFor_type,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@typeGalgasType.readerMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__typeGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_typeGalgasType * operand_29598
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_29598 != NULL) {
    var_cas_outMap = function_readerMapFor_type (inLexique COMMA_SOURCE_FILE_AT_LINE (631)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_object"            *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_object ;
static bool gCacheFlagForOnceFunction_readerMapFor_object = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_object (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_object) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_object at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (637)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("objectType"),  GGS_typeGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (638)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_object\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_object = true ;
    gCachedResultForOnceFunction_readerMapFor_object = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_object ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_object (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_object (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_object ("readerMapFor_object",
                              functionForGenericCall_readerMapFor_object,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@objectGalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__objectGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_objectGalgasType * operand_30058
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_30058 != NULL) {
    var_cas_outMap = function_readerMapFor_object (inLexique COMMA_SOURCE_FILE_AT_LINE (644)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_data"             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_data ;
static bool gCacheFlagForOnceFunction_readerMapFor_data = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_data (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_data) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_data at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (650)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("length"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (651)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_data\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_data = true ;
    gCachedResultForOnceFunction_readerMapFor_data = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_data ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_data (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_data (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_data ("readerMapFor_data",
                              functionForGenericCall_readerMapFor_data,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@dataGalgasType.readerMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__dataGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_dataGalgasType * operand_30512
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_30512 != NULL) {
    var_cas_outMap = function_readerMapFor_data (inLexique COMMA_SOURCE_FILE_AT_LINE (657)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of once function "readerMapFor_function"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_function ;
static bool gCacheFlagForOnceFunction_readerMapFor_function = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_function (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_function) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_function at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (663)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("name"),  GGS_stringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (664)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("resultType"),  GGS_typeGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (665)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("formalParameterTypeList"),  function_build_typelist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (666)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (666)) ;
    GGS_typeList  var_cas_typeList = GGS_typeList ::constructor_emptyList () ;
    var_cas_typeList.addAssign_operation (function_build_typelist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (668))) ;
    var_cas_typeList.addAssign_operation (GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE)) ;
    var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("invoke"), GGS_location (inLexique) COMMA_HERE), var_cas_typeList, GGS_bool (false), GGS_objectGalgasType ::constructor_new (inLexique COMMA_HERE) COMMA_SOURCE_FILE_AT_LINE (670)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_function\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_function = true ;
    gCachedResultForOnceFunction_readerMapFor_function = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_function ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_function (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_function (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_function ("readerMapFor_function",
                              functionForGenericCall_readerMapFor_function,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@functionGalgasType.readerMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__functionGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_functionGalgasType * operand_31371
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_31371 != NULL) {
    var_cas_outMap = function_readerMapFor_function (inLexique COMMA_SOURCE_FILE_AT_LINE (676)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@classGalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__classGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_classGalgasType * operand_31568
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_31568 != NULL) {
    const GGS_bool cond_31679 = operand_31568->mSuperClassIndex.reader_isNull (inLexique COMMA_SOURCE_FILE_AT_LINE (682)) ;
    if (cond_31679.isBuiltAndTrue ()) {
      var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (683)) ;
    }else if (cond_31679.isBuiltAndFalse ()) {
      GGS_ACGalgasType  var_cas_superClassType ;
      GGS_lstring  automatic_var_31766_0 ;
      const GGS_typeMapIndex  temp_31746 = operand_31568->mSuperClassIndex ;
      if (temp_31746.isBuilt ()) {
        temp_31746 (HERE)->method_searchKey (inLexique, automatic_var_31766_0, var_cas_superClassType COMMA_SOURCE_FILE_AT_LINE (686)) ;
      }
      var_cas_outMap = (findCategoryReader__ACGalgasType__readerMap (var_cas_superClassType (HERE)->galgasRTTI ()) (inLexique, var_cas_superClassType.getPtr () COMMA_SOURCE_FILE_AT_LINE (687))) ;
    }
    {
      GGS_attributeList::cEnumerator enumerator_31847 (operand_31568->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_31847 = NULL ;
      while (((operand_31847 = enumerator_31847.nextObject ()))) {
        macroValidPointer (operand_31847) ;
        GGS_ACGalgasType  var_cas_t ;
        GGS_lstring  automatic_var_31914_0 ;
        const GGS_typeMapIndex  temp_31907 = operand_31847->mAttributeTypeIndex ;
        if (temp_31907.isBuilt ()) {
          temp_31907 (HERE)->method_searchKey (inLexique, automatic_var_31914_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (691)) ;
        }
        var_cas_outMap.modifier_insertKey (inLexique, operand_31847->mAttributeName, GGS_typeList ::constructor_emptyList (), GGS_bool (false), var_cas_t COMMA_SOURCE_FILE_AT_LINE (692)) ;
      }
    }
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of once function "readerMapFor_list"             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_list ;
static bool gCacheFlagForOnceFunction_readerMapFor_list = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_list (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_list) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_list at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (704)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("length"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (705)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_list\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_list = true ;
    gCachedResultForOnceFunction_readerMapFor_list = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_list ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_list (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_list (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_list ("readerMapFor_list",
                              functionForGenericCall_readerMapFor_list,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@listGalgasType.readerMap'                 *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__listGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_listGalgasType * operand_32432
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_32432 != NULL) {
    var_cas_outMap = function_readerMapFor_list (inLexique COMMA_SOURCE_FILE_AT_LINE (711)) ;
    ::routine_enterReaderWithUintArgument (inLexique,  var_cas_outMap,  GGS_string ("subListFromIndex"),  operand_32432,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (712)) ;
    ::routine_enterReaderWith2UintArguments (inLexique,  var_cas_outMap,  GGS_string ("subListWithRange"),  operand_32432,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (713)) ;
    {
      GGS_attributeList::cEnumerator enumerator_32664 (operand_32432->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_32664 = NULL ;
      while (((operand_32664 = enumerator_32664.nextObject ()))) {
        macroValidPointer (operand_32664) ;
        GGS_ACGalgasType  var_cas_t ;
        GGS_lstring  automatic_var_32731_0 ;
        const GGS_typeMapIndex  temp_32724 = operand_32664->mAttributeTypeIndex ;
        if (temp_32724.isBuilt ()) {
          temp_32724 (HERE)->method_searchKey (inLexique, automatic_var_32731_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (716)) ;
        }
        var_cas_outMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, (operand_32664->mAttributeName.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (718))).operator_concat (GGS_string ("AtIndex")), operand_32664->mAttributeName.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (718)) COMMA_HERE), GGS_typeList ::constructor_listWithValue (GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE)), GGS_bool (false), var_cas_t COMMA_SOURCE_FILE_AT_LINE (717)) ;
      }
    }
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of once function "readerMapFor_listmap"           *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_listmap ;
static bool gCacheFlagForOnceFunction_readerMapFor_listmap = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_listmap (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_listmap) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_listmap at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (729)) ;
    ::routine_enterReaderWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("hasKey"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (730)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("allKeys"),  GGS_stringsetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (731)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("count"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (732)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("keyList"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (733)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (733)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_listmap\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_listmap = true ;
    gCachedResultForOnceFunction_readerMapFor_listmap = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_listmap ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_listmap (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_listmap (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_listmap ("readerMapFor_listmap",
                              functionForGenericCall_readerMapFor_listmap,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@listmapGalgasType.readerMap'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__listmapGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_listmapGalgasType * operand_33598
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_33598 != NULL) {
    var_cas_outMap = function_readerMapFor_listmap (inLexique COMMA_SOURCE_FILE_AT_LINE (739)) ;
    GGS_ACGalgasType  var_cas_t ;
    GGS_lstring  automatic_var_33723_0 ;
    const GGS_typeMapIndex  temp_33716 = operand_33598->mAssociatedListTypeIndex ;
    if (temp_33716.isBuilt ()) {
      temp_33716 (HERE)->method_searchKey (inLexique, automatic_var_33723_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (741)) ;
    }
    ::routine_enterReaderWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("listForKey"),  var_cas_t,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (742)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@structGalgasType.readerMap'                *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__structGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_structGalgasType * operand_33929
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_33929 != NULL) {
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (748)) ;
    {
      GGS_attributeList::cEnumerator enumerator_34020 (operand_33929->mAttributeList, true) ;
      const GGS_attributeList::cElement * operand_34020 = NULL ;
      while (((operand_34020 = enumerator_34020.nextObject ()))) {
        macroValidPointer (operand_34020) ;
        GGS_ACGalgasType  var_cas_t ;
        GGS_lstring  automatic_var_34087_0 ;
        const GGS_typeMapIndex  temp_34080 = operand_34020->mAttributeTypeIndex ;
        if (temp_34080.isBuilt ()) {
          temp_34080 (HERE)->method_searchKey (inLexique, automatic_var_34087_0, var_cas_t COMMA_SOURCE_FILE_AT_LINE (751)) ;
        }
        var_cas_outMap.modifier_insertKey (inLexique, operand_34020->mAttributeName, GGS_typeList ::constructor_emptyList (), GGS_bool (false), var_cas_t COMMA_SOURCE_FILE_AT_LINE (752)) ;
      }
    }
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Category reader '@sortedlistGalgasType.readerMap'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__sortedlistGalgasType__readerMap (C_Compiler & inLexique,
                                const cPtr_sortedlistGalgasType * operand_34351
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_34351 != NULL) {
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (764)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("length"),  operand_34351,  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (765)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of once function "readerMapFor_map"             *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap  gCachedResultForOnceFunction_readerMapFor_map ;
static bool gCacheFlagForOnceFunction_readerMapFor_map = false ;

//---------------------------------------------------------------------------*

GGS_readerMap  function_readerMapFor_map (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) {
  if (! gCacheFlagForOnceFunction_readerMapFor_map) {
    #ifdef DEBUG_TRACE_ENABLED
      printf ("ENTER function_readerMapFor_map at %s:%d\n", __FILE__, __LINE__) ;
    #endif
  GGS_readerMap  var_cas_outMap ;
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (771)) ;
    ::routine_enterReaderWithStringArgument (inLexique,  var_cas_outMap,  GGS_string ("hasKey"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (772)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("locationForKey"),  GGS_locationGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (773)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("count"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (774)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("allKeys"),  GGS_stringsetGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (775)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("keyList"),  function_build_lstringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (776)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (776)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("unsolvedIndexCount"),  GGS_uintGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (777)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("unsolvedIndexKeyStringList"),  function_build_stringlist_type (inLexique COMMA_SOURCE_FILE_AT_LINE (778)),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (778)) ;
    #ifdef DEBUG_TRACE_ENABLED
      printf ("LEAVE function_readerMapFor_map\n") ;
    #endif
    gCacheFlagForOnceFunction_readerMapFor_map = true ;
    gCachedResultForOnceFunction_readerMapFor_map = var_cas_outMap ;
  }
  return gCachedResultForOnceFunction_readerMapFor_map ;
}

//---------------------------------------------------------------------------*

static GGS_object functionForGenericCall_readerMapFor_map (C_Compiler & inLexique,
                           const GGS_objectlist & /* inEffectiveParameterArray */,
                           const GGS_location & /* inErrorLocation */
                           COMMA_LOCATION_ARGS) {
  const GGS_readerMap  result = function_readerMapFor_map (inLexique
                            COMMA_THERE) ;
  return result.reader_object () ;
}

//---------------------------------------------------------------------------*

const C_galgas_function_descriptor kFunction_descriptor_readerMapFor_map ("readerMapFor_map",
                              functionForGenericCall_readerMapFor_map,
                              & kTypeDescriptor_GGS_readerMap ,
                              0,
                              NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Category reader '@mapType.readerMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__mapType__readerMap (C_Compiler & inLexique,
                                const cPtr_mapType * operand_35407
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_35407 != NULL) {
    var_cas_outMap = function_readerMapFor_map (inLexique COMMA_SOURCE_FILE_AT_LINE (784)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Category reader '@mapindexType.readerMap'                  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__mapindexType__readerMap (C_Compiler & inLexique,
                                const cPtr_mapindexType * operand_35596
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_35596 != NULL) {
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (790)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isRegular"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (791)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isNull"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (792)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("isSolved"),  GGS_boolGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (793)) ;
    ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  GGS_string ("key"),  GGS_lstringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (794)) ;
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  Category reader '@enumType.readerMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_readerMap 
category_reader__enumType__readerMap (C_Compiler & inLexique,
                                const cPtr_enumType * operand_36116
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_readerMap  var_cas_outMap ;
  if (operand_36116 != NULL) {
    var_cas_outMap = function_commonReaderMapForAllTypes (inLexique COMMA_SOURCE_FILE_AT_LINE (800)) ;
    {
      GGS_enumMessageMap::cEnumerator enumerator_36208 (operand_36116->mEnumMessageMap, true) ;
      const GGS_enumMessageMap::cElement * operand_36208 = NULL ;
      while (((operand_36208 = enumerator_36208.nextObject ()))) {
        macroValidPointer (operand_36208) ;
        ::routine_enterReaderWithoutArgument (inLexique,  var_cas_outMap,  operand_36208->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (802)),  GGS_lstringGalgasType ::constructor_new (inLexique COMMA_HERE),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (802)) ;
      }
    }
  }
  return var_cas_outMap ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsReaders (void) {
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__locationGalgasType__readerMap, gClassInfoFor__locationGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__stringGalgasType__readerMap, gClassInfoFor__stringGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__charGalgasType__readerMap, gClassInfoFor__charGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__boolGalgasType__readerMap, gClassInfoFor__boolGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__uintGalgasType__readerMap, gClassInfoFor__uintGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__sintGalgasType__readerMap, gClassInfoFor__sintGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__uint64GalgasType__readerMap, gClassInfoFor__uint64GalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__sint64GalgasType__readerMap, gClassInfoFor__sint64GalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__doubleGalgasType__readerMap, gClassInfoFor__doubleGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__lstringGalgasType__readerMap, gClassInfoFor__lstringGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__lcharGalgasType__readerMap, gClassInfoFor__lcharGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__lboolGalgasType__readerMap, gClassInfoFor__lboolGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__luintGalgasType__readerMap, gClassInfoFor__luintGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__lsintGalgasType__readerMap, gClassInfoFor__lsintGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__luint64GalgasType__readerMap, gClassInfoFor__luint64GalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__lsint64GalgasType__readerMap, gClassInfoFor__lsint64GalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__ldoubleGalgasType__readerMap, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__stringsetGalgasType__readerMap, gClassInfoFor__stringsetGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__binarysetGalgasType__readerMap, gClassInfoFor__binarysetGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__typeGalgasType__readerMap, gClassInfoFor__typeGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__objectGalgasType__readerMap, gClassInfoFor__objectGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__dataGalgasType__readerMap, gClassInfoFor__dataGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__functionGalgasType__readerMap, gClassInfoFor__functionGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__classGalgasType__readerMap, gClassInfoFor__classGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__listGalgasType__readerMap, gClassInfoFor__listGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__listmapGalgasType__readerMap, gClassInfoFor__listmapGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__structGalgasType__readerMap, gClassInfoFor__structGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__sortedlistGalgasType__readerMap, gClassInfoFor__sortedlistGalgasType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__mapType__readerMap, gClassInfoFor__mapType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__mapindexType__readerMap, gClassInfoFor__mapindexType.slotID ()) ;
 enterCategoryReader__ACGalgasType__readerMap ((typeCategoryReader__ACGalgasType__readerMap) category_reader__enumType__readerMap, gClassInfoFor__enumType.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_semanticsReaders (void) {
  gCachedResultForOnceFunction_commonReaderMapForAllTypes.drop () ;
  gCachedResultForOnceFunction_readerMapFor_location.drop () ;
  gCachedResultForOnceFunction_readerMapFor_string.drop () ;
  gCachedResultForOnceFunction_readerMapFor_char.drop () ;
  gCachedResultForOnceFunction_readerMapFor_bool.drop () ;
  gCachedResultForOnceFunction_readerMapFor_uint.drop () ;
  gCachedResultForOnceFunction_readerMapFor_sint.drop () ;
  gCachedResultForOnceFunction_readerMapFor_uint64.drop () ;
  gCachedResultForOnceFunction_readerMapFor_sint64.drop () ;
  gCachedResultForOnceFunction_readerMapFor_double.drop () ;
  gCachedResultForOnceFunction_readerMapFor_lstring.drop () ;
  gCachedResultForOnceFunction_readerMapFor_lchar.drop () ;
  gCachedResultForOnceFunction_readerMapFor_lbool.drop () ;
  gCachedResultForOnceFunction_readerMapFor_luint.drop () ;
  gCachedResultForOnceFunction_readerMapFor_lsint.drop () ;
  gCachedResultForOnceFunction_readerMapFor_luint64.drop () ;
  gCachedResultForOnceFunction_readerMapFor_lsint64.drop () ;
  gCachedResultForOnceFunction_readerMapFor_ldouble.drop () ;
  gCachedResultForOnceFunction_readerMapFor_stringset.drop () ;
  gCachedResultForOnceFunction_readerMapFor_binaryset.drop () ;
  gCachedResultForOnceFunction_readerMapFor_type.drop () ;
  gCachedResultForOnceFunction_readerMapFor_object.drop () ;
  gCachedResultForOnceFunction_readerMapFor_data.drop () ;
  gCachedResultForOnceFunction_readerMapFor_function.drop () ;
  gCachedResultForOnceFunction_readerMapFor_list.drop () ;
  gCachedResultForOnceFunction_readerMapFor_listmap.drop () ;
  gCachedResultForOnceFunction_readerMapFor_map.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsReaders (prologueRoutineFor_semanticsReaders,
                                   epilogueRoutineFor_semanticsReaders) ;

//---------------------------------------------------------------------------*

