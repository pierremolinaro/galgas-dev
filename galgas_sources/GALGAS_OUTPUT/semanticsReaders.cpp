//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticsReaders.cpp'                         *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 7th, 2010, at 15h13'7"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsReaders.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsReaders.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of routine "enterInheritedReaderWithoutArgument"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterInheritedReaderWithoutArgument (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inReaderName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterInheritedReaderWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (34)) ;
  var_cas_ioReaderMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReaderName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (36)), GGS_unifiedTypeMapProxyList ::constructor_emptyList (), var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex, GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (40)) COMMA_SOURCE_FILE_AT_LINE (35)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterInheritedReaderWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of routine "enterInheritedReaderWithArgument"        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterInheritedReaderWithArgument (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inReaderName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterInheritedReaderWithArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (55)) ;
  GGS_unifiedTypeMapProxyList  var_cas_argList = GGS_unifiedTypeMapProxyList ::constructor_emptyList () ;
  GGS_unifiedTypeMapProxy  var_cas_t ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument1TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (58)) ;
  var_cas_argList.addAssign_operation (var_cas_t) ;
  var_cas_ioReaderMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReaderName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (61)), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex, GGS_readerQualifier::constructor_isInherited (inLexique COMMA_SOURCE_FILE_AT_LINE (65)) COMMA_SOURCE_FILE_AT_LINE (60)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterInheritedReaderWithArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterBaseReaderWithoutArgument"         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterBaseReaderWithoutArgument (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inReaderName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterBaseReaderWithoutArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (79)) ;
  var_cas_ioReaderMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReaderName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (81)), GGS_unifiedTypeMapProxyList ::constructor_emptyList (), var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex, GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) COMMA_SOURCE_FILE_AT_LINE (80)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterBaseReaderWithoutArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterBaseReaderWithArgument"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterBaseReaderWithArgument (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inReaderName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterBaseReaderWithArgument at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (100)) ;
  GGS_unifiedTypeMapProxyList  var_cas_argList = GGS_unifiedTypeMapProxyList ::constructor_emptyList () ;
  GGS_unifiedTypeMapProxy  var_cas_t ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument1TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (103)) ;
  var_cas_argList.addAssign_operation (var_cas_t) ;
  var_cas_ioReaderMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReaderName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (106)), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex, GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (110)) COMMA_SOURCE_FILE_AT_LINE (105)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterBaseReaderWithArgument\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterBaseReaderWith2Arguments"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterBaseReaderWith2Arguments (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inReaderName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inArgument2TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterBaseReaderWith2Arguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (126)) ;
  GGS_unifiedTypeMapProxyList  var_cas_argList = GGS_unifiedTypeMapProxyList ::constructor_emptyList () ;
  GGS_unifiedTypeMapProxy  var_cas_t ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument1TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (129)) ;
  var_cas_argList.addAssign_operation (var_cas_t) ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument2TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (131)) ;
  var_cas_argList.addAssign_operation (var_cas_t) ;
  var_cas_ioReaderMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReaderName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (134)), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex, GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) COMMA_SOURCE_FILE_AT_LINE (133)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterBaseReaderWith2Arguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enterBaseReaderWith3Arguments"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterBaseReaderWith3Arguments (C_Compiler & inLexique,
                                GGS_readerMap  & var_cas_ioReaderMap,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                const GGS_string  var_cas_inReaderName,
                                const GGS_string  var_cas_inArgument1TypeName,
                                const GGS_string  var_cas_inArgument2TypeName,
                                const GGS_string  var_cas_inArgument3TypeName,
                                const GGS_string  var_cas_inReturnedTypeName,
                                const GGS_bool  var_cas_inHasLexiqueAndLocationArguments
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterBaseReaderWith3Arguments at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_unifiedTypeMapProxy  var_cas_returnedTypeIndex ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inReturnedTypeName, var_cas_returnedTypeIndex COMMA_SOURCE_FILE_AT_LINE (155)) ;
  GGS_unifiedTypeMapProxyList  var_cas_argList = GGS_unifiedTypeMapProxyList ::constructor_emptyList () ;
  GGS_unifiedTypeMapProxy  var_cas_t ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument1TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (158)) ;
  var_cas_argList.addAssign_operation (var_cas_t) ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument2TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (160)) ;
  var_cas_argList.addAssign_operation (var_cas_t) ;
  GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, var_cas_inArgument3TypeName, var_cas_t COMMA_SOURCE_FILE_AT_LINE (162)) ;
  var_cas_argList.addAssign_operation (var_cas_t) ;
  var_cas_ioReaderMap.modifier_insertOrReplace (inLexique, GGS_lstring ::constructor_new (inLexique, var_cas_inReaderName, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (165)), var_cas_argList, var_cas_inHasLexiqueAndLocationArguments, var_cas_returnedTypeIndex, GGS_readerQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (169)) COMMA_SOURCE_FILE_AT_LINE (164)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterBaseReaderWith3Arguments\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "commonReaderMapForAllTypes"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_commonReaderMapForAllTypes (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_commonReaderMapForAllTypes at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outMap = GGS_readerMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (179)) ;
  ::routine_enterInheritedReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("description"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (180)) ;
  ::routine_enterInheritedReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("object"),  GGS_string ("object"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (181)) ;
  ::routine_enterInheritedReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("objectDynamicType"),  GGS_string ("type"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (182)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_commonReaderMapForAllTypes\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@locationPredefinedTypeAST.getReaderMap'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__locationPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_locationPredefinedTypeAST * operand_7568,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_7568 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (200)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("locationString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (201)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("locationIndex"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (202)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("line"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (203)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("column"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (204)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Implementation of routine "enterReaderFor_string_lstring_types"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterReaderFor_string_lstring_types (C_Compiler & inLexique,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_ioMap
                        COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterReaderFor_string_lstring_types at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("doesEnvironmentVariableExist"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (213)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("length"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (214)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("identifierRepresentation"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (215)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("HTMLRepresentation"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (216)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("utf8Representation"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (217)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("utf32Representation"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (218)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByTrimmingWhiteSpaces"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (219)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("md5"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (220)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("decimalUnsignedNumber"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (221)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isDecimalUnsignedNumber"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (222)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("capacity"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (223)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("fileExists"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (224)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("directoryExists"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (225)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("pathExtension"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (226)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("nativePathWithUnixPath"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (227)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("unixPathWithNativePath"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (228)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("lastPathComponent"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (229)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByDeletingPathExtension"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (230)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByCapitalizingFirstCharacter"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (231)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("firstCharacterOrNul"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (232)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByDeletingLastPathComponent"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (233)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByStandardizingPath"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (234)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("lowercaseString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (235)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uppercaseString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (236)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("reversedString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (237)) ;
  ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("system"),  GGS_string ("sint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (238)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("characterAtIndex"),  GGS_string ("uint"),  GGS_string ("char"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (239)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByRemovingCharacterAtIndex"),  GGS_string ("uint"),  GGS_string ("string"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (240)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("rightSubString"),  GGS_string ("uint"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (241)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("leftSubString"),  GGS_string ("uint"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (242)) ;
  ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("subString"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (243)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("absolutePathFromPath"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (244)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("relativePathFromPath"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (245)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("componentsSeparatedByString"),  GGS_string ("string"),  GGS_string ("stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (246)) ;
  ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByLeftPadding"),  GGS_string ("uint"),  GGS_string ("char"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (247)) ;
  ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByRightPadding"),  GGS_string ("uint"),  GGS_string ("char"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (248)) ;
  ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByLeftAndRightPadding"),  GGS_string ("uint"),  GGS_string ("char"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (249)) ;
  ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringByReplacingStringByString"),  GGS_string ("string"),  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (250)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("regularFiles"),  GGS_string ("bool"),  GGS_string ("stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (251)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("hiddenFiles"),  GGS_string ("bool"),  GGS_string ("stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (252)) ;
  ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("directories"),  GGS_string ("bool"),  GGS_string ("stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (253)) ;
  ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("directoriesWithExtensions"),  GGS_string ("bool"),  GGS_string ("stringlist"),  GGS_string ("stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (254)) ;
  ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_ioMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("regularFilesWithExtensions"),  GGS_string ("bool"),  GGS_string ("stringlist"),  GGS_string ("stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (255)) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterReaderFor_string_lstring_types\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@stringPredefinedTypeAST.getReaderMap'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_stringPredefinedTypeAST * operand_12962,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_12962 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (264)) ;
    ::routine_enterReaderFor_string_lstring_types (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (265)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@charPredefinedTypeAST.getReaderMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__charPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_charPredefinedTypeAST * operand_13293,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_13293 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (274)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (275)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("utf32CharConstantRepresentation"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (276)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (277)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isalnum"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (278)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isalpha"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (279)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("iscntrl"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (280)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isdigit"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (281)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("islower"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (282)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isupper"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (283)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isxdigit"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (284)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isUnicodeLetter"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (285)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isUnicodeMark"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (286)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isUnicodeNumber"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (287)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isUnicodeSeparator"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (288)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isUnicodeCommand"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (289)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isUnicodePunctuation"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (290)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isUnicodeSymbol"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (291)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("unicodeName"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (292)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("unicodeToLower"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (293)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("unicodeToUpper"),  GGS_string ("char"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (294)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@boolPredefinedTypeAST.getReaderMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__boolPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_boolPredefinedTypeAST * operand_15444,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_15444 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (303)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("cString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (304)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("ocString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (305)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (306)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint"),  GGS_string ("sint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (307)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64"),  GGS_string ("uint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (308)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint64"),  GGS_string ("sint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (309)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@uintPredefinedTypeAST.getReaderMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__uintPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_uintPredefinedTypeAST * operand_16242,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16242 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (318)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("double"),  GGS_string ("double"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (319)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint"),  GGS_string ("sint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (320)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint64"),  GGS_string ("sint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (321)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64"),  GGS_string ("uint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (322)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("lsbIndex"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (323)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("significantBitCount"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (324)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (325)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("hexString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (326)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("xString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (327)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isUnicodeValueAssigned"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (328)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@sintPredefinedTypeAST.getReaderMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sintPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_sintPredefinedTypeAST * operand_17428,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17428 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (337)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("double"),  GGS_string ("double"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (338)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (339)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint64"),  GGS_string ("sint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (340)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (341)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (342)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@uint64PredefinedTypeAST.getReaderMap'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__uint64PredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_uint64PredefinedTypeAST * operand_18137,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18137 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (351)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("double"),  GGS_string ("double"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (352)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint"),  GGS_string ("sint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (353)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint64"),  GGS_string ("sint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (354)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (355)) ;
    ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uintSlice"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (356)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (357)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("hexString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (358)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("xString"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (359)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@sint64PredefinedTypeAST.getReaderMap'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sint64PredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_sint64PredefinedTypeAST * operand_19130,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19130 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (368)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("double"),  GGS_string ("double"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (369)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (370)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint"),  GGS_string ("sint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (371)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (372)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (373)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@doublePredefinedTypeAST.getReaderMap'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__doublePredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_doublePredefinedTypeAST * operand_19834,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19834 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (382)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("string"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (383)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint"),  GGS_string ("uint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (384)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint"),  GGS_string ("sint"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (385)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (386)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("sint64"),  GGS_string ("sint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (387)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@stringsetPredefinedTypeAST.getReaderMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringsetPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_stringsetPredefinedTypeAST * operand_20540,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20540 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (396)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("hasKey"),  GGS_string ("string"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (397)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("count"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (398)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringList"),  GGS_string ("stringlist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (399)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@binarysetPredefinedTypeAST.getReaderMap'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__binarysetPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_binarysetPredefinedTypeAST * operand_21088,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_21088 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (408)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isFull"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (409)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("isEmpty"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (410)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("significantVariableCount"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (411)) ;
    ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("ITE"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (412)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("forAllOnBitIndex"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (413)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("forAllOnBitIndexAndBeyond"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (414)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("existOnBitIndex"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (415)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("existOnBitIndexAndBeyond"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (416)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("valueCount"),  GGS_string ("uint"),  GGS_string ("uint64"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (417)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("compressedValueCount"),  GGS_string ("uint64"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (418)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("uint64ValueList"),  GGS_string ("uint"),  GGS_string ("uint64list"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (419)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringValueList"),  GGS_string ("uint"),  GGS_string ("stringlist"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (420)) ;
    ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("stringValueListWithNameList"),  GGS_string ("uint"),  GGS_string ("stringlist"),  GGS_string ("stringlist"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (421)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("predicateStringValue"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (422)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("compressedStringValueList"),  GGS_string ("uint"),  GGS_string ("stringlist"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (423)) ;
    ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("swap21"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (424)) ;
    ::routine_enterBaseReaderWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("swap132"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (425)) ;
    ::routine_enterBaseReaderWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("swap213"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (426)) ;
    ::routine_enterBaseReaderWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("swap231"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (427)) ;
    ::routine_enterBaseReaderWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("swap312"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (428)) ;
    ::routine_enterBaseReaderWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("swap321"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (429)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("transitiveClosure"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (430)) ;
    ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("accessibleStates"),  GGS_string ("binaryset"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (431)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("equalTo"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (432)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("notEqualTo"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (433)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("lowerOrEqualTo"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (434)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("greaterOrEqualTo"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (435)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("strictGreaterThan"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (436)) ;
    ::routine_enterBaseReaderWithArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("strictLowerThan"),  GGS_string ("binaryset"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (437)) ;
    ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("binarySetByTranslatingFromIndex"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (438)) ;
    ::routine_enterBaseReaderWith3Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("containsValue"),  GGS_string ("uint64"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (439)) ;
    ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("existsOnBitRange"),  GGS_string ("uint"),  GGS_string ("uint"),  GGS_string ("binaryset"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (440)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@typePredefinedTypeAST.getReaderMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__typePredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_typePredefinedTypeAST * operand_24922,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_24922 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (449)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("name"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (450)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("hasSuperclass"),  GGS_string ("bool"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (451)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("superclass"),  GGS_string ("type"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (452)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@dataPredefinedTypeAST.getReaderMap'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__dataPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_dataPredefinedTypeAST * operand_25459,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25459 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (461)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("length"),  GGS_string ("uint"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (462)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category method '@functionPredefinedTypeAST.getReaderMap'          *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__functionPredefinedTypeAST__getReaderMap (C_Compiler & inLexique,
                                const cPtr_functionPredefinedTypeAST * operand_25814,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_readerMap  & var_cas_outMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_25814 != NULL) {
    ::routine_commonReaderMapForAllTypes (inLexique,  var_cas_ioUnifiedTypeMap,  var_cas_outMap COMMA_SOURCE_FILE_AT_LINE (471)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("name"),  GGS_string ("string"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (472)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("resultType"),  GGS_string ("type"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (473)) ;
    ::routine_enterBaseReaderWithoutArgument (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("formalParameterTypeList"),  GGS_string ("typelist"),  GGS_bool (false) COMMA_SOURCE_FILE_AT_LINE (474)) ;
    ::routine_enterBaseReaderWith2Arguments (inLexique,  var_cas_outMap,  var_cas_ioUnifiedTypeMap,  GGS_string ("invoke"),  GGS_string ("objectlist"),  GGS_string ("location"),  GGS_string ("object"),  GGS_bool (true) COMMA_SOURCE_FILE_AT_LINE (475)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsReaders (void) {
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__locationPredefinedTypeAST__getReaderMap, gClassInfoFor__locationPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__stringPredefinedTypeAST__getReaderMap, gClassInfoFor__stringPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__charPredefinedTypeAST__getReaderMap, gClassInfoFor__charPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__boolPredefinedTypeAST__getReaderMap, gClassInfoFor__boolPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__uintPredefinedTypeAST__getReaderMap, gClassInfoFor__uintPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__sintPredefinedTypeAST__getReaderMap, gClassInfoFor__sintPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__uint64PredefinedTypeAST__getReaderMap, gClassInfoFor__uint64PredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__sint64PredefinedTypeAST__getReaderMap, gClassInfoFor__sint64PredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__doublePredefinedTypeAST__getReaderMap, gClassInfoFor__doublePredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__stringsetPredefinedTypeAST__getReaderMap, gClassInfoFor__stringsetPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__binarysetPredefinedTypeAST__getReaderMap, gClassInfoFor__binarysetPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__typePredefinedTypeAST__getReaderMap, gClassInfoFor__typePredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__dataPredefinedTypeAST__getReaderMap, gClassInfoFor__dataPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getReaderMap ((typeCategoryMethod__predefinedTypeAST__getReaderMap) category_method__functionPredefinedTypeAST__getReaderMap, gClassInfoFor__functionPredefinedTypeAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsReaders (prologueRoutineFor_semanticsReaders, NULL) ;

//---------------------------------------------------------------------------*

