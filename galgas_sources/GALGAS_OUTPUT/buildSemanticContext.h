//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'buildSemanticContext.h'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 12th, 2010, at 16h54'33"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef buildSemanticContext_DEFINED
#define buildSemanticContext_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "semanticsClassMethods.h"
#include "semanticsConstructors.h"
#include "semanticsInstanceMethods.h"
#include "semanticsModifiers.h"
#include "semanticsReaders.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_predefinedTypeAST ;
class cPtr_predefinedTypeAST ;
class GGS_binarysetPredefinedTypeAST ;
class cPtr_binarysetPredefinedTypeAST ;
class GGS_boolPredefinedTypeAST ;
class cPtr_boolPredefinedTypeAST ;
class GGS_uintPredefinedTypeAST ;
class cPtr_uintPredefinedTypeAST ;
class GGS_uint64PredefinedTypeAST ;
class cPtr_uint64PredefinedTypeAST ;
class GGS_sintPredefinedTypeAST ;
class cPtr_sintPredefinedTypeAST ;
class GGS_sint64PredefinedTypeAST ;
class cPtr_sint64PredefinedTypeAST ;
class GGS_charPredefinedTypeAST ;
class cPtr_charPredefinedTypeAST ;
class GGS_doublePredefinedTypeAST ;
class cPtr_doublePredefinedTypeAST ;
class GGS_stringPredefinedTypeAST ;
class cPtr_stringPredefinedTypeAST ;
class GGS_lboolPredefinedTypeAST ;
class cPtr_lboolPredefinedTypeAST ;
class GGS_luintPredefinedTypeAST ;
class cPtr_luintPredefinedTypeAST ;
class GGS_luint64PredefinedTypeAST ;
class cPtr_luint64PredefinedTypeAST ;
class GGS_lsintPredefinedTypeAST ;
class cPtr_lsintPredefinedTypeAST ;
class GGS_lsint64PredefinedTypeAST ;
class cPtr_lsint64PredefinedTypeAST ;
class GGS_lcharPredefinedTypeAST ;
class cPtr_lcharPredefinedTypeAST ;
class GGS_ldoublePredefinedTypeAST ;
class cPtr_ldoublePredefinedTypeAST ;
class GGS_lstringPredefinedTypeAST ;
class cPtr_lstringPredefinedTypeAST ;
class GGS_locationPredefinedTypeAST ;
class cPtr_locationPredefinedTypeAST ;
class GGS_stringsetPredefinedTypeAST ;
class cPtr_stringsetPredefinedTypeAST ;
class GGS_objectPredefinedTypeAST ;
class cPtr_objectPredefinedTypeAST ;
class GGS_functionPredefinedTypeAST ;
class cPtr_functionPredefinedTypeAST ;
class GGS_typePredefinedTypeAST ;
class cPtr_typePredefinedTypeAST ;
class GGS_routineMap ;
class GGS_functionMap ;
class GGS_filewrapperTemplateMap ;
class GGS_filewrapperMap ;
class GGS_descendantClassListMap ;
class GGS_semanticContext ;
class GGS_collectedTypeMap ;
class GGS_partiallyOrderedSemanticDeclarationListAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_predefinedTypeAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_predefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_predefinedTypeAST : public GGS_semanticDeclarationAST {
//--- Default constructor
  public : inline GGS_predefinedTypeAST (void) :
  GGS_semanticDeclarationAST () {}

//--- Pointer assignment constructor
  public : GGS_predefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_predefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_predefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_predefinedTypeAST * getPtr (void) const {
    return (cPtr_predefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_mPredefinedTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_predefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_predefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_predefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_predefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__predefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_binarysetPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_binarysetPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_binarysetPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_binarysetPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_binarysetPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_binarysetPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_binarysetPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_binarysetPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_binarysetPredefinedTypeAST * getPtr (void) const {
    return (cPtr_binarysetPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_binarysetPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_binarysetPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_binarysetPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_binarysetPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__binarysetPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_boolPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_boolPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_boolPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_boolPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_boolPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_boolPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_boolPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_boolPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_boolPredefinedTypeAST * getPtr (void) const {
    return (cPtr_boolPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_boolPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_boolPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_boolPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_boolPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__boolPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_uintPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uintPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_uintPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_uintPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_uintPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uintPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uintPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uintPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uintPredefinedTypeAST * getPtr (void) const {
    return (cPtr_uintPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uintPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uintPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_uintPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uintPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uintPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_uint64PredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_uint64PredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_uint64PredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_uint64PredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint64PredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint64PredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint64PredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64PredefinedTypeAST * getPtr (void) const {
    return (cPtr_uint64PredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64PredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64PredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64PredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint64PredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_sintPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sintPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_sintPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_sintPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_sintPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sintPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sintPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sintPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sintPredefinedTypeAST * getPtr (void) const {
    return (cPtr_sintPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sintPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sintPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_sintPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sintPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sintPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_sint64PredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_sint64PredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_sint64PredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_sint64PredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint64PredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint64PredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint64PredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64PredefinedTypeAST * getPtr (void) const {
    return (cPtr_sint64PredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64PredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64PredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64PredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint64PredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_charPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_charPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_charPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_charPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_charPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_charPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_charPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_charPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_charPredefinedTypeAST * getPtr (void) const {
    return (cPtr_charPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_charPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_charPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_charPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_charPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__charPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_doublePredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_doublePredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_doublePredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_doublePredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_doublePredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_doublePredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_doublePredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_doublePredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_doublePredefinedTypeAST * getPtr (void) const {
    return (cPtr_doublePredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_doublePredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_doublePredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_doublePredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_doublePredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__doublePredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_stringPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_stringPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_stringPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_stringPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_stringPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_stringPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_stringPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_stringPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_stringPredefinedTypeAST * getPtr (void) const {
    return (cPtr_stringPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_stringPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_stringPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_stringPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_stringPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__stringPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_lboolPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lboolPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_lboolPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_lboolPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_lboolPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lboolPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lboolPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lboolPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lboolPredefinedTypeAST * getPtr (void) const {
    return (cPtr_lboolPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lboolPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lboolPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_lboolPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lboolPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lboolPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_luintPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_luintPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_luintPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_luintPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_luintPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_luintPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_luintPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_luintPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_luintPredefinedTypeAST * getPtr (void) const {
    return (cPtr_luintPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_luintPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_luintPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_luintPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_luintPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__luintPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_luint64PredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_luint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_luint64PredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_luint64PredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_luint64PredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_luint64PredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_luint64PredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_luint64PredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_luint64PredefinedTypeAST * getPtr (void) const {
    return (cPtr_luint64PredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_luint64PredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_luint64PredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_luint64PredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_luint64PredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__luint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_lsintPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lsintPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_lsintPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_lsintPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_lsintPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lsintPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lsintPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lsintPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lsintPredefinedTypeAST * getPtr (void) const {
    return (cPtr_lsintPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lsintPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lsintPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_lsintPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lsintPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lsintPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_lsint64PredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lsint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_lsint64PredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_lsint64PredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_lsint64PredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lsint64PredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lsint64PredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lsint64PredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lsint64PredefinedTypeAST * getPtr (void) const {
    return (cPtr_lsint64PredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lsint64PredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lsint64PredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_lsint64PredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lsint64PredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lsint64PredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_lcharPredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lcharPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_lcharPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_lcharPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_lcharPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lcharPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lcharPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lcharPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lcharPredefinedTypeAST * getPtr (void) const {
    return (cPtr_lcharPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lcharPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lcharPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_lcharPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lcharPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lcharPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_ldoublePredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ldoublePredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_ldoublePredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_ldoublePredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_ldoublePredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ldoublePredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ldoublePredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ldoublePredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ldoublePredefinedTypeAST * getPtr (void) const {
    return (cPtr_ldoublePredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ldoublePredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ldoublePredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_ldoublePredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ldoublePredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ldoublePredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_lstringPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lstringPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_lstringPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_lstringPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_lstringPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_lstringPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_lstringPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_lstringPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_lstringPredefinedTypeAST * getPtr (void) const {
    return (cPtr_lstringPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_lstringPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_lstringPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_lstringPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lstringPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__lstringPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_locationPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_locationPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_locationPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_locationPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_locationPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_locationPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_locationPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_locationPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_locationPredefinedTypeAST * getPtr (void) const {
    return (cPtr_locationPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_locationPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_locationPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_locationPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_locationPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__locationPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_stringsetPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_stringsetPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_stringsetPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_stringsetPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_stringsetPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_stringsetPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_stringsetPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_stringsetPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_stringsetPredefinedTypeAST * getPtr (void) const {
    return (cPtr_stringsetPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_stringsetPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_stringsetPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_stringsetPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_stringsetPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__stringsetPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS class 'GGS_objectPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_objectPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_objectPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_objectPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_objectPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_objectPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_objectPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_objectPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_objectPredefinedTypeAST * getPtr (void) const {
    return (cPtr_objectPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_objectPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_objectPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_objectPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_objectPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__objectPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS class 'GGS_functionPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_functionPredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_functionPredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_functionPredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_functionPredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_functionPredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_functionPredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_functionPredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_functionPredefinedTypeAST * getPtr (void) const {
    return (cPtr_functionPredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_functionPredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_functionPredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_functionPredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_functionPredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__functionPredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_typePredefinedTypeAST'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_typePredefinedTypeAST ;

//---------------------------------------------------------------------------*

class GGS_typePredefinedTypeAST : public GGS_predefinedTypeAST {
//--- Default constructor
  public : inline GGS_typePredefinedTypeAST (void) :
  GGS_predefinedTypeAST () {}

//--- Pointer assignment constructor
  public : GGS_typePredefinedTypeAST (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_typePredefinedTypeAST (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_typePredefinedTypeAST
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_typePredefinedTypeAST constructor_new (C_Compiler & inLexique,
                                const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_typePredefinedTypeAST * getPtr (void) const {
    return (cPtr_typePredefinedTypeAST *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_typePredefinedTypeAST * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_typePredefinedTypeAST * operator () (LOCATION_ARGS) const {
      return (cPtr_typePredefinedTypeAST *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_typePredefinedTypeAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__typePredefinedTypeAST ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Routine 'appendPredefinedListTypeAST'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_appendPredefinedListTypeAST (C_Compiler &,
                                GGS_semanticDeclarationListAST  &,
                                const GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'appendPredefinedTypesASTs'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_appendPredefinedTypesASTs (C_Compiler &,
                                GGS_semanticDeclarationListAST  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@routineMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_routineMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_routineMap ;

//---------------------------------------------------------------------------*

class GGS_routineMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_routineMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_routineMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_routineMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_routineMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_routineMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_routineMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_routineMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_formalParameterSignature &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_formalParameterSignature   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_formalParameterSignature & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_formalParameterSignature & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_routineMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_routineMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_routineMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_routineMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_routineMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_formalParameterSignature   & _mRoutineSignature (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@functionMap'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_functionMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_functionMap ;

//---------------------------------------------------------------------------*

class GGS_functionMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_functionMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_functionMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_functionMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_functionMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_functionMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_functionMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_functionMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapIndexList &  inParameter0,
                                const GGS_unifiedTypeMapIndex &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapIndexList   & outParameter0,
                                GGS_unifiedTypeMapIndex   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapIndexList & inParameter0,
                                   const GGS_unifiedTypeMapIndex & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapIndexList & outParameter0,
                                   GGS_unifiedTypeMapIndex & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_functionMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_functionMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_functionMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_functionMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_functionMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapIndexList   & _mFunctionSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_unifiedTypeMapIndex   & _mResultTypeIndex (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map '@filewrapperTemplateMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperTemplateMap ;

//---------------------------------------------------------------------------*

class GGS_filewrapperTemplateMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_filewrapperTemplateMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_filewrapperTemplateMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_filewrapperTemplateMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperTemplateMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_filewrapperTemplateMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_filewrapperTemplateMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_filewrapperTemplateMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_unifiedTypeMapIndexList &  inParameter0,
                                const GGS_lstring &  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_unifiedTypeMapIndexList   & outParameter0,
                                GGS_lstring   & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_unifiedTypeMapIndexList & inParameter0,
                                   const GGS_lstring & inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_unifiedTypeMapIndexList & outParameter0,
                                   GGS_lstring & outParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_filewrapperTemplateMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_filewrapperTemplateMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_filewrapperTemplateMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_filewrapperTemplateMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_filewrapperTemplateMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_unifiedTypeMapIndexList   & _mTemplateSignature (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstring   & _mFilewrapperTemplatePath (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@filewrapperMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_filewrapperMap ;

//---------------------------------------------------------------------------*

class GGS_filewrapperMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_filewrapperMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_filewrapperMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_filewrapperMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_filewrapperMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_filewrapperMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_filewrapperMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_filewrapperMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0,
                                const GGS_lstringlist &  inParameter1,
                                const GGS_filewrapperTemplateMap &  inParameter2 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0,
                                GGS_lstringlist   & outParameter1,
                                GGS_filewrapperTemplateMap   & outParameter2 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   const GGS_lstringlist & inParameter1,
                                   const GGS_filewrapperTemplateMap & inParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                   GGS_lstringlist & outParameter1,
                                   GGS_filewrapperTemplateMap & outParameter2,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_filewrapperMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_filewrapperMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_filewrapperMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_filewrapperMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_filewrapperMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _mFilewrapperPath (LOCATION_ARGS) const ;
    public : /* const */ GGS_lstringlist   & _mFilewrapperExtensionList (LOCATION_ARGS) const ;
    public : /* const */ GGS_filewrapperTemplateMap   & _mFilewrapperTemplateMap (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map list '@descendantClassListMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_descendantClassListMap ;

//---------------------------------------------------------------------------*

class GGS_descendantClassListMap : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_unifiedTypeMapIndexList mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_descendantClassListMap
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_descendantClassListMap inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_descendantClassListMap operator_concat (const GGS_descendantClassListMap & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_unifiedTypeMapIndex & inAttribute0) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_unifiedTypeMapIndexList
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_descendantClassListMap & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_unifiedTypeMapIndexList & _object (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_descendantClassListMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@collectedTypeMap'                           *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_collectedTypeMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_collectedTypeMap ;

//---------------------------------------------------------------------------*

class GGS_collectedTypeMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_collectedTypeMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_collectedTypeMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_collectedTypeMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_collectedTypeMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_lstring & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_collectedTypeMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_collectedTypeMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_collectedTypeMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_collectedTypeMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_collectedTypeMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_collectedTypeMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_collectedTypeMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_collectedTypeMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@semanticDeclarationAST.collectType'            *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__semanticDeclarationAST__collectType)  (C_Compiler & inLexique,
                                const cPtr_semanticDeclarationAST * inObjectPtr,
                                GGS_collectedTypeMap  & var_cas_ioCollectedTypeMap
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__collectType (typeCategoryMethod__semanticDeclarationAST__collectType inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__collectType
findCategoryMethod__semanticDeclarationAST__collectType (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Category method '@semanticDeclarationAST.enterType'             *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__semanticDeclarationAST__enterType)  (C_Compiler & inLexique,
                                const cPtr_semanticDeclarationAST * inObjectPtr,
                                GGS_semanticContext & var_cas_ioSemanticContext
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__enterType (typeCategoryMethod__semanticDeclarationAST__enterType inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__enterType
findCategoryMethod__semanticDeclarationAST__enterType (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        sorted list '@partiallyOrderedSemanticDeclarationListAST'          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_partiallyOrderedSemanticDeclarationListAST ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_partiallyOrderedSemanticDeclarationListAST ;

//---------------------------------------------------------------------------*


class GGS_partiallyOrderedSemanticDeclarationListAST : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_partiallyOrderedSemanticDeclarationListAST cElement ;
//--- Default Constructor
  public : GGS_partiallyOrderedSemanticDeclarationListAST (void) ;
//--- Copy Constructor
  public : GGS_partiallyOrderedSemanticDeclarationListAST (const GGS_partiallyOrderedSemanticDeclarationListAST & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_partiallyOrderedSemanticDeclarationListAST & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_partiallyOrderedSemanticDeclarationListAST & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_partiallyOrderedSemanticDeclarationListAST constructor_emptySortedList (void) ;
  public : static GGS_partiallyOrderedSemanticDeclarationListAST constructor_sortedListWithValue (const GGS_string& argument_0,
                           const GGS_string& argument_1,
                           const GGS_semanticDeclarationAST & argument_2) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_partiallyOrderedSemanticDeclarationListAST * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_Compiler & inLexique,
                              GGS_string& _out_0,
                              GGS_string& _out_1,
                              GGS_semanticDeclarationAST & _out_2
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_Compiler & inLexique,
                             GGS_string& _out_0,
                             GGS_string& _out_1,
                             GGS_semanticDeclarationAST & _out_2
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_Compiler & inLexique,
                                GGS_string& _out_0,
                                GGS_string& _out_1,
                                GGS_semanticDeclarationAST & _out_2
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_Compiler & inLexique,
                                 GGS_string& _out_0,
                                 GGS_string& _out_1,
                                 GGS_semanticDeclarationAST & _out_2
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_partiallyOrderedSemanticDeclarationListAST inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_semanticDeclarationAST & argument_2) ;
//--- Handling '.' GALGAS operator
  public : GGS_partiallyOrderedSemanticDeclarationListAST operator_concat (const GGS_partiallyOrderedSemanticDeclarationListAST & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_semanticDeclarationAST & argument_2) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_partiallyOrderedSemanticDeclarationListAST castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_partiallyOrderedSemanticDeclarationListAST & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string & _mDependanceString (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _mTypeString (LOCATION_ARGS) const ;
    public : /* const */ GGS_semanticDeclarationAST  & _mSemanticDeclaration (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@semanticDeclarationAST.enterOrderedDeclaration'      *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__semanticDeclarationAST__enterOrderedDeclaration)  (C_Compiler & inLexique,
                                const cPtr_semanticDeclarationAST * inObjectPtr,
                                GGS_partiallyOrderedSemanticDeclarationListAST  & var_cas_ioPartiallyOrderedDeclarationList
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__enterOrderedDeclaration (typeCategoryMethod__semanticDeclarationAST__enterOrderedDeclaration inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__enterOrderedDeclaration
findCategoryMethod__semanticDeclarationAST__enterOrderedDeclaration (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'buildSemanticContext'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildSemanticContext (C_Compiler &,
                                const GGS_semanticDeclarationListAST  ,
                                const GGS_location  ,
                                GGS_semanticContext & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_predefinedTypeAST'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_predefinedTypeAST : public cPtr_semanticDeclarationAST {
  private : typedef cPtr_semanticDeclarationAST inherited ;
//--- Constructor
  public : cPtr_predefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_string mPredefinedTypeName ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_binarysetPredefinedTypeAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_binarysetPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_binarysetPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_boolPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_boolPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_boolPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_uintPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uintPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_uintPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_uint64PredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint64PredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_uint64PredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_sintPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sintPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_sintPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_sint64PredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint64PredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_sint64PredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_charPredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_charPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_charPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_doublePredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_doublePredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_doublePredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_stringPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_stringPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_stringPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_lboolPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lboolPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_lboolPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_luintPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_luintPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_luintPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_luint64PredefinedTypeAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_luint64PredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_luint64PredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_lsintPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lsintPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_lsintPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_lsint64PredefinedTypeAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lsint64PredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_lsint64PredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_lcharPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lcharPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_lcharPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_ldoublePredefinedTypeAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ldoublePredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_ldoublePredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_lstringPredefinedTypeAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_lstringPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_lstringPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_locationPredefinedTypeAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_locationPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_locationPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_stringsetPredefinedTypeAST'              *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_stringsetPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_stringsetPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              abstract class 'cPtr_objectPredefinedTypeAST'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_objectPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_objectPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//             abstract class 'cPtr_functionPredefinedTypeAST'               *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_functionPredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_functionPredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_typePredefinedTypeAST'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_typePredefinedTypeAST : public cPtr_predefinedTypeAST {
  private : typedef cPtr_predefinedTypeAST inherited ;
//--- Constructor
  public : cPtr_typePredefinedTypeAST (const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@routineMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_routineMap {
  public : GGS_formalParameterSignature  mRoutineSignature ;

  public : e_routineMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_routineMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_routineMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_routineMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_routineMap * nextObject (void) const { return (elementOf_GGS_routineMap *) mNextItem ; }
  public : inline elementOf_GGS_routineMap * infObject (void) const { return (elementOf_GGS_routineMap *) mInfPtr ; }
  public : inline elementOf_GGS_routineMap * supObject (void) const { return (elementOf_GGS_routineMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_routineMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@functionMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_functionMap {
  public : GGS_unifiedTypeMapIndexList  mFunctionSignature ;
  public : GGS_unifiedTypeMapIndex  mResultTypeIndex ;

  public : e_functionMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_functionMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_functionMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_functionMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_functionMap * nextObject (void) const { return (elementOf_GGS_functionMap *) mNextItem ; }
  public : inline elementOf_GGS_functionMap * infObject (void) const { return (elementOf_GGS_functionMap *) mInfPtr ; }
  public : inline elementOf_GGS_functionMap * supObject (void) const { return (elementOf_GGS_functionMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_functionMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of map '@filewrapperTemplateMap'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class e_filewrapperTemplateMap {
  public : GGS_unifiedTypeMapIndexList  mTemplateSignature ;
  public : GGS_lstring  mFilewrapperTemplatePath ;

  public : e_filewrapperTemplateMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperTemplateMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_filewrapperTemplateMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_filewrapperTemplateMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_filewrapperTemplateMap * nextObject (void) const { return (elementOf_GGS_filewrapperTemplateMap *) mNextItem ; }
  public : inline elementOf_GGS_filewrapperTemplateMap * infObject (void) const { return (elementOf_GGS_filewrapperTemplateMap *) mInfPtr ; }
  public : inline elementOf_GGS_filewrapperTemplateMap * supObject (void) const { return (elementOf_GGS_filewrapperTemplateMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_filewrapperTemplateMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@filewrapperMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_filewrapperMap {
  public : GGS_lstring  mFilewrapperPath ;
  public : GGS_lstringlist  mFilewrapperExtensionList ;
  public : GGS_filewrapperTemplateMap  mFilewrapperTemplateMap ;

  public : e_filewrapperMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_filewrapperMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_filewrapperMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_filewrapperMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_filewrapperMap * nextObject (void) const { return (elementOf_GGS_filewrapperMap *) mNextItem ; }
  public : inline elementOf_GGS_filewrapperMap * infObject (void) const { return (elementOf_GGS_filewrapperMap *) mInfPtr ; }
  public : inline elementOf_GGS_filewrapperMap * supObject (void) const { return (elementOf_GGS_filewrapperMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_filewrapperMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Declarations for 'semanticContext' struct                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_semanticContext ;

//---------------------------------------------------------------------------*

class GGS_semanticContext : public GGS__root {
//--- Default constructor
  public : GGS_semanticContext (void) ;

//--- Virtual destructor
  public : virtual ~GGS_semanticContext (void) ;

//--- Handle 'drop' instruction
  public : void drop (void) ;

//--- Method 'isBuilt'
  public : bool isBuilt (void) const ;

//--- Support for method call handling in GALGAS
  public : inline const GGS_semanticContext * operator () (UNUSED_LOCATION_ARGS) const { return this ; }
  public : inline GGS_semanticContext * operator () (UNUSED_LOCATION_ARGS) { return this ; }

//--- Comparison
  public : GGS_bool operator_isEqual (const GGS_semanticContext & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_semanticContext & inOperand) const ;

//--- Reader 'description'
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_semanticContext castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Galgas 'new' destructor
  public : static GGS_semanticContext constructor_new (const GGS_unifiedTypeMap & argument_0,
                 const GGS_routineMap & argument_1,
                 const GGS_functionMap & argument_2,
                 const GGS_descendantClassListMap& argument_3,
                 const GGS_filewrapperMap & argument_4) ;

//--- Readers
  public : inline GGS_unifiedTypeMap 
  reader_mTypeMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mTypeMap ;
  }

  public : inline GGS_routineMap 
  reader_mRoutineMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mRoutineMap ;
  }

  public : inline GGS_functionMap 
  reader_mFunctionMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mFunctionMap ;
  }

  public : inline GGS_descendantClassListMap
  reader_mDescendantClassListMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mDescendantClassListMap ;
  }

  public : inline GGS_filewrapperMap 
  reader_mFilewrapperMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
    return mFilewrapperMap ;
  }

//--- Attributes
  public : GGS_unifiedTypeMap  mTypeMap ;
  public : GGS_routineMap  mRoutineMap ;
  public : GGS_functionMap  mFunctionMap ;
  public : GGS_descendantClassListMap mDescendantClassListMap ;
  public : GGS_filewrapperMap  mFilewrapperMap ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of map '@collectedTypeMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_collectedTypeMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_collectedTypeMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_collectedTypeMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_collectedTypeMap & inInfo) ;
//--- Get pointers
  public : inline elementOf_GGS_collectedTypeMap * nextObject (void) const { return (elementOf_GGS_collectedTypeMap *) mNextItem ; }
  public : inline elementOf_GGS_collectedTypeMap * infObject (void) const { return (elementOf_GGS_collectedTypeMap *) mInfPtr ; }
  public : inline elementOf_GGS_collectedTypeMap * supObject (void) const { return (elementOf_GGS_collectedTypeMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_collectedTypeMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Element of sorted list '@partiallyOrderedSemanticDeclarationListAST'    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_partiallyOrderedSemanticDeclarationListAST : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_string mDependanceString ;
  public : GGS_string mTypeString ;
  public : GGS_semanticDeclarationAST  mSemanticDeclaration ;
//--- Constructor
  public : elementOf_GGS_partiallyOrderedSemanticDeclarationListAST (const GGS_string& ,
                                const GGS_string& ,
                                const GGS_semanticDeclarationAST & ) ;

//--- Access to next
  public : inline elementOf_GGS_partiallyOrderedSemanticDeclarationListAST * nextObject (void) const { return (elementOf_GGS_partiallyOrderedSemanticDeclarationListAST *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_partiallyOrderedSemanticDeclarationListAST * previousObject (void) const { return (elementOf_GGS_partiallyOrderedSemanticDeclarationListAST *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_partiallyOrderedSemanticDeclarationListAST ;
} ;

//---------------------------------------------------------------------------*

#endif
