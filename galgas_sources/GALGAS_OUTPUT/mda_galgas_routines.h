//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'mda_galgas_routines.h'                        *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       june 18th, 2008, at 17h7'2"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef mda_galgas_routines_DEFINED
#define mda_galgas_routines_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/C_GGS_Object.h"
#include "galgas/GGS_location.h"
#include "galgas/GGS_lbool.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_lstring.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_stringset.h"
#include "galgas/GGS_binaryset.h"
#include "galgas/GGS_filewrapper.h"
#include "galgas/predefined_types.h"
#include "galgas/AC_galgas_class.h"
#include "galgas/AC_galgas_domain.h"
#include "galgas/AC_galgas_mapindex.h"
#include "galgas/AC_galgas_map.h"
#include "galgas/AC_galgas_list.h"
#include "galgas/AC_galgas_sortedlist.h"

//---------------------------------------------------------------------------*

#include "galgas/C_Lexique.h"

// Include imported semantics
#include "grammarMetamodel.h"
#include "instructionMetamodel.h"
#include "lexiqueSemantics.h"
#include "optionMetamodel.h"
#include "optionSemantics.h"
#include "programMetamodel.h"
#include "semanticsCompilation.h"
#include "semanticsMetamodel.h"
#include "semanticsSemantics.h"
#include "semantics_semantics.h"
#include "syntaxMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'getOutputDirectory'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_getOutputDirectory (C_Compiler &,
                                const GGS_lstring  ,
                                GGS_string & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'compileSyntaxComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileSyntaxComponent (C_Compiler &,
                                const GGS_lstring  ,
                                const GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'compileGrammarComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileGrammarComponent (C_Compiler &,
                                const GGS_lstring  ,
                                const GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'compileProgramComponent'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_compileProgramComponent (C_Compiler &,
                                const GGS_lstring  ,
                                const GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'performProjectGlobalCheckings'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_performProjectGlobalCheckings (C_Compiler &,
                                const GGS_parsedComponentStruct  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

#endif
