//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'expressionModelBuilder.cpp'                      *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                     august 30th, 2007, at 14h27'55"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "expressionModelBuilder.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "expressionModelBuilder.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'expression'               *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_expression_expressionModelBuilder_54_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  var_cas_expression = nt_concatenation_term_ (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_expressionModelBuilder_0 (_inLexique)) {
        case 2 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_concatenation_term_ (_inLexique) ;
          var_cas_expression = GGS_concatExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'concatenation_term'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_concatenation_term_expressionModelBuilder_73_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  var_cas_expression = nt_relation_term_ (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_expressionModelBuilder_1 (_inLexique)) {
        case 2 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7C) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_relation_term_ (_inLexique) ;
          var_cas_expression = GGS_orExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 3 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5E) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_relation_term_ (_inLexique) ;
          var_cas_expression = GGS_xorExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'relation_term'              *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_relation_term_expressionModelBuilder_99_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  var_cas_expression = nt_relation_factor_ (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_expressionModelBuilder_2 (_inLexique)) {
        case 2 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__26) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_relation_factor_ (_inLexique) ;
          var_cas_expression = GGS_andExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'relation_factor'             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_relation_factor_expressionModelBuilder_118_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  var_cas_expression = nt_simple_expression_ (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_expressionModelBuilder_3 (_inLexique)) {
        case 2 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_simple_expression_ (_inLexique) ;
          var_cas_expression = GGS_equalExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 3 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21_3D) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_simple_expression_ (_inLexique) ;
          var_cas_expression = GGS_notEqualExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 4 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C_3D) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_simple_expression_ (_inLexique) ;
          var_cas_expression = GGS_lowerOrEqualExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 5 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_simple_expression_ (_inLexique) ;
          var_cas_expression = GGS_greaterOrEqualExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 6 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_simple_expression_ (_inLexique) ;
          var_cas_expression = GGS_strictGreaterExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 7 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_simple_expression_ (_inLexique) ;
          var_cas_expression = GGS_strictLowerExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'simple_expression'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_simple_expression_expressionModelBuilder_172_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  var_cas_expression = nt_term_ (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_expressionModelBuilder_4 (_inLexique)) {
        case 2 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3C_3C) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_term_ (_inLexique) ;
          var_cas_expression = GGS_leftShiftExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 3 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3E) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_term_ (_inLexique) ;
          var_cas_expression = GGS_rightShiftExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 4 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2B) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_term_ (_inLexique) ;
          var_cas_expression = GGS_addExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 5 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_term_ (_inLexique) ;
          var_cas_expression = GGS_subExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Implementation of production rule 'term'                  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_term_expressionModelBuilder_212_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  var_cas_expression = nt_factor_ (_inLexique) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_expressionModelBuilder_5 (_inLexique)) {
        case 2 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2A) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_factor_ (_inLexique) ;
          var_cas_expression = GGS_multiplicationExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 3 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2F) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_factor_ (_inLexique) ;
          var_cas_expression = GGS_divisionExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        case 4 : {
          GGS_location  var_cas_operatorLocation ;
          var_cas_operatorLocation = GGS_location (_inLexique) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_mod) COMMA_HERE) ;
          GGS_semanticExpression  var_cas_leftOperand ;
          var_cas_leftOperand = var_cas_expression ;
          GGS_semanticExpression  var_cas_rightOperand ;
          var_cas_rightOperand = nt_factor_ (_inLexique) ;
          var_cas_expression = GGS_moduloExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_leftOperand, var_cas_rightOperand COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_245_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_location  var_cas_operatorLocation ;
  var_cas_operatorLocation = GGS_location (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2D) COMMA_HERE) ;
  var_cas_expression = nt_factor_ (_inLexique) ;
  var_cas_expression = GGS_unaryMinusExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_expression COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_258_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_lstring  var_cas_identifier ;
  _inLexique._assignFromAttribute_tokenString (var_cas_identifier) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
  var_cas_expression = GGS_varInExpression::constructor_new (_inLexique, var_cas_identifier COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_270_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_self) COMMA_HERE) ;
  var_cas_expression = GGS_selfInExpression::constructor_new (_inLexique COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_283_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__28) COMMA_HERE) ;
  switch (select_expressionModelBuilder_6 (_inLexique)) {
    case 1 : {
      var_cas_expression = nt_expression_ (_inLexique) ;
      } break ;
    case 2 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_cast) COMMA_HERE) ;
      GGS_semanticExpression  var_cas_receiverExpression ;
      var_cas_receiverExpression = nt_expression_ (_inLexique) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_if) COMMA_HERE) ;
      GGS_bool var_cas_useKindOfClass ;
      switch (select_expressionModelBuilder_7 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3E_3D) COMMA_HERE) ;
          var_cas_useKindOfClass = GGS_bool (true, true) ;
          } break ;
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__3D_3D) COMMA_HERE) ;
          var_cas_useKindOfClass = GGS_bool (true, false) ;
          } break ;
        default :
          break ;
      }
      GGS_lstring  var_cas_typeName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_typeName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_else) COMMA_HERE) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_error) COMMA_HERE) ;
      GGS_semanticExpression  var_cas_errorLocationExpression ;
      var_cas_errorLocationExpression = nt_expression_ (_inLexique) ;
      var_cas_expression = GGS_castInExpression::constructor_new (_inLexique, var_cas_receiverExpression, var_cas_useKindOfClass, var_cas_typeName, var_cas_errorLocationExpression COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__29) COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_322_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_location  var_cas_operatorLocation ;
  var_cas_operatorLocation = GGS_location (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_not) COMMA_HERE) ;
  var_cas_expression = nt_factor_ (_inLexique) ;
  var_cas_expression = GGS_notExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_expression COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_335_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_location  var_cas_operatorLocation ;
  var_cas_operatorLocation = GGS_location (_inLexique) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__7E) COMMA_HERE) ;
  var_cas_expression = nt_factor_ (_inLexique) ;
  var_cas_expression = GGS_negateExpression::constructor_new (_inLexique, var_cas_operatorLocation, var_cas_expression COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_348_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_true) COMMA_HERE) ;
  var_cas_expression = GGS_trueExpression::constructor_new (_inLexique COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_359_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_false) COMMA_HERE) ;
  var_cas_expression = GGS_falseExpression::constructor_new (_inLexique COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_370_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_stringlist  var_cas_literalStringList ;
  var_cas_literalStringList = GGS_stringlist::constructor_emptyList (_inLexique COMMA_HERE) ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
        GGS_lstring  var_cas_literalString ;
        _inLexique._assignFromAttribute_tokenString (var_cas_literalString) ;
        _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fstring) COMMA_HERE) ;
        var_cas_literalStringList._addAssign_operation (var_cas_literalString.reader_string (_inLexique COMMA_SOURCE_FILE_AT_LINE (375))) ;
      switch (select_repeat_expressionModelBuilder_8 (_inLexique)) {
        case 2 : {
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_expression = GGS_literalStringExpression::constructor_new (_inLexique, var_cas_literalStringList COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_387_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_luint  var_cas_literalInt ;
  _inLexique._assignFromAttribute_uint32value (var_cas_literalInt) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger) COMMA_HERE) ;
  var_cas_expression = GGS_literalUIntExpression::constructor_new (_inLexique, var_cas_literalInt COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_399_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_lsint  var_cas_literalInt ;
  _inLexique._assignFromAttribute_sint32value (var_cas_literalInt) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_signed_5Fliteral_5Finteger) COMMA_HERE) ;
  var_cas_expression = GGS_literalSIntExpression::constructor_new (_inLexique, var_cas_literalInt COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_411_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_luint64  var_cas_literalInt ;
  _inLexique._assignFromAttribute_uint64value (var_cas_literalInt) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_unsigned_5Fliteral_5Finteger64) COMMA_HERE) ;
  var_cas_expression = GGS_literalUInt64Expression::constructor_new (_inLexique, var_cas_literalInt COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_423_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_lsint64  var_cas_literalInt ;
  _inLexique._assignFromAttribute_sint64value (var_cas_literalInt) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_signed_5Fliteral_5Finteger64) COMMA_HERE) ;
  var_cas_expression = GGS_literalSInt64Expression::constructor_new (_inLexique, var_cas_literalInt COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_435_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_lchar  var_cas_literalChar ;
  _inLexique._assignFromAttribute_charValue (var_cas_literalChar) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fchar) COMMA_HERE) ;
  var_cas_expression = GGS_literalCharExpression::constructor_new (_inLexique, var_cas_literalChar COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_447_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  GGS_ldouble  var_cas_literalDouble ;
  _inLexique._assignFromAttribute_floatValue (var_cas_literalDouble) ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_literal_5Fdouble) COMMA_HERE) ;
  var_cas_expression = GGS_literalDoubleExpression::constructor_new (_inLexique, var_cas_literalDouble COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_459_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_here) COMMA_HERE) ;
  var_cas_expression = GGS_hereExpression::constructor_new (_inLexique COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'factor'                 *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_semanticExpression expressionModelBuilder::
expressionModelBuilder::
pr_factor_expressionModelBuilder_474_6_ (galgas_scanner & _inLexique) {
  GGS_semanticExpression  var_cas_expression ;
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5B) COMMA_HERE) ;
  switch (select_expressionModelBuilder_9 (_inLexique)) {
    case 1 : {
      GGS_semanticExpression  var_cas_receiverExpression ;
      var_cas_receiverExpression = nt_expression_ (_inLexique) ;
      switch (select_expressionModelBuilder_10 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_description) COMMA_HERE) ;
          var_cas_expression = GGS_descriptionInExpression::constructor_new (_inLexique, var_cas_receiverExpression, GGS_location (_inLexique) COMMA_HERE) ;
          } break ;
        case 2 : {
          GGS_lstring  var_cas_readerName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_readerName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          GGS_outExpressionList  var_cas_expressionList ;
          var_cas_expressionList = nt_output_expression_list_ (_inLexique) ;
          var_cas_expression = GGS_readerCallExpression::constructor_new (_inLexique, var_cas_receiverExpression, var_cas_readerName, var_cas_expressionList COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      GGS_lstring  var_cas_className ;
      _inLexique._assignFromAttribute_tokenString (var_cas_className) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_type_5Fname) COMMA_HERE) ;
      GGS_lstring  var_cas_constructorName ;
      _inLexique._assignFromAttribute_tokenString (var_cas_constructorName) ;
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
      GGS_outExpressionList  var_cas_expressionList ;
      var_cas_expressionList = nt_output_expression_list_ (_inLexique) ;
      var_cas_expression = GGS_constructorExpression::constructor_new (_inLexique, var_cas_className, var_cas_constructorName, var_cas_expressionList COMMA_HERE) ;
      } break ;
    case 3 : {
      _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_option) COMMA_HERE) ;
      switch (select_expressionModelBuilder_11 (_inLexique)) {
        case 1 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
          GGS_lstring  var_cas_optionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_optionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_expression = GGS_optionExpression::constructor_new (_inLexique, GGS_lstring::constructor_new (_inLexique, GGS_string (true, "generic_galgas_cli_options"), GGS_location (_inLexique) COMMA_HERE), var_cas_optionName COMMA_HERE) ;
          } break ;
        case 2 : {
          GGS_lstring  var_cas_optionComponentName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_optionComponentName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__2E) COMMA_HERE) ;
          GGS_lstring  var_cas_optionName ;
          _inLexique._assignFromAttribute_tokenString (var_cas_optionName) ;
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1_identifier) COMMA_HERE) ;
          var_cas_expression = GGS_optionExpression::constructor_new (_inLexique, var_cas_optionComponentName, var_cas_optionName COMMA_HERE) ;
          } break ;
        default :
          break ;
      }
      } break ;
    default :
      break ;
  }
  _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__5D) COMMA_HERE) ;
  return var_cas_expression ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'output_expression_list'         *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_outExpressionList expressionModelBuilder::
expressionModelBuilder::
pr_output_expression_list_expressionModelBuilder_532_6_ (galgas_scanner & _inLexique) {
  GGS__list_semanticExpression  var_cas_mExpression ;
  var_cas_mExpression = GGS__list_semanticExpression::constructor_emptyList (_inLexique COMMA_HERE) ;
  GGS_location  var_cas_mEndOfExpressionLocation ;
  { bool syntaxRepeat = true ;
    while (syntaxRepeat) {
      switch (select_repeat_expressionModelBuilder_12 (_inLexique)) {
        case 2 : {
          _inLexique.acceptTerminal (ACCEPT_TERMINAL (galgas_scanner::galgas_scanner_1__21) COMMA_HERE) ;
          var_cas_mExpression._addAssign_operation (nt_expression_ (_inLexique)) ;
          } break ;
        default :
          syntaxRepeat = false ;
          break ;
      }
    }
  }
  var_cas_mEndOfExpressionLocation = GGS_location (_inLexique) ;
  GGS_outExpressionList _entityInstance = GGS_outExpressionList::constructor_new (_inLexique, var_cas_mExpression, var_cas_mEndOfExpressionLocation COMMA_HERE) ;
  return _entityInstance ;
}

//---------------------------------------------------------------------------*

