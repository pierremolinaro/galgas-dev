//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'semanticsTypeFeatures.cpp'                      *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     october 27th, 2010, at 10h20'40"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "semanticsTypeFeatures.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticsTypeFeatures.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@stringsetPredefinedTypeAST.getEnumerationList'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringsetPredefinedTypeAST__getEnumerationList (C_Compiler & inLexique,
                                const cPtr_stringsetPredefinedTypeAST * operand_1998,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_enumerationDescriptorList  & var_cas_outEnumerationList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_1998 != NULL) {
    GGS_unifiedTypeMapProxy  var_cas_stringTypeIndex ;
    GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, GGS_string ("string"), var_cas_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (35)) ;
    var_cas_outEnumerationList = GGS_enumerationDescriptorList ::constructor_emptyList () ;
    var_cas_outEnumerationList.addAssign_operation (var_cas_stringTypeIndex, GGS_string ("key")) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@dataPredefinedTypeAST.getEnumerationList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__dataPredefinedTypeAST__getEnumerationList (C_Compiler & inLexique,
                                const cPtr_dataPredefinedTypeAST * operand_2483,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_enumerationDescriptorList  & var_cas_outEnumerationList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_2483 != NULL) {
    GGS_unifiedTypeMapProxy  var_cas_uintTypeIndex ;
    GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, GGS_string ("uint"), var_cas_uintTypeIndex COMMA_SOURCE_FILE_AT_LINE (47)) ;
    var_cas_outEnumerationList = GGS_enumerationDescriptorList ::constructor_emptyList () ;
    var_cas_outEnumerationList.addAssign_operation (var_cas_uintTypeIndex, GGS_string ("data")) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@stringsetPredefinedTypeAST.getModifierMap'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringsetPredefinedTypeAST__getModifierMap (C_Compiler & inLexique,
                                const cPtr_stringsetPredefinedTypeAST * operand_3274,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_modifierMap  & var_cas_outModifierMap
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_3274 != NULL) {
    GGS_unifiedTypeMapProxy  var_cas_stringType ;
    GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, GGS_string ("string"), var_cas_stringType COMMA_SOURCE_FILE_AT_LINE (63)) ;
    var_cas_outModifierMap = GGS_modifierMap ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (64)) ;
    var_cas_outModifierMap.modifier_insertKey (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string ("removeKey"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (66)), GGS_formalParameterSignature ::constructor_listWithValue (var_cas_stringType, GGS_formalArgumentPassingModeAST::constructor_argumentIn (inLexique COMMA_SOURCE_FILE_AT_LINE (67))), GGS_bool (false), GGS_methodQualifier::constructor_isBasic (inLexique COMMA_SOURCE_FILE_AT_LINE (69)) COMMA_SOURCE_FILE_AT_LINE (65)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@objectPredefinedTypeAST.getSupportedOperatorFlags'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__objectPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_objectPredefinedTypeAST * operand_4227
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_4227 != NULL) {
    var_cas_outFlags = function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (82)) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@stringPredefinedTypeAST.getSupportedOperatorFlags'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__stringPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_stringPredefinedTypeAST * operand_4466
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_4466 != NULL) {
    var_cas_outFlags = ((((((function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (90))).operator_or (function_dotAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (90)))).operator_or (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (90)))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (91)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (92)))).operator_or (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (92)))).operator_or (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (93))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@charPredefinedTypeAST.getSupportedOperatorFlags'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__charPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_charPredefinedTypeAST * operand_4906
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_4906 != NULL) {
    var_cas_outFlags = ((((function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (101))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (101)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (102)))).operator_or (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (102)))).operator_or (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (103))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@boolPredefinedTypeAST.getSupportedOperatorFlags'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__boolPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_boolPredefinedTypeAST * operand_5291
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_5291 != NULL) {
    var_cas_outFlags = ((((((((function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (111))).operator_or (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (111)))).operator_or (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (111)))).operator_or (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (111)))).operator_or (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (112)))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (112)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (113)))).operator_or (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (113)))).operator_or (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (114))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@uintPredefinedTypeAST.getSupportedOperatorFlags'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__uintPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_uintPredefinedTypeAST * operand_5772
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_5772 != NULL) {
    var_cas_outFlags = ((((((((((((((((function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (122))).operator_or (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (122)))).operator_or (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (122)))).operator_or (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (122)))).operator_or (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (123)))).operator_or (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (123)))).operator_or (function_unaryPlusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (123)))).operator_or (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (124)))).operator_or (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (124)))).operator_or (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (124)))).operator_or (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (124)))).operator_or (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (125)))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (125)))).operator_or (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (125)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (126)))).operator_or (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (126)))).operator_or (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (127))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@sintPredefinedTypeAST.getSupportedOperatorFlags'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__sintPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_sintPredefinedTypeAST * operand_6446
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_6446 != NULL) {
    var_cas_outFlags = (((((((((((((((((function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (135))).operator_or (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_or (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_or (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (135)))).operator_or (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (136)))).operator_or (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (136)))).operator_or (function_unaryPlusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (136)))).operator_or (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (136)))).operator_or (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (137)))).operator_or (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (137)))).operator_or (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (137)))).operator_or (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (137)))).operator_or (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (138)))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (138)))).operator_or (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (138)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (139)))).operator_or (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (139)))).operator_or (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (140))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@uint64PredefinedTypeAST.getSupportedOperatorFlags'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__uint64PredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_uint64PredefinedTypeAST * operand_7147
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_7147 != NULL) {
    var_cas_outFlags = ((((((((((((((((function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (148))).operator_or (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (148)))).operator_or (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (148)))).operator_or (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (148)))).operator_or (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (149)))).operator_or (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (149)))).operator_or (function_unaryPlusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (149)))).operator_or (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (150)))).operator_or (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (150)))).operator_or (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (150)))).operator_or (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (150)))).operator_or (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (151)))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (151)))).operator_or (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (151)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (152)))).operator_or (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (152)))).operator_or (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (153))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@sint64PredefinedTypeAST.getSupportedOperatorFlags'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__sint64PredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_sint64PredefinedTypeAST * operand_7823
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_7823 != NULL) {
    var_cas_outFlags = (((((((((((((((((function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (161))).operator_or (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (161)))).operator_or (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (161)))).operator_or (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (161)))).operator_or (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (162)))).operator_or (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (162)))).operator_or (function_unaryPlusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (162)))).operator_or (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (162)))).operator_or (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (163)))).operator_or (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (163)))).operator_or (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (163)))).operator_or (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (163)))).operator_or (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (164)))).operator_or (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (164)))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (164)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (165)))).operator_or (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (165)))).operator_or (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (166))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category reader '@doublePredefinedTypeAST.getSupportedOperatorFlags'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__doublePredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_doublePredefinedTypeAST * operand_8525
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_8525 != NULL) {
    var_cas_outFlags = ((((((((((function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (174))).operator_or (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (174)))).operator_or (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (174)))).operator_or (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (174)))).operator_or (function_unaryPlusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (175)))).operator_or (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (175)))).operator_or (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (176)))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (176)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (177)))).operator_or (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (177)))).operator_or (function_generateConstructorWithSelfObject (inLexique COMMA_SOURCE_FILE_AT_LINE (178))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@stringsetPredefinedTypeAST.getSupportedOperatorFlags'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__stringsetPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_stringsetPredefinedTypeAST * operand_9063
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_9063 != NULL) {
    var_cas_outFlags = ((((((((function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (186))).operator_or (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (187)))).operator_or (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (187)))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (188)))).operator_or (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (189)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (190)))).operator_or (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (191)))).operator_or (function_isComparable (inLexique COMMA_SOURCE_FILE_AT_LINE (191)))).operator_or (function_generateCopyConstructorAndAssignmentOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (192))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@binarysetPredefinedTypeAST.getSupportedOperatorFlags'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__binarysetPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_binarysetPredefinedTypeAST * operand_9588
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_9588 != NULL) {
    var_cas_outFlags = (((((((function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (200))).operator_or (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (200)))).operator_or (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (200)))).operator_or (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (201)))).operator_or (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (202)))).operator_or (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (202)))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (203)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (204))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@typePredefinedTypeAST.getSupportedOperatorFlags'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__typePredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_typePredefinedTypeAST * operand_10043
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_10043 != NULL) {
    var_cas_outFlags = ((function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (212))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (212)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (213))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@dataPredefinedTypeAST.getSupportedOperatorFlags'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__dataPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_dataPredefinedTypeAST * operand_10369
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_10369 != NULL) {
    var_cas_outFlags = (((function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (221))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (222)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (223)))).operator_or (function_generateEnumerationHelperMethods (inLexique COMMA_SOURCE_FILE_AT_LINE (224))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@functionPredefinedTypeAST.getSupportedOperatorFlags'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__functionPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_functionPredefinedTypeAST * operand_10745
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_10745 != NULL) {
    var_cas_outFlags = ((function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (232))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (232)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (233))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@locationPredefinedTypeAST.getSupportedOperatorFlags'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__locationPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_locationPredefinedTypeAST * operand_11075
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_11075 != NULL) {
    var_cas_outFlags = ((function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (241))).operator_or (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (241)))).operator_or (function_generateCppConstructorWithNativeAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (242))) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@filewrapperPredefinedTypeAST.getSupportedOperatorFlags'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_uint 
category_reader__filewrapperPredefinedTypeAST__getSupportedOperatorFlags (C_Compiler & inLexique,
                                const cPtr_filewrapperPredefinedTypeAST * operand_11408
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_uint  var_cas_outFlags ;
  if (operand_11408 != NULL) {
    var_cas_outFlags = function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (250)) ;
  }
  return var_cas_outFlags ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@stringsetPredefinedTypeAST.getAddAssignArgumentList'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__stringsetPredefinedTypeAST__getAddAssignArgumentList (C_Compiler & inLexique,
                                const cPtr_stringsetPredefinedTypeAST * operand_11649,
                                GGS_unifiedTypeMap  & var_cas_ioUnifiedTypeMap,
                                GGS_unifiedTypeMapProxyList  & var_cas_outAddAssignArgumentList
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_11649 != NULL) {
    GGS_unifiedTypeMapProxy  var_cas_stringTypeIndex ;
    GGS_unifiedTypeMapProxy::class_method_makeRegularProxy (inLexique, var_cas_ioUnifiedTypeMap, GGS_string ("string"), var_cas_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (260)) ;
    var_cas_outAddAssignArgumentList = GGS_unifiedTypeMapProxyList ::constructor_listWithValue (var_cas_stringTypeIndex) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_semanticsTypeFeatures (void) {
  enterCategoryMethod__predefinedTypeAST__getEnumerationList ((typeCategoryMethod__predefinedTypeAST__getEnumerationList) category_method__stringsetPredefinedTypeAST__getEnumerationList, gClassInfoFor__stringsetPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getEnumerationList ((typeCategoryMethod__predefinedTypeAST__getEnumerationList) category_method__dataPredefinedTypeAST__getEnumerationList, gClassInfoFor__dataPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getModifierMap ((typeCategoryMethod__predefinedTypeAST__getModifierMap) category_method__stringsetPredefinedTypeAST__getModifierMap, gClassInfoFor__stringsetPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__objectPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__objectPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__stringPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__stringPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__charPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__charPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__boolPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__boolPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__uintPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__uintPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__sintPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__sintPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__uint64PredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__uint64PredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__sint64PredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__sint64PredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__doublePredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__doublePredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__stringsetPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__stringsetPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__binarysetPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__binarysetPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__typePredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__typePredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__dataPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__dataPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__functionPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__functionPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__locationPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__locationPredefinedTypeAST.slotID ()) ;
  enterCategoryReader__predefinedTypeAST__getSupportedOperatorFlags ((typeCategoryReader__predefinedTypeAST__getSupportedOperatorFlags) category_reader__filewrapperPredefinedTypeAST__getSupportedOperatorFlags, gClassInfoFor__filewrapperPredefinedTypeAST.slotID ()) ;
  enterCategoryMethod__predefinedTypeAST__getAddAssignArgumentList ((typeCategoryMethod__predefinedTypeAST__getAddAssignArgumentList) category_method__stringsetPredefinedTypeAST__getAddAssignArgumentList, gClassInfoFor__stringsetPredefinedTypeAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_semanticsTypeFeatures (prologueRoutineFor_semanticsTypeFeatures, NULL) ;

//---------------------------------------------------------------------------*

