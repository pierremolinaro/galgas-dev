//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'projectGlobalCheckings.h'                       *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    september 22th, 2010, at 21h11'58"                     *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef projectGlobalCheckings_DEFINED
#define projectGlobalCheckings_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "grammarMetamodel.h"
#include "lexiqueSemantics.h"
#include "optionSemantics.h"
#include "optionTypesForAST.h"
#include "predefinedTypes.h"
#include "programMetamodel.h"
#include "projectMetamodel.h"
#include "semanticsCompilation.h"
#include "semanticsTypesForAST.h"
#include "semantics_semantics.h"
#include "syntaxMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_genericMultiMethodListMap ;
class GGS_descendantClassListMap ;
class GGS_multiMethodMap ;
class GGS_multiReaderMap ;
class GGS_targetFileListMap ;
class GGS_sourceFileMap ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Map list '@genericMultiMethodListMap'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_genericMultiMethodListMap ;

//---------------------------------------------------------------------------*

class GGS_genericMultiMethodListMap : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_lstringlist mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_genericMultiMethodListMap
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_genericMultiMethodListMap inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_genericMultiMethodListMap operator_concat (const GGS_genericMultiMethodListMap & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_lstring & inAttribute0) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_lstringlist
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_genericMultiMethodListMap & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_lstringlist & _mList (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_genericMultiMethodListMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Category method '@semanticDeclarationAST.buildMultiMethodListMaps'     *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__semanticDeclarationAST__buildMultiMethodListMaps)  (C_Compiler & inLexique,
                                const cPtr_semanticDeclarationAST * inObjectPtr,
                                GGS_genericMultiMethodListMap & var_cas_ioAbstractMultiMethodListMapAST,
                                GGS_genericMultiMethodListMap & var_cas_ioMultiMethodListMap,
                                GGS_genericMultiMethodListMap & var_cas_ioOverridingMultiMethodListMap,
                                GGS_genericMultiMethodListMap & var_cas_ioAbstractMultiReaderListMap,
                                GGS_genericMultiMethodListMap & var_cas_ioMultiReaderListMap,
                                GGS_genericMultiMethodListMap & var_cas_ioOverridingMultiReaderListMap
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__semanticDeclarationAST__buildMultiMethodListMaps (typeCategoryMethod__semanticDeclarationAST__buildMultiMethodListMaps inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__semanticDeclarationAST__buildMultiMethodListMaps
findCategoryMethod__semanticDeclarationAST__buildMultiMethodListMaps (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Map list '@descendantClassListMap'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_descendantClassListMap ;

//---------------------------------------------------------------------------*

class GGS_descendantClassListMap : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_unifiedTypeMapProxyList mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_descendantClassListMap
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_descendantClassListMap inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_descendantClassListMap operator_concat (const GGS_descendantClassListMap & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_unifiedTypeMapProxy & inAttribute0) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_unifiedTypeMapProxyList
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_descendantClassListMap & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_unifiedTypeMapProxyList & _mList (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_descendantClassListMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@multiMethodMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_multiMethodMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_multiMethodMap ;

//---------------------------------------------------------------------------*

class GGS_multiMethodMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_multiMethodMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_multiMethodMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_multiMethodMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_multiMethodMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_multiMethodMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_multiMethodMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_multiMethodMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_multiMethodMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_multiMethodMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_multiMethodMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_multiMethodMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_multiMethodMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_multiMethodMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@multiReaderMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_multiReaderMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_multiReaderMap ;

//---------------------------------------------------------------------------*

class GGS_multiReaderMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_multiReaderMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_multiReaderMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_multiReaderMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_multiReaderMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_multiReaderMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_multiReaderMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_multiReaderMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_multiReaderMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey

                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey COMMA_LOCATION_ARGS) ;

//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_multiReaderMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_multiReaderMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_multiReaderMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_multiReaderMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_multiReaderMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'outputDirectory'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_outputDirectory ;

//---------------------------------------------------------------------------*

GGS_string function_outputDirectory (C_Compiler &,
                                const GGS_lstring   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'checkMultiMethodDefinitionForClass'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkMultiMethodDefinitionForClass (C_Compiler &,
                                const GGS_string ,
                                const GGS_string ,
                                const GGS_lstring  ,
                                const GGS_descendantClassListMap ,
                                const GGS_genericMultiMethodListMap ,
                                const GGS_unifiedTypeMap   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Routine 'checkMultiReaderDefinitionForClass'                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkMultiReaderDefinitionForClass (C_Compiler &,
                                const GGS_string ,
                                const GGS_string ,
                                const GGS_lstring  ,
                                const GGS_descendantClassListMap ,
                                const GGS_genericMultiMethodListMap ,
                                const GGS_unifiedTypeMap   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Routine 'performProjectGlobalCheckings'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_performProjectGlobalCheckings (C_Compiler &,
                                const GGS_parsedComponentStruct ,
                                const GGS_location   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Map list '@targetFileListMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_targetFileListMap ;

//---------------------------------------------------------------------------*

class GGS_targetFileListMap : public AC_GGS_listmap {
//--- Node class
  public : class cElement : public cPtrListMapObject {
 //--- List attribute
    public : GGS_stringlist mListObject ;
 //--- Constructor
    public : cElement (LOCATION_ARGS) ;
 //--- Description
    public : virtual C_String performDescription (const PMSInt32 inIndentation) const ;
    public : virtual cPtrObject * cloneObject (LOCATION_ARGS) ;
    public : virtual bool isEqual (const cPtrListMapObject * inOperand) const ;
  } ;

//--- 'emptyMap' constructor
  public : static GGS_targetFileListMap
  constructor_emptyMap (void) ;

//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_targetFileListMap inOperand) ; //Don't pass 'inOperand' by reference !

//--- Handling '.' GALGAS operator
  public : GGS_targetFileListMap operator_concat (const GGS_targetFileListMap & inOperand) const ;

//--- Handle '+=' operator
  public : void
  addAssign_operation (const GGS_string & inKey,
                        const GGS_string& inAttribute0) ;

//--- For 'description' reader
  protected : virtual const char * _typeNameForDescriptionReader (void) const ;

//--- Reader 'allKeys'
  public : GGS_stringset
  reader_allKeys (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'keyList'
  public : GGS_stringlist
  reader_keyList (C_Compiler & inLexique
                  COMMA_LOCATION_ARGS) const ;

//--- Reader 'listForKey'
  public : GGS_stringlist
  reader_listForKey (C_Compiler & inLexique,
                     const GGS_string & inKey
                     COMMA_LOCATION_ARGS) const ;

//--- Enumerator
  public : class cEnumerator : public cAbstractDictionaryEnumerator {
  //--- Contructor
    public : cEnumerator (const GGS_targetFileListMap & inListMap,
                          const bool inAscending) ;
  //--- Associated object accessor
    public : const GGS_stringlist & _mList (LOCATION_ARGS) const ;
  } ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_targetFileListMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@sourceFileMap'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_sourceFileMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sourceFileMap ;

//---------------------------------------------------------------------------*

class GGS_sourceFileMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_sourceFileMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_sourceFileMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_sourceFileMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sourceFileMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_sourceFileMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_sourceFileMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_sourceFileMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_sourceFileMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_string& inValue0,
                                             const GGS_sourceFileKind& inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_insertKey [] ;

//--- 'insertKey' Insert Modifier
  public : void modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_string&  inParameter0,
                                const GGS_sourceFileKind&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_searchKey [] ;

//--- 'searchKey' Search Method
  public : void method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_string  & outParameter0,
                                GGS_sourceFileKind  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_string& inParameter0,
                                   const GGS_sourceFileKind& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_string& outParameter0,
                                   GGS_sourceFileKind& outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_sourceFileMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_sourceFileMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_sourceFileMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_sourceFileMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_sourceFileMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _mFullPath (LOCATION_ARGS) const ;
    public : /* const */ GGS_sourceFileKind  & _mSourceKind (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@multiMethodMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_multiMethodMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_multiMethodMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_multiMethodMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_multiMethodMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_multiMethodMap * nextObject (void) const { return (elementOf_GGS_multiMethodMap *) mNextItem ; }
  public : inline elementOf_GGS_multiMethodMap * infObject (void) const { return (elementOf_GGS_multiMethodMap *) mInfPtr ; }
  public : inline elementOf_GGS_multiMethodMap * supObject (void) const { return (elementOf_GGS_multiMethodMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_multiMethodMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@multiReaderMap'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_multiReaderMap {

} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_multiReaderMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_multiReaderMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_multiReaderMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_multiReaderMap * nextObject (void) const { return (elementOf_GGS_multiReaderMap *) mNextItem ; }
  public : inline elementOf_GGS_multiReaderMap * infObject (void) const { return (elementOf_GGS_multiReaderMap *) mInfPtr ; }
  public : inline elementOf_GGS_multiReaderMap * supObject (void) const { return (elementOf_GGS_multiReaderMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_multiReaderMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@sourceFileMap'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_sourceFileMap {
  public : GGS_string mFullPath ;
  public : GGS_sourceFileKind mSourceKind ;

  public : e_sourceFileMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_sourceFileMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_sourceFileMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_sourceFileMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_sourceFileMap * nextObject (void) const { return (elementOf_GGS_sourceFileMap *) mNextItem ; }
  public : inline elementOf_GGS_sourceFileMap * infObject (void) const { return (elementOf_GGS_sourceFileMap *) mInfPtr ; }
  public : inline elementOf_GGS_sourceFileMap * supObject (void) const { return (elementOf_GGS_sourceFileMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_sourceFileMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Declarations for 'fileListTemplateFileWrapper' wrapper           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const cDirectoryWrapper gWrapperDirectory_0_fileListTemplateFileWrapper ;

//---------------------------------------------------------------------------*
//                                                                           *
// 'fileListTemplate' template of 'fileListTemplateFileWrapper' filewrapper  *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_fileListTemplateFileWrapper_fileListTemplate (C_Compiler & inLexique,
                                const GGS_string& var_cas_HAND_CODED_SOURCES_SUB_DIRS,
                                const GGS_string& var_cas_GALGAS_SOURCE_LIST,
                                const GGS_string& var_cas_HAND_CODED_SOURCE_LIST) ;

//---------------------------------------------------------------------------*

#endif
