//---------------------------------------------------------------------------*
//                                                                           *
//                   File 'parameterArgumentMetamodel.h'                     *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                       june 24th, 2007, at 17h7'10"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef parameterArgumentMetamodel_METAMODEL_DEFINED
#define parameterArgumentMetamodel_METAMODEL_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/predefined_types.h"
#include "commonSemantics.h"
#include "expressionMetamodel.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*

sint32 _metamodel_index_for_parameterArgumentMetamodel (void) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_formalParameters ;
class GGS_formalParameters ;
class cPtr_formalParameters ;
class GGS__list_formalParameter ;
class GGS_formalParameter ;
class cPtr_formalParameter ;
class GGS__list_actualParameter ;
class GGS_actualParameter ;
class cPtr_actualParameter ;
class GGS__list_outputActualParameter ;
class GGS_outputActualParameter ;
class cPtr_outputActualParameter ;
class GGS__list_outputInputActualParameter ;
class GGS_outputInputActualParameter ;
class cPtr_outputInputActualParameter ;
class GGS__list_inputActualParameter ;
class GGS_inputActualParameter ;
class cPtr_inputActualParameter ;
class GGS__list_inputJokerActualParameter ;
class GGS_inputJokerActualParameter ;
class cPtr_inputJokerActualParameter ;
class GGS__list_actualParameters ;
class GGS_actualParameters ;
class cPtr_actualParameters ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@formalParameters'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_formalParameters : public EX_AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_formalParameters constructor_new (C_Compiler & inLexique,
                                const GGS__list_formalParameter & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_formalParameters * getPtr (void) const {
    return (cPtr_formalParameters *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS__list_formalParameter  reader_mFormalParameterList (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_formalParameters * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_formalParameters * operator () (void) const {
      return (cPtr_formalParameters *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@formalParameters'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_formalParameters : public AC_galgas_list {
  public : typedef cPtr_formalParameters element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_formalParameters constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_formalParameters constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS__list_formalParameter & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS__list_formalParameters * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_formalParameters & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_formalParameters & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_formalParameters & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_formalParameters & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_formalParameters & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_formalParameters _operator_concat (const GGS__list_formalParameters & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS__list_formalParameter & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS__list_formalParameter & argument_0) ;

  protected : void _internalPrependValues (const GGS__list_formalParameter & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_formalParameters & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@formalParameter'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_formalParameter : public EX_AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_formalParameter constructor_new (C_Compiler & inLexique,
                                const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_formalParameter * getPtr (void) const {
    return (cPtr_formalParameter *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_formalArgumentPassingMode reader_mFormalParameterPassingMode (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mFormalParameterTypeName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_mFormalParameterName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_mIsUnused (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_formalParameter * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_formalParameter * operator () (void) const {
      return (cPtr_formalParameter *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@formalParameter'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_formalParameter : public AC_galgas_list {
  public : typedef cPtr_formalParameter element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_formalParameter constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_formalParameter constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS__list_formalParameter * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_formalParameter & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_formalParameter & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_formalParameter & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_formalParameter & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_formalParameter & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_formalParameter _operator_concat (const GGS__list_formalParameter & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3) ;

  protected : void _internalPrependValues (const GGS_formalArgumentPassingMode& argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_bool& argument_3) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_formalParameter & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS entity '@actualParameter'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_actualParameter : public EX_AC_galgas_entity {
//--- getPtr
  public : inline cPtr_actualParameter * getPtr (void) const {
    return (cPtr_actualParameter *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_actualParameter * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_actualParameter * operator () (void) const {
      return (cPtr_actualParameter *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS list of entity '@actualParameter'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_actualParameter : public AC_galgas_list {
  public : typedef cPtr_actualParameter element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_actualParameter constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_actualParameter constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS__list_actualParameter * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_actualParameter & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_actualParameter & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_actualParameter & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_actualParameter & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_actualParameter & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_actualParameter _operator_concat (const GGS__list_actualParameter & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_actualParameter & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@outputActualParameter'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_outputActualParameter : public GGS_actualParameter {
//--- 'new' constructor
  public : static GGS_outputActualParameter constructor_new (C_Compiler & inLexique,
                                const GGS_semanticExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_semanticExpression  reader_mOutputActualParameterExpression (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_outputActualParameter * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_outputActualParameter * operator () (void) const {
      return (cPtr_outputActualParameter *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@outputActualParameter'               *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_outputActualParameter : public AC_galgas_list {
  public : typedef cPtr_outputActualParameter element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_outputActualParameter constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_outputActualParameter constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS__list_outputActualParameter * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_outputActualParameter & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_outputActualParameter & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_outputActualParameter & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_outputActualParameter & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_outputActualParameter & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_outputActualParameter _operator_concat (const GGS__list_outputActualParameter & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_semanticExpression & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_semanticExpression & argument_0) ;

  protected : void _internalPrependValues (const GGS_semanticExpression & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_outputActualParameter & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               GALGAS entity '@outputInputActualParameter'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_outputInputActualParameter : public GGS_actualParameter {
//--- 'new' constructor
  public : static GGS_outputInputActualParameter constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mOutputInputActualParameterName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_outputInputActualParameter * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_outputInputActualParameter * operator () (void) const {
      return (cPtr_outputInputActualParameter *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS list of entity '@outputInputActualParameter'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_outputInputActualParameter : public AC_galgas_list {
  public : typedef cPtr_outputInputActualParameter element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_outputInputActualParameter constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_outputInputActualParameter constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS__list_outputInputActualParameter * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_outputInputActualParameter & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_outputInputActualParameter & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_outputInputActualParameter & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_outputInputActualParameter & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_outputInputActualParameter & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_outputInputActualParameter _operator_concat (const GGS__list_outputInputActualParameter & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_outputInputActualParameter & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS entity '@inputActualParameter'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_inputActualParameter : public GGS_actualParameter {
//--- 'new' constructor
  public : static GGS_inputActualParameter constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_mInputActualParameterName (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_inputActualParameter * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_inputActualParameter * operator () (void) const {
      return (cPtr_inputActualParameter *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS list of entity '@inputActualParameter'                *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_inputActualParameter : public AC_galgas_list {
  public : typedef cPtr_inputActualParameter element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_inputActualParameter constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_inputActualParameter constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS__list_inputActualParameter * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_inputActualParameter & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_inputActualParameter & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_inputActualParameter & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_inputActualParameter & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_inputActualParameter & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_inputActualParameter _operator_concat (const GGS__list_inputActualParameter & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS_lstring & argument_0) ;

  protected : void _internalPrependValues (const GGS_lstring & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_inputActualParameter & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS entity '@inputJokerActualParameter'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_inputJokerActualParameter : public GGS_actualParameter {
//--- 'new' constructor
  public : static GGS_inputJokerActualParameter constructor_new (C_Compiler & inLexique
                                COMMA_LOCATION_ARGS) ;
//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_inputJokerActualParameter * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_inputJokerActualParameter * operator () (void) const {
      return (cPtr_inputJokerActualParameter *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS list of entity '@inputJokerActualParameter'             *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_inputJokerActualParameter : public AC_galgas_list {
  public : typedef cPtr_inputJokerActualParameter element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_inputJokerActualParameter constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_inputJokerActualParameter constructor_listWithValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS__list_inputJokerActualParameter * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_inputJokerActualParameter & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_inputJokerActualParameter & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_inputJokerActualParameter & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_inputJokerActualParameter & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_inputJokerActualParameter & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_inputJokerActualParameter _operator_concat (const GGS__list_inputJokerActualParameter & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues () ;

  protected : void _internalPrependValues () ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_inputJokerActualParameter & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS entity '@actualParameters'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_actualParameters : public EX_AC_galgas_entity {
//--- 'new' constructor
  public : static GGS_actualParameters constructor_new (C_Compiler & inLexique,
                                const GGS__list_actualParameter & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- getPtr
  public : inline cPtr_actualParameters * getPtr (void) const {
    return (cPtr_actualParameters *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS__list_actualParameter  reader_mActualParameter (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_actualParameters * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_actualParameters * operator () (void) const {
      return (cPtr_actualParameters *) mPointer ;
    }
  #endif

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                GALGAS list of entity '@actualParameters'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS__list_actualParameters : public AC_galgas_list {
  public : typedef cPtr_actualParameters element_type ;
//--- Constructor 'emptyList'
  public : static GGS__list_actualParameters constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;
  public : static GGS__list_actualParameters constructor_listWithValue (C_Compiler & _inLexique,
                                const GGS__list_actualParameter & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Get first object
  public : inline element_type * firstObject (void) const {
    return (element_type *) internalFirstObject () ;
  }
//--- Get last object
  public : inline element_type * lastObject (void) const {
    return (element_type *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : inline const GGS__list_actualParameters * operator () (UNUSED_LOCATION_ARGS) const { return this ;}

//--- Method 'first'
/*  public : void method_first (C_Compiler & _inLexique,
                              GGS_actualParameters & outElement
                              COMMA_LOCATION_ARGS) const ; */
//--- Method 'last'
/*  public : void method_last (C_Compiler & _inLexique,
                             GGS_actualParameters & outElement
                             COMMA_LOCATION_ARGS) const ; */
//--- Modifier 'popLast'
/*  public : void modifier_popLast (C_Compiler & _inLexique,
                                  GGS_actualParameters & outElement
                                  COMMA_LOCATION_ARGS) ; */
//--- Modifier 'popFirst'
/*  public : void modifier_popFirst (C_Compiler & _inLexique,
                                   GGS_actualParameters & outElement
                                   COMMA_LOCATION_ARGS) ; */
//--- Handling '+=' GALGAS operator
  public : void _addAssign_operation (const GGS_actualParameters & inElement) ;
//--- Handling '.' GALGAS operator
  public : GGS__list_actualParameters _operator_concat (const GGS__list_actualParameters & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & _inLexique,
                                const GGS__list_actualParameter & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void _internalAppendValues (const GGS__list_actualParameter & argument_0) ;

  protected : void _internalPrependValues (const GGS__list_actualParameter & argument_0) ;

//--- List Insulation
  protected : void _insulateList (void) ;

//--- Reader 'description
  public : GGS_string
  reader_description (C_Compiler & _inLexique
                      COMMA_LOCATION_ARGS,
                      const sint32 inIndentation = 0) const ;

//--- Metamodel Add method
  public : void _addModel (const GGS_actualParameters & inOperand) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@formalParameters'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_formalParameters : public EX_C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS__list_formalParameter  mFormalParameterList ;
//--- Constructor
  public : cPtr_formalParameters (const GGS__list_formalParameter & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_formalParameters * nextObject (void) const {
    return (cPtr_formalParameters *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_formalParameters * previousObject (void) const {
    return (cPtr_formalParameters *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_formalParameters * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_formalParameters ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@formalParameter'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_formalParameter : public EX_C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS_formalArgumentPassingMode mFormalParameterPassingMode ;
  public : GGS_lstring  mFormalParameterTypeName ;
  public : GGS_lstring  mFormalParameterName ;
  public : GGS_bool mIsUnused ;
//--- Constructor
  public : cPtr_formalParameter (const GGS_formalArgumentPassingMode& ,
                                const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_formalParameter * nextObject (void) const {
    return (cPtr_formalParameter *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_formalParameter * previousObject (void) const {
    return (cPtr_formalParameter *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_formalParameter * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_formalParameter ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Element of list '@actualParameter'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_actualParameter : public EX_C_GGS_MetamodelEntity {
//--- Attributes
//--- Constructor
  public : cPtr_actualParameter (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_actualParameter * nextObject (void) const {
    return (cPtr_actualParameter *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_actualParameter * previousObject (void) const {
    return (cPtr_actualParameter *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_actualParameter * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_actualParameter ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@outputActualParameter'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_outputActualParameter : public cPtr_actualParameter {
//--- Attributes
  public : GGS_semanticExpression  mOutputActualParameterExpression ;
//--- Constructor
  public : cPtr_outputActualParameter (const GGS_semanticExpression & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_outputActualParameter * nextObject (void) const {
    return (cPtr_outputActualParameter *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_outputActualParameter * previousObject (void) const {
    return (cPtr_outputActualParameter *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_outputActualParameter * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_outputActualParameter ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@outputInputActualParameter'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_outputInputActualParameter : public cPtr_actualParameter {
//--- Attributes
  public : GGS_lstring  mOutputInputActualParameterName ;
//--- Constructor
  public : cPtr_outputInputActualParameter (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_outputInputActualParameter * nextObject (void) const {
    return (cPtr_outputInputActualParameter *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_outputInputActualParameter * previousObject (void) const {
    return (cPtr_outputInputActualParameter *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_outputInputActualParameter * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_outputInputActualParameter ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 Element of list '@inputActualParameter'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_inputActualParameter : public cPtr_actualParameter {
//--- Attributes
  public : GGS_lstring  mInputActualParameterName ;
//--- Constructor
  public : cPtr_inputActualParameter (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_inputActualParameter * nextObject (void) const {
    return (cPtr_inputActualParameter *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_inputActualParameter * previousObject (void) const {
    return (cPtr_inputActualParameter *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_inputActualParameter * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_inputActualParameter ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@inputJokerActualParameter'                *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_inputJokerActualParameter : public cPtr_actualParameter {
//--- Attributes
//--- Constructor
  public : cPtr_inputJokerActualParameter (LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_inputJokerActualParameter * nextObject (void) const {
    return (cPtr_inputJokerActualParameter *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_inputJokerActualParameter * previousObject (void) const {
    return (cPtr_inputJokerActualParameter *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_inputJokerActualParameter * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_inputJokerActualParameter ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of list '@actualParameters'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_actualParameters : public EX_C_GGS_MetamodelEntity {
//--- Attributes
  public : GGS__list_actualParameter  mActualParameter ;
//--- Constructor
  public : cPtr_actualParameters (const GGS__list_actualParameter & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline cPtr_actualParameters * nextObject (void) const {
    return (cPtr_actualParameters *) internalNextItem () ;
  }

//--- Access to previous
  public : inline cPtr_actualParameters * previousObject (void) const {
    return (cPtr_actualParameters *) internalPreviousItem () ;
  }

//--- Element comparison
  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_Compiler & _inLexique,
                        C_String & ioString,
                        const sint32 inIndentation
                        COMMA_LOCATION_ARGS) const ;

//--- Metamodel Component Index
  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;

//--- Metamodel Component Name
  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;

//--- Metamodel Class ID
  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;

//--- Metamodel Class Name
  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;

//--- 'clone' virtual method
  public : virtual cPtr_actualParameters * _cloneObject (void) const ;

//--- Friend class declarations
  friend class GGS__list_actualParameters ;
} ;

//---------------------------------------------------------------------------*

#endif
