//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'generatePredefinedTypes.cpp'                     *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 10th, 2010, at 23h34'13"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "generatePredefinedTypes.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "generatePredefinedTypes.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@builtinTypeAttributeList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_builtinTypeAttributeList::
elementOf_GGS_builtinTypeAttributeList (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4
                                COMMA_LOCATION_ARGS) :
AC_GGS_list::cListElement (THERE),
mCppClassName (argument_0),
mIsPointer (argument_1),
mAttributeName (argument_2),
mUseReferenceForConstructor (argument_3),
mGetterName (argument_4) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_builtinTypeAttributeList::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_builtinTypeAttributeList * ptr = dynamic_cast <const elementOf_GGS_builtinTypeAttributeList *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mCppClassName.operator_isEqual (ptr->mCppClassName).boolValue ()
         && mIsPointer.operator_isEqual (ptr->mIsPointer).boolValue ()
         && mAttributeName.operator_isEqual (ptr->mAttributeName).boolValue ()
         && mUseReferenceForConstructor.operator_isEqual (ptr->mUseReferenceForConstructor).boolValue ()
         && mGetterName.operator_isEqual (ptr->mGetterName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_builtinTypeAttributeList::
appendForDescription (C_String & ioString,
                      const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mCppClassName.reader_description (inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mIsPointer.reader_description (inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mAttributeName.reader_description (inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mUseReferenceForConstructor.reader_description (inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mGetterName.reader_description (inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     List '@builtinTypeAttributeList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX kTypeDescriptor_GGS_builtinTypeAttributeList ("builtinTypeAttributeList", false, NULL) ;

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
internalAppendValues (const GGS_string& argument_0,
                    const GGS_bool& argument_1,
                    const GGS_string& argument_2,
                    const GGS_bool& argument_3,
                    const GGS_string& argument_4
                    COMMA_LOCATION_ARGS) {
  cElement * newElement = (cElement *) NULL ;
  macroMyNew (newElement, cElement (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4
                                COMMA_THERE)) ;
  internalAppendItem (newElement) ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
internalPrependValues (const GGS_string& argument_0,
                    const GGS_bool& argument_1,
                    const GGS_string& argument_2,
                    const GGS_bool& argument_3,
                    const GGS_string& argument_4
                    COMMA_LOCATION_ARGS) {
  cElement * newElement = (cElement *) NULL ;
  macroMyNew (newElement, cElement (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4
                                COMMA_THERE)) ;
  internalPrependItem (newElement) ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
addAssign_operation (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4) {
  if (isBuilt ()&& argument_0.isBuilt ()&& argument_1.isBuilt ()&& argument_2.isBuilt ()&& argument_3.isBuilt ()&& argument_4.isBuilt ()) {
    insulateList () ;
    internalAppendValues (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList GGS_builtinTypeAttributeList::
operator_concat (const GGS_builtinTypeAttributeList & inOperand) const {
  GGS_builtinTypeAttributeList result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
dotAssign_operation (const GGS_builtinTypeAttributeList inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        insulateList () ;
        elementOf_GGS_builtinTypeAttributeList * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_string p_0 = p->mCppClassName ;
          GGS_bool p_1 = p->mIsPointer ;
          GGS_string p_2 = p->mAttributeName ;
          GGS_bool p_3 = p->mUseReferenceForConstructor ;
          GGS_string p_4 = p->mGetterName ;
          internalAppendValues (p_0, p_1, p_2, p_3, p_4 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_string& argument_0,
                     const GGS_bool& argument_1,
                     const GGS_string& argument_2,
                     const GGS_bool& argument_3,
                     const GGS_string& argument_4
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    insulateList () ;
    internalPrependValues (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
insulateList (void) {
  if (isShared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      internalAppendValues (ptr->mCppClassName,
                                ptr->mIsPointer,
                                ptr->mAttributeName,
                                ptr->mUseReferenceForConstructor,
                                ptr->mGetterName
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList  GGS_builtinTypeAttributeList::
constructor_emptyList (void) {
  GGS_builtinTypeAttributeList result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList  GGS_builtinTypeAttributeList::
constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_bool& argument_1,
                                const GGS_string& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_string& argument_4) {
  GGS_builtinTypeAttributeList result ;
  result.alloc () ;
  result.addAssign_operation (argument_0, argument_1, argument_2, argument_3, argument_4) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
internalSubListWithRange (GGS_builtinTypeAttributeList & ioList,
                          const PMSInt32 inFirstIndex,
                          const PMSInt32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (PMSInt32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (PMSInt32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList.addAssign_operation (ptr->mCppClassName, ptr->mIsPointer, ptr->mAttributeName, ptr->mUseReferenceForConstructor, ptr->mGetterName) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList GGS_builtinTypeAttributeList::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_builtinTypeAttributeList result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const PMSInt32 firstIndex = (PMSInt32) inFirstIndex.uintValue () ;
    const PMSInt32 rangeCount = (PMSInt32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList GGS_builtinTypeAttributeList::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_builtinTypeAttributeList result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const PMSInt32 startIndex = (PMSInt32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_builtinTypeAttributeList::
reader_description (const PMSInt32 inIndentation) const {
  return performDescription ("@builtinTypeAttributeList", inIndentation) ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
method_first (C_Compiler & inLexique,
              GGS_string& _out_0,
              GGS_bool& _out_1,
              GGS_string& _out_2,
              GGS_bool& _out_3,
              GGS_string& _out_4
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mCppClassName ;
    _out_1 = ptr->mIsPointer ;
    _out_2 = ptr->mAttributeName ;
    _out_3 = ptr->mUseReferenceForConstructor ;
    _out_4 = ptr->mGetterName ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
method_last (C_Compiler & inLexique,
             GGS_string& _out_0,
             GGS_bool& _out_1,
             GGS_string& _out_2,
             GGS_bool& _out_3,
             GGS_string& _out_4
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mCppClassName ;
    _out_1 = ptr->mIsPointer ;
    _out_2 = ptr->mAttributeName ;
    _out_3 = ptr->mUseReferenceForConstructor ;
    _out_4 = ptr->mGetterName ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_string& _out_0,
                 GGS_bool& _out_1,
                 GGS_string& _out_2,
                 GGS_bool& _out_3,
                 GGS_string& _out_4
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mCppClassName ;
    _out_1 = ptr->mIsPointer ;
    _out_2 = ptr->mAttributeName ;
    _out_3 = ptr->mUseReferenceForConstructor ;
    _out_4 = ptr->mGetterName ;
    insulateList () ;
    internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_popLast (C_Compiler & inLexique,
                GGS_string& _out_0,
                GGS_bool& _out_1,
                GGS_string& _out_2,
                GGS_bool& _out_3,
                GGS_string& _out_4
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mCppClassName ;
    _out_1 = ptr->mIsPointer ;
    _out_2 = ptr->mAttributeName ;
    _out_3 = ptr->mUseReferenceForConstructor ;
    _out_4 = ptr->mGetterName ;
    insulateList () ;
    internalRemoveLast () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_string GGS_builtinTypeAttributeList::
reader_mCppClassNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mCppClassName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_builtinTypeAttributeList::
reader_mIsPointerAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_bool result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mIsPointer ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_builtinTypeAttributeList::
reader_mAttributeNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mAttributeName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_builtinTypeAttributeList::
reader_mUseReferenceForConstructorAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_bool result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mUseReferenceForConstructor ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_builtinTypeAttributeList::
reader_mGetterNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mGetterName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMCppClassNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mCppClassName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMIsPointerAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mIsPointer = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMAttributeNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mAttributeName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMUseReferenceForConstructorAtIndex (C_Compiler & inLexique,
                              const GGS_bool & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mUseReferenceForConstructor = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_builtinTypeAttributeList::
modifier_setMGetterNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mGetterName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_builtinTypeAttributeList::cEnumerator::_mCppClassName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mCppClassName ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_bool & GGS_builtinTypeAttributeList::cEnumerator::_mIsPointer (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mIsPointer ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_builtinTypeAttributeList::cEnumerator::_mAttributeName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mAttributeName ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_bool & GGS_builtinTypeAttributeList::cEnumerator::_mUseReferenceForConstructor (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mUseReferenceForConstructor ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_builtinTypeAttributeList::cEnumerator::_mGetterName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mGetterName ;
}

//---------------------------------------------------------------------------*

GGS_object GGS_builtinTypeAttributeList::reader_object (void) const {
  GGS_object result ;
  if (isBuilt ()) {
    GGS_builtinTypeAttributeList * p = NULL ;
    macroMyNew (p, GGS_builtinTypeAttributeList (*this)) ;
    result = GGS_object (p) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_builtinTypeAttributeList GGS_builtinTypeAttributeList::castFromObject (C_Compiler & inLexique,
                                   const GGS_object & inObject,
                                   const GGS_location & inErrorLocation
                                   COMMA_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList result ;
  const GGS__root * embeddedObject = inObject.embeddedObject () ;
  if (NULL != embeddedObject) {
    const GGS_builtinTypeAttributeList * p = dynamic_cast <const GGS_builtinTypeAttributeList *> (embeddedObject) ;
    if (NULL != p) {
      result = * p ;
    }else{
      castFromObjectErrorSignaling (inLexique, inErrorLocation, & kTypeDescriptor_GGS_builtinTypeAttributeList, embeddedObject COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptorEX * GGS_builtinTypeAttributeList::typeDescriptor (void) const {
  return & kTypeDescriptor_GGS_builtinTypeAttributeList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@ACGalgasType.attributeDescriptionList'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__ACGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_ACGalgasType * operand_2249
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_2249 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.attributeDescriptionList' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__attributeDescriptionList> gDispatchTableForReader__ACGalgasType__attributeDescriptionList ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__attributeDescriptionList (typeCategoryReader__ACGalgasType__attributeDescriptionList inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__attributeDescriptionList.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__ACGalgasType_defaultReader_attributeDescriptionList (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_builtinTypeAttributeList  () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__attributeDescriptionList
findCategoryReader__ACGalgasType__attributeDescriptionList (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__attributeDescriptionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__attributeDescriptionList.count ()) {
    result = gDispatchTableForReader__ACGalgasType__attributeDescriptionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__attributeDescriptionList (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__attributeDescriptionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_attributeDescriptionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@boolGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__boolGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_boolGalgasType * operand_2491
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_2491 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("bool"), GGS_bool (false), GGS_string ("mBoolValue"), GGS_bool (false), GGS_string ("boolValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@stringsetGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__stringsetGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_stringsetGalgasType * operand_2802
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_2802 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("cStringsetNode"), GGS_bool (true), GGS_string ("mRoot"), GGS_bool (false), GGS_string ("")) ;
    var_cas_outList.addAssign_operation (GGS_string ("PMUInt32"), GGS_bool (false), GGS_string ("mCount"), GGS_bool (false), GGS_string ("")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@charGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__charGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_charGalgasType * operand_3158
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_3158 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("utf32"), GGS_bool (false), GGS_string ("mCharValue"), GGS_bool (false), GGS_string ("charValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@stringGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__stringGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_stringGalgasType * operand_3467
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_3467 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_String"), GGS_bool (false), GGS_string ("mString"), GGS_bool (true), GGS_string ("stringValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@uintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__uintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_uintGalgasType * operand_3775
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_3775 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMUInt32"), GGS_bool (false), GGS_string ("mUIntValue"), GGS_bool (false), GGS_string ("uintValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@sintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__sintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_sintGalgasType * operand_4085
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_4085 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMSInt32"), GGS_bool (false), GGS_string ("mSIntValue"), GGS_bool (false), GGS_string ("sintValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@uint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__uint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_uint64GalgasType * operand_4397
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_4397 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMUInt64"), GGS_bool (false), GGS_string ("mUInt64Value"), GGS_bool (false), GGS_string ("uint64Value")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@sint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__sint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_sint64GalgasType * operand_4713
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_4713 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMSInt64"), GGS_bool (false), GGS_string ("mSInt64Value"), GGS_bool (false), GGS_string ("sint64Value")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@doubleGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__doubleGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_doubleGalgasType * operand_5029
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_5029 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("double"), GGS_bool (false), GGS_string ("mDoubleValue"), GGS_bool (false), GGS_string ("doubleValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@locationGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__locationGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_locationGalgasType * operand_5345
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_5345 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_LocationInSource"), GGS_bool (false), GGS_string ("mStartLocationInSource"), GGS_bool (true), GGS_string ("startLocation")) ;
    var_cas_outList.addAssign_operation (GGS_string ("C_LocationInSource"), GGS_bool (false), GGS_string ("mEndLocationInSource"), GGS_bool (true), GGS_string ("endLocation")) ;
    var_cas_outList.addAssign_operation (GGS_string ("C_SourceTextInString"), GGS_bool (true), GGS_string ("mSourceText"), GGS_bool (false), GGS_string ("sourceText")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@objectGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__objectGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_objectGalgasType * operand_5852
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_5852 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("AC_GALGAS_root"), GGS_bool (true), GGS_string ("mEmbeddedObject"), GGS_bool (false), GGS_string ("embeddedObject")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@typeGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__typeGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_typeGalgasType * operand_6177
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_6177 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_galgas_type_descriptor"), GGS_bool (true), GGS_string ("mTypeDescriptor"), GGS_bool (false), GGS_string ("embeddedTypeDescriptor")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@functionGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__functionGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_functionGalgasType * operand_6524
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_6524 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_galgas_function_descriptor"), GGS_bool (true), GGS_string ("mFunctionDescriptor"), GGS_bool (false), GGS_string ("functionDescriptor")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lstringGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lstringGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lstringGalgasType * operand_6874
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_6874 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_string"), GGS_bool (true), GGS_string ("mString"), GGS_bool (false), GGS_string ("stringValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lcharGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lcharGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lcharGalgasType * operand_7265
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_7265 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_char"), GGS_bool (true), GGS_string ("mChar"), GGS_bool (false), GGS_string ("charValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@luintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__luintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_luintGalgasType * operand_7650
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_7650 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_uint"), GGS_bool (true), GGS_string ("mUInt"), GGS_bool (false), GGS_string ("uintValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lsintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lsintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lsintGalgasType * operand_8035
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_8035 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_sint"), GGS_bool (true), GGS_string ("mSInt"), GGS_bool (false), GGS_string ("sintValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@luint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__luint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_luint64GalgasType * operand_8422
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_8422 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_uint_36__34_"), GGS_bool (true), GGS_string ("mUInt64"), GGS_bool (false), GGS_string ("uint64Value")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lsint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lsint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lsint64GalgasType * operand_8821
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_8821 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_sint_36__34_"), GGS_bool (true), GGS_string ("mSInt64"), GGS_bool (false), GGS_string ("sint64Value")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lboolGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__lboolGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lboolGalgasType * operand_9218
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_9218 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_bool"), GGS_bool (true), GGS_string ("mBool"), GGS_bool (false), GGS_string ("boolValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@ldoubleGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__ldoubleGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_ldoubleGalgasType * operand_9605
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_9605 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_double"), GGS_bool (true), GGS_string ("mDouble"), GGS_bool (false), GGS_string ("doubleValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@binarysetGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__binarysetGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_binarysetGalgasType * operand_10000
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_10000 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_BDD"), GGS_bool (false), GGS_string ("mBDD"), GGS_bool (true), GGS_string ("bdd")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@dataGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_builtinTypeAttributeList 
category_reader__dataGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_dataGalgasType * operand_10294
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_builtinTypeAttributeList  var_cas_outList ;
  if (operand_10294 != NULL) {
    var_cas_outList = GGS_builtinTypeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("uint8Array"), GGS_bool (false), GGS_string ("mData"), GGS_bool (true), GGS_string ("")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@ACGalgasType.generate_new_constructor'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_ACGalgasType * operand_10892
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_10892 != NULL) {
    var_cas_outGenerate = GGS_bool (true) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.generate_new_constructor' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__generate_new_constructor> gDispatchTableForReader__ACGalgasType__generate_new_constructor ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__generate_new_constructor (typeCategoryReader__ACGalgasType__generate_new_constructor inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__generate_new_constructor.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType_defaultReader_generate_new_constructor (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_bool () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__generate_new_constructor
findCategoryReader__ACGalgasType__generate_new_constructor (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__generate_new_constructor result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__generate_new_constructor.count ()) {
    result = gDispatchTableForReader__ACGalgasType__generate_new_constructor (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__generate_new_constructor (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__generate_new_constructor.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_generate_new_constructor ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lstringGalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lstringGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lstringGalgasType * operand_11092
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11092 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lboolGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lboolGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lboolGalgasType * operand_11292
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11292 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lcharGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lcharGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lcharGalgasType * operand_11492
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11492 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@luintGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__luintGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_luintGalgasType * operand_11692
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11692 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lsintGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lsintGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lsintGalgasType * operand_11892
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11892 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@luint64GalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__luint64GalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_luint64GalgasType * operand_12094
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12094 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lsint64GalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lsint64GalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lsint64GalgasType * operand_12296
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12296 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@ldoubleGalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ldoubleGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_ldoubleGalgasType * operand_12498
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12498 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@ACGalgasType.generate_virtual_destructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_ACGalgasType * operand_13001
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13001 != NULL) {
    var_cas_outGenerate = GGS_bool (true) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.generate_virtual_destructor'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__generate_virtual_destructor> gDispatchTableForReader__ACGalgasType__generate_virtual_destructor ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__generate_virtual_destructor (typeCategoryReader__ACGalgasType__generate_virtual_destructor inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__generate_virtual_destructor.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType_defaultReader_generate_virtual_destructor (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_bool () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__generate_virtual_destructor
findCategoryReader__ACGalgasType__generate_virtual_destructor (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__generate_virtual_destructor result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__generate_virtual_destructor.count ()) {
    result = gDispatchTableForReader__ACGalgasType__generate_virtual_destructor (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__generate_virtual_destructor (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__generate_virtual_destructor.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_generate_virtual_destructor ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@boolGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__boolGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_boolGalgasType * operand_13201
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13201 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@functionGalgasType.generate_virtual_destructor'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__functionGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_functionGalgasType * operand_13407
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13407 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@typeGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__typeGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_typeGalgasType * operand_13609
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13609 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@uintGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__uintGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_uintGalgasType * operand_13811
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13811 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@uint64GalgasType.generate_virtual_destructor'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__uint64GalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_uint64GalgasType * operand_14015
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_14015 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@sintGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__sintGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_sintGalgasType * operand_14217
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_14217 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@sint64GalgasType.generate_virtual_destructor'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__sint64GalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_sint64GalgasType * operand_14421
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_14421 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@charGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__charGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_charGalgasType * operand_14623
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_14623 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@doubleGalgasType.generate_virtual_destructor'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__doubleGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_doubleGalgasType * operand_14827
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_14827 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of wrapper 'builtinTypeGenerationTemplate'          *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_builtinTypeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_builtinTypeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_builtinTypeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'primitiveTypeHeader' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_ACGalgasType & var_cas_TYPE) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " : public " ;
    if (((findCategoryReader__ACGalgasType__enumerable (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (12))).reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
      result << "AC_GALGAS_root" ;
    }else {
      result << "AC_GALGAS_Enumerable" ;
    }
    result << " {\n"
      "//--------------------------------- Native constructor\n"
      "  protected : GALGAS_" ;
    result << var_cas_TYPE_NAME ;
    result << " (" ;
    const GGS_string var_cas_COL_00 = GGS_string::stringWithColumnCount (result) ;
    GGS_builtinTypeAttributeList::cEnumerator enumerator_829 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (21))), true) ;
    const GGS_builtinTypeAttributeList::cElement * operand_829 = NULL ;
    while (((operand_829 = enumerator_829.nextObject ()))) {
      macroValidPointer (operand_829) ;
      result << "const " ;
      result << operand_829->mCppClassName ;
      if (operand_829->mIsPointer.boolValue ()) {
        result << " *" ;
      }else {
      }
      if (operand_829->mUseReferenceForConstructor.boolValue ()) {
        result << " &" ;
      }else {
      }
      result << " inOperand_" ;
      result << operand_829->mAttributeName ;
      if (enumerator_829.hasNextObject ()) {
        result << ",\n" ;
        result << var_cas_COL_00 ;
      }
    }
    if (((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (25))).reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
      result << "LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
      result << "\n" ;
      result << var_cas_COL_00 ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }
    if ((findCategoryReader__ACGalgasType__generate_new_constructor (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (31))).boolValue ()) {
      result << "  public : static GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " * constructor_new (" ;
      const GGS_string var_cas_COL_01 = GGS_string::stringWithColumnCount (result) ;
      GGS_builtinTypeAttributeList::cEnumerator enumerator_1289 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (33))), true) ;
      const GGS_builtinTypeAttributeList::cElement * operand_1289 = NULL ;
      while (((operand_1289 = enumerator_1289.nextObject ()))) {
        macroValidPointer (operand_1289) ;
        result << "const " ;
        result << operand_1289->mCppClassName ;
        if (operand_1289->mIsPointer.boolValue ()) {
          result << " *" ;
        }else {
        }
        if (operand_1289->mUseReferenceForConstructor.boolValue ()) {
          result << " &" ;
        }else {
        }
        result << " inOperand_" ;
        result << operand_1289->mAttributeName ;
        if (enumerator_1289.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL_01 ;
        }
      }
      result << "\n" ;
      result << var_cas_COL_01 ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if ((findCategoryReader__ACGalgasType__generate_virtual_destructor (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (40))).boolValue ()) {
      result << "//--------------------------------- Virtual destructor\n"
        "  protected : virtual ~ GALGAS_" ;
      result << var_cas_TYPE_NAME ;
      result << " (void) ;\n"
        "\n" ;
    }else {
    }
    GGS_constructorMapEXX::cEnumerator enumerator_1713 ((findCategoryReader__ACGalgasType__constructorMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (45))), true) ;
    const GGS_constructorMapEXX::cElement * operand_1713 = NULL ;
    if (enumerator_1713.hasCurrentObject ()) {
      result << "//--------------------------------- GALGAS constructors\n" ;
      while (((operand_1713 = enumerator_1713.nextObject ()))) {
        macroValidPointer (operand_1713) ;
        result << "  public : static GALGAS_" ;
        result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_1713->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_1713->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (48))) ;
        result << " * constructor_" ;
        result << operand_1713->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (48)) ;
        result << " (" ;
        const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
        GGS_typeList::cEnumerator enumerator_1924 (operand_1713->mInfo.mArgumentTypeList, true) ;
        const GGS_typeList::cElement * operand_1924 = NULL ;
        { GGS_uint var_cas_IDX (true, 0) ;
      while (((operand_1924 = enumerator_1924.nextObject ()))) {
        macroValidPointer (operand_1924) ;
        result << "const GALGAS_" ;
        result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_1924->mType (HERE)->galgasRTTI ()) (inLexique, operand_1924->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (50))) ;
        result << " * inOperand" ;
        result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (50)) ;
        if (enumerator_1924.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL ;
        }
        var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
      }
    }
    if ((operand_1713->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
      if (operand_1713->mInfo.mHasLexique.boolValue ()) {
        result << "C_Compiler * inCompiler\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }else {
        result << "LOCATION_ARGS" ;
      }
    }else {
      if (operand_1713->mInfo.mHasLexique.boolValue ()) {
        result << ",\n" ;
        result << var_cas_COL ;
        result << "C_Compiler * inCompiler\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }else {
        result << "\n" ;
        result << var_cas_COL ;
        result << "COMMA_LOCATION_ARGS" ;
      }
    }
    result << ") ;\n"
      "\n" ;
  }
}
result << "\n"
  "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " &) ;\n"
  "\n"
  "//--------------------------------- Implementation of reader 'description'\n"
  "  public : virtual void description (C_String & ioString,\n"
  "                                     const PMSInt32 inIndentation) const ;\n" ;
if (((findCategoryReader__ACGalgasType__add_assign_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (78))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- += operator\n"
    "  friend void addAssign_operation (" ;
  const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
  result << "GALGAS_" ;
  result << var_cas_TYPE_NAME ;
  result << " * & ioResult" ;
  GGS_typeList::cEnumerator enumerator_3026 ((findCategoryReader__ACGalgasType__add_assign_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (81))), true) ;
  const GGS_typeList::cElement * operand_3026 = NULL ;
  { GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3026 = enumerator_3026.nextObject ()))) {
  macroValidPointer (operand_3026) ;
  result << ",\n" ;
  result << var_cas_COL ;
  result << "const GALGAS_" ;
  result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_3026->mType (HERE)->galgasRTTI ()) (inLexique, operand_3026->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (82))) ;
  result << " * inOperand" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (82)) ;
  var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n"
  "\n"
  "//--------------------------------- -= operator\n"
  "  friend void minusAssign_operation (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_typeList::cEnumerator enumerator_3317 ((findCategoryReader__ACGalgasType__add_assign_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (88))), true) ;
const GGS_typeList::cElement * operand_3317 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3317 = enumerator_3317.nextObject ()))) {
macroValidPointer (operand_3317) ;
result << ",\n" ;
result << var_cas_COL1 ;
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_3317->mType (HERE)->galgasRTTI ()) (inLexique, operand_3317->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (89))) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (89)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMapEXX::cEnumerator enumerator_3532 ((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (98))), true) ;
const GGS_modifierMapEXX::cElement * operand_3532 = NULL ;
while (((operand_3532 = enumerator_3532.nextObject ()))) {
macroValidPointer (operand_3532) ;
result << "  protected : void modifier_" ;
result << operand_3532->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
GGS_formalParameterSignatureEXX::cEnumerator enumerator_3632 (operand_3532->mInfo.mParameterList, true) ;
const GGS_formalParameterSignatureEXX::cElement * operand_3632 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3632 = enumerator_3632.nextObject ()))) {
macroValidPointer (operand_3632) ;
if ((operand_3632->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_3632->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_3632->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (102))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
}else if ((operand_3632->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_3632->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_3632->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (104))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (104)) ;
}else if ((operand_3632->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_3632->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_3632->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (106))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (106)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_3632->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_3632->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (108))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
}
if (enumerator_3632.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_3532->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_3532->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << var_cas_COL ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_3532->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_modifierMapEXX::cEnumerator enumerator_4853 ((findCategoryReader__ACGalgasType__instanceMethodMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (132))), true) ;
const GGS_modifierMapEXX::cElement * operand_4853 = NULL ;
while (((operand_4853 = enumerator_4853.nextObject ()))) {
macroValidPointer (operand_4853) ;
result << "  protected : void method_" ;
result << operand_4853->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
GGS_formalParameterSignatureEXX::cEnumerator enumerator_4951 (operand_4853->mInfo.mParameterList, true) ;
const GGS_formalParameterSignatureEXX::cElement * operand_4951 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4951 = enumerator_4951.nextObject ()))) {
macroValidPointer (operand_4951) ;
if ((operand_4951->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4951->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_4951->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (136))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
}else if ((operand_4951->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4951->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_4951->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (138))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
}else if ((operand_4951->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4951->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_4951->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (140))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (140)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4951->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_4951->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (142))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (142)) ;
}
if (enumerator_4951.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_4853->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_4853->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << var_cas_COL ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_4853->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Class Methods\n" ;
GGS_modifierMapEXX::cEnumerator enumerator_6172 ((findCategoryReader__ACGalgasType__classMethodMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (166))), true) ;
const GGS_modifierMapEXX::cElement * operand_6172 = NULL ;
while (((operand_6172 = enumerator_6172.nextObject ()))) {
macroValidPointer (operand_6172) ;
result << "  public : static void class_method_" ;
result << operand_6172->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
GGS_formalParameterSignatureEXX::cEnumerator enumerator_6280 (operand_6172->mInfo.mParameterList, true) ;
const GGS_formalParameterSignatureEXX::cElement * operand_6280 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6280 = enumerator_6280.nextObject ()))) {
macroValidPointer (operand_6280) ;
if ((operand_6280->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_6280->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_6280->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (170))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (170)) ;
}else if ((operand_6280->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_6280->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_6280->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (172))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (172)) ;
}else if ((operand_6280->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_6280->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_6280->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (174))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (174)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_6280->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_6280->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (176))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (176)) ;
}
if (enumerator_6280.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6172->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6172->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << var_cas_COL ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6172->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMapEXX::cEnumerator enumerator_7484 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (200))), true) ;
const GGS_readerMapEXX::cElement * operand_7484 = NULL ;
while (((operand_7484 = enumerator_7484.nextObject ()))) {
macroValidPointer (operand_7484) ;
if (((operand_7484->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifierEXX::constructor_isInherited (inLexique COMMA_HERE))).operator_and ((operand_7484->mInfo.mImplicitConversionReader).operator_isEqual (GGS_string (""))).boolValue ()) {
result << "  protected : virtual GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_7484->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_7484->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (202))) ;
result << " * reader_" ;
result << operand_7484->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
GGS_typeList::cEnumerator enumerator_7755 (operand_7484->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_7755 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_7755 = enumerator_7755.nextObject ()))) {
macroValidPointer (operand_7755) ;
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_7755->mType (HERE)->galgasRTTI ()) (inLexique, operand_7755->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (204))) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (204)) ;
if (enumerator_7755.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7484->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7484->mInfo.mHasLexiqueArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_7484->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const" ;
if ((operand_7484->mInfo.mQualifier).operator_isEqual (GGS_readerQualifierEXX::constructor_isAbstract (inLexique COMMA_HERE)).boolValue ()) {
result << " = 0" ;
}else {
}
result << " ;\n"
  "\n" ;
}else {
}
}
if ((findCategoryReader__ACGalgasType__accept_and_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (228))).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_and (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_or_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (235))).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_or (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_xor_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (242))).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_xor (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_not_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (249))).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_not (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_tilde_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (255))).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_tilde (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "//--------------------------------- Comparison\n"
  "  public : static PMSInt32 objectCompare (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n"
  "                                          const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2) ;\n"
  "\n"
  "//--------------------------------- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n" ;
if ((findCategoryReader__ACGalgasType__accept_concat_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (269))).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_concat (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_add_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (276))).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * add_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_sub_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (284))).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * substract_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_mul_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (292))).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * multiply_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_div_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (300))).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * divide_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_mod_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (308))).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * modulo_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand1,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand2,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_unary_minus_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (316))).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * operator_unary_minus (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (323))).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : static void increment_operation (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand,\n" ;
result << var_cas_COL1 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static void decrement_operation (" ;
const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand,\n" ;
result << var_cas_COL2 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL2 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_shift_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (333))).boolValue ()) {
result << "//--------------------------------- << and >> shift operators\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * left_shift_operation (" ;
const GGS_string var_cas_COL1 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL1 ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result << var_cas_COL1 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL1 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * right_shift_operation (" ;
const GGS_string var_cas_COL2 = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand,\n" ;
result << var_cas_COL2 ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result << var_cas_COL2 ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL2 ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((findCategoryReader__ACGalgasType__accept_append_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (346))).boolValue ()) {
result << "//--------------------------------- Append operator\n"
  "  protected : static GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * dotAssign_operation (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult,\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (353)))).operator_or ((findCategoryReader__ACGalgasType__accept_append_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (353))))).operator_or (((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (353))).reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or (((findCategoryReader__ACGalgasType__add_assign_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (353))).reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//--------------------------------- Modifier utility method\n"
  "  protected : static void insulate (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
result << "//--------------------------------- Private data member\n" ;
GGS_builtinTypeAttributeList::cEnumerator enumerator_14196 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (360))), true) ;
const GGS_builtinTypeAttributeList::cElement * operand_14196 = NULL ;
while (((operand_14196 = enumerator_14196.nextObject ()))) {
macroValidPointer (operand_14196) ;
result << "  private : " ;
if (operand_14196->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_14196->mCppClassName ;
result << " " ;
if (operand_14196->mIsPointer.boolValue ()) {
result << "* " ;
}else {
}
result << operand_14196->mAttributeName ;
result << " ;\n" ;
if ((operand_14196->mGetterName.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "  public : inline " ;
if (operand_14196->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_14196->mCppClassName ;
result << " " ;
if (operand_14196->mIsPointer.boolValue ()) {
result << " * " ;
}else {
}
result << operand_14196->mGetterName ;
result << " (void) const { return " ;
result << operand_14196->mAttributeName ;
result << " ; }\n" ;
}else {
}
}
result << "\n"
  "//--------------------------------- Instance Method Invocation\n"
  "\n" ;
GGS_modifierMapEXX::cEnumerator enumerator_14651 ((findCategoryReader__ACGalgasType__instanceMethodMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (368))), true) ;
const GGS_modifierMapEXX::cElement * operand_14651 = NULL ;
while (((operand_14651 = enumerator_14651.nextObject ()))) {
macroValidPointer (operand_14651) ;
result << "  friend inline void method_" ;
result << operand_14651->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_formalParameterSignatureEXX::cEnumerator enumerator_14783 (operand_14651->mInfo.mParameterList, true) ;
const GGS_formalParameterSignatureEXX::cElement * operand_14783 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_14783 = enumerator_14783.nextObject ()))) {
macroValidPointer (operand_14783) ;
result << ",\n" ;
result << var_cas_COL ;
if ((operand_14783->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_14783->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_14783->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (373))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (373)) ;
}else if ((operand_14783->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_14783->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_14783->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (375))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (375)) ;
}else if ((operand_14783->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_14783->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_14783->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (377))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (377)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_14783->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_14783->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (379))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (379)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_14651->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}
result << "//--------------------------------- Modifier invocation\n" ;
GGS_modifierMapEXX::cEnumerator enumerator_15781 ((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (391))), true) ;
const GGS_modifierMapEXX::cElement * operand_15781 = NULL ;
while (((operand_15781 = enumerator_15781.nextObject ()))) {
macroValidPointer (operand_15781) ;
result << "  friend inline void modifier_" ;
result << operand_15781->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_formalParameterSignatureEXX::cEnumerator enumerator_15917 (operand_15781->mInfo.mParameterList, true) ;
const GGS_formalParameterSignatureEXX::cElement * operand_15917 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_15917 = enumerator_15917.nextObject ()))) {
macroValidPointer (operand_15917) ;
result << ",\n" ;
result << var_cas_COL ;
if ((operand_15917->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_15917->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_15917->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (396))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (396)) ;
}else if ((operand_15917->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_15917->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_15917->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (398))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (398)) ;
}else if ((operand_15917->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_15917->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_15917->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (400))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (400)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_15917->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_15917->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (402))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (402)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_15781->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}
result << "//--------------------------------- Reader invocation declaration\n" ;
GGS_readerMapEXX::cEnumerator enumerator_16923 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (414))), true) ;
const GGS_readerMapEXX::cElement * operand_16923 = NULL ;
while (((operand_16923 = enumerator_16923.nextObject ()))) {
macroValidPointer (operand_16923) ;
if ((operand_16923->mInfo.mQualifier).operator_isEqual (GGS_readerQualifierEXX::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "  friend GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_16923->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_16923->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (416))) ;
result << " * readerCall_" ;
result << operand_16923->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_typeList::cEnumerator enumerator_17186 (operand_16923->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_17186 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_17186 = enumerator_17186.nextObject ()))) {
macroValidPointer (operand_17186) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_17186->mType (HERE)->galgasRTTI ()) (inLexique, operand_17186->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (419))) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (419)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_16923->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
if (((findCategoryReader__ACGalgasType__enumerable (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (429))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration handling\n"
  "  protected : virtual void populateEnumerationArray (const AC_GALGAS_root * ioEnumerationArray [],\n"
  "                                                     const bool inAscending) const ;\n"
  "  protected : virtual PMUInt32 count (void) const ;\n"
  "\n"
  "//--------------------------------- Enumerator declaration\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_enumerableTypeDescriptionList::cEnumerator enumerator_18145 ((findCategoryReader__ACGalgasType__enumerable (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (441))), true) ;
const GGS_enumerableTypeDescriptionList::cElement * operand_18145 = NULL ;
while (((operand_18145 = enumerator_18145.nextObject ()))) {
macroValidPointer (operand_18145) ;
result << "    public : const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_18145->mType (HERE)->galgasRTTI ()) (inLexique, operand_18145->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (442))) ;
result << " * attribute_" ;
result << operand_18145->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const ;\n" ;
}
result << "\n"
  "  } ;\n" ;
}else {
}
result << "} ;\n"
  "\n" ;
GGS_modifierMapEXX::cEnumerator enumerator_18401 ((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (450))), true) ;
const GGS_modifierMapEXX::cElement * operand_18401 = NULL ;
while (((operand_18401 = enumerator_18401.nextObject ()))) {
macroValidPointer (operand_18401) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "inline void modifier_" ;
result << operand_18401->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioResult" ;
GGS_formalParameterSignatureEXX::cEnumerator enumerator_18615 (operand_18401->mInfo.mParameterList, true) ;
const GGS_formalParameterSignatureEXX::cElement * operand_18615 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_18615 = enumerator_18615.nextObject ()))) {
macroValidPointer (operand_18615) ;
result << ",\n" ;
result << var_cas_COL ;
if ((operand_18615->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_18615->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_18615->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (456))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (456)) ;
}else if ((operand_18615->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_18615->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_18615->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (458))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (458)) ;
}else if ((operand_18615->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_18615->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_18615->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (460))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (460)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_18615->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_18615->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (462))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (462)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_18401->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->modifier_" ;
result << operand_18401->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignatureEXX::cEnumerator enumerator_19681 (operand_18401->mInfo.mParameterList, true) ;
const GGS_formalParameterSignatureEXX::cElement * operand_19681 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_19681 = enumerator_19681.nextObject ()))) {
macroValidPointer (operand_19681) ;
if ((operand_19681->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (477)) ;
}else if ((operand_19681->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (479)) ;
}else if ((operand_19681->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (481)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (483)) ;
}
if (enumerator_19681.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_18401->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_18401->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_18401->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;  \n"
  "  }\n"
  "}\n"
  "\n" ;
}
GGS_modifierMapEXX::cEnumerator enumerator_20492 ((findCategoryReader__ACGalgasType__instanceMethodMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (505))), true) ;
const GGS_modifierMapEXX::cElement * operand_20492 = NULL ;
while (((operand_20492 = enumerator_20492.nextObject ()))) {
macroValidPointer (operand_20492) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "inline void method_" ;
result << operand_20492->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_formalParameterSignatureEXX::cEnumerator enumerator_20702 (operand_20492->mInfo.mParameterList, true) ;
const GGS_formalParameterSignatureEXX::cElement * operand_20702 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_20702 = enumerator_20702.nextObject ()))) {
macroValidPointer (operand_20702) ;
result << ",\n" ;
result << var_cas_COL ;
if ((operand_20702->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_20702->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_20702->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (511))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (511)) ;
}else if ((operand_20702->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_20702->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_20702->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (513))) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (513)) ;
}else if ((operand_20702->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_20702->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_20702->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (515))) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (515)) ;
}else {
result << "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_20702->mParameterType (HERE)->galgasRTTI ()) (inLexique, operand_20702->mParameterType.getPtr () COMMA_SOURCE_FILE_AT_LINE (517))) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (517)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_20492->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "\n"
  "  if (inObject != NULL) {\n"
  "    macroRetainObjectThere (inObject) ;\n"
  "    inObject->method_" ;
result << operand_20492->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignatureEXX::cEnumerator enumerator_21747 (operand_20492->mInfo.mParameterList, true) ;
const GGS_formalParameterSignatureEXX::cElement * operand_21747 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_21747 = enumerator_21747.nextObject ()))) {
macroValidPointer (operand_21747) ;
if ((operand_21747->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (532)) ;
}else if ((operand_21747->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (534)) ;
}else if ((operand_21747->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (536)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (538)) ;
}
if (enumerator_21747.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_20492->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_20492->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_20492->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;  \n"
  "    macroReleaseObjectThere (inObject) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'primitiveTypeImplementation' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_ACGalgasType & var_cas_TYPE) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((GGS_string ("'")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string ("' class")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (\"" ;
result << (findCategoryReader__ACGalgasType__typeName (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (7))) ;
result << "\",\n"
  "                                                                    NULL,\n"
  "                                                                    (genericObjectCompareFunctionType) GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::objectCompare) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " ;\n"
  "}\n" ;
if ((findCategoryReader__ACGalgasType__generate_new_constructor (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (16))).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_new (" ;
const GGS_string var_cas_COL_01 = GGS_string::stringWithColumnCount (result) ;
GGS_builtinTypeAttributeList::cEnumerator enumerator_1149 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (20))), true) ;
const GGS_builtinTypeAttributeList::cElement * operand_1149 = NULL ;
while (((operand_1149 = enumerator_1149.nextObject ()))) {
macroValidPointer (operand_1149) ;
result << "const " ;
result << operand_1149->mCppClassName ;
if (operand_1149->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_1149->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_1149->mAttributeName ;
if (enumerator_1149.hasNextObject ()) {
result << ",\n" ;
result << var_cas_COL_01 ;
}
}
result << "\n" ;
result << var_cas_COL_01 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "\n"
  "  GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " (" ;
GGS_builtinTypeAttributeList::cEnumerator enumerator_1494 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (27))), true) ;
const GGS_builtinTypeAttributeList::cElement * operand_1494 = NULL ;
while (((operand_1494 = enumerator_1494.nextObject ()))) {
macroValidPointer (operand_1494) ;
result << "inOperand_" ;
result << operand_1494->mAttributeName ;
if (enumerator_1494.hasNextObject ()) {
result << ", " ;
}
}
if (((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (31))).reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ")) ;\n"
  "  return result ;\n"
  "}" ;
}else {
}
if (((((findCategoryReader__ACGalgasType__accept_inc_dec_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (41)))).operator_or ((findCategoryReader__ACGalgasType__accept_append_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (41))))).operator_or (((findCategoryReader__ACGalgasType__modifierMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (41))).reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or (((findCategoryReader__ACGalgasType__add_assign_operator (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (41))).reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "void GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::insulate (" ;
const GGS_string var_cas_COL_0 = GGS_string::stringWithColumnCount (result) ;
result << "GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * & ioOperand\n" ;
result << var_cas_COL_0 ;
result << "COMMA_LOCATION_ARGS) {\n"
  "  if (ioOperand->retainCount () > 1) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * p = GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::constructor_new (" ;
GGS_builtinTypeAttributeList::cEnumerator enumerator_2230 ((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (48))), true) ;
const GGS_builtinTypeAttributeList::cElement * operand_2230 = NULL ;
while (((operand_2230 = enumerator_2230.nextObject ()))) {
macroValidPointer (operand_2230) ;
result << "ioOperand->" ;
result << operand_2230->mAttributeName ;
if (enumerator_2230.hasNextObject ()) {
result << ", " ;
}
}
if (((findCategoryReader__ACGalgasType__attributeDescriptionList (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (52))).reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ") ;\n"
  "    macroReleaseObject (ioOperand) ;\n"
  "    macroRetainObject (p) ;\n"
  "    ioOperand = p ;\n"
  "  }\n"
  "}\n" ;
}else {
}
GGS_readerMapEXX::cEnumerator enumerator_2543 ((findCategoryReader__ACGalgasType__readerMap (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (64))), true) ;
const GGS_readerMapEXX::cElement * operand_2543 = NULL ;
while (((operand_2543 = enumerator_2543.nextObject ()))) {
macroValidPointer (operand_2543) ;
if ((operand_2543->mInfo.mQualifier).operator_isEqual (GGS_readerQualifierEXX::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_2543->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_2543->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (67))) ;
result << " * readerCall_" ;
result << operand_2543->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << " * inObject" ;
GGS_typeList::cEnumerator enumerator_2886 (operand_2543->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_2886 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2886 = enumerator_2886.nextObject ()))) {
macroValidPointer (operand_2886) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_2886->mType (HERE)->galgasRTTI ()) (inLexique, operand_2886->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (70))) ;
result << " * inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (70)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_2543->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_2543->mInfo.mReturnedType (HERE)->galgasRTTI ()) (inLexique, operand_2543->mInfo.mReturnedType.getPtr () COMMA_SOURCE_FILE_AT_LINE (78))) ;
result << " * result = NULL ;\n"
  "  if (inObject != NULL) {\n" ;
if ((operand_2543->mInfo.mImplicitConversionReader).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "    result = inObject->reader_" ;
result << operand_2543->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_typeList::cEnumerator enumerator_3457 (operand_2543->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_3457 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3457 = enumerator_3457.nextObject ()))) {
macroValidPointer (operand_3457) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (83)) ;
if (enumerator_3457.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_2543->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_2543->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_2543->mInfo.mHasLexiqueArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
}else {
result << "    result = readerCall_" ;
result << operand_2543->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (inObject->reader_" ;
result << operand_2543->mInfo.mImplicitConversionReader.reader_identifierRepresentation () ;
result << " (THERE)" ;
GGS_typeList::cEnumerator enumerator_4045 (operand_2543->mInfo.mArgumentTypeList, true) ;
const GGS_typeList::cElement * operand_4045 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4045 = enumerator_4045.nextObject ()))) {
macroValidPointer (operand_4045) ;
result << ", inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_2543->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
if (((findCategoryReader__ACGalgasType__enumerable (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (117))).reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
GGS_enumerableTypeDescriptionList::cEnumerator enumerator_4383 ((findCategoryReader__ACGalgasType__enumerable (var_cas_TYPE (HERE)->galgasRTTI ()) (inLexique, var_cas_TYPE.getPtr () COMMA_SOURCE_FILE_AT_LINE (118))), true) ;
const GGS_enumerableTypeDescriptionList::cElement * operand_4383 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4383 = enumerator_4383.nextObject ()))) {
macroValidPointer (operand_4383) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4383->mType (HERE)->galgasRTTI ()) (inLexique, operand_4383->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (120))) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_NAME ;
result << "::cEnumerator::attribute_" ;
result << operand_4383->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4383->mType (HERE)->galgasRTTI ()) (inLexique, operand_4383->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (121))) ;
result << " * result = (const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4383->mType (HERE)->galgasRTTI ()) (inLexique, operand_4383->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (121))) ;
result << " *) directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (121)) ;
result << " COMMA_HERE) ;\n"
  "  macroValidObject (result, const GALGAS_" ;
result << (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (operand_4383->mType (HERE)->galgasRTTI ()) (inLexique, operand_4383->mType.getPtr () COMMA_SOURCE_FILE_AT_LINE (122))) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesHeader' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesHeader (C_Compiler & /* inLexique */,
                                const GGS_typeMap & var_cas_TYPE_MAP) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_MAP.isBuilt () ;
  if (isBuilt) {
result << "\n"
  "#ifndef GALGAS2_PREDEFINED_TYPES\n"
  "#define GALGAS2_PREDEFINED_TYPES\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#include \"galgas2/AC_GALGAS_Array.h\"\n"
  "#include \"galgas2/AC_GALGAS_SortedList.h\"\n"
  "#include \"strings/C_String.h\"\n"
  "#include \"collections/TC_Array.h\"\n"
  "#include \"galgas-utilities/C_LocationInSource.h\"\n"
  "#include \"bdd/C_BDD.h\"\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class C_galgas_function_descriptor ;\n"
  "class C_galgas_type_descriptor ;\n"
  "class C_SourceTextInString ;\n"
  "class cStringsetNode ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "typedef TC_Array <PMUInt8> uint8Array ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
GGS_typeMap::cEnumerator enumerator_788 (var_cas_TYPE_MAP, true) ;
const GGS_typeMap::cElement * operand_788 = NULL ;
while (((operand_788 = enumerator_788.nextObject ()))) {
macroValidPointer (operand_788) ;
result << "class GALGAS_" ;
result << operand_788->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "class C_Compiler ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesImplementation' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesImplementation (C_Compiler & /* inLexique */) {
  C_String result ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "#include \"galgas2/predefined-types.h\"\n"
  "#include \"galgas-utilities/C_Compiler.h\"\n"
  "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@ACGalgasType.appendGeneratedHeader'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ACGalgasType__appendGeneratedHeader (C_Compiler &,
                                const cPtr_ACGalgasType * operand_16226,
                                GGS_string & /* var_cas_ioHeader */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16226 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Virtual Table for category method '@ACGalgasType.appendGeneratedHeader'   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__ACGalgasType__appendGeneratedHeader> gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ACGalgasType__appendGeneratedHeader (typeCategoryMethod__ACGalgasType__appendGeneratedHeader inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__ACGalgasType__appendGeneratedHeader
findCategoryMethod__ACGalgasType__appendGeneratedHeader (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__ACGalgasType__appendGeneratedHeader result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.count ()) {
    result = gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__ACGalgasType__appendGeneratedHeader (superClassPtr) ;
      gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@primitiveGalgasType.appendGeneratedHeader'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__primitiveGalgasType__appendGeneratedHeader (C_Compiler & inLexique,
                                const cPtr_primitiveGalgasType * operand_16406,
                                GGS_string & var_cas_ioHeader
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16406 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_16406 ;
var_cas_ioHeader.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeHeader (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (375))), var_cas_t)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@sortedlistGalgasType.appendGeneratedHeader'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedlistGalgasType__appendGeneratedHeader (C_Compiler & inLexique,
                                const cPtr_sortedlistGalgasType * operand_16753,
                                GGS_string & var_cas_ioHeader
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_16753 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_16753 ;
GGS_sortedlistGalgasType  var_cas_tt = operand_16753 ;
var_cas_ioHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_sortedlistTypeHeader (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (386))), var_cas_tt.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (387)))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@listGalgasType.appendGeneratedHeader'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listGalgasType__appendGeneratedHeader (C_Compiler & inLexique,
                                const cPtr_listGalgasType * operand_17192,
                                GGS_string & var_cas_ioHeader
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17192 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_17192 ;
GGS_listGalgasType  var_cas_tt = operand_17192 ;
var_cas_ioHeader.dotAssign_operation (template_filewrapper_typeGenerationTemplate_listTypeHeader (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (398))), var_cas_tt.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (399)))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@ACGalgasType.appendGeneratedImplementation'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ACGalgasType__appendGeneratedImplementation (C_Compiler &,
                                const cPtr_ACGalgasType * operand_17897,
                                GGS_string & /* var_cas_ioImplementation */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17897 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@ACGalgasType.appendGeneratedImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__ACGalgasType__appendGeneratedImplementation> gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ACGalgasType__appendGeneratedImplementation (typeCategoryMethod__ACGalgasType__appendGeneratedImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__ACGalgasType__appendGeneratedImplementation
findCategoryMethod__ACGalgasType__appendGeneratedImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__ACGalgasType__appendGeneratedImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.count ()) {
    result = gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__ACGalgasType__appendGeneratedImplementation (superClassPtr) ;
      gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@listGalgasType.appendGeneratedImplementation'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listGalgasType__appendGeneratedImplementation (C_Compiler & inLexique,
                                const cPtr_listGalgasType * operand_18088,
                                GGS_string & var_cas_ioImplementation
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18088 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_18088 ;
GGS_listGalgasType  var_cas_tt = operand_18088 ;
var_cas_ioImplementation.dotAssign_operation (template_filewrapper_typeGenerationTemplate_listTypeImplementation (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (418))), var_cas_tt.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (419)))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@sortedlistGalgasType.appendGeneratedImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedlistGalgasType__appendGeneratedImplementation (C_Compiler & inLexique,
                                const cPtr_sortedlistGalgasType * operand_18522,
                                GGS_string & var_cas_ioImplementation
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18522 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_18522 ;
GGS_sortedlistGalgasType  var_cas_tt = operand_18522 ;
var_cas_ioImplementation.dotAssign_operation (template_filewrapper_typeGenerationTemplate_sortedlistTypeImplementation (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (429))), var_cas_tt.reader_mAttributeList (inLexique COMMA_SOURCE_FILE_AT_LINE (430)), var_cas_tt.reader_mSortDescriptorList (inLexique COMMA_SOURCE_FILE_AT_LINE (431)))) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@primitiveGalgasType.appendGeneratedImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__primitiveGalgasType__appendGeneratedImplementation (C_Compiler & inLexique,
                                const cPtr_primitiveGalgasType * operand_18997,
                                GGS_string & var_cas_ioImplementation
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18997 != NULL) {
GGS_ACGalgasType  var_cas_t = operand_18997 ;
var_cas_ioImplementation.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_primitiveTypeImplementation (inLexique, (findCategoryReader__ACGalgasType__typeIdentifierRepresentation (var_cas_t (HERE)->galgasRTTI ()) (inLexique, var_cas_t.getPtr () COMMA_SOURCE_FILE_AT_LINE (440))), var_cas_t)) ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "generateHeadersOfBuiltinTypes"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateHeadersOfBuiltinTypes (C_Compiler & inLexique,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateHeadersOfBuiltinTypes at %s:%d\n", __FILE__, __LINE__) ;
  #endif
const GGS_bool cond_20852 = (var_cas_inDirectory).operator_isNotEqual (GGS_string ("")) ;
if (cond_20852.isBuiltAndTrue ()) {
const GGS_bool cond_19839 = (var_cas_inDirectory.reader_directoryExists ()).operator_not () ;
if (cond_19839.isBuiltAndTrue ()) {
GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inDirectory)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (455)) ;
}else if (cond_19839.isBuiltAndFalse ()) {
GGS_string var_cas_generatedCode = template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesHeader (inLexique, function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (458))) ;
{
GGS_typeMap::cEnumerator enumerator_20053 (function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (460)), true) ;
const GGS_typeMap::cElement * operand_20053 = NULL ;
while (((operand_20053 = enumerator_20053.nextObject ()))) {
  macroValidPointer (operand_20053) ;
const GGS_ACGalgasType  temp_20096 = operand_20053->mInfo.mType ;
if (temp_20096.isBuilt ()) {
  typeCategoryMethod__ACGalgasType__appendGeneratedHeader method = findCategoryMethod__ACGalgasType__appendGeneratedHeader (temp_20096.galgasObjectRunTimeInfo ()) ;
  if (method != NULL) {
    method (inLexique, temp_20096 (HERE), var_cas_generatedCode COMMA_SOURCE_FILE_AT_LINE (461)) ;
  }
}
}
}
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types.h"), GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_generatedCode, GGS_string ("\n"
  "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (463)) ;
var_cas_generatedCode = template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesImplementation (inLexique) ;
{
GGS_typeMap::cEnumerator enumerator_20531 (function_constructBuiltinTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (474)), true) ;
const GGS_typeMap::cElement * operand_20531 = NULL ;
while (((operand_20531 = enumerator_20531.nextObject ()))) {
  macroValidPointer (operand_20531) ;
const GGS_ACGalgasType  temp_20582 = operand_20531->mInfo.mType ;
if (temp_20582.isBuilt ()) {
  typeCategoryMethod__ACGalgasType__appendGeneratedImplementation method = findCategoryMethod__ACGalgasType__appendGeneratedImplementation (temp_20582.galgasObjectRunTimeInfo ()) ;
  if (method != NULL) {
    method (inLexique, temp_20582 (HERE), var_cas_generatedCode COMMA_SOURCE_FILE_AT_LINE (475)) ;
  }
}
}
}
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types.cpp"), GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_generatedCode, GGS_string ("\n"
  "\n"), GGS_string ("") COMMA_SOURCE_FILE_AT_LINE (477)) ;
}
}
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateHeadersOfBuiltinTypes\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_generatePredefinedTypes (void) {
  enterCategoryReader__ACGalgasType__attributeDescriptionList (category_reader__ACGalgasType__attributeDescriptionList, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__boolGalgasType__attributeDescriptionList, gClassInfoFor__boolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__stringsetGalgasType__attributeDescriptionList, gClassInfoFor__stringsetGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__charGalgasType__attributeDescriptionList, gClassInfoFor__charGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__stringGalgasType__attributeDescriptionList, gClassInfoFor__stringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__uintGalgasType__attributeDescriptionList, gClassInfoFor__uintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__sintGalgasType__attributeDescriptionList, gClassInfoFor__sintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__uint64GalgasType__attributeDescriptionList, gClassInfoFor__uint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__sint64GalgasType__attributeDescriptionList, gClassInfoFor__sint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__doubleGalgasType__attributeDescriptionList, gClassInfoFor__doubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__locationGalgasType__attributeDescriptionList, gClassInfoFor__locationGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__objectGalgasType__attributeDescriptionList, gClassInfoFor__objectGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__typeGalgasType__attributeDescriptionList, gClassInfoFor__typeGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__functionGalgasType__attributeDescriptionList, gClassInfoFor__functionGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lstringGalgasType__attributeDescriptionList, gClassInfoFor__lstringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lcharGalgasType__attributeDescriptionList, gClassInfoFor__lcharGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__luintGalgasType__attributeDescriptionList, gClassInfoFor__luintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lsintGalgasType__attributeDescriptionList, gClassInfoFor__lsintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__luint64GalgasType__attributeDescriptionList, gClassInfoFor__luint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lsint64GalgasType__attributeDescriptionList, gClassInfoFor__lsint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lboolGalgasType__attributeDescriptionList, gClassInfoFor__lboolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__ldoubleGalgasType__attributeDescriptionList, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__binarysetGalgasType__attributeDescriptionList, gClassInfoFor__binarysetGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__dataGalgasType__attributeDescriptionList, gClassInfoFor__dataGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor (category_reader__ACGalgasType__generate_new_constructor, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lstringGalgasType__generate_new_constructor, gClassInfoFor__lstringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lboolGalgasType__generate_new_constructor, gClassInfoFor__lboolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lcharGalgasType__generate_new_constructor, gClassInfoFor__lcharGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__luintGalgasType__generate_new_constructor, gClassInfoFor__luintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lsintGalgasType__generate_new_constructor, gClassInfoFor__lsintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__luint64GalgasType__generate_new_constructor, gClassInfoFor__luint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lsint64GalgasType__generate_new_constructor, gClassInfoFor__lsint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__ldoubleGalgasType__generate_new_constructor, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor (category_reader__ACGalgasType__generate_virtual_destructor, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__boolGalgasType__generate_virtual_destructor, gClassInfoFor__boolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__functionGalgasType__generate_virtual_destructor, gClassInfoFor__functionGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__typeGalgasType__generate_virtual_destructor, gClassInfoFor__typeGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__uintGalgasType__generate_virtual_destructor, gClassInfoFor__uintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__uint64GalgasType__generate_virtual_destructor, gClassInfoFor__uint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__sintGalgasType__generate_virtual_destructor, gClassInfoFor__sintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__sint64GalgasType__generate_virtual_destructor, gClassInfoFor__sint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__charGalgasType__generate_virtual_destructor, gClassInfoFor__charGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__doubleGalgasType__generate_virtual_destructor, gClassInfoFor__doubleGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader (category_method__ACGalgasType__appendGeneratedHeader, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__primitiveGalgasType__appendGeneratedHeader, gClassInfoFor__primitiveGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__sortedlistGalgasType__appendGeneratedHeader, gClassInfoFor__sortedlistGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__listGalgasType__appendGeneratedHeader, gClassInfoFor__listGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation (category_method__ACGalgasType__appendGeneratedImplementation, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__listGalgasType__appendGeneratedImplementation, gClassInfoFor__listGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__sortedlistGalgasType__appendGeneratedImplementation, gClassInfoFor__sortedlistGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__primitiveGalgasType__appendGeneratedImplementation, gClassInfoFor__primitiveGalgasType.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_generatePredefinedTypes (void) {
  gDispatchTableForReader__ACGalgasType__attributeDescriptionList.free () ;
  gDispatchTableForReader__ACGalgasType__generate_new_constructor.free () ;
  gDispatchTableForReader__ACGalgasType__generate_virtual_destructor.free () ;
  gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.free () ;
  gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_generatePredefinedTypes (prologueRoutineFor_generatePredefinedTypes, epilogueRoutineFor_generatePredefinedTypes) ;

//---------------------------------------------------------------------------*

