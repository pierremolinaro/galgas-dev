//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'generatePredefinedTypes.cpp'                     *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                      march 14th, 2010, at 16h13'30"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "generatePredefinedTypes.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "generatePredefinedTypes.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@ACGalgasType.attributeDescriptionList'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__ACGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_ACGalgasType * operand_2225
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_2225 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.attributeDescriptionList' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__attributeDescriptionList> gDispatchTableForReader__ACGalgasType__attributeDescriptionList ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__attributeDescriptionList (typeCategoryReader__ACGalgasType__attributeDescriptionList inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__attributeDescriptionList.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__ACGalgasType_defaultReader_attributeDescriptionList (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_nativeAttributeList  () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__attributeDescriptionList
findCategoryReader__ACGalgasType__attributeDescriptionList (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__attributeDescriptionList result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__attributeDescriptionList.count ()) {
    result = gDispatchTableForReader__ACGalgasType__attributeDescriptionList (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__attributeDescriptionList (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__attributeDescriptionList.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_attributeDescriptionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@boolGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__boolGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_boolGalgasType * operand_2457
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_2457 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("bool"), GGS_bool (false), GGS_string ("mBoolValue"), GGS_bool (false), GGS_string ("boolValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@stringsetGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__stringsetGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_stringsetGalgasType * operand_2758
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_2758 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("cStringsetNode"), GGS_bool (true), GGS_string ("mRoot"), GGS_bool (false), GGS_string ("")) ;
    var_cas_outList.addAssign_operation (GGS_string ("PMUInt32"), GGS_bool (false), GGS_string ("mCount"), GGS_bool (false), GGS_string ("")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@charGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__charGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_charGalgasType * operand_3104
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_3104 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("utf32"), GGS_bool (false), GGS_string ("mCharValue"), GGS_bool (false), GGS_string ("charValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@stringGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__stringGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_stringGalgasType * operand_3403
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_3403 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_String"), GGS_bool (false), GGS_string ("mString"), GGS_bool (true), GGS_string ("stringValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@uintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__uintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_uintGalgasType * operand_3701
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_3701 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMUInt32"), GGS_bool (false), GGS_string ("mUIntValue"), GGS_bool (false), GGS_string ("uintValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@sintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__sintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_sintGalgasType * operand_4001
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_4001 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMSInt32"), GGS_bool (false), GGS_string ("mSIntValue"), GGS_bool (false), GGS_string ("sintValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@uint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__uint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_uint64GalgasType * operand_4303
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_4303 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMUInt64"), GGS_bool (false), GGS_string ("mUInt64Value"), GGS_bool (false), GGS_string ("uint64Value")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@sint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__sint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_sint64GalgasType * operand_4609
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_4609 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("PMSInt64"), GGS_bool (false), GGS_string ("mSInt64Value"), GGS_bool (false), GGS_string ("sint64Value")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@doubleGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__doubleGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_doubleGalgasType * operand_4915
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_4915 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("double"), GGS_bool (false), GGS_string ("mDoubleValue"), GGS_bool (false), GGS_string ("doubleValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@locationGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__locationGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_locationGalgasType * operand_5221
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_5221 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_LocationInSource"), GGS_bool (false), GGS_string ("mStartLocationInSource"), GGS_bool (true), GGS_string ("startLocation")) ;
    var_cas_outList.addAssign_operation (GGS_string ("C_LocationInSource"), GGS_bool (false), GGS_string ("mEndLocationInSource"), GGS_bool (true), GGS_string ("endLocation")) ;
    var_cas_outList.addAssign_operation (GGS_string ("C_SourceTextInString"), GGS_bool (true), GGS_string ("mSourceText"), GGS_bool (false), GGS_string ("sourceText")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@objectGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__objectGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_objectGalgasType * operand_5718
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_5718 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_root"), GGS_bool (true), GGS_string ("mEmbeddedObject"), GGS_bool (false), GGS_string ("embeddedObject")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@typeGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__typeGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_typeGalgasType * operand_6030
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_6030 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_galgas_type_descriptor"), GGS_bool (true), GGS_string ("mTypeDescriptor"), GGS_bool (false), GGS_string ("embeddedTypeDescriptor")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@functionGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__functionGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_functionGalgasType * operand_6367
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_6367 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_galgas_function_descriptor"), GGS_bool (true), GGS_string ("mFunctionDescriptor"), GGS_bool (false), GGS_string ("functionDescriptor")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lstringGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__lstringGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lstringGalgasType * operand_6707
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_6707 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_string"), GGS_bool (true), GGS_string ("mString"), GGS_bool (false), GGS_string ("stringValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lcharGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__lcharGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lcharGalgasType * operand_7088
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_7088 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_char"), GGS_bool (true), GGS_string ("mChar"), GGS_bool (false), GGS_string ("charValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@luintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__luintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_luintGalgasType * operand_7463
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_7463 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_uint"), GGS_bool (true), GGS_string ("mUInt"), GGS_bool (false), GGS_string ("uintValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lsintGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__lsintGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lsintGalgasType * operand_7838
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_7838 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_sint"), GGS_bool (true), GGS_string ("mSInt"), GGS_bool (false), GGS_string ("sintValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@luint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__luint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_luint64GalgasType * operand_8215
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_8215 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_uint_36__34_"), GGS_bool (true), GGS_string ("mUInt64"), GGS_bool (false), GGS_string ("uint64Value")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lsint64GalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__lsint64GalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lsint64GalgasType * operand_8604
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_8604 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_sint_36__34_"), GGS_bool (true), GGS_string ("mSInt64"), GGS_bool (false), GGS_string ("sint64Value")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lboolGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__lboolGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_lboolGalgasType * operand_8991
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_8991 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_bool"), GGS_bool (true), GGS_string ("mBool"), GGS_bool (false), GGS_string ("boolValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@ldoubleGalgasType.attributeDescriptionList'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__ldoubleGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_ldoubleGalgasType * operand_9368
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_9368 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_double"), GGS_bool (true), GGS_string ("mDouble"), GGS_bool (false), GGS_string ("doubleValue")) ;
    var_cas_outList.addAssign_operation (GGS_string ("GALGAS_location"), GGS_bool (true), GGS_string ("mLocation"), GGS_bool (false), GGS_string ("locationValue")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@binarysetGalgasType.attributeDescriptionList'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__binarysetGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_binarysetGalgasType * operand_9753
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_9753 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("C_BDD"), GGS_bool (false), GGS_string ("mBDD"), GGS_bool (true), GGS_string ("bdd")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@dataGalgasType.attributeDescriptionList'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_nativeAttributeList 
category_reader__dataGalgasType__attributeDescriptionList (C_Compiler &,
                                const cPtr_dataGalgasType * operand_10037
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_nativeAttributeList  var_cas_outList ;
  if (operand_10037 != NULL) {
    var_cas_outList = GGS_nativeAttributeList ::constructor_emptyList () ;
    var_cas_outList.addAssign_operation (GGS_string ("uint8Array"), GGS_bool (false), GGS_string ("mData"), GGS_bool (true), GGS_string ("")) ;
  }
  return var_cas_outList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category reader '@ACGalgasType.generate_new_constructor'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_ACGalgasType * operand_10625
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_10625 != NULL) {
    var_cas_outGenerate = GGS_bool (true) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.generate_new_constructor' *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__generate_new_constructor> gDispatchTableForReader__ACGalgasType__generate_new_constructor ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__generate_new_constructor (typeCategoryReader__ACGalgasType__generate_new_constructor inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__generate_new_constructor.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType_defaultReader_generate_new_constructor (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_bool () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__generate_new_constructor
findCategoryReader__ACGalgasType__generate_new_constructor (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__generate_new_constructor result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__generate_new_constructor.count ()) {
    result = gDispatchTableForReader__ACGalgasType__generate_new_constructor (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__generate_new_constructor (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__generate_new_constructor.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_generate_new_constructor ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lstringGalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lstringGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lstringGalgasType * operand_10825
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_10825 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lboolGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lboolGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lboolGalgasType * operand_11025
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11025 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lcharGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lcharGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lcharGalgasType * operand_11225
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11225 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@luintGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__luintGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_luintGalgasType * operand_11425
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11425 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@lsintGalgasType.generate_new_constructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lsintGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lsintGalgasType * operand_11625
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11625 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@luint64GalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__luint64GalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_luint64GalgasType * operand_11827
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_11827 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@lsint64GalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__lsint64GalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_lsint64GalgasType * operand_12029
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12029 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@ldoubleGalgasType.generate_new_constructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ldoubleGalgasType__generate_new_constructor (C_Compiler &,
                                const cPtr_ldoubleGalgasType * operand_12231
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12231 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@ACGalgasType.generate_virtual_destructor'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_ACGalgasType * operand_12734
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12734 != NULL) {
    var_cas_outGenerate = GGS_bool (true) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@ACGalgasType.generate_virtual_destructor'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__ACGalgasType__generate_virtual_destructor> gDispatchTableForReader__ACGalgasType__generate_virtual_destructor ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__ACGalgasType__generate_virtual_destructor (typeCategoryReader__ACGalgasType__generate_virtual_destructor inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__ACGalgasType__generate_virtual_destructor.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_bool
category_reader__ACGalgasType_defaultReader_generate_virtual_destructor (C_Compiler &,
                                const cPtr_ACGalgasType *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_bool () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__ACGalgasType__generate_virtual_destructor
findCategoryReader__ACGalgasType__generate_virtual_destructor (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__ACGalgasType__generate_virtual_destructor result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__ACGalgasType__generate_virtual_destructor.count ()) {
    result = gDispatchTableForReader__ACGalgasType__generate_virtual_destructor (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__ACGalgasType__generate_virtual_destructor (superClassPtr) ;
      gDispatchTableForReader__ACGalgasType__generate_virtual_destructor.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__ACGalgasType_defaultReader_generate_virtual_destructor ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@boolGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__boolGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_boolGalgasType * operand_12934
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_12934 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@functionGalgasType.generate_virtual_destructor'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__functionGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_functionGalgasType * operand_13140
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13140 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@typeGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__typeGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_typeGalgasType * operand_13342
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13342 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@uintGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__uintGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_uintGalgasType * operand_13544
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13544 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@uint64GalgasType.generate_virtual_destructor'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__uint64GalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_uint64GalgasType * operand_13748
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13748 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@sintGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__sintGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_sintGalgasType * operand_13950
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_13950 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@sint64GalgasType.generate_virtual_destructor'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__sint64GalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_sint64GalgasType * operand_14154
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_14154 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category reader '@charGalgasType.generate_virtual_destructor'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__charGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_charGalgasType * operand_14356
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_14356 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@doubleGalgasType.generate_virtual_destructor'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_bool
category_reader__doubleGalgasType__generate_virtual_destructor (C_Compiler &,
                                const cPtr_doubleGalgasType * operand_14560
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_bool var_cas_outGenerate ;
  if (operand_14560 != NULL) {
    var_cas_outGenerate = GGS_bool (false) ;
  }
  return var_cas_outGenerate ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of wrapper 'builtinTypeGenerationTemplate'          *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_builtinTypeGenerationTemplate_0 [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_builtinTypeGenerationTemplate (
  "",
  0,
  gWrapperAllFiles_builtinTypeGenerationTemplate_0,
  0,
  gWrapperAllDirectories_builtinTypeGenerationTemplate_0
) ;

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeHeader' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_unifiedTypeHeader (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapIndex & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapIndexList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_unifiedTypeMapIndexList & var_cas_MINUS_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST,
                                const GGS_string& var_cas_SUPER_CLASS_FOR_GENERATION) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_MINUS_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SUPER_CLASS_FOR_GENERATION.isBuilt () ;
  if (isBuilt) {
    result << "//---------------------------------------------------------------------------*\n"
      "//                                                                           *\n"
      "//" ;
    result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
    result << "*\n"
      "//                                                                           *\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "extern const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " ;\n"
      "\n"
      "//---------------------------------------------------------------------------*\n"
      "\n"
      "class GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " : public GALGAS_" ;
    result << var_cas_SUPER_CLASS_FOR_GENERATION.reader_identifierRepresentation () ;
    result << " {\n"
      "//--------------------------------- C++ constructor\n"
      "  protected : GALGAS_" ;
    result << var_cas_TYPE_IDENTIFIER ;
    result << " (" ;
    columnMarker = result.currentColumn () ;
    GGS_nativeAttributeList::cEnumerator enumerator_823 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
    const GGS_nativeAttributeList::cElement * operand_823 = NULL ;
    while (((operand_823 = enumerator_823.nextObject ()))) {
      macroValidPointer (operand_823) ;
      result << "const " ;
      result << operand_823->mCppClassName ;
      if (operand_823->mIsPointer.boolValue ()) {
        result << " *" ;
      }else {
      }
      if (operand_823->mUseReferenceForConstructor.boolValue ()) {
        result << " &" ;
      }else {
      }
      result << " inOperand_" ;
      result << operand_823->mAttributeName ;
      if (enumerator_823.hasNextObject ()) {
        result << ",\n" ;
        result.appendSpacesUntilColumn (columnMarker) ;
      }
    }
    if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
      result << "LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
      result << "\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (24)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- Native constructor\n"
        "  public : static GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " * constructor_new (" ;
      const GGS_string var_cas_COL_01 = GGS_string::stringWithColumnCount (result) ;
      GGS_nativeAttributeList::cEnumerator enumerator_1363 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
      const GGS_nativeAttributeList::cElement * operand_1363 = NULL ;
      while (((operand_1363 = enumerator_1363.nextObject ()))) {
        macroValidPointer (operand_1363) ;
        result << "const " ;
        result << operand_1363->mCppClassName ;
        if (operand_1363->mIsPointer.boolValue ()) {
          result << " *" ;
        }else {
        }
        if (operand_1363->mUseReferenceForConstructor.boolValue ()) {
          result << " &" ;
        }else {
        }
        result << " inOperand_" ;
        result << operand_1363->mAttributeName ;
        if (enumerator_1363.hasNextObject ()) {
          result << ",\n" ;
          result << var_cas_COL_01 ;
        }
      }
      result << "\n" ;
      result << var_cas_COL_01 ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
    }
    if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateVirtualDestructor (inLexique COMMA_SOURCE_FILE_AT_LINE (34)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- Virtual destructor\n"
        "  protected : virtual ~ GALGAS_" ;
      result << var_cas_TYPE_IDENTIFIER ;
      result << " (void) ;\n"
        "\n" ;
    }else {
    }
    if ((var_cas_CONSTRUCTOR_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "//--------------------------------- GALGAS constructors\n" ;
      GGS_constructorMap::cEnumerator enumerator_1906 (var_cas_CONSTRUCTOR_MAP, true) ;
      const GGS_constructorMap::cElement * operand_1906 = NULL ;
      while (((operand_1906 = enumerator_1906.nextObject ()))) {
        macroValidPointer (operand_1906) ;
        result << "  public : static GALGAS_" ;
        result << operand_1906->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (42)) ;
        result << " * constructor_" ;
        result << operand_1906->mKey.ggs_string ().reader_identifierRepresentation () ;
        result << " (" ;
        columnMarker = result.currentColumn () ;
        GGS_unifiedTypeMapIndexList::cEnumerator enumerator_2072 (operand_1906->mInfo.mArgumentTypeList, true) ;
        const GGS_unifiedTypeMapIndexList::cElement * operand_2072 = NULL ;
        { GGS_uint var_cas_IDX (true, 0) ;
      while (((operand_2072 = enumerator_2072.nextObject ()))) {
        macroValidPointer (operand_2072) ;
        result << "const GALGAS_" ;
        result << operand_2072->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
        result << " * inOperand" ;
        result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
        if (enumerator_2072.hasNextObject ()) {
          result << ",\n" ;
          result.appendSpacesUntilColumn (columnMarker) ;
        }
        var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
      }
    }
    if ((operand_1906->mInfo.mHasCompilerArgument).operator_and ((operand_1906->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
      result << ",\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if (operand_1906->mInfo.mHasCompilerArgument.boolValue ()) {
      result << "C_Compiler * inCompiler\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else if ((operand_1906->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
      result << "\n" ;
      result.appendSpacesUntilColumn (columnMarker) ;
      result << "COMMA_LOCATION_ARGS) ;\n"
        "\n" ;
    }else {
      result << "LOCATION_ARGS) ;\n"
        "\n" ;
    }
  }
}else {
}
result << "//--------------------------------- No copy\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "  private : GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " & operator = (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " &) ;\n"
  "\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateDescriptionReaderUtilityMethod (inLexique COMMA_SOURCE_FILE_AT_LINE (65)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- Implementation of reader 'description'\n"
    "  public : virtual void description (C_String & ioString,\n"
    "                                     const PMSInt32 inIndentation) const ;\n" ;
}else {
}
if ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
  result << "//--------------------------------- += operator\n"
    "  friend void addAssign_operation (" ;
  columnMarker = result.currentColumn () ;
  result << "GALGAS_" ;
  result << var_cas_TYPE_IDENTIFIER ;
  result << " * & ioResult" ;
  GGS_unifiedTypeMapIndexList::cEnumerator enumerator_3356 (var_cas_ADD_ASSIGN_ARGUMENT_LIST, true) ;
  const GGS_unifiedTypeMapIndexList::cElement * operand_3356 = NULL ;
  { GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3356 = enumerator_3356.nextObject ()))) {
  macroValidPointer (operand_3356) ;
  result << ",\n" ;
  result.appendSpacesUntilColumn (columnMarker) ;
  result << "const GALGAS_" ;
  result << operand_3356->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
  result << " * inOperand" ;
  result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (75)) ;
  var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n" ;
}else {
}
if ((var_cas_MINUS_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- -= operator\n"
  "  friend void minusAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_unifiedTypeMapIndexList::cEnumerator enumerator_3704 (var_cas_MINUS_ASSIGN_ARGUMENT_LIST, true) ;
const GGS_unifiedTypeMapIndexList::cElement * operand_3704 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3704 = enumerator_3704.nextObject ()))) {
macroValidPointer (operand_3704) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_3704->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (85)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
result << ") ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Modifiers\n" ;
GGS_modifierMap::cEnumerator enumerator_3906 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_3906 = NULL ;
while (((operand_3906 = enumerator_3906.nextObject ()))) {
macroValidPointer (operand_3906) ;
result << "  protected : void modifier_" ;
result << operand_3906->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_4004 (operand_3906->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_4004 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_4004 = enumerator_4004.nextObject ()))) {
macroValidPointer (operand_4004) ;
if ((operand_4004->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << operand_4004->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (98)) ;
}else if ((operand_4004->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_4004->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
}else if ((operand_4004->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_4004->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (102)) ;
}else {
result << "GALGAS_" ;
result << operand_4004->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (104)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (104)) ;
}
if (enumerator_4004.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_3906->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_3906->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_3906->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Instance Methods\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_5192 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_5192 = NULL ;
while (((operand_5192 = enumerator_5192.nextObject ()))) {
macroValidPointer (operand_5192) ;
result << "  protected : void method_" ;
result << operand_5192->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_5288 (operand_5192->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_5288 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_5288 = enumerator_5288.nextObject ()))) {
macroValidPointer (operand_5288) ;
if ((operand_5288->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << operand_5288->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (132)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (132)) ;
}else if ((operand_5288->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_5288->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (134)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (134)) ;
}else if ((operand_5288->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_5288->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (136)) ;
}else {
result << "GALGAS_" ;
result << operand_5288->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (138)) ;
}
if (enumerator_5288.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_5192->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_5192->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_5192->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Class Methods\n" ;
GGS_classMethodMap::cEnumerator enumerator_6476 (var_cas_CLASS_METHOD_MAP, true) ;
const GGS_classMethodMap::cElement * operand_6476 = NULL ;
while (((operand_6476 = enumerator_6476.nextObject ()))) {
macroValidPointer (operand_6476) ;
result << "  public : static void class_method_" ;
result << operand_6476->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_formalParameterSignature::cEnumerator enumerator_6582 (operand_6476->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_6582 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_6582 = enumerator_6582.nextObject ()))) {
macroValidPointer (operand_6582) ;
if ((operand_6582->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << operand_6582->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (166)) ;
}else if ((operand_6582->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_6582->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (168)) ;
}else if ((operand_6582->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_6582->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (170)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (170)) ;
}else {
result << "GALGAS_" ;
result << operand_6582->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (172)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (172)) ;
}
if (enumerator_6582.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_6476->mInfo.mParameterList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_6476->mInfo.mHasCompilerArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result.appendSpacesUntilColumn (columnMarker) ;
result << "LOCATION_ARGS" ;
}
}else {
if (operand_6476->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") ;\n"
  "\n" ;
}
result << "\n"
  "//--------------------------------- Readers\n" ;
GGS_readerMap::cEnumerator enumerator_7752 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_7752 = NULL ;
while (((operand_7752 = enumerator_7752.nextObject ()))) {
macroValidPointer (operand_7752) ;
if (((operand_7752->mInfo.mQualifier).operator_isNotEqual (GGS_readerQualifier::constructor_isInherited (inLexique COMMA_HERE))).operator_and ((operand_7752->mInfo.mImplicitConversionReader).operator_isEqual (GGS_string (""))).boolValue ()) {
result << "  protected : virtual GALGAS_" ;
result << operand_7752->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (198)) ;
result << " * reader_" ;
result << operand_7752->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
GGS_unifiedTypeMapIndexList::cEnumerator enumerator_8014 (operand_7752->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapIndexList::cElement * operand_8014 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_8014 = enumerator_8014.nextObject ()))) {
macroValidPointer (operand_8014) ;
result << "const GALGAS_" ;
result << operand_8014->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (200)) ;
if (enumerator_8014.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_7752->mInfo.mArgumentTypeList.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
if (operand_7752->mInfo.mHasLexiqueArgument.boolValue ()) {
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "LOCATION_ARGS" ;
}
}else {
if (operand_7752->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
}
result << ") const" ;
if ((operand_7752->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isAbstract (inLexique COMMA_HERE)).boolValue ()) {
result << " = 0" ;
}else {
}
result << " ;\n"
  "\n" ;
}else {
}
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAndOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (224)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_and (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryOrOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (231)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- | operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_or (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryXorOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (238)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ^ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_xor (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryNotOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (245)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- & operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_not (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryTildeOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (251)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ~ operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_tilde (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryConcatOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (257)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- . (concat) operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_concat (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryAddOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (264)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- + operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * add_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binarySubOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (272)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * substract_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryMulOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (280)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- * operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * multiply_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryDivOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (288)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- / operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * divide_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryModOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (296)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- mod operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * modulo_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_unaryMinusOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (304)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- unary - operator\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * operator_unary_minus (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (311)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- ++, -- operators\n"
  "  public : static void increment_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static void decrement_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_binaryShiftOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (321)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- << and >> shift operators\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * left_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n"
  "  public : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * right_shift_operation (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_uint * inShiftOperand,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_concatAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (334)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Append operator\n"
  "  protected : static GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * dotAssign_operation (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult,\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if ((((((var_cas_SUPPORTED_OPERATORS).operator_and ((function_incDecOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (341))).operator_or (function_concatAssignOperator (inLexique COMMA_SOURCE_FILE_AT_LINE (341))))).operator_isNotEqual (GGS_uint (0U))).operator_or ((var_cas_MODIFIER_MAP.reader_count ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_ADD_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)))).operator_or ((var_cas_MINUS_ASSIGN_ARGUMENT_LIST.reader_length ()).operator_strictSup (GGS_uint (0U))).boolValue ()) {
result << "//--------------------------------- Modifier utility method\n"
  "  protected : static void insulate (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioOperand\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) ;\n"
  "\n" ;
}else {
}
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_doNotGenererateObjectCompare (inLexique COMMA_SOURCE_FILE_AT_LINE (350)))).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Comparison\n"
  "  public : static PMSInt32 objectCompare (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand1,\n"
  "                                          const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inOperand2) ;\n" ;
}else {
}
result << "\n"
  "//--------------------------------- Introspection\n"
  "  public : virtual const C_galgas_type_descriptor * typeDescriptor (void) const ;\n"
  "\n"
  "//--------------------------------- Private data member\n" ;
GGS_nativeAttributeList::cEnumerator enumerator_15026 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_15026 = NULL ;
while (((operand_15026 = enumerator_15026.nextObject ()))) {
macroValidPointer (operand_15026) ;
result << "  private : " ;
if (operand_15026->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_15026->mCppClassName ;
result << " " ;
if (operand_15026->mIsPointer.boolValue ()) {
result << "* " ;
}else {
}
result << operand_15026->mAttributeName ;
result << " ;\n" ;
if ((operand_15026->mGetterName.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "  public : inline " ;
if (operand_15026->mIsPointer.boolValue ()) {
result << "const " ;
}else {
}
result << operand_15026->mCppClassName ;
result << " " ;
if (operand_15026->mIsPointer.boolValue ()) {
result << " * " ;
}else {
}
result << operand_15026->mGetterName ;
result << " (void) const { return " ;
result << operand_15026->mAttributeName ;
result << " ; }\n" ;
}else {
}
}
GGS_typedAttributeList::cEnumerator enumerator_15414 (var_cas_CURRENT_TYPE_ATTRIBUTE_LIST, true) ;
const GGS_typedAttributeList::cElement * operand_15414 = NULL ;
while (((operand_15414 = enumerator_15414.nextObject ()))) {
macroValidPointer (operand_15414) ;
result << "  private : GALGAS_" ;
result << operand_15414->mAttributeTypeIndex.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (366)) ;
result << " * mAttribute_" ;
result << operand_15414->mAttributeName.ggs_string ().reader_identifierRepresentation () ;
result << " ;\n" ;
}
result << "\n"
  "//--------------------------------- Instance Method Invocation\n" ;
GGS_instanceMethodMap::cEnumerator enumerator_15661 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_15661 = NULL ;
while (((operand_15661 = enumerator_15661.nextObject ()))) {
macroValidPointer (operand_15661) ;
result << "  friend inline void instanceMethodCall_" ;
result << operand_15661->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_15809 (operand_15661->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_15809 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_15809 = enumerator_15809.nextObject ()))) {
macroValidPointer (operand_15809) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_15809->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << operand_15809->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (375)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (375)) ;
}else if ((operand_15809->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_15809->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (377)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (377)) ;
}else if ((operand_15809->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_15809->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (379)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (379)) ;
}else {
result << "GALGAS_" ;
result << operand_15809->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (381)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (381)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_15661->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}
result << "//--------------------------------- Modifier invocation\n" ;
GGS_modifierMap::cEnumerator enumerator_16777 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_16777 = NULL ;
while (((operand_16777 = enumerator_16777.nextObject ()))) {
macroValidPointer (operand_16777) ;
result << "  friend inline void modifierCall_" ;
result << operand_16777->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_16921 (operand_16777->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_16921 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_16921 = enumerator_16921.nextObject ()))) {
macroValidPointer (operand_16921) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_16921->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << operand_16921->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (398)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (398)) ;
}else if ((operand_16921->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_16921->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (400)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (400)) ;
}else if ((operand_16921->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_16921->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (402)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (402)) ;
}else {
result << "GALGAS_" ;
result << operand_16921->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (404)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (404)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_16777->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}
result << "//--------------------------------- Reader invocation declaration\n" ;
GGS_readerMap::cEnumerator enumerator_17897 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_17897 = NULL ;
while (((operand_17897 = enumerator_17897.nextObject ()))) {
macroValidPointer (operand_17897) ;
if ((operand_17897->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "  friend GALGAS_" ;
result << operand_17897->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (418)) ;
result << " * readerCall_" ;
result << operand_17897->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_unifiedTypeMapIndexList::cEnumerator enumerator_18157 (operand_17897->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapIndexList::cElement * operand_18157 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_18157 = enumerator_18157.nextObject ()))) {
macroValidPointer (operand_18157) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "const GALGAS_" ;
result << operand_18157->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (421)) ;
result << " * inOperand" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (421)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_17897->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") ;\n"
  "\n" ;
}else {
}
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//--------------------------------- Enumeration handling\n"
  "  protected : virtual void populateEnumerationArray (const GALGAS_root * ioEnumerationArray [],\n"
  "                                                     const bool inAscending) const ;\n"
  "  public : virtual PMUInt32 count (void) const ;\n"
  "\n"
  "//--------------------------------- Enumerator declaration\n"
  "  public : class cEnumerator : public AC_GALGAS_Enumerator {\n"
  "    public : cEnumerator (const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inEnumeratedObject,\n"
  "                          const bool inAscending) ;\n"
  "  \n"
  "  //--- Attribute access\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_19124 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_19124 = NULL ;
while (((operand_19124 = enumerator_19124.nextObject ()))) {
macroValidPointer (operand_19124) ;
result << "    public : const GALGAS_" ;
result << operand_19124->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (444)) ;
result << " * attribute_" ;
result << operand_19124->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const ;\n" ;
}
result << "\n"
  "  } ;\n" ;
}else {
}
result << "} ;\n"
  "\n" ;
GGS_modifierMap::cEnumerator enumerator_19380 (var_cas_MODIFIER_MAP, true) ;
const GGS_modifierMap::cElement * operand_19380 = NULL ;
while (((operand_19380 = enumerator_19380.nextObject ()))) {
macroValidPointer (operand_19380) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "inline void modifierCall_" ;
result << operand_19380->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * & ioResult" ;
GGS_formalParameterSignature::cEnumerator enumerator_19602 (operand_19380->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_19602 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_19602 = enumerator_19602.nextObject ()))) {
macroValidPointer (operand_19602) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_19602->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << operand_19602->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (458)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (458)) ;
}else if ((operand_19602->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_19602->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (460)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (460)) ;
}else if ((operand_19602->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_19602->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (462)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (462)) ;
}else {
result << "GALGAS_" ;
result << operand_19602->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (464)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (464)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_19380->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "\n"
  "  if (ioResult != NULL) {\n"
  "    GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::insulate (ioResult COMMA_THERE) ;\n"
  "    ioResult->modifier_" ;
result << operand_19380->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_20650 (operand_19380->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_20650 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_20650 = enumerator_20650.nextObject ()))) {
macroValidPointer (operand_20650) ;
if ((operand_20650->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (479)) ;
}else if ((operand_20650->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (481)) ;
}else if ((operand_20650->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (483)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (485)) ;
}
if (enumerator_20650.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_19380->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_19380->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_19380->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;  \n"
  "  }\n"
  "}\n"
  "\n" ;
}
GGS_instanceMethodMap::cEnumerator enumerator_21456 (var_cas_INSTANCE_METHOD_MAP, true) ;
const GGS_instanceMethodMap::cElement * operand_21456 = NULL ;
while (((operand_21456 = enumerator_21456.nextObject ()))) {
macroValidPointer (operand_21456) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "inline void instanceMethodCall_" ;
result << operand_21456->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
columnMarker = result.currentColumn () ;
result << "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_formalParameterSignature::cEnumerator enumerator_21682 (operand_21456->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_21682 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_21682 = enumerator_21682.nextObject ()))) {
macroValidPointer (operand_21682) ;
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
if ((operand_21682->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "const GALGAS_" ;
result << operand_21682->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (513)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (513)) ;
}else if ((operand_21682->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_21682->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (515)) ;
result << " * & ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (515)) ;
}else if ((operand_21682->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "GALGAS_" ;
result << operand_21682->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (517)) ;
result << " * & outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (517)) ;
}else {
result << "GALGAS_" ;
result << operand_21682->mParameterType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (519)) ;
result << " * inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (519)) ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_21456->mInfo.mHasCompilerArgument.boolValue ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "C_Compiler * inCompiler\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  if (inObject != NULL) {\n"
  "    macroRetainObjectThere (inObject) ;\n"
  "    inObject->method_" ;
result << operand_21456->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_formalParameterSignature::cEnumerator enumerator_22701 (operand_21456->mInfo.mParameterList, true) ;
const GGS_formalParameterSignature::cElement * operand_22701 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_22701 = enumerator_22701.nextObject ()))) {
macroValidPointer (operand_22701) ;
if ((operand_22701->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentConstantIn (inLexique COMMA_HERE)).boolValue ()) {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (534)) ;
}else if ((operand_22701->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentInOut (inLexique COMMA_HERE)).boolValue ()) {
result << "ioArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (536)) ;
}else if ((operand_22701->mFormalParameterPassingMode).operator_isEqual (GGS_formalArgumentPassingModeAST::constructor_argumentOut (inLexique COMMA_HERE)).boolValue ()) {
result << "outArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (538)) ;
}else {
result << "inArgument" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (540)) ;
}
if (enumerator_22701.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_21456->mInfo.mParameterList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_21456->mInfo.mHasCompilerArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_21456->mInfo.mHasCompilerArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
result << ") ;  \n"
  "    macroReleaseObjectThere (inObject) ;\n"
  "  }\n"
  "}\n"
  "\n" ;
}
result << "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'unifiedTypeImplementation' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_unifiedTypeImplementation (C_Compiler & inLexique,
                                const GGS_string& var_cas_TYPE_NAME,
                                const GGS_string& var_cas_TYPE_IDENTIFIER,
                                const GGS_bool& var_cas_IS_CONCRETE,
                                const GGS_unifiedTypeMapIndex & var_cas_SUPER_TYPE_INDEX,
                                const GGS_typeKindEnum& var_cas_TYPE_KIND,
                                const GGS_typedAttributeList & var_cas_CURRENT_TYPE_ATTRIBUTE_LIST,
                                const GGS_constructorMap & var_cas_CONSTRUCTOR_MAP,
                                const GGS_readerMap & var_cas_READER_MAP,
                                const GGS_modifierMap & var_cas_MODIFIER_MAP,
                                const GGS_instanceMethodMap & var_cas_INSTANCE_METHOD_MAP,
                                const GGS_classMethodMap & var_cas_CLASS_METHOD_MAP,
                                const GGS_enumerationDescriptorList & var_cas_ENUMERATION_DESCRIPTOR_LIST,
                                const GGS_uint & var_cas_SUPPORTED_OPERATORS,
                                const GGS_unifiedTypeMapIndexList & var_cas_ADD_ASSIGN_ARGUMENT_LIST,
                                const GGS_unifiedTypeMapIndexList & var_cas_MINUS_ASSIGN_ARGUMENT_LIST,
                                const GGS_nativeAttributeList & var_cas_NATIVE_ATTRIBUTE_LIST,
                                const GGS_string& var_cas_SUPER_CLASS_FOR_GENERATION) {
  C_String result ;
  PMUInt32 columnMarker = 0 ;
  const bool isBuilt = var_cas_TYPE_NAME.isBuilt ()
    && var_cas_TYPE_IDENTIFIER.isBuilt ()
    && var_cas_IS_CONCRETE.isBuilt ()
    && var_cas_SUPER_TYPE_INDEX.isBuilt ()
    && var_cas_TYPE_KIND.isBuilt ()
    && var_cas_CURRENT_TYPE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_CONSTRUCTOR_MAP.isBuilt ()
    && var_cas_READER_MAP.isBuilt ()
    && var_cas_MODIFIER_MAP.isBuilt ()
    && var_cas_INSTANCE_METHOD_MAP.isBuilt ()
    && var_cas_CLASS_METHOD_MAP.isBuilt ()
    && var_cas_ENUMERATION_DESCRIPTOR_LIST.isBuilt ()
    && var_cas_SUPPORTED_OPERATORS.isBuilt ()
    && var_cas_ADD_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_MINUS_ASSIGN_ARGUMENT_LIST.isBuilt ()
    && var_cas_NATIVE_ATTRIBUTE_LIST.isBuilt ()
    && var_cas_SUPER_CLASS_FOR_GENERATION.isBuilt () ;
  if (isBuilt) {
result << "//---------------------------------------------------------------------------*\n"
  "//                                                                           *\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (3)))).operator_concat (GGS_string (" type")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n"
  "//                                                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (\"" ;
columnMarker = result.currentColumn () ;
result << var_cas_TYPE_NAME ;
result << "\",\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "NULL,\n"
  "                                                 " ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "(genericObjectCompareFunctionType) GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::objectCompare) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "const C_galgas_type_descriptor * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::typeDescriptor (void) const {\n"
  "  return & kTypeDescriptor_GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " ;\n"
  "}\n" ;
if (((var_cas_SUPPORTED_OPERATORS).operator_and (function_generateNativeNewConstructor (inLexique COMMA_SOURCE_FILE_AT_LINE (16)))).operator_isNotEqual (GGS_uint (0U)).boolValue ()) {
result << "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::constructor_new (" ;
columnMarker = result.currentColumn () ;
GGS_nativeAttributeList::cEnumerator enumerator_1188 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1188 = NULL ;
while (((operand_1188 = enumerator_1188.nextObject ()))) {
macroValidPointer (operand_1188) ;
result << "const " ;
result << operand_1188->mCppClassName ;
if (operand_1188->mIsPointer.boolValue ()) {
result << " *" ;
}else {
}
if (operand_1188->mUseReferenceForConstructor.boolValue ()) {
result << " &" ;
}else {
}
result << " inOperand_" ;
result << operand_1188->mAttributeName ;
if (enumerator_1188.hasNextObject ()) {
result << ",\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
}
}
result << "\n" ;
result.appendSpacesUntilColumn (columnMarker) ;
result << "COMMA_LOCATION_ARGS) {\n"
  "\n"
  "  GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * result = NULL ;\n"
  "  macroMyNew (result, GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " (" ;
GGS_nativeAttributeList::cEnumerator enumerator_1525 (var_cas_NATIVE_ATTRIBUTE_LIST, true) ;
const GGS_nativeAttributeList::cElement * operand_1525 = NULL ;
while (((operand_1525 = enumerator_1525.nextObject ()))) {
macroValidPointer (operand_1525) ;
result << "inOperand_" ;
result << operand_1525->mAttributeName ;
if (enumerator_1525.hasNextObject ()) {
result << ", " ;
}
}
if ((var_cas_NATIVE_ATTRIBUTE_LIST.reader_length ()).operator_isEqual (GGS_uint (0U)).boolValue ()) {
result << "THERE" ;
}else {
result << " COMMA_THERE" ;
}
result << ")) ;\n"
  "  return result ;\n"
  "}" ;
}else {
}
GGS_readerMap::cEnumerator enumerator_1736 (var_cas_READER_MAP, true) ;
const GGS_readerMap::cElement * operand_1736 = NULL ;
while (((operand_1736 = enumerator_1736.nextObject ()))) {
macroValidPointer (operand_1736) ;
if ((operand_1736->mInfo.mQualifier).operator_isEqual (GGS_readerQualifier::constructor_isBasic (inLexique COMMA_HERE)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "GALGAS_" ;
result << operand_1736->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (44)) ;
result << " * readerCall_" ;
result << operand_1736->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
const GGS_string var_cas_COL = GGS_string::stringWithColumnCount (result) ;
result << "const GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << " * inObject" ;
GGS_unifiedTypeMapIndexList::cEnumerator enumerator_2078 (operand_1736->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapIndexList::cElement * operand_2078 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2078 = enumerator_2078.nextObject ()))) {
macroValidPointer (operand_2078) ;
result << ",\n" ;
result << var_cas_COL ;
result << "const GALGAS_" ;
result << operand_2078->mType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
result << " * inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (47)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_1736->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ",\n" ;
result << var_cas_COL ;
result << "C_Compiler * inCompiler\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}else {
result << "\n" ;
result << var_cas_COL ;
result << "COMMA_LOCATION_ARGS" ;
}
result << ") {\n"
  "  GALGAS_" ;
result << operand_1736->mInfo.mReturnedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (55)) ;
result << " * result = NULL ;\n"
  "  if (inObject != NULL) {\n" ;
if ((operand_1736->mInfo.mImplicitConversionReader).operator_isEqual (GGS_string ("")).boolValue ()) {
result << "    result = inObject->reader_" ;
result << operand_1736->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (" ;
GGS_unifiedTypeMapIndexList::cEnumerator enumerator_2641 (operand_1736->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapIndexList::cElement * operand_2641 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_2641 = enumerator_2641.nextObject ()))) {
macroValidPointer (operand_2641) ;
result << "inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (60)) ;
if (enumerator_2641.hasNextObject ()) {
result << ", " ;
}
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if ((operand_1736->mInfo.mArgumentTypeList.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
if (operand_1736->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}else {
if (operand_1736->mInfo.mHasLexiqueArgument.boolValue ()) {
result << "inCompiler COMMA_THERE" ;
}else {
result << "THERE" ;
}
}
}else {
result << "    result = readerCall_" ;
result << operand_1736->mKey.ggs_string ().reader_identifierRepresentation () ;
result << " (inObject->reader_" ;
result << operand_1736->mInfo.mImplicitConversionReader.reader_identifierRepresentation () ;
result << " (THERE)" ;
GGS_unifiedTypeMapIndexList::cEnumerator enumerator_3229 (operand_1736->mInfo.mArgumentTypeList, true) ;
const GGS_unifiedTypeMapIndexList::cElement * operand_3229 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3229 = enumerator_3229.nextObject ()))) {
macroValidPointer (operand_3229) ;
result << ", inOperand_" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (79)) ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
if (operand_1736->mInfo.mHasLexiqueArgument.boolValue ()) {
result << ", inCompiler COMMA_THERE" ;
}else {
result << " COMMA_THERE" ;
}
}
result << ") ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
}else {
}
}
if ((var_cas_ENUMERATION_DESCRIPTOR_LIST.reader_length ()).operator_strictSup (GGS_uint (0U)).boolValue ()) {
result << "//---------------------------------------------------------------------------*\n"
  "//" ;
result << ((((GGS_string ("@")).operator_concat (var_cas_TYPE_NAME)).operator_concat (GGS_string (" "))).operator_concat (var_cas_TYPE_KIND.reader_kind (inLexique COMMA_SOURCE_FILE_AT_LINE (96)))).operator_concat (GGS_string (" enumeration")).reader_stringByLeftAndRightPadding (GGS_uint (75U), GGS_char (TO_UNICODE (' '))) ;
result << "*\n" ;
GGS_enumerationDescriptorList::cEnumerator enumerator_3785 (var_cas_ENUMERATION_DESCRIPTOR_LIST, true) ;
const GGS_enumerationDescriptorList::cElement * operand_3785 = NULL ;
{ GGS_uint var_cas_IDX (true, 0) ;
while (((operand_3785 = enumerator_3785.nextObject ()))) {
macroValidPointer (operand_3785) ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "const GALGAS_" ;
result << operand_3785->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (99)) ;
result << " * GALGAS_" ;
result << var_cas_TYPE_IDENTIFIER ;
result << "::cEnumerator::attribute_" ;
result << operand_3785->mEnumerationName.reader_identifierRepresentation () ;
result << " (void) const {\n"
  "  const GALGAS_" ;
result << operand_3785->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " * result = (const GALGAS_" ;
result << operand_3785->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " *) directAccess (" ;
result << var_cas_IDX.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (100)) ;
result << " COMMA_HERE) ;\n"
  "  macroValidObject (result, const GALGAS_" ;
result << operand_3785->mEnumeratedType.reader_identifierRepresentation (inLexique COMMA_SOURCE_FILE_AT_LINE (101)) ;
result << ") ;\n"
  "  return result ;\n"
  "}\n"
  "\n" ;
var_cas_IDX.increment_operation (inLexique COMMA_HERE) ;
}
}
}else {
}
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesHeader' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesHeader (C_Compiler & /* inLexique */,
                                const GGS_stringset & var_cas_TYPE_LIST) {
  C_String result ;
  const bool isBuilt = var_cas_TYPE_LIST.isBuilt () ;
  if (isBuilt) {
result << "\n"
  "#ifndef GALGAS2_PREDEFINED_TYPES\n"
  "#define GALGAS2_PREDEFINED_TYPES\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#include \"galgas2/GALGAS_list.h\"\n"
  "#include \"galgas2/GALGAS_sortedlist.h\"\n"
  "#include \"strings/C_String.h\"\n"
  "#include \"collections/TC_Array.h\"\n"
  "#include \"galgas-utilities/C_LocationInSource.h\"\n"
  "#include \"bdd/C_BDD.h\"\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class C_galgas_function_descriptor ;\n"
  "class C_galgas_type_descriptor ;\n"
  "class C_SourceTextInString ;\n"
  "class cStringsetNode ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "typedef TC_Array <PMUInt8> uint8Array ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n" ;
GGS_stringset::cEnumerator enumerator_782 (var_cas_TYPE_LIST, true) ;
while (enumerator_782.hasCurrentObject ()) {
result << "class GALGAS_" ;
result << enumerator_782._key (HERE).reader_identifierRepresentation () ;
result << " ;\n" ;
enumerator_782.next () ;
}
result << "class C_Compiler ;\n"
  "\n" ;
}
return GGS_string (isBuilt, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//'predefinedTypesImplementation' template of 'builtinTypeGenerationTemplate' filewrapper*
//                                                                           *
//---------------------------------------------------------------------------*

GGS_string
template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesImplementation (C_Compiler & /* inLexique */) {
  C_String result ;
result << "//---------------------------------------------------------------------------*\n"
  "\n"
  "#include \"galgas2/predefined-types.h\"\n"
  "#include \"galgas-utilities/C_Compiler.h\"\n"
  "\n" ;
  return GGS_string (true, result) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Category method '@ACGalgasType.appendGeneratedHeader'            *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ACGalgasType__appendGeneratedHeader (C_Compiler &,
                                const cPtr_ACGalgasType * operand_17834,
                                GGS_string & /* var_cas_ioHeader */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_17834 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Virtual Table for category method '@ACGalgasType.appendGeneratedHeader'   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__ACGalgasType__appendGeneratedHeader> gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ACGalgasType__appendGeneratedHeader (typeCategoryMethod__ACGalgasType__appendGeneratedHeader inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__ACGalgasType__appendGeneratedHeader
findCategoryMethod__ACGalgasType__appendGeneratedHeader (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__ACGalgasType__appendGeneratedHeader result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.count ()) {
    result = gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__ACGalgasType__appendGeneratedHeader (superClassPtr) ;
      gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Category method '@primitiveGalgasType.appendGeneratedHeader'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__primitiveGalgasType__appendGeneratedHeader (C_Compiler &,
                                const cPtr_primitiveGalgasType * operand_18014,
                                GGS_string & /* var_cas_ioHeader */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18014 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@sortedlistGalgasType.appendGeneratedHeader'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedlistGalgasType__appendGeneratedHeader (C_Compiler &,
                                const cPtr_sortedlistGalgasType * operand_18366,
                                GGS_string & /* var_cas_ioHeader */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18366 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Category method '@listGalgasType.appendGeneratedHeader'           *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listGalgasType__appendGeneratedHeader (C_Compiler &,
                                const cPtr_listGalgasType * operand_18812,
                                GGS_string & /* var_cas_ioHeader */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_18812 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Category method '@ACGalgasType.appendGeneratedImplementation'        *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__ACGalgasType__appendGeneratedImplementation (C_Compiler &,
                                const cPtr_ACGalgasType * operand_19523,
                                GGS_string & /* var_cas_ioImplementation */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19523 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category method '@ACGalgasType.appendGeneratedImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryMethod__ACGalgasType__appendGeneratedImplementation> gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__ACGalgasType__appendGeneratedImplementation (typeCategoryMethod__ACGalgasType__appendGeneratedImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

typeCategoryMethod__ACGalgasType__appendGeneratedImplementation
findCategoryMethod__ACGalgasType__appendGeneratedImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryMethod__ACGalgasType__appendGeneratedImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.count ()) {
    result = gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryMethod__ACGalgasType__appendGeneratedImplementation (superClassPtr) ;
      gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Category method '@listGalgasType.appendGeneratedImplementation'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__listGalgasType__appendGeneratedImplementation (C_Compiler &,
                                const cPtr_listGalgasType * operand_19714,
                                GGS_string & /* var_cas_ioImplementation */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_19714 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category method '@sortedlistGalgasType.appendGeneratedImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__sortedlistGalgasType__appendGeneratedImplementation (C_Compiler &,
                                const cPtr_sortedlistGalgasType * operand_20154,
                                GGS_string & /* var_cas_ioImplementation */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20154 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Category method '@primitiveGalgasType.appendGeneratedImplementation'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void
category_method__primitiveGalgasType__appendGeneratedImplementation (C_Compiler &,
                                const cPtr_primitiveGalgasType * operand_20636,
                                GGS_string & /* var_cas_ioImplementation */
                                COMMA_UNUSED_LOCATION_ARGS) {
  if (operand_20636 != NULL) {
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@semanticDeclarationAST.appendSpecificImplementation'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationAST__appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationAST * operand_21324
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_21324 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Virtual Table for category reader '@semanticDeclarationAST.appendSpecificImplementation'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <typeCategoryReader__semanticDeclarationAST__appendSpecificImplementation> gDispatchTableForReader__semanticDeclarationAST__appendSpecificImplementation ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticDeclarationAST__appendSpecificImplementation (typeCategoryReader__semanticDeclarationAST__appendSpecificImplementation inRoutine,
                     const PMSInt32 inClassID) {
  gDispatchTableForReader__semanticDeclarationAST__appendSpecificImplementation.forceObjectAtIndex (inClassID, inRoutine, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static GGS_string
category_reader__semanticDeclarationAST_defaultReader_appendSpecificImplementation (C_Compiler &,
                                const cPtr_semanticDeclarationAST *
                                COMMA_UNUSED_LOCATION_ARGS) {
  return GGS_string () ;
}

//---------------------------------------------------------------------------*

typeCategoryReader__semanticDeclarationAST__appendSpecificImplementation
findCategoryReader__semanticDeclarationAST__appendSpecificImplementation (AC_galgasClassRunTimeInformationEX * inClassPtr) {
  typeCategoryReader__semanticDeclarationAST__appendSpecificImplementation result = NULL ;
  if (inClassPtr->slotID () < gDispatchTableForReader__semanticDeclarationAST__appendSpecificImplementation.count ()) {
    result = gDispatchTableForReader__semanticDeclarationAST__appendSpecificImplementation (inClassPtr->slotID () COMMA_HERE) ;
  }
  if (result == NULL) {
    AC_galgasClassRunTimeInformationEX * superClassPtr = inClassPtr->superClassPtr () ;
    if (superClassPtr != NULL) {
      result = findCategoryReader__semanticDeclarationAST__appendSpecificImplementation (superClassPtr) ;
      gDispatchTableForReader__semanticDeclarationAST__appendSpecificImplementation.forceObjectAtIndex (inClassPtr->slotID (), result, NULL COMMA_HERE) ;
    }
  }
  if (NULL == result) {
    result = category_reader__semanticDeclarationAST_defaultReader_appendSpecificImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Category reader '@listDeclarationAST.appendSpecificImplementation'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__listDeclarationAST__appendSpecificImplementation (C_Compiler &,
                                const cPtr_listDeclarationAST * operand_21540
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_21540 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@sortedListDeclarationAST.appendSpecificImplementation'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GGS_string
category_reader__sortedListDeclarationAST__appendSpecificImplementation (C_Compiler &,
                                const cPtr_sortedListDeclarationAST * operand_22012
                                COMMA_UNUSED_LOCATION_ARGS) {
  GGS_string var_cas_outImplementation ;
  if (operand_22012 != NULL) {
var_cas_outImplementation = GGS_string ("") ;
  }
  return var_cas_outImplementation ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "generateHeadersOfBuiltinTypes"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateHeadersOfBuiltinTypes (C_Compiler & inLexique,
                                const GGS_string  var_cas_inDirectory COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateHeadersOfBuiltinTypes at %s:%d\n", __FILE__, __LINE__) ;
  #endif
const GGS_bool cond_26783 = (var_cas_inDirectory).operator_isNotEqual (GGS_string ("")) ;
if (cond_26783.isBuiltAndTrue ()) {
const GGS_bool cond_22987 = (var_cas_inDirectory.reader_directoryExists ()).operator_not () ;
if (cond_22987.isBuiltAndTrue ()) {
GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("the '")).operator_concat (var_cas_inDirectory)).operator_concat (GGS_string ("' directory does not exist")) COMMA_SOURCE_FILE_AT_LINE (530)) ;
}else if (cond_22987.isBuiltAndFalse ()) {
GGS_semanticDeclarationListAST  var_cas_predefinedTypeASTlist = GGS_semanticDeclarationListAST ::constructor_emptyList () ;
::routine_appendPredefinedTypesASTs (inLexique,  var_cas_predefinedTypeASTlist COMMA_SOURCE_FILE_AT_LINE (575)) ;
GGS_semanticContext var_cas_semanticContext ;
::routine_buildSemanticContext (inLexique,  var_cas_predefinedTypeASTlist,  GGS_location (inLexique),  var_cas_semanticContext COMMA_SOURCE_FILE_AT_LINE (578)) ;
GGS_semanticDeclarationListForGeneration  var_cas_decoratedDeclarationListForGeneration ;
::routine_performSemanticAnalysis (inLexique,  var_cas_semanticContext,  var_cas_decoratedDeclarationListForGeneration COMMA_SOURCE_FILE_AT_LINE (584)) ;
GGS_string var_cas_generatedCode = template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesHeader (inLexique, var_cas_semanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (589)).reader_allKeys (inLexique COMMA_SOURCE_FILE_AT_LINE (589))) ;
{
GGS_unifiedTypeMap::cEnumerator enumerator_24754 (var_cas_semanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (591)), true) ;
const GGS_unifiedTypeMap::cElement * operand_24754 = NULL ;
while (((operand_24754 = enumerator_24754.nextObject ()))) {
  macroValidPointer (operand_24754) ;
var_cas_generatedCode.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_unifiedTypeHeader (inLexique, operand_24754->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (593)), operand_24754->mKey.ggs_string ().reader_identifierRepresentation (), operand_24754->mInfo.mIsConcrete, operand_24754->mInfo.mSuperType, operand_24754->mInfo.mTypeKindEnum, operand_24754->mInfo.mCurrentTypedAttributeList, operand_24754->mInfo.mConstructorMap, operand_24754->mInfo.mReaderMap, operand_24754->mInfo.mModifierMap, operand_24754->mInfo.mInstanceMethodMap, operand_24754->mInfo.mClassMethodMap, operand_24754->mInfo.mEnumerationDescriptor, operand_24754->mInfo.mHandledOperatorFlags, operand_24754->mInfo.mAddAssignOperatorArguments, operand_24754->mInfo.mMinusAssignOperatorArguments, operand_24754->mInfo.mNativeAttributeList, operand_24754->mInfo.mSuperClassForCodeGeneration)) ;
}
}
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types-2.h"), GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_generatedCode, GGS_string ("\n"
  "\n"), GGS_string ("#endif\n") COMMA_SOURCE_FILE_AT_LINE (612)) ;
var_cas_generatedCode = template_filewrapper_builtinTypeGenerationTemplate_predefinedTypesImplementation (inLexique) ;
{
GGS_unifiedTypeMap::cEnumerator enumerator_25799 (var_cas_semanticContext.reader_mTypeMap (inLexique COMMA_SOURCE_FILE_AT_LINE (623)), true) ;
const GGS_unifiedTypeMap::cElement * operand_25799 = NULL ;
while (((operand_25799 = enumerator_25799.nextObject ()))) {
  macroValidPointer (operand_25799) ;
var_cas_generatedCode.dotAssign_operation (template_filewrapper_builtinTypeGenerationTemplate_unifiedTypeImplementation (inLexique, operand_25799->mKey.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (625)), operand_25799->mKey.ggs_string ().reader_identifierRepresentation (), operand_25799->mInfo.mIsConcrete, operand_25799->mInfo.mSuperType, operand_25799->mInfo.mTypeKindEnum, operand_25799->mInfo.mCurrentTypedAttributeList, operand_25799->mInfo.mConstructorMap, operand_25799->mInfo.mReaderMap, operand_25799->mInfo.mModifierMap, operand_25799->mInfo.mInstanceMethodMap, operand_25799->mInfo.mClassMethodMap, operand_25799->mInfo.mEnumerationDescriptor, operand_25799->mInfo.mHandledOperatorFlags, operand_25799->mInfo.mAddAssignOperatorArguments, operand_25799->mInfo.mMinusAssignOperatorArguments, operand_25799->mInfo.mNativeAttributeList, operand_25799->mInfo.mSuperClassForCodeGeneration)) ;
var_cas_generatedCode.dotAssign_operation ((findCategoryReader__semanticDeclarationAST__appendSpecificImplementation (operand_25799->mInfo.mDeclarationAST (HERE)->galgasRTTI ()) (inLexique, operand_25799->mInfo.mDeclarationAST.getPtr () COMMA_SOURCE_FILE_AT_LINE (643)))) ;
}
}
GGS_string::class_method_generateFile (inLexique, var_cas_inDirectory, GGS_string ("predefined-types-2.cpp"), GGS_string ("//"), GGS_string ("\n"
  "\n"), var_cas_generatedCode, GGS_string ("\n"
  "\n"), GGS_string ("") COMMA_SOURCE_FILE_AT_LINE (645)) ;
}
}
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateHeadersOfBuiltinTypes\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      Prologue and epilogue actions                        *
//                                                                           *
//---------------------------------------------------------------------------*

static void prologueRoutineFor_generatePredefinedTypes (void) {
  enterCategoryReader__ACGalgasType__attributeDescriptionList (category_reader__ACGalgasType__attributeDescriptionList, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__boolGalgasType__attributeDescriptionList, gClassInfoFor__boolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__stringsetGalgasType__attributeDescriptionList, gClassInfoFor__stringsetGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__charGalgasType__attributeDescriptionList, gClassInfoFor__charGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__stringGalgasType__attributeDescriptionList, gClassInfoFor__stringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__uintGalgasType__attributeDescriptionList, gClassInfoFor__uintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__sintGalgasType__attributeDescriptionList, gClassInfoFor__sintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__uint64GalgasType__attributeDescriptionList, gClassInfoFor__uint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__sint64GalgasType__attributeDescriptionList, gClassInfoFor__sint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__doubleGalgasType__attributeDescriptionList, gClassInfoFor__doubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__locationGalgasType__attributeDescriptionList, gClassInfoFor__locationGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__objectGalgasType__attributeDescriptionList, gClassInfoFor__objectGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__typeGalgasType__attributeDescriptionList, gClassInfoFor__typeGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__functionGalgasType__attributeDescriptionList, gClassInfoFor__functionGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lstringGalgasType__attributeDescriptionList, gClassInfoFor__lstringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lcharGalgasType__attributeDescriptionList, gClassInfoFor__lcharGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__luintGalgasType__attributeDescriptionList, gClassInfoFor__luintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lsintGalgasType__attributeDescriptionList, gClassInfoFor__lsintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__luint64GalgasType__attributeDescriptionList, gClassInfoFor__luint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lsint64GalgasType__attributeDescriptionList, gClassInfoFor__lsint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__lboolGalgasType__attributeDescriptionList, gClassInfoFor__lboolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__ldoubleGalgasType__attributeDescriptionList, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__binarysetGalgasType__attributeDescriptionList, gClassInfoFor__binarysetGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__attributeDescriptionList ((typeCategoryReader__ACGalgasType__attributeDescriptionList) category_reader__dataGalgasType__attributeDescriptionList, gClassInfoFor__dataGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor (category_reader__ACGalgasType__generate_new_constructor, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lstringGalgasType__generate_new_constructor, gClassInfoFor__lstringGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lboolGalgasType__generate_new_constructor, gClassInfoFor__lboolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lcharGalgasType__generate_new_constructor, gClassInfoFor__lcharGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__luintGalgasType__generate_new_constructor, gClassInfoFor__luintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lsintGalgasType__generate_new_constructor, gClassInfoFor__lsintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__luint64GalgasType__generate_new_constructor, gClassInfoFor__luint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__lsint64GalgasType__generate_new_constructor, gClassInfoFor__lsint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_new_constructor ((typeCategoryReader__ACGalgasType__generate_new_constructor) category_reader__ldoubleGalgasType__generate_new_constructor, gClassInfoFor__ldoubleGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor (category_reader__ACGalgasType__generate_virtual_destructor, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__boolGalgasType__generate_virtual_destructor, gClassInfoFor__boolGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__functionGalgasType__generate_virtual_destructor, gClassInfoFor__functionGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__typeGalgasType__generate_virtual_destructor, gClassInfoFor__typeGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__uintGalgasType__generate_virtual_destructor, gClassInfoFor__uintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__uint64GalgasType__generate_virtual_destructor, gClassInfoFor__uint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__sintGalgasType__generate_virtual_destructor, gClassInfoFor__sintGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__sint64GalgasType__generate_virtual_destructor, gClassInfoFor__sint64GalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__charGalgasType__generate_virtual_destructor, gClassInfoFor__charGalgasType.slotID ()) ;
  enterCategoryReader__ACGalgasType__generate_virtual_destructor ((typeCategoryReader__ACGalgasType__generate_virtual_destructor) category_reader__doubleGalgasType__generate_virtual_destructor, gClassInfoFor__doubleGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader (category_method__ACGalgasType__appendGeneratedHeader, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__primitiveGalgasType__appendGeneratedHeader, gClassInfoFor__primitiveGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__sortedlistGalgasType__appendGeneratedHeader, gClassInfoFor__sortedlistGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedHeader ((typeCategoryMethod__ACGalgasType__appendGeneratedHeader) category_method__listGalgasType__appendGeneratedHeader, gClassInfoFor__listGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation (category_method__ACGalgasType__appendGeneratedImplementation, gClassInfoFor__ACGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__listGalgasType__appendGeneratedImplementation, gClassInfoFor__listGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__sortedlistGalgasType__appendGeneratedImplementation, gClassInfoFor__sortedlistGalgasType.slotID ()) ;
  enterCategoryMethod__ACGalgasType__appendGeneratedImplementation ((typeCategoryMethod__ACGalgasType__appendGeneratedImplementation) category_method__primitiveGalgasType__appendGeneratedImplementation, gClassInfoFor__primitiveGalgasType.slotID ()) ;
  enterCategoryReader__semanticDeclarationAST__appendSpecificImplementation (category_reader__semanticDeclarationAST__appendSpecificImplementation, gClassInfoFor__semanticDeclarationAST.slotID ()) ;
  enterCategoryReader__semanticDeclarationAST__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationAST__appendSpecificImplementation) category_reader__listDeclarationAST__appendSpecificImplementation, gClassInfoFor__listDeclarationAST.slotID ()) ;
  enterCategoryReader__semanticDeclarationAST__appendSpecificImplementation ((typeCategoryReader__semanticDeclarationAST__appendSpecificImplementation) category_reader__sortedListDeclarationAST__appendSpecificImplementation, gClassInfoFor__sortedListDeclarationAST.slotID ()) ;
}

//---------------------------------------------------------------------------*

static void epilogueRoutineFor_generatePredefinedTypes (void) {
  gDispatchTableForReader__ACGalgasType__attributeDescriptionList.free () ;
  gDispatchTableForReader__ACGalgasType__generate_new_constructor.free () ;
  gDispatchTableForReader__ACGalgasType__generate_virtual_destructor.free () ;
  gDispatchTableForMethod__ACGalgasType__appendGeneratedHeader.free () ;
  gDispatchTableForMethod__ACGalgasType__appendGeneratedImplementation.free () ;
  gDispatchTableForReader__semanticDeclarationAST__appendSpecificImplementation.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue prologueEpilogueObjectFor_generatePredefinedTypes (prologueRoutineFor_generatePredefinedTypes, epilogueRoutineFor_generatePredefinedTypes) ;

//---------------------------------------------------------------------------*

