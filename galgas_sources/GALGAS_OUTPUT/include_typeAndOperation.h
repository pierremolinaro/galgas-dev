//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'include_typeAndOperation.h'                      *
//         Generated by version GALGAS_BETA_VERSION (LL(1) grammar)          *
//                      march 12th, 2006, at 21h17'31"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//                      class 'cPtr_typeAndOperation'                        *
//                                                                           *
//---------------------------------------------------------------------------*

#ifndef typeAndOperation_DEFINED
#define typeAndOperation_DEFINED

class cPtr_typeAndOperation : public cPtr_typeExpression {
  private : typedef cPtr_typeExpression inherited ;
//--- START OF USER ZONE 2

public : virtual void generateExpression (AC_OutputStream & inCppFile) ;
public : virtual bool isLexiqueFormalArgumentUsedForTest (void) const  ;
public : virtual bool formalArgumentIsUsedForTest (const GGS_typeCplusPlusName & inArgumentCppName) const ;

//--- END OF USER ZONE 2

  public : cPtr_typeAndOperation (const GGS_typeExpression & ,
                                const GGS_typeExpression &  COMMA_LOCATION_ARGS) ;
  public : GGS_typeExpression  mLeftExpression ;
  public : GGS_typeExpression  mRightExpression ;
} ;

//---------------------------------------------------------------------------*

class GGG_typeAndOperation : public GGG_typeExpression {
  private : typedef GGG_typeExpression inherited ;
  public : GGG_typeAndOperation (const GGS_typeExpression & ,
                                const GGS_typeExpression &  COMMA_LOCATION_ARGS) ;
} ;

//---------------------------------------------------------------------------*

#endif

