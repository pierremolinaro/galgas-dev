//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'templateSyntax.cpp'                          *
//             Generated by version version GALGAS_BETA_VERSION              *
//                     november 26th, 2010, at 19h4'0"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "templateSyntax.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "templateSyntax.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'enterTemplateString'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterTemplateString (GALGAS_templateInstructionListAST & ioArgument_outResultingInstructionList,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_s = GALGAS_string::constructor_retrieveAndResetTemplateString (inCompiler COMMA_SOURCE_FILE_AT_LINE (591)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsStrictSup, var_s.reader_length (SOURCE_FILE_AT_LINE (592)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @addAssignInstructionForGeneration
    ioArgument_outResultingInstructionList.addAssign_operation (GALGAS_templateInstructionStringAST::constructor_new (var_s COMMA_SOURCE_FILE_AT_LINE (593)) COMMA_SOURCE_FILE_AT_LINE (593)) ;
  }
}


//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_expression_i0_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                 C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_concatenation_5F_term_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_0 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (77)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightOperand ;
      //-------- @nonterminalInstructionForGeneration
      nt_concatenation_5F_term_ (var_rightOperand, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateConcatOperationAST::constructor_new (var_operatorLocation, outArgument_outExpression, var_rightOperand COMMA_SOURCE_FILE_AT_LINE (80)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_concatenation_5F_term_i1_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                            C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_term_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_1 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (97)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftOperand = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightOperand ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (var_rightOperand, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateOrOperationAST::constructor_new (var_operatorLocation, var_leftOperand, var_rightOperand COMMA_SOURCE_FILE_AT_LINE (101)) ;
    } break ;
    case 3: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (104)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftOperand = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightOperand ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (var_rightOperand, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateXorOperationAST::constructor_new (var_operatorLocation, var_leftOperand, var_rightOperand COMMA_SOURCE_FILE_AT_LINE (108)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_relation_5F_term_i2_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                       C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_factor_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_2 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (125)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftOperand = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightOperand ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_factor_ (var_rightOperand, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateAndOperationAST::constructor_new (var_operatorLocation, var_leftOperand, var_rightOperand COMMA_SOURCE_FILE_AT_LINE (129)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_relation_5F_factor_i3_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                         C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_simple_5F_expression_ (outArgument_outExpression, inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (146)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateEqualTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (150)) ;
  } break ;
  case 3: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (153)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateNonEqualTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (157)) ;
  } break ;
  case 4: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (160)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateInfOrEqualTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (164)) ;
  } break ;
  case 5: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (167)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateSupOrEqualTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (171)) ;
  } break ;
  case 6: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (174)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateStrictSupTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (178)) ;
  } break ;
  case 7: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (181)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateStrictInfTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (185)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_simple_5F_expression_i4_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                           C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_term_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_4 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (202)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateLeftShiftOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (206)) ;
    } break ;
    case 3: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (209)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateRightShiftOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (213)) ;
    } break ;
    case 4: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (216)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateAddOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (220)) ;
    } break ;
    case 5: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (223)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateSubOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (227)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_term_i5_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                           C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_5 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (244)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateMultiplyOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (248)) ;
    } break ;
    case 3: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (251)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateDivideOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (255)) ;
    } break ;
    case 4: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_mod) COMMA_SOURCE_FILE_AT_LINE (258)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateModuloOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (262)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i6_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_operatorLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (276)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_expression ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (var_expression, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateUnaryMinusOperationAST::constructor_new (var_operatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (279)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i7_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_identifier = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (291)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateVarInExpressionAST::constructor_new (var_identifier, GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (292)) COMMA_SOURCE_FILE_AT_LINE (292)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i8_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (304)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (outArgument_outExpression, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (306)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i9_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_operatorLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_not) COMMA_SOURCE_FILE_AT_LINE (319)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_ifCondition ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (var_ifCondition, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateNotOperatorAST::constructor_new (var_operatorLocation, var_ifCondition COMMA_SOURCE_FILE_AT_LINE (322)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i10_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_operatorLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (335)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_ifCondition ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (var_ifCondition, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLogicalNegateAST::constructor_new (var_operatorLocation, var_ifCondition COMMA_SOURCE_FILE_AT_LINE (338)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i11_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_true) COMMA_SOURCE_FILE_AT_LINE (350)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateTrueBoolAST::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (351)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i12_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_false) COMMA_SOURCE_FILE_AT_LINE (363)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateFalseBoolAST::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (364)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i13_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_uint_33__32_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_unsigned_5F_literal_5F_integer) COMMA_SOURCE_FILE_AT_LINE (377)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralUIntExpressionAST::constructor_new (var_literalInt COMMA_SOURCE_FILE_AT_LINE (378)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i14_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lsint var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_sint_33__32_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_signed_5F_literal_5F_integer) COMMA_SOURCE_FILE_AT_LINE (391)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralSIntExpressionAST::constructor_new (var_literalInt COMMA_SOURCE_FILE_AT_LINE (392)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i15_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint_36__34_ var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_uint_36__34_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_unsigned_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (405)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralUInt_36__34_ExpressionAST::constructor_new (var_literalInt COMMA_SOURCE_FILE_AT_LINE (406)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i16_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lsint_36__34_ var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_sint_36__34_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_signed_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (419)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralSInt_36__34_ExpressionAST::constructor_new (var_literalInt COMMA_SOURCE_FILE_AT_LINE (420)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i17_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_ldouble var_literalDouble ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalDouble = inCompiler->synthetizedAttribute_floatValue () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_literal_5F_double) COMMA_SOURCE_FILE_AT_LINE (433)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralDoubleExpressionAST::constructor_new (var_literalDouble COMMA_SOURCE_FILE_AT_LINE (434)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i18_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lchar var_literalChar = inCompiler->synthetizedAttribute_charValue () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_literal_5F_char) COMMA_SOURCE_FILE_AT_LINE (446)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralCharExpressionAST::constructor_new (var_literalChar COMMA_SOURCE_FILE_AT_LINE (447)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i19_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_literalStringList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (459)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_lstring var_literalString ;
    //-------- @terminalCheckInstructionForGeneration
    var_literalString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (462)) ;
    //-------- @addAssignInstructionForGeneration
    var_literalStringList.addAssign_operation (var_literalString.reader_string (SOURCE_FILE_AT_LINE (463)) COMMA_SOURCE_FILE_AT_LINE (463)) ;
    switch (select_templateSyntax_6 (inCompiler)) {
    case 2: {
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralStringExpressionAST::constructor_new (var_literalStringList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (466)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i20_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (484)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_7 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_template) COMMA_SOURCE_FILE_AT_LINE (487)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_receiverExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_ (var_receiverExpression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_templateName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (490)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionListAST var_expressionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateCategoryTemplateCallAST::constructor_new (var_receiverExpression, var_templateName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (493)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_typeName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_type_5F_name) COMMA_SOURCE_FILE_AT_LINE (499)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_constructorName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (500)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionListAST var_expressionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateConstructorAST::constructor_new (var_typeName, var_constructorName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (503)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_filewrapper) COMMA_SOURCE_FILE_AT_LINE (509)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_filewrapperName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (510)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (511)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_templateName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (512)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionListAST var_expressionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateFileWrapperTemplateCallAST::constructor_new (var_filewrapperName, var_templateName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (515)) ;
  } break ;
  case 4: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_receiverExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_ (var_receiverExpression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_readerName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (519)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionListAST var_expressionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateReaderCallInExpressionAST::constructor_new (var_receiverExpression, var_readerName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (522)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_option) COMMA_SOURCE_FILE_AT_LINE (528)) ;
    //-------- @selectInstructionForGeneration
    switch (select_templateSyntax_8 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (530)) ;
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_optionName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (531)) ;
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_readerName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (532)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateOptionAccessAST::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("galgas_cli_options"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (533)), var_optionName, var_readerName COMMA_SOURCE_FILE_AT_LINE (533)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_optionComponentName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (535)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (536)) ;
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_optionName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (537)) ;
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_readerName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (538)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateOptionAccessAST::constructor_new (var_optionComponentName, var_optionName, var_readerName COMMA_SOURCE_FILE_AT_LINE (539)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (542)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i21_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                              C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_functionName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (555)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionListAST var_expressionList ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (557)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (559)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateFunctionCallAST::constructor_new (var_functionName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (560)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_output_5F_expression_5F_list_i22_ (GALGAS_templateExpressionListAST & outArgument_outExpressionList,
                                                                                    C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpressionList.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpressionList = GALGAS_templateExpressionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (572)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_9 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (575)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_expression ;
      //-------- @nonterminalInstructionForGeneration
      nt_expression_ (var_expression, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      outArgument_outExpressionList.addAssign_operation (var_expression, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (578)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i23_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (602)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_expression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_expression, inCompiler) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionExpressionAST::constructor_new (var_expression, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (605)) COMMA_SOURCE_FILE_AT_LINE (605)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i24_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3F__5E_) COMMA_SOURCE_FILE_AT_LINE (613)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionGetColumnLocationAST::constructor_new (SOURCE_FILE_AT_LINE (614)) COMMA_SOURCE_FILE_AT_LINE (614)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i25_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__21__5E_) COMMA_SOURCE_FILE_AT_LINE (622)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionGotoColumnLocationAST::constructor_new (SOURCE_FILE_AT_LINE (623)) COMMA_SOURCE_FILE_AT_LINE (623)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i26_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_block) COMMA_SOURCE_FILE_AT_LINE (631)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_expression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_expression, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (634)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_blockInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (636)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_enterTemplateString (var_blockInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (637)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_10 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_template_5F_instruction_ (var_blockInstructionList, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_enterTemplateString (var_blockInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (641)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (644)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_block) COMMA_SOURCE_FILE_AT_LINE (645)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateBlockInstructionAST::constructor_new (var_expression, inCompiler->here (), var_blockInstructionList COMMA_SOURCE_FILE_AT_LINE (646)) COMMA_SOURCE_FILE_AT_LINE (646)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i27_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_foreach) COMMA_SOURCE_FILE_AT_LINE (658)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_ascending ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_11 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_ascending = GALGAS_bool (true) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (663)) ;
    //-------- @assignmentInstructionForGeneration
    var_ascending = GALGAS_bool (true) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (666)) ;
    //-------- @assignmentInstructionForGeneration
    var_ascending = GALGAS_bool (false) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_expression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_expression, inCompiler) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_foreachPrefix ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_12 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_foreachPrefix = GALGAS_string::makeEmptyString () ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_prefixedby) COMMA_SOURCE_FILE_AT_LINE (675)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_prefixString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (676)) ;
    //-------- @assignmentInstructionForGeneration
    var_foreachPrefix = var_prefixString.reader_string (SOURCE_FILE_AT_LINE (677)) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_beforeInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (680)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_13 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_before) COMMA_SOURCE_FILE_AT_LINE (683)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_beforeInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (684)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_templateSyntax_14 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_beforeInstructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_beforeInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (688)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (692)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_indexIdentifier ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_15 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_indexIdentifier = GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (695)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_index) COMMA_SOURCE_FILE_AT_LINE (697)) ;
    //-------- @terminalCheckInstructionForGeneration
    var_indexIdentifier = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (698)) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_doInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (700)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_enterTemplateString (var_doInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (701)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_templateSyntax_16 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_template_5F_instruction_ (var_doInstructionList, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_enterTemplateString (var_doInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (705)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_betweenInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (708)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_17 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (711)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_betweenInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (712)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      switch (select_templateSyntax_18 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_betweenInstructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_betweenInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (716)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_afterInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (720)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_19 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_after) COMMA_SOURCE_FILE_AT_LINE (723)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_afterInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (724)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_3 = true ;
    while (repeatFlag_3) {
      switch (select_templateSyntax_20 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_beforeInstructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_afterInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (728)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_3 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (732)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_foreach) COMMA_SOURCE_FILE_AT_LINE (733)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionForeachAST::constructor_new (var_ascending, var_expression, var_foreachPrefix, var_beforeInstructionList, var_doInstructionList, var_indexIdentifier, var_betweenInstructionList, var_afterInstructionList COMMA_SOURCE_FILE_AT_LINE (734)) COMMA_SOURCE_FILE_AT_LINE (734)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i28_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (751)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionIfBranchListAST var_templateInstructionIfBranchList = GALGAS_templateInstructionIfBranchListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (752)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_expression ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_ (var_expression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_then) COMMA_SOURCE_FILE_AT_LINE (756)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_templateInstructionListAST var_instructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (757)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (758)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_1 = true ;
    while (repeatFlag_1) {
      switch (select_templateSyntax_22 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_instructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (762)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_1 = false ;
        break ;
      }
    }
    //-------- @addAssignInstructionForGeneration
    var_templateInstructionIfBranchList.addAssign_operation (var_expression, var_instructionList COMMA_SOURCE_FILE_AT_LINE (764)) ;
    switch (select_templateSyntax_21 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_elsif) COMMA_SOURCE_FILE_AT_LINE (766)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_elseInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (769)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_23 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_else) COMMA_SOURCE_FILE_AT_LINE (772)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_elseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (773)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      switch (select_templateSyntax_24 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_elseInstructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_elseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (777)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (781)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (782)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionIfAST::constructor_new (var_templateInstructionIfBranchList, var_elseInstructionList COMMA_SOURCE_FILE_AT_LINE (783)) COMMA_SOURCE_FILE_AT_LINE (783)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i29_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_switch) COMMA_SOURCE_FILE_AT_LINE (794)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_switchExpression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_switchExpression, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionSwitchBranchListAST var_templateInstructionSwitchBranchList = GALGAS_templateInstructionSwitchBranchListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (799)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_25 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_when) COMMA_SOURCE_FILE_AT_LINE (802)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_lstringlist var_constantList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (803)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        //-------- @terminalCheckInstructionForGeneration
        GALGAS_lstring var_constantName = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (805)) ;
        //-------- @addAssignInstructionForGeneration
        var_constantList.addAssign_operation (var_constantName COMMA_SOURCE_FILE_AT_LINE (806)) ;
        switch (select_templateSyntax_26 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (808)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (810)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_templateInstructionListAST var_instructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (811)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_enterTemplateString (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (812)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        switch (select_templateSyntax_27 (inCompiler)) {
        case 2: {
          //-------- @nonterminalInstructionForGeneration
          nt_template_5F_instruction_ (var_instructionList, inCompiler) ;
          { //-------- @routineCallInstructionForGeneration
          routine_enterTemplateString (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (816)) ;
          } //-------- @routineCallInstructionForGeneration
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
      //-------- @addAssignInstructionForGeneration
      var_templateInstructionSwitchBranchList.addAssign_operation (var_constantList, var_instructionList COMMA_SOURCE_FILE_AT_LINE (818)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (821)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_switch) COMMA_SOURCE_FILE_AT_LINE (822)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionSwitchAST::constructor_new (var_switchExpression, var_templateInstructionSwitchBranchList COMMA_SOURCE_FILE_AT_LINE (823)) COMMA_SOURCE_FILE_AT_LINE (823)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_parser_5F_start_5F_symbol_i30_ (GALGAS_templateInstructionListAST & outArgument_outResultingInstructionList,
                                                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outResultingInstructionList.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultingInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (834)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_enterTemplateString (outArgument_outResultingInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (835)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_28 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_template_5F_instruction_ (outArgument_outResultingInstructionList, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_enterTemplateString (outArgument_outResultingInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (841)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


