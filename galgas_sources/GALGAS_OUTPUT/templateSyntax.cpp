//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'templateSyntax.cpp'                          *
//             Generated by version version GALGAS_BETA_VERSION              *
//                    november 29th, 2010, at 11h49'34"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "templateSyntax.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "templateSyntax.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'enterTemplateString'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterTemplateString (GALGAS_templateInstructionListAST & ioArgument_outResultingInstructionList,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_s = GALGAS_string::constructor_retrieveAndResetTemplateString (inCompiler COMMA_SOURCE_FILE_AT_LINE (569)) ;
  //-------- @ifInstructionForGeneration
  const GALGAS_bool test_0 (GALGAS_bool (kIsStrictSup, var_s.reader_length (SOURCE_FILE_AT_LINE (570)).objectCompare (GALGAS_uint ((PMUInt32) 0U)))) ;
  if (test_0.isValidAndTrue ()) {
    //-------- @addAssignInstructionForGeneration
    ioArgument_outResultingInstructionList.addAssign_operation (GALGAS_templateInstructionStringAST::constructor_new (var_s COMMA_SOURCE_FILE_AT_LINE (571)) COMMA_SOURCE_FILE_AT_LINE (571)) ;
  }
}


//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_expression_i0_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                 C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_concatenation_5F_term_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_0 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (37)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightOperand ;
      //-------- @nonterminalInstructionForGeneration
      nt_concatenation_5F_term_ (var_rightOperand, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateConcatOperationAST::constructor_new (var_operatorLocation, outArgument_outExpression, var_rightOperand COMMA_SOURCE_FILE_AT_LINE (40)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_concatenation_5F_term_i1_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                            C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_term_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_1 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__7C_) COMMA_SOURCE_FILE_AT_LINE (57)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftOperand = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightOperand ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (var_rightOperand, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateOrOperationAST::constructor_new (var_operatorLocation, var_leftOperand, var_rightOperand COMMA_SOURCE_FILE_AT_LINE (61)) ;
    } break ;
    case 3: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5E_) COMMA_SOURCE_FILE_AT_LINE (64)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftOperand = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightOperand ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_term_ (var_rightOperand, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateXorOperationAST::constructor_new (var_operatorLocation, var_leftOperand, var_rightOperand COMMA_SOURCE_FILE_AT_LINE (68)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_relation_5F_term_i2_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                       C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_relation_5F_factor_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_2 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__26_) COMMA_SOURCE_FILE_AT_LINE (85)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftOperand = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightOperand ;
      //-------- @nonterminalInstructionForGeneration
      nt_relation_5F_factor_ (var_rightOperand, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateAndOperationAST::constructor_new (var_operatorLocation, var_leftOperand, var_rightOperand COMMA_SOURCE_FILE_AT_LINE (89)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_relation_5F_factor_i3_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                         C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_simple_5F_expression_ (outArgument_outExpression, inCompiler) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_3 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3D__3D_) COMMA_SOURCE_FILE_AT_LINE (106)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateEqualTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (110)) ;
  } break ;
  case 3: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__21__3D_) COMMA_SOURCE_FILE_AT_LINE (113)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateNonEqualTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (117)) ;
  } break ;
  case 4: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3C__3D_) COMMA_SOURCE_FILE_AT_LINE (120)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateInfOrEqualTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (124)) ;
  } break ;
  case 5: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3E__3D_) COMMA_SOURCE_FILE_AT_LINE (127)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateSupOrEqualTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (131)) ;
  } break ;
  case 6: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (134)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateStrictSupTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (138)) ;
  } break ;
  case 7: {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_location var_operatorLocation = inCompiler->here () ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (141)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_rightExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_simple_5F_expression_ (var_rightExpression, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateStrictInfTestAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (145)) ;
  } break ;
  default:
    break ;
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_simple_5F_expression_i4_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                                           C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_term_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_4 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3C__3C_) COMMA_SOURCE_FILE_AT_LINE (162)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateLeftShiftOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (166)) ;
    } break ;
    case 3: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3E__3E_) COMMA_SOURCE_FILE_AT_LINE (169)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateRightShiftOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (173)) ;
    } break ;
    case 4: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2B_) COMMA_SOURCE_FILE_AT_LINE (176)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateAddOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (180)) ;
    } break ;
    case 5: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (183)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_term_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateSubOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (187)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_term_i5_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                           C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_5 (inCompiler)) {
    case 2: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2A_) COMMA_SOURCE_FILE_AT_LINE (204)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateMultiplyOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (208)) ;
    } break ;
    case 3: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2F_) COMMA_SOURCE_FILE_AT_LINE (211)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateDivideOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (215)) ;
    } break ;
    case 4: {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_location var_operatorLocation = inCompiler->here () ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_mod) COMMA_SOURCE_FILE_AT_LINE (218)) ;
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_templateExpressionAST var_leftExpression = outArgument_outExpression ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_rightExpression ;
      //-------- @nonterminalInstructionForGeneration
      nt_factor_ (var_rightExpression, inCompiler) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateModuloOperationAST::constructor_new (var_operatorLocation, var_leftExpression, var_rightExpression COMMA_SOURCE_FILE_AT_LINE (222)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i6_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @nonterminalInstructionForGeneration
  nt_primary_ (outArgument_outExpression, inCompiler) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_6 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2D__3E_) COMMA_SOURCE_FILE_AT_LINE (238)) ;
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_structFieldName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (239)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_structFieldAccessTemplateExpressionAST::constructor_new (var_structFieldName.mAttribute_location, outArgument_outExpression, var_structFieldName COMMA_SOURCE_FILE_AT_LINE (240)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i7_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_operatorLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2D_) COMMA_SOURCE_FILE_AT_LINE (254)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_expression ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (var_expression, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateUnaryMinusOperationAST::constructor_new (var_operatorLocation, var_expression COMMA_SOURCE_FILE_AT_LINE (257)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i8_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_operatorLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_not) COMMA_SOURCE_FILE_AT_LINE (270)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_ifCondition ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (var_ifCondition, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateNotOperatorAST::constructor_new (var_operatorLocation, var_ifCondition COMMA_SOURCE_FILE_AT_LINE (273)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_factor_i9_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_location var_operatorLocation = inCompiler->here () ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__7E_) COMMA_SOURCE_FILE_AT_LINE (286)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_ifCondition ;
  //-------- @nonterminalInstructionForGeneration
  nt_factor_ (var_ifCondition, inCompiler) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLogicalNegateAST::constructor_new (var_operatorLocation, var_ifCondition COMMA_SOURCE_FILE_AT_LINE (289)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i10_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_identifier = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (301)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateVarInExpressionAST::constructor_new (var_identifier COMMA_SOURCE_FILE_AT_LINE (302)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i11_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__28_) COMMA_SOURCE_FILE_AT_LINE (314)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (outArgument_outExpression, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__29_) COMMA_SOURCE_FILE_AT_LINE (316)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i12_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_true) COMMA_SOURCE_FILE_AT_LINE (328)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateTrueBoolAST::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (329)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i13_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_false) COMMA_SOURCE_FILE_AT_LINE (341)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateFalseBoolAST::constructor_new (inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (342)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i14_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_uint_33__32_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_unsigned_5F_literal_5F_integer) COMMA_SOURCE_FILE_AT_LINE (355)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralUIntExpressionAST::constructor_new (var_literalInt COMMA_SOURCE_FILE_AT_LINE (356)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i15_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lsint var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_sint_33__32_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_signed_5F_literal_5F_integer) COMMA_SOURCE_FILE_AT_LINE (369)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralSIntExpressionAST::constructor_new (var_literalInt COMMA_SOURCE_FILE_AT_LINE (370)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i16_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_luint_36__34_ var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_uint_36__34_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_unsigned_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (383)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralUInt_36__34_ExpressionAST::constructor_new (var_literalInt COMMA_SOURCE_FILE_AT_LINE (384)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i17_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lsint_36__34_ var_literalInt ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalInt = inCompiler->synthetizedAttribute_sint_36__34_value () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_signed_5F_literal_5F_integer_36__34_) COMMA_SOURCE_FILE_AT_LINE (397)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralSInt_36__34_ExpressionAST::constructor_new (var_literalInt COMMA_SOURCE_FILE_AT_LINE (398)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i18_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableDeclarationForGeneration
  GALGAS_ldouble var_literalDouble ;
  //-------- @terminalCheckInstructionForGeneration
  var_literalDouble = inCompiler->synthetizedAttribute_floatValue () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_literal_5F_double) COMMA_SOURCE_FILE_AT_LINE (411)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralDoubleExpressionAST::constructor_new (var_literalDouble COMMA_SOURCE_FILE_AT_LINE (412)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i19_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lchar var_literalChar = inCompiler->synthetizedAttribute_charValue () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_literal_5F_char) COMMA_SOURCE_FILE_AT_LINE (424)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralCharExpressionAST::constructor_new (var_literalChar COMMA_SOURCE_FILE_AT_LINE (425)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i20_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringlist var_literalStringList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (437)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_lstring var_literalString ;
    //-------- @terminalCheckInstructionForGeneration
    var_literalString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_literal_5F_string) COMMA_SOURCE_FILE_AT_LINE (440)) ;
    //-------- @addAssignInstructionForGeneration
    var_literalStringList.addAssign_operation (var_literalString.reader_string (SOURCE_FILE_AT_LINE (441)) COMMA_SOURCE_FILE_AT_LINE (441)) ;
    switch (select_templateSyntax_7 (inCompiler)) {
    case 2: {
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateLiteralStringExpressionAST::constructor_new (var_literalStringList, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (444)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i21_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (462)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_8 (inCompiler)) {
  case 1: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_template) COMMA_SOURCE_FILE_AT_LINE (465)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_receiverExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_ (var_receiverExpression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_templateName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (468)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionListAST var_expressionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateCategoryTemplateCallAST::constructor_new (var_receiverExpression, var_templateName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (471)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_typeName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_type_5F_name) COMMA_SOURCE_FILE_AT_LINE (477)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_constructorName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (478)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionListAST var_expressionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateConstructorAST::constructor_new (var_typeName, var_constructorName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (481)) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_filewrapper) COMMA_SOURCE_FILE_AT_LINE (487)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_filewrapperName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (488)) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (489)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_templateName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (490)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionListAST var_expressionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateFileWrapperTemplateCallAST::constructor_new (var_filewrapperName, var_templateName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (493)) ;
  } break ;
  case 4: {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_receiverExpression ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_ (var_receiverExpression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_readerName = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (497)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionListAST var_expressionList ;
    //-------- @nonterminalInstructionForGeneration
    nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
    //-------- @assignmentInstructionForGeneration
    outArgument_outExpression = GALGAS_templateReaderCallInExpressionAST::constructor_new (var_receiverExpression, var_readerName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (500)) ;
  } break ;
  case 5: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_option) COMMA_SOURCE_FILE_AT_LINE (506)) ;
    //-------- @selectInstructionForGeneration
    switch (select_templateSyntax_9 (inCompiler)) {
    case 1: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (508)) ;
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_optionName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (509)) ;
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_readerName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (510)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateOptionAccessAST::constructor_new (GALGAS_lstring::constructor_new (GALGAS_string ("galgas_cli_options"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (511)), var_optionName, var_readerName COMMA_SOURCE_FILE_AT_LINE (511)) ;
    } break ;
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_optionComponentName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (513)) ;
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2E_) COMMA_SOURCE_FILE_AT_LINE (514)) ;
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_optionName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (515)) ;
      //-------- @terminalCheckInstructionForGeneration
      GALGAS_lstring var_readerName = inCompiler->synthetizedAttribute_tokenString () ;
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (516)) ;
      //-------- @assignmentInstructionForGeneration
      outArgument_outExpression = GALGAS_templateOptionAccessAST::constructor_new (var_optionComponentName, var_optionName, var_readerName COMMA_SOURCE_FILE_AT_LINE (517)) ;
    } break ;
    default:
      break ;
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (520)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_primary_i22_ (GALGAS_templateExpressionAST & outArgument_outExpression,
                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpression.drop () ; // Release 'out' argument
  //-------- @terminalCheckInstructionForGeneration
  GALGAS_lstring var_functionName = inCompiler->synthetizedAttribute_tokenString () ;
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (533)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionListAST var_expressionList ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5B_) COMMA_SOURCE_FILE_AT_LINE (535)) ;
  //-------- @nonterminalInstructionForGeneration
  nt_output_5F_expression_5F_list_ (var_expressionList, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__5D_) COMMA_SOURCE_FILE_AT_LINE (537)) ;
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpression = GALGAS_templateFunctionCallAST::constructor_new (var_functionName, var_expressionList COMMA_SOURCE_FILE_AT_LINE (538)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_output_5F_expression_5F_list_i23_ (GALGAS_templateExpressionListAST & outArgument_outExpressionList,
                                                                                    C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outExpressionList.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outExpressionList = GALGAS_templateExpressionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (550)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_10 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (553)) ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_templateExpressionAST var_expression ;
      //-------- @nonterminalInstructionForGeneration
      nt_expression_ (var_expression, inCompiler) ;
      //-------- @addAssignInstructionForGeneration
      outArgument_outExpressionList.addAssign_operation (var_expression, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (556)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i24_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__21_) COMMA_SOURCE_FILE_AT_LINE (580)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_expression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_expression, inCompiler) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionExpressionAST::constructor_new (var_expression, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (583)) COMMA_SOURCE_FILE_AT_LINE (583)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i25_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3F__5E_) COMMA_SOURCE_FILE_AT_LINE (591)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionGetColumnLocationAST::constructor_new (SOURCE_FILE_AT_LINE (592)) COMMA_SOURCE_FILE_AT_LINE (592)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i26_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__21__5E_) COMMA_SOURCE_FILE_AT_LINE (600)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionGotoColumnLocationAST::constructor_new (SOURCE_FILE_AT_LINE (601)) COMMA_SOURCE_FILE_AT_LINE (601)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i27_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_block) COMMA_SOURCE_FILE_AT_LINE (609)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_expression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_expression, inCompiler) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (612)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_blockInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (614)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_enterTemplateString (var_blockInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (615)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_11 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_template_5F_instruction_ (var_blockInstructionList, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_enterTemplateString (var_blockInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (619)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (622)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_block) COMMA_SOURCE_FILE_AT_LINE (623)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateBlockInstructionAST::constructor_new (var_expression, inCompiler->here (), var_blockInstructionList COMMA_SOURCE_FILE_AT_LINE (624)) COMMA_SOURCE_FILE_AT_LINE (624)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i28_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_foreach) COMMA_SOURCE_FILE_AT_LINE (636)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_ascending ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_12 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_ascending = GALGAS_bool (true) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3C_) COMMA_SOURCE_FILE_AT_LINE (641)) ;
    //-------- @assignmentInstructionForGeneration
    var_ascending = GALGAS_bool (true) ;
  } break ;
  case 3: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3E_) COMMA_SOURCE_FILE_AT_LINE (644)) ;
    //-------- @assignmentInstructionForGeneration
    var_ascending = GALGAS_bool (false) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_expression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_expression, inCompiler) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_foreachPrefix ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_13 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_foreachPrefix = GALGAS_string::makeEmptyString () ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_prefixedby) COMMA_SOURCE_FILE_AT_LINE (653)) ;
    //-------- @terminalCheckInstructionForGeneration
    GALGAS_lstring var_prefixString = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (654)) ;
    //-------- @assignmentInstructionForGeneration
    var_foreachPrefix = var_prefixString.reader_string (SOURCE_FILE_AT_LINE (655)) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_beforeInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (658)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_14 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_before) COMMA_SOURCE_FILE_AT_LINE (661)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_beforeInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (662)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_0 = true ;
    while (repeatFlag_0) {
      switch (select_templateSyntax_15 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_beforeInstructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_beforeInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (666)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_0 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_do) COMMA_SOURCE_FILE_AT_LINE (670)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_lstring var_indexIdentifier ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_16 (inCompiler)) {
  case 1: {
    //-------- @assignmentInstructionForGeneration
    var_indexIdentifier = GALGAS_lstring::constructor_new (GALGAS_string::makeEmptyString (), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (673)) ;
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_index) COMMA_SOURCE_FILE_AT_LINE (675)) ;
    //-------- @terminalCheckInstructionForGeneration
    var_indexIdentifier = inCompiler->synthetizedAttribute_tokenString () ;
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (676)) ;
  } break ;
  default:
    break ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_doInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (678)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_enterTemplateString (var_doInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (679)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_1 = true ;
  while (repeatFlag_1) {
    switch (select_templateSyntax_17 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_template_5F_instruction_ (var_doInstructionList, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_enterTemplateString (var_doInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (683)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_1 = false ;
      break ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_betweenInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (686)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_18 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_between) COMMA_SOURCE_FILE_AT_LINE (689)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_betweenInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (690)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      switch (select_templateSyntax_19 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_betweenInstructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_betweenInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (694)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_afterInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (698)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_20 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_after) COMMA_SOURCE_FILE_AT_LINE (701)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_afterInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (702)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_3 = true ;
    while (repeatFlag_3) {
      switch (select_templateSyntax_21 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_beforeInstructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_afterInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (706)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_3 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (710)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_foreach) COMMA_SOURCE_FILE_AT_LINE (711)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionForeachAST::constructor_new (var_ascending, var_expression, var_foreachPrefix, var_beforeInstructionList, var_doInstructionList, var_indexIdentifier, var_betweenInstructionList, var_afterInstructionList COMMA_SOURCE_FILE_AT_LINE (712)) COMMA_SOURCE_FILE_AT_LINE (712)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i29_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (729)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionIfBranchListAST var_templateInstructionIfBranchList = GALGAS_templateInstructionIfBranchListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (730)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_templateExpressionAST var_expression ;
    //-------- @nonterminalInstructionForGeneration
    nt_expression_ (var_expression, inCompiler) ;
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_then) COMMA_SOURCE_FILE_AT_LINE (734)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_templateInstructionListAST var_instructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (735)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (736)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_1 = true ;
    while (repeatFlag_1) {
      switch (select_templateSyntax_23 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_instructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (740)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_1 = false ;
        break ;
      }
    }
    //-------- @addAssignInstructionForGeneration
    var_templateInstructionIfBranchList.addAssign_operation (var_expression, var_instructionList COMMA_SOURCE_FILE_AT_LINE (742)) ;
    switch (select_templateSyntax_22 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_elsif) COMMA_SOURCE_FILE_AT_LINE (744)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionListAST var_elseInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (747)) ;
  //-------- @selectInstructionForGeneration
  switch (select_templateSyntax_24 (inCompiler)) {
  case 1: {
  } break ;
  case 2: {
    //-------- @terminalCheckInstructionForGeneration
    inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_else) COMMA_SOURCE_FILE_AT_LINE (750)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_enterTemplateString (var_elseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (751)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @repeatInstructionForGeneration
    bool repeatFlag_2 = true ;
    while (repeatFlag_2) {
      switch (select_templateSyntax_25 (inCompiler)) {
      case 2: {
        //-------- @nonterminalInstructionForGeneration
        nt_template_5F_instruction_ (var_elseInstructionList, inCompiler) ;
        { //-------- @routineCallInstructionForGeneration
        routine_enterTemplateString (var_elseInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (755)) ;
        } //-------- @routineCallInstructionForGeneration
      } break ;
      default:
        repeatFlag_2 = false ;
        break ;
      }
    }
  } break ;
  default:
    break ;
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (759)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_if) COMMA_SOURCE_FILE_AT_LINE (760)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionIfAST::constructor_new (var_templateInstructionIfBranchList, var_elseInstructionList COMMA_SOURCE_FILE_AT_LINE (761)) COMMA_SOURCE_FILE_AT_LINE (761)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_instruction_i30_ (GALGAS_templateInstructionListAST & ioArgument_ioResultingInstructionList,
                                                                               C_Lexique_galgasTemplateScanner * inCompiler) {
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_switch) COMMA_SOURCE_FILE_AT_LINE (772)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_templateExpressionAST var_switchExpression ;
  //-------- @nonterminalInstructionForGeneration
  nt_expression_ (var_switchExpression, inCompiler) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_templateInstructionSwitchBranchListAST var_templateInstructionSwitchBranchList = GALGAS_templateInstructionSwitchBranchListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (777)) ;
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_26 (inCompiler)) {
    case 2: {
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_when) COMMA_SOURCE_FILE_AT_LINE (780)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_lstringlist var_constantList = GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (781)) ;
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_1 = true ;
      while (repeatFlag_1) {
        //-------- @terminalCheckInstructionForGeneration
        GALGAS_lstring var_constantName = inCompiler->synthetizedAttribute_tokenString () ;
        inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_identifier) COMMA_SOURCE_FILE_AT_LINE (783)) ;
        //-------- @addAssignInstructionForGeneration
        var_constantList.addAssign_operation (var_constantName COMMA_SOURCE_FILE_AT_LINE (784)) ;
        switch (select_templateSyntax_27 (inCompiler)) {
        case 2: {
          //-------- @terminalCheckInstructionForGeneration
          inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__2C_) COMMA_SOURCE_FILE_AT_LINE (786)) ;
        } break ;
        default:
          repeatFlag_1 = false ;
          break ;
        }
      }
      //-------- @terminalCheckInstructionForGeneration
      inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken__3A_) COMMA_SOURCE_FILE_AT_LINE (788)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_templateInstructionListAST var_instructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (789)) ;
      { //-------- @routineCallInstructionForGeneration
      routine_enterTemplateString (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (790)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @repeatInstructionForGeneration
      bool repeatFlag_2 = true ;
      while (repeatFlag_2) {
        switch (select_templateSyntax_28 (inCompiler)) {
        case 2: {
          //-------- @nonterminalInstructionForGeneration
          nt_template_5F_instruction_ (var_instructionList, inCompiler) ;
          { //-------- @routineCallInstructionForGeneration
          routine_enterTemplateString (var_instructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (794)) ;
          } //-------- @routineCallInstructionForGeneration
        } break ;
        default:
          repeatFlag_2 = false ;
          break ;
        }
      }
      //-------- @addAssignInstructionForGeneration
      var_templateInstructionSwitchBranchList.addAssign_operation (var_constantList, var_instructionList COMMA_SOURCE_FILE_AT_LINE (796)) ;
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_end) COMMA_SOURCE_FILE_AT_LINE (799)) ;
  //-------- @terminalCheckInstructionForGeneration
  inCompiler->acceptTerminal (ACCEPT_TERMINAL (C_Lexique_galgasTemplateScanner::kToken_switch) COMMA_SOURCE_FILE_AT_LINE (800)) ;
  //-------- @addAssignInstructionForGeneration
  ioArgument_ioResultingInstructionList.addAssign_operation (GALGAS_templateInstructionSwitchAST::constructor_new (var_switchExpression, var_templateInstructionSwitchBranchList COMMA_SOURCE_FILE_AT_LINE (801)) COMMA_SOURCE_FILE_AT_LINE (801)) ;
}

//---------------------------------------------------------------------------*

void cParser_templateSyntax::rule_templateSyntax_template_5F_parser_5F_start_5F_symbol_i31_ (GALGAS_templateInstructionListAST & outArgument_outResultingInstructionList,
                                                                                             C_Lexique_galgasTemplateScanner * inCompiler) {
  outArgument_outResultingInstructionList.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outResultingInstructionList = GALGAS_templateInstructionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (812)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_enterTemplateString (outArgument_outResultingInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (813)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @repeatInstructionForGeneration
  bool repeatFlag_0 = true ;
  while (repeatFlag_0) {
    switch (select_templateSyntax_29 (inCompiler)) {
    case 2: {
      //-------- @nonterminalInstructionForGeneration
      nt_template_5F_instruction_ (outArgument_outResultingInstructionList, inCompiler) ;
      { //-------- @routineCallInstructionForGeneration
      routine_enterTemplateString (outArgument_outResultingInstructionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (819)) ;
      } //-------- @routineCallInstructionForGeneration
    } break ;
    default:
      repeatFlag_0 = false ;
      break ;
    }
  }
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


