//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'baseForXcodeProjectGeneration.cpp'                  *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                    september 20th, 2009, at 15h9'42"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if LIBPM_VERSION != THE_LIBPM_VERSION
  #error "This file has been compiled with a version of GALGAS different than the version of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "baseForXcodeProjectGeneration.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "baseForXcodeProjectGeneration.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of list '@XcodeObjectReferenceList'                 *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_XcodeObjectReferenceList::
elementOf_GGS_XcodeObjectReferenceList (const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mRefString (argument_0),
mComment (argument_1) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_XcodeObjectReferenceList::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_XcodeObjectReferenceList * ptr = dynamic_cast <const elementOf_GGS_XcodeObjectReferenceList *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mRefString.operator_isEqual (ptr->mRefString).boolValue ()
         && mComment.operator_isEqual (ptr->mComment).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_XcodeObjectReferenceList::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mRefString.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mComment.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     List '@XcodeObjectReferenceList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
_internalAppendValues (const GGS_string& argument_0,
                    const GGS_string& argument_1
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0,
                                argument_1
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
_internalPrependValues (const GGS_string& argument_0,
                    const GGS_string& argument_1
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0,
                                argument_1
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
_addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1) {
  if (isBuilt ()&& argument_0.isBuilt ()&& argument_1.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0,
                                argument_1
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_XcodeObjectReferenceList GGS_XcodeObjectReferenceList::
operator_concat (const GGS_XcodeObjectReferenceList & inOperand) const {
  GGS_XcodeObjectReferenceList result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
dotAssign_operation (const GGS_XcodeObjectReferenceList inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_XcodeObjectReferenceList * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_string p_0 = p->mRefString ;
          GGS_string p_1 = p->mComment ;
          _internalAppendValues (p_0, p_1 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_string& argument_0,
                     const GGS_string& argument_1
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0,
                                argument_1
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mRefString,
                                ptr->mComment
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_XcodeObjectReferenceList  GGS_XcodeObjectReferenceList::
constructor_emptyList (void) {
  GGS_XcodeObjectReferenceList result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_XcodeObjectReferenceList  GGS_XcodeObjectReferenceList::
constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_string& argument_1) {
  GGS_XcodeObjectReferenceList result ;
  result.alloc () ;
  result._addAssign_operation (argument_0, argument_1) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
internalSubListWithRange (GGS_XcodeObjectReferenceList & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mRefString, ptr->mComment) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_XcodeObjectReferenceList GGS_XcodeObjectReferenceList::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_XcodeObjectReferenceList result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_XcodeObjectReferenceList GGS_XcodeObjectReferenceList::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_XcodeObjectReferenceList result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_XcodeObjectReferenceList::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@XcodeObjectReferenceList", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
method_first (C_Compiler & inLexique,
              GGS_string& _out_0,
              GGS_string& _out_1
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mRefString ;
    _out_1 = ptr->mComment ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
method_last (C_Compiler & inLexique,
             GGS_string& _out_0,
             GGS_string& _out_1
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mRefString ;
    _out_1 = ptr->mComment ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_string& _out_0,
                 GGS_string& _out_1
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mRefString ;
    _out_1 = ptr->mComment ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
modifier_popLast (C_Compiler & inLexique,
                GGS_string& _out_0,
                GGS_string& _out_1
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mRefString ;
    _out_1 = ptr->mComment ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_string GGS_XcodeObjectReferenceList::
reader_mRefStringAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mRefString ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_XcodeObjectReferenceList::
reader_mCommentAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mComment ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
modifier_setMRefStringAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mRefString = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_XcodeObjectReferenceList::
modifier_setMCommentAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mComment = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_XcodeObjectReferenceList::cEnumerator::_mRefString (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mRefString ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_XcodeObjectReferenceList::cEnumerator::_mComment (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mComment ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_Xcode_PBXFileReference_abstract'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_abstract::
cPtr_Xcode_PBXFileReference_abstract (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mFileName (argument_0),
_mOnce1205isComputed (false),
PBXFileReferenceKey () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_abstract * GGS_Xcode_PBXFileReference_abstract::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_abstract *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_abstract *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_abstract::computeOnce1205 (C_Compiler & inLexique) const {
  _mOnce1205isComputed = true ;
  PBXFileReferenceKey.drop () ;
  PBXFileReferenceKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (26)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (26)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (26)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_PBXFileReference_abstract::reader_PBXFileReferenceKey (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce1205isComputed) {
    computeOnce1205 (inLexique) ;
  }
  return PBXFileReferenceKey ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_abstract::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_abstract:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_abstract::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_abstract::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_abstract (& typeid (cPtr_Xcode_PBXFileReference_abstract), NULL, "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_abstract::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_abstract ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_Xcode_PBXFileReference_abstract'             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_abstract::
GGS_Xcode_PBXFileReference_abstract (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_abstract::
GGS_Xcode_PBXFileReference_abstract (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_abstract GGS_Xcode_PBXFileReference_abstract::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_abstract result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_abstract *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_abstract) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_abstract (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_abstract),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFileReference_abstract::
reader_mFileName (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_abstract *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXFileReference_abstract *) mPointer)->mFileName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFileReference_abstract::
reader_PBXFileReferenceKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_abstract *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXFileReference_abstract *) mPointer)->reader_PBXFileReferenceKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_abstract::actualTypeName (void) const {
  return "Xcode_PBXFileReference_abstract" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_PBXFileReference_abstract::galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_abstract ("Xcode_PBXFileReference_abstract") ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'cPtr_Xcode_productFileReference'                   *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_productFileReference::
cPtr_Xcode_productFileReference (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_productFileReference * GGS_Xcode_productFileReference::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_productFileReference *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_productFileReference *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

void cPtr_Xcode_productFileReference::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_productFileReference:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_productFileReference::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_productFileReference::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_productFileReference (& typeid (cPtr_Xcode_productFileReference), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_productFileReference::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_productFileReference ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_Xcode_productFileReference'                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_productFileReference::
GGS_Xcode_productFileReference (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_productFileReference::
GGS_Xcode_productFileReference (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_productFileReference GGS_Xcode_productFileReference::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_productFileReference result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_productFileReference *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_productFileReference) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_productFileReference (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_productFileReference),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_productFileReference::actualTypeName (void) const {
  return "Xcode_productFileReference" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_productFileReference ("Xcode_productFileReference", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       class 'cPtr_Xcode_PBXFileReference_CompiledMachOExecutable'         *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
cPtr_Xcode_PBXFileReference_CompiledMachOExecutable (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_productFileReference (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_CompiledMachOExecutable * GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_CompiledMachOExecutable * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (44))) ;
  var_cas_outString.appendCString (" = {isa = PBXFileReference; explicitFileType = \"compiled.mach-o.executable\"; includeInIndex = 0; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = BUILT_PRODUCTS_DIR; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
method_productExtension (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_outProductExtension COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outProductExtension = GGS_string ("tool") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_CompiledMachOExecutable:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_CompiledMachOExecutable (& typeid (cPtr_Xcode_PBXFileReference_CompiledMachOExecutable), & typeid (cPtr_Xcode_productFileReference), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_CompiledMachOExecutable ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_CompiledMachOExecutable::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_CompiledMachOExecutable (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//    GALGAS class 'GGS_Xcode_PBXFileReference_CompiledMachOExecutable'      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
GGS_Xcode_PBXFileReference_CompiledMachOExecutable (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
GGS_Xcode_PBXFileReference_CompiledMachOExecutable (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_CompiledMachOExecutable GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_CompiledMachOExecutable result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_CompiledMachOExecutable *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_CompiledMachOExecutable) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_CompiledMachOExecutable (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_CompiledMachOExecutable),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_CompiledMachOExecutable GGS_Xcode_PBXFileReference_CompiledMachOExecutable::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_CompiledMachOExecutable result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_CompiledMachOExecutable (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_CompiledMachOExecutable::actualTypeName (void) const {
  return "Xcode_PBXFileReference_CompiledMachOExecutable" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_CompiledMachOExecutable ("Xcode_PBXFileReference_CompiledMachOExecutable", gClassInfoFor__Xcode_productFileReference) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'cPtr_Xcode_PBXFileReference_Application'               *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_Application::
cPtr_Xcode_PBXFileReference_Application (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_productFileReference (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_Application * GGS_Xcode_PBXFileReference_Application::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_Application *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_Application *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_Application::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_Application * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_Application *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_Application::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (59))) ;
  var_cas_outString.appendCString (" = {isa = PBXFileReference; explicitFileType = \"compiled.wrapper.application\"; includeInIndex = 0; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = BUILT_PRODUCTS_DIR; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_Application::
method_productExtension (C_Compiler & /* inLexique */,
                                GGS_string& var_cas_outProductExtension COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outProductExtension = GGS_string ("application") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_Application::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_Application:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_Application::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_Application::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_Application (& typeid (cPtr_Xcode_PBXFileReference_Application), & typeid (cPtr_Xcode_productFileReference), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_Application::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_Application ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_Application::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_Application (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_Xcode_PBXFileReference_Application'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_Application::
GGS_Xcode_PBXFileReference_Application (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_Application::
GGS_Xcode_PBXFileReference_Application (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_Application GGS_Xcode_PBXFileReference_Application::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_Application result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_Application *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_Application) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_Application (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_Application),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_Application GGS_Xcode_PBXFileReference_Application::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_Application result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_Application (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_Application::actualTypeName (void) const {
  return "Xcode_PBXFileReference_Application" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_Application ("Xcode_PBXFileReference_Application", gClassInfoFor__Xcode_productFileReference) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            class 'cPtr_Xcode_PBXFileReference_cppSourceFile'              *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_cppSourceFile::
cPtr_Xcode_PBXFileReference_cppSourceFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_cppSourceFile * GGS_Xcode_PBXFileReference_cppSourceFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_cppSourceFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_cppSourceFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_cppSourceFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_cppSourceFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_cppSourceFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_cppSourceFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (73))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (74))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (75))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_cppSourceFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_cppSourceFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_cppSourceFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_cppSourceFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_cppSourceFile (& typeid (cPtr_Xcode_PBXFileReference_cppSourceFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_cppSourceFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_cppSourceFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_cppSourceFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_cppSourceFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_Xcode_PBXFileReference_cppSourceFile'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_cppSourceFile::
GGS_Xcode_PBXFileReference_cppSourceFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_cppSourceFile::
GGS_Xcode_PBXFileReference_cppSourceFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_cppSourceFile GGS_Xcode_PBXFileReference_cppSourceFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_cppSourceFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_cppSourceFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_cppSourceFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_cppSourceFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_cppSourceFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_cppSourceFile GGS_Xcode_PBXFileReference_cppSourceFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_cppSourceFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_cppSourceFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_cppSourceFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_cppSourceFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_cppSourceFile ("Xcode_PBXFileReference_cppSourceFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'cPtr_Xcode_PBXFileReference_hSourceFile'               *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_hSourceFile::
cPtr_Xcode_PBXFileReference_hSourceFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_hSourceFile * GGS_Xcode_PBXFileReference_hSourceFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_hSourceFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_hSourceFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_hSourceFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_hSourceFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_hSourceFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_hSourceFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (84))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (85))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (86))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_hSourceFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_hSourceFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_hSourceFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_hSourceFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_hSourceFile (& typeid (cPtr_Xcode_PBXFileReference_hSourceFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_hSourceFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_hSourceFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_hSourceFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_hSourceFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_Xcode_PBXFileReference_hSourceFile'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_hSourceFile::
GGS_Xcode_PBXFileReference_hSourceFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_hSourceFile::
GGS_Xcode_PBXFileReference_hSourceFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_hSourceFile GGS_Xcode_PBXFileReference_hSourceFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_hSourceFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_hSourceFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_hSourceFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_hSourceFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_hSourceFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_hSourceFile GGS_Xcode_PBXFileReference_hSourceFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_hSourceFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_hSourceFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_hSourceFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_hSourceFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_hSourceFile ("Xcode_PBXFileReference_hSourceFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            class 'cPtr_Xcode_PBXFileReference_pchSourceFile'              *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_pchSourceFile::
cPtr_Xcode_PBXFileReference_pchSourceFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_pchSourceFile * GGS_Xcode_PBXFileReference_pchSourceFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_pchSourceFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_pchSourceFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_pchSourceFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_pchSourceFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_pchSourceFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_pchSourceFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (95))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (96))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.pch; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (97))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_pchSourceFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_pchSourceFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_pchSourceFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_pchSourceFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_pchSourceFile (& typeid (cPtr_Xcode_PBXFileReference_pchSourceFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_pchSourceFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_pchSourceFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_pchSourceFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_pchSourceFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_Xcode_PBXFileReference_pchSourceFile'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_pchSourceFile::
GGS_Xcode_PBXFileReference_pchSourceFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_pchSourceFile::
GGS_Xcode_PBXFileReference_pchSourceFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_pchSourceFile GGS_Xcode_PBXFileReference_pchSourceFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_pchSourceFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_pchSourceFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_pchSourceFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_pchSourceFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_pchSourceFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_pchSourceFile GGS_Xcode_PBXFileReference_pchSourceFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_pchSourceFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_pchSourceFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_pchSourceFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_pchSourceFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_pchSourceFile ("Xcode_PBXFileReference_pchSourceFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'cPtr_Xcode_PBXFileReference_mSourceFile'               *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_mSourceFile::
cPtr_Xcode_PBXFileReference_mSourceFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_mSourceFile * GGS_Xcode_PBXFileReference_mSourceFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_mSourceFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_mSourceFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_mSourceFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_mSourceFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_mSourceFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_mSourceFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (106))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (107))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.obj; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (108))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_mSourceFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_mSourceFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_mSourceFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_mSourceFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_mSourceFile (& typeid (cPtr_Xcode_PBXFileReference_mSourceFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_mSourceFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_mSourceFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_mSourceFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_mSourceFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_Xcode_PBXFileReference_mSourceFile'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_mSourceFile::
GGS_Xcode_PBXFileReference_mSourceFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_mSourceFile::
GGS_Xcode_PBXFileReference_mSourceFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_mSourceFile GGS_Xcode_PBXFileReference_mSourceFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_mSourceFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_mSourceFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_mSourceFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_mSourceFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_mSourceFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_mSourceFile GGS_Xcode_PBXFileReference_mSourceFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_mSourceFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_mSourceFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_mSourceFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_mSourceFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_mSourceFile ("Xcode_PBXFileReference_mSourceFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             class 'cPtr_Xcode_PBXFileReference_mmSourceFile'              *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_mmSourceFile::
cPtr_Xcode_PBXFileReference_mmSourceFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_mmSourceFile * GGS_Xcode_PBXFileReference_mmSourceFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_mmSourceFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_mmSourceFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_mmSourceFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_mmSourceFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_mmSourceFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_mmSourceFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (117))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (118))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (119))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_mmSourceFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_mmSourceFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_mmSourceFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_mmSourceFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_mmSourceFile (& typeid (cPtr_Xcode_PBXFileReference_mmSourceFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_mmSourceFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_mmSourceFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_mmSourceFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_mmSourceFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          GALGAS class 'GGS_Xcode_PBXFileReference_mmSourceFile'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_mmSourceFile::
GGS_Xcode_PBXFileReference_mmSourceFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_mmSourceFile::
GGS_Xcode_PBXFileReference_mmSourceFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_mmSourceFile GGS_Xcode_PBXFileReference_mmSourceFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_mmSourceFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_mmSourceFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_mmSourceFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_mmSourceFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_mmSourceFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_mmSourceFile GGS_Xcode_PBXFileReference_mmSourceFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_mmSourceFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_mmSourceFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_mmSourceFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_mmSourceFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_mmSourceFile ("Xcode_PBXFileReference_mmSourceFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_Xcode_PBXFileReference_gifFile'                 *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_gifFile::
cPtr_Xcode_PBXFileReference_gifFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_gifFile * GGS_Xcode_PBXFileReference_gifFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_gifFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_gifFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_gifFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_gifFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_gifFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_gifFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (128))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (129))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; lastKnownFileType = image.gif; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (130))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_gifFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_gifFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_gifFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_gifFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_gifFile (& typeid (cPtr_Xcode_PBXFileReference_gifFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_gifFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_gifFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_gifFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_gifFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_Xcode_PBXFileReference_gifFile'              *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_gifFile::
GGS_Xcode_PBXFileReference_gifFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_gifFile::
GGS_Xcode_PBXFileReference_gifFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_gifFile GGS_Xcode_PBXFileReference_gifFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_gifFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_gifFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_gifFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_gifFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_gifFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_gifFile GGS_Xcode_PBXFileReference_gifFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_gifFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_gifFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_gifFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_gifFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_gifFile ("Xcode_PBXFileReference_gifFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_Xcode_PBXFileReference_tiffFile'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_tiffFile::
cPtr_Xcode_PBXFileReference_tiffFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_tiffFile * GGS_Xcode_PBXFileReference_tiffFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_tiffFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_tiffFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_tiffFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_tiffFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_tiffFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_tiffFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (139))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (140))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; lastKnownFileType = image.tiff; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (141))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_tiffFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_tiffFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_tiffFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_tiffFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_tiffFile (& typeid (cPtr_Xcode_PBXFileReference_tiffFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_tiffFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_tiffFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_tiffFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_tiffFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_Xcode_PBXFileReference_tiffFile'             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_tiffFile::
GGS_Xcode_PBXFileReference_tiffFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_tiffFile::
GGS_Xcode_PBXFileReference_tiffFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_tiffFile GGS_Xcode_PBXFileReference_tiffFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_tiffFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_tiffFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_tiffFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_tiffFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_tiffFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_tiffFile GGS_Xcode_PBXFileReference_tiffFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_tiffFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_tiffFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_tiffFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_tiffFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_tiffFile ("Xcode_PBXFileReference_tiffFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_Xcode_PBXFileReference_pngFile'                 *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_pngFile::
cPtr_Xcode_PBXFileReference_pngFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_pngFile * GGS_Xcode_PBXFileReference_pngFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_pngFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_pngFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_pngFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_pngFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_pngFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_pngFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (150))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (151))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; lastKnownFileType = image.png; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (152))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_pngFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_pngFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_pngFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_pngFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_pngFile (& typeid (cPtr_Xcode_PBXFileReference_pngFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_pngFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_pngFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_pngFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_pngFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_Xcode_PBXFileReference_pngFile'              *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_pngFile::
GGS_Xcode_PBXFileReference_pngFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_pngFile::
GGS_Xcode_PBXFileReference_pngFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_pngFile GGS_Xcode_PBXFileReference_pngFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_pngFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_pngFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_pngFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_pngFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_pngFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_pngFile GGS_Xcode_PBXFileReference_pngFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_pngFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_pngFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_pngFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_pngFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_pngFile ("Xcode_PBXFileReference_pngFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              class 'cPtr_Xcode_PBXFileReference_plistFile'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_plistFile::
cPtr_Xcode_PBXFileReference_plistFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_plistFile * GGS_Xcode_PBXFileReference_plistFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_plistFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_plistFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_plistFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_plistFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_plistFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_plistFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (161))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (162))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (163))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_plistFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_plistFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_plistFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_plistFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_plistFile (& typeid (cPtr_Xcode_PBXFileReference_plistFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_plistFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_plistFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_plistFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_plistFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_Xcode_PBXFileReference_plistFile'             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_plistFile::
GGS_Xcode_PBXFileReference_plistFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_plistFile::
GGS_Xcode_PBXFileReference_plistFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_plistFile GGS_Xcode_PBXFileReference_plistFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_plistFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_plistFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_plistFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_plistFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_plistFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_plistFile GGS_Xcode_PBXFileReference_plistFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_plistFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_plistFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_plistFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_plistFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_plistFile ("Xcode_PBXFileReference_plistFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            class 'cPtr_Xcode_PBXFileReference_frameworkFile'              *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_frameworkFile::
cPtr_Xcode_PBXFileReference_frameworkFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_frameworkFile * GGS_Xcode_PBXFileReference_frameworkFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_frameworkFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_frameworkFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_frameworkFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_frameworkFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_frameworkFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_frameworkFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (172))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (173))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (174))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_frameworkFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_frameworkFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_frameworkFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_frameworkFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_frameworkFile (& typeid (cPtr_Xcode_PBXFileReference_frameworkFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_frameworkFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_frameworkFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_frameworkFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_frameworkFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         GALGAS class 'GGS_Xcode_PBXFileReference_frameworkFile'           *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_frameworkFile::
GGS_Xcode_PBXFileReference_frameworkFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_frameworkFile::
GGS_Xcode_PBXFileReference_frameworkFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_frameworkFile GGS_Xcode_PBXFileReference_frameworkFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_frameworkFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_frameworkFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_frameworkFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_frameworkFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_frameworkFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_frameworkFile GGS_Xcode_PBXFileReference_frameworkFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_frameworkFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_frameworkFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_frameworkFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_frameworkFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_frameworkFile ("Xcode_PBXFileReference_frameworkFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_Xcode_PBXFileReference_icnsFile'                *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_icnsFile::
cPtr_Xcode_PBXFileReference_icnsFile (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_icnsFile * GGS_Xcode_PBXFileReference_icnsFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_icnsFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_icnsFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_icnsFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_icnsFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_icnsFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_icnsFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (183))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (184))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; lastKnownFileType = image.icns; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (185))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFileName) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_icnsFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_icnsFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_icnsFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_icnsFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_icnsFile (& typeid (cPtr_Xcode_PBXFileReference_icnsFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_icnsFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_icnsFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_icnsFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_icnsFile (mFileName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_Xcode_PBXFileReference_icnsFile'             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_icnsFile::
GGS_Xcode_PBXFileReference_icnsFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_icnsFile::
GGS_Xcode_PBXFileReference_icnsFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_icnsFile GGS_Xcode_PBXFileReference_icnsFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_icnsFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_icnsFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_icnsFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_icnsFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_icnsFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_icnsFile GGS_Xcode_PBXFileReference_icnsFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_icnsFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_icnsFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_icnsFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_icnsFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_icnsFile ("Xcode_PBXFileReference_icnsFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               class 'cPtr_Xcode_PBXFileReference_xibFile'                 *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_xibFile::
cPtr_Xcode_PBXFileReference_xibFile (const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE),
mFilePath (argument_1) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_xibFile * GGS_Xcode_PBXFileReference_xibFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_xibFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_xibFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_xibFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_xibFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_xibFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue ()
         && mFilePath.operator_isEqual (ptr->mFilePath).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_xibFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (195))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (196))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; lastKnownFileType = wrapper.xib; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (197))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFilePath) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_xibFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_xibFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1)
           << mFilePath.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_xibFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_xibFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_xibFile (& typeid (cPtr_Xcode_PBXFileReference_xibFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_xibFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_xibFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_xibFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_xibFile (mFileName, mFilePath COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            GALGAS class 'GGS_Xcode_PBXFileReference_xibFile'              *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_xibFile::
GGS_Xcode_PBXFileReference_xibFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_xibFile::
GGS_Xcode_PBXFileReference_xibFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_xibFile GGS_Xcode_PBXFileReference_xibFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_xibFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_xibFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_xibFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_xibFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_xibFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_xibFile GGS_Xcode_PBXFileReference_xibFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0,
                 const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_xibFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_xibFile (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFileReference_xibFile::
reader_mFilePath (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_xibFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXFileReference_xibFile *) mPointer)->mFilePath ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_xibFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_xibFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_xibFile ("Xcode_PBXFileReference_xibFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           class 'cPtr_Xcode_PBXFileReference_plistStringFile'             *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFileReference_plistStringFile::
cPtr_Xcode_PBXFileReference_plistStringFile (const GGS_string& argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS)
:cPtr_Xcode_PBXFileReference_abstract (argument_0 COMMA_THERE),
mFilePath (argument_1) {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFileReference_plistStringFile * GGS_Xcode_PBXFileReference_plistStringFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_plistStringFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFileReference_plistStringFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFileReference_plistStringFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFileReference_plistStringFile * ptr = dynamic_cast <const cPtr_Xcode_PBXFileReference_plistStringFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFileName.operator_isEqual (ptr->mFileName).boolValue ()
         && mFilePath.operator_isEqual (ptr->mFilePath).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_plistStringFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (207))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (208))) ;
  var_cas_outString.appendCString (" */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = ") ;
  var_cas_outString.dotAssign_operation (mFileName.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (209))) ;
  var_cas_outString.appendCString ("; path = ") ;
  var_cas_outString.dotAssign_operation (mFilePath) ;
  var_cas_outString.appendCString ("; sourceTree = \"<group>\"; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFileReference_plistStringFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFileReference_plistStringFile:"
           << mFileName.reader_description  (inLexique COMMA_THERE, inIndentation + 1)
           << mFilePath.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_plistStringFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFileReference_plistStringFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFileReference_plistStringFile (& typeid (cPtr_Xcode_PBXFileReference_plistStringFile), & typeid (cPtr_Xcode_PBXFileReference_abstract), "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFileReference_plistStringFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFileReference_plistStringFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFileReference_plistStringFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFileReference_plistStringFile (mFileName, mFilePath COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        GALGAS class 'GGS_Xcode_PBXFileReference_plistStringFile'          *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_plistStringFile::
GGS_Xcode_PBXFileReference_plistStringFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_plistStringFile::
GGS_Xcode_PBXFileReference_plistStringFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFileReference_plistStringFile GGS_Xcode_PBXFileReference_plistStringFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_plistStringFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFileReference_plistStringFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFileReference_plistStringFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFileReference_plistStringFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFileReference_plistStringFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_plistStringFile GGS_Xcode_PBXFileReference_plistStringFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0,
                 const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_plistStringFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFileReference_plistStringFile (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFileReference_plistStringFile::
reader_mFilePath (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFileReference_plistStringFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXFileReference_plistStringFile *) mPointer)->mFilePath ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFileReference_plistStringFile::actualTypeName (void) const {
  return "Xcode_PBXFileReference_plistStringFile" ;
}

//---------------------------------------------------------------------------*

C_galgasClassRunTimeInformation gClassInfoFor__Xcode_PBXFileReference_plistStringFile ("Xcode_PBXFileReference_plistStringFile", gClassInfoFor__Xcode_PBXFileReference_abstract) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   class 'e_Xcode_PBXFileReference_map'                    *
//                                                                           *
//---------------------------------------------------------------------------*

e_Xcode_PBXFileReference_map::e_Xcode_PBXFileReference_map (void) :
mFileReference () {
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 class map '@Xcode_PBXFileReference_map'                   *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXFileReference_map::
elementOf_GGS_Xcode_PBXFileReference_map (const GGS_lstring & inKey,
              const sint32 inIndex,
              const e_Xcode_PBXFileReference_map & inInfo) :
AC_galgas_map_element (inKey, inIndex),
mInfo (inInfo) {
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXFileReference_map::
appendForMapDescription (C_Compiler & inLexique,
                         const sint32 inElementIndex,
                         C_String & ioString,
                         const sint32 inIndentation
                         COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-key " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mKey.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-value " ;
  ioString.appendSigned (inElementIndex) ;
  ioString << ":" << mInfo.mFileReference.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXFileReference_map::
isEqualToMapElement (const AC_galgas_map_element * inOperand) const {
  const elementOf_GGS_Xcode_PBXFileReference_map * ptr = dynamic_cast <const elementOf_GGS_Xcode_PBXFileReference_map *> (inOperand) ;
  macroValidPointer (ptr) ;
  return (mInfo.mFileReference.operator_isEqual (ptr->mInfo.mFileReference)).boolValue () ;
}

//---------------------------------------------------------------------------*

AC_galgas_map_element * GGS_Xcode_PBXFileReference_map::
new_element (const GGS_lstring & inKey, void * inInfo) {
  MF_Assert (reinterpret_cast <e_Xcode_PBXFileReference_map *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  AC_galgas_map_element * p = NULL ;
  e_Xcode_PBXFileReference_map * info = (e_Xcode_PBXFileReference_map *) inInfo ;
  macroMyNew (p, cElement (inKey, nextIndex (), * info)) ;
  return p ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_map::
assignInfo (AC_galgas_map_element * inPtr, void * inInfo) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  MF_Assert (reinterpret_cast <e_Xcode_PBXFileReference_map *> (inInfo) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  e_Xcode_PBXFileReference_map * info = (e_Xcode_PBXFileReference_map *) inInfo ;
  p->mInfo = * info ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_map GGS_Xcode_PBXFileReference_map::
constructor_emptyMap (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_map result ;
  macroMyNew (result.mSharedMapRoot, cMapRoot) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_map::
enterIndex (const GGS_lstring & inKey,
            AC_galgas_index_core & outIndex) {
  e_Xcode_PBXFileReference_map info  ;
  internalEnterIndex (inKey,
                      (void *) & info,
                      outIndex) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_Xcode_PBXFileReference_map::
operator_isEqual (const GGS_Xcode_PBXFileReference_map & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_Xcode_PBXFileReference_map::
operator_isNotEqual (const GGS_Xcode_PBXFileReference_map & inOperand) const {
  return GGS_bool (isBuilt () && inOperand.isBuilt (), ! isEqualToMap (inOperand)) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_map::
internalInsertForDuplication (AC_galgas_map_element * inPtr) {
  MF_Assert (reinterpret_cast <cElement *> (inPtr) != NULL, "Dynamic cast error", 0, 0) ;
  cElement * p = (cElement *) inPtr ;
  sint32 attributeIndex = -1 ; // Unused here
  GGS_location existingKeyLocation ; // Unused here
  internalInsert (p->mKey, (void *) & p->mInfo, attributeIndex, existingKeyLocation) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_map::
insertElement (C_Compiler & inLexique,
                const utf32 * inErrorMessage,
                const GGS_lstring & inKey,
                const GGS_Xcode_PBXFileReference_abstract & inParameter0,
                GGS_luint * outIndex
                COMMA_LOCATION_ARGS) {
  sint32 elementID = - 1 ;
  if (isBuilt ()
   && inParameter0.isBuilt ()
   && inKey.isBuilt ()) {
    insulateMap () ;
    e_Xcode_PBXFileReference_map info  ;
    info.mFileReference = inParameter0 ;
    GGS_location existingKeyLocation ;
    internalInsert (inKey, (void *) & info, elementID, existingKeyLocation) ;
    if (elementID < 0) {
      emitInsertMapSemanticErrorMessage (inLexique, inKey, inErrorMessage, existingKeyLocation COMMA_THERE) ;
    }
  }
  if (outIndex != NULL) {
    * outIndex = GGS_luint (GGS_uint (elementID >= 0, (uint32) elementID), inKey) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_map::
searchElement (C_Compiler & inLexique,
               const utf32 * inErrorMessage,
               const GGS_lstring & inKey,
               GGS_Xcode_PBXFileReference_abstract   & outParameter0,
               GGS_luint * outIndex
               COMMA_LOCATION_ARGS) const {
  cElement * node = NULL  ;
  if (isBuilt () && inKey.isBuilt ()) {
    AC_galgas_map_element * p = internal_search (inKey.string ()) ;
    MF_Assert ((p == NULL) || (reinterpret_cast <cElement *> (p) != NULL), "Dynamic cast error", 0, 0) ;
    node = (cElement *) p ;
    if (node == NULL) {
      emitMapSemanticErrorMessage (inLexique, inKey, inErrorMessage COMMA_THERE) ;
    }
  }
  if (node == NULL) {
    outParameter0.drop () ;
    if (outIndex != NULL) {
      outIndex->drop () ;
     }
  }else{
    outParameter0 = node->mInfo.mFileReference ;
    if (outIndex != NULL) {
      * outIndex = GGS_luint (GGS_uint (true, (uint32) node->mID), inKey) ;
    }
  }
}

//---------------------------------------------------------------------------*

const utf32 GGS_Xcode_PBXFileReference_map::kSearchMessage_searchKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('f'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('n'),
  TO_UNICODE ('o'),
  TO_UNICODE ('t'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_map::
method_searchKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_Xcode_PBXFileReference_abstract   & outParameter0 COMMA_LOCATION_ARGS) const {
  searchElement (inLexique,
                  kSearchMessage_searchKey,
                  inKey,
                  outParameter0,
                  NULL
                  COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const utf32 GGS_Xcode_PBXFileReference_map::kInsertMessage_insertKey [] = {
  TO_UNICODE ('t'),
  TO_UNICODE ('h'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('\''),
  TO_UNICODE ('%'),
  TO_UNICODE ('K'),
  TO_UNICODE ('\''),
  TO_UNICODE (' '),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('f'),
  TO_UNICODE ('e'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE ('c'),
  TO_UNICODE ('e'),
  TO_UNICODE (' '),
  TO_UNICODE ('h'),
  TO_UNICODE ('a'),
  TO_UNICODE ('s'),
  TO_UNICODE (' '),
  TO_UNICODE ('b'),
  TO_UNICODE ('e'),
  TO_UNICODE ('e'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('a'),
  TO_UNICODE ('l'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('a'),
  TO_UNICODE ('d'),
  TO_UNICODE ('y'),
  TO_UNICODE (' '),
  TO_UNICODE ('d'),
  TO_UNICODE ('e'),
  TO_UNICODE ('c'),
  TO_UNICODE ('l'),
  TO_UNICODE ('a'),
  TO_UNICODE ('r'),
  TO_UNICODE ('e'),
  TO_UNICODE ('d'),
  TO_UNICODE (' '),
  TO_UNICODE ('i'),
  TO_UNICODE ('n'),
  TO_UNICODE (' '),
  TO_UNICODE ('%'),
  TO_UNICODE ('L'),
  TO_UNICODE (0)
} ;

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFileReference_map::
modifier_insertKey (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_Xcode_PBXFileReference_abstract & inParameter0 COMMA_LOCATION_ARGS) {
  insertElement (inLexique,
                 kInsertMessage_insertKey,
                 inKey,
                 inParameter0,
                 NULL
                 COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_map GGS_Xcode_PBXFileReference_map::
constructor_mapWithMapToOverride (C_Compiler & /* inLexique */,
                                  const GGS_Xcode_PBXFileReference_map & inMapToOverride
                                  COMMA_UNUSED_LOCATION_ARGS) {
  GGS_Xcode_PBXFileReference_map result ; // Not Built
  if (inMapToOverride.mSharedMapRoot != NULL) {
    macroValidPointer (inMapToOverride.mSharedMapRoot) ;
    macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    result.mSharedMapRoot->mNextMap = inMapToOverride.mSharedMapRoot ;
    inMapToOverride.mSharedMapRoot->mReferenceCount ++ ;
    result.mSharedMapRoot->mSequenceNumber = inMapToOverride.mSharedMapRoot->mSequenceNumber ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_map GGS_Xcode_PBXFileReference_map::
reader_overriddenMap (C_Compiler & /* inLexique */
                      COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_PBXFileReference_map result ; // Not Built
  if (mSharedMapRoot != NULL) {
    macroValidPointer (mSharedMapRoot) ;
    result.mSharedMapRoot = mSharedMapRoot->mNextMap ;
    if (result.mSharedMapRoot != NULL) {
      macroValidPointer (result.mSharedMapRoot) ;
      result.mSharedMapRoot->mReferenceCount ++ ;
    }else{
      macroMyNew (result.mSharedMapRoot, cMapRoot) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFileReference_map::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  C_String s ;
  s << "<map @Xcode_PBXFileReference_map " ;
  if (isBuilt ()) {
    s.appendSigned (count ()) ;
    s << " object" << ((count () > 1) ? "s " : " ") ;
    cElement * p = firstObject () ;
    sint32 elementID = 0 ;
    while (p != NULL) {
      macroValidPointer (p) ;
      p->appendForMapDescription (inLexique, elementID, s, inIndentation COMMA_THERE) ;
      p = p->nextObject () ;
      elementID ++ ;
    }
  }else{
    s << "not built" ;
  }
  s << "\n" ;
  s.writeStringMultiple ("| ", inIndentation) ;
  s << ">" ;
  return GGS_string (true, s) ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXFileReference_abstract  & GGS_Xcode_PBXFileReference_map::cEnumerator::_mFileReference (LOCATION_ARGS) const {
  return ((cElement *) mObjectArray (mCurrentIndex COMMA_THERE))->mInfo.mFileReference ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     class 'cPtr_Xcode_PBXBuildFile'                       *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXBuildFile::
cPtr_Xcode_PBXBuildFile (const GGS_Xcode_PBXFileReference_abstract & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mSourceFile (argument_0),
_mOnce10554isComputed (false),
PBXBuildFileKey () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXBuildFile * GGS_Xcode_PBXBuildFile::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXBuildFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXBuildFile *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXBuildFile::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXBuildFile * ptr = dynamic_cast <const cPtr_Xcode_PBXBuildFile *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mSourceFile.operator_isEqual (ptr->mSourceFile).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXBuildFile::computeOnce10554 (C_Compiler & inLexique) const {
  _mOnce10554isComputed = true ;
  PBXBuildFileKey.drop () ;
  PBXBuildFileKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (233)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (233)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (233)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_PBXBuildFile::reader_PBXBuildFileKey (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce10554isComputed) {
    computeOnce10554 (inLexique) ;
  }
  return PBXBuildFileKey ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXBuildFile::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXBuildFileKey (inLexique COMMA_SOURCE_FILE_AT_LINE (237))) ;
  var_cas_outString.appendCString (" /* ") ;
  var_cas_outString.dotAssign_operation (mSourceFile.reader_mFileName (inLexique COMMA_SOURCE_FILE_AT_LINE (237))) ;
  var_cas_outString.appendCString (" */ "
  "= {isa = PBXBuildFile; fileRef = ") ;
  var_cas_outString.dotAssign_operation (mSourceFile.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (238))) ;
  var_cas_outString.appendCString (" ; settings = {ATTRIBUTES = (); }; };\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXBuildFile::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXBuildFile:"
           << mSourceFile.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXBuildFile::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXBuildFile::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXBuildFile (& typeid (cPtr_Xcode_PBXBuildFile), NULL, "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXBuildFile::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXBuildFile ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXBuildFile::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXBuildFile (mSourceFile COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_Xcode_PBXBuildFile'                    *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile::
GGS_Xcode_PBXBuildFile (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile::
GGS_Xcode_PBXBuildFile (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXBuildFile GGS_Xcode_PBXBuildFile::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXBuildFile result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXBuildFile *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXBuildFile) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXBuildFile (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXBuildFile),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile GGS_Xcode_PBXBuildFile::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_Xcode_PBXFileReference_abstract & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXBuildFile result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXBuildFile (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFileReference_abstract  GGS_Xcode_PBXBuildFile::
reader_mSourceFile (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_PBXFileReference_abstract   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXBuildFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXBuildFile *) mPointer)->mSourceFile ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXBuildFile::
reader_PBXBuildFileKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXBuildFile *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXBuildFile *) mPointer)->reader_PBXBuildFileKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXBuildFile::actualTypeName (void) const {
  return "Xcode_PBXBuildFile" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_PBXBuildFile::galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_PBXBuildFile ("Xcode_PBXBuildFile") ;

//---------------------------------------------------------------------------*
//                                                                           *
//                Element of list '@Xcode_PBXBuildFile_list'                 *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXBuildFile_list::
elementOf_GGS_Xcode_PBXBuildFile_list (const GGS_Xcode_PBXBuildFile & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mFile (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXBuildFile_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXBuildFile_list * ptr = dynamic_cast <const elementOf_GGS_Xcode_PBXBuildFile_list *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mFile.operator_isEqual (ptr->mFile).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXBuildFile_list::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mFile.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     List '@Xcode_PBXBuildFile_list'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
_internalAppendValues (const GGS_Xcode_PBXBuildFile & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
_internalPrependValues (const GGS_Xcode_PBXBuildFile & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
_addAssign_operation (const GGS_Xcode_PBXBuildFile & argument_0) {
  if (isBuilt ()&& argument_0.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile_list GGS_Xcode_PBXBuildFile_list::
operator_concat (const GGS_Xcode_PBXBuildFile_list & inOperand) const {
  GGS_Xcode_PBXBuildFile_list result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
dotAssign_operation (const GGS_Xcode_PBXBuildFile_list inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXBuildFile_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_PBXBuildFile  p_0 = p->mFile ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_PBXBuildFile & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mFile
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile_list  GGS_Xcode_PBXBuildFile_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXBuildFile_list result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile_list  GGS_Xcode_PBXBuildFile_list::
constructor_listWithValue (const GGS_Xcode_PBXBuildFile & argument_0) {
  GGS_Xcode_PBXBuildFile_list result ;
  result.alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
internalSubListWithRange (GGS_Xcode_PBXBuildFile_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mFile) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile_list GGS_Xcode_PBXBuildFile_list::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXBuildFile_list result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile_list GGS_Xcode_PBXBuildFile_list::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXBuildFile_list result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXBuildFile_list::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@Xcode_PBXBuildFile_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
method_first (C_Compiler & inLexique,
              GGS_Xcode_PBXBuildFile & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mFile ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
method_last (C_Compiler & inLexique,
             GGS_Xcode_PBXBuildFile & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mFile ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_Xcode_PBXBuildFile & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mFile ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
modifier_popLast (C_Compiler & inLexique,
                GGS_Xcode_PBXBuildFile & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mFile ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile  GGS_Xcode_PBXBuildFile_list::
reader_mFileAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXBuildFile  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mFile ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXBuildFile_list::
modifier_setMFileAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_PBXBuildFile  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mFile = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXBuildFile  & GGS_Xcode_PBXBuildFile_list::cEnumerator::_mFile (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mFile ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'cPtr_Xcode_PBXSourcesBuildPhase'                   *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXSourcesBuildPhase::
cPtr_Xcode_PBXSourcesBuildPhase (const GGS_string& argument_0,
                                const GGS_Xcode_PBXBuildFile_list & argument_1
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mNameForComment (argument_0),
mFileReferenceList (argument_1),
_mOnce11630isComputed (false),
PBXSourcesBuildPhaseKey () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXSourcesBuildPhase * GGS_Xcode_PBXSourcesBuildPhase::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXSourcesBuildPhase *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXSourcesBuildPhase::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXSourcesBuildPhase * ptr = dynamic_cast <const cPtr_Xcode_PBXSourcesBuildPhase *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mNameForComment.operator_isEqual (ptr->mNameForComment).boolValue ()
         && mFileReferenceList.operator_isEqual (ptr->mFileReferenceList).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXSourcesBuildPhase::computeOnce11630 (C_Compiler & inLexique) const {
  _mOnce11630isComputed = true ;
  PBXSourcesBuildPhaseKey.drop () ;
  PBXSourcesBuildPhaseKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (260)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (260)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (260)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_PBXSourcesBuildPhase::reader_PBXSourcesBuildPhaseKey (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce11630isComputed) {
    computeOnce11630 (inLexique) ;
  }
  return PBXSourcesBuildPhaseKey ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXSourcesBuildPhase::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXSourcesBuildPhase:"
           << mNameForComment.reader_description  (inLexique COMMA_THERE, inIndentation + 1)
           << mFileReferenceList.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXSourcesBuildPhase::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXSourcesBuildPhase::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXSourcesBuildPhase (& typeid (cPtr_Xcode_PBXSourcesBuildPhase), NULL, "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXSourcesBuildPhase::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXSourcesBuildPhase ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXSourcesBuildPhase::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXSourcesBuildPhase (mNameForComment, mFileReferenceList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_Xcode_PBXSourcesBuildPhase'                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase::
GGS_Xcode_PBXSourcesBuildPhase (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase::
GGS_Xcode_PBXSourcesBuildPhase (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXSourcesBuildPhase GGS_Xcode_PBXSourcesBuildPhase::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXSourcesBuildPhase result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXSourcesBuildPhase) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXSourcesBuildPhase (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXSourcesBuildPhase),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase GGS_Xcode_PBXSourcesBuildPhase::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0,
                 const GGS_Xcode_PBXBuildFile_list & argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXSourcesBuildPhase result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXSourcesBuildPhase (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXSourcesBuildPhase::
reader_mNameForComment (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXSourcesBuildPhase *) mPointer)->mNameForComment ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile_list  GGS_Xcode_PBXSourcesBuildPhase::
reader_mFileReferenceList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_PBXBuildFile_list   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXSourcesBuildPhase *) mPointer)->mFileReferenceList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXSourcesBuildPhase::
reader_PBXSourcesBuildPhaseKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXSourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXSourcesBuildPhase *) mPointer)->reader_PBXSourcesBuildPhaseKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXSourcesBuildPhase::actualTypeName (void) const {
  return "Xcode_PBXSourcesBuildPhase" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_PBXSourcesBuildPhase::galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_PBXSourcesBuildPhase ("Xcode_PBXSourcesBuildPhase") ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@Xcode_PBXSourcesBuildPhase_list'             *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXSourcesBuildPhase_list::
elementOf_GGS_Xcode_PBXSourcesBuildPhase_list (const GGS_Xcode_PBXSourcesBuildPhase & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mBuildPhase (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXSourcesBuildPhase_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXSourcesBuildPhase_list * ptr = dynamic_cast <const elementOf_GGS_Xcode_PBXSourcesBuildPhase_list *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mBuildPhase.operator_isEqual (ptr->mBuildPhase).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXSourcesBuildPhase_list::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mBuildPhase.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 List '@Xcode_PBXSourcesBuildPhase_list'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
_internalAppendValues (const GGS_Xcode_PBXSourcesBuildPhase & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
_internalPrependValues (const GGS_Xcode_PBXSourcesBuildPhase & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
_addAssign_operation (const GGS_Xcode_PBXSourcesBuildPhase & argument_0) {
  if (isBuilt ()&& argument_0.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list GGS_Xcode_PBXSourcesBuildPhase_list::
operator_concat (const GGS_Xcode_PBXSourcesBuildPhase_list & inOperand) const {
  GGS_Xcode_PBXSourcesBuildPhase_list result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
dotAssign_operation (const GGS_Xcode_PBXSourcesBuildPhase_list inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXSourcesBuildPhase_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_PBXSourcesBuildPhase  p_0 = p->mBuildPhase ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_PBXSourcesBuildPhase & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mBuildPhase
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list  GGS_Xcode_PBXSourcesBuildPhase_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXSourcesBuildPhase_list result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list  GGS_Xcode_PBXSourcesBuildPhase_list::
constructor_listWithValue (const GGS_Xcode_PBXSourcesBuildPhase & argument_0) {
  GGS_Xcode_PBXSourcesBuildPhase_list result ;
  result.alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
internalSubListWithRange (GGS_Xcode_PBXSourcesBuildPhase_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mBuildPhase) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list GGS_Xcode_PBXSourcesBuildPhase_list::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXSourcesBuildPhase_list result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase_list GGS_Xcode_PBXSourcesBuildPhase_list::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXSourcesBuildPhase_list result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXSourcesBuildPhase_list::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@Xcode_PBXSourcesBuildPhase_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
method_first (C_Compiler & inLexique,
              GGS_Xcode_PBXSourcesBuildPhase & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
method_last (C_Compiler & inLexique,
             GGS_Xcode_PBXSourcesBuildPhase & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_Xcode_PBXSourcesBuildPhase & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
modifier_popLast (C_Compiler & inLexique,
                GGS_Xcode_PBXSourcesBuildPhase & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXSourcesBuildPhase  GGS_Xcode_PBXSourcesBuildPhase_list::
reader_mBuildPhaseAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXSourcesBuildPhase  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mBuildPhase ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXSourcesBuildPhase_list::
modifier_setMBuildPhaseAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_PBXSourcesBuildPhase  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mBuildPhase = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXSourcesBuildPhase  & GGS_Xcode_PBXSourcesBuildPhase_list::cEnumerator::_mBuildPhase (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mBuildPhase ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                class 'cPtr_Xcode_PBXResourcesBuildPhase'                  *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXResourcesBuildPhase::
cPtr_Xcode_PBXResourcesBuildPhase (const GGS_string& argument_0,
                                const GGS_Xcode_PBXBuildFile_list & argument_1
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mNameForComment (argument_0),
mFileReferenceList (argument_1),
_mOnce12456isComputed (false),
PBXResourcesBuildPhaseKey () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXResourcesBuildPhase * GGS_Xcode_PBXResourcesBuildPhase::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXResourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXResourcesBuildPhase *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXResourcesBuildPhase::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXResourcesBuildPhase * ptr = dynamic_cast <const cPtr_Xcode_PBXResourcesBuildPhase *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mNameForComment.operator_isEqual (ptr->mNameForComment).boolValue ()
         && mFileReferenceList.operator_isEqual (ptr->mFileReferenceList).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXResourcesBuildPhase::computeOnce12456 (C_Compiler & inLexique) const {
  _mOnce12456isComputed = true ;
  PBXResourcesBuildPhaseKey.drop () ;
  PBXResourcesBuildPhaseKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (281)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (281)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (281)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_PBXResourcesBuildPhase::reader_PBXResourcesBuildPhaseKey (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce12456isComputed) {
    computeOnce12456 (inLexique) ;
  }
  return PBXResourcesBuildPhaseKey ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXResourcesBuildPhase::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXResourcesBuildPhase:"
           << mNameForComment.reader_description  (inLexique COMMA_THERE, inIndentation + 1)
           << mFileReferenceList.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXResourcesBuildPhase::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXResourcesBuildPhase::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXResourcesBuildPhase (& typeid (cPtr_Xcode_PBXResourcesBuildPhase), NULL, "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXResourcesBuildPhase::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXResourcesBuildPhase ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXResourcesBuildPhase::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXResourcesBuildPhase (mNameForComment, mFileReferenceList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_Xcode_PBXResourcesBuildPhase'               *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXResourcesBuildPhase::
GGS_Xcode_PBXResourcesBuildPhase (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXResourcesBuildPhase::
GGS_Xcode_PBXResourcesBuildPhase (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXResourcesBuildPhase GGS_Xcode_PBXResourcesBuildPhase::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXResourcesBuildPhase result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXResourcesBuildPhase *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXResourcesBuildPhase) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXResourcesBuildPhase (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXResourcesBuildPhase),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXResourcesBuildPhase GGS_Xcode_PBXResourcesBuildPhase::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0,
                 const GGS_Xcode_PBXBuildFile_list & argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXResourcesBuildPhase result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXResourcesBuildPhase (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXResourcesBuildPhase::
reader_mNameForComment (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXResourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXResourcesBuildPhase *) mPointer)->mNameForComment ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile_list  GGS_Xcode_PBXResourcesBuildPhase::
reader_mFileReferenceList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_PBXBuildFile_list   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXResourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXResourcesBuildPhase *) mPointer)->mFileReferenceList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXResourcesBuildPhase::
reader_PBXResourcesBuildPhaseKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXResourcesBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXResourcesBuildPhase *) mPointer)->reader_PBXResourcesBuildPhaseKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXResourcesBuildPhase::actualTypeName (void) const {
  return "Xcode_PBXResourcesBuildPhase" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_PBXResourcesBuildPhase::galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_PBXResourcesBuildPhase ("Xcode_PBXResourcesBuildPhase") ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of list '@Xcode_PBXResourcesBuildPhase_list'            *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXResourcesBuildPhase_list::
elementOf_GGS_Xcode_PBXResourcesBuildPhase_list (const GGS_Xcode_PBXResourcesBuildPhase & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mBuildPhase (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXResourcesBuildPhase_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXResourcesBuildPhase_list * ptr = dynamic_cast <const elementOf_GGS_Xcode_PBXResourcesBuildPhase_list *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mBuildPhase.operator_isEqual (ptr->mBuildPhase).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXResourcesBuildPhase_list::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mBuildPhase.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                List '@Xcode_PBXResourcesBuildPhase_list'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
_internalAppendValues (const GGS_Xcode_PBXResourcesBuildPhase & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
_internalPrependValues (const GGS_Xcode_PBXResourcesBuildPhase & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
_addAssign_operation (const GGS_Xcode_PBXResourcesBuildPhase & argument_0) {
  if (isBuilt ()&& argument_0.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXResourcesBuildPhase_list GGS_Xcode_PBXResourcesBuildPhase_list::
operator_concat (const GGS_Xcode_PBXResourcesBuildPhase_list & inOperand) const {
  GGS_Xcode_PBXResourcesBuildPhase_list result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
dotAssign_operation (const GGS_Xcode_PBXResourcesBuildPhase_list inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXResourcesBuildPhase_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_PBXResourcesBuildPhase  p_0 = p->mBuildPhase ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_PBXResourcesBuildPhase & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mBuildPhase
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXResourcesBuildPhase_list  GGS_Xcode_PBXResourcesBuildPhase_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXResourcesBuildPhase_list result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXResourcesBuildPhase_list  GGS_Xcode_PBXResourcesBuildPhase_list::
constructor_listWithValue (const GGS_Xcode_PBXResourcesBuildPhase & argument_0) {
  GGS_Xcode_PBXResourcesBuildPhase_list result ;
  result.alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
internalSubListWithRange (GGS_Xcode_PBXResourcesBuildPhase_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mBuildPhase) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXResourcesBuildPhase_list GGS_Xcode_PBXResourcesBuildPhase_list::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXResourcesBuildPhase_list result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXResourcesBuildPhase_list GGS_Xcode_PBXResourcesBuildPhase_list::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXResourcesBuildPhase_list result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXResourcesBuildPhase_list::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@Xcode_PBXResourcesBuildPhase_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
method_first (C_Compiler & inLexique,
              GGS_Xcode_PBXResourcesBuildPhase & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
method_last (C_Compiler & inLexique,
             GGS_Xcode_PBXResourcesBuildPhase & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_Xcode_PBXResourcesBuildPhase & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
modifier_popLast (C_Compiler & inLexique,
                GGS_Xcode_PBXResourcesBuildPhase & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXResourcesBuildPhase  GGS_Xcode_PBXResourcesBuildPhase_list::
reader_mBuildPhaseAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXResourcesBuildPhase  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mBuildPhase ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXResourcesBuildPhase_list::
modifier_setMBuildPhaseAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_PBXResourcesBuildPhase  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mBuildPhase = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXResourcesBuildPhase  & GGS_Xcode_PBXResourcesBuildPhase_list::cEnumerator::_mBuildPhase (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mBuildPhase ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                class 'cPtr_Xcode_PBXFrameworksBuildPhase'                 *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXFrameworksBuildPhase::
cPtr_Xcode_PBXFrameworksBuildPhase (const GGS_string& argument_0,
                                const GGS_Xcode_PBXBuildFile_list & argument_1
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mNameForComment (argument_0),
mFileReferenceList (argument_1),
_mOnce13295isComputed (false),
PBXFrameworksBuildPhaseKey () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXFrameworksBuildPhase * GGS_Xcode_PBXFrameworksBuildPhase::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFrameworksBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXFrameworksBuildPhase *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXFrameworksBuildPhase::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXFrameworksBuildPhase * ptr = dynamic_cast <const cPtr_Xcode_PBXFrameworksBuildPhase *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mNameForComment.operator_isEqual (ptr->mNameForComment).boolValue ()
         && mFileReferenceList.operator_isEqual (ptr->mFileReferenceList).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFrameworksBuildPhase::computeOnce13295 (C_Compiler & inLexique) const {
  _mOnce13295isComputed = true ;
  PBXFrameworksBuildPhaseKey.drop () ;
  PBXFrameworksBuildPhaseKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (302)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (302)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (302)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_PBXFrameworksBuildPhase::reader_PBXFrameworksBuildPhaseKey (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce13295isComputed) {
    computeOnce13295 (inLexique) ;
  }
  return PBXFrameworksBuildPhaseKey ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFrameworksBuildPhase::
method_buildXcodeProject (C_Compiler & inLexique,
                                GGS_string& var_cas_outString COMMA_UNUSED_LOCATION_ARGS) const {
  var_cas_outString.appendCString ("\t\t") ;
  var_cas_outString.dotAssign_operation ((*this) /* self */.reader_PBXFrameworksBuildPhaseKey (inLexique COMMA_SOURCE_FILE_AT_LINE (306))) ;
  var_cas_outString.appendCString (" /* Frameworks */ = {\n"
  "\t\t\tisa = PBXFrameworksBuildPhase;\n"
  "\t\t\tbuildActionMask = 2147483647;\n"
  "\t\t\tfiles = (\n") ;
  {
    GGS_Xcode_PBXBuildFile_list::cEnumerator enumerator_13575 (mFileReferenceList, true) ;
    const GGS_Xcode_PBXBuildFile_list::cElement * operand_13575 = NULL ;
    while (((operand_13575 = enumerator_13575.nextObject ()))) {
      macroValidPointer (operand_13575) ;
      var_cas_outString.appendCString ("\t\t\t\t") ;
      var_cas_outString.dotAssign_operation (operand_13575->mFile.reader_PBXBuildFileKey (inLexique COMMA_SOURCE_FILE_AT_LINE (311))) ;
      var_cas_outString.appendCString (" /* ") ;
      var_cas_outString.dotAssign_operation (operand_13575->mFile.reader_mSourceFile (inLexique COMMA_SOURCE_FILE_AT_LINE (312)).reader_mFileName (inLexique COMMA_SOURCE_FILE_AT_LINE (312))) ;
      var_cas_outString.appendCString (" */,\n") ;
    }
  }
  var_cas_outString.appendCString ("\t\t\t);\n"
  "\t\t\trunOnlyForDeploymentPostprocessing = 0;\n"
  "\t\t};\n") ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXFrameworksBuildPhase::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXFrameworksBuildPhase:"
           << mNameForComment.reader_description  (inLexique COMMA_THERE, inIndentation + 1)
           << mFileReferenceList.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFrameworksBuildPhase::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXFrameworksBuildPhase::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXFrameworksBuildPhase (& typeid (cPtr_Xcode_PBXFrameworksBuildPhase), NULL, "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXFrameworksBuildPhase::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXFrameworksBuildPhase ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXFrameworksBuildPhase::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXFrameworksBuildPhase (mNameForComment, mFileReferenceList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             GALGAS class 'GGS_Xcode_PBXFrameworksBuildPhase'              *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXFrameworksBuildPhase::
GGS_Xcode_PBXFrameworksBuildPhase (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFrameworksBuildPhase::
GGS_Xcode_PBXFrameworksBuildPhase (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXFrameworksBuildPhase GGS_Xcode_PBXFrameworksBuildPhase::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFrameworksBuildPhase result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXFrameworksBuildPhase *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXFrameworksBuildPhase) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXFrameworksBuildPhase (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXFrameworksBuildPhase),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFrameworksBuildPhase GGS_Xcode_PBXFrameworksBuildPhase::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0,
                 const GGS_Xcode_PBXBuildFile_list & argument_1
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXFrameworksBuildPhase result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXFrameworksBuildPhase (argument_0,
                                argument_1 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFrameworksBuildPhase::
reader_mNameForComment (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFrameworksBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXFrameworksBuildPhase *) mPointer)->mNameForComment ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXBuildFile_list  GGS_Xcode_PBXFrameworksBuildPhase::
reader_mFileReferenceList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_Xcode_PBXBuildFile_list   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFrameworksBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXFrameworksBuildPhase *) mPointer)->mFileReferenceList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFrameworksBuildPhase::
reader_PBXFrameworksBuildPhaseKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXFrameworksBuildPhase *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXFrameworksBuildPhase *) mPointer)->reader_PBXFrameworksBuildPhaseKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXFrameworksBuildPhase::actualTypeName (void) const {
  return "Xcode_PBXFrameworksBuildPhase" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_PBXFrameworksBuildPhase::galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_PBXFrameworksBuildPhase ("Xcode_PBXFrameworksBuildPhase") ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Element of list '@Xcode_PBXFrameworksBuildPhase_list'            *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXFrameworksBuildPhase_list::
elementOf_GGS_Xcode_PBXFrameworksBuildPhase_list (const GGS_Xcode_PBXFrameworksBuildPhase & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mBuildPhase (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXFrameworksBuildPhase_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXFrameworksBuildPhase_list * ptr = dynamic_cast <const elementOf_GGS_Xcode_PBXFrameworksBuildPhase_list *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mBuildPhase.operator_isEqual (ptr->mBuildPhase).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXFrameworksBuildPhase_list::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mBuildPhase.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                List '@Xcode_PBXFrameworksBuildPhase_list'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
_internalAppendValues (const GGS_Xcode_PBXFrameworksBuildPhase & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
_internalPrependValues (const GGS_Xcode_PBXFrameworksBuildPhase & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
_addAssign_operation (const GGS_Xcode_PBXFrameworksBuildPhase & argument_0) {
  if (isBuilt ()&& argument_0.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFrameworksBuildPhase_list GGS_Xcode_PBXFrameworksBuildPhase_list::
operator_concat (const GGS_Xcode_PBXFrameworksBuildPhase_list & inOperand) const {
  GGS_Xcode_PBXFrameworksBuildPhase_list result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
dotAssign_operation (const GGS_Xcode_PBXFrameworksBuildPhase_list inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXFrameworksBuildPhase_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_PBXFrameworksBuildPhase  p_0 = p->mBuildPhase ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_PBXFrameworksBuildPhase & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mBuildPhase
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFrameworksBuildPhase_list  GGS_Xcode_PBXFrameworksBuildPhase_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXFrameworksBuildPhase_list result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFrameworksBuildPhase_list  GGS_Xcode_PBXFrameworksBuildPhase_list::
constructor_listWithValue (const GGS_Xcode_PBXFrameworksBuildPhase & argument_0) {
  GGS_Xcode_PBXFrameworksBuildPhase_list result ;
  result.alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
internalSubListWithRange (GGS_Xcode_PBXFrameworksBuildPhase_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mBuildPhase) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFrameworksBuildPhase_list GGS_Xcode_PBXFrameworksBuildPhase_list::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXFrameworksBuildPhase_list result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFrameworksBuildPhase_list GGS_Xcode_PBXFrameworksBuildPhase_list::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXFrameworksBuildPhase_list result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXFrameworksBuildPhase_list::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@Xcode_PBXFrameworksBuildPhase_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
method_first (C_Compiler & inLexique,
              GGS_Xcode_PBXFrameworksBuildPhase & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
method_last (C_Compiler & inLexique,
             GGS_Xcode_PBXFrameworksBuildPhase & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_Xcode_PBXFrameworksBuildPhase & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
modifier_popLast (C_Compiler & inLexique,
                GGS_Xcode_PBXFrameworksBuildPhase & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildPhase ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXFrameworksBuildPhase  GGS_Xcode_PBXFrameworksBuildPhase_list::
reader_mBuildPhaseAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXFrameworksBuildPhase  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mBuildPhase ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXFrameworksBuildPhase_list::
modifier_setMBuildPhaseAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_PBXFrameworksBuildPhase  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mBuildPhase = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXFrameworksBuildPhase  & GGS_Xcode_PBXFrameworksBuildPhase_list::cEnumerator::_mBuildPhase (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mBuildPhase ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                       class 'cPtr_Xcode_PBXGroup'                         *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_PBXGroup::
cPtr_Xcode_PBXGroup (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_XcodeObjectReferenceList & argument_2
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mGroupName (argument_0),
mGroupPath (argument_1),
mChildrenGroupList (argument_2),
_mOnce14646isComputed (false),
PBXGroupKey () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_PBXGroup * GGS_Xcode_PBXGroup::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXGroup *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_PBXGroup *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_PBXGroup::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_PBXGroup * ptr = dynamic_cast <const cPtr_Xcode_PBXGroup *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mGroupName.operator_isEqual (ptr->mGroupName).boolValue ()
         && mGroupPath.operator_isEqual (ptr->mGroupPath).boolValue ()
         && mChildrenGroupList.operator_isEqual (ptr->mChildrenGroupList).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXGroup::computeOnce14646 (C_Compiler & inLexique) const {
  _mOnce14646isComputed = true ;
  PBXGroupKey.drop () ;
  PBXGroupKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (338)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (338)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (338)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_PBXGroup::reader_PBXGroupKey (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce14646isComputed) {
    computeOnce14646 (inLexique) ;
  }
  return PBXGroupKey ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_PBXGroup::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_PBXGroup:"
           << mGroupName.reader_description  (inLexique COMMA_THERE, inIndentation + 1)
           << mGroupPath.reader_description  (inLexique COMMA_THERE, inIndentation + 1)
           << mChildrenGroupList.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXGroup::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_PBXGroup::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_PBXGroup (& typeid (cPtr_Xcode_PBXGroup), NULL, "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_PBXGroup::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_PBXGroup ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_PBXGroup::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_PBXGroup (mGroupName, mGroupPath, mChildrenGroupList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_Xcode_PBXGroup'                      *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup::
GGS_Xcode_PBXGroup (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup::
GGS_Xcode_PBXGroup (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_PBXGroup GGS_Xcode_PBXGroup::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXGroup result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_PBXGroup *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_PBXGroup) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_PBXGroup (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_PBXGroup),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup GGS_Xcode_PBXGroup::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0,
                 const GGS_string& argument_1,
                 const GGS_XcodeObjectReferenceList & argument_2
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_PBXGroup result ;
  macroMyNew (result.mPointer, cPtr_Xcode_PBXGroup (argument_0,
                                argument_1,
                                argument_2 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXGroup::
reader_mGroupName (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXGroup *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXGroup *) mPointer)->mGroupName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXGroup::
reader_mGroupPath (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXGroup *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXGroup *) mPointer)->mGroupPath ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_XcodeObjectReferenceList  GGS_Xcode_PBXGroup::
reader_mChildrenGroupList (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_XcodeObjectReferenceList   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXGroup *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXGroup *) mPointer)->mChildrenGroupList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXGroup::
reader_PBXGroupKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_PBXGroup *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_PBXGroup *) mPointer)->reader_PBXGroupKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_PBXGroup::actualTypeName (void) const {
  return "Xcode_PBXGroup" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_PBXGroup::galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_PBXGroup ("Xcode_PBXGroup") ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of list '@Xcode_PBXGroup_list'                   *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXGroup_list::
elementOf_GGS_Xcode_PBXGroup_list (const GGS_Xcode_PBXGroup & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mGroup (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXGroup_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXGroup_list * ptr = dynamic_cast <const elementOf_GGS_Xcode_PBXGroup_list *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mGroup.operator_isEqual (ptr->mGroup).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXGroup_list::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mGroup.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                       List '@Xcode_PBXGroup_list'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
_internalAppendValues (const GGS_Xcode_PBXGroup & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
_internalPrependValues (const GGS_Xcode_PBXGroup & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
_addAssign_operation (const GGS_Xcode_PBXGroup & argument_0) {
  if (isBuilt ()&& argument_0.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list GGS_Xcode_PBXGroup_list::
operator_concat (const GGS_Xcode_PBXGroup_list & inOperand) const {
  GGS_Xcode_PBXGroup_list result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
dotAssign_operation (const GGS_Xcode_PBXGroup_list inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXGroup_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_PBXGroup  p_0 = p->mGroup ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_PBXGroup & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mGroup
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list  GGS_Xcode_PBXGroup_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXGroup_list result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list  GGS_Xcode_PBXGroup_list::
constructor_listWithValue (const GGS_Xcode_PBXGroup & argument_0) {
  GGS_Xcode_PBXGroup_list result ;
  result.alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
internalSubListWithRange (GGS_Xcode_PBXGroup_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mGroup) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list GGS_Xcode_PBXGroup_list::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXGroup_list result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup_list GGS_Xcode_PBXGroup_list::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXGroup_list result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXGroup_list::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@Xcode_PBXGroup_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
method_first (C_Compiler & inLexique,
              GGS_Xcode_PBXGroup & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mGroup ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
method_last (C_Compiler & inLexique,
             GGS_Xcode_PBXGroup & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mGroup ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_Xcode_PBXGroup & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mGroup ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
modifier_popLast (C_Compiler & inLexique,
                GGS_Xcode_PBXGroup & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mGroup ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXGroup  GGS_Xcode_PBXGroup_list::
reader_mGroupAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXGroup  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mGroup ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXGroup_list::
modifier_setMGroupAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_PBXGroup  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mGroup = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_PBXGroup  & GGS_Xcode_PBXGroup_list::cEnumerator::_mGroup (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mGroup ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 class 'cPtr_Xcode_XCBuildConfiguration'                   *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_XCBuildConfiguration::
cPtr_Xcode_XCBuildConfiguration (const GGS_stringlist & argument_0
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mSettings (argument_0),
_mOnce15378isComputed (false),
configurationKey (),
_mOnce15518isComputed (false),
XCBuildConfigurationKey () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_XCBuildConfiguration * GGS_Xcode_XCBuildConfiguration::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_XCBuildConfiguration *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_XCBuildConfiguration::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_XCBuildConfiguration * ptr = dynamic_cast <const cPtr_Xcode_XCBuildConfiguration *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mSettings.operator_isEqual (ptr->mSettings).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_XCBuildConfiguration::computeOnce15378 (C_Compiler & inLexique) const {
  _mOnce15378isComputed = true ;
  configurationKey.drop () ;
  configurationKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (358)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (358)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (358)) ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_XCBuildConfiguration::computeOnce15518 (C_Compiler & inLexique) const {
  _mOnce15518isComputed = true ;
  XCBuildConfigurationKey.drop () ;
  XCBuildConfigurationKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (362)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (362)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (362)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_XCBuildConfiguration::reader_configurationKey (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce15378isComputed) {
    computeOnce15378 (inLexique) ;
  }
  return configurationKey ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_XCBuildConfiguration::reader_XCBuildConfigurationKey (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce15518isComputed) {
    computeOnce15518 (inLexique) ;
  }
  return XCBuildConfigurationKey ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_XCBuildConfiguration::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_XCBuildConfiguration:"
           << mSettings.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_XCBuildConfiguration::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_XCBuildConfiguration::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_XCBuildConfiguration (& typeid (cPtr_Xcode_XCBuildConfiguration), NULL, "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_XCBuildConfiguration::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_XCBuildConfiguration ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_XCBuildConfiguration::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_XCBuildConfiguration (mSettings COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              GALGAS class 'GGS_Xcode_XCBuildConfiguration'                *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration::
GGS_Xcode_XCBuildConfiguration (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration::
GGS_Xcode_XCBuildConfiguration (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_XCBuildConfiguration GGS_Xcode_XCBuildConfiguration::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_XCBuildConfiguration result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_XCBuildConfiguration) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_XCBuildConfiguration (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_XCBuildConfiguration),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration GGS_Xcode_XCBuildConfiguration::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_stringlist & argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_XCBuildConfiguration result ;
  macroMyNew (result.mPointer, cPtr_Xcode_XCBuildConfiguration (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_stringlist  GGS_Xcode_XCBuildConfiguration::
reader_mSettings (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_stringlist   result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_XCBuildConfiguration *) mPointer)->mSettings ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_XCBuildConfiguration::
reader_configurationKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_XCBuildConfiguration *) mPointer)->reader_configurationKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_XCBuildConfiguration::
reader_XCBuildConfigurationKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_XCBuildConfiguration *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_XCBuildConfiguration *) mPointer)->reader_XCBuildConfigurationKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_XCBuildConfiguration::actualTypeName (void) const {
  return "Xcode_XCBuildConfiguration" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_XCBuildConfiguration::galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_XCBuildConfiguration ("Xcode_XCBuildConfiguration") ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Element of list '@Xcode_XCBuildConfiguration_list'             *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_XCBuildConfiguration_list::
elementOf_GGS_Xcode_XCBuildConfiguration_list (const GGS_Xcode_XCBuildConfiguration & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mBuildConfig (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_XCBuildConfiguration_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_XCBuildConfiguration_list * ptr = dynamic_cast <const elementOf_GGS_Xcode_XCBuildConfiguration_list *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mBuildConfig.operator_isEqual (ptr->mBuildConfig).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_XCBuildConfiguration_list::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mBuildConfig.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 List '@Xcode_XCBuildConfiguration_list'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
_internalAppendValues (const GGS_Xcode_XCBuildConfiguration & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
_internalPrependValues (const GGS_Xcode_XCBuildConfiguration & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
_addAssign_operation (const GGS_Xcode_XCBuildConfiguration & argument_0) {
  if (isBuilt ()&& argument_0.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list GGS_Xcode_XCBuildConfiguration_list::
operator_concat (const GGS_Xcode_XCBuildConfiguration_list & inOperand) const {
  GGS_Xcode_XCBuildConfiguration_list result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
dotAssign_operation (const GGS_Xcode_XCBuildConfiguration_list inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_XCBuildConfiguration_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_XCBuildConfiguration  p_0 = p->mBuildConfig ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_XCBuildConfiguration & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mBuildConfig
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list  GGS_Xcode_XCBuildConfiguration_list::
constructor_emptyList (void) {
  GGS_Xcode_XCBuildConfiguration_list result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list  GGS_Xcode_XCBuildConfiguration_list::
constructor_listWithValue (const GGS_Xcode_XCBuildConfiguration & argument_0) {
  GGS_Xcode_XCBuildConfiguration_list result ;
  result.alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
internalSubListWithRange (GGS_Xcode_XCBuildConfiguration_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mBuildConfig) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list GGS_Xcode_XCBuildConfiguration_list::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_XCBuildConfiguration_list result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration_list GGS_Xcode_XCBuildConfiguration_list::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_XCBuildConfiguration_list result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_XCBuildConfiguration_list::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@Xcode_XCBuildConfiguration_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
method_first (C_Compiler & inLexique,
              GGS_Xcode_XCBuildConfiguration & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildConfig ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
method_last (C_Compiler & inLexique,
             GGS_Xcode_XCBuildConfiguration & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildConfig ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_Xcode_XCBuildConfiguration & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildConfig ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
modifier_popLast (C_Compiler & inLexique,
                GGS_Xcode_XCBuildConfiguration & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mBuildConfig ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration  GGS_Xcode_XCBuildConfiguration_list::
reader_mBuildConfigAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_XCBuildConfiguration  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mBuildConfig ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_XCBuildConfiguration_list::
modifier_setMBuildConfigAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_XCBuildConfiguration  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mBuildConfig = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_XCBuildConfiguration  & GGS_Xcode_XCBuildConfiguration_list::cEnumerator::_mBuildConfig (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mBuildConfig ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@Xcode_PBXNativeTarget_list'                *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXNativeTarget_list::
elementOf_GGS_Xcode_PBXNativeTarget_list (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_Xcode_XCBuildConfiguration & argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4,
                                const GGS_Xcode_productFileReference & argument_5,
                                const GGS_stringlist & argument_6,
                                const GGS_stringlist & argument_7
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mTargetKey (argument_0),
mTargetName (argument_1),
mTargetConfiguration (argument_2),
mProductInstallPath (argument_3),
mProductName (argument_4),
mProduct (argument_5),
mBuildPhaseKeyList (argument_6),
mDependencyKeyList (argument_7) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXNativeTarget_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXNativeTarget_list * ptr = dynamic_cast <const elementOf_GGS_Xcode_PBXNativeTarget_list *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mTargetKey.operator_isEqual (ptr->mTargetKey).boolValue ()
         && mTargetName.operator_isEqual (ptr->mTargetName).boolValue ()
         && mTargetConfiguration.operator_isEqual (ptr->mTargetConfiguration).boolValue ()
         && mProductInstallPath.operator_isEqual (ptr->mProductInstallPath).boolValue ()
         && mProductName.operator_isEqual (ptr->mProductName).boolValue ()
         && mProduct.operator_isEqual (ptr->mProduct).boolValue ()
         && mBuildPhaseKeyList.operator_isEqual (ptr->mBuildPhaseKeyList).boolValue ()
         && mDependencyKeyList.operator_isEqual (ptr->mDependencyKeyList).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXNativeTarget_list::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mTargetKey.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mTargetName.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mTargetConfiguration.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mProductInstallPath.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mProductName.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mProduct.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mBuildPhaseKeyList.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mDependencyKeyList.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    List '@Xcode_PBXNativeTarget_list'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
_internalAppendValues (const GGS_string& argument_0,
                    const GGS_string& argument_1,
                    const GGS_Xcode_XCBuildConfiguration & argument_2,
                    const GGS_string& argument_3,
                    const GGS_string& argument_4,
                    const GGS_Xcode_productFileReference & argument_5,
                    const GGS_stringlist & argument_6,
                    const GGS_stringlist & argument_7
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
_internalPrependValues (const GGS_string& argument_0,
                    const GGS_string& argument_1,
                    const GGS_Xcode_XCBuildConfiguration & argument_2,
                    const GGS_string& argument_3,
                    const GGS_string& argument_4,
                    const GGS_Xcode_productFileReference & argument_5,
                    const GGS_stringlist & argument_6,
                    const GGS_stringlist & argument_7
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
_addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_Xcode_XCBuildConfiguration & argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4,
                                const GGS_Xcode_productFileReference & argument_5,
                                const GGS_stringlist & argument_6,
                                const GGS_stringlist & argument_7) {
  if (isBuilt ()&& argument_0.isBuilt ()&& argument_1.isBuilt ()&& argument_2.isBuilt ()&& argument_3.isBuilt ()&& argument_4.isBuilt ()&& argument_5.isBuilt ()&& argument_6.isBuilt ()&& argument_7.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list GGS_Xcode_PBXNativeTarget_list::
operator_concat (const GGS_Xcode_PBXNativeTarget_list & inOperand) const {
  GGS_Xcode_PBXNativeTarget_list result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
dotAssign_operation (const GGS_Xcode_PBXNativeTarget_list inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXNativeTarget_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_string p_0 = p->mTargetKey ;
          GGS_string p_1 = p->mTargetName ;
          GGS_Xcode_XCBuildConfiguration  p_2 = p->mTargetConfiguration ;
          GGS_string p_3 = p->mProductInstallPath ;
          GGS_string p_4 = p->mProductName ;
          GGS_Xcode_productFileReference  p_5 = p->mProduct ;
          GGS_stringlist  p_6 = p->mBuildPhaseKeyList ;
          GGS_stringlist  p_7 = p->mDependencyKeyList ;
          _internalAppendValues (p_0, p_1, p_2, p_3, p_4, p_5, p_6, p_7 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_string& argument_0,
                     const GGS_string& argument_1,
                     const GGS_Xcode_XCBuildConfiguration & argument_2,
                     const GGS_string& argument_3,
                     const GGS_string& argument_4,
                     const GGS_Xcode_productFileReference & argument_5,
                     const GGS_stringlist & argument_6,
                     const GGS_stringlist & argument_7
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0,
                                argument_1,
                                argument_2,
                                argument_3,
                                argument_4,
                                argument_5,
                                argument_6,
                                argument_7
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mTargetKey,
                                ptr->mTargetName,
                                ptr->mTargetConfiguration,
                                ptr->mProductInstallPath,
                                ptr->mProductName,
                                ptr->mProduct,
                                ptr->mBuildPhaseKeyList,
                                ptr->mDependencyKeyList
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list  GGS_Xcode_PBXNativeTarget_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXNativeTarget_list result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list  GGS_Xcode_PBXNativeTarget_list::
constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_Xcode_XCBuildConfiguration & argument_2,
                                const GGS_string& argument_3,
                                const GGS_string& argument_4,
                                const GGS_Xcode_productFileReference & argument_5,
                                const GGS_stringlist & argument_6,
                                const GGS_stringlist & argument_7) {
  GGS_Xcode_PBXNativeTarget_list result ;
  result.alloc () ;
  result._addAssign_operation (argument_0, argument_1, argument_2, argument_3, argument_4, argument_5, argument_6, argument_7) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
internalSubListWithRange (GGS_Xcode_PBXNativeTarget_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mTargetKey, ptr->mTargetName, ptr->mTargetConfiguration, ptr->mProductInstallPath, ptr->mProductName, ptr->mProduct, ptr->mBuildPhaseKeyList, ptr->mDependencyKeyList) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list GGS_Xcode_PBXNativeTarget_list::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXNativeTarget_list result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXNativeTarget_list GGS_Xcode_PBXNativeTarget_list::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXNativeTarget_list result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@Xcode_PBXNativeTarget_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
method_first (C_Compiler & inLexique,
              GGS_string& _out_0,
              GGS_string& _out_1,
              GGS_Xcode_XCBuildConfiguration & _out_2,
              GGS_string& _out_3,
              GGS_string& _out_4,
              GGS_Xcode_productFileReference & _out_5,
              GGS_stringlist & _out_6,
              GGS_stringlist & _out_7
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mTargetKey ;
    _out_1 = ptr->mTargetName ;
    _out_2 = ptr->mTargetConfiguration ;
    _out_3 = ptr->mProductInstallPath ;
    _out_4 = ptr->mProductName ;
    _out_5 = ptr->mProduct ;
    _out_6 = ptr->mBuildPhaseKeyList ;
    _out_7 = ptr->mDependencyKeyList ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
    _out_5.drop () ;
    _out_6.drop () ;
    _out_7.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
method_last (C_Compiler & inLexique,
             GGS_string& _out_0,
             GGS_string& _out_1,
             GGS_Xcode_XCBuildConfiguration & _out_2,
             GGS_string& _out_3,
             GGS_string& _out_4,
             GGS_Xcode_productFileReference & _out_5,
             GGS_stringlist & _out_6,
             GGS_stringlist & _out_7
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mTargetKey ;
    _out_1 = ptr->mTargetName ;
    _out_2 = ptr->mTargetConfiguration ;
    _out_3 = ptr->mProductInstallPath ;
    _out_4 = ptr->mProductName ;
    _out_5 = ptr->mProduct ;
    _out_6 = ptr->mBuildPhaseKeyList ;
    _out_7 = ptr->mDependencyKeyList ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
    _out_5.drop () ;
    _out_6.drop () ;
    _out_7.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_string& _out_0,
                 GGS_string& _out_1,
                 GGS_Xcode_XCBuildConfiguration & _out_2,
                 GGS_string& _out_3,
                 GGS_string& _out_4,
                 GGS_Xcode_productFileReference & _out_5,
                 GGS_stringlist & _out_6,
                 GGS_stringlist & _out_7
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mTargetKey ;
    _out_1 = ptr->mTargetName ;
    _out_2 = ptr->mTargetConfiguration ;
    _out_3 = ptr->mProductInstallPath ;
    _out_4 = ptr->mProductName ;
    _out_5 = ptr->mProduct ;
    _out_6 = ptr->mBuildPhaseKeyList ;
    _out_7 = ptr->mDependencyKeyList ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
    _out_5.drop () ;
    _out_6.drop () ;
    _out_7.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_popLast (C_Compiler & inLexique,
                GGS_string& _out_0,
                GGS_string& _out_1,
                GGS_Xcode_XCBuildConfiguration & _out_2,
                GGS_string& _out_3,
                GGS_string& _out_4,
                GGS_Xcode_productFileReference & _out_5,
                GGS_stringlist & _out_6,
                GGS_stringlist & _out_7
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mTargetKey ;
    _out_1 = ptr->mTargetName ;
    _out_2 = ptr->mTargetConfiguration ;
    _out_3 = ptr->mProductInstallPath ;
    _out_4 = ptr->mProductName ;
    _out_5 = ptr->mProduct ;
    _out_6 = ptr->mBuildPhaseKeyList ;
    _out_7 = ptr->mDependencyKeyList ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
    _out_3.drop () ;
    _out_4.drop () ;
    _out_5.drop () ;
    _out_6.drop () ;
    _out_7.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mTargetKeyAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mTargetKey ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mTargetNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mTargetName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_XCBuildConfiguration  GGS_Xcode_PBXNativeTarget_list::
reader_mTargetConfigurationAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_XCBuildConfiguration  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mTargetConfiguration ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mProductInstallPathAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mProductInstallPath ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXNativeTarget_list::
reader_mProductNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mProductName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_productFileReference  GGS_Xcode_PBXNativeTarget_list::
reader_mProductAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_productFileReference  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mProduct ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_stringlist  GGS_Xcode_PBXNativeTarget_list::
reader_mBuildPhaseKeyListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_stringlist  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mBuildPhaseKeyList ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_stringlist  GGS_Xcode_PBXNativeTarget_list::
reader_mDependencyKeyListAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_stringlist  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mDependencyKeyList ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMTargetKeyAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mTargetKey = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMTargetNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mTargetName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMTargetConfigurationAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_XCBuildConfiguration  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mTargetConfiguration = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMProductInstallPathAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mProductInstallPath = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMProductNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mProductName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMProductAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_productFileReference  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mProduct = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMBuildPhaseKeyListAtIndex (C_Compiler & inLexique,
                              const GGS_stringlist  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mBuildPhaseKeyList = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXNativeTarget_list::
modifier_setMDependencyKeyListAtIndex (C_Compiler & inLexique,
                              const GGS_stringlist  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mDependencyKeyList = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mTargetKey (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mTargetKey ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mTargetName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mTargetName ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_XCBuildConfiguration  & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mTargetConfiguration (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mTargetConfiguration ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mProductInstallPath (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mProductInstallPath ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mProductName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mProductName ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_productFileReference  & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mProduct (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mProduct ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_stringlist  & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mBuildPhaseKeyList (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mBuildPhaseKeyList ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_stringlist  & GGS_Xcode_PBXNativeTarget_list::cEnumerator::_mDependencyKeyList (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mDependencyKeyList ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              class 'cPtr_Xcode_targetDependencyDescription'               *
//                                                                           *
//---------------------------------------------------------------------------*

cPtr_Xcode_targetDependencyDescription::
cPtr_Xcode_targetDependencyDescription (const GGS_string& argument_0
                                COMMA_LOCATION_ARGS)
:cPtr__AC_galgas_class (THERE),
mDependencyTarget (argument_0),
_mOnce16994isComputed (false),
PBXTargetDependencyKey () {
}

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  cPtr_Xcode_targetDependencyDescription * GGS_Xcode_targetDependencyDescription::
  operator () (LOCATION_ARGS) const {
    macroValidPointerThere (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_targetDependencyDescription *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    return (cPtr_Xcode_targetDependencyDescription *) mPointer ;
  }
#endif

//---------------------------------------------------------------------------*

bool cPtr_Xcode_targetDependencyDescription::
isEqualToObject (const cPtr__AC_galgas_class * inOperand) const {
  bool equal = typeid (this) == typeid (inOperand) ;
  if (equal) {
    const cPtr_Xcode_targetDependencyDescription * ptr = dynamic_cast <const cPtr_Xcode_targetDependencyDescription *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mDependencyTarget.operator_isEqual (ptr->mDependencyTarget).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_targetDependencyDescription::computeOnce16994 (C_Compiler & inLexique) const {
  _mOnce16994isComputed = true ;
  PBXTargetDependencyKey.drop () ;
  PBXTargetDependencyKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (399)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (399)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (399)) ;
}

//---------------------------------------------------------------------------*

GGS_string cPtr_Xcode_targetDependencyDescription::reader_PBXTargetDependencyKey (C_Compiler & inLexique COMMA_UNUSED_LOCATION_ARGS) const {
  if (! _mOnce16994isComputed) {
    computeOnce16994 (inLexique) ;
  }
  return PBXTargetDependencyKey ;
}

//---------------------------------------------------------------------------*

void cPtr_Xcode_targetDependencyDescription::
appendForDescription (C_Compiler & inLexique,
                      C_String & ioString,
                      const sint32 inIndentation
                      COMMA_LOCATION_ARGS) const {
  ioString << "->@Xcode_targetDependencyDescription:"
           << mDependencyTarget.reader_description  (inLexique COMMA_THERE, inIndentation + 1) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                              Class message                                *
//                                                                           *
//---------------------------------------------------------------------------*

const char * cPtr_Xcode_targetDependencyDescription::
_message (void) const {
  return "" ;
}

//---------------------------------------------------------------------------*

const char * cPtr_Xcode_targetDependencyDescription::
_static_message (void) {
  return "" ;
}

//---------------------------------------------------------------------------*

C_galgas_class_inspector _gInspectorFor_Xcode_targetDependencyDescription (& typeid (cPtr_Xcode_targetDependencyDescription), NULL, "") ;

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * cPtr_Xcode_targetDependencyDescription::galgasRTTI (void) const {
  return & gClassInfoFor__Xcode_targetDependencyDescription ;
}

//---------------------------------------------------------------------------*

cPtr__AC_galgas_class * cPtr_Xcode_targetDependencyDescription::makeClone (void) const {
  cPtr__AC_galgas_class * result = NULL ;
  macroMyNew (result, cPtr_Xcode_targetDependencyDescription (mDependencyTarget COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           GALGAS class 'GGS_Xcode_targetDependencyDescription'            *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_Xcode_targetDependencyDescription::
GGS_Xcode_targetDependencyDescription (const cPtr__AC_galgas_class * inPointer) {
  macroAssignPointer (mPointer, (cPtr__AC_galgas_class *) inPointer) ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_targetDependencyDescription::
GGS_Xcode_targetDependencyDescription (cPtr__AC_galgas_class & inObject) {
  macroAssignPointer (mPointer, & inObject) ;
}

//---------------------------------------------------------------------------*

//--- castFrom class method (implements cast expression)
GGS_Xcode_targetDependencyDescription GGS_Xcode_targetDependencyDescription::
castFrom (C_Compiler & inLexique,
           cPtr__AC_galgas_class * inPointer,
           const bool inUseKindOfClass,
           const GGS_location & inErrorLocation
           COMMA_LOCATION_ARGS) {
  GGS_Xcode_targetDependencyDescription result ;
  if (inPointer != NULL) {
    macroValidPointer (inPointer) ;
    const bool ok = inUseKindOfClass
      ? (dynamic_cast <cPtr_Xcode_targetDependencyDescription *> (inPointer) != NULL)
      : (typeid (cPtr_Xcode_targetDependencyDescription) == typeid (*inPointer)) ;
    if (ok) {
      result = GGS_Xcode_targetDependencyDescription (inPointer) ;
    }else{
      inErrorLocation.signalCastError (inLexique,
                                       & typeid (cPtr_Xcode_targetDependencyDescription),
                                       inUseKindOfClass,
                                       inPointer->_message ()
                                       COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_targetDependencyDescription GGS_Xcode_targetDependencyDescription::
constructor_new (C_Compiler & /* inLexique */,
                 const GGS_string& argument_0
                                COMMA_LOCATION_ARGS) {
  GGS_Xcode_targetDependencyDescription result ;
  macroMyNew (result.mPointer, cPtr_Xcode_targetDependencyDescription (argument_0 COMMA_THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_targetDependencyDescription::
reader_mDependencyTarget (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_targetDependencyDescription *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_targetDependencyDescription *) mPointer)->mDependencyTarget ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_targetDependencyDescription::
reader_PBXTargetDependencyKey (C_Compiler & inLexique COMMA_LOCATION_ARGS) const {
  GGS_string  result ;
  if (mPointer != NULL) {
    macroValidPointer (mPointer) ;
    MF_Assert (dynamic_cast <cPtr_Xcode_targetDependencyDescription *> (mPointer) != NULL,
               "dynamic cast error", 0, 0) ;
    result = ((cPtr_Xcode_targetDependencyDescription *) mPointer)->reader_PBXTargetDependencyKey (inLexique COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

const char * GGS_Xcode_targetDependencyDescription::actualTypeName (void) const {
  return "Xcode_targetDependencyDescription" ;
}

//---------------------------------------------------------------------------*

AC_galgasClassRunTimeInformation * GGS_Xcode_targetDependencyDescription::galgasObjectRunTimeInfo (void) const {
  AC_galgasClassRunTimeInformation * result = NULL ;
  if (mPointer != NULL) {
    result = mPointer->galgasRTTI () ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

C_galgasRootClassRunTimeInformation gClassInfoFor__Xcode_targetDependencyDescription ("Xcode_targetDependencyDescription") ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Element of list '@Xcode_targetDependencyDescription_list'          *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_targetDependencyDescription_list::
elementOf_GGS_Xcode_targetDependencyDescription_list (const GGS_Xcode_targetDependencyDescription & argument_0
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mDependency (argument_0) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_targetDependencyDescription_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_targetDependencyDescription_list * ptr = dynamic_cast <const elementOf_GGS_Xcode_targetDependencyDescription_list *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mDependency.operator_isEqual (ptr->mDependency).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_targetDependencyDescription_list::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mDependency.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              List '@Xcode_targetDependencyDescription_list'               *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
_internalAppendValues (const GGS_Xcode_targetDependencyDescription & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
_internalPrependValues (const GGS_Xcode_targetDependencyDescription & argument_0
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
_addAssign_operation (const GGS_Xcode_targetDependencyDescription & argument_0) {
  if (isBuilt ()&& argument_0.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_targetDependencyDescription_list GGS_Xcode_targetDependencyDescription_list::
operator_concat (const GGS_Xcode_targetDependencyDescription_list & inOperand) const {
  GGS_Xcode_targetDependencyDescription_list result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
dotAssign_operation (const GGS_Xcode_targetDependencyDescription_list inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_targetDependencyDescription_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_Xcode_targetDependencyDescription  p_0 = p->mDependency ;
          _internalAppendValues (p_0 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_Xcode_targetDependencyDescription & argument_0
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mDependency
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_targetDependencyDescription_list  GGS_Xcode_targetDependencyDescription_list::
constructor_emptyList (void) {
  GGS_Xcode_targetDependencyDescription_list result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_targetDependencyDescription_list  GGS_Xcode_targetDependencyDescription_list::
constructor_listWithValue (const GGS_Xcode_targetDependencyDescription & argument_0) {
  GGS_Xcode_targetDependencyDescription_list result ;
  result.alloc () ;
  result._addAssign_operation (argument_0) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
internalSubListWithRange (GGS_Xcode_targetDependencyDescription_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mDependency) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_targetDependencyDescription_list GGS_Xcode_targetDependencyDescription_list::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_targetDependencyDescription_list result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_targetDependencyDescription_list GGS_Xcode_targetDependencyDescription_list::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_targetDependencyDescription_list result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_targetDependencyDescription_list::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@Xcode_targetDependencyDescription_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
method_first (C_Compiler & inLexique,
              GGS_Xcode_targetDependencyDescription & _out_0
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mDependency ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
method_last (C_Compiler & inLexique,
             GGS_Xcode_targetDependencyDescription & _out_0
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mDependency ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_Xcode_targetDependencyDescription & _out_0
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mDependency ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
modifier_popLast (C_Compiler & inLexique,
                GGS_Xcode_targetDependencyDescription & _out_0
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mDependency ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_targetDependencyDescription  GGS_Xcode_targetDependencyDescription_list::
reader_mDependencyAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_Xcode_targetDependencyDescription  result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mDependency ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_targetDependencyDescription_list::
modifier_setMDependencyAtIndex (C_Compiler & inLexique,
                              const GGS_Xcode_targetDependencyDescription  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mDependency = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_Xcode_targetDependencyDescription  & GGS_Xcode_targetDependencyDescription_list::cEnumerator::_mDependency (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mDependency ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Element of list '@Xcode_PBXVariantGroup_list'                *
//                                                                           *
//---------------------------------------------------------------------------*

elementOf_GGS_Xcode_PBXVariantGroup_list::
elementOf_GGS_Xcode_PBXVariantGroup_list (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2
                                COMMA_LOCATION_ARGS) :
AC_galgas_list::cListElement (THERE),
mPBXVariantKey (argument_0),
mPBXFileReferenceKey (argument_1),
mName (argument_2) {
}

//---------------------------------------------------------------------------*

bool elementOf_GGS_Xcode_PBXVariantGroup_list::
isEqualToObject (const cListElement * inOperand) const {
  bool equal = inOperand == this ;
  if (! equal) {
    const elementOf_GGS_Xcode_PBXVariantGroup_list * ptr = dynamic_cast <const elementOf_GGS_Xcode_PBXVariantGroup_list *> (inOperand) ;
    macroValidPointer (ptr) ;
    equal = mPBXVariantKey.operator_isEqual (ptr->mPBXVariantKey).boolValue ()
         && mPBXFileReferenceKey.operator_isEqual (ptr->mPBXFileReferenceKey).boolValue ()
         && mName.operator_isEqual (ptr->mName).boolValue () ;
  }
  return equal ;
}

//---------------------------------------------------------------------------*

void elementOf_GGS_Xcode_PBXVariantGroup_list::
appendForDescription (C_Compiler & inLexique,
                          C_String & ioString,
                          const sint32 inIndentation
                          COMMA_LOCATION_ARGS) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mPBXVariantKey.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mPBXFileReferenceKey.reader_description  (inLexique COMMA_THERE, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "|-" ;
  ioString << mName.reader_description  (inLexique COMMA_THERE, inIndentation) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                    List '@Xcode_PBXVariantGroup_list'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
_internalAppendValues (const GGS_string& argument_0,
                    const GGS_string& argument_1,
                    const GGS_string& argument_2
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0,
                                argument_1,
                                argument_2
                                COMMA_THERE)) ;
  _internalAppendItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
_internalPrependValues (const GGS_string& argument_0,
                    const GGS_string& argument_1,
                    const GGS_string& argument_2
                    COMMA_LOCATION_ARGS) {
  cElement * nouvelElement = (cElement *) NULL ;
  macroMyNew (nouvelElement, cElement (argument_0,
                                argument_1,
                                argument_2
                                COMMA_THERE)) ;
  _internalPrependItem (nouvelElement) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
_addAssign_operation (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2) {
  if (isBuilt ()&& argument_0.isBuilt ()&& argument_1.isBuilt ()&& argument_2.isBuilt ()) {
    _insulateList () ;
    _internalAppendValues (argument_0,
                                argument_1,
                                argument_2
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXVariantGroup_list GGS_Xcode_PBXVariantGroup_list::
operator_concat (const GGS_Xcode_PBXVariantGroup_list & inOperand) const {
  GGS_Xcode_PBXVariantGroup_list result = * this ;
  result.dotAssign_operation (inOperand) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
dotAssign_operation (const GGS_Xcode_PBXVariantGroup_list inOperand) {
  if (isBuilt () && inOperand.isBuilt ()) {
    if (count () == 0) {
      * this = inOperand ;
    }else{
      if (inOperand.count () > 0) {
        _insulateList () ;
        elementOf_GGS_Xcode_PBXVariantGroup_list * p = inOperand.firstObject () ;
        while (p != NULL) {
          macroValidPointer (p) ;
          GGS_string p_0 = p->mPBXVariantKey ;
          GGS_string p_1 = p->mPBXFileReferenceKey ;
          GGS_string p_2 = p->mName ;
          _internalAppendValues (p_0, p_1, p_2 COMMA_HERE) ;
          p = p->nextObject () ;
        }
      }
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
modifier_prependValue (C_Compiler & /* inLexique */,
                     const GGS_string& argument_0,
                     const GGS_string& argument_1,
                     const GGS_string& argument_2
                     COMMA_UNUSED_LOCATION_ARGS) {
  if (isBuilt ()) {
    _insulateList () ;
    _internalPrependValues (argument_0,
                                argument_1,
                                argument_2
                                COMMA_HERE) ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
_insulateList (void) {
  if (_shared ()) {
    cElement * ptr = firstObject () ;
    alloc () ;
    while (ptr != NULL) {
      macroValidPointer (ptr) ;
      _internalAppendValues (ptr->mPBXVariantKey,
                                ptr->mPBXFileReferenceKey,
                                ptr->mName
                                COMMA_HERE) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXVariantGroup_list  GGS_Xcode_PBXVariantGroup_list::
constructor_emptyList (void) {
  GGS_Xcode_PBXVariantGroup_list result ;
  result.alloc () ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXVariantGroup_list  GGS_Xcode_PBXVariantGroup_list::
constructor_listWithValue (const GGS_string& argument_0,
                                const GGS_string& argument_1,
                                const GGS_string& argument_2) {
  GGS_Xcode_PBXVariantGroup_list result ;
  result.alloc () ;
  result._addAssign_operation (argument_0, argument_1, argument_2) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
internalSubListWithRange (GGS_Xcode_PBXVariantGroup_list & ioList,
                          const sint32 inFirstIndex,
                          const sint32 inCount) const {
  ioList.alloc () ;
  if (inCount > 0) {
    cElement * ptr = firstObject () ;
    for (sint32 i=0 ; i<inFirstIndex ; i++) {
      macroValidPointer (ptr) ;
      ptr = ptr->nextObject () ;
    }
    for (sint32 i=0 ; i<inCount ; i++) {
      macroValidPointer (ptr) ;
      ioList._addAssign_operation (ptr->mPBXVariantKey, ptr->mPBXFileReferenceKey, ptr->mName) ;
      ptr = ptr->nextObject () ;
    }
  }
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXVariantGroup_list GGS_Xcode_PBXVariantGroup_list::
reader_subListWithRange (C_Compiler & inLexique,
                         const GGS_uint & inFirstIndex,
                         const GGS_uint & inCount
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXVariantGroup_list result ;
  if (isBuilt () && inFirstIndex.isBuilt () && inCount.isBuilt ()) {
    const sint32 firstIndex = (sint32) inFirstIndex.uintValue () ;
    const sint32 rangeCount = (sint32) inCount.uintValue () ;
    if ((firstIndex + rangeCount) > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListWithRange' method invoked with upper bound greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, firstIndex, rangeCount) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_Xcode_PBXVariantGroup_list GGS_Xcode_PBXVariantGroup_list::
reader_subListFromIndex (C_Compiler & inLexique,
                         const GGS_uint & inIndex
                         COMMA_LOCATION_ARGS) const {
  GGS_Xcode_PBXVariantGroup_list result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    const sint32 startIndex = (sint32) inIndex.uintValue () ;
    if (startIndex > count ()) {
      inLexique.onTheFlyRunTimeError ("'subListFromIndex' method invoked with start index greater than list object count" COMMA_THERE) ;
    }else{
      internalSubListWithRange (result, startIndex, count () - startIndex) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXVariantGroup_list::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  return _description (inLexique, "@Xcode_PBXVariantGroup_list", inIndentation COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
method_first (C_Compiler & inLexique,
              GGS_string& _out_0,
              GGS_string& _out_1,
              GGS_string& _out_2
              COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'first' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mPBXVariantKey ;
    _out_1 = ptr->mPBXFileReferenceKey ;
    _out_2 = ptr->mName ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
method_last (C_Compiler & inLexique,
             GGS_string& _out_0,
             GGS_string& _out_1,
             GGS_string& _out_2
             COMMA_LOCATION_ARGS) const {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'last' method invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mPBXVariantKey ;
    _out_1 = ptr->mPBXFileReferenceKey ;
    _out_2 = ptr->mName ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
modifier_popFirst (C_Compiler & inLexique,
                 GGS_string& _out_0,
                 GGS_string& _out_1,
                 GGS_string& _out_2
                 COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = firstObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popFirst' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mPBXVariantKey ;
    _out_1 = ptr->mPBXFileReferenceKey ;
    _out_2 = ptr->mName ;
    _insulateList () ;
    _internalRemoveFirst () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
modifier_popLast (C_Compiler & inLexique,
                GGS_string& _out_0,
                GGS_string& _out_1,
                GGS_string& _out_2
                COMMA_LOCATION_ARGS) {
  cElement * ptr = NULL ;
  if (isBuilt ()) {
    ptr = lastObject () ;
    if (ptr == NULL) {
      inLexique.onTheFlyRunTimeError ("'popLast' modifier invoked on an empty list" COMMA_THERE) ;
    }
  }
  if (ptr != NULL) {
    _out_0 = ptr->mPBXVariantKey ;
    _out_1 = ptr->mPBXFileReferenceKey ;
    _out_2 = ptr->mName ;
    _insulateList () ;
    _internalRemoveLast () ;
  }else{
    _out_0.drop () ;
    _out_1.drop () ;
    _out_2.drop () ;
  }
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXVariantGroup_list::
reader_mPBXVariantKeyAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mPBXVariantKey ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXVariantGroup_list::
reader_mPBXFileReferenceKeyAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mPBXFileReferenceKey ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_Xcode_PBXVariantGroup_list::
reader_mNameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const {
  GGS_string result ;
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      result = object->mName ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
modifier_setMPBXVariantKeyAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mPBXVariantKey = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
modifier_setMPBXFileReferenceKeyAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mPBXFileReferenceKey = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

void GGS_Xcode_PBXVariantGroup_list::
modifier_setMNameAtIndex (C_Compiler & inLexique,
                              const GGS_string & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const {
  if (isBuilt () && inIndex.isBuilt ()) {
    cElement * object = (cElement *) objectAtIndex (inLexique, inIndex.uintValue () COMMA_THERE) ;
    if (object != NULL) {
      object->mName = inObject ;
    }
  }
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXVariantGroup_list::cEnumerator::_mPBXVariantKey (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mPBXVariantKey ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXVariantGroup_list::cEnumerator::_mPBXFileReferenceKey (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mPBXFileReferenceKey ;
}

//---------------------------------------------------------------------------*

/* const */ GGS_string & GGS_Xcode_PBXVariantGroup_list::cEnumerator::_mName (LOCATION_ARGS) const {
  macroValidPointerThere (mCurrentEnumeratedObject) ;
  return ((/* const */ cElement *) mCurrentEnumeratedObject)->mName ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of 'XcodeProjectDescription' struct             *
//                                                                           *
//---------------------------------------------------------------------------*

GGS_XcodeProjectDescription::GGS_XcodeProjectDescription (void) :
mFileReferenceMap (),
mAllBuildFileList (),
mMainGroupChildrenList (),
mProjectGroupList (),
mTargetList (),
mProductGroupChildrenList (),
mBuildConfigurationList (),
mPBXSourcesBuildPhase_list (),
mPBXFrameworksBuildPhase_list (),
mPBXResourcesBuildPhase_list (),
mDependencyList (),
mPBXVariantGroup_list () {
}

//---------------------------------------------------------------------------*

GGS_XcodeProjectDescription::~GGS_XcodeProjectDescription (void) {
}

//---------------------------------------------------------------------------*

void GGS_XcodeProjectDescription::drop (void) {
  mFileReferenceMap.drop () ;
  mAllBuildFileList.drop () ;
  mMainGroupChildrenList.drop () ;
  mProjectGroupList.drop () ;
  mTargetList.drop () ;
  mProductGroupChildrenList.drop () ;
  mBuildConfigurationList.drop () ;
  mPBXSourcesBuildPhase_list.drop () ;
  mPBXFrameworksBuildPhase_list.drop () ;
  mPBXResourcesBuildPhase_list.drop () ;
  mDependencyList.drop () ;
  mPBXVariantGroup_list.drop () ;
}

//---------------------------------------------------------------------------*

bool GGS_XcodeProjectDescription::isBuilt (void) const {
  return mFileReferenceMap.isBuilt ()
    && mAllBuildFileList.isBuilt ()
    && mMainGroupChildrenList.isBuilt ()
    && mProjectGroupList.isBuilt ()
    && mTargetList.isBuilt ()
    && mProductGroupChildrenList.isBuilt ()
    && mBuildConfigurationList.isBuilt ()
    && mPBXSourcesBuildPhase_list.isBuilt ()
    && mPBXFrameworksBuildPhase_list.isBuilt ()
    && mPBXResourcesBuildPhase_list.isBuilt ()
    && mDependencyList.isBuilt ()
    && mPBXVariantGroup_list.isBuilt () ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_XcodeProjectDescription::
operator_isEqual (const GGS_XcodeProjectDescription & inOperand) const {
  return mFileReferenceMap.operator_isEqual (inOperand.mFileReferenceMap)
    .operator_and (mAllBuildFileList.operator_isEqual (inOperand.mAllBuildFileList))
    .operator_and (mMainGroupChildrenList.operator_isEqual (inOperand.mMainGroupChildrenList))
    .operator_and (mProjectGroupList.operator_isEqual (inOperand.mProjectGroupList))
    .operator_and (mTargetList.operator_isEqual (inOperand.mTargetList))
    .operator_and (mProductGroupChildrenList.operator_isEqual (inOperand.mProductGroupChildrenList))
    .operator_and (mBuildConfigurationList.operator_isEqual (inOperand.mBuildConfigurationList))
    .operator_and (mPBXSourcesBuildPhase_list.operator_isEqual (inOperand.mPBXSourcesBuildPhase_list))
    .operator_and (mPBXFrameworksBuildPhase_list.operator_isEqual (inOperand.mPBXFrameworksBuildPhase_list))
    .operator_and (mPBXResourcesBuildPhase_list.operator_isEqual (inOperand.mPBXResourcesBuildPhase_list))
    .operator_and (mDependencyList.operator_isEqual (inOperand.mDependencyList))
    .operator_and (mPBXVariantGroup_list.operator_isEqual (inOperand.mPBXVariantGroup_list)) ;
}

//---------------------------------------------------------------------------*

GGS_bool GGS_XcodeProjectDescription::
operator_isNotEqual (const GGS_XcodeProjectDescription & inOperand) const {
  return mFileReferenceMap.operator_isNotEqual (inOperand.mFileReferenceMap)
    .operator_or (mAllBuildFileList.operator_isNotEqual (inOperand.mAllBuildFileList))
    .operator_or (mMainGroupChildrenList.operator_isNotEqual (inOperand.mMainGroupChildrenList))
    .operator_or (mProjectGroupList.operator_isNotEqual (inOperand.mProjectGroupList))
    .operator_or (mTargetList.operator_isNotEqual (inOperand.mTargetList))
    .operator_or (mProductGroupChildrenList.operator_isNotEqual (inOperand.mProductGroupChildrenList))
    .operator_or (mBuildConfigurationList.operator_isNotEqual (inOperand.mBuildConfigurationList))
    .operator_or (mPBXSourcesBuildPhase_list.operator_isNotEqual (inOperand.mPBXSourcesBuildPhase_list))
    .operator_or (mPBXFrameworksBuildPhase_list.operator_isNotEqual (inOperand.mPBXFrameworksBuildPhase_list))
    .operator_or (mPBXResourcesBuildPhase_list.operator_isNotEqual (inOperand.mPBXResourcesBuildPhase_list))
    .operator_or (mDependencyList.operator_isNotEqual (inOperand.mDependencyList))
    .operator_or (mPBXVariantGroup_list.operator_isNotEqual (inOperand.mPBXVariantGroup_list)) ;
}

//---------------------------------------------------------------------------*

GGS_XcodeProjectDescription GGS_XcodeProjectDescription::
constructor_new (const GGS_Xcode_PBXFileReference_map & argument_0,
                 const GGS_Xcode_PBXBuildFile_list & argument_1,
                 const GGS_XcodeObjectReferenceList & argument_2,
                 const GGS_Xcode_PBXGroup_list & argument_3,
                 const GGS_Xcode_PBXNativeTarget_list & argument_4,
                 const GGS_XcodeObjectReferenceList & argument_5,
                 const GGS_Xcode_XCBuildConfiguration_list & argument_6,
                 const GGS_Xcode_PBXSourcesBuildPhase_list & argument_7,
                 const GGS_Xcode_PBXFrameworksBuildPhase_list & argument_8,
                 const GGS_Xcode_PBXResourcesBuildPhase_list & argument_9,
                 const GGS_Xcode_targetDependencyDescription_list & argument_10,
                 const GGS_Xcode_PBXVariantGroup_list & argument_11) {
  GGS_XcodeProjectDescription result ;
  result.mFileReferenceMap = argument_0 ;
  result.mAllBuildFileList = argument_1 ;
  result.mMainGroupChildrenList = argument_2 ;
  result.mProjectGroupList = argument_3 ;
  result.mTargetList = argument_4 ;
  result.mProductGroupChildrenList = argument_5 ;
  result.mBuildConfigurationList = argument_6 ;
  result.mPBXSourcesBuildPhase_list = argument_7 ;
  result.mPBXFrameworksBuildPhase_list = argument_8 ;
  result.mPBXResourcesBuildPhase_list = argument_9 ;
  result.mDependencyList = argument_10 ;
  result.mPBXVariantGroup_list = argument_11 ;
  return result ;
}

//---------------------------------------------------------------------------*

GGS_string GGS_XcodeProjectDescription::
reader_description (C_Compiler & inLexique
                    COMMA_LOCATION_ARGS,
                    const sint32 inIndentation) const {
  C_String _s ;
  _s << "<struct @XcodeProjectDescription" ;
  if (isBuilt ()) {
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mFileReferenceMap " ;
    _s << mFileReferenceMap.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mAllBuildFileList " ;
    _s << mAllBuildFileList.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mMainGroupChildrenList " ;
    _s << mMainGroupChildrenList.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mProjectGroupList " ;
    _s << mProjectGroupList.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mTargetList " ;
    _s << mTargetList.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mProductGroupChildrenList " ;
    _s << mProductGroupChildrenList.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mBuildConfigurationList " ;
    _s << mBuildConfigurationList.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mPBXSourcesBuildPhase_list " ;
    _s << mPBXSourcesBuildPhase_list.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mPBXFrameworksBuildPhase_list " ;
    _s << mPBXFrameworksBuildPhase_list.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mPBXResourcesBuildPhase_list " ;
    _s << mPBXResourcesBuildPhase_list.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mDependencyList " ;
    _s << mDependencyList.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
    _s << "\n" ;
    _s.writeStringMultiple ("| ", inIndentation + 1) ;
    _s << "mPBXVariantGroup_list " ;
    _s << mPBXVariantGroup_list.reader_description (inLexique COMMA_THERE, inIndentation + 1) ;
  }else{
    _s << "not built" ;
  }
  _s << "\n" ;
  _s.writeStringMultiple ("| ", inIndentation) ;
  _s << ">" ;
  return GGS_string (true, _s) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "initXcodeProjectDescription"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_initXcodeProjectDescription (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_outDescription COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_initXcodeProjectDescription at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_outDescription = GGS_XcodeProjectDescription::constructor_new (GGS_Xcode_PBXFileReference_map ::constructor_emptyMap (inLexique COMMA_HERE), GGS_Xcode_PBXBuildFile_list ::constructor_emptyList (), GGS_XcodeObjectReferenceList ::constructor_emptyList (), GGS_Xcode_PBXGroup_list ::constructor_emptyList (), GGS_Xcode_PBXNativeTarget_list ::constructor_emptyList (), GGS_XcodeObjectReferenceList ::constructor_emptyList (), GGS_Xcode_XCBuildConfiguration_list ::constructor_emptyList (), GGS_Xcode_PBXSourcesBuildPhase_list ::constructor_emptyList (), GGS_Xcode_PBXFrameworksBuildPhase_list ::constructor_emptyList (), GGS_Xcode_PBXResourcesBuildPhase_list ::constructor_emptyList (), GGS_Xcode_targetDependencyDescription_list ::constructor_emptyList (), GGS_Xcode_PBXVariantGroup_list ::constructor_emptyList ()) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_initXcodeProjectDescription\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Implementation of routine "enter_group"                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioDescription,
                                const GGS_string  var_cas_inGroupName,
                                const GGS_string  var_cas_inGroupPath,
                                const GGS_XcodeObjectReferenceList   var_cas_inGroupContentsKeyList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_Xcode_PBXGroup  var_cas_group ;
  var_cas_group = GGS_Xcode_PBXGroup ::constructor_new (inLexique, var_cas_inGroupName, var_cas_inGroupPath, var_cas_inGroupContentsKeyList COMMA_HERE) ;
  var_cas_ioDescription.mProjectGroupList._addAssign_operation (var_cas_group) ;
  var_cas_ioDescription.mMainGroupChildrenList._addAssign_operation (var_cas_group.reader_PBXGroupKey (inLexique COMMA_SOURCE_FILE_AT_LINE (479)), var_cas_inGroupName) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of routine "enter_subgroup"                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_subgroup (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioDescription,
                                const GGS_string  var_cas_inSubGroupName,
                                const GGS_string  var_cas_inSubGroupPath,
                                const GGS_XcodeObjectReferenceList   var_cas_inSubGroupContentsKeyList,
                                GGS_XcodeObjectReferenceList  & var_cas_ioSuperGroupContentsKeyList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_subgroup at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_Xcode_PBXGroup  var_cas_group ;
  var_cas_group = GGS_Xcode_PBXGroup ::constructor_new (inLexique, var_cas_inSubGroupName, var_cas_inSubGroupPath, var_cas_inSubGroupContentsKeyList COMMA_HERE) ;
  var_cas_ioDescription.mProjectGroupList._addAssign_operation (var_cas_group) ;
  var_cas_ioSuperGroupContentsKeyList._addAssign_operation (var_cas_group.reader_PBXGroupKey (inLexique COMMA_SOURCE_FILE_AT_LINE (501)), var_cas_inSubGroupName) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_subgroup\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of routine "append_cpp_h_files"               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_append_cpp_h_files (C_Compiler &,
                                GGS_stringlist  & var_cas_ioList,
                                GGS_string  var_cas_inBaseName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_append_cpp_h_files at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioList._addAssign_operation ((var_cas_inBaseName).operator_concat (GGS_string (".cpp"))) ;
  var_cas_ioList._addAssign_operation ((var_cas_inBaseName).operator_concat (GGS_string (".h"))) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_append_cpp_h_files\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Implementation of routine "append_m_h_files"                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_append_m_h_files (C_Compiler &,
                                GGS_stringlist  & var_cas_ioList,
                                GGS_string  var_cas_inBaseName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_append_m_h_files at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioList._addAssign_operation ((var_cas_inBaseName).operator_concat (GGS_string (".m"))) ;
  var_cas_ioList._addAssign_operation ((var_cas_inBaseName).operator_concat (GGS_string (".h"))) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_append_m_h_files\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of routine "append_mm_h_files"                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_append_mm_h_files (C_Compiler &,
                                GGS_stringlist  & var_cas_ioList,
                                GGS_string  var_cas_inBaseName COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_append_mm_h_files at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  var_cas_ioList._addAssign_operation ((var_cas_inBaseName).operator_concat (GGS_string (".mm"))) ;
  var_cas_ioList._addAssign_operation ((var_cas_inBaseName).operator_concat (GGS_string (".h"))) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_append_mm_h_files\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "enter_cpp_file_in_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_cpp_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_cpp_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_cppSourceFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_cppSourceFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (534)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (535)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_cpp_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "enter_h_file_in_group"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_h_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_h_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_hSourceFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_hSourceFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (547)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (548)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_h_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "enter_pch_file_in_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_pch_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_pch_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_pchSourceFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_pchSourceFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (560)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (561)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_pch_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "enter_m_file_in_group"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_m_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_m_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_mSourceFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_mSourceFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (573)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (574)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_m_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of routine "enter_mm_file_in_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_mm_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_mm_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_mmSourceFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_mmSourceFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (586)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (587)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_mm_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "enter_gif_file_in_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_gif_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_gif_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_gifFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_gifFile ::constructor_new (inLexique, var_cas_inFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (599)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (600)), var_cas_inFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_gif_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "enter_tiff_file_in_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_tiff_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_tiff_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_tiffFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_tiffFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (612)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (613)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_tiff_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "enter_png_file_in_group"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_png_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_png_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_pngFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_pngFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (625)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (626)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_png_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of routine "enter_plist_file_in_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_plist_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_plist_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_plistFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_plistFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (638)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (639)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_plist_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of routine "enter_framework_file_in_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_framework_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_framework_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_frameworkFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_frameworkFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (651)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (652)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_framework_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "enter_icns_file_in_group"            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_icns_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inCppFile,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_icns_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_inCppFile, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_icnsFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_icnsFile ::constructor_new (inLexique, var_cas_inCppFile COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (664)) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (665)), var_cas_inCppFile) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_icns_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "enter_file_in_group"               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_file_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inFileName,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_file_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_extension ;
  var_cas_extension = var_cas_inFileName.reader_pathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (675)) ;
  if (((var_cas_extension).operator_isEqual (GGS_string ("cpp"))).isBuiltAndTrue ()) {
    ::routine_enter_cpp_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (677)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("h"))).isBuiltAndTrue ()) {
    ::routine_enter_h_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (679)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("pch"))).isBuiltAndTrue ()) {
    ::routine_enter_pch_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (681)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("m"))).isBuiltAndTrue ()) {
    ::routine_enter_m_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (683)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("mm"))).isBuiltAndTrue ()) {
    ::routine_enter_mm_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (685)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("tiff"))).isBuiltAndTrue ()) {
    ::routine_enter_tiff_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (687)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("gif"))).isBuiltAndTrue ()) {
    ::routine_enter_gif_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (689)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("png"))).isBuiltAndTrue ()) {
    ::routine_enter_png_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (691)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("plist"))).isBuiltAndTrue ()) {
    ::routine_enter_plist_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (693)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("framework"))).isBuiltAndTrue ()) {
    ::routine_enter_framework_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (695)) ;
  }else if (((var_cas_extension).operator_isEqual (GGS_string ("icns"))).isBuiltAndTrue ()) {
    ::routine_enter_icns_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  var_cas_inFileName,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (697)) ;
  }else{
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, ((GGS_string ("cannot enter '")).operator_concat (var_cas_inFileName)).operator_concat (GGS_string ("' file : unknown extension")) COMMA_SOURCE_FILE_AT_LINE (700)) ;
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_file_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of routine "enter_files_in_group"              *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_files_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringlist   var_cas_inFileList,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_files_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_stringlist::cEnumerator enumerator_29329 (var_cas_inFileList, true) ;
    const GGS_stringlist::cElement * operand_29329 = NULL ;
    while (((operand_29329 = enumerator_29329.nextObject ()))) {
      macroValidPointer (operand_29329) ;
      ::routine_enter_file_in_group (inLexique,  var_cas_ioXcodeProjectDescription,  operand_29329->mValue,  var_cas_ioFileListForGroup COMMA_SOURCE_FILE_AT_LINE (711)) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_files_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of routine "enter_xib_in_group"               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_xib_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_in_lproj_dir,
                                const GGS_string  var_cas_in_xib_fileName,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_xib_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_Xcode_PBXFileReference_xibFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_xibFile ::constructor_new (inLexique, var_cas_in_lproj_dir.reader_stringByDeletingPathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (724)), ((var_cas_in_lproj_dir).operator_concat (GGS_string ("/"))).operator_concat (var_cas_in_xib_fileName) COMMA_HERE) ;
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_in_xib_fileName, GGS_location (inLexique) COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (728)) ;
  GGS_string var_cas_PBXVariantGroupKey ;
  var_cas_PBXVariantGroupKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (729)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (729)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (729)) ;
  var_cas_ioXcodeProjectDescription.mPBXVariantGroup_list._addAssign_operation (var_cas_PBXVariantGroupKey, var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (732)), var_cas_in_xib_fileName) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_PBXVariantGroupKey, var_cas_in_xib_fileName) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_xib_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enter_plist_strings_in_group"          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_plist_strings_in_group (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_in_lproj_dir,
                                const GGS_string  var_cas_in_plist_string_fileName,
                                GGS_XcodeObjectReferenceList  & var_cas_ioFileListForGroup COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_plist_strings_in_group at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_Xcode_PBXFileReference_plistStringFile  var_cas_ref ;
  var_cas_ref = GGS_Xcode_PBXFileReference_plistStringFile ::constructor_new (inLexique, var_cas_in_lproj_dir.reader_stringByDeletingPathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (747)), ((var_cas_in_lproj_dir).operator_concat (GGS_string ("/"))).operator_concat (var_cas_in_plist_string_fileName) COMMA_HERE) ;
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_in_plist_string_fileName, GGS_location (inLexique) COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (751)) ;
  GGS_string var_cas_PBXVariantGroupKey ;
  var_cas_PBXVariantGroupKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (752)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (752)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (752)) ;
  var_cas_ioXcodeProjectDescription.mPBXVariantGroup_list._addAssign_operation (var_cas_PBXVariantGroupKey, var_cas_ref.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (755)), var_cas_in_plist_string_fileName) ;
  var_cas_ioFileListForGroup._addAssign_operation (var_cas_PBXVariantGroupKey, var_cas_in_plist_string_fileName) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_plist_strings_in_group\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Implementation of routine "enter_file_for_sources_build_phase"       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_file_for_sources_build_phase (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_in_fileName,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_file_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_lstring  var_cas_key ;
  var_cas_key = GGS_lstring ::constructor_new (inLexique, var_cas_in_fileName, GGS_location (inLexique) COMMA_HERE) ;
  GGS_Xcode_PBXFileReference_abstract  var_cas_ref ;
  const GGS_Xcode_PBXFileReference_map  temp_31558 = var_cas_ioXcodeProjectDescription.reader_mFileReferenceMap (inLexique COMMA_SOURCE_FILE_AT_LINE (770)) ;
  if (temp_31558.isBuilt ()) {
    temp_31558 (HERE)->method_searchKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (770)) ;
  }
  GGS_Xcode_PBXBuildFile  var_cas_build_file ;
  var_cas_build_file = GGS_Xcode_PBXBuildFile ::constructor_new (inLexique, var_cas_ref COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mAllBuildFileList._addAssign_operation (var_cas_build_file) ;
  var_cas_ioBuildPhaseList._addAssign_operation (var_cas_build_file) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_file_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Implementation of routine "enter_file_list_for_sources_build_phase"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_file_list_for_sources_build_phase (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringlist   var_cas_in_fileList,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_file_list_for_sources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_stringlist::cEnumerator enumerator_32011 (var_cas_in_fileList, true) ;
    const GGS_stringlist::cElement * operand_32011 = NULL ;
    while (((operand_32011 = enumerator_32011.nextObject ()))) {
      macroValidPointer (operand_32011) ;
      ::routine_enter_file_for_sources_build_phase (inLexique,  var_cas_ioXcodeProjectDescription,  operand_32011->mValue,  var_cas_ioBuildPhaseList COMMA_SOURCE_FILE_AT_LINE (784)) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_file_list_for_sources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of routine "enter_files_for_resources_build_phase"      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_files_for_resources_build_phase (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringlist   var_cas_in_fileList,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_files_for_resources_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_stringlist::cEnumerator enumerator_32441 (var_cas_in_fileList, true) ;
    const GGS_stringlist::cElement * operand_32441 = NULL ;
    while (((operand_32441 = enumerator_32441.nextObject ()))) {
      macroValidPointer (operand_32441) ;
      GGS_lstring  var_cas_key ;
      var_cas_key = GGS_lstring ::constructor_new (inLexique, operand_32441->mValue, GGS_location (inLexique) COMMA_HERE) ;
      GGS_Xcode_PBXFileReference_abstract  var_cas_ref ;
      const GGS_Xcode_PBXFileReference_map  temp_32587 = var_cas_ioXcodeProjectDescription.reader_mFileReferenceMap (inLexique COMMA_SOURCE_FILE_AT_LINE (802)) ;
      if (temp_32587.isBuilt ()) {
        temp_32587 (HERE)->method_searchKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (802)) ;
      }
      GGS_Xcode_PBXBuildFile  var_cas_build_file ;
      var_cas_build_file = GGS_Xcode_PBXBuildFile ::constructor_new (inLexique, var_cas_ref COMMA_HERE) ;
      var_cas_ioXcodeProjectDescription.mAllBuildFileList._addAssign_operation (var_cas_build_file) ;
      var_cas_ioBuildPhaseList._addAssign_operation (var_cas_build_file) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_files_for_resources_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//    Implementation of routine "enter_files_for_frameworks_build_phase"     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enter_files_for_frameworks_build_phase (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_stringlist   var_cas_in_framework_fileList,
                                GGS_Xcode_PBXBuildFile_list  & var_cas_ioBuildPhaseList COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enter_files_for_frameworks_build_phase at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  {
    GGS_stringlist::cEnumerator enumerator_33081 (var_cas_in_framework_fileList, true) ;
    const GGS_stringlist::cElement * operand_33081 = NULL ;
    while (((operand_33081 = enumerator_33081.nextObject ()))) {
      macroValidPointer (operand_33081) ;
      GGS_lstring  var_cas_key ;
      var_cas_key = GGS_lstring ::constructor_new (inLexique, operand_33081->mValue, GGS_location (inLexique) COMMA_HERE) ;
      GGS_Xcode_PBXFileReference_abstract  var_cas_ref ;
      const GGS_Xcode_PBXFileReference_map  temp_33227 = var_cas_ioXcodeProjectDescription.reader_mFileReferenceMap (inLexique COMMA_SOURCE_FILE_AT_LINE (819)) ;
      if (temp_33227.isBuilt ()) {
        temp_33227 (HERE)->method_searchKey (inLexique, var_cas_key, var_cas_ref COMMA_SOURCE_FILE_AT_LINE (819)) ;
      }
      GGS_Xcode_PBXBuildFile  var_cas_build_file ;
      var_cas_build_file = GGS_Xcode_PBXBuildFile ::constructor_new (inLexique, var_cas_ref COMMA_HERE) ;
      var_cas_ioXcodeProjectDescription.mAllBuildFileList._addAssign_operation (var_cas_build_file) ;
      var_cas_ioBuildPhaseList._addAssign_operation (var_cas_build_file) ;
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enter_files_for_frameworks_build_phase\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Implementation of routine "add_tool_target"                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_add_tool_target (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inProductFileName,
                                const GGS_string  var_cas_inTargetName,
                                GGS_stringlist   var_cas_inTargetSettings,
                                const GGS_string  var_cas_inPrecompiledHeaderPath,
                                const GGS_Xcode_PBXBuildFile_list   var_cas_inSourcesToCompileKeyList,
                                const GGS_Xcode_PBXBuildFile_list   var_cas_inFrameworkKeyList,
                                const GGS_stringlist   var_cas_inDirectDependencyList,
                                GGS_string & var_cas_outTargetKey COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_add_tool_target at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_Xcode_PBXFileReference_CompiledMachOExecutable  var_cas_toolFileReference ;
  var_cas_toolFileReference = GGS_Xcode_PBXFileReference_CompiledMachOExecutable ::constructor_new (inLexique, var_cas_inProductFileName COMMA_HERE) ;
  GGS_lstring  var_cas_projectNameKey ;
  var_cas_projectNameKey = GGS_lstring ::constructor_new (inLexique, var_cas_inProductFileName, GGS_location (inLexique) COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_projectNameKey, var_cas_toolFileReference COMMA_SOURCE_FILE_AT_LINE (897)) ;
  var_cas_ioXcodeProjectDescription.mProductGroupChildrenList._addAssign_operation (var_cas_toolFileReference.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (899)), var_cas_inTargetName) ;
  GGS_Xcode_PBXSourcesBuildPhase  var_cas_compileSourcesBuildPhase ;
  var_cas_compileSourcesBuildPhase = GGS_Xcode_PBXSourcesBuildPhase ::constructor_new (inLexique, GGS_string ("Sources"), var_cas_inSourcesToCompileKeyList COMMA_HERE) ;
  GGS_stringlist  var_cas_buildPhases ;
  var_cas_buildPhases = GGS_stringlist ::constructor_listWithValue (var_cas_compileSourcesBuildPhase.reader_PBXSourcesBuildPhaseKey (inLexique COMMA_SOURCE_FILE_AT_LINE (905))) ;
  if (((var_cas_inFrameworkKeyList.reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (907))).operator_strictSup (GGS_uint (0U))).isBuiltAndTrue ()) {
    GGS_Xcode_PBXFrameworksBuildPhase  var_cas_frameworksBuildPhase ;
    var_cas_frameworksBuildPhase = GGS_Xcode_PBXFrameworksBuildPhase ::constructor_new (inLexique, GGS_string ("Frameworks"), var_cas_inFrameworkKeyList COMMA_HERE) ;
    var_cas_ioXcodeProjectDescription.mPBXFrameworksBuildPhase_list._addAssign_operation (var_cas_frameworksBuildPhase) ;
    var_cas_buildPhases._addAssign_operation (var_cas_frameworksBuildPhase.reader_PBXFrameworksBuildPhaseKey (inLexique COMMA_SOURCE_FILE_AT_LINE (913))) ;
  }
  var_cas_ioXcodeProjectDescription.mPBXSourcesBuildPhase_list._addAssign_operation (var_cas_compileSourcesBuildPhase) ;
  if (((var_cas_inPrecompiledHeaderPath).operator_isNotEqual (GGS_string (""))).isBuiltAndTrue ()) {
    var_cas_inTargetSettings._addAssign_operation (GGS_string ("GCC_PRECOMPILE_PREFIX_HEADER = YES;")) ;
    var_cas_inTargetSettings._addAssign_operation (((GGS_string ("GCC_PREFIX_HEADER = \"")).operator_concat (var_cas_inPrecompiledHeaderPath)).operator_concat (GGS_string ("\";"))) ;
  }
  var_cas_inTargetSettings._addAssign_operation (((GGS_string ("PRODUCT_NAME = \"")).operator_concat (var_cas_inProductFileName)).operator_concat (GGS_string ("\";"))) ;
  GGS_Xcode_XCBuildConfiguration  var_cas_toolTargetBuildConfiguration ;
  var_cas_toolTargetBuildConfiguration = GGS_Xcode_XCBuildConfiguration ::constructor_new (inLexique, var_cas_inTargetSettings COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mBuildConfigurationList._addAssign_operation (var_cas_toolTargetBuildConfiguration) ;
  var_cas_outTargetKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (924)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (924)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (924)) ;
  var_cas_ioXcodeProjectDescription.mTargetList._addAssign_operation (var_cas_outTargetKey, var_cas_inTargetName, var_cas_toolTargetBuildConfiguration, GGS_string ("$(HOME)/bin"), var_cas_inProductFileName, var_cas_toolFileReference, var_cas_buildPhases, var_cas_inDirectDependencyList) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_add_tool_target\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of routine "add_app_target"                 *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_add_app_target (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription & var_cas_ioXcodeProjectDescription,
                                const GGS_string  var_cas_inProductFileName,
                                const GGS_string  var_cas_inTargetName,
                                GGS_stringlist   var_cas_inTargetSettings,
                                const GGS_string  var_cas_inPrecompiledHeaderPath,
                                const GGS_string  var_cas_inInfoPListFile,
                                const GGS_Xcode_PBXBuildFile_list   var_cas_inSourcesToCompileKeyList,
                                const GGS_Xcode_PBXBuildFile_list   var_cas_inFrameworksToCompileList,
                                const GGS_Xcode_PBXBuildFile_list   var_cas_inResourcesToCompileList,
                                const GGS_stringlist   var_cas_inDirectDependencyList,
                                GGS_string & var_cas_outTargetKey COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_add_app_target at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_stringlist  var_cas_buildPhases ;
  var_cas_buildPhases = GGS_stringlist ::constructor_emptyList () ;
  GGS_Xcode_PBXFileReference_Application  var_cas_toolFileReference ;
  var_cas_toolFileReference = GGS_Xcode_PBXFileReference_Application ::constructor_new (inLexique, var_cas_inProductFileName COMMA_HERE) ;
  GGS_lstring  var_cas_projectNameKey ;
  var_cas_projectNameKey = GGS_lstring ::constructor_new (inLexique, var_cas_inProductFileName, GGS_location (inLexique) COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mFileReferenceMap.modifier_insertKey (inLexique, var_cas_projectNameKey, var_cas_toolFileReference COMMA_SOURCE_FILE_AT_LINE (956)) ;
  var_cas_ioXcodeProjectDescription.mProductGroupChildrenList._addAssign_operation (var_cas_toolFileReference.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (958)), var_cas_inTargetName) ;
  GGS_Xcode_PBXResourcesBuildPhase  var_cas_resourcesBuildPhase ;
  var_cas_resourcesBuildPhase = GGS_Xcode_PBXResourcesBuildPhase ::constructor_new (inLexique, GGS_string ("Resources"), var_cas_inResourcesToCompileList COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mPBXResourcesBuildPhase_list._addAssign_operation (var_cas_resourcesBuildPhase) ;
  var_cas_buildPhases._addAssign_operation (var_cas_resourcesBuildPhase.reader_PBXResourcesBuildPhaseKey (inLexique COMMA_SOURCE_FILE_AT_LINE (965))) ;
  GGS_Xcode_PBXSourcesBuildPhase  var_cas_compileSourcesBuildPhase ;
  var_cas_compileSourcesBuildPhase = GGS_Xcode_PBXSourcesBuildPhase ::constructor_new (inLexique, GGS_string ("Sources"), var_cas_inSourcesToCompileKeyList COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mPBXSourcesBuildPhase_list._addAssign_operation (var_cas_compileSourcesBuildPhase) ;
  var_cas_buildPhases._addAssign_operation (var_cas_compileSourcesBuildPhase.reader_PBXSourcesBuildPhaseKey (inLexique COMMA_SOURCE_FILE_AT_LINE (972))) ;
  GGS_Xcode_PBXFrameworksBuildPhase  var_cas_frameworksBuildPhase ;
  var_cas_frameworksBuildPhase = GGS_Xcode_PBXFrameworksBuildPhase ::constructor_new (inLexique, GGS_string ("Frameworks"), var_cas_inFrameworksToCompileList COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mPBXFrameworksBuildPhase_list._addAssign_operation (var_cas_frameworksBuildPhase) ;
  var_cas_buildPhases._addAssign_operation (var_cas_frameworksBuildPhase.reader_PBXFrameworksBuildPhaseKey (inLexique COMMA_SOURCE_FILE_AT_LINE (979))) ;
  if (((var_cas_inPrecompiledHeaderPath).operator_isNotEqual (GGS_string (""))).isBuiltAndTrue ()) {
    var_cas_inTargetSettings._addAssign_operation (GGS_string ("GCC_PRECOMPILE_PREFIX_HEADER = YES;")) ;
    var_cas_inTargetSettings._addAssign_operation (((GGS_string ("GCC_PREFIX_HEADER = \"")).operator_concat (var_cas_inPrecompiledHeaderPath)).operator_concat (GGS_string ("\";"))) ;
  }
  if (((var_cas_inInfoPListFile).operator_isNotEqual (GGS_string (""))).isBuiltAndTrue ()) {
    var_cas_inTargetSettings._addAssign_operation (((GGS_string ("INFOPLIST_FILE = \"")).operator_concat (var_cas_inInfoPListFile)).operator_concat (GGS_string ("\";"))) ;
  }
  var_cas_inTargetSettings._addAssign_operation (GGS_string ("GCC_WARN_UNUSED_PARAMETER = NO;")) ;
  var_cas_inTargetSettings._addAssign_operation (GGS_string ("GCC_WARN_PROTOTYPE_CONVERSION = NO;\n")) ;
  var_cas_inTargetSettings._addAssign_operation (((GGS_string ("PRODUCT_NAME = \"")).operator_concat (var_cas_inProductFileName)).operator_concat (GGS_string ("\";"))) ;
  GGS_stringlist  var_cas_targetDependencyKeyList ;
  var_cas_targetDependencyKeyList = GGS_stringlist ::constructor_emptyList () ;
  {
    GGS_stringlist::cEnumerator enumerator_40576 (var_cas_inDirectDependencyList, true) ;
    const GGS_stringlist::cElement * operand_40576 = NULL ;
    while (((operand_40576 = enumerator_40576.nextObject ()))) {
      macroValidPointer (operand_40576) ;
      GGS_Xcode_targetDependencyDescription  var_cas_d ;
      var_cas_d = GGS_Xcode_targetDependencyDescription ::constructor_new (inLexique, operand_40576->mValue COMMA_HERE) ;
      var_cas_targetDependencyKeyList._addAssign_operation (var_cas_d.reader_PBXTargetDependencyKey (inLexique COMMA_SOURCE_FILE_AT_LINE (995))) ;
      var_cas_ioXcodeProjectDescription.mDependencyList._addAssign_operation (var_cas_d) ;
    }
  }
  GGS_Xcode_XCBuildConfiguration  var_cas_toolTargetBuildConfiguration ;
  var_cas_toolTargetBuildConfiguration = GGS_Xcode_XCBuildConfiguration ::constructor_new (inLexique, var_cas_inTargetSettings COMMA_HERE) ;
  var_cas_ioXcodeProjectDescription.mBuildConfigurationList._addAssign_operation (var_cas_toolTargetBuildConfiguration) ;
  var_cas_outTargetKey = GGS_uint ::constructor_sequenceNumber (inLexique COMMA_HERE).reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1001)).reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (1001)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (1001)) ;
  var_cas_ioXcodeProjectDescription.mTargetList._addAssign_operation (var_cas_outTargetKey, var_cas_inTargetName, var_cas_toolTargetBuildConfiguration, GGS_string ("$(HOME)/bin"), var_cas_inProductFileName, var_cas_toolFileReference, var_cas_buildPhases, var_cas_targetDependencyKeyList) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_add_app_target\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of routine "enterProjectDefaultSettings"           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterProjectDefaultSettings (C_Compiler &,
                                const GGS_stringlist   var_cas_inHeaderSearchPathList,
                                GGS_stringlist  & var_cas_outProjectDefaultSettings COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_enterProjectDefaultSettings at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_pathString ;
  var_cas_pathString = GGS_string ("") ;
  {
    GGS_stringlist::cEnumerator enumerator_41640 (var_cas_inHeaderSearchPathList, true) ;
    const GGS_stringlist::cElement * operand_41640 = NULL ;
    while (((operand_41640 = enumerator_41640.nextObject ()))) {
      macroValidPointer (operand_41640) ;
      var_cas_pathString.appendCString ("\t\t\t\t\t\"") ;
      var_cas_pathString.dotAssign_operation (operand_41640->mValue) ;
      var_cas_pathString.appendCString ("\",\n") ;
    }
  }
  var_cas_outProjectDefaultSettings = GGS_stringlist ::constructor_emptyList () ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("ALWAYS_SEARCH_USER_PATHS = NO;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("ARCHS = (\n"
    "\t\t\t\t\tppc,\n"
    "\t\t\t\t\ti386,\n"
    "\t\t\t\t);")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_DEBUGGING_SYMBOLS = default;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_GENERATE_DEBUGGING_SYMBOLS = NO;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_PRECOMPILE_PREFIX_HEADER = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_THREADSAFE_STATICS = NO;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_TREAT_NONCONFORMANT_CODE_ERRORS_AS_WARNINGS = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_TREAT_WARNINGS_AS_ERRORS = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_64_TO_32_BIT_CONVERSION = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_ABOUT_MISSING_NEWLINE = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_ABOUT_RETURN_TYPE = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_CHECK_SWITCH_STATEMENTS = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_EFFECTIVE_CPLUSPLUS_VIOLATIONS = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_FOUR_CHARACTER_CONSTANTS = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_INHIBIT_ALL_WARNINGS = NO;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_MISSING_PARENTHESES = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_PEDANTIC = NO;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_PROTOTYPE_CONVERSION = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_SHADOW = NO;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_SIGN_COMPARE = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_TYPECHECK_CALLS_TO_PRINTF = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_UNINITIALIZED_AUTOS = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_UNKNOWN_PRAGMAS = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_UNUSED_FUNCTION = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_UNUSED_LABEL = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_UNUSED_PARAMETER = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_UNUSED_VALUE = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("GCC_WARN_UNUSED_VARIABLE = YES;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (((GGS_string ("HEADER_SEARCH_PATHS = (\n")).operator_concat (var_cas_pathString)).operator_concat (GGS_string ("\t\t\t\t);"))) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("PREBINDING = NO;")) ;
  var_cas_outProjectDefaultSettings._addAssign_operation (GGS_string ("SDKROOT = /Developer/SDKs/MacOSX10.5.sdk;")) ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_enterProjectDefaultSettings\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of routine "buildXcodeProjectString"             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildXcodeProjectString (C_Compiler & inLexique,
                                const GGS_XcodeProjectDescription  var_cas_inXcodeProjectDescription,
                                const GGS_string  var_cas_inProjectName,
                                const GGS_string  var_cas_inMainGroupKey,
                                const GGS_string  var_cas_inProjectDefaultConfigurationKey,
                                GGS_string & var_cas_outString COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_buildXcodeProjectString at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_rootObjectKey ;
  var_cas_rootObjectKey = GGS_string ("project").reader_md5 (inLexique COMMA_SOURCE_FILE_AT_LINE (1074)).reader_rightSubString (inLexique, GGS_uint (24U) COMMA_SOURCE_FILE_AT_LINE (1074)) ;
  var_cas_outString = ((((((GGS_string ("// !$*UTF8*$!\n")).operator_concat (GGS_string ("{\n"))).operator_concat (GGS_string ("\tarchiveVersion = 1;\n"))).operator_concat (GGS_string ("\tclasses = {\n"))).operator_concat (GGS_string ("\t};\n"))).operator_concat (GGS_string ("\tobjectVersion = 42;\n"))).operator_concat (GGS_string ("\tobjects = {\n"
    "\n")) ;
  {
    GGS_Xcode_PBXBuildFile_list::cEnumerator enumerator_45105 (var_cas_inXcodeProjectDescription.reader_mAllBuildFileList (inLexique COMMA_SOURCE_FILE_AT_LINE (1084)), true) ;
    const GGS_Xcode_PBXBuildFile_list::cElement * operand_45105 = enumerator_45105.nextObject () ;
    if ((operand_45105 != NULL)) {
      var_cas_outString.appendCString ("/* Begin PBXBuildFile section */\n") ;
      bool _foreach_loop_45105 ;
      do{
        macroValidPointer (operand_45105) ;
        const GGS_Xcode_PBXBuildFile  temp_45240 = operand_45105->mFile ;
        if (temp_45240.isBuilt ()) {
          temp_45240 (HERE)->method_buildXcodeProject (inLexique, var_cas_outString COMMA_SOURCE_FILE_AT_LINE (1086)) ;
        }
        operand_45105 = enumerator_45105.nextObject () ;
        _foreach_loop_45105 = ((operand_45105 != NULL)) ;
        if (_foreach_loop_45105) {
        }
      }while (_foreach_loop_45105) ;
      var_cas_outString.appendCString ("/* End PBXBuildFile section */\n"
        "\n") ;
    }
  }
  {
    GGS_Xcode_PBXFileReference_map::cEnumerator enumerator_45373 (var_cas_inXcodeProjectDescription.reader_mFileReferenceMap (inLexique COMMA_SOURCE_FILE_AT_LINE (1090)), true) ;
    const GGS_Xcode_PBXFileReference_map::cElement * operand_45373 = enumerator_45373.nextObject () ;
    if ((operand_45373 != NULL)) {
      var_cas_outString.appendCString ("/* Begin PBXFileReference section */\n") ;
      bool _foreach_loop_45373 ;
      do{
        macroValidPointer (operand_45373) ;
        const GGS_Xcode_PBXFileReference_abstract  temp_45521 = operand_45373->mInfo.mFileReference ;
        if (temp_45521.isBuilt ()) {
          temp_45521 (HERE)->method_buildXcodeProject (inLexique, var_cas_outString COMMA_SOURCE_FILE_AT_LINE (1092)) ;
        }
        operand_45373 = enumerator_45373.nextObject () ;
        _foreach_loop_45373 = ((operand_45373 != NULL)) ;
        if (_foreach_loop_45373) {
        }
      }while (_foreach_loop_45373) ;
      var_cas_outString.appendCString ("/* End PBXFileReference section */\n") ;
    }
  }
  {
    GGS_Xcode_PBXFrameworksBuildPhase_list::cEnumerator enumerator_45663 (var_cas_inXcodeProjectDescription.reader_mPBXFrameworksBuildPhase_list (inLexique COMMA_SOURCE_FILE_AT_LINE (1096)), true) ;
    const GGS_Xcode_PBXFrameworksBuildPhase_list::cElement * operand_45663 = enumerator_45663.nextObject () ;
    if ((operand_45663 != NULL)) {
      var_cas_outString.appendCString ("/* Begin PBXFrameworksBuildPhase section */\n") ;
      bool _foreach_loop_45663 ;
      do{
        macroValidPointer (operand_45663) ;
        const GGS_Xcode_PBXFrameworksBuildPhase  temp_45827 = operand_45663->mBuildPhase ;
        if (temp_45827.isBuilt ()) {
          temp_45827 (HERE)->method_buildXcodeProject (inLexique, var_cas_outString COMMA_SOURCE_FILE_AT_LINE (1098)) ;
        }
        operand_45663 = enumerator_45663.nextObject () ;
        _foreach_loop_45663 = ((operand_45663 != NULL)) ;
        if (_foreach_loop_45663) {
        }
      }while (_foreach_loop_45663) ;
      var_cas_outString.appendCString ("/* End PBXFrameworksBuildPhase section */\n") ;
    }
  }
  var_cas_outString.appendCString ("/* Begin PBXGroup section */\n") ;
  {
    GGS_Xcode_PBXGroup_list::cEnumerator enumerator_46011 (var_cas_inXcodeProjectDescription.reader_mProjectGroupList (inLexique COMMA_SOURCE_FILE_AT_LINE (1103)), true) ;
    const GGS_Xcode_PBXGroup_list::cElement * operand_46011 = NULL ;
    while (((operand_46011 = enumerator_46011.nextObject ()))) {
      macroValidPointer (operand_46011) ;
      var_cas_outString.appendCString ("\t\t") ;
      var_cas_outString.dotAssign_operation (operand_46011->mGroup.reader_PBXGroupKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1104))) ;
      if (((operand_46011->mGroup.reader_mGroupName (inLexique COMMA_SOURCE_FILE_AT_LINE (1105))).operator_isNotEqual (GGS_string (""))).isBuiltAndTrue ()) {
        var_cas_outString.appendCString (" /* ") ;
        var_cas_outString.dotAssign_operation (operand_46011->mGroup.reader_mGroupName (inLexique COMMA_SOURCE_FILE_AT_LINE (1106))) ;
        var_cas_outString.appendCString (" */") ;
      }
      var_cas_outString.appendCString (" = {\n"
      "\t\t\tisa = PBXGroup;\n"
      "\t\t\tchildren = (\n") ;
      {
        GGS_XcodeObjectReferenceList::cEnumerator enumerator_46319 (operand_46011->mGroup.reader_mChildrenGroupList (inLexique COMMA_SOURCE_FILE_AT_LINE (1111)), true) ;
        const GGS_XcodeObjectReferenceList::cElement * operand_46319 = NULL ;
        while (((operand_46319 = enumerator_46319.nextObject ()))) {
          macroValidPointer (operand_46319) ;
          var_cas_outString.appendCString ("\t\t\t\t") ;
          var_cas_outString.dotAssign_operation (operand_46319->mRefString) ;
          var_cas_outString.appendCString (" /* ") ;
          var_cas_outString.dotAssign_operation (operand_46319->mComment) ;
          var_cas_outString.appendCString (" */,\n") ;
        }
      }
      var_cas_outString.appendCString ("\t\t\t);\n") ;
      if (((operand_46011->mGroup.reader_mGroupName (inLexique COMMA_SOURCE_FILE_AT_LINE (1115))).operator_isNotEqual (GGS_string (""))).isBuiltAndTrue ()) {
        if (((operand_46011->mGroup.reader_mGroupName (inLexique COMMA_SOURCE_FILE_AT_LINE (1116)).reader_componentsSeparatedByString (inLexique, GGS_string (" ") COMMA_SOURCE_FILE_AT_LINE (1116)).reader_length (inLexique COMMA_SOURCE_FILE_AT_LINE (1116))).operator_strictSup (GGS_uint (1U))).isBuiltAndTrue ()) {
          var_cas_outString.appendCString ("\t\t\tname = \"") ;
          var_cas_outString.dotAssign_operation (operand_46011->mGroup.reader_mGroupName (inLexique COMMA_SOURCE_FILE_AT_LINE (1117))) ;
          var_cas_outString.appendCString ("\";\n") ;
        }else{
          var_cas_outString.appendCString ("\t\t\tname = ") ;
          var_cas_outString.dotAssign_operation (operand_46011->mGroup.reader_mGroupName (inLexique COMMA_SOURCE_FILE_AT_LINE (1119))) ;
          var_cas_outString.appendCString (";\n") ;
        }
      }
      if (((operand_46011->mGroup.reader_mGroupPath (inLexique COMMA_SOURCE_FILE_AT_LINE (1122))).operator_isNotEqual (GGS_string (""))).isBuiltAndTrue ()) {
        var_cas_outString.appendCString ("\t\t\tpath = \"") ;
        var_cas_outString.dotAssign_operation (operand_46011->mGroup.reader_mGroupPath (inLexique COMMA_SOURCE_FILE_AT_LINE (1123))) ;
        var_cas_outString.appendCString ("\";\n") ;
      }
      var_cas_outString.appendCString ("\t\t\tsourceTree = \"<group>\";\n"
      "\t\t};\n") ;
    }
  }
  var_cas_outString.appendCString ("/* End PBXGroup section */\n"
    "\n") ;
  {
    GGS_Xcode_PBXNativeTarget_list::cEnumerator enumerator_47076 (var_cas_inXcodeProjectDescription.reader_mTargetList (inLexique COMMA_SOURCE_FILE_AT_LINE (1130)), true) ;
    const GGS_Xcode_PBXNativeTarget_list::cElement * operand_47076 = enumerator_47076.nextObject () ;
    if ((operand_47076 != NULL)) {
      var_cas_outString.appendCString ("/* Begin PBXNativeTarget section */\n") ;
      bool _foreach_loop_47076 ;
      do{
        macroValidPointer (operand_47076) ;
        var_cas_outString.appendCString ("\t\t") ;
        var_cas_outString.dotAssign_operation (operand_47076->mTargetKey) ;
        var_cas_outString.appendCString (" /* ") ;
        var_cas_outString.dotAssign_operation (operand_47076->mTargetName) ;
        var_cas_outString.appendCString (" */ = {\n"
        "\t\t\tisa = PBXNativeTarget;\n"
        "\t\t\tbuildConfigurationList = ") ;
        var_cas_outString.dotAssign_operation (operand_47076->mTargetConfiguration.reader_XCBuildConfigurationKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1135))) ;
        var_cas_outString.appendCString (" /* Build configuration list for PBXNativeTarget \"") ;
        var_cas_outString.dotAssign_operation (operand_47076->mTargetName) ;
        var_cas_outString.appendCString ("\" */;\n"
        "\t\t\tbuildPhases = (\n") ;
        {
          GGS_stringlist::cEnumerator enumerator_47533 (operand_47076->mBuildPhaseKeyList, true) ;
          const GGS_stringlist::cElement * operand_47533 = NULL ;
          while (((operand_47533 = enumerator_47533.nextObject ()))) {
            macroValidPointer (operand_47533) ;
            var_cas_outString.appendCString ("\t\t\t\t") ;
            var_cas_outString.dotAssign_operation (operand_47533->mValue) ;
            var_cas_outString.appendCString (" ,\n") ;
          }
        }
        GGS_string var_cas_productExtension ;
        const GGS_Xcode_productFileReference  temp_47662 = operand_47076->mProduct ;
        if (temp_47662.isBuilt ()) {
          temp_47662 (HERE)->method_productExtension (inLexique, var_cas_productExtension COMMA_SOURCE_FILE_AT_LINE (1140)) ;
        }
        var_cas_outString.appendCString ("\t\t\t);\n"
        "\t\t\tbuildRules = (\n"
        "\t\t\t);\n"
        "\t\t\tdependencies = (\n") ;
        {
          GGS_stringlist::cEnumerator enumerator_47830 (operand_47076->mDependencyKeyList, true) ;
          const GGS_stringlist::cElement * operand_47830 = NULL ;
          while (((operand_47830 = enumerator_47830.nextObject ()))) {
            macroValidPointer (operand_47830) ;
            var_cas_outString.appendCString ("\t\t\t\t") ;
            var_cas_outString.dotAssign_operation (operand_47830->mValue) ;
            var_cas_outString.appendCString (" /*  */,\n") ;
          }
        }
        var_cas_outString.appendCString ("\t\t\t);\n"
        "\t\t\tname = \"") ;
        var_cas_outString.dotAssign_operation (operand_47076->mTargetName) ;
        var_cas_outString.appendCString ("\";\n"
        "\t\t\tproductInstallPath = \"") ;
        var_cas_outString.dotAssign_operation (operand_47076->mProductInstallPath) ;
        var_cas_outString.appendCString ("\";\n"
        "\t\t\tproductName = \"") ;
        var_cas_outString.dotAssign_operation (operand_47076->mProductName) ;
        var_cas_outString.appendCString ("\";\n"
        "\t\t\tproductReference = ") ;
        var_cas_outString.dotAssign_operation (operand_47076->mProduct.reader_PBXFileReferenceKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1152))) ;
        var_cas_outString.appendCString (" ;\n"
        "\t\t\tproductType = \"com.apple.product-type.") ;
        var_cas_outString.dotAssign_operation (var_cas_productExtension) ;
        var_cas_outString.appendCString ("\";\n"
        "\t\t};\n") ;
        operand_47076 = enumerator_47076.nextObject () ;
        _foreach_loop_47076 = ((operand_47076 != NULL)) ;
        if (_foreach_loop_47076) {
        }
      }while (_foreach_loop_47076) ;
      var_cas_outString.appendCString ("/* End PBXNativeTarget section */\n") ;
    }
  }
  var_cas_outString.appendCString ("/* Begin PBXProject section */\n"
  "\t\t") ;
  var_cas_outString.dotAssign_operation (var_cas_rootObjectKey) ;
  var_cas_outString.appendCString (" /* Project object */ = {\n"
  "\t\t\tisa = PBXProject;\n"
  "\t\t\tbuildConfigurationList = ") ;
  var_cas_outString.dotAssign_operation (var_cas_inProjectDefaultConfigurationKey) ;
  var_cas_outString.appendCString (" /* Build configuration list for PBXProject \"") ;
  var_cas_outString.dotAssign_operation (var_cas_inProjectName) ;
  var_cas_outString.appendCString ("\" */;\n"
  "\t\t\tcompatibilityVersion = \"Xcode 2.4\";\n"
  "\t\t\thasScannedForEncodings = 1;\n"
  "\t\t\tmainGroup = ") ;
  var_cas_outString.dotAssign_operation (var_cas_inMainGroupKey) ;
  var_cas_outString.appendCString (";\n"
  "\t\t\tprojectDirPath = \"\";\n"
  "\t\t\tprojectRoot = \"\";\n"
  "\t\t\ttargets = (\n") ;
  {
    GGS_Xcode_PBXNativeTarget_list::cEnumerator enumerator_48945 (var_cas_inXcodeProjectDescription.reader_mTargetList (inLexique COMMA_SOURCE_FILE_AT_LINE (1170)), true) ;
    const GGS_Xcode_PBXNativeTarget_list::cElement * operand_48945 = NULL ;
    while (((operand_48945 = enumerator_48945.nextObject ()))) {
      macroValidPointer (operand_48945) ;
      var_cas_outString.appendCString ("\t\t\t\t") ;
      var_cas_outString.dotAssign_operation (operand_48945->mTargetKey) ;
      var_cas_outString.appendCString (" /* ") ;
      var_cas_outString.dotAssign_operation (operand_48945->mTargetName) ;
      var_cas_outString.appendCString (" */,\n") ;
    }
  }
  var_cas_outString.appendCString ("\t\t\t);\n"
  "\t\t};\n"
  "/* End PBXProject section */\n"
    "\n") ;
  {
    GGS_Xcode_PBXResourcesBuildPhase_list::cEnumerator enumerator_49211 (var_cas_inXcodeProjectDescription.reader_mPBXResourcesBuildPhase_list (inLexique COMMA_SOURCE_FILE_AT_LINE (1177)), true) ;
    const GGS_Xcode_PBXResourcesBuildPhase_list::cElement * operand_49211 = enumerator_49211.nextObject () ;
    if ((operand_49211 != NULL)) {
      var_cas_outString.appendCString ("/* Begin PBXResourcesBuildPhase section */\n") ;
      bool _foreach_loop_49211 ;
      do{
        macroValidPointer (operand_49211) ;
        var_cas_outString.appendCString ("\t\t") ;
        var_cas_outString.dotAssign_operation (operand_49211->mBuildPhase.reader_PBXResourcesBuildPhaseKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1180))) ;
        var_cas_outString.appendCString (" /* ") ;
        var_cas_outString.dotAssign_operation (operand_49211->mBuildPhase.reader_mNameForComment (inLexique COMMA_SOURCE_FILE_AT_LINE (1181))) ;
        var_cas_outString.appendCString (" */ = {\n"
        "\t\t\tisa = PBXResourcesBuildPhase;\n"
        "\t\t\tbuildActionMask = 2147483647;\n"
        "\t\t\tfiles = (\n") ;
        {
          GGS_Xcode_PBXBuildFile_list::cEnumerator enumerator_49601 (operand_49211->mBuildPhase.reader_mFileReferenceList (inLexique COMMA_SOURCE_FILE_AT_LINE (1185)), true) ;
          const GGS_Xcode_PBXBuildFile_list::cElement * operand_49601 = NULL ;
          while (((operand_49601 = enumerator_49601.nextObject ()))) {
            macroValidPointer (operand_49601) ;
            var_cas_outString.appendCString ("\t\t\t\t") ;
            var_cas_outString.dotAssign_operation (operand_49601->mFile.reader_PBXBuildFileKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1186))) ;
            var_cas_outString.appendCString (" ,\n") ;
          }
        }
        var_cas_outString.appendCString ("\t\t\t);\n"
        "\t\t\trunOnlyForDeploymentPostprocessing = 0;\n"
        "\t\t};\n") ;
        operand_49211 = enumerator_49211.nextObject () ;
        _foreach_loop_49211 = ((operand_49211 != NULL)) ;
        if (_foreach_loop_49211) {
        }
      }while (_foreach_loop_49211) ;
      var_cas_outString.appendCString ("/* End PBXResourcesBuildPhase section */\n") ;
    }
  }
  {
    GGS_Xcode_PBXSourcesBuildPhase_list::cEnumerator enumerator_49956 (var_cas_inXcodeProjectDescription.reader_mPBXSourcesBuildPhase_list (inLexique COMMA_SOURCE_FILE_AT_LINE (1194)), true) ;
    const GGS_Xcode_PBXSourcesBuildPhase_list::cElement * operand_49956 = enumerator_49956.nextObject () ;
    if ((operand_49956 != NULL)) {
      var_cas_outString.appendCString ("/* Begin PBXSourcesBuildPhase section */\n") ;
      bool _foreach_loop_49956 ;
      do{
        macroValidPointer (operand_49956) ;
        var_cas_outString.appendCString ("\t\t") ;
        var_cas_outString.dotAssign_operation (operand_49956->mBuildPhase.reader_PBXSourcesBuildPhaseKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1197))) ;
        var_cas_outString.appendCString (" /* ") ;
        var_cas_outString.dotAssign_operation (operand_49956->mBuildPhase.reader_mNameForComment (inLexique COMMA_SOURCE_FILE_AT_LINE (1198))) ;
        var_cas_outString.appendCString (" */ = {\n"
        "\t\t\tisa = PBXSourcesBuildPhase;\n"
        "\t\t\tbuildActionMask = 2147483647;\n"
        "\t\t\tfiles = (\n") ;
        {
          GGS_Xcode_PBXBuildFile_list::cEnumerator enumerator_50338 (operand_49956->mBuildPhase.reader_mFileReferenceList (inLexique COMMA_SOURCE_FILE_AT_LINE (1202)), true) ;
          const GGS_Xcode_PBXBuildFile_list::cElement * operand_50338 = NULL ;
          while (((operand_50338 = enumerator_50338.nextObject ()))) {
            macroValidPointer (operand_50338) ;
            var_cas_outString.appendCString ("\t\t\t\t") ;
            var_cas_outString.dotAssign_operation (operand_50338->mFile.reader_PBXBuildFileKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1203))) ;
            var_cas_outString.appendCString (" ,\n") ;
          }
        }
        var_cas_outString.appendCString ("\t\t\t);\n"
        "\t\t\trunOnlyForDeploymentPostprocessing = 0;\n"
        "\t\t};\n") ;
        operand_49956 = enumerator_49956.nextObject () ;
        _foreach_loop_49956 = ((operand_49956 != NULL)) ;
        if (_foreach_loop_49956) {
        }
      }while (_foreach_loop_49956) ;
      var_cas_outString.appendCString ("/* End PBXSourcesBuildPhase section */\n") ;
    }
  }
  {
    GGS_Xcode_targetDependencyDescription_list::cEnumerator enumerator_50690 (var_cas_inXcodeProjectDescription.reader_mDependencyList (inLexique COMMA_SOURCE_FILE_AT_LINE (1211)), true) ;
    const GGS_Xcode_targetDependencyDescription_list::cElement * operand_50690 = enumerator_50690.nextObject () ;
    if ((operand_50690 != NULL)) {
      var_cas_outString.appendCString ("/* Begin PBXTargetDependency section */\n") ;
      bool _foreach_loop_50690 ;
      do{
        macroValidPointer (operand_50690) ;
        var_cas_outString.appendCString ("\t\t") ;
        var_cas_outString.dotAssign_operation (operand_50690->mDependency.reader_PBXTargetDependencyKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1214))) ;
        var_cas_outString.appendCString (" /* PBXTargetDependency */ = {\n"
        "\t\t\tisa = PBXTargetDependency;\n"
        "\t\t\ttarget = ") ;
        var_cas_outString.dotAssign_operation (operand_50690->mDependency.reader_mDependencyTarget (inLexique COMMA_SOURCE_FILE_AT_LINE (1217))) ;
        var_cas_outString.appendCString (" ;\n"
        "\t\t};\n") ;
        operand_50690 = enumerator_50690.nextObject () ;
        _foreach_loop_50690 = ((operand_50690 != NULL)) ;
        if (_foreach_loop_50690) {
        }
      }while (_foreach_loop_50690) ;
      var_cas_outString.appendCString ("/* End PBXTargetDependency section */\n") ;
    }
  }
  GGS_string var_cas_mPBXVariantKey ;
  GGS_string var_cas_mPBXFileReferenceKey ;
  GGS_string var_cas_mName ;
  {
    GGS_Xcode_PBXVariantGroup_list::cEnumerator enumerator_51238 (var_cas_inXcodeProjectDescription.reader_mPBXVariantGroup_list (inLexique COMMA_SOURCE_FILE_AT_LINE (1225)), true) ;
    const GGS_Xcode_PBXVariantGroup_list::cElement * operand_51238 = enumerator_51238.nextObject () ;
    if ((operand_51238 != NULL)) {
      var_cas_outString.appendCString ("/* Begin PBXVariantGroup section */\n") ;
      bool _foreach_loop_51238 ;
      do{
        macroValidPointer (operand_51238) ;
        var_cas_outString.appendCString ("\t\t") ;
        var_cas_outString.dotAssign_operation (operand_51238->mPBXVariantKey) ;
        var_cas_outString.appendCString (" /* ") ;
        var_cas_outString.dotAssign_operation (operand_51238->mName) ;
        var_cas_outString.appendCString (" */ = {\n"
        "\t\t\tisa = PBXVariantGroup;\n"
        "\t\t\tchildren = (\n"
        "\t\t\t\t") ;
        var_cas_outString.dotAssign_operation (operand_51238->mPBXFileReferenceKey) ;
        var_cas_outString.appendCString (" ,\n"
        "\t\t\t);\n"
        "\t\t\tname = ") ;
        var_cas_outString.dotAssign_operation (operand_51238->mName) ;
        var_cas_outString.appendCString (";\n"
        "\t\t\tsourceTree = \"<group>\";\n"
        "\t\t};\n") ;
        operand_51238 = enumerator_51238.nextObject () ;
        _foreach_loop_51238 = ((operand_51238 != NULL)) ;
        if (_foreach_loop_51238) {
        }
      }while (_foreach_loop_51238) ;
      var_cas_outString.appendCString ("/* End PBXVariantGroup section */\n") ;
    }
  }
  {
    GGS_Xcode_XCBuildConfiguration_list::cEnumerator enumerator_51789 (var_cas_inXcodeProjectDescription.reader_mBuildConfigurationList (inLexique COMMA_SOURCE_FILE_AT_LINE (1240)), true) ;
    const GGS_Xcode_XCBuildConfiguration_list::cElement * operand_51789 = enumerator_51789.nextObject () ;
    if ((operand_51789 != NULL)) {
      var_cas_outString.appendCString ("/* Begin XCBuildConfiguration section */\n") ;
      bool _foreach_loop_51789 ;
      do{
        macroValidPointer (operand_51789) ;
        var_cas_outString.appendCString ("\t\t") ;
        var_cas_outString.dotAssign_operation (operand_51789->mBuildConfig.reader_configurationKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1243))) ;
        var_cas_outString.appendCString (" /* Default */ = {\n"
        "\t\t\tisa = XCBuildConfiguration;\n"
        "\t\t\tbuildSettings = {\n") ;
        {
          GGS_stringlist::cEnumerator enumerator_52090 (operand_51789->mBuildConfig.reader_mSettings (inLexique COMMA_SOURCE_FILE_AT_LINE (1246)), true) ;
          const GGS_stringlist::cElement * operand_52090 = NULL ;
          while (((operand_52090 = enumerator_52090.nextObject ()))) {
            macroValidPointer (operand_52090) ;
            var_cas_outString.appendCString ("\t\t\t\t") ;
            var_cas_outString.dotAssign_operation (operand_52090->mValue) ;
            var_cas_outString.appendCString ("\n") ;
          }
        }
        var_cas_outString.appendCString ("\t\t\t};\n"
        "\t\t\tname = Default;\n"
        "\t\t};\n") ;
        operand_51789 = enumerator_51789.nextObject () ;
        _foreach_loop_51789 = ((operand_51789 != NULL)) ;
        if (_foreach_loop_51789) {
        }
      }while (_foreach_loop_51789) ;
      var_cas_outString.appendCString ("/* End XCBuildConfiguration section */\n"
        "\n") ;
    }
  }
  {
    GGS_Xcode_XCBuildConfiguration_list::cEnumerator enumerator_52393 (var_cas_inXcodeProjectDescription.reader_mBuildConfigurationList (inLexique COMMA_SOURCE_FILE_AT_LINE (1255)), true) ;
    const GGS_Xcode_XCBuildConfiguration_list::cElement * operand_52393 = enumerator_52393.nextObject () ;
    if ((operand_52393 != NULL)) {
      var_cas_outString.appendCString ("/* Begin XCConfigurationList section */\n") ;
      bool _foreach_loop_52393 ;
      do{
        macroValidPointer (operand_52393) ;
        var_cas_outString.appendCString ("\t\t") ;
        var_cas_outString.dotAssign_operation (operand_52393->mBuildConfig.reader_XCBuildConfigurationKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1258))) ;
        var_cas_outString.appendCString (" /* Build configuration list for PBXProject \"") ;
        var_cas_outString.dotAssign_operation (var_cas_inProjectName) ;
        var_cas_outString.appendCString ("\" */ = {\n"
        "\t\t\tisa = XCConfigurationList;\n"
        "\t\t\tbuildConfigurations = (\n"
        "\t\t\t\t") ;
        var_cas_outString.dotAssign_operation (operand_52393->mBuildConfig.reader_configurationKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1262))) ;
        var_cas_outString.appendCString (" /* Default */,\n"
        "\t\t\t);\n"
        "\t\t\tdefaultConfigurationIsVisible = 0;\n"
        "\t\t\tdefaultConfigurationName = Default;\n"
        "\t\t};\n") ;
        operand_52393 = enumerator_52393.nextObject () ;
        _foreach_loop_52393 = ((operand_52393 != NULL)) ;
        if (_foreach_loop_52393) {
        }
      }while (_foreach_loop_52393) ;
      var_cas_outString.appendCString ("/* End XCConfigurationList section */\n") ;
    }
  }
  var_cas_outString.appendCString ("\t};\n"
  "\trootObject = ") ;
  var_cas_outString.dotAssign_operation (var_cas_rootObjectKey) ;
  var_cas_outString.appendCString (" /* Project object */;\n"
  "}\n") ;
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_buildXcodeProjectString\n") ;
  #endif
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of routine "generateXCodeFile"                *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_generateXCodeFile (C_Compiler & inLexique,
                                GGS_XcodeProjectDescription  var_cas_inXcodeProjectDescription,
                                const GGS_string  var_cas_in_xcodeproj_filePath,
                                const GGS_stringlist   var_cas_inProjectDefaultSettings,
                                const GGS_string  var_cas_inReferenceFilePath COMMA_UNUSED_LOCATION_ARGS) {
  #ifdef DEBUG_TRACE_ENABLED
    printf ("ENTER routine_generateXCodeFile at %s:%d\n", __FILE__, __LINE__) ;
  #endif
  GGS_string var_cas_projectName ;
  var_cas_projectName = var_cas_in_xcodeproj_filePath.reader_lastPathComponent (inLexique COMMA_SOURCE_FILE_AT_LINE (1283)).reader_stringByDeletingPathExtension (inLexique COMMA_SOURCE_FILE_AT_LINE (1283)) ;
  GGS_Xcode_XCBuildConfiguration  var_cas_defaultProjectConfiguration ;
  var_cas_defaultProjectConfiguration = GGS_Xcode_XCBuildConfiguration ::constructor_new (inLexique, var_cas_inProjectDefaultSettings COMMA_HERE) ;
  var_cas_inXcodeProjectDescription.mBuildConfigurationList._addAssign_operation (var_cas_defaultProjectConfiguration) ;
  ::routine_enter_group (inLexique,  var_cas_inXcodeProjectDescription,  GGS_string ("Products"),  GGS_string (""),  var_cas_inXcodeProjectDescription.reader_mProductGroupChildrenList (inLexique COMMA_SOURCE_FILE_AT_LINE (1292)) COMMA_SOURCE_FILE_AT_LINE (1288)) ;
  GGS_Xcode_PBXGroup  var_cas_mainGroup ;
  var_cas_mainGroup = GGS_Xcode_PBXGroup ::constructor_new (inLexique, GGS_string (""), GGS_string (""), var_cas_inXcodeProjectDescription.reader_mMainGroupChildrenList (inLexique COMMA_SOURCE_FILE_AT_LINE (1295)) COMMA_HERE) ;
  var_cas_inXcodeProjectDescription.mProjectGroupList._addAssign_operation (var_cas_mainGroup) ;
  GGS_string var_cas_fileNewContents ;
  ::routine_buildXcodeProjectString (inLexique,  var_cas_inXcodeProjectDescription,  var_cas_projectName,  var_cas_mainGroup.reader_PBXGroupKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1302)),  var_cas_defaultProjectConfiguration.reader_XCBuildConfigurationKey (inLexique COMMA_SOURCE_FILE_AT_LINE (1303)),  var_cas_fileNewContents COMMA_SOURCE_FILE_AT_LINE (1299)) ;
  if (((GGS_uint ::constructor_errorCount (inLexique COMMA_HERE)).operator_isEqual (GGS_uint (0U))).isBuiltAndTrue ()) {
    const GGS_string temp_54427 = var_cas_in_xcodeproj_filePath ;
    if (temp_54427.isBuilt ()) {
      temp_54427 (HERE)->method_makeDirectory (inLexique COMMA_SOURCE_FILE_AT_LINE (1308)) ;
    }
    GGS_bool var_cas_written ;
    const GGS_string temp_54549 = var_cas_fileNewContents ;
    if (temp_54549.isBuilt ()) {
      temp_54549 (HERE)->method_writeToFileWhenDifferentContents (inLexique, var_cas_inReferenceFilePath, var_cas_written COMMA_SOURCE_FILE_AT_LINE (1311)) ;
    }
    if (((var_cas_written).operator_or ((var_cas_in_xcodeproj_filePath.reader_fileExists (inLexique COMMA_SOURCE_FILE_AT_LINE (1312))).operator_not ())).isBuiltAndTrue ()) {
      GGS_bool automatic_var_0 ;
      const GGS_string temp_54699 = var_cas_fileNewContents ;
      if (temp_54699.isBuilt ()) {
        temp_54699 (HERE)->method_writeToFileWhenDifferentContents (inLexique, (var_cas_in_xcodeproj_filePath).operator_concat (GGS_string ("/project.pbxproj")), automatic_var_0 COMMA_SOURCE_FILE_AT_LINE (1313)) ;
      }
    }
    if ((var_cas_written).isBuiltAndTrue ()) {
      GGS_stringlist  var_cas_pbxuser_files ;
      var_cas_pbxuser_files = var_cas_in_xcodeproj_filePath.reader_regularFilesWithExtensions (inLexique, GGS_bool (false), GGS_stringlist ::constructor_listWithValue (GGS_string ("pbxuser")) COMMA_SOURCE_FILE_AT_LINE (1317)) ;
      {
        GGS_stringlist::cEnumerator enumerator_54999 (var_cas_pbxuser_files, true) ;
        const GGS_stringlist::cElement * operand_54999 = NULL ;
        while (((operand_54999 = enumerator_54999.nextObject ()))) {
          macroValidPointer (operand_54999) ;
          GGS_string var_cas_fullPath ;
          var_cas_fullPath = ((var_cas_in_xcodeproj_filePath).operator_concat (GGS_string ("/"))).operator_concat (operand_54999->mValue) ;
          GGS_string::class_method_deleteFile (inLexique, var_cas_fullPath COMMA_SOURCE_FILE_AT_LINE (1320)) ;
        }
      }
    }
  }
  #ifdef DEBUG_TRACE_ENABLED
    printf ("LEAVE routine_generateXCodeFile\n") ;
  #endif
}

//---------------------------------------------------------------------------*

