//---------------------------------------------------------------------------*
//                                                                           *
//                  File 'semanticInstructionGeneration.h'                   *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                       may 14th, 2010, at 22h34'28"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef semanticInstructionGeneration_DEFINED
#define semanticInstructionGeneration_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "semanticExpressionGeneration.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//                                                                           *
// Category reader '@semanticInstructionForGeneration.generateInstruction'   *
//                                                                           *
//---------------------------------------------------------------------------*

typedef GGS_string (*typeCategoryReader__semanticInstructionForGeneration__generateInstruction)  (C_Compiler & inLexique,
                                const cPtr_semanticInstructionForGeneration * inObjectPtr
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryReader__semanticInstructionForGeneration__generateInstruction (typeCategoryReader__semanticInstructionForGeneration__generateInstruction inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryReader__semanticInstructionForGeneration__generateInstruction
findCategoryReader__semanticInstructionForGeneration__generateInstruction (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Category method '@actualParameterForGeneration.generateActualParameter'   *
//                                                                           *
//---------------------------------------------------------------------------*

typedef void (*typeCategoryMethod__actualParameterForGeneration__generateActualParameter)  (C_Compiler & inLexique,
                                const cPtr_actualParameterForGeneration * inObjectPtr,
                                GGS_string & var_cas_ioImplementation,
                                GGS_string & var_cas_outCppName
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

void
enterCategoryMethod__actualParameterForGeneration__generateActualParameter (typeCategoryMethod__actualParameterForGeneration__generateActualParameter inRoutine,
                     const PMSInt32 inClassID) ;

//---------------------------------------------------------------------------*

typeCategoryMethod__actualParameterForGeneration__generateActualParameter
findCategoryMethod__actualParameterForGeneration__generateActualParameter (AC_galgasClassRunTimeInformationEX * inClassPtr) ;

//---------------------------------------------------------------------------*

#endif
