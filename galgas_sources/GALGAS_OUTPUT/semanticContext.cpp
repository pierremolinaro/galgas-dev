//-----------------------------------------------------------------------------*
//                                                                             *
//                         File 'semanticContext.cpp'                          *
//                         Generated by version 2.6.0                          *
//                       june 19th, 2014, at 16h52'36"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticContext.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "optionLL1grammar.h"

//-----------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticContext.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'addCategories'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_addCategories (const GALGAS_categoryMethodMapForBuildingContext constinArgument0,
                            const GALGAS_categoryReaderMapForBuildingContext constinArgument1,
                            const GALGAS_categoryModifierMapForBuildingContext constinArgument2,
                            GALGAS_semanticContext & ioArgument3,
                            const GALGAS_lstring constinArgument4,
                            GALGAS_readerMap & ioArgument5,
                            GALGAS_modifierMap & ioArgument6,
                            GALGAS_instanceMethodMap & ioArgument7,
                            C_Compiler * inCompiler
                            COMMA_LOCATION_ARGS) ;

//-----------------------------------------------------------------------------*

cMapElement_grammarLabelMap::cMapElement_grammarLabelMap (const GALGAS_lstring & inKey,
                                                          const GALGAS_formalParameterSignature & in_mLabelSignature
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLabelSignature (in_mLabelSignature) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_grammarLabelMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelSignature.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_grammarLabelMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_grammarLabelMap (mAttribute_lkey, mAttribute_mLabelSignature COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_grammarLabelMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLabelSignature" ":" ;
  mAttribute_mLabelSignature.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_grammarLabelMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_grammarLabelMap * operand = (cMapElement_grammarLabelMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLabelSignature.objectCompare (operand->mAttribute_mLabelSignature) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap::GALGAS_grammarLabelMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap::GALGAS_grammarLabelMap (const GALGAS_grammarLabelMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap & GALGAS_grammarLabelMap::operator = (const GALGAS_grammarLabelMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarLabelMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_grammarLabelMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarLabelMap::constructor_mapWithMapToOverride (const GALGAS_grammarLabelMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_grammarLabelMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarLabelMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_grammarLabelMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_grammarLabelMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_formalParameterSignature inArgument0,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_grammarLabelMap * p = NULL ;
  macroMyNew (p, cMapElement_grammarLabelMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' grammar label has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_grammarLabelMap_searchKey = "the '%K' grammar label is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_grammarLabelMap::method_searchKey (GALGAS_lstring inKey,
                                               GALGAS_formalParameterSignature & outArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_grammarLabelMap * p = (const cMapElement_grammarLabelMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_grammarLabelMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_grammarLabelMap) ;
    outArgument0 = p->mAttribute_mLabelSignature ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_grammarLabelMap::reader_mLabelSignatureForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_grammarLabelMap * p = (const cMapElement_grammarLabelMap *) attributes ;
  GALGAS_formalParameterSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_grammarLabelMap) ;
    result = p->mAttribute_mLabelSignature ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_grammarLabelMap::modifier_setMLabelSignatureForKey (GALGAS_formalParameterSignature inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarLabelMap * p = (cMapElement_grammarLabelMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_grammarLabelMap) ;
    p->mAttribute_mLabelSignature = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_grammarLabelMap * GALGAS_grammarLabelMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarLabelMap * result = (cMapElement_grammarLabelMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_grammarLabelMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_grammarLabelMap * GALGAS_grammarLabelMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                   const GALGAS_lstring & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_grammarLabelMap_searchKey COMMA_THERE) ;
  cMapElement_grammarLabelMap * result = (cMapElement_grammarLabelMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_grammarLabelMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_grammarLabelMap::cEnumerator_grammarLabelMap (const GALGAS_grammarLabelMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element cEnumerator_grammarLabelMap::current (LOCATION_ARGS) const {
  const cMapElement_grammarLabelMap * p = (const cMapElement_grammarLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_grammarLabelMap) ;
  return GALGAS_grammarLabelMap_2E_element (p->mAttribute_lkey, p->mAttribute_mLabelSignature) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_grammarLabelMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterSignature cEnumerator_grammarLabelMap::current_mLabelSignature (LOCATION_ARGS) const {
  const cMapElement_grammarLabelMap * p = (const cMapElement_grammarLabelMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_grammarLabelMap) ;
  return p->mAttribute_mLabelSignature ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @grammarLabelMap type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarLabelMap ("grammarLabelMap",
                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarLabelMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarLabelMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarLabelMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarLabelMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarLabelMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_grammarLabelMap result ;
  const GALGAS_grammarLabelMap * p = (const GALGAS_grammarLabelMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarLabelMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("grammarLabelMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_grammarMap::cMapElement_grammarMap (const GALGAS_lstring & inKey,
                                                const GALGAS_grammarLabelMap & in_mLabelMap,
                                                const GALGAS_bool & in_mHasIndexing
                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mLabelMap (in_mLabelMap),
mAttribute_mHasIndexing (in_mHasIndexing) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_grammarMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelMap.isValid () && mAttribute_mHasIndexing.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_grammarMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_grammarMap (mAttribute_lkey, mAttribute_mLabelMap, mAttribute_mHasIndexing COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_grammarMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mLabelMap" ":" ;
  mAttribute_mLabelMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHasIndexing" ":" ;
  mAttribute_mHasIndexing.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_grammarMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_grammarMap * operand = (cMapElement_grammarMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLabelMap.objectCompare (operand->mAttribute_mLabelMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHasIndexing.objectCompare (operand->mAttribute_mHasIndexing) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap::GALGAS_grammarMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap::GALGAS_grammarMap (const GALGAS_grammarMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap & GALGAS_grammarMap::operator = (const GALGAS_grammarMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_grammarMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_grammarMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_grammarMap::constructor_mapWithMapToOverride (const GALGAS_grammarMap & inMapToOverride
                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_grammarMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_grammarMap::reader_overriddenMap (C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_grammarMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_grammarMap::modifier_insertKey (GALGAS_lstring inKey,
                                            GALGAS_grammarLabelMap inArgument0,
                                            GALGAS_bool inArgument1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_grammarMap * p = NULL ;
  macroMyNew (p, cMapElement_grammarMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' grammar has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_grammarMap_searchKey = "the '%K' grammar is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_grammarMap::method_searchKey (GALGAS_lstring inKey,
                                          GALGAS_grammarLabelMap & outArgument0,
                                          GALGAS_bool & outArgument1,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) performSearch (inKey,
                                                                                       inCompiler,
                                                                                       kSearchErrorMessage_grammarMap_searchKey
                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_grammarMap) ;
    outArgument0 = p->mAttribute_mLabelMap ;
    outArgument1 = p->mAttribute_mHasIndexing ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarMap::reader_mLabelMapForKey (const GALGAS_string & inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) attributes ;
  GALGAS_grammarLabelMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_grammarMap) ;
    result = p->mAttribute_mLabelMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_grammarMap::reader_mHasIndexingForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_grammarMap) ;
    result = p->mAttribute_mHasIndexing ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_grammarMap::modifier_setMLabelMapForKey (GALGAS_grammarLabelMap inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarMap * p = (cMapElement_grammarMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_grammarMap) ;
    p->mAttribute_mLabelMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_grammarMap::modifier_setMHasIndexingForKey (GALGAS_bool inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarMap * p = (cMapElement_grammarMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_grammarMap) ;
    p->mAttribute_mHasIndexing = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_grammarMap * GALGAS_grammarMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                      const GALGAS_string & inKey
                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_grammarMap * result = (cMapElement_grammarMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_grammarMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_grammarMap * GALGAS_grammarMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                         const GALGAS_lstring & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_grammarMap_searchKey COMMA_THERE) ;
  cMapElement_grammarMap * result = (cMapElement_grammarMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_grammarMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_grammarMap::cEnumerator_grammarMap (const GALGAS_grammarMap & inEnumeratedObject,
                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element cEnumerator_grammarMap::current (LOCATION_ARGS) const {
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_grammarMap) ;
  return GALGAS_grammarMap_2E_element (p->mAttribute_lkey, p->mAttribute_mLabelMap, p->mAttribute_mHasIndexing) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_grammarMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap cEnumerator_grammarMap::current_mLabelMap (LOCATION_ARGS) const {
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_grammarMap) ;
  return p->mAttribute_mLabelMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_grammarMap::current_mHasIndexing (LOCATION_ARGS) const {
  const cMapElement_grammarMap * p = (const cMapElement_grammarMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_grammarMap) ;
  return p->mAttribute_mHasIndexing ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                              @grammarMap type                               *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarMap ("grammarMap",
                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_grammarMap::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_grammarMap result ;
  const GALGAS_grammarMap * p = (const GALGAS_grammarMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("grammarMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_routineMap::cMapElement_routineMap (const GALGAS_lstring & inKey,
                                                const GALGAS_formalParameterSignature & in_mRoutineSignature
                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRoutineSignature (in_mRoutineSignature) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_routineMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRoutineSignature.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_routineMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_routineMap (mAttribute_lkey, mAttribute_mRoutineSignature COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_routineMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRoutineSignature" ":" ;
  mAttribute_mRoutineSignature.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_routineMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_routineMap * operand = (cMapElement_routineMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRoutineSignature.objectCompare (operand->mAttribute_mRoutineSignature) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap::GALGAS_routineMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap::GALGAS_routineMap (const GALGAS_routineMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap & GALGAS_routineMap::operator = (const GALGAS_routineMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_routineMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::constructor_mapWithMapToOverride (const GALGAS_routineMap & inMapToOverride
                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_routineMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::reader_overriddenMap (C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_routineMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_insertKey (GALGAS_lstring inKey,
                                            GALGAS_formalParameterSignature inArgument0,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_routineMap * p = NULL ;
  macroMyNew (p, cMapElement_routineMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' routine has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_routineMap_searchKey = "the '%K' routine is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_routineMap::method_searchKey (GALGAS_lstring inKey,
                                          GALGAS_formalParameterSignature & outArgument0,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) performSearch (inKey,
                                                                                       inCompiler,
                                                                                       kSearchErrorMessage_routineMap_searchKey
                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_routineMap) ;
    outArgument0 = p->mAttribute_mRoutineSignature ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_routineMap::reader_mRoutineSignatureForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) attributes ;
  GALGAS_formalParameterSignature result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    result = p->mAttribute_mRoutineSignature ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_routineMap::modifier_setMRoutineSignatureForKey (GALGAS_formalParameterSignature inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * p = (cMapElement_routineMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_routineMap) ;
    p->mAttribute_mRoutineSignature = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_routineMap * GALGAS_routineMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                      const GALGAS_string & inKey
                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_routineMap * result = (cMapElement_routineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_routineMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_routineMap * GALGAS_routineMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                         const GALGAS_lstring & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_routineMap_searchKey COMMA_THERE) ;
  cMapElement_routineMap * result = (cMapElement_routineMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_routineMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_routineMap::cEnumerator_routineMap (const GALGAS_routineMap & inEnumeratedObject,
                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap_2E_element cEnumerator_routineMap::current (LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMap) ;
  return GALGAS_routineMap_2E_element (p->mAttribute_lkey, p->mAttribute_mRoutineSignature) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_routineMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterSignature cEnumerator_routineMap::current_mRoutineSignature (LOCATION_ARGS) const {
  const cMapElement_routineMap * p = (const cMapElement_routineMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_routineMap) ;
  return p->mAttribute_mRoutineSignature ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                              @routineMap type                               *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineMap ("routineMap",
                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_routineMap::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_routineMap result ;
  const GALGAS_routineMap * p = (const GALGAS_routineMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_functionMap::cMapElement_functionMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_unifiedTypeMapProxyList & in_mFunctionSignature,
                                                  const GALGAS_unifiedTypeMapProxy & in_mResultType
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFunctionSignature (in_mFunctionSignature),
mAttribute_mResultType (in_mResultType) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_functionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFunctionSignature.isValid () && mAttribute_mResultType.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_functionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_functionMap (mAttribute_lkey, mAttribute_mFunctionSignature, mAttribute_mResultType COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_functionMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFunctionSignature" ":" ;
  mAttribute_mFunctionSignature.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mResultType" ":" ;
  mAttribute_mResultType.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_functionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_functionMap * operand = (cMapElement_functionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFunctionSignature.objectCompare (operand->mAttribute_mFunctionSignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mResultType.objectCompare (operand->mAttribute_mResultType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap::GALGAS_functionMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap::GALGAS_functionMap (const GALGAS_functionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap & GALGAS_functionMap::operator = (const GALGAS_functionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_functionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_functionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_functionMap::constructor_mapWithMapToOverride (const GALGAS_functionMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_functionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_functionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_functionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_functionMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_unifiedTypeMapProxyList inArgument0,
                                             GALGAS_unifiedTypeMapProxy inArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_functionMap * p = NULL ;
  macroMyNew (p, cMapElement_functionMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' function has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_functionMap_searchKey = "the '%K' function is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_functionMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_unifiedTypeMapProxyList & outArgument0,
                                           GALGAS_unifiedTypeMapProxy & outArgument1,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_functionMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_functionMap) ;
    outArgument0 = p->mAttribute_mFunctionSignature ;
    outArgument1 = p->mAttribute_mResultType ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_functionMap::reader_mFunctionSignatureForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) attributes ;
  GALGAS_unifiedTypeMapProxyList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMap) ;
    result = p->mAttribute_mFunctionSignature ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_functionMap::reader_mResultTypeForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMap) ;
    result = p->mAttribute_mResultType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_functionMap::modifier_setMFunctionSignatureForKey (GALGAS_unifiedTypeMapProxyList inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMap * p = (cMapElement_functionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMap) ;
    p->mAttribute_mFunctionSignature = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_functionMap::modifier_setMResultTypeForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMap * p = (cMapElement_functionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_functionMap) ;
    p->mAttribute_mResultType = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_functionMap * GALGAS_functionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_functionMap * result = (cMapElement_functionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_functionMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_functionMap * GALGAS_functionMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                           const GALGAS_lstring & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_functionMap_searchKey COMMA_THERE) ;
  cMapElement_functionMap * result = (cMapElement_functionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_functionMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_functionMap::cEnumerator_functionMap (const GALGAS_functionMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap_2E_element cEnumerator_functionMap::current (LOCATION_ARGS) const {
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_functionMap) ;
  return GALGAS_functionMap_2E_element (p->mAttribute_lkey, p->mAttribute_mFunctionSignature, p->mAttribute_mResultType) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_functionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList cEnumerator_functionMap::current_mFunctionSignature (LOCATION_ARGS) const {
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_functionMap) ;
  return p->mAttribute_mFunctionSignature ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_functionMap::current_mResultType (LOCATION_ARGS) const {
  const cMapElement_functionMap * p = (const cMapElement_functionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_functionMap) ;
  return p->mAttribute_mResultType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                              @functionMap type                              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_functionMap ("functionMap",
                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_functionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_functionMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_functionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_functionMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_functionMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_functionMap result ;
  const GALGAS_functionMap * p = (const GALGAS_functionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_functionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("functionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_wrapperFileMap::cMapElement_wrapperFileMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_string & in_mAbsoluteFilePath,
                                                        const GALGAS_bool & in_mIsTextFile,
                                                        const GALGAS_uint & in_mWrapperDirectoryIndex,
                                                        const GALGAS_uint & in_mWrapperFileIndex
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAbsoluteFilePath (in_mAbsoluteFilePath),
mAttribute_mIsTextFile (in_mIsTextFile),
mAttribute_mWrapperDirectoryIndex (in_mWrapperDirectoryIndex),
mAttribute_mWrapperFileIndex (in_mWrapperFileIndex) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_wrapperFileMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAbsoluteFilePath.isValid () && mAttribute_mIsTextFile.isValid () && mAttribute_mWrapperDirectoryIndex.isValid () && mAttribute_mWrapperFileIndex.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_wrapperFileMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_wrapperFileMap (mAttribute_lkey, mAttribute_mAbsoluteFilePath, mAttribute_mIsTextFile, mAttribute_mWrapperDirectoryIndex, mAttribute_mWrapperFileIndex COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_wrapperFileMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAbsoluteFilePath" ":" ;
  mAttribute_mAbsoluteFilePath.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsTextFile" ":" ;
  mAttribute_mIsTextFile.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWrapperDirectoryIndex" ":" ;
  mAttribute_mWrapperDirectoryIndex.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWrapperFileIndex" ":" ;
  mAttribute_mWrapperFileIndex.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_wrapperFileMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_wrapperFileMap * operand = (cMapElement_wrapperFileMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAbsoluteFilePath.objectCompare (operand->mAttribute_mAbsoluteFilePath) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsTextFile.objectCompare (operand->mAttribute_mIsTextFile) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWrapperDirectoryIndex.objectCompare (operand->mAttribute_mWrapperDirectoryIndex) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWrapperFileIndex.objectCompare (operand->mAttribute_mWrapperFileIndex) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap::GALGAS_wrapperFileMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap::GALGAS_wrapperFileMap (const GALGAS_wrapperFileMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap & GALGAS_wrapperFileMap::operator = (const GALGAS_wrapperFileMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperFileMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_wrapperFileMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperFileMap::constructor_mapWithMapToOverride (const GALGAS_wrapperFileMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_wrapperFileMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperFileMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_wrapperFileMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_string inArgument0,
                                                GALGAS_bool inArgument1,
                                                GALGAS_uint inArgument2,
                                                GALGAS_uint inArgument3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_wrapperFileMap * p = NULL ;
  macroMyNew (p, cMapElement_wrapperFileMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "INTERNAL ERROR" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_wrapperFileMap_searchKey = "INTERNAL ERROR" ;

//-----------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_string & outArgument0,
                                              GALGAS_bool & outArgument1,
                                              GALGAS_uint & outArgument2,
                                              GALGAS_uint & outArgument3,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_wrapperFileMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    outArgument0 = p->mAttribute_mAbsoluteFilePath ;
    outArgument1 = p->mAttribute_mIsTextFile ;
    outArgument2 = p->mAttribute_mWrapperDirectoryIndex ;
    outArgument3 = p->mAttribute_mWrapperFileIndex ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_wrapperFileMap::reader_mAbsoluteFilePathForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    result = p->mAttribute_mAbsoluteFilePath ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_wrapperFileMap::reader_mIsTextFileForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    result = p->mAttribute_mIsTextFile ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperFileMap::reader_mWrapperDirectoryIndexForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    result = p->mAttribute_mWrapperDirectoryIndex ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperFileMap::reader_mWrapperFileIndexForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    result = p->mAttribute_mWrapperFileIndex ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_setMAbsoluteFilePathForKey (GALGAS_string inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * p = (cMapElement_wrapperFileMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    p->mAttribute_mAbsoluteFilePath = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_setMIsTextFileForKey (GALGAS_bool inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * p = (cMapElement_wrapperFileMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    p->mAttribute_mIsTextFile = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_setMWrapperDirectoryIndexForKey (GALGAS_uint inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * p = (cMapElement_wrapperFileMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    p->mAttribute_mWrapperDirectoryIndex = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperFileMap::modifier_setMWrapperFileIndexForKey (GALGAS_uint inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * p = (cMapElement_wrapperFileMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
    p->mAttribute_mWrapperFileIndex = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_wrapperFileMap * GALGAS_wrapperFileMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperFileMap * result = (cMapElement_wrapperFileMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperFileMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_wrapperFileMap * GALGAS_wrapperFileMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_wrapperFileMap_searchKey COMMA_THERE) ;
  cMapElement_wrapperFileMap * result = (cMapElement_wrapperFileMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperFileMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_wrapperFileMap::cEnumerator_wrapperFileMap (const GALGAS_wrapperFileMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element cEnumerator_wrapperFileMap::current (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
  return GALGAS_wrapperFileMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAbsoluteFilePath, p->mAttribute_mIsTextFile, p->mAttribute_mWrapperDirectoryIndex, p->mAttribute_mWrapperFileIndex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_wrapperFileMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_wrapperFileMap::current_mAbsoluteFilePath (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
  return p->mAttribute_mAbsoluteFilePath ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_wrapperFileMap::current_mIsTextFile (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
  return p->mAttribute_mIsTextFile ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint cEnumerator_wrapperFileMap::current_mWrapperDirectoryIndex (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
  return p->mAttribute_mWrapperDirectoryIndex ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint cEnumerator_wrapperFileMap::current_mWrapperFileIndex (LOCATION_ARGS) const {
  const cMapElement_wrapperFileMap * p = (const cMapElement_wrapperFileMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperFileMap) ;
  return p->mAttribute_mWrapperFileIndex ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @wrapperFileMap type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperFileMap ("wrapperFileMap",
                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperFileMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperFileMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperFileMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperFileMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperFileMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_wrapperFileMap result ;
  const GALGAS_wrapperFileMap * p = (const GALGAS_wrapperFileMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperFileMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("wrapperFileMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_wrapperDirectoryMap::cMapElement_wrapperDirectoryMap (const GALGAS_lstring & inKey,
                                                                  const GALGAS_wrapperFileMap & in_mRegularFileMap,
                                                                  const GALGAS_wrapperDirectoryMap & in_mDirectoryMap,
                                                                  const GALGAS_uint & in_mWrapperDirectoryIndex
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRegularFileMap (in_mRegularFileMap),
mAttribute_mDirectoryMap (in_mDirectoryMap),
mAttribute_mWrapperDirectoryIndex (in_mWrapperDirectoryIndex) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_wrapperDirectoryMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegularFileMap.isValid () && mAttribute_mDirectoryMap.isValid () && mAttribute_mWrapperDirectoryIndex.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_wrapperDirectoryMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_wrapperDirectoryMap (mAttribute_lkey, mAttribute_mRegularFileMap, mAttribute_mDirectoryMap, mAttribute_mWrapperDirectoryIndex COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_wrapperDirectoryMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRegularFileMap" ":" ;
  mAttribute_mRegularFileMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDirectoryMap" ":" ;
  mAttribute_mDirectoryMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mWrapperDirectoryIndex" ":" ;
  mAttribute_mWrapperDirectoryIndex.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_wrapperDirectoryMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_wrapperDirectoryMap * operand = (cMapElement_wrapperDirectoryMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRegularFileMap.objectCompare (operand->mAttribute_mRegularFileMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDirectoryMap.objectCompare (operand->mAttribute_mDirectoryMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mWrapperDirectoryIndex.objectCompare (operand->mAttribute_mWrapperDirectoryIndex) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap::GALGAS_wrapperDirectoryMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap::GALGAS_wrapperDirectoryMap (const GALGAS_wrapperDirectoryMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap & GALGAS_wrapperDirectoryMap::operator = (const GALGAS_wrapperDirectoryMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::constructor_mapWithMapToOverride (const GALGAS_wrapperDirectoryMap & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_wrapperDirectoryMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::modifier_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_wrapperFileMap inArgument0,
                                                     GALGAS_wrapperDirectoryMap inArgument1,
                                                     GALGAS_uint inArgument2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_wrapperDirectoryMap * p = NULL ;
  macroMyNew (p, cMapElement_wrapperDirectoryMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "INTERNAL ERROR" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_wrapperDirectoryMap_searchKey = "INTERNAL ERROR" ;

//-----------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_wrapperFileMap & outArgument0,
                                                   GALGAS_wrapperDirectoryMap & outArgument1,
                                                   GALGAS_uint & outArgument2,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_wrapperDirectoryMap_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    outArgument0 = p->mAttribute_mRegularFileMap ;
    outArgument1 = p->mAttribute_mDirectoryMap ;
    outArgument2 = p->mAttribute_mWrapperDirectoryIndex ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperDirectoryMap::reader_mRegularFileMapForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) attributes ;
  GALGAS_wrapperFileMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    result = p->mAttribute_mRegularFileMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::reader_mDirectoryMapForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) attributes ;
  GALGAS_wrapperDirectoryMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    result = p->mAttribute_mDirectoryMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperDirectoryMap::reader_mWrapperDirectoryIndexForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) attributes ;
  GALGAS_uint result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    result = p->mAttribute_mWrapperDirectoryIndex ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::modifier_setMRegularFileMapForKey (GALGAS_wrapperFileMap inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * p = (cMapElement_wrapperDirectoryMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    p->mAttribute_mRegularFileMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::modifier_setMDirectoryMapForKey (GALGAS_wrapperDirectoryMap inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * p = (cMapElement_wrapperDirectoryMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    p->mAttribute_mDirectoryMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap::modifier_setMWrapperDirectoryIndexForKey (GALGAS_uint inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * p = (cMapElement_wrapperDirectoryMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
    p->mAttribute_mWrapperDirectoryIndex = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_wrapperDirectoryMap * GALGAS_wrapperDirectoryMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                        const GALGAS_string & inKey
                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * result = (cMapElement_wrapperDirectoryMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperDirectoryMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_wrapperDirectoryMap * GALGAS_wrapperDirectoryMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                           const GALGAS_lstring & inKey
                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_wrapperDirectoryMap_searchKey COMMA_THERE) ;
  cMapElement_wrapperDirectoryMap * result = (cMapElement_wrapperDirectoryMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperDirectoryMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_wrapperDirectoryMap::cEnumerator_wrapperDirectoryMap (const GALGAS_wrapperDirectoryMap & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element cEnumerator_wrapperDirectoryMap::current (LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
  return GALGAS_wrapperDirectoryMap_2E_element (p->mAttribute_lkey, p->mAttribute_mRegularFileMap, p->mAttribute_mDirectoryMap, p->mAttribute_mWrapperDirectoryIndex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_wrapperDirectoryMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap cEnumerator_wrapperDirectoryMap::current_mRegularFileMap (LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
  return p->mAttribute_mRegularFileMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap cEnumerator_wrapperDirectoryMap::current_mDirectoryMap (LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
  return p->mAttribute_mDirectoryMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint cEnumerator_wrapperDirectoryMap::current_mWrapperDirectoryIndex (LOCATION_ARGS) const {
  const cMapElement_wrapperDirectoryMap * p = (const cMapElement_wrapperDirectoryMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperDirectoryMap) ;
  return p->mAttribute_mWrapperDirectoryIndex ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @wrapperDirectoryMap type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperDirectoryMap ("wrapperDirectoryMap",
                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperDirectoryMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperDirectoryMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperDirectoryMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperDirectoryMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap result ;
  const GALGAS_wrapperDirectoryMap * p = (const GALGAS_wrapperDirectoryMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperDirectoryMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("wrapperDirectoryMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_filewrapperTemplateMap::cMapElement_filewrapperTemplateMap (const GALGAS_lstring & inKey,
                                                                        const GALGAS_unifiedTypeMapProxyList & in_mTemplateSignature,
                                                                        const GALGAS_lstring & in_mFilewrapperTemplatePath
                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mTemplateSignature (in_mTemplateSignature),
mAttribute_mFilewrapperTemplatePath (in_mFilewrapperTemplatePath) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_filewrapperTemplateMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTemplateSignature.isValid () && mAttribute_mFilewrapperTemplatePath.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_filewrapperTemplateMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_filewrapperTemplateMap (mAttribute_lkey, mAttribute_mTemplateSignature, mAttribute_mFilewrapperTemplatePath COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_filewrapperTemplateMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTemplateSignature" ":" ;
  mAttribute_mTemplateSignature.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperTemplatePath" ":" ;
  mAttribute_mFilewrapperTemplatePath.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_filewrapperTemplateMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_filewrapperTemplateMap * operand = (cMapElement_filewrapperTemplateMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTemplateSignature.objectCompare (operand->mAttribute_mTemplateSignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperTemplatePath.objectCompare (operand->mAttribute_mFilewrapperTemplatePath) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap::GALGAS_filewrapperTemplateMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap::GALGAS_filewrapperTemplateMap (const GALGAS_filewrapperTemplateMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap & GALGAS_filewrapperTemplateMap::operator = (const GALGAS_filewrapperTemplateMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperTemplateMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperTemplateMap::constructor_mapWithMapToOverride (const GALGAS_filewrapperTemplateMap & inMapToOverride
                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperTemplateMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_filewrapperTemplateMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap::modifier_insertKey (GALGAS_lstring inKey,
                                                        GALGAS_unifiedTypeMapProxyList inArgument0,
                                                        GALGAS_lstring inArgument1,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_filewrapperTemplateMap * p = NULL ;
  macroMyNew (p, cMapElement_filewrapperTemplateMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' filewrapper template has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_filewrapperTemplateMap_searchKey = "the '%K' filewrapper template is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap::method_searchKey (GALGAS_lstring inKey,
                                                      GALGAS_unifiedTypeMapProxyList & outArgument0,
                                                      GALGAS_lstring & outArgument1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) performSearch (inKey,
                                                                                                               inCompiler,
                                                                                                               kSearchErrorMessage_filewrapperTemplateMap_searchKey
                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
    outArgument0 = p->mAttribute_mTemplateSignature ;
    outArgument1 = p->mAttribute_mFilewrapperTemplatePath ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_filewrapperTemplateMap::reader_mTemplateSignatureForKey (const GALGAS_string & inKey,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) attributes ;
  GALGAS_unifiedTypeMapProxyList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
    result = p->mAttribute_mTemplateSignature ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperTemplateMap::reader_mFilewrapperTemplatePathForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
    result = p->mAttribute_mFilewrapperTemplatePath ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap::modifier_setMTemplateSignatureForKey (GALGAS_unifiedTypeMapProxyList inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperTemplateMap * p = (cMapElement_filewrapperTemplateMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
    p->mAttribute_mTemplateSignature = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap::modifier_setMFilewrapperTemplatePathForKey (GALGAS_lstring inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperTemplateMap * p = (cMapElement_filewrapperTemplateMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
    p->mAttribute_mFilewrapperTemplatePath = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_filewrapperTemplateMap * GALGAS_filewrapperTemplateMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                              const GALGAS_string & inKey
                                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperTemplateMap * result = (cMapElement_filewrapperTemplateMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_filewrapperTemplateMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_filewrapperTemplateMap * GALGAS_filewrapperTemplateMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                 const GALGAS_lstring & inKey
                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_filewrapperTemplateMap_searchKey COMMA_THERE) ;
  cMapElement_filewrapperTemplateMap * result = (cMapElement_filewrapperTemplateMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_filewrapperTemplateMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_filewrapperTemplateMap::cEnumerator_filewrapperTemplateMap (const GALGAS_filewrapperTemplateMap & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element cEnumerator_filewrapperTemplateMap::current (LOCATION_ARGS) const {
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
  return GALGAS_filewrapperTemplateMap_2E_element (p->mAttribute_lkey, p->mAttribute_mTemplateSignature, p->mAttribute_mFilewrapperTemplatePath) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_filewrapperTemplateMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList cEnumerator_filewrapperTemplateMap::current_mTemplateSignature (LOCATION_ARGS) const {
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
  return p->mAttribute_mTemplateSignature ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_filewrapperTemplateMap::current_mFilewrapperTemplatePath (LOCATION_ARGS) const {
  const cMapElement_filewrapperTemplateMap * p = (const cMapElement_filewrapperTemplateMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_filewrapperTemplateMap) ;
  return p->mAttribute_mFilewrapperTemplatePath ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @filewrapperTemplateMap type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_filewrapperTemplateMap ("filewrapperTemplateMap",
                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_filewrapperTemplateMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_filewrapperTemplateMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_filewrapperTemplateMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_filewrapperTemplateMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperTemplateMap::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap result ;
  const GALGAS_filewrapperTemplateMap * p = (const GALGAS_filewrapperTemplateMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_filewrapperTemplateMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("filewrapperTemplateMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_filewrapperMap::cMapElement_filewrapperMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_lstring & in_mFilewrapperPath,
                                                        const GALGAS_lstringlist & in_mFilewrapperExtensionList,
                                                        const GALGAS_wrapperFileMap & in_mFilewrapperFileMap,
                                                        const GALGAS_wrapperDirectoryMap & in_mFilewrapperDirectoryMap,
                                                        const GALGAS_filewrapperTemplateMap & in_mFilewrapperTemplateMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFilewrapperPath (in_mFilewrapperPath),
mAttribute_mFilewrapperExtensionList (in_mFilewrapperExtensionList),
mAttribute_mFilewrapperFileMap (in_mFilewrapperFileMap),
mAttribute_mFilewrapperDirectoryMap (in_mFilewrapperDirectoryMap),
mAttribute_mFilewrapperTemplateMap (in_mFilewrapperTemplateMap) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_filewrapperMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFilewrapperPath.isValid () && mAttribute_mFilewrapperExtensionList.isValid () && mAttribute_mFilewrapperFileMap.isValid () && mAttribute_mFilewrapperDirectoryMap.isValid () && mAttribute_mFilewrapperTemplateMap.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_filewrapperMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_filewrapperMap (mAttribute_lkey, mAttribute_mFilewrapperPath, mAttribute_mFilewrapperExtensionList, mAttribute_mFilewrapperFileMap, mAttribute_mFilewrapperDirectoryMap, mAttribute_mFilewrapperTemplateMap COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_filewrapperMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperPath" ":" ;
  mAttribute_mFilewrapperPath.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperExtensionList" ":" ;
  mAttribute_mFilewrapperExtensionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperFileMap" ":" ;
  mAttribute_mFilewrapperFileMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperDirectoryMap" ":" ;
  mAttribute_mFilewrapperDirectoryMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFilewrapperTemplateMap" ":" ;
  mAttribute_mFilewrapperTemplateMap.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_filewrapperMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_filewrapperMap * operand = (cMapElement_filewrapperMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperPath.objectCompare (operand->mAttribute_mFilewrapperPath) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperExtensionList.objectCompare (operand->mAttribute_mFilewrapperExtensionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperFileMap.objectCompare (operand->mAttribute_mFilewrapperFileMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperDirectoryMap.objectCompare (operand->mAttribute_mFilewrapperDirectoryMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFilewrapperTemplateMap.objectCompare (operand->mAttribute_mFilewrapperTemplateMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap::GALGAS_filewrapperMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap::GALGAS_filewrapperMap (const GALGAS_filewrapperMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap & GALGAS_filewrapperMap::operator = (const GALGAS_filewrapperMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_filewrapperMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_filewrapperMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_filewrapperMap::constructor_mapWithMapToOverride (const GALGAS_filewrapperMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_filewrapperMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_filewrapperMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_lstring inArgument0,
                                                GALGAS_lstringlist inArgument1,
                                                GALGAS_wrapperFileMap inArgument2,
                                                GALGAS_wrapperDirectoryMap inArgument3,
                                                GALGAS_filewrapperTemplateMap inArgument4,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_filewrapperMap * p = NULL ;
  macroMyNew (p, cMapElement_filewrapperMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' filewrapper has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_filewrapperMap_searchKey = "the '%K' filewrapper is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_lstring & outArgument0,
                                              GALGAS_lstringlist & outArgument1,
                                              GALGAS_wrapperFileMap & outArgument2,
                                              GALGAS_wrapperDirectoryMap & outArgument3,
                                              GALGAS_filewrapperTemplateMap & outArgument4,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_filewrapperMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    outArgument0 = p->mAttribute_mFilewrapperPath ;
    outArgument1 = p->mAttribute_mFilewrapperExtensionList ;
    outArgument2 = p->mAttribute_mFilewrapperFileMap ;
    outArgument3 = p->mAttribute_mFilewrapperDirectoryMap ;
    outArgument4 = p->mAttribute_mFilewrapperTemplateMap ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperMap::reader_mFilewrapperPathForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperPath ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_filewrapperMap::reader_mFilewrapperExtensionListForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperExtensionList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_filewrapperMap::reader_mFilewrapperFileMapForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_wrapperFileMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperFileMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_filewrapperMap::reader_mFilewrapperDirectoryMapForKey (const GALGAS_string & inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_wrapperDirectoryMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperDirectoryMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperMap::reader_mFilewrapperTemplateMapForKey (const GALGAS_string & inKey,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) attributes ;
  GALGAS_filewrapperTemplateMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    result = p->mAttribute_mFilewrapperTemplateMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperPathForKey (GALGAS_lstring inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperPath = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperExtensionListForKey (GALGAS_lstringlist inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperExtensionList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperFileMapForKey (GALGAS_wrapperFileMap inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperFileMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperDirectoryMapForKey (GALGAS_wrapperDirectoryMap inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperDirectoryMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperMap::modifier_setMFilewrapperTemplateMapForKey (GALGAS_filewrapperTemplateMap inAttributeValue,
                                                                       GALGAS_string inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * p = (cMapElement_filewrapperMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_filewrapperMap) ;
    p->mAttribute_mFilewrapperTemplateMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_filewrapperMap * GALGAS_filewrapperMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_filewrapperMap * result = (cMapElement_filewrapperMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_filewrapperMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_filewrapperMap * GALGAS_filewrapperMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_filewrapperMap_searchKey COMMA_THERE) ;
  cMapElement_filewrapperMap * result = (cMapElement_filewrapperMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_filewrapperMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_filewrapperMap::cEnumerator_filewrapperMap (const GALGAS_filewrapperMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element cEnumerator_filewrapperMap::current (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_filewrapperMap) ;
  return GALGAS_filewrapperMap_2E_element (p->mAttribute_lkey, p->mAttribute_mFilewrapperPath, p->mAttribute_mFilewrapperExtensionList, p->mAttribute_mFilewrapperFileMap, p->mAttribute_mFilewrapperDirectoryMap, p->mAttribute_mFilewrapperTemplateMap) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_filewrapperMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_filewrapperMap::current_mFilewrapperPath (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperPath ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_filewrapperMap::current_mFilewrapperExtensionList (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperExtensionList ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap cEnumerator_filewrapperMap::current_mFilewrapperFileMap (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperFileMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap cEnumerator_filewrapperMap::current_mFilewrapperDirectoryMap (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperDirectoryMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap cEnumerator_filewrapperMap::current_mFilewrapperTemplateMap (LOCATION_ARGS) const {
  const cMapElement_filewrapperMap * p = (const cMapElement_filewrapperMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_filewrapperMap) ;
  return p->mAttribute_mFilewrapperTemplateMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @filewrapperMap type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_filewrapperMap ("filewrapperMap",
                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_filewrapperMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_filewrapperMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_filewrapperMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_filewrapperMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_filewrapperMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperMap result ;
  const GALGAS_filewrapperMap * p = (const GALGAS_filewrapperMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_filewrapperMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("filewrapperMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_optionComponentMapForSemanticAnalysis::cMapElement_optionComponentMapForSemanticAnalysis (const GALGAS_lstring & inKey,
                                                                                                      const GALGAS_commandLineOptionMap & in_mBoolOptionMap,
                                                                                                      const GALGAS_commandLineOptionMap & in_mUIntOptionMap,
                                                                                                      const GALGAS_commandLineOptionMap & in_mStringOptionMap
                                                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mBoolOptionMap (in_mBoolOptionMap),
mAttribute_mUIntOptionMap (in_mUIntOptionMap),
mAttribute_mStringOptionMap (in_mStringOptionMap) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_optionComponentMapForSemanticAnalysis::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mBoolOptionMap.isValid () && mAttribute_mUIntOptionMap.isValid () && mAttribute_mStringOptionMap.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_optionComponentMapForSemanticAnalysis::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_optionComponentMapForSemanticAnalysis (mAttribute_lkey, mAttribute_mBoolOptionMap, mAttribute_mUIntOptionMap, mAttribute_mStringOptionMap COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_optionComponentMapForSemanticAnalysis::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBoolOptionMap" ":" ;
  mAttribute_mBoolOptionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mUIntOptionMap" ":" ;
  mAttribute_mUIntOptionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mStringOptionMap" ":" ;
  mAttribute_mStringOptionMap.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_optionComponentMapForSemanticAnalysis::compare (const cCollectionElement * inOperand) const {
  cMapElement_optionComponentMapForSemanticAnalysis * operand = (cMapElement_optionComponentMapForSemanticAnalysis *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mBoolOptionMap.objectCompare (operand->mAttribute_mBoolOptionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mUIntOptionMap.objectCompare (operand->mAttribute_mUIntOptionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mStringOptionMap.objectCompare (operand->mAttribute_mStringOptionMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis::GALGAS_optionComponentMapForSemanticAnalysis (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis::GALGAS_optionComponentMapForSemanticAnalysis (const GALGAS_optionComponentMapForSemanticAnalysis & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis & GALGAS_optionComponentMapForSemanticAnalysis::operator = (const GALGAS_optionComponentMapForSemanticAnalysis & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_optionComponentMapForSemanticAnalysis::constructor_mapWithMapToOverride (const GALGAS_optionComponentMapForSemanticAnalysis & inMapToOverride
                                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_optionComponentMapForSemanticAnalysis::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_optionComponentMapForSemanticAnalysis result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::modifier_insertKey (GALGAS_lstring inKey,
                                                                       GALGAS_commandLineOptionMap inArgument0,
                                                                       GALGAS_commandLineOptionMap inArgument1,
                                                                       GALGAS_commandLineOptionMap inArgument2,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_optionComponentMapForSemanticAnalysis * p = NULL ;
  macroMyNew (p, cMapElement_optionComponentMapForSemanticAnalysis (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of the '%K' option component: it has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_optionComponentMapForSemanticAnalysis_searchKey = "the '%K' option component is not imported" ;

//-----------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::method_searchKey (GALGAS_lstring inKey,
                                                                     GALGAS_commandLineOptionMap & outArgument0,
                                                                     GALGAS_commandLineOptionMap & outArgument1,
                                                                     GALGAS_commandLineOptionMap & outArgument2,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) performSearch (inKey,
                                                                                                                                             inCompiler,
                                                                                                                                             kSearchErrorMessage_optionComponentMapForSemanticAnalysis_searchKey
                                                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    outArgument0 = p->mAttribute_mBoolOptionMap ;
    outArgument1 = p->mAttribute_mUIntOptionMap ;
    outArgument2 = p->mAttribute_mStringOptionMap ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis::reader_mBoolOptionMapForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  GALGAS_commandLineOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    result = p->mAttribute_mBoolOptionMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis::reader_mUIntOptionMapForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  GALGAS_commandLineOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    result = p->mAttribute_mUIntOptionMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis::reader_mStringOptionMapForKey (const GALGAS_string & inKey,
                                                                                                         C_Compiler * inCompiler
                                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  GALGAS_commandLineOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    result = p->mAttribute_mStringOptionMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::modifier_setMBoolOptionMapForKey (GALGAS_commandLineOptionMap inAttributeValue,
                                                                                     GALGAS_string inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * p = (cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    p->mAttribute_mBoolOptionMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::modifier_setMUIntOptionMapForKey (GALGAS_commandLineOptionMap inAttributeValue,
                                                                                     GALGAS_string inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * p = (cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    p->mAttribute_mUIntOptionMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis::modifier_setMStringOptionMapForKey (GALGAS_commandLineOptionMap inAttributeValue,
                                                                                       GALGAS_string inKey,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * p = (cMapElement_optionComponentMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
    p->mAttribute_mStringOptionMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_optionComponentMapForSemanticAnalysis * GALGAS_optionComponentMapForSemanticAnalysis::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                            const GALGAS_string & inKey
                                                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * result = (cMapElement_optionComponentMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_optionComponentMapForSemanticAnalysis) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_optionComponentMapForSemanticAnalysis * GALGAS_optionComponentMapForSemanticAnalysis::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                               const GALGAS_lstring & inKey
                                                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_optionComponentMapForSemanticAnalysis_searchKey COMMA_THERE) ;
  cMapElement_optionComponentMapForSemanticAnalysis * result = (cMapElement_optionComponentMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_optionComponentMapForSemanticAnalysis) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_optionComponentMapForSemanticAnalysis::cEnumerator_optionComponentMapForSemanticAnalysis (const GALGAS_optionComponentMapForSemanticAnalysis & inEnumeratedObject,
                                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element cEnumerator_optionComponentMapForSemanticAnalysis::current (LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
  return GALGAS_optionComponentMapForSemanticAnalysis_2E_element (p->mAttribute_lkey, p->mAttribute_mBoolOptionMap, p->mAttribute_mUIntOptionMap, p->mAttribute_mStringOptionMap) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_optionComponentMapForSemanticAnalysis::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_commandLineOptionMap cEnumerator_optionComponentMapForSemanticAnalysis::current_mBoolOptionMap (LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
  return p->mAttribute_mBoolOptionMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_commandLineOptionMap cEnumerator_optionComponentMapForSemanticAnalysis::current_mUIntOptionMap (LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
  return p->mAttribute_mUIntOptionMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_commandLineOptionMap cEnumerator_optionComponentMapForSemanticAnalysis::current_mStringOptionMap (LOCATION_ARGS) const {
  const cMapElement_optionComponentMapForSemanticAnalysis * p = (const cMapElement_optionComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionComponentMapForSemanticAnalysis) ;
  return p->mAttribute_mStringOptionMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                 @optionComponentMapForSemanticAnalysis type                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_optionComponentMapForSemanticAnalysis ("optionComponentMapForSemanticAnalysis",
                                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_optionComponentMapForSemanticAnalysis::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_optionComponentMapForSemanticAnalysis ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_optionComponentMapForSemanticAnalysis::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_optionComponentMapForSemanticAnalysis (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_optionComponentMapForSemanticAnalysis::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis result ;
  const GALGAS_optionComponentMapForSemanticAnalysis * p = (const GALGAS_optionComponentMapForSemanticAnalysis *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_optionComponentMapForSemanticAnalysis *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("optionComponentMapForSemanticAnalysis", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_optionMapForSemanticAnalysis::cMapElement_optionMapForSemanticAnalysis (const GALGAS_lstring & inKey,
                                                                                    const GALGAS_unifiedTypeMapProxy & in_mOptionType,
                                                                                    const GALGAS_char & in_mOptionChar,
                                                                                    const GALGAS_string & in_mOptionString,
                                                                                    const GALGAS_string & in_mComment,
                                                                                    const GALGAS_string & in_mDefaultValue
                                                                                    COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mOptionType (in_mOptionType),
mAttribute_mOptionChar (in_mOptionChar),
mAttribute_mOptionString (in_mOptionString),
mAttribute_mComment (in_mComment),
mAttribute_mDefaultValue (in_mDefaultValue) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_optionMapForSemanticAnalysis::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mOptionType.isValid () && mAttribute_mOptionChar.isValid () && mAttribute_mOptionString.isValid () && mAttribute_mComment.isValid () && mAttribute_mDefaultValue.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_optionMapForSemanticAnalysis::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_optionMapForSemanticAnalysis (mAttribute_lkey, mAttribute_mOptionType, mAttribute_mOptionChar, mAttribute_mOptionString, mAttribute_mComment, mAttribute_mDefaultValue COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_optionMapForSemanticAnalysis::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOptionType" ":" ;
  mAttribute_mOptionType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOptionChar" ":" ;
  mAttribute_mOptionChar.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOptionString" ":" ;
  mAttribute_mOptionString.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mComment" ":" ;
  mAttribute_mComment.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefaultValue" ":" ;
  mAttribute_mDefaultValue.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_optionMapForSemanticAnalysis::compare (const cCollectionElement * inOperand) const {
  cMapElement_optionMapForSemanticAnalysis * operand = (cMapElement_optionMapForSemanticAnalysis *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mOptionType.objectCompare (operand->mAttribute_mOptionType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOptionChar.objectCompare (operand->mAttribute_mOptionChar) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOptionString.objectCompare (operand->mAttribute_mOptionString) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mComment.objectCompare (operand->mAttribute_mComment) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDefaultValue.objectCompare (operand->mAttribute_mDefaultValue) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis::GALGAS_optionMapForSemanticAnalysis (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis::GALGAS_optionMapForSemanticAnalysis (const GALGAS_optionMapForSemanticAnalysis & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis & GALGAS_optionMapForSemanticAnalysis::operator = (const GALGAS_optionMapForSemanticAnalysis & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_optionMapForSemanticAnalysis::constructor_mapWithMapToOverride (const GALGAS_optionMapForSemanticAnalysis & inMapToOverride
                                                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_optionMapForSemanticAnalysis::reader_overriddenMap (C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  GALGAS_optionMapForSemanticAnalysis result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_insertKey (GALGAS_lstring inKey,
                                                              GALGAS_unifiedTypeMapProxy inArgument0,
                                                              GALGAS_char inArgument1,
                                                              GALGAS_string inArgument2,
                                                              GALGAS_string inArgument3,
                                                              GALGAS_string inArgument4,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_optionMapForSemanticAnalysis * p = NULL ;
  macroMyNew (p, cMapElement_optionMapForSemanticAnalysis (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' command line option has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_optionMapForSemanticAnalysis_searchKey = "the '%K' command line option is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::method_searchKey (GALGAS_lstring inKey,
                                                            GALGAS_unifiedTypeMapProxy & outArgument0,
                                                            GALGAS_char & outArgument1,
                                                            GALGAS_string & outArgument2,
                                                            GALGAS_string & outArgument3,
                                                            GALGAS_string & outArgument4,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) performSearch (inKey,
                                                                                                                           inCompiler,
                                                                                                                           kSearchErrorMessage_optionMapForSemanticAnalysis_searchKey
                                                                                                                           COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    outArgument0 = p->mAttribute_mOptionType ;
    outArgument1 = p->mAttribute_mOptionChar ;
    outArgument2 = p->mAttribute_mOptionString ;
    outArgument3 = p->mAttribute_mComment ;
    outArgument4 = p->mAttribute_mDefaultValue ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_optionMapForSemanticAnalysis::reader_mOptionTypeForKey (const GALGAS_string & inKey,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_unifiedTypeMapProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mOptionType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_char GALGAS_optionMapForSemanticAnalysis::reader_mOptionCharForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_char result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mOptionChar ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis::reader_mOptionStringForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mOptionString ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis::reader_mCommentForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mComment ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis::reader_mDefaultValueForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    result = p->mAttribute_mDefaultValue ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMOptionTypeForKey (GALGAS_unifiedTypeMapProxy inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mOptionType = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMOptionCharForKey (GALGAS_char inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mOptionChar = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMOptionStringForKey (GALGAS_string inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mOptionString = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMCommentForKey (GALGAS_string inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mComment = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis::modifier_setMDefaultValueForKey (GALGAS_string inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * p = (cMapElement_optionMapForSemanticAnalysis *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
    p->mAttribute_mDefaultValue = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_optionMapForSemanticAnalysis * GALGAS_optionMapForSemanticAnalysis::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                          const GALGAS_string & inKey
                                                                                                                          COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * result = (cMapElement_optionMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_optionMapForSemanticAnalysis) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_optionMapForSemanticAnalysis * GALGAS_optionMapForSemanticAnalysis::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                             const GALGAS_lstring & inKey
                                                                                                                             COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_optionMapForSemanticAnalysis_searchKey COMMA_THERE) ;
  cMapElement_optionMapForSemanticAnalysis * result = (cMapElement_optionMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_optionMapForSemanticAnalysis) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_optionMapForSemanticAnalysis::cEnumerator_optionMapForSemanticAnalysis (const GALGAS_optionMapForSemanticAnalysis & inEnumeratedObject,
                                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element cEnumerator_optionMapForSemanticAnalysis::current (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
  return GALGAS_optionMapForSemanticAnalysis_2E_element (p->mAttribute_lkey, p->mAttribute_mOptionType, p->mAttribute_mOptionChar, p->mAttribute_mOptionString, p->mAttribute_mComment, p->mAttribute_mDefaultValue) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_optionMapForSemanticAnalysis::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy cEnumerator_optionMapForSemanticAnalysis::current_mOptionType (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mOptionType ;
}

//-----------------------------------------------------------------------------*

GALGAS_char cEnumerator_optionMapForSemanticAnalysis::current_mOptionChar (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mOptionChar ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_optionMapForSemanticAnalysis::current_mOptionString (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mOptionString ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_optionMapForSemanticAnalysis::current_mComment (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mComment ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_optionMapForSemanticAnalysis::current_mDefaultValue (LOCATION_ARGS) const {
  const cMapElement_optionMapForSemanticAnalysis * p = (const cMapElement_optionMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_optionMapForSemanticAnalysis) ;
  return p->mAttribute_mDefaultValue ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                     @optionMapForSemanticAnalysis type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_optionMapForSemanticAnalysis ("optionMapForSemanticAnalysis",
                                                     NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_optionMapForSemanticAnalysis::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_optionMapForSemanticAnalysis ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_optionMapForSemanticAnalysis::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_optionMapForSemanticAnalysis (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_optionMapForSemanticAnalysis::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis result ;
  const GALGAS_optionMapForSemanticAnalysis * p = (const GALGAS_optionMapForSemanticAnalysis *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_optionMapForSemanticAnalysis *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("optionMapForSemanticAnalysis", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_lexiqueComponentMapForSemanticAnalysis::cMapElement_lexiqueComponentMapForSemanticAnalysis (const GALGAS_lstring & inKey
                                                                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_lexiqueComponentMapForSemanticAnalysis::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_lexiqueComponentMapForSemanticAnalysis::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_lexiqueComponentMapForSemanticAnalysis (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_lexiqueComponentMapForSemanticAnalysis::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_lexiqueComponentMapForSemanticAnalysis::compare (const cCollectionElement * inOperand) const {
  cMapElement_lexiqueComponentMapForSemanticAnalysis * operand = (cMapElement_lexiqueComponentMapForSemanticAnalysis *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis::GALGAS_lexiqueComponentMapForSemanticAnalysis (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis::GALGAS_lexiqueComponentMapForSemanticAnalysis (const GALGAS_lexiqueComponentMapForSemanticAnalysis & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis & GALGAS_lexiqueComponentMapForSemanticAnalysis::operator = (const GALGAS_lexiqueComponentMapForSemanticAnalysis & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_mapWithMapToOverride (const GALGAS_lexiqueComponentMapForSemanticAnalysis & inMapToOverride
                                                                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_lexiqueComponentMapForSemanticAnalysis::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_lexiqueComponentMapForSemanticAnalysis result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_lexiqueComponentMapForSemanticAnalysis::modifier_insertKey (GALGAS_lstring inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cMapElement_lexiqueComponentMapForSemanticAnalysis * p = NULL ;
  macroMyNew (p, cMapElement_lexiqueComponentMapForSemanticAnalysis (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "redefinition of the '%K' lexique component: it has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_lexiqueComponentMapForSemanticAnalysis_searchKey = "the '%K' lexique component is not imported" ;

//-----------------------------------------------------------------------------*

void GALGAS_lexiqueComponentMapForSemanticAnalysis::method_searchKey (GALGAS_lstring inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cMapElement_lexiqueComponentMapForSemanticAnalysis * p = (const cMapElement_lexiqueComponentMapForSemanticAnalysis *) performSearch (inKey,
                                                                                                                                               inCompiler,
                                                                                                                                               kSearchErrorMessage_lexiqueComponentMapForSemanticAnalysis_searchKey
                                                                                                                                               COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_lexiqueComponentMapForSemanticAnalysis) ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_lexiqueComponentMapForSemanticAnalysis * GALGAS_lexiqueComponentMapForSemanticAnalysis::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                              const GALGAS_string & inKey
                                                                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_lexiqueComponentMapForSemanticAnalysis * result = (cMapElement_lexiqueComponentMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_lexiqueComponentMapForSemanticAnalysis) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_lexiqueComponentMapForSemanticAnalysis * GALGAS_lexiqueComponentMapForSemanticAnalysis::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                                 const GALGAS_lstring & inKey
                                                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_lexiqueComponentMapForSemanticAnalysis_searchKey COMMA_THERE) ;
  cMapElement_lexiqueComponentMapForSemanticAnalysis * result = (cMapElement_lexiqueComponentMapForSemanticAnalysis *) p ;
  macroNullOrValidSharedObject (result, cMapElement_lexiqueComponentMapForSemanticAnalysis) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_lexiqueComponentMapForSemanticAnalysis::cEnumerator_lexiqueComponentMapForSemanticAnalysis (const GALGAS_lexiqueComponentMapForSemanticAnalysis & inEnumeratedObject,
                                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element cEnumerator_lexiqueComponentMapForSemanticAnalysis::current (LOCATION_ARGS) const {
  const cMapElement_lexiqueComponentMapForSemanticAnalysis * p = (const cMapElement_lexiqueComponentMapForSemanticAnalysis *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_lexiqueComponentMapForSemanticAnalysis) ;
  return GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_lexiqueComponentMapForSemanticAnalysis::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                @lexiqueComponentMapForSemanticAnalysis type                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_lexiqueComponentMapForSemanticAnalysis ("lexiqueComponentMapForSemanticAnalysis",
                                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_lexiqueComponentMapForSemanticAnalysis::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_lexiqueComponentMapForSemanticAnalysis ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_lexiqueComponentMapForSemanticAnalysis::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_lexiqueComponentMapForSemanticAnalysis (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_lexiqueComponentMapForSemanticAnalysis::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis result ;
  const GALGAS_lexiqueComponentMapForSemanticAnalysis * p = (const GALGAS_lexiqueComponentMapForSemanticAnalysis *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_lexiqueComponentMapForSemanticAnalysis *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("lexiqueComponentMapForSemanticAnalysis", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryMethodMapForType::cMapElement_categoryMethodMapForType (const GALGAS_lstring & inKey,
                                                                            const GALGAS_formalParameterListAST & in_mFormalParameterList
                                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFormalParameterList (in_mFormalParameterList) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_categoryMethodMapForType::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalParameterList.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_categoryMethodMapForType::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryMethodMapForType (mAttribute_lkey, mAttribute_mFormalParameterList COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_categoryMethodMapForType::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFormalParameterList" ":" ;
  mAttribute_mFormalParameterList.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryMethodMapForType::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryMethodMapForType * operand = (cMapElement_categoryMethodMapForType *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFormalParameterList.objectCompare (operand->mAttribute_mFormalParameterList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType::GALGAS_categoryMethodMapForType (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType::GALGAS_categoryMethodMapForType (const GALGAS_categoryMethodMapForType & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType & GALGAS_categoryMethodMapForType::operator = (const GALGAS_categoryMethodMapForType & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForType::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForType::constructor_mapWithMapToOverride (const GALGAS_categoryMethodMapForType & inMapToOverride
                                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForType::reader_overriddenMap (C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_categoryMethodMapForType result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForType::modifier_insertKey (GALGAS_lstring inKey,
                                                          GALGAS_formalParameterListAST inArgument0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_categoryMethodMapForType * p = NULL ;
  macroMyNew (p, cMapElement_categoryMethodMapForType (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' method has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterListAST GALGAS_categoryMethodMapForType::reader_mFormalParameterListForKey (const GALGAS_string & inKey,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryMethodMapForType * p = (const cMapElement_categoryMethodMapForType *) attributes ;
  GALGAS_formalParameterListAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryMethodMapForType) ;
    result = p->mAttribute_mFormalParameterList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForType::modifier_setMFormalParameterListForKey (GALGAS_formalParameterListAST inAttributeValue,
                                                                              GALGAS_string inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryMethodMapForType * p = (cMapElement_categoryMethodMapForType *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryMethodMapForType) ;
    p->mAttribute_mFormalParameterList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_categoryMethodMapForType * GALGAS_categoryMethodMapForType::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                  const GALGAS_string & inKey
                                                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryMethodMapForType * result = (cMapElement_categoryMethodMapForType *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryMethodMapForType) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_categoryMethodMapForType::cEnumerator_categoryMethodMapForType (const GALGAS_categoryMethodMapForType & inEnumeratedObject,
                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element cEnumerator_categoryMethodMapForType::current (LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForType * p = (const cMapElement_categoryMethodMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryMethodMapForType) ;
  return GALGAS_categoryMethodMapForType_2E_element (p->mAttribute_lkey, p->mAttribute_mFormalParameterList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryMethodMapForType::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterListAST cEnumerator_categoryMethodMapForType::current_mFormalParameterList (LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForType * p = (const cMapElement_categoryMethodMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryMethodMapForType) ;
  return p->mAttribute_mFormalParameterList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @categoryMethodMapForType type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForType ("categoryMethodMapForType",
                                                 NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForType ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForType (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForType::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType result ;
  const GALGAS_categoryMethodMapForType * p = (const GALGAS_categoryMethodMapForType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryMethodMapForType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryMethodMapForBuildingContext::cMapElement_categoryMethodMapForBuildingContext (const GALGAS_lstring & inKey,
                                                                                                  const GALGAS_categoryMethodMapForType & in_mCategoryMethodMapForType
                                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCategoryMethodMapForType (in_mCategoryMethodMapForType) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_categoryMethodMapForBuildingContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryMethodMapForType.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_categoryMethodMapForBuildingContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryMethodMapForBuildingContext (mAttribute_lkey, mAttribute_mCategoryMethodMapForType COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_categoryMethodMapForBuildingContext::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCategoryMethodMapForType" ":" ;
  mAttribute_mCategoryMethodMapForType.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryMethodMapForBuildingContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryMethodMapForBuildingContext * operand = (cMapElement_categoryMethodMapForBuildingContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCategoryMethodMapForType.objectCompare (operand->mAttribute_mCategoryMethodMapForType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext::GALGAS_categoryMethodMapForBuildingContext (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext::GALGAS_categoryMethodMapForBuildingContext (const GALGAS_categoryMethodMapForBuildingContext & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext & GALGAS_categoryMethodMapForBuildingContext::operator = (const GALGAS_categoryMethodMapForBuildingContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext GALGAS_categoryMethodMapForBuildingContext::constructor_mapWithMapToOverride (const GALGAS_categoryMethodMapForBuildingContext & inMapToOverride
                                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext GALGAS_categoryMethodMapForBuildingContext::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_categoryMethodMapForBuildingContext result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext::modifier_insertKey (GALGAS_lstring inKey,
                                                                     GALGAS_categoryMethodMapForType inArgument0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_categoryMethodMapForBuildingContext * p = NULL ;
  macroMyNew (p, cMapElement_categoryMethodMapForBuildingContext (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "internal error" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_categoryMethodMapForBuildingContext_searchKey = "internal error" ;

//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext::method_searchKey (GALGAS_lstring inKey,
                                                                   GALGAS_categoryMethodMapForType & outArgument0,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForBuildingContext * p = (const cMapElement_categoryMethodMapForBuildingContext *) performSearch (inKey,
                                                                                                                                         inCompiler,
                                                                                                                                         kSearchErrorMessage_categoryMethodMapForBuildingContext_searchKey
                                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_categoryMethodMapForBuildingContext) ;
    outArgument0 = p->mAttribute_mCategoryMethodMapForType ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForBuildingContext::reader_mCategoryMethodMapForTypeForKey (const GALGAS_string & inKey,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryMethodMapForBuildingContext * p = (const cMapElement_categoryMethodMapForBuildingContext *) attributes ;
  GALGAS_categoryMethodMapForType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryMethodMapForBuildingContext) ;
    result = p->mAttribute_mCategoryMethodMapForType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext::modifier_setMCategoryMethodMapForTypeForKey (GALGAS_categoryMethodMapForType inAttributeValue,
                                                                                              GALGAS_string inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryMethodMapForBuildingContext * p = (cMapElement_categoryMethodMapForBuildingContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryMethodMapForBuildingContext) ;
    p->mAttribute_mCategoryMethodMapForType = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_categoryMethodMapForBuildingContext * GALGAS_categoryMethodMapForBuildingContext::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                        const GALGAS_string & inKey
                                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryMethodMapForBuildingContext * result = (cMapElement_categoryMethodMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryMethodMapForBuildingContext) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryMethodMapForBuildingContext * GALGAS_categoryMethodMapForBuildingContext::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_categoryMethodMapForBuildingContext_searchKey COMMA_THERE) ;
  cMapElement_categoryMethodMapForBuildingContext * result = (cMapElement_categoryMethodMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryMethodMapForBuildingContext) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_categoryMethodMapForBuildingContext::cEnumerator_categoryMethodMapForBuildingContext (const GALGAS_categoryMethodMapForBuildingContext & inEnumeratedObject,
                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element cEnumerator_categoryMethodMapForBuildingContext::current (LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForBuildingContext * p = (const cMapElement_categoryMethodMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryMethodMapForBuildingContext) ;
  return GALGAS_categoryMethodMapForBuildingContext_2E_element (p->mAttribute_lkey, p->mAttribute_mCategoryMethodMapForType) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryMethodMapForBuildingContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType cEnumerator_categoryMethodMapForBuildingContext::current_mCategoryMethodMapForType (LOCATION_ARGS) const {
  const cMapElement_categoryMethodMapForBuildingContext * p = (const cMapElement_categoryMethodMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryMethodMapForBuildingContext) ;
  return p->mAttribute_mCategoryMethodMapForType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @categoryMethodMapForBuildingContext type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForBuildingContext ("categoryMethodMapForBuildingContext",
                                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForBuildingContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForBuildingContext ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForBuildingContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForBuildingContext (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext GALGAS_categoryMethodMapForBuildingContext::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext result ;
  const GALGAS_categoryMethodMapForBuildingContext * p = (const GALGAS_categoryMethodMapForBuildingContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForBuildingContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryMethodMapForBuildingContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryModifierMapForType::cMapElement_categoryModifierMapForType (const GALGAS_lstring & inKey,
                                                                                const GALGAS_formalParameterListAST & in_mFormalParameterList
                                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFormalParameterList (in_mFormalParameterList) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_categoryModifierMapForType::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalParameterList.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_categoryModifierMapForType::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryModifierMapForType (mAttribute_lkey, mAttribute_mFormalParameterList COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_categoryModifierMapForType::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFormalParameterList" ":" ;
  mAttribute_mFormalParameterList.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryModifierMapForType::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryModifierMapForType * operand = (cMapElement_categoryModifierMapForType *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFormalParameterList.objectCompare (operand->mAttribute_mFormalParameterList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType::GALGAS_categoryModifierMapForType (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType::GALGAS_categoryModifierMapForType (const GALGAS_categoryModifierMapForType & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType & GALGAS_categoryModifierMapForType::operator = (const GALGAS_categoryModifierMapForType & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForType::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForType::constructor_mapWithMapToOverride (const GALGAS_categoryModifierMapForType & inMapToOverride
                                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForType::reader_overriddenMap (C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_categoryModifierMapForType result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForType::modifier_insertKey (GALGAS_lstring inKey,
                                                            GALGAS_formalParameterListAST inArgument0,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cMapElement_categoryModifierMapForType * p = NULL ;
  macroMyNew (p, cMapElement_categoryModifierMapForType (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' modifier has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterListAST GALGAS_categoryModifierMapForType::reader_mFormalParameterListForKey (const GALGAS_string & inKey,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryModifierMapForType * p = (const cMapElement_categoryModifierMapForType *) attributes ;
  GALGAS_formalParameterListAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryModifierMapForType) ;
    result = p->mAttribute_mFormalParameterList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForType::modifier_setMFormalParameterListForKey (GALGAS_formalParameterListAST inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryModifierMapForType * p = (cMapElement_categoryModifierMapForType *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryModifierMapForType) ;
    p->mAttribute_mFormalParameterList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_categoryModifierMapForType * GALGAS_categoryModifierMapForType::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                      const GALGAS_string & inKey
                                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryModifierMapForType * result = (cMapElement_categoryModifierMapForType *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryModifierMapForType) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_categoryModifierMapForType::cEnumerator_categoryModifierMapForType (const GALGAS_categoryModifierMapForType & inEnumeratedObject,
                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element cEnumerator_categoryModifierMapForType::current (LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForType * p = (const cMapElement_categoryModifierMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryModifierMapForType) ;
  return GALGAS_categoryModifierMapForType_2E_element (p->mAttribute_lkey, p->mAttribute_mFormalParameterList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryModifierMapForType::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterListAST cEnumerator_categoryModifierMapForType::current_mFormalParameterList (LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForType * p = (const cMapElement_categoryModifierMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryModifierMapForType) ;
  return p->mAttribute_mFormalParameterList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @categoryModifierMapForType type                       *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForType ("categoryModifierMapForType",
                                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForType ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForType (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForType::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType result ;
  const GALGAS_categoryModifierMapForType * p = (const GALGAS_categoryModifierMapForType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryModifierMapForType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryModifierMapForBuildingContext::cMapElement_categoryModifierMapForBuildingContext (const GALGAS_lstring & inKey,
                                                                                                      const GALGAS_categoryModifierMapForType & in_mCategoryModifierMapForType
                                                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCategoryModifierMapForType (in_mCategoryModifierMapForType) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_categoryModifierMapForBuildingContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryModifierMapForType.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_categoryModifierMapForBuildingContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryModifierMapForBuildingContext (mAttribute_lkey, mAttribute_mCategoryModifierMapForType COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_categoryModifierMapForBuildingContext::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCategoryModifierMapForType" ":" ;
  mAttribute_mCategoryModifierMapForType.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryModifierMapForBuildingContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryModifierMapForBuildingContext * operand = (cMapElement_categoryModifierMapForBuildingContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCategoryModifierMapForType.objectCompare (operand->mAttribute_mCategoryModifierMapForType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext::GALGAS_categoryModifierMapForBuildingContext (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext::GALGAS_categoryModifierMapForBuildingContext (const GALGAS_categoryModifierMapForBuildingContext & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext & GALGAS_categoryModifierMapForBuildingContext::operator = (const GALGAS_categoryModifierMapForBuildingContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext GALGAS_categoryModifierMapForBuildingContext::constructor_mapWithMapToOverride (const GALGAS_categoryModifierMapForBuildingContext & inMapToOverride
                                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext GALGAS_categoryModifierMapForBuildingContext::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_categoryModifierMapForBuildingContext result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext::modifier_insertKey (GALGAS_lstring inKey,
                                                                       GALGAS_categoryModifierMapForType inArgument0,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_categoryModifierMapForBuildingContext * p = NULL ;
  macroMyNew (p, cMapElement_categoryModifierMapForBuildingContext (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "internal error" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_categoryModifierMapForBuildingContext_searchKey = "internal error" ;

//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext::method_searchKey (GALGAS_lstring inKey,
                                                                     GALGAS_categoryModifierMapForType & outArgument0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForBuildingContext * p = (const cMapElement_categoryModifierMapForBuildingContext *) performSearch (inKey,
                                                                                                                                             inCompiler,
                                                                                                                                             kSearchErrorMessage_categoryModifierMapForBuildingContext_searchKey
                                                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_categoryModifierMapForBuildingContext) ;
    outArgument0 = p->mAttribute_mCategoryModifierMapForType ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForBuildingContext::reader_mCategoryModifierMapForTypeForKey (const GALGAS_string & inKey,
                                                                                                                          C_Compiler * inCompiler
                                                                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryModifierMapForBuildingContext * p = (const cMapElement_categoryModifierMapForBuildingContext *) attributes ;
  GALGAS_categoryModifierMapForType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryModifierMapForBuildingContext) ;
    result = p->mAttribute_mCategoryModifierMapForType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext::modifier_setMCategoryModifierMapForTypeForKey (GALGAS_categoryModifierMapForType inAttributeValue,
                                                                                                  GALGAS_string inKey,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryModifierMapForBuildingContext * p = (cMapElement_categoryModifierMapForBuildingContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryModifierMapForBuildingContext) ;
    p->mAttribute_mCategoryModifierMapForType = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_categoryModifierMapForBuildingContext * GALGAS_categoryModifierMapForBuildingContext::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                            const GALGAS_string & inKey
                                                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryModifierMapForBuildingContext * result = (cMapElement_categoryModifierMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryModifierMapForBuildingContext) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryModifierMapForBuildingContext * GALGAS_categoryModifierMapForBuildingContext::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                               const GALGAS_lstring & inKey
                                                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_categoryModifierMapForBuildingContext_searchKey COMMA_THERE) ;
  cMapElement_categoryModifierMapForBuildingContext * result = (cMapElement_categoryModifierMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryModifierMapForBuildingContext) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_categoryModifierMapForBuildingContext::cEnumerator_categoryModifierMapForBuildingContext (const GALGAS_categoryModifierMapForBuildingContext & inEnumeratedObject,
                                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element cEnumerator_categoryModifierMapForBuildingContext::current (LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForBuildingContext * p = (const cMapElement_categoryModifierMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryModifierMapForBuildingContext) ;
  return GALGAS_categoryModifierMapForBuildingContext_2E_element (p->mAttribute_lkey, p->mAttribute_mCategoryModifierMapForType) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryModifierMapForBuildingContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType cEnumerator_categoryModifierMapForBuildingContext::current_mCategoryModifierMapForType (LOCATION_ARGS) const {
  const cMapElement_categoryModifierMapForBuildingContext * p = (const cMapElement_categoryModifierMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryModifierMapForBuildingContext) ;
  return p->mAttribute_mCategoryModifierMapForType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                 @categoryModifierMapForBuildingContext type                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForBuildingContext ("categoryModifierMapForBuildingContext",
                                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForBuildingContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForBuildingContext ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForBuildingContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForBuildingContext (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext GALGAS_categoryModifierMapForBuildingContext::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext result ;
  const GALGAS_categoryModifierMapForBuildingContext * p = (const GALGAS_categoryModifierMapForBuildingContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForBuildingContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryModifierMapForBuildingContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryReaderMapForType::cMapElement_categoryReaderMapForType (const GALGAS_lstring & inKey,
                                                                            const GALGAS_lstring & in_mResultTypeName,
                                                                            const GALGAS_formalInputParameterListAST & in_mInputFormalParameterList
                                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mResultTypeName (in_mResultTypeName),
mAttribute_mInputFormalParameterList (in_mInputFormalParameterList) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_categoryReaderMapForType::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mResultTypeName.isValid () && mAttribute_mInputFormalParameterList.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_categoryReaderMapForType::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryReaderMapForType (mAttribute_lkey, mAttribute_mResultTypeName, mAttribute_mInputFormalParameterList COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_categoryReaderMapForType::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mResultTypeName" ":" ;
  mAttribute_mResultTypeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInputFormalParameterList" ":" ;
  mAttribute_mInputFormalParameterList.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryReaderMapForType::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryReaderMapForType * operand = (cMapElement_categoryReaderMapForType *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mResultTypeName.objectCompare (operand->mAttribute_mResultTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInputFormalParameterList.objectCompare (operand->mAttribute_mInputFormalParameterList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType::GALGAS_categoryReaderMapForType (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType::GALGAS_categoryReaderMapForType (const GALGAS_categoryReaderMapForType & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType & GALGAS_categoryReaderMapForType::operator = (const GALGAS_categoryReaderMapForType & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForType::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForType::constructor_mapWithMapToOverride (const GALGAS_categoryReaderMapForType & inMapToOverride
                                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForType::reader_overriddenMap (C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_categoryReaderMapForType result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType::modifier_insertKey (GALGAS_lstring inKey,
                                                          GALGAS_lstring inArgument0,
                                                          GALGAS_formalInputParameterListAST inArgument1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_categoryReaderMapForType * p = NULL ;
  macroMyNew (p, cMapElement_categoryReaderMapForType (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' reader has been already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryReaderMapForType::reader_mResultTypeNameForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryReaderMapForType) ;
    result = p->mAttribute_mResultTypeName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalInputParameterListAST GALGAS_categoryReaderMapForType::reader_mInputFormalParameterListForKey (const GALGAS_string & inKey,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) attributes ;
  GALGAS_formalInputParameterListAST result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryReaderMapForType) ;
    result = p->mAttribute_mInputFormalParameterList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType::modifier_setMResultTypeNameForKey (GALGAS_lstring inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForType * p = (cMapElement_categoryReaderMapForType *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryReaderMapForType) ;
    p->mAttribute_mResultTypeName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType::modifier_setMInputFormalParameterListForKey (GALGAS_formalInputParameterListAST inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForType * p = (cMapElement_categoryReaderMapForType *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryReaderMapForType) ;
    p->mAttribute_mInputFormalParameterList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_categoryReaderMapForType * GALGAS_categoryReaderMapForType::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                  const GALGAS_string & inKey
                                                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForType * result = (cMapElement_categoryReaderMapForType *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryReaderMapForType) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_categoryReaderMapForType::cEnumerator_categoryReaderMapForType (const GALGAS_categoryReaderMapForType & inEnumeratedObject,
                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element cEnumerator_categoryReaderMapForType::current (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryReaderMapForType) ;
  return GALGAS_categoryReaderMapForType_2E_element (p->mAttribute_lkey, p->mAttribute_mResultTypeName, p->mAttribute_mInputFormalParameterList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryReaderMapForType::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryReaderMapForType::current_mResultTypeName (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryReaderMapForType) ;
  return p->mAttribute_mResultTypeName ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalInputParameterListAST cEnumerator_categoryReaderMapForType::current_mInputFormalParameterList (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForType * p = (const cMapElement_categoryReaderMapForType *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryReaderMapForType) ;
  return p->mAttribute_mInputFormalParameterList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @categoryReaderMapForType type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForType ("categoryReaderMapForType",
                                                 NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForType ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForType (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForType::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType result ;
  const GALGAS_categoryReaderMapForType * p = (const GALGAS_categoryReaderMapForType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryReaderMapForType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryReaderMapForBuildingContext::cMapElement_categoryReaderMapForBuildingContext (const GALGAS_lstring & inKey,
                                                                                                  const GALGAS_categoryReaderMapForType & in_mCategoryReaderMapForType
                                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mCategoryReaderMapForType (in_mCategoryReaderMapForType) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_categoryReaderMapForBuildingContext::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryReaderMapForType.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_categoryReaderMapForBuildingContext::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_categoryReaderMapForBuildingContext (mAttribute_lkey, mAttribute_mCategoryReaderMapForType COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_categoryReaderMapForBuildingContext::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCategoryReaderMapForType" ":" ;
  mAttribute_mCategoryReaderMapForType.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_categoryReaderMapForBuildingContext::compare (const cCollectionElement * inOperand) const {
  cMapElement_categoryReaderMapForBuildingContext * operand = (cMapElement_categoryReaderMapForBuildingContext *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mCategoryReaderMapForType.objectCompare (operand->mAttribute_mCategoryReaderMapForType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext::GALGAS_categoryReaderMapForBuildingContext (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext::GALGAS_categoryReaderMapForBuildingContext (const GALGAS_categoryReaderMapForBuildingContext & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext & GALGAS_categoryReaderMapForBuildingContext::operator = (const GALGAS_categoryReaderMapForBuildingContext & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext GALGAS_categoryReaderMapForBuildingContext::constructor_mapWithMapToOverride (const GALGAS_categoryReaderMapForBuildingContext & inMapToOverride
                                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext GALGAS_categoryReaderMapForBuildingContext::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_categoryReaderMapForBuildingContext result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext::modifier_insertKey (GALGAS_lstring inKey,
                                                                     GALGAS_categoryReaderMapForType inArgument0,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_categoryReaderMapForBuildingContext * p = NULL ;
  macroMyNew (p, cMapElement_categoryReaderMapForBuildingContext (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "internal error" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_categoryReaderMapForBuildingContext_searchKey = "internal error" ;

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext::method_searchKey (GALGAS_lstring inKey,
                                                                   GALGAS_categoryReaderMapForType & outArgument0,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForBuildingContext * p = (const cMapElement_categoryReaderMapForBuildingContext *) performSearch (inKey,
                                                                                                                                         inCompiler,
                                                                                                                                         kSearchErrorMessage_categoryReaderMapForBuildingContext_searchKey
                                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_categoryReaderMapForBuildingContext) ;
    outArgument0 = p->mAttribute_mCategoryReaderMapForType ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForBuildingContext::reader_mCategoryReaderMapForTypeForKey (const GALGAS_string & inKey,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_categoryReaderMapForBuildingContext * p = (const cMapElement_categoryReaderMapForBuildingContext *) attributes ;
  GALGAS_categoryReaderMapForType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryReaderMapForBuildingContext) ;
    result = p->mAttribute_mCategoryReaderMapForType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext::modifier_setMCategoryReaderMapForTypeForKey (GALGAS_categoryReaderMapForType inAttributeValue,
                                                                                              GALGAS_string inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForBuildingContext * p = (cMapElement_categoryReaderMapForBuildingContext *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_categoryReaderMapForBuildingContext) ;
    p->mAttribute_mCategoryReaderMapForType = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_categoryReaderMapForBuildingContext * GALGAS_categoryReaderMapForBuildingContext::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                                        const GALGAS_string & inKey
                                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_categoryReaderMapForBuildingContext * result = (cMapElement_categoryReaderMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryReaderMapForBuildingContext) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_categoryReaderMapForBuildingContext * GALGAS_categoryReaderMapForBuildingContext::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_categoryReaderMapForBuildingContext_searchKey COMMA_THERE) ;
  cMapElement_categoryReaderMapForBuildingContext * result = (cMapElement_categoryReaderMapForBuildingContext *) p ;
  macroNullOrValidSharedObject (result, cMapElement_categoryReaderMapForBuildingContext) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_categoryReaderMapForBuildingContext::cEnumerator_categoryReaderMapForBuildingContext (const GALGAS_categoryReaderMapForBuildingContext & inEnumeratedObject,
                                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element cEnumerator_categoryReaderMapForBuildingContext::current (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForBuildingContext * p = (const cMapElement_categoryReaderMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryReaderMapForBuildingContext) ;
  return GALGAS_categoryReaderMapForBuildingContext_2E_element (p->mAttribute_lkey, p->mAttribute_mCategoryReaderMapForType) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_categoryReaderMapForBuildingContext::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType cEnumerator_categoryReaderMapForBuildingContext::current_mCategoryReaderMapForType (LOCATION_ARGS) const {
  const cMapElement_categoryReaderMapForBuildingContext * p = (const cMapElement_categoryReaderMapForBuildingContext *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_categoryReaderMapForBuildingContext) ;
  return p->mAttribute_mCategoryReaderMapForType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @categoryReaderMapForBuildingContext type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForBuildingContext ("categoryReaderMapForBuildingContext",
                                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForBuildingContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForBuildingContext ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForBuildingContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForBuildingContext (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext GALGAS_categoryReaderMapForBuildingContext::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext result ;
  const GALGAS_categoryReaderMapForBuildingContext * p = (const GALGAS_categoryReaderMapForBuildingContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForBuildingContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryReaderMapForBuildingContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                           Routine 'addCategories'                           *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_addCategories (const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                            const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                            const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                            GALGAS_semanticContext & ioArgument_ioSemanticContext,
                            const GALGAS_lstring constinArgument_inTypeName,
                            GALGAS_readerMap & ioArgument_ioReaderMap,
                            GALGAS_modifierMap & ioArgument_ioModifierMap,
                            GALGAS_instanceMethodMap & ioArgument_ioInstanceMethodMap,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  const enumGalgasBool test_0 = constinArgument_inCategoryMethodMapForBuildingContext.reader_hasKey (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (491)) COMMA_SOURCE_FILE_AT_LINE (491)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_categoryMethodMapForType var_categoryMethodMapForType ;
    constinArgument_inCategoryMethodMapForBuildingContext.method_searchKey (constinArgument_inTypeName, var_categoryMethodMapForType, inCompiler COMMA_SOURCE_FILE_AT_LINE (493)) ;
    cEnumerator_categoryMethodMapForType enumerator_19697 (var_categoryMethodMapForType, kEnumeration_up) ;
    while (enumerator_19697.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (495)) ;
      cEnumerator_formalParameterListAST enumerator_19800 (enumerator_19697.current_mFormalParameterList (HERE), kEnumeration_up) ;
      while (enumerator_19800.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_typeIndex ;
        {
        GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_19800.current_mFormalArgumentTypeName (HERE), var_typeIndex COMMA_SOURCE_FILE_AT_LINE (497)) ;
        }
        var_formalArgumentList.addAssign_operation (var_typeIndex, enumerator_19800.current_mFormalArgumentPassingMode (HERE), enumerator_19800.current_mFormalArgumentName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (502)) ;
        enumerator_19800.gotoNextObject () ;
      }
      {
      ioArgument_ioInstanceMethodMap.modifier_insertKey (enumerator_19697.current_lkey (HERE), GALGAS_methodKind::constructor_definedAsCategory (SOURCE_FILE_AT_LINE (506)), var_formalArgumentList, enumerator_19697.current_lkey (HERE).reader_location (SOURCE_FILE_AT_LINE (508)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (510)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (504)) ;
      }
      enumerator_19697.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_1 = constinArgument_inCategoryReaderMapForBuildingContext.reader_hasKey (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (516)) COMMA_SOURCE_FILE_AT_LINE (516)).boolEnum () ;
  if (kBoolTrue == test_1) {
    GALGAS_categoryReaderMapForType var_categoryReaderMapForType ;
    constinArgument_inCategoryReaderMapForBuildingContext.method_searchKey (constinArgument_inTypeName, var_categoryReaderMapForType, inCompiler COMMA_SOURCE_FILE_AT_LINE (518)) ;
    cEnumerator_categoryReaderMapForType enumerator_20670 (var_categoryReaderMapForType, kEnumeration_up) ;
    while (enumerator_20670.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxyAndParameterList var_formalArgumentList = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (520)) ;
      cEnumerator_formalInputParameterListAST enumerator_20789 (enumerator_20670.current_mInputFormalParameterList (HERE), kEnumeration_up) ;
      while (enumerator_20789.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_typeIndex ;
        {
        GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_20789.current_mFormalArgumentTypeName (HERE), var_typeIndex COMMA_SOURCE_FILE_AT_LINE (523)) ;
        }
        var_formalArgumentList.addAssign_operation (var_typeIndex, enumerator_20789.current_mFormalArgumentName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (524)) ;
        enumerator_20789.gotoNextObject () ;
      }
      GALGAS_unifiedTypeMapProxy var_returnedType ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_20670.current_mResultTypeName (HERE), var_returnedType COMMA_SOURCE_FILE_AT_LINE (527)) ;
      }
      {
      ioArgument_ioReaderMap.modifier_insertKey (enumerator_20670.current_lkey (HERE), GALGAS_methodKind::constructor_definedAsCategory (SOURCE_FILE_AT_LINE (530)), var_formalArgumentList, enumerator_20670.current_lkey (HERE).reader_location (SOURCE_FILE_AT_LINE (532)), GALGAS_bool (true), var_returnedType, GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (535)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (528)) ;
      }
      enumerator_20670.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_2 = constinArgument_inCategoryModifierMapForBuildingContext.reader_hasKey (constinArgument_inTypeName.reader_string (SOURCE_FILE_AT_LINE (541)) COMMA_SOURCE_FILE_AT_LINE (541)).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_categoryModifierMapForType var_categoryModifierMapForType ;
    constinArgument_inCategoryModifierMapForBuildingContext.method_searchKey (constinArgument_inTypeName, var_categoryModifierMapForType, inCompiler COMMA_SOURCE_FILE_AT_LINE (543)) ;
    cEnumerator_categoryModifierMapForType enumerator_21783 (var_categoryModifierMapForType, kEnumeration_up) ;
    while (enumerator_21783.hasCurrentObject ()) {
      GALGAS_formalParameterSignature var_formalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (545)) ;
      cEnumerator_formalParameterListAST enumerator_21886 (enumerator_21783.current_mFormalParameterList (HERE), kEnumeration_up) ;
      while (enumerator_21886.hasCurrentObject ()) {
        GALGAS_unifiedTypeMapProxy var_typeIndex ;
        {
        GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_21886.current_mFormalArgumentTypeName (HERE), var_typeIndex COMMA_SOURCE_FILE_AT_LINE (548)) ;
        }
        var_formalArgumentList.addAssign_operation (var_typeIndex, enumerator_21886.current_mFormalArgumentPassingMode (HERE), enumerator_21886.current_mFormalArgumentName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (549)) ;
        enumerator_21886.gotoNextObject () ;
      }
      {
      ioArgument_ioModifierMap.modifier_insertKey (enumerator_21783.current_lkey (HERE), GALGAS_methodKind::constructor_definedAsCategory (SOURCE_FILE_AT_LINE (553)), var_formalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (556)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (551)) ;
      }
      enumerator_21783.gotoNextObject () ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                    Once function 'elementTypeNameSuffix'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string onceFunction_elementTypeNameSuffix (C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (".element") ;
//---
  return result_outResult ;
}



//-----------------------------------------------------------------------------*
//  Function implementation                                                    *
//-----------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_elementTypeNameSuffix = false ;
static GALGAS_string gOnceFunctionResult_elementTypeNameSuffix ;

//-----------------------------------------------------------------------------*

GALGAS_string function_elementTypeNameSuffix (C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_elementTypeNameSuffix) {
    gOnceFunctionResult_elementTypeNameSuffix = onceFunction_elementTypeNameSuffix (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_elementTypeNameSuffix = true ;
  }
  return gOnceFunctionResult_elementTypeNameSuffix ;
}

//-----------------------------------------------------------------------------*

static void releaseOnceFunctionResult_elementTypeNameSuffix (void) {
  gOnceFunctionResult_elementTypeNameSuffix.drop () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_elementTypeNameSuffix (NULL,
                                                                   releaseOnceFunctionResult_elementTypeNameSuffix) ;

//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_elementTypeNameSuffix [1] = {
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_elementTypeNameSuffix (C_Compiler * inCompiler,
                                                                      const cObjectArray & /* inEffectiveParameterArray */,
                                                                      const GALGAS_location & /* inErrorLocation */
                                                                      COMMA_LOCATION_ARGS) {
  return function_elementTypeNameSuffix (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_elementTypeNameSuffix ("elementTypeNameSuffix",
                                                                       functionWithGenericHeader_elementTypeNameSuffix,
                                                                       & kTypeDescriptor_GALGAS_string,
                                                                       0,
                                                                       functionArgs_elementTypeNameSuffix) ;

//-----------------------------------------------------------------------------*

cMapElement_wrapperExtensionMap::cMapElement_wrapperExtensionMap (const GALGAS_lstring & inKey
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_wrapperExtensionMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_wrapperExtensionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_wrapperExtensionMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_wrapperExtensionMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_wrapperExtensionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_wrapperExtensionMap * operand = (cMapElement_wrapperExtensionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap::GALGAS_wrapperExtensionMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap::GALGAS_wrapperExtensionMap (const GALGAS_wrapperExtensionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap & GALGAS_wrapperExtensionMap::operator = (const GALGAS_wrapperExtensionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap GALGAS_wrapperExtensionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap GALGAS_wrapperExtensionMap::constructor_mapWithMapToOverride (const GALGAS_wrapperExtensionMap & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap GALGAS_wrapperExtensionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_wrapperExtensionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//-----------------------------------------------------------------------------*

void GALGAS_wrapperExtensionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_wrapperExtensionMap * p = NULL ;
  macroMyNew (p, cMapElement_wrapperExtensionMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' extension has been already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

cMapElement_wrapperExtensionMap * GALGAS_wrapperExtensionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                        const GALGAS_string & inKey
                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_wrapperExtensionMap * result = (cMapElement_wrapperExtensionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_wrapperExtensionMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_wrapperExtensionMap::cEnumerator_wrapperExtensionMap (const GALGAS_wrapperExtensionMap & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element cEnumerator_wrapperExtensionMap::current (LOCATION_ARGS) const {
  const cMapElement_wrapperExtensionMap * p = (const cMapElement_wrapperExtensionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_wrapperExtensionMap) ;
  return GALGAS_wrapperExtensionMap_2E_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_wrapperExtensionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @wrapperExtensionMap type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperExtensionMap ("wrapperExtensionMap",
                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperExtensionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperExtensionMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperExtensionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperExtensionMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap GALGAS_wrapperExtensionMap::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap result ;
  const GALGAS_wrapperExtensionMap * p = (const GALGAS_wrapperExtensionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperExtensionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("wrapperExtensionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                  Routine 'recursivelyEnumerateDirectories'                  *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_recursivelyEnumerateDirectories (const GALGAS_string constinArgument_inAbsoluteSourcePath,
                                              const GALGAS_string constinArgument_inPathInWrapper,
                                              const GALGAS_wrapperExtensionMap constinArgument_inTextFileExtensionMap,
                                              const GALGAS_wrapperExtensionMap constinArgument_inBinaryFileExtensionMap,
                                              GALGAS_wrapperFileMap & outArgument_outWrapperFileMap,
                                              GALGAS_wrapperDirectoryMap & outArgument_outWrapperDirectoryMap,
                                              GALGAS_uint & ioArgument_ioWrapperFileIndex,
                                              GALGAS_uint & ioArgument_ioWrapperDirectoryIndex,
                                              C_Compiler * inCompiler
                                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outWrapperFileMap.drop () ; // Release 'out' argument
  outArgument_outWrapperDirectoryMap.drop () ; // Release 'out' argument
  GALGAS_uint var_currentDirectoryIndex = ioArgument_ioWrapperDirectoryIndex ;
  ioArgument_ioWrapperDirectoryIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1866)) ;
  GALGAS_stringlist var_files = constinArgument_inAbsoluteSourcePath.reader_regularFiles (GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1868)) ;
  outArgument_outWrapperFileMap = GALGAS_wrapperFileMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1869)) ;
  cEnumerator_stringlist enumerator_76028 (var_files, kEnumeration_up) ;
  while (enumerator_76028.hasCurrentObject ()) {
    const enumGalgasBool test_0 = constinArgument_inTextFileExtensionMap.reader_hasKey (enumerator_76028.current_mValue (HERE).reader_pathExtension (SOURCE_FILE_AT_LINE (1871)) COMMA_SOURCE_FILE_AT_LINE (1871)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_string var_absoluteFilePath = constinArgument_inAbsoluteSourcePath.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1872)).operator_concat (enumerator_76028.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1872)) ;
      {
      outArgument_outWrapperFileMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_76028.current_mValue (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1874)), var_absoluteFilePath, GALGAS_bool (true), var_currentDirectoryIndex, ioArgument_ioWrapperFileIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1873)) ;
      }
      ioArgument_ioWrapperFileIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1880)) ;
    }else if (kBoolFalse == test_0) {
      const enumGalgasBool test_1 = constinArgument_inBinaryFileExtensionMap.reader_hasKey (enumerator_76028.current_mValue (HERE).reader_pathExtension (SOURCE_FILE_AT_LINE (1881)) COMMA_SOURCE_FILE_AT_LINE (1881)).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_string var_absoluteFilePath = constinArgument_inAbsoluteSourcePath.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1882)).operator_concat (enumerator_76028.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1882)) ;
        {
        outArgument_outWrapperFileMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_76028.current_mValue (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1884)), var_absoluteFilePath, GALGAS_bool (false), var_currentDirectoryIndex, ioArgument_ioWrapperFileIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1883)) ;
        }
        ioArgument_ioWrapperFileIndex.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1890)) ;
      }
    }
    enumerator_76028.gotoNextObject () ;
  }
  GALGAS_stringlist var_directories = constinArgument_inAbsoluteSourcePath.reader_directories (GALGAS_bool (false) COMMA_SOURCE_FILE_AT_LINE (1894)) ;
  outArgument_outWrapperDirectoryMap = GALGAS_wrapperDirectoryMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1895)) ;
  cEnumerator_stringlist enumerator_76993 (var_directories, kEnumeration_up) ;
  while (enumerator_76993.hasCurrentObject ()) {
    GALGAS_wrapperFileMap var_internalWrapperFileMap ;
    GALGAS_wrapperDirectoryMap var_internalWrapperDirectoryMap ;
    GALGAS_uint var_theDirectoryIndex = ioArgument_ioWrapperDirectoryIndex ;
    {
    routine_recursivelyEnumerateDirectories (constinArgument_inAbsoluteSourcePath.operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1901)).operator_concat (enumerator_76993.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1901)), constinArgument_inPathInWrapper.operator_concat (enumerator_76993.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1902)).operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1902)), constinArgument_inTextFileExtensionMap, constinArgument_inBinaryFileExtensionMap, var_internalWrapperFileMap, var_internalWrapperDirectoryMap, ioArgument_ioWrapperFileIndex, ioArgument_ioWrapperDirectoryIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1900)) ;
    }
    {
    outArgument_outWrapperDirectoryMap.modifier_insertKey (GALGAS_lstring::constructor_new (enumerator_76993.current_mValue (HERE), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1911)), var_internalWrapperFileMap, var_internalWrapperDirectoryMap, var_theDirectoryIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1910)) ;
    }
    enumerator_76993.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                    '@semanticTypePrecedenceGraph' graph                     *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph::GALGAS_semanticTypePrecedenceGraph (void) :
AC_GALGAS_graph () {
}

//-----------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (LOCATION_ARGS) {
  GALGAS_semanticTypePrecedenceGraph result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::modifier_addNode (GALGAS_lstring inKey,
                                                           GALGAS_semanticDeclarationAST inArgument_0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_semanticDeclarationListAST::makeAttributesFromObjects (attributes, inArgument_0 COMMA_THERE) ;
  const char * kErrorMessage = "the '%K' type is already declared at %L" ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}


//-----------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_topologicalSort (GALGAS_semanticDeclarationListAST & outSortedList,
                                                                 GALGAS_lstringlist & outSortedKeyList,
                                                                 GALGAS_semanticDeclarationListAST & outUnsortedList,
                                                                 GALGAS_lstringlist & outUnsortedKeyList,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_semanticDeclarationListAST (sortedList) ;
  outUnsortedList = GALGAS_semanticDeclarationListAST (unsortedList) ;
  GALGAS_semanticDeclarationListAST::detachSharedList (sortedList) ;
  GALGAS_semanticDeclarationListAST::detachSharedList (unsortedList) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_depthFirstTopologicalSort (GALGAS_semanticDeclarationListAST & outSortedList,
                                                                           GALGAS_lstringlist & outSortedKeyList,
                                                                           GALGAS_semanticDeclarationListAST & outUnsortedList,
                                                                           GALGAS_lstringlist & outUnsortedKeyList,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalDepthFirstTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_semanticDeclarationListAST (sortedList) ;
  outUnsortedList = GALGAS_semanticDeclarationListAST (unsortedList) ;
  GALGAS_semanticDeclarationListAST::detachSharedList (sortedList) ;
  GALGAS_semanticDeclarationListAST::detachSharedList (unsortedList) ;
}


//-----------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::reader_reversedGraph (LOCATION_ARGS) const {
  GALGAS_semanticTypePrecedenceGraph result ;
  result.reversedGraphFromGraph (*this COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_nodesWithNoSuccessor (GALGAS_semanticDeclarationListAST & outInfoList,
                                                                      GALGAS_lstringlist & outKeyList
                                                                      COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoSuccessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_semanticDeclarationListAST (infoList) ;
  GALGAS_semanticDeclarationListAST::detachSharedList (infoList) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_semanticTypePrecedenceGraph::method_nodesWithNoPredecessor (GALGAS_semanticDeclarationListAST & outInfoList,
                                                                        GALGAS_lstringlist & outKeyList
                                                                        COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoPredecessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_semanticDeclarationListAST (infoList) ;
  GALGAS_semanticDeclarationListAST::detachSharedList (infoList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::reader_subgraphFromNodes (const GALGAS_lstringlist & inStartKeyList,
                                                                                                 const GALGAS_stringset & inKeysToExclude,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_semanticTypePrecedenceGraph result ;
  subGraph (result, inStartKeyList, inKeysToExclude, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                      @semanticTypePrecedenceGraph type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_semanticTypePrecedenceGraph ("semanticTypePrecedenceGraph",
                                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_semanticTypePrecedenceGraph::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_semanticTypePrecedenceGraph ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_semanticTypePrecedenceGraph::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_semanticTypePrecedenceGraph (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_semanticTypePrecedenceGraph GALGAS_semanticTypePrecedenceGraph::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_semanticTypePrecedenceGraph result ;
  const GALGAS_semanticTypePrecedenceGraph * p = (const GALGAS_semanticTypePrecedenceGraph *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_semanticTypePrecedenceGraph *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("semanticTypePrecedenceGraph", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                       Routine 'buildSemanticContext'                        *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildSemanticContext (const GALGAS_string constinArgument_inSourceFile,
                                   const GALGAS_semanticDeclarationListAST constinArgument_inSemanticDeclarationList,
                                   const GALGAS_location constinArgument_inEndOfSourceFile,
                                   GALGAS_semanticContext & outArgument_outSemanticContext,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSemanticContext.drop () ; // Release 'out' argument
  GALGAS_semanticDeclarationListAST var_semanticDeclarationList = constinArgument_inSemanticDeclarationList ;
  cEnumerator_semanticDeclarationListAST enumerator_147010 (constinArgument_inSemanticDeclarationList, kEnumeration_up) ;
  while (enumerator_147010.hasCurrentObject ()) {
    callCategoryMethod_addAssociatedElement ((const cPtr_semanticDeclarationAST *) enumerator_147010.current_mSemanticDeclaration (HERE).ptr (), var_semanticDeclarationList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3572)) ;
    enumerator_147010.gotoNextObject () ;
  }
  GALGAS_semanticTypePrecedenceGraph var_semanticTypePrecedenceGraph = GALGAS_semanticTypePrecedenceGraph::constructor_emptyGraph (SOURCE_FILE_AT_LINE (3578)) ;
  GALGAS_categoryMethodMapForBuildingContext var_categoryMethodMapForBuildingContext = GALGAS_categoryMethodMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (3579)) ;
  GALGAS_categoryReaderMapForBuildingContext var_categoryReaderMapForBuildingContext = GALGAS_categoryReaderMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (3580)) ;
  GALGAS_categoryModifierMapForBuildingContext var_categoryModifierMapForBuildingContext = GALGAS_categoryModifierMapForBuildingContext::constructor_emptyMap (SOURCE_FILE_AT_LINE (3581)) ;
  GALGAS_semanticDeclarationListAST var_categoryOverrideDefinitionList = GALGAS_semanticDeclarationListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3582)) ;
  cEnumerator_semanticDeclarationListAST enumerator_147743 (var_semanticDeclarationList, kEnumeration_up) ;
  while (enumerator_147743.hasCurrentObject ()) {
    callCategoryMethod_enterDeclarationInGraph ((const cPtr_semanticDeclarationAST *) enumerator_147743.current_mSemanticDeclaration (HERE).ptr (), var_semanticTypePrecedenceGraph, var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, var_categoryOverrideDefinitionList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3584)) ;
    enumerator_147743.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsStrictSup, var_semanticTypePrecedenceGraph.reader_undefinedNodeCount (SOURCE_FILE_AT_LINE (3592)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    cEnumerator_lstringlist enumerator_148163 (var_semanticTypePrecedenceGraph.reader_undefinedNodeReferenceList (SOURCE_FILE_AT_LINE (3593)), kEnumeration_up) ;
    while (enumerator_148163.hasCurrentObject ()) {
      GALGAS_location location_1 (enumerator_148163.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_148163.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (3594)) COMMA_SOURCE_FILE_AT_LINE (3594)).operator_concat (GALGAS_string ("' type is not defined") COMMA_SOURCE_FILE_AT_LINE (3594)) COMMA_SOURCE_FILE_AT_LINE (3594)) ;
      enumerator_148163.gotoNextObject () ;
    }
    inCompiler->emitSemanticError (constinArgument_inEndOfSourceFile, GALGAS_string ("semantic analysis not performed, due to undefined type error(s)") COMMA_SOURCE_FILE_AT_LINE (3596)) ;
    outArgument_outSemanticContext.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_0) {
    GALGAS_semanticDeclarationListAST var_sortedSemanticDeclarationListAST ;
    GALGAS_semanticDeclarationListAST var_unsortedSemanticDeclarationListAST ;
    GALGAS_lstringlist var_unsortedNodeKeyList ;
    GALGAS_lstringlist joker_148501_0 ; // Joker input parameter
    var_semanticTypePrecedenceGraph.method_topologicalSort (var_sortedSemanticDeclarationListAST, joker_148501_0, var_unsortedSemanticDeclarationListAST, var_unsortedNodeKeyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3598)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (3609)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("semantic analysis not performed, ").operator_concat (var_unsortedSemanticDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (3610)).reader_string (SOURCE_FILE_AT_LINE (3610)) COMMA_SOURCE_FILE_AT_LINE (3610)).operator_concat (GALGAS_string (" declarations are involved in circular definition:") COMMA_SOURCE_FILE_AT_LINE (3610)) ;
      cEnumerator_semanticDeclarationListAST enumerator_149084 (var_unsortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_149084.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-  ").operator_concat (callCategoryReader_keyRepresentation ((const cPtr_semanticDeclarationAST *) enumerator_149084.current_mSemanticDeclaration (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (3612)) COMMA_SOURCE_FILE_AT_LINE (3612)) COMMA_SOURCE_FILE_AT_LINE (3612)) ;
        enumerator_149084.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (constinArgument_inEndOfSourceFile, var_s COMMA_SOURCE_FILE_AT_LINE (3614)) ;
      outArgument_outSemanticContext.drop () ; // Release error dropped variable
    }else if (kBoolFalse == test_2) {
      var_sortedSemanticDeclarationListAST.dotAssign_operation (var_categoryOverrideDefinitionList COMMA_SOURCE_FILE_AT_LINE (3617)) ;
      outArgument_outSemanticContext = GALGAS_semanticContext::constructor_new (constinArgument_inSourceFile, GALGAS_unifiedTypeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3621)), GALGAS_routineMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3622)), GALGAS_functionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3623)), GALGAS_filewrapperMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3624)), GALGAS_grammarMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (3625)), GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (3626)), GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (3627)), GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (SOURCE_FILE_AT_LINE (3628)) COMMA_SOURCE_FILE_AT_LINE (3619)) ;
      cEnumerator_semanticDeclarationListAST enumerator_149892 (var_sortedSemanticDeclarationListAST, kEnumeration_up) ;
      while (enumerator_149892.hasCurrentObject ()) {
        callCategoryMethod_enterInSemanticContext ((const cPtr_semanticDeclarationAST *) enumerator_149892.current_mSemanticDeclaration (HERE).ptr (), var_categoryMethodMapForBuildingContext, var_categoryReaderMapForBuildingContext, var_categoryModifierMapForBuildingContext, outArgument_outSemanticContext, inCompiler COMMA_SOURCE_FILE_AT_LINE (3632)) ;
        enumerator_149892.gotoNextObject () ;
      }
    }
  }
}


//-----------------------------------------------------------------------------*

GALGAS_semanticContext::GALGAS_semanticContext (void) :
mAttribute_mSourceFileAbsolutePath (),
mAttribute_mTypeMap (),
mAttribute_mRoutineMap (),
mAttribute_mFunctionMap (),
mAttribute_mFilewrapperMap (),
mAttribute_mGrammarMap (),
mAttribute_mOptionComponentMapForSemanticAnalysis (),
mAttribute_mLexiqueComponentMapForSemanticAnalysis (),
mAttribute_mOptionMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_semanticContext::~ GALGAS_semanticContext (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_semanticContext::GALGAS_semanticContext (const GALGAS_string & inOperand0,
                                                const GALGAS_unifiedTypeMap & inOperand1,
                                                const GALGAS_routineMap & inOperand2,
                                                const GALGAS_functionMap & inOperand3,
                                                const GALGAS_filewrapperMap & inOperand4,
                                                const GALGAS_grammarMap & inOperand5,
                                                const GALGAS_optionComponentMapForSemanticAnalysis & inOperand6,
                                                const GALGAS_lexiqueComponentMapForSemanticAnalysis & inOperand7,
                                                const GALGAS_optionMapForSemanticAnalysis & inOperand8) :
mAttribute_mSourceFileAbsolutePath (inOperand0),
mAttribute_mTypeMap (inOperand1),
mAttribute_mRoutineMap (inOperand2),
mAttribute_mFunctionMap (inOperand3),
mAttribute_mFilewrapperMap (inOperand4),
mAttribute_mGrammarMap (inOperand5),
mAttribute_mOptionComponentMapForSemanticAnalysis (inOperand6),
mAttribute_mLexiqueComponentMapForSemanticAnalysis (inOperand7),
mAttribute_mOptionMap (inOperand8) {
}

//-----------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_semanticContext::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_semanticContext (GALGAS_string::constructor_default (HERE),
                                 GALGAS_unifiedTypeMap::constructor_emptyMap (HERE),
                                 GALGAS_routineMap::constructor_emptyMap (HERE),
                                 GALGAS_functionMap::constructor_emptyMap (HERE),
                                 GALGAS_filewrapperMap::constructor_emptyMap (HERE),
                                 GALGAS_grammarMap::constructor_emptyMap (HERE),
                                 GALGAS_optionComponentMapForSemanticAnalysis::constructor_emptyMap (HERE),
                                 GALGAS_lexiqueComponentMapForSemanticAnalysis::constructor_emptyMap (HERE),
                                 GALGAS_optionMapForSemanticAnalysis::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_semanticContext::constructor_new (const GALGAS_string & inOperand0,
                                                                const GALGAS_unifiedTypeMap & inOperand1,
                                                                const GALGAS_routineMap & inOperand2,
                                                                const GALGAS_functionMap & inOperand3,
                                                                const GALGAS_filewrapperMap & inOperand4,
                                                                const GALGAS_grammarMap & inOperand5,
                                                                const GALGAS_optionComponentMapForSemanticAnalysis & inOperand6,
                                                                const GALGAS_lexiqueComponentMapForSemanticAnalysis & inOperand7,
                                                                const GALGAS_optionMapForSemanticAnalysis & inOperand8 
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_semanticContext result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid ()) {
    result = GALGAS_semanticContext (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_semanticContext::objectCompare (const GALGAS_semanticContext & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mSourceFileAbsolutePath.objectCompare (inOperand.mAttribute_mSourceFileAbsolutePath) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTypeMap.objectCompare (inOperand.mAttribute_mTypeMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRoutineMap.objectCompare (inOperand.mAttribute_mRoutineMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFunctionMap.objectCompare (inOperand.mAttribute_mFunctionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperMap.objectCompare (inOperand.mAttribute_mFilewrapperMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGrammarMap.objectCompare (inOperand.mAttribute_mGrammarMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionComponentMapForSemanticAnalysis.objectCompare (inOperand.mAttribute_mOptionComponentMapForSemanticAnalysis) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLexiqueComponentMapForSemanticAnalysis.objectCompare (inOperand.mAttribute_mLexiqueComponentMapForSemanticAnalysis) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionMap.objectCompare (inOperand.mAttribute_mOptionMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_semanticContext::isValid (void) const {
  return mAttribute_mSourceFileAbsolutePath.isValid () && mAttribute_mTypeMap.isValid () && mAttribute_mRoutineMap.isValid () && mAttribute_mFunctionMap.isValid () && mAttribute_mFilewrapperMap.isValid () && mAttribute_mGrammarMap.isValid () && mAttribute_mOptionComponentMapForSemanticAnalysis.isValid () && mAttribute_mLexiqueComponentMapForSemanticAnalysis.isValid () && mAttribute_mOptionMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_semanticContext::drop (void) {
  mAttribute_mSourceFileAbsolutePath.drop () ;
  mAttribute_mTypeMap.drop () ;
  mAttribute_mRoutineMap.drop () ;
  mAttribute_mFunctionMap.drop () ;
  mAttribute_mFilewrapperMap.drop () ;
  mAttribute_mGrammarMap.drop () ;
  mAttribute_mOptionComponentMapForSemanticAnalysis.drop () ;
  mAttribute_mLexiqueComponentMapForSemanticAnalysis.drop () ;
  mAttribute_mOptionMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_semanticContext::description (C_String & ioString,
                                          const int32_t inIndentation) const {
  ioString << "<struct @semanticContext:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mSourceFileAbsolutePath.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTypeMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRoutineMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFunctionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGrammarMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionComponentMapForSemanticAnalysis.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLexiqueComponentMapForSemanticAnalysis.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_semanticContext::reader_mSourceFileAbsolutePath (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSourceFileAbsolutePath ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_semanticContext::reader_mTypeMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTypeMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap GALGAS_semanticContext::reader_mRoutineMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRoutineMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap GALGAS_semanticContext::reader_mFunctionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFunctionMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap GALGAS_semanticContext::reader_mFilewrapperMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap GALGAS_semanticContext::reader_mGrammarMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGrammarMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis GALGAS_semanticContext::reader_mOptionComponentMapForSemanticAnalysis (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionComponentMapForSemanticAnalysis ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis GALGAS_semanticContext::reader_mLexiqueComponentMapForSemanticAnalysis (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLexiqueComponentMapForSemanticAnalysis ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis GALGAS_semanticContext::reader_mOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @semanticContext type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_semanticContext ("semanticContext",
                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_semanticContext::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_semanticContext ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_semanticContext::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_semanticContext (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_semanticContext GALGAS_semanticContext::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_semanticContext result ;
  const GALGAS_semanticContext * p = (const GALGAS_semanticContext *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_semanticContext *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("semanticContext", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//    Abstract category reader '@semanticDeclarationAST keyRepresentation'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_semanticDeclarationAST_keyRepresentation> gCategoryReaderTable_semanticDeclarationAST_keyRepresentation ;

//-----------------------------------------------------------------------------*

void enterCategoryReader_keyRepresentation (const int32_t inClassIndex,
                                            categoryReaderSignature_semanticDeclarationAST_keyRepresentation inReader) {
  gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryReader_semanticDeclarationAST_keyRepresentation (void) {
  gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_semanticDeclarationAST_keyRepresentation (NULL,
                                                                     freeCategoryReader_semanticDeclarationAST_keyRepresentation) ;

//-----------------------------------------------------------------------------*

GALGAS_string callCategoryReader_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_semanticDeclarationAST_keyRepresentation f = NULL ;
    if (classIndex < gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.count ()) {
      f = gCategoryReaderTable_semanticDeclarationAST_keyRepresentation (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.count ()) {
           f = gCategoryReaderTable_semanticDeclarationAST_keyRepresentation (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_semanticDeclarationAST_keyRepresentation.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category reader '@abstractCategoryModifierAST keyRepresentation' *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_abstractCategoryModifierAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_abstractCategoryModifierAST * object = (const cPtr_abstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryModifierAST) ;
  result_outString = GALGAS_string ("abstract category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (247)) COMMA_SOURCE_FILE_AT_LINE (247)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (247)).operator_concat (object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (247)) COMMA_SOURCE_FILE_AT_LINE (247)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_abstractCategoryModifierAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                         categoryReader_abstractCategoryModifierAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractCategoryModifierAST_keyRepresentation (defineCategoryReader_abstractCategoryModifierAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category reader '@categoryModifierAST keyRepresentation'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_categoryModifierAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_categoryModifierAST * object = (const cPtr_categoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryModifierAST) ;
  result_outString = GALGAS_string ("category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (255)) COMMA_SOURCE_FILE_AT_LINE (255)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (255)).operator_concat (object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (255)) COMMA_SOURCE_FILE_AT_LINE (255)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_categoryModifierAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                         categoryReader_categoryModifierAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_categoryModifierAST_keyRepresentation (defineCategoryReader_categoryModifierAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category reader '@overridingCategoryModifierAST keyRepresentation'*
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingCategoryModifierAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                     C_Compiler * /* inCompiler */
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingCategoryModifierAST * object = (const cPtr_overridingCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryModifierAST) ;
  result_outString = GALGAS_string ("overriding category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (263)) COMMA_SOURCE_FILE_AT_LINE (263)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (263)).operator_concat (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (263)) COMMA_SOURCE_FILE_AT_LINE (263)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_overridingCategoryModifierAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                         categoryReader_overridingCategoryModifierAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingCategoryModifierAST_keyRepresentation (defineCategoryReader_overridingCategoryModifierAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category reader '@overridingAbstractCategoryModifierAST keyRepresentation'*
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingAbstractCategoryModifierAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                             C_Compiler * /* inCompiler */
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingAbstractCategoryModifierAST * object = (const cPtr_overridingAbstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryModifierAST) ;
  result_outString = GALGAS_string ("overriding category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (271)) COMMA_SOURCE_FILE_AT_LINE (271)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (271)).operator_concat (object->mAttribute_mOverridingCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (271)) COMMA_SOURCE_FILE_AT_LINE (271)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_overridingAbstractCategoryModifierAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                         categoryReader_overridingAbstractCategoryModifierAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingAbstractCategoryModifierAST_keyRepresentation (defineCategoryReader_overridingAbstractCategoryModifierAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category reader '@abstractCategoryMethodAST keyRepresentation'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_abstractCategoryMethodAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_abstractCategoryMethodAST * object = (const cPtr_abstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryMethodAST) ;
  result_outString = GALGAS_string ("abstract category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (279)) COMMA_SOURCE_FILE_AT_LINE (279)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (279)).operator_concat (object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (279)) COMMA_SOURCE_FILE_AT_LINE (279)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_abstractCategoryMethodAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                         categoryReader_abstractCategoryMethodAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractCategoryMethodAST_keyRepresentation (defineCategoryReader_abstractCategoryMethodAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category reader '@categoryMethodAST keyRepresentation'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_categoryMethodAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_categoryMethodAST * object = (const cPtr_categoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryMethodAST) ;
  result_outString = GALGAS_string ("category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (287)) COMMA_SOURCE_FILE_AT_LINE (287)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (287)).operator_concat (object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (287)) COMMA_SOURCE_FILE_AT_LINE (287)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_categoryMethodAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                         categoryReader_categoryMethodAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_categoryMethodAST_keyRepresentation (defineCategoryReader_categoryMethodAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category reader '@overridingCategoryMethodAST keyRepresentation' *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingCategoryMethodAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingCategoryMethodAST * object = (const cPtr_overridingCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryMethodAST) ;
  result_outString = GALGAS_string ("overriding category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (295)) COMMA_SOURCE_FILE_AT_LINE (295)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (295)).operator_concat (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (295)) COMMA_SOURCE_FILE_AT_LINE (295)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_overridingCategoryMethodAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                         categoryReader_overridingCategoryMethodAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingCategoryMethodAST_keyRepresentation (defineCategoryReader_overridingCategoryMethodAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category reader '@overridingAbstractCategoryMethodAST keyRepresentation'*
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingAbstractCategoryMethodAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                           C_Compiler * /* inCompiler */
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingAbstractCategoryMethodAST * object = (const cPtr_overridingAbstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryMethodAST) ;
  result_outString = GALGAS_string ("overriding category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (303)) COMMA_SOURCE_FILE_AT_LINE (303)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (303)).operator_concat (object->mAttribute_mOverridingCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (303)) COMMA_SOURCE_FILE_AT_LINE (303)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_overridingAbstractCategoryMethodAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                         categoryReader_overridingAbstractCategoryMethodAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingAbstractCategoryMethodAST_keyRepresentation (defineCategoryReader_overridingAbstractCategoryMethodAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category reader '@abstractCategoryReaderAST keyRepresentation'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_abstractCategoryReaderAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_abstractCategoryReaderAST * object = (const cPtr_abstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryReaderAST) ;
  result_outString = GALGAS_string ("abstract category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (311)) COMMA_SOURCE_FILE_AT_LINE (311)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (311)).operator_concat (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (311)) COMMA_SOURCE_FILE_AT_LINE (311)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_abstractCategoryReaderAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                         categoryReader_abstractCategoryReaderAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractCategoryReaderAST_keyRepresentation (defineCategoryReader_abstractCategoryReaderAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category reader '@categoryReaderAST keyRepresentation'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_categoryReaderAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_categoryReaderAST * object = (const cPtr_categoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryReaderAST) ;
  result_outString = GALGAS_string ("category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (319)) COMMA_SOURCE_FILE_AT_LINE (319)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (319)).operator_concat (object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (319)) COMMA_SOURCE_FILE_AT_LINE (319)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_categoryReaderAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                         categoryReader_categoryReaderAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_categoryReaderAST_keyRepresentation (defineCategoryReader_categoryReaderAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category reader '@overridingCategoryReaderAST keyRepresentation' *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingCategoryReaderAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingCategoryReaderAST * object = (const cPtr_overridingCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryReaderAST) ;
  result_outString = GALGAS_string ("overriding category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (327)) COMMA_SOURCE_FILE_AT_LINE (327)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (327)).operator_concat (object->mAttribute_mOverridingCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (327)) COMMA_SOURCE_FILE_AT_LINE (327)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_overridingCategoryReaderAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                         categoryReader_overridingCategoryReaderAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingCategoryReaderAST_keyRepresentation (defineCategoryReader_overridingCategoryReaderAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category reader '@overridingAbstractCategoryReaderAST keyRepresentation'*
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_overridingAbstractCategoryReaderAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                           C_Compiler * /* inCompiler */
                                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_overridingAbstractCategoryReaderAST * object = (const cPtr_overridingAbstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryReaderAST) ;
  result_outString = GALGAS_string ("overriding category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (335)) COMMA_SOURCE_FILE_AT_LINE (335)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (335)).operator_concat (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (335)) COMMA_SOURCE_FILE_AT_LINE (335)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_overridingAbstractCategoryReaderAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                         categoryReader_overridingAbstractCategoryReaderAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_overridingAbstractCategoryReaderAST_keyRepresentation (defineCategoryReader_overridingAbstractCategoryReaderAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category reader '@predefinedTypeAST keyRepresentation'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_predefinedTypeAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_predefinedTypeAST * object = (const cPtr_predefinedTypeAST *) inObject ;
  macroValidSharedObject (object, cPtr_predefinedTypeAST) ;
  result_outString = GALGAS_string ("predefined type @").operator_concat (object->mAttribute_mPredefinedTypeName COMMA_SOURCE_FILE_AT_LINE (343)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_predefinedTypeAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_predefinedTypeAST.mSlotID,
                                         categoryReader_predefinedTypeAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_predefinedTypeAST_keyRepresentation (defineCategoryReader_predefinedTypeAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category reader '@uniqueMapDeclarationAST keyRepresentation'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_uniqueMapDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_uniqueMapDeclarationAST * object = (const cPtr_uniqueMapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_uniqueMapDeclarationAST) ;
  result_outString = GALGAS_string ("unique map @").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (351)) COMMA_SOURCE_FILE_AT_LINE (351)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_uniqueMapDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_uniqueMapDeclarationAST.mSlotID,
                                         categoryReader_uniqueMapDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_uniqueMapDeclarationAST_keyRepresentation (defineCategoryReader_uniqueMapDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category reader '@mapDeclarationAST keyRepresentation'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_mapDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapDeclarationAST) ;
  result_outString = GALGAS_string ("map @").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (359)) COMMA_SOURCE_FILE_AT_LINE (359)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_mapDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                         categoryReader_mapDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_mapDeclarationAST_keyRepresentation (defineCategoryReader_mapDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category reader '@mapProxyDeclarationAST keyRepresentation'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_mapProxyDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_mapProxyDeclarationAST * object = (const cPtr_mapProxyDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapProxyDeclarationAST) ;
  result_outString = GALGAS_string ("map proxy @").operator_concat (object->mAttribute_mMapProxyTypeName.reader_string (SOURCE_FILE_AT_LINE (367)) COMMA_SOURCE_FILE_AT_LINE (367)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_mapProxyDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_mapProxyDeclarationAST.mSlotID,
                                         categoryReader_mapProxyDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_mapProxyDeclarationAST_keyRepresentation (defineCategoryReader_mapProxyDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category reader '@enumDeclarationAST keyRepresentation'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_enumDeclarationAST * object = (const cPtr_enumDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_enumDeclarationAST) ;
  result_outString = GALGAS_string ("enum @").operator_concat (object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (375)) COMMA_SOURCE_FILE_AT_LINE (375)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_enumDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_enumDeclarationAST.mSlotID,
                                         categoryReader_enumDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumDeclarationAST_keyRepresentation (defineCategoryReader_enumDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category reader '@sortedListDeclarationAST keyRepresentation'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_sortedListDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_sortedListDeclarationAST) ;
  result_outString = GALGAS_string ("sorted list @").operator_concat (object->mAttribute_mSortedListTypeName.reader_string (SOURCE_FILE_AT_LINE (383)) COMMA_SOURCE_FILE_AT_LINE (383)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_sortedListDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                         categoryReader_sortedListDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_sortedListDeclarationAST_keyRepresentation (defineCategoryReader_sortedListDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category reader '@structDeclarationAST keyRepresentation'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_structDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_structDeclarationAST * object = (const cPtr_structDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_structDeclarationAST) ;
  result_outString = GALGAS_string ("struct @").operator_concat (object->mAttribute_mStructTypeName.reader_string (SOURCE_FILE_AT_LINE (391)) COMMA_SOURCE_FILE_AT_LINE (391)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_structDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_structDeclarationAST.mSlotID,
                                         categoryReader_structDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_structDeclarationAST_keyRepresentation (defineCategoryReader_structDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category reader '@listDeclarationAST keyRepresentation'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_listDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listDeclarationAST) ;
  result_outString = GALGAS_string ("list @").operator_concat (object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (399)) COMMA_SOURCE_FILE_AT_LINE (399)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_listDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                         categoryReader_listDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_listDeclarationAST_keyRepresentation (defineCategoryReader_listDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category reader '@classDeclarationAST keyRepresentation'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_classDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_classDeclarationAST * object = (const cPtr_classDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_classDeclarationAST) ;
  result_outString = GALGAS_string ("class @").operator_concat (object->mAttribute_mClassTypeName.reader_string (SOURCE_FILE_AT_LINE (407)) COMMA_SOURCE_FILE_AT_LINE (407)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_classDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_classDeclarationAST.mSlotID,
                                         categoryReader_classDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_classDeclarationAST_keyRepresentation (defineCategoryReader_classDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category reader '@arrayDeclarationAST keyRepresentation'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_arrayDeclarationAST * object = (const cPtr_arrayDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_arrayDeclarationAST) ;
  result_outString = GALGAS_string ("array @").operator_concat (object->mAttribute_mArrayTypeName.reader_string (SOURCE_FILE_AT_LINE (415)) COMMA_SOURCE_FILE_AT_LINE (415)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_arrayDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_arrayDeclarationAST.mSlotID,
                                         categoryReader_arrayDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayDeclarationAST_keyRepresentation (defineCategoryReader_arrayDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category reader '@listmapDeclarationAST keyRepresentation'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_listmapDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listmapDeclarationAST) ;
  result_outString = GALGAS_string ("listmap @").operator_concat (object->mAttribute_mListmapTypeName.reader_string (SOURCE_FILE_AT_LINE (423)) COMMA_SOURCE_FILE_AT_LINE (423)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_listmapDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                         categoryReader_listmapDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_listmapDeclarationAST_keyRepresentation (defineCategoryReader_listmapDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category reader '@filewrapperDeclarationAST keyRepresentation'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_filewrapperDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_filewrapperDeclarationAST * object = (const cPtr_filewrapperDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_filewrapperDeclarationAST) ;
  result_outString = GALGAS_string ("filewrapper @").operator_concat (object->mAttribute_mFilewrapperName.reader_string (SOURCE_FILE_AT_LINE (431)) COMMA_SOURCE_FILE_AT_LINE (431)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_filewrapperDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_filewrapperDeclarationAST.mSlotID,
                                         categoryReader_filewrapperDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_filewrapperDeclarationAST_keyRepresentation (defineCategoryReader_filewrapperDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category reader '@graphDeclarationAST keyRepresentation'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_graphDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_graphDeclarationAST * object = (const cPtr_graphDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_graphDeclarationAST) ;
  result_outString = GALGAS_string ("graph @").operator_concat (object->mAttribute_mGraphTypeName.reader_string (SOURCE_FILE_AT_LINE (439)) COMMA_SOURCE_FILE_AT_LINE (439)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_graphDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_graphDeclarationAST.mSlotID,
                                         categoryReader_graphDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_graphDeclarationAST_keyRepresentation (defineCategoryReader_graphDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category reader '@externTypeDeclarationAST keyRepresentation'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_externTypeDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_externTypeDeclarationAST * object = (const cPtr_externTypeDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externTypeDeclarationAST) ;
  result_outString = GALGAS_string ("extern @").operator_concat (object->mAttribute_mExternTypeName.reader_string (SOURCE_FILE_AT_LINE (447)) COMMA_SOURCE_FILE_AT_LINE (447)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_externTypeDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_externTypeDeclarationAST.mSlotID,
                                         categoryReader_externTypeDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_externTypeDeclarationAST_keyRepresentation (defineCategoryReader_externTypeDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category reader '@onceFunctionDeclarationAST keyRepresentation'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_onceFunctionDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_onceFunctionDeclarationAST * object = (const cPtr_onceFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_onceFunctionDeclarationAST) ;
  result_outString = GALGAS_string ("once function ").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (455)) COMMA_SOURCE_FILE_AT_LINE (455)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_onceFunctionDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_onceFunctionDeclarationAST.mSlotID,
                                         categoryReader_onceFunctionDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_onceFunctionDeclarationAST_keyRepresentation (defineCategoryReader_onceFunctionDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category reader '@externFunctionDeclarationAST keyRepresentation' *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_externFunctionDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_externFunctionDeclarationAST * object = (const cPtr_externFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externFunctionDeclarationAST) ;
  result_outString = GALGAS_string ("extern function ").operator_concat (object->mAttribute_mFunctionName.reader_string (SOURCE_FILE_AT_LINE (463)) COMMA_SOURCE_FILE_AT_LINE (463)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_externFunctionDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_externFunctionDeclarationAST.mSlotID,
                                         categoryReader_externFunctionDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_externFunctionDeclarationAST_keyRepresentation (defineCategoryReader_externFunctionDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category reader '@externRoutineDeclarationAST keyRepresentation' *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_string categoryReader_externRoutineDeclarationAST_keyRepresentation (const cPtr_semanticDeclarationAST * inObject,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outString ; // Returned variable
  const cPtr_externRoutineDeclarationAST * object = (const cPtr_externRoutineDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externRoutineDeclarationAST) ;
  result_outString = GALGAS_string ("extern routine ").operator_concat (object->mAttribute_mRoutineName.reader_string (SOURCE_FILE_AT_LINE (471)) COMMA_SOURCE_FILE_AT_LINE (471)) ;
//---
  return result_outString ;
}


//-----------------------------------------------------------------------------*

static void defineCategoryReader_externRoutineDeclarationAST_keyRepresentation (void) {
  enterCategoryReader_keyRepresentation (kTypeDescriptor_GALGAS_externRoutineDeclarationAST.mSlotID,
                                         categoryReader_externRoutineDeclarationAST_keyRepresentation) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_externRoutineDeclarationAST_keyRepresentation (defineCategoryReader_externRoutineDeclarationAST_keyRepresentation, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Abstract category method '@semanticDeclarationAST enterInSemanticContext'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_enterInSemanticContext> gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_enterInSemanticContext (const int32_t inClassIndex,
                                                 categoryMethodSignature_semanticDeclarationAST_enterInSemanticContext inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_enterInSemanticContext (void) {
  gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_enterInSemanticContext (NULL,
                                                                          freeCategoryMethod_semanticDeclarationAST_enterInSemanticContext) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                const GALGAS_categoryMethodMapForBuildingContext constin_inCategoryMethodMapForBuildingContext,
                                                const GALGAS_categoryReaderMapForBuildingContext constin_inCategoryReaderMapForBuildingContext,
                                                const GALGAS_categoryModifierMapForBuildingContext constin_inCategoryModifierMapForBuildingContext,
                                                GALGAS_semanticContext & io_ioSemanticContext,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_enterInSemanticContext f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_enterInSemanticContext.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inCategoryMethodMapForBuildingContext, constin_inCategoryReaderMapForBuildingContext, constin_inCategoryModifierMapForBuildingContext, io_ioSemanticContext, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@abstractCategoryMethodAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryMethodAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                             const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                             const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                             const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryMethodAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                              categoryMethod_abstractCategoryMethodAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryMethodAST_enterInSemanticContext (defineCategoryMethod_abstractCategoryMethodAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@categoryMethodAST enterInSemanticContext'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryMethodAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                     const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                     const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                     const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                     GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                     C_Compiler * /* inCompiler */
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryMethodAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                              categoryMethod_categoryMethodAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryMethodAST_enterInSemanticContext (defineCategoryMethod_categoryMethodAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryMethodAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryMethodAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                               const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                               const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                               const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryMethodAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                              categoryMethod_overridingCategoryMethodAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryMethodAST_enterInSemanticContext (defineCategoryMethod_overridingCategoryMethodAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryMethodAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                                       const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                       const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                       const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                       GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                              categoryMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext (defineCategoryMethod_overridingAbstractCategoryMethodAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@abstractCategoryModifierAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryModifierAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                               const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                               const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                               const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryModifierAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                              categoryMethod_abstractCategoryModifierAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryModifierAST_enterInSemanticContext (defineCategoryMethod_abstractCategoryModifierAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@categoryModifierAST enterInSemanticContext'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryModifierAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                       const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                       const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                       const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                       GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryModifierAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                              categoryMethod_categoryModifierAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryModifierAST_enterInSemanticContext (defineCategoryMethod_categoryModifierAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryModifierAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryModifierAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                                 const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                 const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                 const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                 GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryModifierAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                              categoryMethod_overridingCategoryModifierAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryModifierAST_enterInSemanticContext (defineCategoryMethod_overridingCategoryModifierAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryModifierAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                                         const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                         const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                         const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                         GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                              categoryMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext (defineCategoryMethod_overridingAbstractCategoryModifierAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@abstractCategoryReaderAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryReaderAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                             const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                             const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                             const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryReaderAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                              categoryMethod_abstractCategoryReaderAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryReaderAST_enterInSemanticContext (defineCategoryMethod_abstractCategoryReaderAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@categoryReaderAST enterInSemanticContext'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryReaderAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                     const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                     const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                     const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                     GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                     C_Compiler * /* inCompiler */
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryReaderAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                              categoryMethod_categoryReaderAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryReaderAST_enterInSemanticContext (defineCategoryMethod_categoryReaderAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryReaderAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryReaderAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                               const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                               const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                               const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryReaderAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                              categoryMethod_overridingCategoryReaderAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryReaderAST_enterInSemanticContext (defineCategoryMethod_overridingCategoryReaderAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryReaderAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                                       const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                       const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                       const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                       GALGAS_semanticContext & /* ioArgument_ioSemanticContext */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                              categoryMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext (defineCategoryMethod_overridingAbstractCategoryReaderAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Category Reader '@predefinedTypeKindEnum defaultConstructorName'       *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_defaultConstructorName (const GALGAS_predefinedTypeKindEnum & inObject,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outName ; // Returned variable
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeKindEnum temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_predefinedTypeKindEnum::kNotBuilt:
      break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_bool: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_char: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_double: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_sint: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_sint_36__34_: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_string: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_uint: case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_uint_36__34_: {
      result_outName = GALGAS_string ("default") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_binaryset: {
      result_outName = GALGAS_string ("emptyBinarySet") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_stringset: {
      result_outName = GALGAS_string ("emptySet") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_type: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_application: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_data: {
      result_outName = GALGAS_string ("emptyData") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_location: {
      result_outName = GALGAS_string ("nowhere") ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_function: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_object: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_predefinedTypeKindEnum::kEnum_predefined_5F_filewrapper: {
      result_outName = GALGAS_string::makeEmptyString () ;
      } break ;
    }
  }
//---
  return result_outName ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@predefinedTypeAST enterInSemanticContext'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_predefinedTypeAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                     const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                     const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                     const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                     GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_predefinedTypeAST * object = (const cPtr_predefinedTypeAST *) inObject ;
  macroValidSharedObject (object, cPtr_predefinedTypeAST) ;
  GALGAS_constructorMap var_constructorMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_0 = object ;
  callCategoryMethod_getConstructorMap ((const cPtr_predefinedTypeAST *) temp_0.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_constructorMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (722)) ;
  GALGAS_readerMap var_readerMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_1 = object ;
  callCategoryMethod_getReaderMap ((const cPtr_predefinedTypeAST *) temp_1.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (723)) ;
  GALGAS_modifierMap var_modifierMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_2 = object ;
  callCategoryMethod_getModifierMap ((const cPtr_predefinedTypeAST *) temp_2.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_modifierMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (724)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_3 = object ;
  callCategoryMethod_getInstanceMethodMap ((const cPtr_predefinedTypeAST *) temp_3.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (725)) ;
  GALGAS_classMethodMap var_classMethodMap ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_4 = object ;
  callCategoryMethod_getClassMethodMap ((const cPtr_predefinedTypeAST *) temp_4.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_classMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (726)) ;
  GALGAS_unifiedTypeMapProxyAndParameterList var_addAssignArgumentList ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_5 = object ;
  callCategoryMethod_getAddAssignArgumentList ((const cPtr_predefinedTypeAST *) temp_5.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_addAssignArgumentList, inCompiler COMMA_SOURCE_FILE_AT_LINE (727)) ;
  GALGAS_enumerationDescriptorList var_enumerationList ;
  GALGAS_stringlist var_enumerationVariants ;
  GALGAS_string var_enumeratedTypeName ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_6 = object ;
  callCategoryMethod_getEnumerationList ((const cPtr_predefinedTypeAST *) temp_6.ptr (), ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_enumerationList, var_enumerationVariants, var_enumeratedTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (728)) ;
  GALGAS_unifiedTypeMapProxy var_selfTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mPredefinedTypeName, var_selfTypeProxy COMMA_SOURCE_FILE_AT_LINE (734)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedTypeProxy ;
  const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_enumeratedTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_7) {
    var_enumeratedTypeProxy = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (742)) ;
  }else if (kBoolFalse == test_7) {
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_enumeratedTypeName, var_enumeratedTypeProxy COMMA_SOURCE_FILE_AT_LINE (744)) ;
    }
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, GALGAS_lstring::constructor_new (object->mAttribute_mPredefinedTypeName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (752)), var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (747)) ;
  }
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_8 = object ;
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (GALGAS_lstring::constructor_new (object->mAttribute_mPredefinedTypeName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (759)), GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (761)), GALGAS_typeKindEnum::constructor_predefinedType (SOURCE_FILE_AT_LINE (762)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (763)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (764)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (765)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, var_classMethodMap, var_enumerationList, var_enumerationVariants, callCategoryReader_getSupportedOperatorFlags ((const cPtr_predefinedTypeAST *) temp_8.ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (773)), var_addAssignArgumentList, GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (775)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (776)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (777)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (778)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (779)), GALGAS_bool (false), var_enumeratedTypeProxy, categoryReader_defaultConstructorName (object->mAttribute_mKind, inCompiler COMMA_SOURCE_FILE_AT_LINE (782)), inCompiler COMMA_SOURCE_FILE_AT_LINE (758)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_predefinedTypeAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_predefinedTypeAST.mSlotID,
                                              categoryMethod_predefinedTypeAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_predefinedTypeAST_enterInSemanticContext (defineCategoryMethod_predefinedTypeAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@mapDeclarationAST enterInSemanticContext'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_mapDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                     const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                     const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                     const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                     GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_boolTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("bool"), var_boolTypeIndex COMMA_SOURCE_FILE_AT_LINE (802)) ;
  }
  GALGAS_unifiedTypeMapProxy var_stringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (805)) ;
  }
  GALGAS_unifiedTypeMapProxy var_locationTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("location"), var_locationTypeProxy COMMA_SOURCE_FILE_AT_LINE (808)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstring"), var_lstringTypeIndex COMMA_SOURCE_FILE_AT_LINE (811)) ;
  }
  GALGAS_unifiedTypeMapProxy var_currentMapTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName, var_currentMapTypeIndex COMMA_SOURCE_FILE_AT_LINE (814)) ;
  }
  GALGAS_enumerationDescriptorList var_enumerationDescriptor = GALGAS_enumerationDescriptorList::constructor_listWithValue (var_lstringTypeIndex, GALGAS_string ("lkey") COMMA_SOURCE_FILE_AT_LINE (816)) ;
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (817)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (818)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (819)) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (821)) ;
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (822)) ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (823)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (824)) ;
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptyMap"), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (826)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (826)) ;
  }
  {
  routine_enterConstructorWithArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("mapWithMapToOverride"), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (827)), GALGAS_string ("inMap"), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (827)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (827)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("levels"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (829)) ;
  }
  {
  routine_enterInheritedReaderWith_32_Arguments (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("hasKeyAtLevel"), GALGAS_string ("string"), GALGAS_string ("inKey"), GALGAS_string ("uint"), GALGAS_string ("inLevel"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (830)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("keySet"), GALGAS_string ("stringset"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (831)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("keyList"), GALGAS_string ("lstringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (832)) ;
  }
  {
  routine_enterInheritedReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("hasKey"), GALGAS_string ("string"), GALGAS_string ("inKey"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (833)) ;
  }
  {
  routine_enterInheritedReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("locationForKey"), GALGAS_string ("string"), GALGAS_string ("inKey"), GALGAS_string ("location"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (834)) ;
  }
  {
  routine_enterBaseReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("overriddenMap"), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (835)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (835)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("count"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (836)) ;
  }
  GALGAS_formalParameterSignature var_insertMethodFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (838)) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (839)) ;
  var_insertMethodFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (840)), GALGAS_string ("inLKey") COMMA_SOURCE_FILE_AT_LINE (840)) ;
  GALGAS_formalParameterSignature var_removeMethodFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (841)) ;
  var_removeMethodFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (842)), GALGAS_string ("inLKey") COMMA_SOURCE_FILE_AT_LINE (842)) ;
  cEnumerator_attributeInCollectionListAST enumerator_35767 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_35767.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_35767.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (845)) ;
    }
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_35767.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (848)) ;
    var_enumerationDescriptor.addAssign_operation (var_attributeTypeIndex, enumerator_35767.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (849)) COMMA_SOURCE_FILE_AT_LINE (849)) ;
    var_insertMethodFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (850)), enumerator_35767.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (850)) ;
    var_removeMethodFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (851)), enumerator_35767.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (851)) ;
    enumerator_35767.gotoNextObject () ;
  }
  cEnumerator_insertMethodListAST enumerator_36485 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_36485.hasCurrentObject ()) {
    const enumGalgasBool test_0 = var_modifierMap.reader_hasKey (enumerator_36485.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (855)) COMMA_SOURCE_FILE_AT_LINE (855)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_36485.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_36485.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (856)) COMMA_SOURCE_FILE_AT_LINE (856)).operator_concat (GALGAS_string ("' insert method is already declared") COMMA_SOURCE_FILE_AT_LINE (856)) COMMA_SOURCE_FILE_AT_LINE (856)) ;
    }else if (kBoolFalse == test_0) {
      {
      var_modifierMap.modifier_insertOrReplace (enumerator_36485.current_mInsertMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (860)), var_insertMethodFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (863)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (858)) ;
      }
    }
    enumerator_36485.gotoNextObject () ;
  }
  cEnumerator_mapRemoveMethodListAST enumerator_36959 (object->mAttribute_mRemoveMethodList, kEnumeration_up) ;
  while (enumerator_36959.hasCurrentObject ()) {
    const enumGalgasBool test_2 = var_modifierMap.reader_hasKey (enumerator_36959.current_mMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (870)) COMMA_SOURCE_FILE_AT_LINE (870)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (enumerator_36959.current_mMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the '").operator_concat (enumerator_36959.current_mMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (871)) COMMA_SOURCE_FILE_AT_LINE (871)).operator_concat (GALGAS_string ("' method is already declared as an insert modifier or a remove modifier") COMMA_SOURCE_FILE_AT_LINE (871)) COMMA_SOURCE_FILE_AT_LINE (871)) ;
    }else if (kBoolFalse == test_2) {
      {
      var_modifierMap.modifier_insertOrReplace (enumerator_36959.current_mMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (875)), var_removeMethodFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (878)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (873)) ;
      }
    }
    enumerator_36959.gotoNextObject () ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_37486 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_37486.hasCurrentObject ()) {
    {
    var_instanceMethodMap.modifier_insertKey (enumerator_37486.current_mSearchMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (887)), var_removeMethodFormalArgumentList, enumerator_37486.current_mSearchMethodName (HERE).reader_location (SOURCE_FILE_AT_LINE (889)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (891)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (885)) ;
    }
    enumerator_37486.gotoNextObject () ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_37821 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_37821.hasCurrentObject ()) {
    GALGAS_lstring var_accessorName = GALGAS_lstring::constructor_new (enumerator_37821.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (897)).operator_concat (GALGAS_string ("ForKey") COMMA_SOURCE_FILE_AT_LINE (897)), enumerator_37821.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (897)) COMMA_SOURCE_FILE_AT_LINE (897)) ;
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_37821.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (899)) ;
    }
    {
    var_readerMap.modifier_insertOrReplace (var_accessorName, GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (902)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_listWithValue (var_stringTypeIndex, GALGAS_string ("inKey") COMMA_SOURCE_FILE_AT_LINE (903)), inCompiler->here (), GALGAS_bool (true), var_attributeTypeIndex, GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (907)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (900)) ;
    }
    enumerator_37821.gotoNextObject () ;
  }
  const enumGalgasBool test_4 = GALGAS_bool (kIsSupOrEqual, object->mAttribute_mInsertOrReplaceDeclarationListAST.reader_length (SOURCE_FILE_AT_LINE (912)).objectCompare (GALGAS_uint ((uint32_t) 1U))).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_location var_insertOrReplaceLocation ;
    object->mAttribute_mInsertOrReplaceDeclarationListAST.method_first (var_insertOrReplaceLocation, inCompiler COMMA_SOURCE_FILE_AT_LINE (914)) ;
    {
    var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("insertOrReplace"), var_insertOrReplaceLocation COMMA_SOURCE_FILE_AT_LINE (916)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (917)), var_insertMethodFormalArgumentList, GALGAS_bool (false), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (920)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (915)) ;
    }
  }
  cEnumerator_attributeInCollectionListAST enumerator_38968 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_38968.hasCurrentObject ()) {
    GALGAS_lstring var_accessorName = GALGAS_lstring::constructor_new (GALGAS_string ("set").operator_concat (enumerator_38968.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (926)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (926)) COMMA_SOURCE_FILE_AT_LINE (926)).operator_concat (GALGAS_string ("ForKey") COMMA_SOURCE_FILE_AT_LINE (926)), enumerator_38968.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (926)) COMMA_SOURCE_FILE_AT_LINE (926)) ;
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_38968.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (928)) ;
    }
    GALGAS_formalParameterSignature var_accessorFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (929)) ;
    var_accessorFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (930)), enumerator_38968.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (930)) ;
    var_accessorFormalArgumentList.addAssign_operation (var_stringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (931)), enumerator_38968.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (931)) ;
    {
    var_modifierMap.modifier_insertOrReplace (var_accessorName, GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (934)), var_accessorFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (937)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (932)) ;
    }
    enumerator_38968.gotoNextObject () ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (942)) ;
  {
  var_withAccessorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("hasKey"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (943)), var_stringTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (943)) ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_40021 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_40021.hasCurrentObject ()) {
    {
    var_withAccessorMap.modifier_insertKey (enumerator_40021.current_mSearchMethodName (HERE), var_lstringTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (945)) ;
    }
    enumerator_40021.gotoNextObject () ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mMapTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (951)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratorTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mMapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (964)) COMMA_SOURCE_FILE_AT_LINE (964)), object->mAttribute_mMapTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (964)), var_enumeratorTypeIndex COMMA_SOURCE_FILE_AT_LINE (962)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mMapTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (971)), GALGAS_typeKindEnum::constructor_mapType (SOURCE_FILE_AT_LINE (972)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (973)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (974)), var_typedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (980)), var_enumerationDescriptor, var_enumerationVariants, function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (983)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (984)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (985)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (986)), object->mAttribute_mSearchMethodList, GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (988)), var_withAccessorMap, GALGAS_bool (false), var_enumeratorTypeIndex, GALGAS_string ("emptyMap"), inCompiler COMMA_SOURCE_FILE_AT_LINE (968)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_mapDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                              categoryMethod_mapDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapDeclarationAST_enterInSemanticContext (defineCategoryMethod_mapDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@uniqueMapDeclarationAST enterInSemanticContext' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_uniqueMapDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                           const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                           const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                           const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                           GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_uniqueMapDeclarationAST * object = (const cPtr_uniqueMapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_uniqueMapDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_stringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1006)) ;
  }
  GALGAS_unifiedTypeMapProxy var_locationTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("location"), var_locationTypeProxy COMMA_SOURCE_FILE_AT_LINE (1009)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstring"), var_lstringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1012)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringlistTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstringlist"), var_lstringlistTypeIndex COMMA_SOURCE_FILE_AT_LINE (1015)) ;
  }
  GALGAS_unifiedTypeMapProxy var_currentMapTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapTypeName, var_currentMapTypeIndex COMMA_SOURCE_FILE_AT_LINE (1018)) ;
  }
  GALGAS_enumerationDescriptorList var_enumerationDescriptor = GALGAS_enumerationDescriptorList::constructor_listWithValue (var_lstringTypeIndex, GALGAS_string ("lkey") COMMA_SOURCE_FILE_AT_LINE (1020)) ;
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1021)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (1022)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (1023)) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1025)) ;
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1026)) ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1027)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1028)) ;
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptyMap"), object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (1030)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1030)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("allKeys"), GALGAS_string ("stringset"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1032)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("allKeyList"), GALGAS_string ("lstringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1033)) ;
  }
  {
  routine_enterInheritedReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("hasKey"), GALGAS_string ("string"), GALGAS_string ("inKey"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1034)) ;
  }
  {
  routine_enterInheritedReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("locationForKey"), GALGAS_string ("string"), GALGAS_string ("inKey"), GALGAS_string ("location"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1035)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("count"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1036)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("unsolvedProxyCount"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1037)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("unsolvedProxyList"), GALGAS_string ("lstringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1038)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("edgeGraphvizRepresentation"), GALGAS_string ("string"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1039)) ;
  }
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1041)) ;
  GALGAS_formalParameterSignature var_insertMethodFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1042)) ;
  var_insertMethodFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1043)), GALGAS_string ("inLKey") COMMA_SOURCE_FILE_AT_LINE (1043)) ;
  GALGAS_formalParameterSignature var_removeMethodFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1044)) ;
  var_removeMethodFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1045)), GALGAS_string ("inLKey") COMMA_SOURCE_FILE_AT_LINE (1045)) ;
  cEnumerator_attributeInCollectionListAST enumerator_44841 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_44841.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_44841.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (1048)) ;
    }
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_44841.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (1051)) ;
    var_enumerationDescriptor.addAssign_operation (var_attributeTypeIndex, enumerator_44841.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1052)) COMMA_SOURCE_FILE_AT_LINE (1052)) ;
    var_insertMethodFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1053)), enumerator_44841.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1053)) ;
    var_removeMethodFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1054)), enumerator_44841.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1054)) ;
    enumerator_44841.gotoNextObject () ;
  }
  cEnumerator_insertMethodListAST enumerator_45575 (object->mAttribute_mInsertMethodList, kEnumeration_up) ;
  while (enumerator_45575.hasCurrentObject ()) {
    const enumGalgasBool test_0 = var_modifierMap.reader_hasKey (enumerator_45575.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (1058)) COMMA_SOURCE_FILE_AT_LINE (1058)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_45575.current_mInsertMethodName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_45575.current_mInsertMethodName (HERE).reader_string (SOURCE_FILE_AT_LINE (1059)) COMMA_SOURCE_FILE_AT_LINE (1059)).operator_concat (GALGAS_string ("' insert method is already declared") COMMA_SOURCE_FILE_AT_LINE (1059)) COMMA_SOURCE_FILE_AT_LINE (1059)) ;
    }else if (kBoolFalse == test_0) {
      {
      var_modifierMap.modifier_insertOrReplace (enumerator_45575.current_mInsertMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1063)), var_insertMethodFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1066)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1061)) ;
      }
    }
    enumerator_45575.gotoNextObject () ;
  }
  GALGAS_formalParameterSignature var_enterEdgeFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1072)) ;
  var_enterEdgeFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1073)), GALGAS_string ("inSource") COMMA_SOURCE_FILE_AT_LINE (1073)) ;
  var_enterEdgeFormalArgumentList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1074)), GALGAS_string ("inTarget") COMMA_SOURCE_FILE_AT_LINE (1074)) ;
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_string ("enterEdge").reader_nowhere (SOURCE_FILE_AT_LINE (1076)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1077)), var_enterEdgeFormalArgumentList, GALGAS_bool (false), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1080)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1075)) ;
  }
  GALGAS_formalParameterSignature var_topologicalSortFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1084)) ;
  var_topologicalSortFormalArgumentList.addAssign_operation (var_lstringlistTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1085)), GALGAS_string ("outSortedLKeys") COMMA_SOURCE_FILE_AT_LINE (1085)) ;
  var_topologicalSortFormalArgumentList.addAssign_operation (var_lstringlistTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1086)), GALGAS_string ("outUnsortedLKeys") COMMA_SOURCE_FILE_AT_LINE (1086)) ;
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_string ("topologicalSort").reader_nowhere (SOURCE_FILE_AT_LINE (1088)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1089)), var_topologicalSortFormalArgumentList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1093)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1087)) ;
  }
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (1097)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    cEnumerator_mapSearchMethodListAST enumerator_47320 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
    while (enumerator_47320.hasCurrentObject ()) {
      {
      var_instanceMethodMap.modifier_insertKey (enumerator_47320.current_mSearchMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1101)), var_removeMethodFormalArgumentList, enumerator_47320.current_mSearchMethodName (HERE).reader_location (SOURCE_FILE_AT_LINE (1103)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1105)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1099)) ;
      }
      enumerator_47320.gotoNextObject () ;
    }
  }else if (kBoolFalse == test_2) {
    cEnumerator_mapSearchMethodListAST enumerator_47650 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
    while (enumerator_47650.hasCurrentObject ()) {
      {
      var_modifierMap.modifier_insertKey (enumerator_47650.current_mSearchMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1113)), var_removeMethodFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1116)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1111)) ;
      }
      enumerator_47650.gotoNextObject () ;
    }
  }
  const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, object->mAttribute_mMapStateList.reader_length (SOURCE_FILE_AT_LINE (1122)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_unifiedTypeMapProxy var_locationTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("location"), var_locationTypeIndex COMMA_SOURCE_FILE_AT_LINE (1124)) ;
    }
    {
    var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("openBranch"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1126)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1127)), GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1128)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1130)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1125)) ;
    }
    {
    var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("closeBranch"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1134)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1135)), GALGAS_formalParameterSignature::constructor_listWithValue (var_locationTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1136)), GALGAS_string ("inErrorLocation") COMMA_SOURCE_FILE_AT_LINE (1136)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1138)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1133)) ;
    }
    {
    var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("closeOverride"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1142)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1143)), GALGAS_formalParameterSignature::constructor_listWithValue (var_locationTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1144)), GALGAS_string ("inErrorLocation") COMMA_SOURCE_FILE_AT_LINE (1144)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1146)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1141)) ;
    }
    {
    var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("checkAutomatonStates"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1150)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1151)), GALGAS_formalParameterSignature::constructor_listWithValue (var_locationTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1152)), GALGAS_string ("inErrorLocation") COMMA_SOURCE_FILE_AT_LINE (1152)), inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1155)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1149)) ;
    }
    cEnumerator_mapOverrideBlockListAST enumerator_49460 (object->mAttribute_mMapOverrideBlockListAST, kEnumeration_up) ;
    while (enumerator_49460.hasCurrentObject ()) {
      {
      var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("openOverrideFor").operator_concat (enumerator_49460.current_mOverrideBlockName (HERE).mAttribute_string.reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (1160)) COMMA_SOURCE_FILE_AT_LINE (1160)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1160)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1161)), GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1162)), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1164)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1159)) ;
      }
      enumerator_49460.gotoNextObject () ;
    }
  }
  cEnumerator_attributeInCollectionListAST enumerator_49869 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_49869.hasCurrentObject ()) {
    GALGAS_lstring var_accessorName = GALGAS_lstring::constructor_new (enumerator_49869.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1171)).operator_concat (GALGAS_string ("ForKey") COMMA_SOURCE_FILE_AT_LINE (1171)), enumerator_49869.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (1171)) COMMA_SOURCE_FILE_AT_LINE (1171)) ;
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_49869.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (1173)) ;
    }
    {
    var_readerMap.modifier_insertOrReplace (var_accessorName, GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1176)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_listWithValue (var_stringTypeIndex, GALGAS_string ("inKey") COMMA_SOURCE_FILE_AT_LINE (1177)), inCompiler->here (), GALGAS_bool (true), var_attributeTypeIndex, GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1181)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1174)) ;
    }
    enumerator_49869.gotoNextObject () ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_50526 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_50526.hasCurrentObject ()) {
    GALGAS_lstring var_accessorName = GALGAS_lstring::constructor_new (GALGAS_string ("set").operator_concat (enumerator_50526.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1187)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (1187)) COMMA_SOURCE_FILE_AT_LINE (1187)).operator_concat (GALGAS_string ("ForKey") COMMA_SOURCE_FILE_AT_LINE (1187)), enumerator_50526.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (1187)) COMMA_SOURCE_FILE_AT_LINE (1187)) ;
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_50526.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (1189)) ;
    }
    GALGAS_formalParameterSignature var_accessorFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1190)) ;
    var_accessorFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1191)), enumerator_50526.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1191)) ;
    var_accessorFormalArgumentList.addAssign_operation (var_stringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1192)), enumerator_50526.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1192)) ;
    {
    var_modifierMap.modifier_insertOrReplace (var_accessorName, GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1195)), var_accessorFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1198)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1193)) ;
    }
    enumerator_50526.gotoNextObject () ;
  }
  GALGAS_withAccessorMap var_withAccessorMap = GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1203)) ;
  {
  var_withAccessorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("hasKey"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1204)), var_stringTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1204)) ;
  }
  cEnumerator_mapSearchMethodListAST enumerator_51579 (object->mAttribute_mSearchMethodList, kEnumeration_up) ;
  while (enumerator_51579.hasCurrentObject ()) {
    {
    var_withAccessorMap.modifier_insertKey (enumerator_51579.current_mSearchMethodName (HERE), var_lstringTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1206)) ;
    }
    enumerator_51579.gotoNextObject () ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mMapTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1212)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mMapTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1226)), GALGAS_typeKindEnum::constructor_uniqueMapType (SOURCE_FILE_AT_LINE (1227)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1228)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1229)), var_typedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1235)), var_enumerationDescriptor, var_enumerationVariants, function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (1238)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1239)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1240)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1241)), object->mAttribute_mSearchMethodList, GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1243)), var_withAccessorMap, GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1246)), GALGAS_string ("emptyMap"), inCompiler COMMA_SOURCE_FILE_AT_LINE (1223)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_uniqueMapDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_uniqueMapDeclarationAST.mSlotID,
                                              categoryMethod_uniqueMapDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_uniqueMapDeclarationAST_enterInSemanticContext (defineCategoryMethod_uniqueMapDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@mapProxyDeclarationAST enterInSemanticContext' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_mapProxyDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                          const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                          const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                          const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                          GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapProxyDeclarationAST * object = (const cPtr_mapProxyDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapProxyDeclarationAST) ;
  GALGAS_typeKindEnum var_typeKindEnum ;
  GALGAS_typedAttributeList var_mapTypedAttributeList ;
  GALGAS_mapSearchMethodListAST var_searchMethodList ;
  GALGAS_bool joker_53335_2 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_53335_1 ; // Joker input parameter
  GALGAS_typedAttributeList joker_53375_2 ; // Joker input parameter
  GALGAS_attributeMap joker_53375_1 ; // Joker input parameter
  GALGAS_constructorMap joker_53430_11 ; // Joker input parameter
  GALGAS_readerMap joker_53430_10 ; // Joker input parameter
  GALGAS_modifierMap joker_53430_9 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_53430_8 ; // Joker input parameter
  GALGAS_classMethodMap joker_53430_7 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_53430_6 ; // Joker input parameter
  GALGAS_stringlist joker_53430_5 ; // Joker input parameter
  GALGAS_uint joker_53430_4 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyAndParameterList joker_53430_3 ; // Joker input parameter
  GALGAS_stringset joker_53430_2 ; // Joker input parameter
  GALGAS_lstringlist joker_53430_1 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_53485_5 ; // Joker input parameter
  GALGAS_withAccessorMap joker_53485_4 ; // Joker input parameter
  GALGAS_bool joker_53485_3 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_53485_2 ; // Joker input parameter
  GALGAS_string joker_53485_1 ; // Joker input parameter
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedMapTypeName, joker_53335_2, joker_53335_1, var_typeKindEnum, joker_53375_2, joker_53375_1, var_mapTypedAttributeList, joker_53430_11, joker_53430_10, joker_53430_9, joker_53430_8, joker_53430_7, joker_53430_6, joker_53430_5, joker_53430_4, joker_53430_3, joker_53430_2, joker_53430_1, var_searchMethodList, joker_53485_5, joker_53485_4, joker_53485_3, joker_53485_2, joker_53485_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1260)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_typeKindEnum.objectCompare (GALGAS_typeKindEnum::constructor_uniqueMapType (SOURCE_FILE_AT_LINE (1270)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAssociatedMapTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the @").operator_concat (object->mAttribute_mAssociatedMapTypeName.reader_string (SOURCE_FILE_AT_LINE (1271)) COMMA_SOURCE_FILE_AT_LINE (1271)).operator_concat (GALGAS_string (" should be an unique map type") COMMA_SOURCE_FILE_AT_LINE (1271)) COMMA_SOURCE_FILE_AT_LINE (1271)) ;
    var_mapTypedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1272)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1275)) ;
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1276)) ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1277)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1278)) ;
  GALGAS_classMethodMap var_classMethodMap = GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1279)) ;
  GALGAS_unifiedTypeMapProxy var_associatedMapTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedMapTypeName, var_associatedMapTypeIndex COMMA_SOURCE_FILE_AT_LINE (1282)) ;
  }
  GALGAS_unifiedTypeMapProxy var_stringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1285)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstring"), var_lstringTypeIndex COMMA_SOURCE_FILE_AT_LINE (1288)) ;
  }
  GALGAS_unifiedTypeMapProxy var_mapProxyTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mMapProxyTypeName, var_mapProxyTypeProxy COMMA_SOURCE_FILE_AT_LINE (1291)) ;
  }
  GALGAS_formalParameterSignature var_argList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1293)) ;
  var_argList.addAssign_operation (var_associatedMapTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (1294)), GALGAS_string ("ioMap") COMMA_SOURCE_FILE_AT_LINE (1294)) ;
  var_argList.addAssign_operation (var_lstringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1295)), GALGAS_string ("inLKey") COMMA_SOURCE_FILE_AT_LINE (1295)) ;
  var_argList.addAssign_operation (var_mapProxyTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1296)), GALGAS_string ("outProxy") COMMA_SOURCE_FILE_AT_LINE (1296)) ;
  {
  var_classMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("makeProxy"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1298)), var_argList, GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1297)) ;
  }
  var_argList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1303)) ;
  var_argList.addAssign_operation (var_associatedMapTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentInOut (SOURCE_FILE_AT_LINE (1304)), GALGAS_string ("ioMap") COMMA_SOURCE_FILE_AT_LINE (1304)) ;
  var_argList.addAssign_operation (var_stringTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (1305)), GALGAS_string ("inLKey") COMMA_SOURCE_FILE_AT_LINE (1305)) ;
  var_argList.addAssign_operation (var_mapProxyTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1306)), GALGAS_string ("outProxy") COMMA_SOURCE_FILE_AT_LINE (1306)) ;
  {
  var_classMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("makeProxyFromString"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1308)), var_argList, GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1307)) ;
  }
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("null"), object->mAttribute_mMapProxyTypeName.reader_string (SOURCE_FILE_AT_LINE (1313)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1313)) ;
  }
  GALGAS_unifiedTypeMapProxyAndParameterList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1315)) ;
  var_constructorAttributeTypeList.addAssign_operation (var_associatedMapTypeIndex, GALGAS_string ("inMap") COMMA_SOURCE_FILE_AT_LINE (1316)) ;
  var_constructorAttributeTypeList.addAssign_operation (var_lstringTypeIndex, GALGAS_string ("inLKey") COMMA_SOURCE_FILE_AT_LINE (1317)) ;
  cEnumerator_mapSearchMethodListAST enumerator_56093 (var_searchMethodList, kEnumeration_up) ;
  while (enumerator_56093.hasCurrentObject ()) {
    {
    var_constructorMap.modifier_insertKey (enumerator_56093.current_mSearchMethodName (HERE), var_constructorAttributeTypeList, GALGAS_bool (true), var_mapProxyTypeProxy, inCompiler COMMA_SOURCE_FILE_AT_LINE (1319)) ;
    }
    enumerator_56093.gotoNextObject () ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("isSolved"), GALGAS_string ("bool"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1327)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("isNull"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1328)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("isRegular"), GALGAS_string ("bool"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1329)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lkey"), GALGAS_string ("lstring"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1330)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("key"), GALGAS_string ("string"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1331)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("identifierRepresentation"), GALGAS_string ("string"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1332)) ;
  }
  GALGAS_readerMap var_inheritedReaderMap = var_readerMap ;
  cEnumerator_typedAttributeList enumerator_57064 (var_mapTypedAttributeList, kEnumeration_up) ;
  while (enumerator_57064.hasCurrentObject ()) {
    const enumGalgasBool test_2 = var_inheritedReaderMap.reader_hasKey (enumerator_57064.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1336)) COMMA_SOURCE_FILE_AT_LINE (1336)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string::makeEmptyString () ;
      cEnumerator_stringset enumerator_57198 (var_inheritedReaderMap.reader_keySet (SOURCE_FILE_AT_LINE (1338)), kEnumeration_up) ;
      while (enumerator_57198.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("'").operator_concat (enumerator_57198.current_key (HERE) COMMA_SOURCE_FILE_AT_LINE (1339)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1339)) COMMA_SOURCE_FILE_AT_LINE (1339)) ;
        if (enumerator_57198.hasNextObject ()) {
          var_s.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (1340)) ;
        }
        enumerator_57198.gotoNextObject () ;
      }
      GALGAS_location location_3 (enumerator_57064.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the map has a associated map proxy, which has predefined readers: ").operator_concat (var_s COMMA_SOURCE_FILE_AT_LINE (1342)).operator_concat (GALGAS_string ("; you cannot use theses names for naming an attribute of this map") COMMA_SOURCE_FILE_AT_LINE (1342)) COMMA_SOURCE_FILE_AT_LINE (1342)) ;
    }else if (kBoolFalse == test_2) {
      {
      var_readerMap.modifier_insertKey (enumerator_57064.current_mAttributeName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1347)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1348)), inCompiler->here (), GALGAS_bool (true), enumerator_57064.current_mAttributeTypeProxy (HERE), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1352)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1345)) ;
      }
    }
    enumerator_57064.gotoNextObject () ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mMapProxyTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1358)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mMapProxyTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1372)), GALGAS_typeKindEnum::constructor_mapProxyType (SOURCE_FILE_AT_LINE (1373)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1374)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1375)), var_mapTypedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, var_classMethodMap, GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (1382)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1383)), function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (1384)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1385)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1386)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1387)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1388)), var_searchMethodList, GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1390)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1392)), GALGAS_string ("null"), inCompiler COMMA_SOURCE_FILE_AT_LINE (1369)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_mapProxyDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_mapProxyDeclarationAST.mSlotID,
                                              categoryMethod_mapProxyDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapProxyDeclarationAST_enterInSemanticContext (defineCategoryMethod_mapProxyDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@externTypeDeclarationAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_externTypeDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                            const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                            const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                            const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                            GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externTypeDeclarationAST * object = (const cPtr_externTypeDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externTypeDeclarationAST) ;
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1406)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1407)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1408)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1409)) ;
  GALGAS_classMethodMap var_classMethodMap = GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1410)) ;
  cEnumerator_externTypeConstructorList enumerator_59718 (object->mAttribute_mExternTypeConstructorList, kEnumeration_up) ;
  while (enumerator_59718.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_returnedTypeProxy ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_59718.current_mResultTypeName (HERE), var_returnedTypeProxy COMMA_SOURCE_FILE_AT_LINE (1414)) ;
    }
    GALGAS_unifiedTypeMapProxyAndParameterList var_arguments = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1416)) ;
    cEnumerator_typeNameFormalParameterNameList enumerator_59970 (enumerator_59718.current_mParameterList (HERE), kEnumeration_up) ;
    while (enumerator_59970.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_argumentTypeProxy ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_59970.current_mFormalParameterTypeName (HERE), var_argumentTypeProxy COMMA_SOURCE_FILE_AT_LINE (1419)) ;
      }
      var_arguments.addAssign_operation (var_argumentTypeProxy, enumerator_59970.current_mFormalParameterName (HERE) COMMA_SOURCE_FILE_AT_LINE (1420)) ;
      enumerator_59970.gotoNextObject () ;
    }
    {
    var_constructorMap.modifier_insertKey (enumerator_59718.current_mConstructorName (HERE), var_arguments, GALGAS_bool (true), var_returnedTypeProxy, inCompiler COMMA_SOURCE_FILE_AT_LINE (1423)) ;
    }
    enumerator_59718.gotoNextObject () ;
  }
  cEnumerator_externTypeReaderList enumerator_60436 (object->mAttribute_mExternTypeReaderList, kEnumeration_up) ;
  while (enumerator_60436.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_returnedTypeProxy ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_60436.current_mResultTypeName (HERE), var_returnedTypeProxy COMMA_SOURCE_FILE_AT_LINE (1433)) ;
    }
    GALGAS_unifiedTypeMapProxyAndParameterList var_arguments = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1435)) ;
    cEnumerator_typeNameFormalParameterNameList enumerator_60688 (enumerator_60436.current_mParameterList (HERE), kEnumeration_up) ;
    while (enumerator_60688.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_argumentTypeProxy ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_60688.current_mFormalParameterTypeName (HERE), var_argumentTypeProxy COMMA_SOURCE_FILE_AT_LINE (1438)) ;
      }
      var_arguments.addAssign_operation (var_argumentTypeProxy, enumerator_60688.current_mFormalParameterName (HERE) COMMA_SOURCE_FILE_AT_LINE (1439)) ;
      enumerator_60688.gotoNextObject () ;
    }
    {
    var_readerMap.modifier_insertKey (enumerator_60436.current_mReaderName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1444)), var_arguments, inCompiler->here (), GALGAS_bool (true), var_returnedTypeProxy, GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1449)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1442)) ;
    }
    enumerator_60436.gotoNextObject () ;
  }
  cEnumerator_externTypeModifierList enumerator_61265 (object->mAttribute_mExternTypeModifierList, kEnumeration_up) ;
  while (enumerator_61265.hasCurrentObject ()) {
    GALGAS_formalParameterSignature var_routineSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1455)) ;
    cEnumerator_formalParameterListAST enumerator_61362 (enumerator_61265.current_mFormalParameterList (HERE), kEnumeration_up) ;
    while (enumerator_61362.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_61362.current_mFormalArgumentTypeName (HERE), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (1457)) ;
      }
      var_routineSignature.addAssign_operation (var_parameterTypeIndex, enumerator_61362.current_mFormalArgumentPassingMode (HERE), enumerator_61362.current_mFormalArgumentName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1462)) ;
      enumerator_61362.gotoNextObject () ;
    }
    {
    var_modifierMap.modifier_insertKey (enumerator_61265.current_mModifierName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1467)), var_routineSignature, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1470)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1465)) ;
    }
    enumerator_61265.gotoNextObject () ;
  }
  cEnumerator_externTypeMethodList enumerator_61958 (object->mAttribute_mExternTypeMethodList, kEnumeration_up) ;
  while (enumerator_61958.hasCurrentObject ()) {
    GALGAS_formalParameterSignature var_routineSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1476)) ;
    cEnumerator_formalParameterListAST enumerator_62055 (enumerator_61958.current_mFormalParameterList (HERE), kEnumeration_up) ;
    while (enumerator_62055.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_62055.current_mFormalArgumentTypeName (HERE), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (1479)) ;
      }
      var_routineSignature.addAssign_operation (var_parameterTypeIndex, enumerator_62055.current_mFormalArgumentPassingMode (HERE), enumerator_62055.current_mFormalArgumentName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1484)) ;
      enumerator_62055.gotoNextObject () ;
    }
    {
    var_instanceMethodMap.modifier_insertKey (enumerator_61958.current_mMethodName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1489)), var_routineSignature, enumerator_61958.current_mDeclarationLocation (HERE), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (1493)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1487)) ;
    }
    enumerator_61958.gotoNextObject () ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mExternTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1501)), GALGAS_typeKindEnum::constructor_graphType (SOURCE_FILE_AT_LINE (1502)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1503)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1504)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1505)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1510)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (1511)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1512)), GALGAS_uint ((uint32_t) 0U), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1514)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1515)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1516)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1517)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1518)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1519)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1521)), GALGAS_string ("default"), inCompiler COMMA_SOURCE_FILE_AT_LINE (1498)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_externTypeDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_externTypeDeclarationAST.mSlotID,
                                              categoryMethod_externTypeDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externTypeDeclarationAST_enterInSemanticContext (defineCategoryMethod_externTypeDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@graphDeclarationAST enterInSemanticContext'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_graphDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                       const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                       const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                       GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_graphDeclarationAST * object = (const cPtr_graphDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_graphDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_stringTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeProxy COMMA_SOURCE_FILE_AT_LINE (1536)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstring"), var_lstringTypeProxy COMMA_SOURCE_FILE_AT_LINE (1539)) ;
  }
  GALGAS_unifiedTypeMapProxy var_graphTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mGraphTypeName, var_graphTypeProxy COMMA_SOURCE_FILE_AT_LINE (1542)) ;
  }
  GALGAS_unifiedTypeMapProxy var_associatedListTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName, var_associatedListTypeProxy COMMA_SOURCE_FILE_AT_LINE (1545)) ;
  }
  GALGAS_unifiedTypeMapProxy var_lstringListTypeProxy ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("lstringlist"), var_lstringListTypeProxy COMMA_SOURCE_FILE_AT_LINE (1548)) ;
  }
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1550)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1551)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1552)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1553)) ;
  GALGAS_classMethodMap var_classMethodMap = GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1554)) ;
  GALGAS_formalParameterSignature var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1556)) ;
  var_formalParameterList.addAssign_operation (var_associatedListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1557)), GALGAS_string ("outSortedInformationList") COMMA_SOURCE_FILE_AT_LINE (1557)) ;
  var_formalParameterList.addAssign_operation (var_lstringListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1558)), GALGAS_string ("outSortedLKeyList") COMMA_SOURCE_FILE_AT_LINE (1558)) ;
  var_formalParameterList.addAssign_operation (var_associatedListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1559)), GALGAS_string ("outUnsortedInformationList") COMMA_SOURCE_FILE_AT_LINE (1559)) ;
  var_formalParameterList.addAssign_operation (var_lstringListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1560)), GALGAS_string ("outUnsortedLKeyList") COMMA_SOURCE_FILE_AT_LINE (1560)) ;
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("topologicalSort"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1562)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1563)), var_formalParameterList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1567)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1561)) ;
  }
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("depthFirstTopologicalSort"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1571)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1572)), var_formalParameterList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1576)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1570)) ;
  }
  var_formalParameterList.drop () ; // drop instruction
  var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1581)) ;
  var_formalParameterList.addAssign_operation (var_associatedListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1582)), GALGAS_string ("outInformationList") COMMA_SOURCE_FILE_AT_LINE (1582)) ;
  var_formalParameterList.addAssign_operation (var_lstringListTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (1583)), GALGAS_string ("outLKeyList") COMMA_SOURCE_FILE_AT_LINE (1583)) ;
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("nodesWithNoSuccessor"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1585)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1586)), var_formalParameterList, inCompiler->here (), GALGAS_bool (false), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1590)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1584)) ;
  }
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("nodesWithNoPredecessor"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1594)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1595)), var_formalParameterList, inCompiler->here (), GALGAS_bool (false), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1599)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1593)) ;
  }
  var_formalParameterList.drop () ; // drop instruction
  {
  routine_enterBaseFinalReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("reversedGraph"), object->mAttribute_mGraphTypeName.mAttribute_string, GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1604)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("undefinedNodeCount"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1612)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("undefinedNodeKeyList"), GALGAS_string ("stringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1620)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("undefinedNodeReferenceList"), GALGAS_string ("lstringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1628)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("graphviz"), GALGAS_string ("string"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1636)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("keyList"), GALGAS_string ("stringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1644)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("edges"), GALGAS_string ("2stringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1652)) ;
  }
  {
  routine_enterBaseReaderWith_32_Arguments (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("subgraphFromNodes"), GALGAS_string ("lstringlist"), GALGAS_string ("inStartNodeLStringList"), GALGAS_string ("stringset"), GALGAS_string ("inNodesToExclude"), object->mAttribute_mGraphTypeName.mAttribute_string, GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (1660)) ;
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("emptyGraph"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1673)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1674)), GALGAS_bool (false), var_graphTypeProxy, inCompiler COMMA_SOURCE_FILE_AT_LINE (1672)) ;
  }
  var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1679)) ;
  var_formalParameterList.addAssign_operation (var_lstringTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1680)), GALGAS_string ("inLKey") COMMA_SOURCE_FILE_AT_LINE (1680)) ;
  cEnumerator_unifiedTypeMapProxyAndParameterList enumerator_69296 (var_associatedListTypeProxy.reader_mAddAssignOperatorArguments (inCompiler COMMA_SOURCE_FILE_AT_LINE (1681)), kEnumeration_up) ;
  while (enumerator_69296.hasCurrentObject ()) {
    var_formalParameterList.addAssign_operation (enumerator_69296.current_mType (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1682)), enumerator_69296.current_mFormalParameterName (HERE) COMMA_SOURCE_FILE_AT_LINE (1682)) ;
    enumerator_69296.gotoNextObject () ;
  }
  cEnumerator_graphInsertModifierList enumerator_69447 (object->mAttribute_mInsertModifierList, kEnumeration_up) ;
  while (enumerator_69447.hasCurrentObject ()) {
    {
    var_modifierMap.modifier_insertOrReplace (enumerator_69447.current_mInsertModifierName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1687)), var_formalParameterList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (1690)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1685)) ;
    }
    enumerator_69447.gotoNextObject () ;
  }
  var_formalParameterList.drop () ; // drop instruction
  {
  var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("removeEdgesToDominators"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1697)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1698)), GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1699)), GALGAS_bool (false), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1701)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1696)) ;
  }
  var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1705)) ;
  var_formalParameterList.addAssign_operation (var_stringTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1706)), GALGAS_string ("inNodeName") COMMA_SOURCE_FILE_AT_LINE (1706)) ;
  {
  var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("removeEdgesToNode"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1708)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1709)), var_formalParameterList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1712)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1707)) ;
  }
  var_formalParameterList.drop () ; // drop instruction
  var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1717)) ;
  var_formalParameterList.addAssign_operation (var_lstringTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1718)), GALGAS_string ("inSourceNodeLKey") COMMA_SOURCE_FILE_AT_LINE (1718)) ;
  var_formalParameterList.addAssign_operation (var_lstringTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1719)), GALGAS_string ("inTargetNodeLKey") COMMA_SOURCE_FILE_AT_LINE (1719)) ;
  {
  var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("addEdge"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1721)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1722)), var_formalParameterList, GALGAS_bool (false), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1725)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1720)) ;
  }
  var_formalParameterList.drop () ; // drop instruction
  var_formalParameterList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (1730)) ;
  var_formalParameterList.addAssign_operation (var_lstringTypeProxy, GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (1731)), GALGAS_string ("inNodeLKey") COMMA_SOURCE_FILE_AT_LINE (1731)) ;
  {
  var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("noteNode"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (1733)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (1734)), var_formalParameterList, GALGAS_bool (false), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (1737)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1732)) ;
  }
  var_formalParameterList.drop () ; // drop instruction
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mGraphTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1742)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mGraphTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1756)), GALGAS_typeKindEnum::constructor_graphType (SOURCE_FILE_AT_LINE (1757)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1758)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1759)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1760)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1765)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (1766)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1767)), function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (1768)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1769)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1770)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1771)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1772)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1773)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1774)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1776)), GALGAS_string ("emptyGraph"), inCompiler COMMA_SOURCE_FILE_AT_LINE (1753)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_graphDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_graphDeclarationAST.mSlotID,
                                              categoryMethod_graphDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_graphDeclarationAST_enterInSemanticContext (defineCategoryMethod_graphDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@enumDeclarationAST enterInSemanticContext'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_enumDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                      const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                      const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                      GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_enumDeclarationAST * object = (const cPtr_enumDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_enumDeclarationAST) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1791)) ;
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1792)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1793)) ;
  GALGAS_classMethodMap var_classMethodMap = GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1794)) ;
  GALGAS_unifiedTypeMapProxy var_currentTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mEnumTypeName, var_currentTypeIndex COMMA_SOURCE_FILE_AT_LINE (1797)) ;
  }
  GALGAS_stringset var_constantSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1799)) ;
  cEnumerator_lstringlist enumerator_73622 (object->mAttribute_mConstantList, kEnumeration_up) ;
  while (enumerator_73622.hasCurrentObject ()) {
    var_constantSet.addAssign_operation (enumerator_73622.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1801)) COMMA_SOURCE_FILE_AT_LINE (1801)) ;
    {
    routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_73622.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1802)), object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (1802)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (1802)) ;
    }
    enumerator_73622.gotoNextObject () ;
  }
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1806)) ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mEnumTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1808)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mEnumTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1822)), GALGAS_typeKindEnum::constructor_enumType (SOURCE_FILE_AT_LINE (1823)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1824)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1825)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (1826)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1831)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (1832)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1833)), function_generateDescriptionReaderUtilityMethod (inCompiler COMMA_SOURCE_FILE_AT_LINE (1834)).operator_or (function_isComparable (inCompiler COMMA_SOURCE_FILE_AT_LINE (1834)) COMMA_SOURCE_FILE_AT_LINE (1834)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (1835)), var_constantSet, object->mAttribute_mConstantList, GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1838)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (1839)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1840)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (1842)), object->mAttribute_mConstantList.reader_mValueAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (1843)).mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1819)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_enumDeclarationAST.mSlotID,
                                              categoryMethod_enumDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclarationAST_enterInSemanticContext (defineCategoryMethod_enumDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@filewrapperDeclarationAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_filewrapperDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                             const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                             const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                             const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperDeclarationAST * object = (const cPtr_filewrapperDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_filewrapperDeclarationAST) ;
  GALGAS_filewrapperTemplateMap var_filewrapperTemplateMap = GALGAS_filewrapperTemplateMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1928)) ;
  cEnumerator_filewrapperTemplateListAST enumerator_78227 (object->mAttribute_mFilewrapperTemplateList, kEnumeration_up) ;
  while (enumerator_78227.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxyList var_templateSignature = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (1930)) ;
    cEnumerator_formalTemplateInputParameterListAST enumerator_78345 (enumerator_78227.current_mFilewrapperTemplateFormalInputParameters (HERE), kEnumeration_up) ;
    while (enumerator_78345.hasCurrentObject ()) {
      GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
      {
      GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_78345.current_mFormalArgumentTypeName (HERE), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (1933)) ;
      }
      var_templateSignature.addAssign_operation (var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (1934)) ;
      enumerator_78345.gotoNextObject () ;
    }
    {
    var_filewrapperTemplateMap.modifier_insertKey (enumerator_78227.current_mFilewrapperTemplateName (HERE), var_templateSignature, enumerator_78227.current_mFilewrapperTemplatePath (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1936)) ;
    }
    enumerator_78227.gotoNextObject () ;
  }
  GALGAS_wrapperExtensionMap var_textExtensionMap = GALGAS_wrapperExtensionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1943)) ;
  cEnumerator_lstringlist enumerator_78864 (object->mAttribute_mFilewrapperTextFileExtensionList, kEnumeration_up) ;
  while (enumerator_78864.hasCurrentObject ()) {
    {
    var_textExtensionMap.modifier_insertKey (enumerator_78864.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1945)) ;
    }
    enumerator_78864.gotoNextObject () ;
  }
  GALGAS_wrapperExtensionMap var_binaryFileExtensionMap = GALGAS_wrapperExtensionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1948)) ;
  cEnumerator_lstringlist enumerator_79070 (object->mAttribute_mFilewrapperBinaryFileExtensionList, kEnumeration_up) ;
  while (enumerator_79070.hasCurrentObject ()) {
    const enumGalgasBool test_0 = var_textExtensionMap.reader_hasKey (enumerator_79070.current_mValue (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1950)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_79070.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_79070.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (1951)) COMMA_SOURCE_FILE_AT_LINE (1951)).operator_concat (GALGAS_string ("' extension is already used for text files") COMMA_SOURCE_FILE_AT_LINE (1951)) COMMA_SOURCE_FILE_AT_LINE (1951)) ;
    }else if (kBoolFalse == test_0) {
      {
      var_binaryFileExtensionMap.modifier_insertKey (enumerator_79070.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1953)) ;
      }
    }
    enumerator_79070.gotoNextObject () ;
  }
  GALGAS_wrapperFileMap var_regularRootFileMap ;
  GALGAS_wrapperDirectoryMap var_wrapperDirectoryMap ;
  GALGAS_string var_absoluteSourcePath ;
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1960)).reader_firstCharacterOrNul (SOURCE_FILE_AT_LINE (1960)).objectCompare (GALGAS_char (TO_UNICODE (47)))).boolEnum () ;
  if (kBoolTrue == test_2) {
    var_absoluteSourcePath = object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1961)) ;
  }else if (kBoolFalse == test_2) {
    var_absoluteSourcePath = object->mAttribute_mSourceFileAbsolutePath.reader_stringByDeletingLastPathComponent (SOURCE_FILE_AT_LINE (1963)).operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1963)).operator_concat (object->mAttribute_mFilewrapperPath.reader_string (SOURCE_FILE_AT_LINE (1963)) COMMA_SOURCE_FILE_AT_LINE (1963)) ;
  }
  const enumGalgasBool test_3 = var_absoluteSourcePath.reader_directoryExists (SOURCE_FILE_AT_LINE (1965)).operator_not (SOURCE_FILE_AT_LINE (1965)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_location location_4 (object->mAttribute_mFilewrapperPath.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_4, GALGAS_string ("The '").operator_concat (var_absoluteSourcePath COMMA_SOURCE_FILE_AT_LINE (1966)).operator_concat (GALGAS_string ("' directory does not exist") COMMA_SOURCE_FILE_AT_LINE (1966)) COMMA_SOURCE_FILE_AT_LINE (1966)) ;
    var_regularRootFileMap.drop () ; // Release error dropped variable
    var_wrapperDirectoryMap.drop () ; // Release error dropped variable
  }else if (kBoolFalse == test_3) {
    GALGAS_uint var_wrapperFileIndex = GALGAS_uint ((uint32_t) 0U) ;
    GALGAS_uint var_wrapperDirectoryIndex = GALGAS_uint ((uint32_t) 0U) ;
    {
    routine_recursivelyEnumerateDirectories (var_absoluteSourcePath, GALGAS_string ("/"), var_textExtensionMap, var_binaryFileExtensionMap, var_regularRootFileMap, var_wrapperDirectoryMap, var_wrapperFileIndex, var_wrapperDirectoryIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (1972)) ;
    }
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mFilewrapperMap.modifier_insertKey (object->mAttribute_mFilewrapperName, object->mAttribute_mFilewrapperPath, object->mAttribute_mFilewrapperTextFileExtensionList, var_regularRootFileMap, var_wrapperDirectoryMap, var_filewrapperTemplateMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1984)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_filewrapperDeclarationAST.mSlotID,
                                              categoryMethod_filewrapperDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperDeclarationAST_enterInSemanticContext (defineCategoryMethod_filewrapperDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@listDeclarationAST enterInSemanticContext'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_listDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                      const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                      const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                      const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                      GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listDeclarationAST) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2003)) ;
  cEnumerator_attributeInCollectionListAST enumerator_81020 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_81020.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_81020.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2006)) ;
    }
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_81264 (enumerator_81020.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_81264.hasCurrentObject ()) {
      const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_81264.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
      if (kBoolTrue == test_0) {
        var_hasGetter = GALGAS_bool (false) ;
      }else if (kBoolFalse == test_0) {
        const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_81264.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("setter"))).boolEnum () ;
        if (kBoolTrue == test_1) {
          var_hasSetter = GALGAS_bool (true) ;
        }
      }
      enumerator_81264.gotoNextObject () ;
    }
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_81020.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (2016)) ;
    enumerator_81020.gotoNextObject () ;
  }
  GALGAS_unifiedTypeMapProxy var_uintType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("uint"), var_uintType COMMA_SOURCE_FILE_AT_LINE (2020)) ;
  }
  GALGAS_unifiedTypeMapProxy var_listTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListTypeName, var_listTypeIndex COMMA_SOURCE_FILE_AT_LINE (2023)) ;
  }
  GALGAS_enumerationDescriptorList var_enumerationDescriptor = GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2025)) ;
  GALGAS_unifiedTypeMapProxyAndParameterList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2026)) ;
  GALGAS_formalParameterSignature var_modifierOutputFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2027)) ;
  GALGAS_formalParameterSignature var_modifierInputFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2028)) ;
  cEnumerator_typedAttributeList enumerator_82208 (var_typedAttributeList, kEnumeration_up) ;
  while (enumerator_82208.hasCurrentObject ()) {
    var_enumerationDescriptor.addAssign_operation (enumerator_82208.current_mAttributeTypeProxy (HERE), enumerator_82208.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2030)) COMMA_SOURCE_FILE_AT_LINE (2030)) ;
    var_constructorAttributeTypeList.addAssign_operation (enumerator_82208.current_mAttributeTypeProxy (HERE), enumerator_82208.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2031)) ;
    var_modifierOutputFormalArgumentList.addAssign_operation (enumerator_82208.current_mAttributeTypeProxy (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (2032)), enumerator_82208.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2032)) ;
    var_modifierInputFormalArgumentList.addAssign_operation (enumerator_82208.current_mAttributeTypeProxy (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2033)), enumerator_82208.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2033)) ;
    enumerator_82208.gotoNextObject () ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2036)) ;
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptyList"), object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (2037)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2037)) ;
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("listWithValue"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2039)), var_constructorAttributeTypeList, GALGAS_bool (false), var_listTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2038)) ;
  }
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2045)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("length"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2046)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("range"), GALGAS_string ("range"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2047)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("subListFromIndex"), GALGAS_string ("uint"), GALGAS_string ("inIndex"), object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (2048)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (2048)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("subListWithRange"), GALGAS_string ("range"), GALGAS_string ("inRange"), object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (2049)), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (2049)) ;
  }
  cEnumerator_typedAttributeList enumerator_83617 (var_typedAttributeList, kEnumeration_up) ;
  while (enumerator_83617.hasCurrentObject ()) {
    const enumGalgasBool test_2 = enumerator_83617.current_mHasGetter (HERE).boolEnum () ;
    if (kBoolTrue == test_2) {
      {
      var_readerMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (enumerator_83617.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2053)).operator_concat (GALGAS_string ("AtIndex") COMMA_SOURCE_FILE_AT_LINE (2053)), enumerator_83617.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (2053)) COMMA_SOURCE_FILE_AT_LINE (2053)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2054)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_listWithValue (var_uintType, GALGAS_string ("inIndex") COMMA_SOURCE_FILE_AT_LINE (2055)), inCompiler->here (), GALGAS_bool (true), enumerator_83617.current_mAttributeTypeProxy (HERE), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2059)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2052)) ;
      }
    }
    enumerator_83617.gotoNextObject () ;
  }
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2065)) ;
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("first"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2067)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2068)), var_modifierOutputFormalArgumentList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2072)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2066)) ;
  }
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("last"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2076)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2077)), var_modifierOutputFormalArgumentList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2081)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2075)) ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2085)) ;
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("popFirst"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2087)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2088)), var_modifierOutputFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2091)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2086)) ;
  }
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("popLast"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2095)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2096)), var_modifierOutputFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2099)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2094)) ;
  }
  var_modifierOutputFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2102)), GALGAS_string ("inIndex") COMMA_SOURCE_FILE_AT_LINE (2102)) ;
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("removeAtIndex"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2104)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2105)), var_modifierOutputFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2108)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2103)) ;
  }
  var_modifierOutputFormalArgumentList.drop () ; // drop instruction
  cEnumerator_typedAttributeList enumerator_85441 (var_typedAttributeList, kEnumeration_up) ;
  while (enumerator_85441.hasCurrentObject ()) {
    const enumGalgasBool test_3 = enumerator_85441.current_mHasSetter (HERE).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_formalParameterSignature var_setterFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2114)) ;
      var_setterFormalArgumentList.addAssign_operation (enumerator_85441.current_mAttributeTypeProxy (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2115)), enumerator_85441.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2115)) ;
      var_setterFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2116)), enumerator_85441.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2116)) ;
      {
      var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("set").operator_concat (enumerator_85441.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2118)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (2118)) COMMA_SOURCE_FILE_AT_LINE (2118)).operator_concat (GALGAS_string ("AtIndex") COMMA_SOURCE_FILE_AT_LINE (2118)), enumerator_85441.current_mAttributeName (HERE).reader_location (SOURCE_FILE_AT_LINE (2118)) COMMA_SOURCE_FILE_AT_LINE (2118)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2119)), var_setterFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2122)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2117)) ;
      }
    }
    enumerator_85441.gotoNextObject () ;
  }
  var_modifierInputFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2128)), GALGAS_string ("inInsertionIndex") COMMA_SOURCE_FILE_AT_LINE (2128)) ;
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("insertAtIndex"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2130)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2131)), var_modifierInputFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2134)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2129)) ;
  }
  var_modifierInputFormalArgumentList.drop () ; // drop instruction
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2139)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (2140)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (2141)) ;
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mListTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2143)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (2156)) COMMA_SOURCE_FILE_AT_LINE (2156)), object->mAttribute_mListTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (2156)), var_enumeratedTypeIndex COMMA_SOURCE_FILE_AT_LINE (2154)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mListTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2163)), GALGAS_typeKindEnum::constructor_listType (SOURCE_FILE_AT_LINE (2164)), var_typedAttributeList, GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2166)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2167)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2172)), var_enumerationDescriptor, var_enumerationVariants, function_binaryConcatOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (2175)).operator_or (function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (2175)) COMMA_SOURCE_FILE_AT_LINE (2175)).operator_or (function_dotAssignOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (2175)) COMMA_SOURCE_FILE_AT_LINE (2175)), var_constructorAttributeTypeList, GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2177)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2178)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2179)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2180)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2181)), GALGAS_bool (false), var_enumeratedTypeIndex, GALGAS_string ("emptyList"), inCompiler COMMA_SOURCE_FILE_AT_LINE (2160)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_listDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                              categoryMethod_listDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listDeclarationAST_enterInSemanticContext (defineCategoryMethod_listDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@sortedListDeclarationAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_sortedListDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                            const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                            const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                            const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                            GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_sortedListDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_uintType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("uint"), var_uintType COMMA_SOURCE_FILE_AT_LINE (2198)) ;
  }
  GALGAS_unifiedTypeMapProxy var_listTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSortedListTypeName, var_listTypeIndex COMMA_SOURCE_FILE_AT_LINE (2201)) ;
  }
  GALGAS_enumerationDescriptorList var_enumerationDescriptor = GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2203)) ;
  GALGAS_unifiedTypeMapProxyAndParameterList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2204)) ;
  GALGAS_formalParameterSignature var_modifierFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2205)) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2206)) ;
  cEnumerator_attributeInCollectionListAST enumerator_89241 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_89241.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_89241.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2209)) ;
    }
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_89241.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (2212)) ;
    var_enumerationDescriptor.addAssign_operation (var_attributeTypeIndex, enumerator_89241.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2213)) ;
    var_constructorAttributeTypeList.addAssign_operation (var_attributeTypeIndex, enumerator_89241.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2214)) ;
    var_modifierFormalArgumentList.addAssign_operation (var_attributeTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentOut (SOURCE_FILE_AT_LINE (2215)), enumerator_89241.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2215)) ;
    enumerator_89241.gotoNextObject () ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2218)) ;
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptySortedList"), object->mAttribute_mSortedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2219)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2219)) ;
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("sortedListWithValue"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2221)), var_constructorAttributeTypeList, GALGAS_bool (false), var_listTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2220)) ;
  }
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2227)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("length"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2228)) ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2230)) ;
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("popGreatest"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2232)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2233)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2236)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2231)) ;
  }
  {
  var_modifierMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("popSmallest"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2240)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2241)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2244)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2239)) ;
  }
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2248)) ;
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("greatest"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2250)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2251)), var_modifierFormalArgumentList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2255)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2249)) ;
  }
  {
  var_instanceMethodMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("smallest"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2259)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2260)), var_modifierFormalArgumentList, inCompiler->here (), GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2264)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2258)) ;
  }
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2268)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (2269)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (2270)) ;
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mSortedListTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2272)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mSortedListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (2286)) COMMA_SOURCE_FILE_AT_LINE (2286)), object->mAttribute_mSortedListTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (2286)), var_enumeratedTypeIndex COMMA_SOURCE_FILE_AT_LINE (2284)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mSortedListTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2293)), GALGAS_typeKindEnum::constructor_sortedListType (SOURCE_FILE_AT_LINE (2294)), var_typedAttributeList, GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2296)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2297)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2302)), var_enumerationDescriptor, var_enumerationVariants, function_binaryConcatOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (2305)).operator_or (function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (2305)) COMMA_SOURCE_FILE_AT_LINE (2305)).operator_or (function_dotAssignOperator (inCompiler COMMA_SOURCE_FILE_AT_LINE (2305)) COMMA_SOURCE_FILE_AT_LINE (2305)), var_constructorAttributeTypeList, GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2307)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2308)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2309)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2310)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2311)), GALGAS_bool (false), var_enumeratedTypeIndex, GALGAS_string ("emptySortedList"), inCompiler COMMA_SOURCE_FILE_AT_LINE (2290)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_sortedListDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                              categoryMethod_sortedListDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_sortedListDeclarationAST_enterInSemanticContext (defineCategoryMethod_sortedListDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@structDeclarationAST enterInSemanticContext'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_structDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                        const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                        const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                        const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                        GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structDeclarationAST * object = (const cPtr_structDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_structDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_structTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mStructTypeName, var_structTypeIndex COMMA_SOURCE_FILE_AT_LINE (2328)) ;
  }
  GALGAS_attributeMap var_attributeMap = GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2330)) ;
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2331)) ;
  GALGAS_unifiedTypeMapProxyAndParameterList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2332)) ;
  GALGAS_typedAttributeList var_typedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2333)) ;
  cEnumerator_attributeInCollectionListAST enumerator_93896 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_93896.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_93896.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2336)) ;
    }
    var_constructorAttributeTypeList.addAssign_operation (var_attributeTypeIndex, enumerator_93896.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2337)) ;
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    var_typedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_93896.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (2340)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_93896.current_mAttributeName (HERE), var_attributeTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2341)) ;
    }
    enumerator_93896.gotoNextObject () ;
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("new"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2344)), var_constructorAttributeTypeList, GALGAS_bool (false), var_structTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2343)) ;
  }
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2351)) ;
  }
  cEnumerator_typedAttributeList enumerator_94642 (var_typedAttributeList, kEnumeration_up) ;
  while (enumerator_94642.hasCurrentObject ()) {
    {
    routine_enterBaseFinalReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_94642.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2358)), enumerator_94642.current_mAttributeTypeProxy (HERE).reader_key (inCompiler COMMA_SOURCE_FILE_AT_LINE (2359)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2355)) ;
    }
    enumerator_94642.gotoNextObject () ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2365)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2367)) ;
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mStructTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2369)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedType ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mEnumeratedElementTypeName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_enumeratedType = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2382)) ;
  }else if (kBoolFalse == test_0) {
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mEnumeratedElementTypeName, var_enumeratedType COMMA_SOURCE_FILE_AT_LINE (2384)) ;
    }
  }
  GALGAS_string var_defaultConstructorName = GALGAS_string ("default") ;
  cEnumerator_typedAttributeList enumerator_95824 (var_typedAttributeList, kEnumeration_up) ;
  bool bool_1 = GALGAS_bool (kIsNotEqual, var_defaultConstructorName.objectCompare (GALGAS_string::makeEmptyString ())).isValidAndTrue () ;
  if (enumerator_95824.hasCurrentObject () && bool_1) {
    while (enumerator_95824.hasCurrentObject () && bool_1) {
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, enumerator_95824.current_mAttributeTypeProxy (HERE).reader_mDefaultConstructorName (inCompiler COMMA_SOURCE_FILE_AT_LINE (2393)).objectCompare (GALGAS_string::makeEmptyString ())).operator_or (enumerator_95824.current_mAttributeTypeProxy (HERE).reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (2393)).operator_not (SOURCE_FILE_AT_LINE (2393)) COMMA_SOURCE_FILE_AT_LINE (2393)).boolEnum () ;
      if (kBoolTrue == test_2) {
        var_defaultConstructorName = GALGAS_string::makeEmptyString () ;
      }
      enumerator_95824.gotoNextObject () ;
      if (enumerator_95824.hasCurrentObject ()) {
        bool_1 = GALGAS_bool (kIsNotEqual, var_defaultConstructorName.objectCompare (GALGAS_string::makeEmptyString ())).isValidAndTrue () ;
      }
    }
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mStructTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2401)), GALGAS_typeKindEnum::constructor_structType (SOURCE_FILE_AT_LINE (2402)), var_typedAttributeList, var_attributeMap, var_typedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2410)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2411)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2412)), function_generateDescriptionReaderUtilityMethod (inCompiler COMMA_SOURCE_FILE_AT_LINE (2413)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2414)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2415)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2416)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2417)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2418)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2419)), GALGAS_bool (false), var_enumeratedType, var_defaultConstructorName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2398)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_structDeclarationAST.mSlotID,
                                              categoryMethod_structDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclarationAST_enterInSemanticContext (defineCategoryMethod_structDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@classDeclarationAST enterInSemanticContext'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_classDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                       const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                       const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                       GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_classDeclarationAST * object = (const cPtr_classDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_classDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_uintType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("uint"), var_uintType COMMA_SOURCE_FILE_AT_LINE (2435)) ;
  }
  GALGAS_readerMap var_readerMap ;
  GALGAS_modifierMap var_modifierMap ;
  GALGAS_instanceMethodMap var_instanceMethodMap ;
  GALGAS_typedAttributeList var_inheritedTypedAttributeList ;
  GALGAS_attributeMap var_attributeMap = GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2441)) ;
  GALGAS_unifiedTypeMapProxy var_superClassIndex ;
  GALGAS_bool var_generateHeaderInSeparateFile ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (2445)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_superClassIndex = GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2446)) ;
    {
    routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2447)) ;
    }
    var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2448)) ;
    var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2449)) ;
    var_inheritedTypedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2450)) ;
    var_attributeMap = GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2451)) ;
    var_generateHeaderInSeparateFile = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_98236 (object->mAttribute_mClassFeatureList, kEnumeration_up) ;
    while (enumerator_98236.hasCurrentObject ()) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_98236.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2454)).objectCompare (GALGAS_string ("generatedInSeparateFile"))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_generateHeaderInSeparateFile = GALGAS_bool (true) ;
      }
      enumerator_98236.gotoNextObject () ;
    }
  }else if (kBoolFalse == test_0) {
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mSuperClassName, var_superClassIndex COMMA_SOURCE_FILE_AT_LINE (2459)) ;
    }
    GALGAS_typeKindEnum var_typeKindEnum ;
    GALGAS_readerMap var_inheritedReaderMap ;
    GALGAS_modifierMap var_inheritedModifierMap ;
    GALGAS_instanceMethodMap var_inheritedMethodMap ;
    GALGAS_bool joker_98715_2 ; // Joker input parameter
    GALGAS_unifiedTypeMapProxy joker_98715_1 ; // Joker input parameter
    GALGAS_typedAttributeList joker_98800_2 ; // Joker input parameter
    GALGAS_constructorMap joker_98800_1 ; // Joker input parameter
    GALGAS_classMethodMap joker_98890_10 ; // Joker input parameter
    GALGAS_enumerationDescriptorList joker_98890_9 ; // Joker input parameter
    GALGAS_stringlist joker_98890_8 ; // Joker input parameter
    GALGAS_uint joker_98890_7 ; // Joker input parameter
    GALGAS_unifiedTypeMapProxyAndParameterList joker_98890_6 ; // Joker input parameter
    GALGAS_stringset joker_98890_5 ; // Joker input parameter
    GALGAS_lstringlist joker_98890_4 ; // Joker input parameter
    GALGAS_mapSearchMethodListAST joker_98890_3 ; // Joker input parameter
    GALGAS_mapSearchMethodListAST joker_98890_2 ; // Joker input parameter
    GALGAS_withAccessorMap joker_98890_1 ; // Joker input parameter
    GALGAS_unifiedTypeMapProxy joker_98937_2 ; // Joker input parameter
    GALGAS_string joker_98937_1 ; // Joker input parameter
    ioArgument_ioSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mSuperClassName, joker_98715_2, joker_98715_1, var_typeKindEnum, var_inheritedTypedAttributeList, var_attributeMap, joker_98800_2, joker_98800_1, var_inheritedReaderMap, var_inheritedModifierMap, var_inheritedMethodMap, joker_98890_10, joker_98890_9, joker_98890_8, joker_98890_7, joker_98890_6, joker_98890_5, joker_98890_4, joker_98890_3, joker_98890_2, joker_98890_1, var_generateHeaderInSeparateFile, joker_98937_2, joker_98937_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (2464)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, var_typeKindEnum.objectCompare (GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2479)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mSuperClassName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("the @").operator_concat (object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (2480)) COMMA_SOURCE_FILE_AT_LINE (2480)).operator_concat (GALGAS_string (" should be a class type") COMMA_SOURCE_FILE_AT_LINE (2480)) COMMA_SOURCE_FILE_AT_LINE (2480)) ;
    }
    var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2483)) ;
    cEnumerator_modifierMap enumerator_99224 (var_inheritedModifierMap, kEnumeration_up) ;
    while (enumerator_99224.hasCurrentObject ()) {
      {
      var_modifierMap.modifier_insertKey (enumerator_99224.current_lkey (HERE), enumerator_99224.current_mKind (HERE), enumerator_99224.current_mParameterList (HERE), enumerator_99224.current_mHasCompilerArgument (HERE), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (2490)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2485)) ;
      }
      enumerator_99224.gotoNextObject () ;
    }
    var_readerMap = GALGAS_readerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2495)) ;
    cEnumerator_readerMap enumerator_99550 (var_inheritedReaderMap, kEnumeration_up) ;
    while (enumerator_99550.hasCurrentObject ()) {
      {
      var_readerMap.modifier_insertKey (enumerator_99550.current_lkey (HERE), enumerator_99550.current_mKind (HERE), enumerator_99550.current_mArgumentTypeList (HERE), enumerator_99550.current_mDeclarationLocation (HERE), enumerator_99550.current_mHasCompilerArgument (HERE), enumerator_99550.current_mReturnedType (HERE), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (2504)), enumerator_99550.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2497)) ;
      }
      enumerator_99550.gotoNextObject () ;
    }
    var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2509)) ;
    cEnumerator_instanceMethodMap enumerator_99938 (var_inheritedMethodMap, kEnumeration_up) ;
    while (enumerator_99938.hasCurrentObject ()) {
      {
      var_instanceMethodMap.modifier_insertKey (enumerator_99938.current_lkey (HERE), enumerator_99938.current_mKind (HERE), enumerator_99938.current_mParameterList (HERE), enumerator_99938.current_mDeclarationLocation (HERE), enumerator_99938.current_mHasCompilerArgument (HERE), GALGAS_methodQualifier::constructor_isInherited (SOURCE_FILE_AT_LINE (2517)), enumerator_99938.current_mErrorMessage (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (2511)) ;
      }
      enumerator_99938.gotoNextObject () ;
    }
  }
  GALGAS_unifiedTypeMapProxyAndParameterList var_constructorAttributeTypeList = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2523)) ;
  cEnumerator_typedAttributeList enumerator_100369 (var_inheritedTypedAttributeList, kEnumeration_up) ;
  while (enumerator_100369.hasCurrentObject ()) {
    var_constructorAttributeTypeList.addAssign_operation (enumerator_100369.current_mAttributeTypeProxy (HERE), enumerator_100369.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2525)) ;
    enumerator_100369.gotoNextObject () ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_100496 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_100496.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_100496.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2529)) ;
    }
    var_constructorAttributeTypeList.addAssign_operation (var_attributeTypeIndex, enumerator_100496.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2530)) ;
    {
    var_attributeMap.modifier_insertKey (enumerator_100496.current_mAttributeName (HERE), var_attributeTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2531)) ;
    }
    const enumGalgasBool test_4 = var_readerMap.reader_hasKey (enumerator_100496.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2532)) COMMA_SOURCE_FILE_AT_LINE (2532)).boolEnum () ;
    if (kBoolTrue == test_4) {
      GALGAS_location location_5 (enumerator_100496.current_mAttributeName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, GALGAS_string ("'").operator_concat (enumerator_100496.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2533)) COMMA_SOURCE_FILE_AT_LINE (2533)).operator_concat (GALGAS_string ("' is the name of a prefefined or a user defined reader") COMMA_SOURCE_FILE_AT_LINE (2533)) COMMA_SOURCE_FILE_AT_LINE (2533)) ;
    }
    enumerator_100496.gotoNextObject () ;
  }
  GALGAS_unifiedTypeMapProxy var_classIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mClassTypeName, var_classIndex COMMA_SOURCE_FILE_AT_LINE (2537)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2543)) ;
  const enumGalgasBool test_6 = object->mAttribute_mIsAbstract.operator_not (SOURCE_FILE_AT_LINE (2544)).boolEnum () ;
  if (kBoolTrue == test_6) {
    {
    var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("new"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2546)), var_constructorAttributeTypeList, GALGAS_bool (false), var_classIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2545)) ;
    }
  }
  GALGAS_typedAttributeList var_currentClassTypedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2553)) ;
  GALGAS_typedAttributeList var_allTypedAttributeList = var_inheritedTypedAttributeList ;
  cEnumerator_attributeInCollectionListAST enumerator_101596 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_101596.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_attributeTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_101596.current_mAttributeTypeName (HERE), var_attributeTypeIndex COMMA_SOURCE_FILE_AT_LINE (2557)) ;
    }
    GALGAS_bool var_hasSetter = GALGAS_bool (false) ;
    GALGAS_bool var_hasGetter = GALGAS_bool (true) ;
    cEnumerator_lstringlist enumerator_101840 (enumerator_101596.current_mFeatureList (HERE), kEnumeration_up) ;
    while (enumerator_101840.hasCurrentObject ()) {
      const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, enumerator_101840.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2561)).objectCompare (GALGAS_string ("setter"))).boolEnum () ;
      if (kBoolTrue == test_7) {
        var_hasSetter = GALGAS_bool (true) ;
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_8 = GALGAS_bool (kIsEqual, enumerator_101840.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (2563)).objectCompare (GALGAS_string ("nogetter"))).boolEnum () ;
        if (kBoolTrue == test_8) {
          var_hasGetter = GALGAS_bool (false) ;
        }
      }
      enumerator_101840.gotoNextObject () ;
    }
    var_currentClassTypedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_101596.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (2567)) ;
    var_allTypedAttributeList.addAssign_operation (var_attributeTypeIndex, enumerator_101596.current_mAttributeName (HERE), var_hasSetter, var_hasGetter COMMA_SOURCE_FILE_AT_LINE (2568)) ;
    const enumGalgasBool test_9 = var_hasGetter.boolEnum () ;
    if (kBoolTrue == test_9) {
      {
      var_readerMap.modifier_insertKey (enumerator_101596.current_mAttributeName (HERE), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2572)), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2573)), inCompiler->here (), GALGAS_bool (false), var_attributeTypeIndex, GALGAS_methodQualifier::constructor_isBasic (SOURCE_FILE_AT_LINE (2577)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2570)) ;
      }
    }
    enumerator_101596.gotoNextObject () ;
  }
  cEnumerator_typedAttributeList enumerator_102908 (var_currentClassTypedAttributeList, kEnumeration_up) ;
  while (enumerator_102908.hasCurrentObject ()) {
    const enumGalgasBool test_10 = enumerator_102908.current_mHasSetter (HERE).boolEnum () ;
    if (kBoolTrue == test_10) {
      {
      var_modifierMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("set").operator_concat (enumerator_102908.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (2592)).reader_stringByCapitalizingFirstCharacter (SOURCE_FILE_AT_LINE (2592)) COMMA_SOURCE_FILE_AT_LINE (2592)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2592)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2593)), GALGAS_formalParameterSignature::constructor_listWithValue (enumerator_102908.current_mAttributeTypeProxy (HERE), GALGAS_formalArgumentPassingModeAST::constructor_argumentIn (SOURCE_FILE_AT_LINE (2594)), enumerator_102908.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2594)), GALGAS_bool (false), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2596)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2591)) ;
      }
    }
    enumerator_102908.gotoNextObject () ;
  }
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mClassTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2602)) ;
  }
  GALGAS_string var_defaultConstructorName ;
  const enumGalgasBool test_11 = var_superClassIndex.reader_isNull (SOURCE_FILE_AT_LINE (2614)).boolEnum () ;
  if (kBoolTrue == test_11) {
    var_defaultConstructorName = GALGAS_string ("default") ;
  }else if (kBoolFalse == test_11) {
    var_defaultConstructorName = var_superClassIndex.reader_mDefaultConstructorName (inCompiler COMMA_SOURCE_FILE_AT_LINE (2617)) ;
  }
  cEnumerator_typedAttributeList enumerator_103950 (var_currentClassTypedAttributeList, kEnumeration_up) ;
  bool bool_12 = GALGAS_bool (kIsNotEqual, var_defaultConstructorName.objectCompare (GALGAS_string::makeEmptyString ())).isValidAndTrue () ;
  if (enumerator_103950.hasCurrentObject () && bool_12) {
    while (enumerator_103950.hasCurrentObject () && bool_12) {
      const enumGalgasBool test_13 = GALGAS_bool (kIsEqual, enumerator_103950.current_mAttributeTypeProxy (HERE).reader_mDefaultConstructorName (inCompiler COMMA_SOURCE_FILE_AT_LINE (2620)).objectCompare (GALGAS_string::makeEmptyString ())).operator_or (enumerator_103950.current_mAttributeTypeProxy (HERE).reader_mIsConcrete (inCompiler COMMA_SOURCE_FILE_AT_LINE (2620)).operator_not (SOURCE_FILE_AT_LINE (2620)) COMMA_SOURCE_FILE_AT_LINE (2620)).boolEnum () ;
      if (kBoolTrue == test_13) {
        var_defaultConstructorName = GALGAS_string::makeEmptyString () ;
      }
      enumerator_103950.gotoNextObject () ;
      if (enumerator_103950.hasCurrentObject ()) {
        bool_12 = GALGAS_bool (kIsNotEqual, var_defaultConstructorName.objectCompare (GALGAS_string::makeEmptyString ())).isValidAndTrue () ;
      }
    }
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mClassTypeName, object->mAttribute_mIsAbstract.operator_not (SOURCE_FILE_AT_LINE (2627)), var_superClassIndex, GALGAS_typeKindEnum::constructor_classType (SOURCE_FILE_AT_LINE (2629)), var_allTypedAttributeList, var_attributeMap, var_currentClassTypedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2637)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2638)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2639)), GALGAS_uint ((uint32_t) 0U), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2641)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2642)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2643)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2644)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2645)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2646)), var_generateHeaderInSeparateFile, GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2648)), var_defaultConstructorName, inCompiler COMMA_SOURCE_FILE_AT_LINE (2625)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_classDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_classDeclarationAST.mSlotID,
                                              categoryMethod_classDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_classDeclarationAST_enterInSemanticContext (defineCategoryMethod_classDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@externRoutineDeclarationAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_externRoutineDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                               const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                               const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                               const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externRoutineDeclarationAST * object = (const cPtr_externRoutineDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externRoutineDeclarationAST) ;
  GALGAS_formalParameterSignature var_routineSignature = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2662)) ;
  cEnumerator_formalParameterListAST enumerator_105613 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_105613.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_105613.current_mFormalArgumentTypeName (HERE), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (2665)) ;
    }
    var_routineSignature.addAssign_operation (var_parameterTypeIndex, enumerator_105613.current_mFormalArgumentPassingMode (HERE), enumerator_105613.current_mFormalArgumentName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2666)) ;
    enumerator_105613.gotoNextObject () ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mRoutineMap.modifier_insertKey (object->mAttribute_mRoutineName, var_routineSignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (2669)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_externRoutineDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_externRoutineDeclarationAST.mSlotID,
                                              categoryMethod_externRoutineDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externRoutineDeclarationAST_enterInSemanticContext (defineCategoryMethod_externRoutineDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@externFunctionDeclarationAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_externFunctionDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                                const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                                const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                                const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                                GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externFunctionDeclarationAST * object = (const cPtr_externFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externFunctionDeclarationAST) ;
  GALGAS_unifiedTypeMapProxyList var_functionSignature = GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2681)) ;
  cEnumerator_formalInputParameterListAST enumerator_106621 (object->mAttribute_mFormalArgumentList, kEnumeration_up) ;
  while (enumerator_106621.hasCurrentObject ()) {
    GALGAS_unifiedTypeMapProxy var_parameterTypeIndex ;
    {
    GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, enumerator_106621.current_mFormalArgumentTypeName (HERE), var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (2684)) ;
    }
    var_functionSignature.addAssign_operation (var_parameterTypeIndex COMMA_SOURCE_FILE_AT_LINE (2685)) ;
    enumerator_106621.gotoNextObject () ;
  }
  GALGAS_unifiedTypeMapProxy var_resultTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mResultTypeName, var_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (2689)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mFunctionMap.modifier_insertKey (object->mAttribute_mFunctionName, var_functionSignature, var_resultTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2691)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_externFunctionDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_externFunctionDeclarationAST.mSlotID,
                                              categoryMethod_externFunctionDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externFunctionDeclarationAST_enterInSemanticContext (defineCategoryMethod_externFunctionDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@onceFunctionDeclarationAST enterInSemanticContext'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_onceFunctionDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                              const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                              const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                              const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                              GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_onceFunctionDeclarationAST * object = (const cPtr_onceFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_onceFunctionDeclarationAST) ;
  GALGAS_unifiedTypeMapProxy var_resultTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mResultTypeName, var_resultTypeIndex COMMA_SOURCE_FILE_AT_LINE (2703)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mFunctionMap.modifier_insertKey (object->mAttribute_mFunctionName, GALGAS_unifiedTypeMapProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (2705)), var_resultTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2705)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_onceFunctionDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_onceFunctionDeclarationAST.mSlotID,
                                              categoryMethod_onceFunctionDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_onceFunctionDeclarationAST_enterInSemanticContext (defineCategoryMethod_onceFunctionDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@arrayDeclarationAST enterInSemanticContext'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_arrayDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                       const GALGAS_categoryMethodMapForBuildingContext /* constinArgument_inCategoryMethodMapForBuildingContext */,
                                                                       const GALGAS_categoryReaderMapForBuildingContext /* constinArgument_inCategoryReaderMapForBuildingContext */,
                                                                       const GALGAS_categoryModifierMapForBuildingContext /* constinArgument_inCategoryModifierMapForBuildingContext */,
                                                                       GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_arrayDeclarationAST * object = (const cPtr_arrayDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_arrayDeclarationAST) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2717)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mDimension.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the dimension of an array should be > 0") COMMA_SOURCE_FILE_AT_LINE (2718)) ;
  }
  GALGAS_unifiedTypeMapProxy var_arrayTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mArrayTypeName, var_arrayTypeIndex COMMA_SOURCE_FILE_AT_LINE (2722)) ;
  }
  GALGAS_unifiedTypeMapProxy var_elementTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mElementTypeName, var_elementTypeIndex COMMA_SOURCE_FILE_AT_LINE (2725)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2727)) ;
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2728)) ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2729)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2730)) ;
  GALGAS_unifiedTypeMapProxy var_boolType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("bool"), var_boolType COMMA_SOURCE_FILE_AT_LINE (2733)) ;
  }
  GALGAS_unifiedTypeMapProxy var_uintType ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("uint"), var_uintType COMMA_SOURCE_FILE_AT_LINE (2736)) ;
  }
  GALGAS_unifiedTypeMapProxyAndParameterList var_uintArgs = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2738)) ;
  GALGAS_uint var_idx = GALGAS_uint ((uint32_t) 0U) ;
  if (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2740)).isValid ()) {
    uint32_t variant_109378 = object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2740)).uintValue () ;
    bool loop_109378 = true ;
    while (loop_109378) {
      loop_109378 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2740)))).isValid () ;
      if (loop_109378) {
        loop_109378 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2740)))).boolValue () ;
      }
      if (loop_109378 && (0 == variant_109378)) {
        loop_109378 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2740)) ;
      }
      if (loop_109378) {
        variant_109378 -- ;
        var_uintArgs.addAssign_operation (var_uintType, GALGAS_string ("inSize").operator_concat (var_idx.reader_string (SOURCE_FILE_AT_LINE (2741)) COMMA_SOURCE_FILE_AT_LINE (2741)) COMMA_SOURCE_FILE_AT_LINE (2741)) ;
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (2742)) ;
      }
    }
  }
  {
  var_constructorMap.modifier_insertKey (GALGAS_lstring::constructor_new (GALGAS_string ("new"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2746)), var_uintArgs, GALGAS_bool (false), var_arrayTypeIndex, inCompiler COMMA_SOURCE_FILE_AT_LINE (2745)) ;
  }
  {
  routine_enterBaseReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("axisCount"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2752)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("sizeForAxis"), GALGAS_string ("uint"), GALGAS_string ("inAxisIndex"), GALGAS_string ("uint"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (2753)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("rangeForAxis"), GALGAS_string ("uint"), GALGAS_string ("inAxisIndex"), GALGAS_string ("range"), GALGAS_bool (true), inCompiler COMMA_SOURCE_FILE_AT_LINE (2754)) ;
  }
  {
  var_readerMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("isValueValidAtIndex"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2756)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2757)), var_uintArgs, inCompiler->here (), GALGAS_bool (true), var_boolType, GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2762)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2755)) ;
  }
  {
  var_readerMap.modifier_insertOrReplace (GALGAS_lstring::constructor_new (GALGAS_string ("valueAtIndex"), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2766)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2767)), var_uintArgs, inCompiler->here (), GALGAS_bool (true), var_elementTypeIndex, GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2772)), GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (2765)) ;
  }
  GALGAS_formalParameterSignature var_modifierFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2776)) ;
  var_modifierFormalArgumentList.addAssign_operation (var_elementTypeIndex, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2777)), GALGAS_string ("InValue") COMMA_SOURCE_FILE_AT_LINE (2777)) ;
  var_idx = GALGAS_uint ((uint32_t) 0U) ;
  if (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2779)).isValid ()) {
    uint32_t variant_110690 = object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2779)).uintValue () ;
    bool loop_110690 = true ;
    while (loop_110690) {
      loop_110690 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2779)))).isValid () ;
      if (loop_110690) {
        loop_110690 = GALGAS_bool (kIsStrictInf, var_idx.objectCompare (object->mAttribute_mDimension.reader_uint (SOURCE_FILE_AT_LINE (2779)))).boolValue () ;
      }
      if (loop_110690 && (0 == variant_110690)) {
        loop_110690 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE_AT_LINE (2779)) ;
      }
      if (loop_110690) {
        variant_110690 -- ;
        var_modifierFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2780)), GALGAS_string ("inIndex").operator_concat (var_idx.reader_string (SOURCE_FILE_AT_LINE (2780)) COMMA_SOURCE_FILE_AT_LINE (2780)) COMMA_SOURCE_FILE_AT_LINE (2780)) ;
        var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (2781)) ;
      }
    }
  }
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("setValueAtIndex").reader_nowhere (SOURCE_FILE_AT_LINE (2784)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2785)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2788)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2783)) ;
  }
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("forceValueAtIndex").reader_nowhere (SOURCE_FILE_AT_LINE (2792)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2793)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2796)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2791)) ;
  }
  {
  GALGAS_unifiedTypeMapProxy joker_111305_3 ; // Joker input parameter
  GALGAS_formalArgumentPassingModeAST joker_111305_2 ; // Joker input parameter
  GALGAS_string joker_111305_1 ; // Joker input parameter
  var_modifierFormalArgumentList.modifier_popFirst (joker_111305_3, joker_111305_2, joker_111305_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (2799)) ;
  }
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("invalidateValueAtIndex").reader_nowhere (SOURCE_FILE_AT_LINE (2801)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2802)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2805)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2800)) ;
  }
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("setSize").reader_nowhere (SOURCE_FILE_AT_LINE (2809)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2810)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2813)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2808)) ;
  }
  var_modifierFormalArgumentList = GALGAS_formalParameterSignature::constructor_emptyList (SOURCE_FILE_AT_LINE (2816)) ;
  var_modifierFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2817)), GALGAS_string ("inSize") COMMA_SOURCE_FILE_AT_LINE (2817)) ;
  var_modifierFormalArgumentList.addAssign_operation (var_uintType, GALGAS_formalArgumentPassingModeAST::constructor_argumentConstantIn (SOURCE_FILE_AT_LINE (2818)), GALGAS_string ("inAxisIndex") COMMA_SOURCE_FILE_AT_LINE (2818)) ;
  {
  var_modifierMap.modifier_insertKey (GALGAS_string ("setSizeForAxis").reader_nowhere (SOURCE_FILE_AT_LINE (2820)), GALGAS_methodKind::constructor_definedAsMember (SOURCE_FILE_AT_LINE (2821)), var_modifierFormalArgumentList, GALGAS_bool (true), GALGAS_methodQualifier::constructor_isBasicFinal (SOURCE_FILE_AT_LINE (2824)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2819)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mArrayTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2831)), GALGAS_typeKindEnum::constructor_listMapType (SOURCE_FILE_AT_LINE (2832)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2833)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2834)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2835)), var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2840)), GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2841)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2842)), GALGAS_uint ((uint32_t) 0U), GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2844)), GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2845)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2846)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2847)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2848)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2849)), GALGAS_bool (false), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2851)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (2828)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_arrayDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_arrayDeclarationAST.mSlotID,
                                              categoryMethod_arrayDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_arrayDeclarationAST_enterInSemanticContext (defineCategoryMethod_arrayDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@listmapDeclarationAST enterInSemanticContext'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_listmapDeclarationAST_enterInSemanticContext (const cPtr_semanticDeclarationAST * inObject,
                                                                         const GALGAS_categoryMethodMapForBuildingContext constinArgument_inCategoryMethodMapForBuildingContext,
                                                                         const GALGAS_categoryReaderMapForBuildingContext constinArgument_inCategoryReaderMapForBuildingContext,
                                                                         const GALGAS_categoryModifierMapForBuildingContext constinArgument_inCategoryModifierMapForBuildingContext,
                                                                         GALGAS_semanticContext & ioArgument_ioSemanticContext,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listmapDeclarationAST) ;
  GALGAS_typeKindEnum var_typeKindEnum ;
  GALGAS_typedAttributeList var_listTypedAttributeList ;
  GALGAS_bool joker_113727_2 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_113727_1 ; // Joker input parameter
  GALGAS_attributeMap joker_113815_19 ; // Joker input parameter
  GALGAS_typedAttributeList joker_113815_18 ; // Joker input parameter
  GALGAS_constructorMap joker_113815_17 ; // Joker input parameter
  GALGAS_readerMap joker_113815_16 ; // Joker input parameter
  GALGAS_modifierMap joker_113815_15 ; // Joker input parameter
  GALGAS_instanceMethodMap joker_113815_14 ; // Joker input parameter
  GALGAS_classMethodMap joker_113815_13 ; // Joker input parameter
  GALGAS_enumerationDescriptorList joker_113815_12 ; // Joker input parameter
  GALGAS_stringlist joker_113815_11 ; // Joker input parameter
  GALGAS_uint joker_113815_10 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxyAndParameterList joker_113815_9 ; // Joker input parameter
  GALGAS_stringset joker_113815_8 ; // Joker input parameter
  GALGAS_lstringlist joker_113815_7 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_113815_6 ; // Joker input parameter
  GALGAS_mapSearchMethodListAST joker_113815_5 ; // Joker input parameter
  GALGAS_withAccessorMap joker_113815_4 ; // Joker input parameter
  GALGAS_bool joker_113815_3 ; // Joker input parameter
  GALGAS_unifiedTypeMapProxy joker_113815_2 ; // Joker input parameter
  GALGAS_string joker_113815_1 ; // Joker input parameter
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.method_searchKey (object->mAttribute_mAssociatedListTypeName, joker_113727_2, joker_113727_1, var_typeKindEnum, var_listTypedAttributeList, joker_113815_19, joker_113815_18, joker_113815_17, joker_113815_16, joker_113815_15, joker_113815_14, joker_113815_13, joker_113815_12, joker_113815_11, joker_113815_10, joker_113815_9, joker_113815_8, joker_113815_7, joker_113815_6, joker_113815_5, joker_113815_4, joker_113815_3, joker_113815_2, joker_113815_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (2866)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_typeKindEnum.objectCompare (GALGAS_typeKindEnum::constructor_listType (SOURCE_FILE_AT_LINE (2873)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mAssociatedListTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '@").operator_concat (object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2874)) COMMA_SOURCE_FILE_AT_LINE (2874)).operator_concat (GALGAS_string ("' type should be a list type") COMMA_SOURCE_FILE_AT_LINE (2874)) COMMA_SOURCE_FILE_AT_LINE (2874)) ;
    var_listTypedAttributeList = GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2875)) ;
  }
  GALGAS_constructorMap var_constructorMap = GALGAS_constructorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2878)) ;
  GALGAS_readerMap var_readerMap ;
  {
  routine_commonReaderMapForAllTypes (ioArgument_ioSemanticContext.mAttribute_mTypeMap, var_readerMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2879)) ;
  }
  GALGAS_modifierMap var_modifierMap = GALGAS_modifierMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2880)) ;
  GALGAS_instanceMethodMap var_instanceMethodMap = GALGAS_instanceMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2881)) ;
  GALGAS_unifiedTypeMapProxy var_associatedListTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mAssociatedListTypeName, var_associatedListTypeIndex COMMA_SOURCE_FILE_AT_LINE (2884)) ;
  }
  GALGAS_unifiedTypeMapProxy var_currentTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, object->mAttribute_mListmapTypeName, var_currentTypeIndex COMMA_SOURCE_FILE_AT_LINE (2887)) ;
  }
  GALGAS_unifiedTypeMapProxy var_stringTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxyFromString (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("string"), var_stringTypeIndex COMMA_SOURCE_FILE_AT_LINE (2890)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("count"), GALGAS_string ("uint"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2892)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("allKeys"), GALGAS_string ("stringset"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2893)) ;
  }
  {
  routine_enterInheritedReaderWithoutArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("keyList"), GALGAS_string ("stringlist"), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2894)) ;
  }
  {
  routine_enterBaseReaderWithArgument (var_readerMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("listForKey"), GALGAS_string ("string"), GALGAS_string ("inKey"), object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (2895)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2895)) ;
  }
  {
  routine_enterConstructorWithoutArgument (var_constructorMap, ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_string ("emptyMap"), object->mAttribute_mListmapTypeName.reader_string (SOURCE_FILE_AT_LINE (2897)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (2897)) ;
  }
  GALGAS_enumerationDescriptorList var_enumeratorDescriptor = GALGAS_enumerationDescriptorList::constructor_emptyList (SOURCE_FILE_AT_LINE (2899)) ;
  var_enumeratorDescriptor.addAssign_operation (var_stringTypeIndex, GALGAS_string ("key") COMMA_SOURCE_FILE_AT_LINE (2900)) ;
  var_enumeratorDescriptor.addAssign_operation (var_associatedListTypeIndex, GALGAS_string ("mList") COMMA_SOURCE_FILE_AT_LINE (2901)) ;
  GALGAS_unifiedTypeMapProxyAndParameterList var_addAssignOperatorDescription = GALGAS_unifiedTypeMapProxyAndParameterList::constructor_emptyList (SOURCE_FILE_AT_LINE (2903)) ;
  var_addAssignOperatorDescription.addAssign_operation (var_stringTypeIndex, GALGAS_string ("inKey") COMMA_SOURCE_FILE_AT_LINE (2904)) ;
  cEnumerator_typedAttributeList enumerator_115886 (var_listTypedAttributeList, kEnumeration_up) ;
  while (enumerator_115886.hasCurrentObject ()) {
    var_addAssignOperatorDescription.addAssign_operation (enumerator_115886.current_mAttributeTypeProxy (HERE), enumerator_115886.current_mAttributeName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (2906)) ;
    enumerator_115886.gotoNextObject () ;
  }
  GALGAS_stringlist var_enumerationVariants = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2909)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("up") COMMA_SOURCE_FILE_AT_LINE (2910)) ;
  var_enumerationVariants.addAssign_operation (GALGAS_string ("down") COMMA_SOURCE_FILE_AT_LINE (2911)) ;
  {
  routine_addCategories (constinArgument_inCategoryMethodMapForBuildingContext, constinArgument_inCategoryReaderMapForBuildingContext, constinArgument_inCategoryModifierMapForBuildingContext, ioArgument_ioSemanticContext, object->mAttribute_mListmapTypeName, var_readerMap, var_modifierMap, var_instanceMethodMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (2913)) ;
  }
  GALGAS_unifiedTypeMapProxy var_enumeratedTypeIndex ;
  {
  GALGAS_unifiedTypeMapProxy::class_method_makeProxy (ioArgument_ioSemanticContext.mAttribute_mTypeMap, GALGAS_lstring::constructor_new (object->mAttribute_mListmapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (2927)) COMMA_SOURCE_FILE_AT_LINE (2927)), object->mAttribute_mListmapTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (2927)), var_enumeratedTypeIndex COMMA_SOURCE_FILE_AT_LINE (2925)) ;
  }
  {
  ioArgument_ioSemanticContext.mAttribute_mTypeMap.modifier_insertKey (object->mAttribute_mListmapTypeName, GALGAS_bool (true), GALGAS_unifiedTypeMapProxy::constructor_null (SOURCE_FILE_AT_LINE (2934)), GALGAS_typeKindEnum::constructor_listMapType (SOURCE_FILE_AT_LINE (2935)), GALGAS_typedAttributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (2936)), GALGAS_attributeMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2937)), var_listTypedAttributeList, var_constructorMap, var_readerMap, var_modifierMap, var_instanceMethodMap, GALGAS_classMethodMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2943)), var_enumeratorDescriptor, var_enumerationVariants, function_doNotGenererateObjectCompare (inCompiler COMMA_SOURCE_FILE_AT_LINE (2946)), var_addAssignOperatorDescription, GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (2948)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (2949)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2950)), GALGAS_mapSearchMethodListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (2951)), GALGAS_withAccessorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (2952)), GALGAS_bool (false), var_enumeratedTypeIndex, GALGAS_string ("emptyMap"), inCompiler COMMA_SOURCE_FILE_AT_LINE (2931)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_listmapDeclarationAST_enterInSemanticContext (void) {
  enterCategoryMethod_enterInSemanticContext (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                              categoryMethod_listmapDeclarationAST_enterInSemanticContext) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listmapDeclarationAST_enterInSemanticContext (defineCategoryMethod_listmapDeclarationAST_enterInSemanticContext, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Abstract category method '@semanticDeclarationAST enterDeclarationInGraph'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_enterDeclarationInGraph> gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_enterDeclarationInGraph (const int32_t inClassIndex,
                                                  categoryMethodSignature_semanticDeclarationAST_enterDeclarationInGraph inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_enterDeclarationInGraph (void) {
  gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_enterDeclarationInGraph (NULL,
                                                                           freeCategoryMethod_semanticDeclarationAST_enterDeclarationInGraph) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                 GALGAS_semanticTypePrecedenceGraph & io_ioSemanticTypePrecedenceGraph,
                                                 GALGAS_categoryMethodMapForBuildingContext & io_ioCategoryMethodMapForBuildingContext,
                                                 GALGAS_categoryReaderMapForBuildingContext & io_ioCategoryReaderMapForBuildingContext,
                                                 GALGAS_categoryModifierMapForBuildingContext & io_ioCategoryModifierMapForBuildingContext,
                                                 GALGAS_semanticDeclarationListAST & io_ioCategoryOverrideDefinitionList,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_enterDeclarationInGraph f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_enterDeclarationInGraph.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioSemanticTypePrecedenceGraph, io_ioCategoryMethodMapForBuildingContext, io_ioCategoryReaderMapForBuildingContext, io_ioCategoryModifierMapForBuildingContext, io_ioCategoryOverrideDefinitionList, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@predefinedTypeAST enterDeclarationInGraph'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_predefinedTypeAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                      GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                      GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                      GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                      GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                      GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_predefinedTypeAST * object = (const cPtr_predefinedTypeAST *) inObject ;
  macroValidSharedObject (object, cPtr_predefinedTypeAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mPredefinedTypeName COMMA_SOURCE_FILE_AT_LINE (2988)), inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (2988)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_predefinedTypeAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (2989)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_predefinedTypeAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_predefinedTypeAST.mSlotID,
                                               categoryMethod_predefinedTypeAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_predefinedTypeAST_enterDeclarationInGraph (defineCategoryMethod_predefinedTypeAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@classDeclarationAST enterDeclarationInGraph'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_classDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                        GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_classDeclarationAST * object = (const cPtr_classDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_classDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mClassTypeName.reader_string (SOURCE_FILE_AT_LINE (3001)) COMMA_SOURCE_FILE_AT_LINE (3001)), object->mAttribute_mClassTypeName.reader_location (SOURCE_FILE_AT_LINE (3001)) COMMA_SOURCE_FILE_AT_LINE (3001)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_classDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3002)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (3004)) COMMA_SOURCE_FILE_AT_LINE (3004)), object->mAttribute_mSuperClassName.reader_location (SOURCE_FILE_AT_LINE (3004)) COMMA_SOURCE_FILE_AT_LINE (3004)) COMMA_SOURCE_FILE_AT_LINE (3004)) ;
    }
  }
  cEnumerator_attributeInCollectionListAST enumerator_120148 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_120148.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_120148.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (3007)) COMMA_SOURCE_FILE_AT_LINE (3007)), enumerator_120148.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (3007)) COMMA_SOURCE_FILE_AT_LINE (3007)) COMMA_SOURCE_FILE_AT_LINE (3007)) ;
    }
    enumerator_120148.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_classDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_classDeclarationAST.mSlotID,
                                               categoryMethod_classDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_classDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_classDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@listDeclarationAST enterDeclarationInGraph'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_listDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                       GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                       GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                       GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                       GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                       GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mListTypeName.reader_string (SOURCE_FILE_AT_LINE (3020)) COMMA_SOURCE_FILE_AT_LINE (3020)), object->mAttribute_mListTypeName.reader_location (SOURCE_FILE_AT_LINE (3020)) COMMA_SOURCE_FILE_AT_LINE (3020)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_listDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3021)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_121010 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_121010.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_noteNode (GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_121010.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (3023)) COMMA_SOURCE_FILE_AT_LINE (3023)), enumerator_121010.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (3023)) COMMA_SOURCE_FILE_AT_LINE (3023)) COMMA_SOURCE_FILE_AT_LINE (3023)) ;
    }
    enumerator_121010.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_listDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                               categoryMethod_listDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_listDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@structDeclarationAST enterDeclarationInGraph'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_structDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                         GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                         GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                         GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                         GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                         GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structDeclarationAST * object = (const cPtr_structDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_structDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mStructTypeName.reader_string (SOURCE_FILE_AT_LINE (3036)) COMMA_SOURCE_FILE_AT_LINE (3036)), object->mAttribute_mStructTypeName.reader_location (SOURCE_FILE_AT_LINE (3036)) COMMA_SOURCE_FILE_AT_LINE (3036)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_structDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3037)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_121874 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_121874.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_121874.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (3039)) COMMA_SOURCE_FILE_AT_LINE (3039)), enumerator_121874.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (3039)) COMMA_SOURCE_FILE_AT_LINE (3039)) COMMA_SOURCE_FILE_AT_LINE (3039)) ;
    }
    enumerator_121874.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_structDeclarationAST.mSlotID,
                                               categoryMethod_structDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_structDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@enumDeclarationAST enterDeclarationInGraph'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_enumDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                       GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                       GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                       GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                       GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                       GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_enumDeclarationAST * object = (const cPtr_enumDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_enumDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (3052)) COMMA_SOURCE_FILE_AT_LINE (3052)), object->mAttribute_mEnumTypeName.reader_location (SOURCE_FILE_AT_LINE (3052)) COMMA_SOURCE_FILE_AT_LINE (3052)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_enumDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3053)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_enumDeclarationAST.mSlotID,
                                               categoryMethod_enumDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_enumDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@sortedListDeclarationAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_sortedListDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                             GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                             GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                             GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                             GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_sortedListDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mSortedListTypeName.reader_string (SOURCE_FILE_AT_LINE (3065)) COMMA_SOURCE_FILE_AT_LINE (3065)), object->mAttribute_mSortedListTypeName.reader_location (SOURCE_FILE_AT_LINE (3065)) COMMA_SOURCE_FILE_AT_LINE (3065)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_sortedListDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3066)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_123446 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_123446.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_noteNode (GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_123446.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (3068)) COMMA_SOURCE_FILE_AT_LINE (3068)), enumerator_123446.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (3068)) COMMA_SOURCE_FILE_AT_LINE (3068)) COMMA_SOURCE_FILE_AT_LINE (3068)) ;
    }
    enumerator_123446.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_sortedListDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                               categoryMethod_sortedListDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_sortedListDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_sortedListDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@arrayDeclarationAST enterDeclarationInGraph'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_arrayDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                        GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_arrayDeclarationAST * object = (const cPtr_arrayDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_arrayDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mArrayTypeName.reader_string (SOURCE_FILE_AT_LINE (3081)) COMMA_SOURCE_FILE_AT_LINE (3081)), object->mAttribute_mArrayTypeName.reader_location (SOURCE_FILE_AT_LINE (3081)) COMMA_SOURCE_FILE_AT_LINE (3081)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_arrayDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3082)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mElementTypeName.reader_string (SOURCE_FILE_AT_LINE (3083)) COMMA_SOURCE_FILE_AT_LINE (3083)), object->mAttribute_mElementTypeName.reader_location (SOURCE_FILE_AT_LINE (3083)) COMMA_SOURCE_FILE_AT_LINE (3083)) COMMA_SOURCE_FILE_AT_LINE (3083)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_arrayDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_arrayDeclarationAST.mSlotID,
                                               categoryMethod_arrayDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_arrayDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_arrayDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@listmapDeclarationAST enterDeclarationInGraph' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_listmapDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                          GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                          GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                          GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                          GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                          GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listmapDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mListmapTypeName.reader_string (SOURCE_FILE_AT_LINE (3095)) COMMA_SOURCE_FILE_AT_LINE (3095)), object->mAttribute_mListmapTypeName.reader_location (SOURCE_FILE_AT_LINE (3095)) COMMA_SOURCE_FILE_AT_LINE (3095)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_listmapDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3096)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (3097)) COMMA_SOURCE_FILE_AT_LINE (3097)), object->mAttribute_mAssociatedListTypeName.reader_location (SOURCE_FILE_AT_LINE (3097)) COMMA_SOURCE_FILE_AT_LINE (3097)) COMMA_SOURCE_FILE_AT_LINE (3097)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_listmapDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                               categoryMethod_listmapDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listmapDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_listmapDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@mapDeclarationAST enterDeclarationInGraph'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_mapDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                      GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                      GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                      GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                      GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                      GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (3109)) COMMA_SOURCE_FILE_AT_LINE (3109)), object->mAttribute_mMapTypeName.reader_location (SOURCE_FILE_AT_LINE (3109)) COMMA_SOURCE_FILE_AT_LINE (3109)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_mapDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3110)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_125951 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_125951.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_noteNode (GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_125951.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (3112)) COMMA_SOURCE_FILE_AT_LINE (3112)), enumerator_125951.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (3112)) COMMA_SOURCE_FILE_AT_LINE (3112)) COMMA_SOURCE_FILE_AT_LINE (3112)) ;
    }
    enumerator_125951.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_mapDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                               categoryMethod_mapDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_mapDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@uniqueMapDeclarationAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_uniqueMapDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                            GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                            GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                            GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                            GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                            GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_uniqueMapDeclarationAST * object = (const cPtr_uniqueMapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_uniqueMapDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mMapTypeName.reader_string (SOURCE_FILE_AT_LINE (3125)) COMMA_SOURCE_FILE_AT_LINE (3125)), object->mAttribute_mMapTypeName.reader_location (SOURCE_FILE_AT_LINE (3125)) COMMA_SOURCE_FILE_AT_LINE (3125)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_uniqueMapDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3126)) ;
  }
  cEnumerator_attributeInCollectionListAST enumerator_126812 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_126812.hasCurrentObject ()) {
    {
    ioArgument_ioSemanticTypePrecedenceGraph.modifier_noteNode (GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (enumerator_126812.current_mAttributeTypeName (HERE).reader_string (SOURCE_FILE_AT_LINE (3128)) COMMA_SOURCE_FILE_AT_LINE (3128)), enumerator_126812.current_mAttributeTypeName (HERE).reader_location (SOURCE_FILE_AT_LINE (3128)) COMMA_SOURCE_FILE_AT_LINE (3128)) COMMA_SOURCE_FILE_AT_LINE (3128)) ;
    }
    enumerator_126812.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_uniqueMapDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_uniqueMapDeclarationAST.mSlotID,
                                               categoryMethod_uniqueMapDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_uniqueMapDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_uniqueMapDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@mapProxyDeclarationAST enterDeclarationInGraph' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_mapProxyDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                           GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                           GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                           GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                           GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                           GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapProxyDeclarationAST * object = (const cPtr_mapProxyDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapProxyDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mMapProxyTypeName.reader_string (SOURCE_FILE_AT_LINE (3141)) COMMA_SOURCE_FILE_AT_LINE (3141)), object->mAttribute_mMapProxyTypeName.reader_location (SOURCE_FILE_AT_LINE (3141)) COMMA_SOURCE_FILE_AT_LINE (3141)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_mapProxyDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3142)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mAssociatedMapTypeName.reader_string (SOURCE_FILE_AT_LINE (3143)) COMMA_SOURCE_FILE_AT_LINE (3143)), object->mAttribute_mAssociatedMapTypeName.reader_location (SOURCE_FILE_AT_LINE (3143)) COMMA_SOURCE_FILE_AT_LINE (3143)) COMMA_SOURCE_FILE_AT_LINE (3143)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_mapProxyDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_mapProxyDeclarationAST.mSlotID,
                                               categoryMethod_mapProxyDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapProxyDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_mapProxyDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@graphDeclarationAST enterDeclarationInGraph'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_graphDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                        GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_graphDeclarationAST * object = (const cPtr_graphDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_graphDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mGraphTypeName.reader_string (SOURCE_FILE_AT_LINE (3155)) COMMA_SOURCE_FILE_AT_LINE (3155)), object->mAttribute_mGraphTypeName.reader_location (SOURCE_FILE_AT_LINE (3155)) COMMA_SOURCE_FILE_AT_LINE (3155)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_graphDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3156)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mAssociatedListTypeName.reader_string (SOURCE_FILE_AT_LINE (3157)) COMMA_SOURCE_FILE_AT_LINE (3157)), object->mAttribute_mAssociatedListTypeName.reader_location (SOURCE_FILE_AT_LINE (3157)) COMMA_SOURCE_FILE_AT_LINE (3157)) COMMA_SOURCE_FILE_AT_LINE (3157)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_graphDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_graphDeclarationAST.mSlotID,
                                               categoryMethod_graphDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_graphDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_graphDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@externTypeDeclarationAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_externTypeDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                             GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                             GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                             GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                             GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                             GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externTypeDeclarationAST * object = (const cPtr_externTypeDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externTypeDeclarationAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mExternTypeName.reader_string (SOURCE_FILE_AT_LINE (3169)) COMMA_SOURCE_FILE_AT_LINE (3169)), object->mAttribute_mExternTypeName.reader_location (SOURCE_FILE_AT_LINE (3169)) COMMA_SOURCE_FILE_AT_LINE (3169)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_externTypeDeclarationAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3170)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_externTypeDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_externTypeDeclarationAST.mSlotID,
                                               categoryMethod_externTypeDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externTypeDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_externTypeDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@externFunctionDeclarationAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_externFunctionDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                 GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                 GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                 GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                 GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                 GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externFunctionDeclarationAST * object = (const cPtr_externFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externFunctionDeclarationAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_externFunctionDeclarationAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3182)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_externFunctionDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_externFunctionDeclarationAST.mSlotID,
                                               categoryMethod_externFunctionDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externFunctionDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_externFunctionDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@onceFunctionDeclarationAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_onceFunctionDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                               GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                               GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                               GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                               GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                               GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                               C_Compiler * /* inCompiler */
                                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_onceFunctionDeclarationAST * object = (const cPtr_onceFunctionDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_onceFunctionDeclarationAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_onceFunctionDeclarationAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3194)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_onceFunctionDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_onceFunctionDeclarationAST.mSlotID,
                                               categoryMethod_onceFunctionDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_onceFunctionDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_onceFunctionDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@externRoutineDeclarationAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_externRoutineDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_externRoutineDeclarationAST * object = (const cPtr_externRoutineDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_externRoutineDeclarationAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_externRoutineDeclarationAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3206)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_externRoutineDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_externRoutineDeclarationAST.mSlotID,
                                               categoryMethod_externRoutineDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_externRoutineDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_externRoutineDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@filewrapperDeclarationAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_filewrapperDeclarationAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                              GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                              GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                              GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                              GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                              GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_filewrapperDeclarationAST * object = (const cPtr_filewrapperDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_filewrapperDeclarationAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_filewrapperDeclarationAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3218)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_filewrapperDeclarationAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_filewrapperDeclarationAST.mSlotID,
                                               categoryMethod_filewrapperDeclarationAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_filewrapperDeclarationAST_enterDeclarationInGraph (defineCategoryMethod_filewrapperDeclarationAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryMethodAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryMethodAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryMethodAST * object = (const cPtr_overridingCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryMethodAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingCategoryMethodAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3230)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryMethodAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingCategoryMethodAST.mSlotID,
                                               categoryMethod_overridingCategoryMethodAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryMethodAST_enterDeclarationInGraph (defineCategoryMethod_overridingCategoryMethodAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryModifierAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryModifierAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                  GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                  GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                  GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                  GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                  GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                  C_Compiler * /* inCompiler */
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryModifierAST * object = (const cPtr_overridingCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryModifierAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingCategoryModifierAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3242)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryModifierAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingCategoryModifierAST.mSlotID,
                                               categoryMethod_overridingCategoryModifierAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryModifierAST_enterDeclarationInGraph (defineCategoryMethod_overridingCategoryModifierAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryReaderAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                        GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                        GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryReaderAST * object = (const cPtr_overridingAbstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryReaderAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingAbstractCategoryReaderAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3254)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingAbstractCategoryReaderAST.mSlotID,
                                               categoryMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph (defineCategoryMethod_overridingAbstractCategoryReaderAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryMethodAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                        GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                        GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                        GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryMethodAST * object = (const cPtr_overridingAbstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryMethodAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingAbstractCategoryMethodAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3266)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingAbstractCategoryMethodAST.mSlotID,
                                               categoryMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph (defineCategoryMethod_overridingAbstractCategoryMethodAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingAbstractCategoryModifierAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                          GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                          GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                          GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                          GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                          GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingAbstractCategoryModifierAST * object = (const cPtr_overridingAbstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingAbstractCategoryModifierAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingAbstractCategoryModifierAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3278)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingAbstractCategoryModifierAST.mSlotID,
                                               categoryMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph (defineCategoryMethod_overridingAbstractCategoryModifierAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@categoryReaderAST enterDeclarationInGraph'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryReaderAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                      GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                      GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                      GALGAS_categoryReaderMapForBuildingContext & ioArgument_ioCategoryReaderMapForBuildingContext,
                                                                      GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                      GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryReaderAST * object = (const cPtr_categoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryReaderAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3290)) COMMA_SOURCE_FILE_AT_LINE (3290)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3290)).operator_concat (object->mAttribute_mCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (3290)) COMMA_SOURCE_FILE_AT_LINE (3290)), object->mAttribute_mCategoryReaderName.reader_location (SOURCE_FILE_AT_LINE (3290)) COMMA_SOURCE_FILE_AT_LINE (3290)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_categoryReaderAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3291)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3292)) COMMA_SOURCE_FILE_AT_LINE (3292)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3292)) COMMA_SOURCE_FILE_AT_LINE (3292)) COMMA_SOURCE_FILE_AT_LINE (3292)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryReaderMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3294)) COMMA_SOURCE_FILE_AT_LINE (3294)).operator_not (SOURCE_FILE_AT_LINE (3294)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryReaderMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryReaderMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3297)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3295)) ;
    }
  }
  // index 1: attribute 'mCategoryReaderMapForType', type @categoryReaderMapForType
  cMapElement_categoryReaderMapForBuildingContext * objectArray_135909 = (cMapElement_categoryReaderMapForBuildingContext *) ioArgument_ioCategoryReaderMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3300)) ;
  if (NULL != objectArray_135909) {
      macroValidSharedObject (objectArray_135909, cMapElement_categoryReaderMapForBuildingContext) ;
    {
    objectArray_135909->mAttribute_mCategoryReaderMapForType.modifier_insertKey (object->mAttribute_mCategoryReaderName, object->mAttribute_mCategoryReaderReturnedTypeName, object->mAttribute_mCategoryReaderFormalInputParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3301)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryReaderAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_categoryReaderAST.mSlotID,
                                               categoryMethod_categoryReaderAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryReaderAST_enterDeclarationInGraph (defineCategoryMethod_categoryReaderAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@categoryMethodAST enterDeclarationInGraph'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryMethodAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                      GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                      GALGAS_categoryMethodMapForBuildingContext & ioArgument_ioCategoryMethodMapForBuildingContext,
                                                                      GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                      GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                      GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryMethodAST * object = (const cPtr_categoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryMethodAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3318)) COMMA_SOURCE_FILE_AT_LINE (3318)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3318)).operator_concat (object->mAttribute_mCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (3318)) COMMA_SOURCE_FILE_AT_LINE (3318)), object->mAttribute_mCategoryMethodName.reader_location (SOURCE_FILE_AT_LINE (3318)) COMMA_SOURCE_FILE_AT_LINE (3318)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_categoryMethodAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3319)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3320)) COMMA_SOURCE_FILE_AT_LINE (3320)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3320)) COMMA_SOURCE_FILE_AT_LINE (3320)) COMMA_SOURCE_FILE_AT_LINE (3320)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryMethodMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3322)) COMMA_SOURCE_FILE_AT_LINE (3322)).operator_not (SOURCE_FILE_AT_LINE (3322)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryMethodMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryMethodMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3325)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3323)) ;
    }
  }
  // index 1: attribute 'mCategoryMethodMapForType', type @categoryMethodMapForType
  cMapElement_categoryMethodMapForBuildingContext * objectArray_137214 = (cMapElement_categoryMethodMapForBuildingContext *) ioArgument_ioCategoryMethodMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3328)) ;
  if (NULL != objectArray_137214) {
      macroValidSharedObject (objectArray_137214, cMapElement_categoryMethodMapForBuildingContext) ;
    {
    objectArray_137214->mAttribute_mCategoryMethodMapForType.modifier_insertKey (object->mAttribute_mCategoryMethodName, object->mAttribute_mCategoryMethodFormalParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3329)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryMethodAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_categoryMethodAST.mSlotID,
                                               categoryMethod_categoryMethodAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryMethodAST_enterDeclarationInGraph (defineCategoryMethod_categoryMethodAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@categoryModifierAST enterDeclarationInGraph'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_categoryModifierAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                        GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                        GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                        GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                        GALGAS_categoryModifierMapForBuildingContext & ioArgument_ioCategoryModifierMapForBuildingContext,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_categoryModifierAST * object = (const cPtr_categoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_categoryModifierAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3345)) COMMA_SOURCE_FILE_AT_LINE (3345)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3345)).operator_concat (object->mAttribute_mCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (3345)) COMMA_SOURCE_FILE_AT_LINE (3345)), object->mAttribute_mCategoryModifierName.reader_location (SOURCE_FILE_AT_LINE (3345)) COMMA_SOURCE_FILE_AT_LINE (3345)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_categoryModifierAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3346)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3347)) COMMA_SOURCE_FILE_AT_LINE (3347)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3347)) COMMA_SOURCE_FILE_AT_LINE (3347)) COMMA_SOURCE_FILE_AT_LINE (3347)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryModifierMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3349)) COMMA_SOURCE_FILE_AT_LINE (3349)).operator_not (SOURCE_FILE_AT_LINE (3349)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryModifierMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryModifierMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3352)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3350)) ;
    }
  }
  // index 1: attribute 'mCategoryModifierMapForType', type @categoryModifierMapForType
  cMapElement_categoryModifierMapForBuildingContext * objectArray_138489 = (cMapElement_categoryModifierMapForBuildingContext *) ioArgument_ioCategoryModifierMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3355)) ;
  if (NULL != objectArray_138489) {
      macroValidSharedObject (objectArray_138489, cMapElement_categoryModifierMapForBuildingContext) ;
    {
    objectArray_138489->mAttribute_mCategoryModifierMapForType.modifier_insertKey (object->mAttribute_mCategoryModifierName, object->mAttribute_mCategoryModifierFormalParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3356)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_categoryModifierAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_categoryModifierAST.mSlotID,
                                               categoryMethod_categoryModifierAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_categoryModifierAST_enterDeclarationInGraph (defineCategoryMethod_categoryModifierAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@overridingCategoryReaderAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_overridingCategoryReaderAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                GALGAS_semanticTypePrecedenceGraph & /* ioArgument_ioSemanticTypePrecedenceGraph */,
                                                                                GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                                GALGAS_semanticDeclarationListAST & ioArgument_ioCategoryOverrideDefinitionList,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_overridingCategoryReaderAST * object = (const cPtr_overridingCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_overridingCategoryReaderAST) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_overridingCategoryReaderAST temp_0 = object ;
  ioArgument_ioCategoryOverrideDefinitionList.addAssign_operation (temp_0 COMMA_SOURCE_FILE_AT_LINE (3372)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_overridingCategoryReaderAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_overridingCategoryReaderAST.mSlotID,
                                               categoryMethod_overridingCategoryReaderAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_overridingCategoryReaderAST_enterDeclarationInGraph (defineCategoryMethod_overridingCategoryReaderAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@abstractCategoryReaderAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryReaderAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                              GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                              GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                              GALGAS_categoryReaderMapForBuildingContext & ioArgument_ioCategoryReaderMapForBuildingContext,
                                                                              GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                              GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryReaderAST * object = (const cPtr_abstractCategoryReaderAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryReaderAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category reader @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3384)) COMMA_SOURCE_FILE_AT_LINE (3384)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3384)).operator_concat (object->mAttribute_mAbstractCategoryReaderName.reader_string (SOURCE_FILE_AT_LINE (3384)) COMMA_SOURCE_FILE_AT_LINE (3384)), object->mAttribute_mAbstractCategoryReaderName.reader_location (SOURCE_FILE_AT_LINE (3384)) COMMA_SOURCE_FILE_AT_LINE (3384)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_abstractCategoryReaderAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3385)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3386)) COMMA_SOURCE_FILE_AT_LINE (3386)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3386)) COMMA_SOURCE_FILE_AT_LINE (3386)) COMMA_SOURCE_FILE_AT_LINE (3386)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryReaderMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3388)) COMMA_SOURCE_FILE_AT_LINE (3388)).operator_not (SOURCE_FILE_AT_LINE (3388)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryReaderMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryReaderMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3391)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3389)) ;
    }
  }
  // index 1: attribute 'mCategoryReaderMapForType', type @categoryReaderMapForType
  cMapElement_categoryReaderMapForBuildingContext * objectArray_140393 = (cMapElement_categoryReaderMapForBuildingContext *) ioArgument_ioCategoryReaderMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3394)) ;
  if (NULL != objectArray_140393) {
      macroValidSharedObject (objectArray_140393, cMapElement_categoryReaderMapForBuildingContext) ;
    {
    objectArray_140393->mAttribute_mCategoryReaderMapForType.modifier_insertKey (object->mAttribute_mAbstractCategoryReaderName, object->mAttribute_mAbstractCategoryReaderReturnedTypeName, object->mAttribute_mAbstractCategoryReaderFormalInputParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3395)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryReaderAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_abstractCategoryReaderAST.mSlotID,
                                               categoryMethod_abstractCategoryReaderAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryReaderAST_enterDeclarationInGraph (defineCategoryMethod_abstractCategoryReaderAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@abstractCategoryMethodAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryMethodAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                              GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                              GALGAS_categoryMethodMapForBuildingContext & ioArgument_ioCategoryMethodMapForBuildingContext,
                                                                              GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                              GALGAS_categoryModifierMapForBuildingContext & /* ioArgument_ioCategoryModifierMapForBuildingContext */,
                                                                              GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryMethodAST * object = (const cPtr_abstractCategoryMethodAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryMethodAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category method @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3412)) COMMA_SOURCE_FILE_AT_LINE (3412)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3412)).operator_concat (object->mAttribute_mAbstractCategoryMethodName.reader_string (SOURCE_FILE_AT_LINE (3412)) COMMA_SOURCE_FILE_AT_LINE (3412)), object->mAttribute_mAbstractCategoryMethodName.reader_location (SOURCE_FILE_AT_LINE (3412)) COMMA_SOURCE_FILE_AT_LINE (3412)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_abstractCategoryMethodAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3413)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3414)) COMMA_SOURCE_FILE_AT_LINE (3414)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3414)) COMMA_SOURCE_FILE_AT_LINE (3414)) COMMA_SOURCE_FILE_AT_LINE (3414)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryMethodMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3416)) COMMA_SOURCE_FILE_AT_LINE (3416)).operator_not (SOURCE_FILE_AT_LINE (3416)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryMethodMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryMethodMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3419)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3417)) ;
    }
  }
  // index 1: attribute 'mCategoryMethodMapForType', type @categoryMethodMapForType
  cMapElement_categoryMethodMapForBuildingContext * objectArray_141746 = (cMapElement_categoryMethodMapForBuildingContext *) ioArgument_ioCategoryMethodMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3422)) ;
  if (NULL != objectArray_141746) {
      macroValidSharedObject (objectArray_141746, cMapElement_categoryMethodMapForBuildingContext) ;
    {
    objectArray_141746->mAttribute_mCategoryMethodMapForType.modifier_insertKey (object->mAttribute_mAbstractCategoryMethodName, object->mAttribute_mAbstractCategoryMethodFormalParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3423)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryMethodAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_abstractCategoryMethodAST.mSlotID,
                                               categoryMethod_abstractCategoryMethodAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryMethodAST_enterDeclarationInGraph (defineCategoryMethod_abstractCategoryMethodAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@abstractCategoryModifierAST enterDeclarationInGraph'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_abstractCategoryModifierAST_enterDeclarationInGraph (const cPtr_semanticDeclarationAST * inObject,
                                                                                GALGAS_semanticTypePrecedenceGraph & ioArgument_ioSemanticTypePrecedenceGraph,
                                                                                GALGAS_categoryMethodMapForBuildingContext & /* ioArgument_ioCategoryMethodMapForBuildingContext */,
                                                                                GALGAS_categoryReaderMapForBuildingContext & /* ioArgument_ioCategoryReaderMapForBuildingContext */,
                                                                                GALGAS_categoryModifierMapForBuildingContext & ioArgument_ioCategoryModifierMapForBuildingContext,
                                                                                GALGAS_semanticDeclarationListAST & /* ioArgument_ioCategoryOverrideDefinitionList */,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_abstractCategoryModifierAST * object = (const cPtr_abstractCategoryModifierAST *) inObject ;
  macroValidSharedObject (object, cPtr_abstractCategoryModifierAST) ;
  GALGAS_lstring var_key = GALGAS_lstring::constructor_new (GALGAS_string ("category modifier @").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3439)) COMMA_SOURCE_FILE_AT_LINE (3439)).operator_concat (GALGAS_string (" ") COMMA_SOURCE_FILE_AT_LINE (3439)).operator_concat (object->mAttribute_mAbstractCategoryModifierName.reader_string (SOURCE_FILE_AT_LINE (3439)) COMMA_SOURCE_FILE_AT_LINE (3439)), object->mAttribute_mAbstractCategoryModifierName.reader_location (SOURCE_FILE_AT_LINE (3439)) COMMA_SOURCE_FILE_AT_LINE (3439)) ;
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_abstractCategoryModifierAST temp_0 = object ;
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addNode (var_key, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (3440)) ;
  }
  {
  ioArgument_ioSemanticTypePrecedenceGraph.modifier_addEdge (var_key, GALGAS_lstring::constructor_new (GALGAS_string ("@").operator_concat (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3441)) COMMA_SOURCE_FILE_AT_LINE (3441)), object->mAttribute_mTypeName.reader_location (SOURCE_FILE_AT_LINE (3441)) COMMA_SOURCE_FILE_AT_LINE (3441)) COMMA_SOURCE_FILE_AT_LINE (3441)) ;
  }
  const enumGalgasBool test_1 = ioArgument_ioCategoryModifierMapForBuildingContext.reader_hasKey (object->mAttribute_mTypeName.reader_string (SOURCE_FILE_AT_LINE (3443)) COMMA_SOURCE_FILE_AT_LINE (3443)).operator_not (SOURCE_FILE_AT_LINE (3443)).boolEnum () ;
  if (kBoolTrue == test_1) {
    {
    ioArgument_ioCategoryModifierMapForBuildingContext.modifier_insertKey (object->mAttribute_mTypeName, GALGAS_categoryModifierMapForType::constructor_emptyMap (SOURCE_FILE_AT_LINE (3446)), inCompiler COMMA_SOURCE_FILE_AT_LINE (3444)) ;
    }
  }
  // index 1: attribute 'mCategoryModifierMapForType', type @categoryModifierMapForType
  cMapElement_categoryModifierMapForBuildingContext * objectArray_143061 = (cMapElement_categoryModifierMapForBuildingContext *) ioArgument_ioCategoryModifierMapForBuildingContext.readWriteAccessForWithInstruction_searchKey (inCompiler, object->mAttribute_mTypeName COMMA_SOURCE_FILE_AT_LINE (3449)) ;
  if (NULL != objectArray_143061) {
      macroValidSharedObject (objectArray_143061, cMapElement_categoryModifierMapForBuildingContext) ;
    {
    objectArray_143061->mAttribute_mCategoryModifierMapForType.modifier_insertKey (object->mAttribute_mAbstractCategoryModifierName, object->mAttribute_mAbstractCategoryModifierFormalParameterList, inCompiler COMMA_SOURCE_FILE_AT_LINE (3450)) ;
    }
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_abstractCategoryModifierAST_enterDeclarationInGraph (void) {
  enterCategoryMethod_enterDeclarationInGraph (kTypeDescriptor_GALGAS_abstractCategoryModifierAST.mSlotID,
                                               categoryMethod_abstractCategoryModifierAST_enterDeclarationInGraph) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractCategoryModifierAST_enterDeclarationInGraph (defineCategoryMethod_abstractCategoryModifierAST_enterDeclarationInGraph, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//       Category method '@semanticDeclarationAST addAssociatedElement'        *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_semanticDeclarationAST_addAssociatedElement> gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_addAssociatedElement (const int32_t inClassIndex,
                                               categoryMethodSignature_semanticDeclarationAST_addAssociatedElement inMethod) {
  gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

void callCategoryMethod_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                              GALGAS_semanticDeclarationListAST & io_ioSemanticDeclarationList,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_semanticDeclarationAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_semanticDeclarationAST_addAssociatedElement f = NULL ;
    if (classIndex < gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.count ()) {
      f = gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.count ()) {
           f = gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioSemanticDeclarationList, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*

static void categoryMethod_semanticDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * /* inObject */,
                                                                        GALGAS_semanticDeclarationListAST & /* ioArgument_ioSemanticDeclarationList */,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_semanticDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_semanticDeclarationAST.mSlotID,
                                            categoryMethod_semanticDeclarationAST_addAssociatedElement) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_semanticDeclarationAST_addAssociatedElement (void) {
  gCategoryMethodTable_semanticDeclarationAST_addAssociatedElement.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_semanticDeclarationAST_addAssociatedElement (defineCategoryMethod_semanticDeclarationAST_addAssociatedElement,
                                                                        freeCategoryMethod_semanticDeclarationAST_addAssociatedElement) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@mapDeclarationAST addAssociatedElement'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_mapDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                                                   GALGAS_semanticDeclarationListAST & ioArgument_ioSemanticDeclarationList,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_mapDeclarationAST * object = (const cPtr_mapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_mapDeclarationAST) ;
  GALGAS_attributeInCollectionListAST var_structAttributeList = GALGAS_attributeInCollectionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3469)) ;
  var_structAttributeList.addAssign_operation (GALGAS_string ("lstring").reader_nowhere (SOURCE_FILE_AT_LINE (3471)), GALGAS_string ("lkey").reader_nowhere (SOURCE_FILE_AT_LINE (3472)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3473)) COMMA_SOURCE_FILE_AT_LINE (3470)) ;
  cEnumerator_attributeInCollectionListAST enumerator_143900 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_143900.hasCurrentObject ()) {
    var_structAttributeList.addAssign_operation (enumerator_143900.current_mAttributeTypeName (HERE), enumerator_143900.current_mAttributeName (HERE), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3479)) COMMA_SOURCE_FILE_AT_LINE (3476)) ;
    enumerator_143900.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationList.addAssign_operation (GALGAS_structDeclarationAST::constructor_new (GALGAS_bool (true), GALGAS_lstring::constructor_new (object->mAttribute_mMapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (3484)) COMMA_SOURCE_FILE_AT_LINE (3484)), object->mAttribute_mMapTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (3484)), var_structAttributeList, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (3482)) COMMA_SOURCE_FILE_AT_LINE (3482)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_mapDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_mapDeclarationAST.mSlotID,
                                            categoryMethod_mapDeclarationAST_addAssociatedElement) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_mapDeclarationAST_addAssociatedElement (defineCategoryMethod_mapDeclarationAST_addAssociatedElement, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@listDeclarationAST addAssociatedElement'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_listDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                                                    GALGAS_semanticDeclarationListAST & ioArgument_ioSemanticDeclarationList,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listDeclarationAST * object = (const cPtr_listDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listDeclarationAST) ;
  GALGAS_attributeInCollectionListAST var_structAttributeList = GALGAS_attributeInCollectionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3495)) ;
  cEnumerator_attributeInCollectionListAST enumerator_144534 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_144534.hasCurrentObject ()) {
    var_structAttributeList.addAssign_operation (enumerator_144534.current_mAttributeTypeName (HERE), enumerator_144534.current_mAttributeName (HERE), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3500)) COMMA_SOURCE_FILE_AT_LINE (3497)) ;
    enumerator_144534.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationList.addAssign_operation (GALGAS_structDeclarationAST::constructor_new (GALGAS_bool (true), GALGAS_lstring::constructor_new (object->mAttribute_mListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (3505)) COMMA_SOURCE_FILE_AT_LINE (3505)), object->mAttribute_mListTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (3505)), var_structAttributeList, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (3503)) COMMA_SOURCE_FILE_AT_LINE (3503)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_listDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_listDeclarationAST.mSlotID,
                                            categoryMethod_listDeclarationAST_addAssociatedElement) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listDeclarationAST_addAssociatedElement (defineCategoryMethod_listDeclarationAST_addAssociatedElement, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@sortedListDeclarationAST addAssociatedElement' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_sortedListDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                                                          GALGAS_semanticDeclarationListAST & ioArgument_ioSemanticDeclarationList,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_sortedListDeclarationAST * object = (const cPtr_sortedListDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_sortedListDeclarationAST) ;
  GALGAS_attributeInCollectionListAST var_structAttributeList = GALGAS_attributeInCollectionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3516)) ;
  cEnumerator_attributeInCollectionListAST enumerator_145176 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_145176.hasCurrentObject ()) {
    var_structAttributeList.addAssign_operation (enumerator_145176.current_mAttributeTypeName (HERE), enumerator_145176.current_mAttributeName (HERE), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3521)) COMMA_SOURCE_FILE_AT_LINE (3518)) ;
    enumerator_145176.gotoNextObject () ;
  }
  ioArgument_ioSemanticDeclarationList.addAssign_operation (GALGAS_structDeclarationAST::constructor_new (GALGAS_bool (true), GALGAS_lstring::constructor_new (object->mAttribute_mSortedListTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (3526)) COMMA_SOURCE_FILE_AT_LINE (3526)), object->mAttribute_mSortedListTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (3526)), var_structAttributeList, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (3524)) COMMA_SOURCE_FILE_AT_LINE (3524)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_sortedListDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_sortedListDeclarationAST.mSlotID,
                                            categoryMethod_sortedListDeclarationAST_addAssociatedElement) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_sortedListDeclarationAST_addAssociatedElement (defineCategoryMethod_sortedListDeclarationAST_addAssociatedElement, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@listmapDeclarationAST addAssociatedElement'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_listmapDeclarationAST_addAssociatedElement (const cPtr_semanticDeclarationAST * inObject,
                                                                       GALGAS_semanticDeclarationListAST & ioArgument_ioSemanticDeclarationList,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listmapDeclarationAST * object = (const cPtr_listmapDeclarationAST *) inObject ;
  macroValidSharedObject (object, cPtr_listmapDeclarationAST) ;
  GALGAS_attributeInCollectionListAST var_structAttributeList = GALGAS_attributeInCollectionListAST::constructor_emptyList (SOURCE_FILE_AT_LINE (3537)) ;
  var_structAttributeList.addAssign_operation (GALGAS_string ("string").reader_nowhere (SOURCE_FILE_AT_LINE (3539)), GALGAS_string ("key").reader_nowhere (SOURCE_FILE_AT_LINE (3540)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3541)) COMMA_SOURCE_FILE_AT_LINE (3538)) ;
  var_structAttributeList.addAssign_operation (object->mAttribute_mAssociatedListTypeName, GALGAS_string ("mList").reader_nowhere (SOURCE_FILE_AT_LINE (3545)), GALGAS_lstringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (3546)) COMMA_SOURCE_FILE_AT_LINE (3543)) ;
  ioArgument_ioSemanticDeclarationList.addAssign_operation (GALGAS_structDeclarationAST::constructor_new (GALGAS_bool (true), GALGAS_lstring::constructor_new (object->mAttribute_mListmapTypeName.mAttribute_string.operator_concat (function_elementTypeNameSuffix (inCompiler COMMA_SOURCE_FILE_AT_LINE (3551)) COMMA_SOURCE_FILE_AT_LINE (3551)), object->mAttribute_mListmapTypeName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (3551)), var_structAttributeList, GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (3549)) COMMA_SOURCE_FILE_AT_LINE (3549)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_listmapDeclarationAST_addAssociatedElement (void) {
  enterCategoryMethod_addAssociatedElement (kTypeDescriptor_GALGAS_listmapDeclarationAST.mSlotID,
                                            categoryMethod_listmapDeclarationAST_addAssociatedElement) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listmapDeclarationAST_addAssociatedElement (defineCategoryMethod_listmapDeclarationAST_addAssociatedElement, NULL) ;

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element::GALGAS_grammarLabelMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mLabelSignature () {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element::~ GALGAS_grammarLabelMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element::GALGAS_grammarLabelMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                      const GALGAS_formalParameterSignature & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mLabelSignature (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element GALGAS_grammarLabelMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_grammarLabelMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                            GALGAS_formalParameterSignature::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element GALGAS_grammarLabelMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                      const GALGAS_formalParameterSignature & inOperand1 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_grammarLabelMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_grammarLabelMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_grammarLabelMap_2E_element::objectCompare (const GALGAS_grammarLabelMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLabelSignature.objectCompare (inOperand.mAttribute_mLabelSignature) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_grammarLabelMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelSignature.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_grammarLabelMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mLabelSignature.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_grammarLabelMap_2E_element::description (C_String & ioString,
                                                     const int32_t inIndentation) const {
  ioString << "<struct @grammarLabelMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLabelSignature.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_grammarLabelMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_grammarLabelMap_2E_element::reader_mLabelSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLabelSignature ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @grammarLabelMap.element type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarLabelMap_2E_element ("grammarLabelMap.element",
                                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarLabelMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarLabelMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarLabelMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarLabelMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap_2E_element GALGAS_grammarLabelMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_grammarLabelMap_2E_element result ;
  const GALGAS_grammarLabelMap_2E_element * p = (const GALGAS_grammarLabelMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarLabelMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("grammarLabelMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element::GALGAS_grammarMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mLabelMap (),
mAttribute_mHasIndexing () {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element::~ GALGAS_grammarMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element::GALGAS_grammarMap_2E_element (const GALGAS_lstring & inOperand0,
                                                            const GALGAS_grammarLabelMap & inOperand1,
                                                            const GALGAS_bool & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mLabelMap (inOperand1),
mAttribute_mHasIndexing (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element GALGAS_grammarMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_grammarMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                       GALGAS_grammarLabelMap::constructor_emptyMap (HERE),
                                       GALGAS_bool::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element GALGAS_grammarMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_grammarLabelMap & inOperand1,
                                                                            const GALGAS_bool & inOperand2 
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_grammarMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_grammarMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_grammarMap_2E_element::objectCompare (const GALGAS_grammarMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mLabelMap.objectCompare (inOperand.mAttribute_mLabelMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHasIndexing.objectCompare (inOperand.mAttribute_mHasIndexing) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_grammarMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mLabelMap.isValid () && mAttribute_mHasIndexing.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_grammarMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mLabelMap.drop () ;
  mAttribute_mHasIndexing.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_grammarMap_2E_element::description (C_String & ioString,
                                                const int32_t inIndentation) const {
  ioString << "<struct @grammarMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mLabelMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHasIndexing.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_grammarMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarLabelMap GALGAS_grammarMap_2E_element::reader_mLabelMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLabelMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_grammarMap_2E_element::reader_mHasIndexing (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHasIndexing ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @grammarMap.element type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_grammarMap_2E_element ("grammarMap.element",
                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_grammarMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_grammarMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_grammarMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_grammarMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_grammarMap_2E_element GALGAS_grammarMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_grammarMap_2E_element result ;
  const GALGAS_grammarMap_2E_element * p = (const GALGAS_grammarMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_grammarMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("grammarMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap_2E_element::GALGAS_routineMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mRoutineSignature () {
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap_2E_element::~ GALGAS_routineMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap_2E_element::GALGAS_routineMap_2E_element (const GALGAS_lstring & inOperand0,
                                                            const GALGAS_formalParameterSignature & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mRoutineSignature (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap_2E_element GALGAS_routineMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_routineMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                       GALGAS_formalParameterSignature::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap_2E_element GALGAS_routineMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_formalParameterSignature & inOperand1 
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_routineMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_routineMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_routineMap_2E_element::objectCompare (const GALGAS_routineMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRoutineSignature.objectCompare (inOperand.mAttribute_mRoutineSignature) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_routineMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRoutineSignature.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_routineMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mRoutineSignature.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_routineMap_2E_element::description (C_String & ioString,
                                                const int32_t inIndentation) const {
  ioString << "<struct @routineMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRoutineSignature.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_routineMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterSignature GALGAS_routineMap_2E_element::reader_mRoutineSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRoutineSignature ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @routineMap.element type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_routineMap_2E_element ("routineMap.element",
                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_routineMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_routineMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_routineMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_routineMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_routineMap_2E_element GALGAS_routineMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_routineMap_2E_element result ;
  const GALGAS_routineMap_2E_element * p = (const GALGAS_routineMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_routineMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("routineMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap_2E_element::GALGAS_functionMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mFunctionSignature (),
mAttribute_mResultType () {
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap_2E_element::~ GALGAS_functionMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap_2E_element::GALGAS_functionMap_2E_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_unifiedTypeMapProxyList & inOperand1,
                                                              const GALGAS_unifiedTypeMapProxy & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mFunctionSignature (inOperand1),
mAttribute_mResultType (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap_2E_element GALGAS_functionMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_functionMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                        GALGAS_unifiedTypeMapProxyList::constructor_emptyList (HERE),
                                        GALGAS_unifiedTypeMapProxy::constructor_null (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap_2E_element GALGAS_functionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_unifiedTypeMapProxyList & inOperand1,
                                                                              const GALGAS_unifiedTypeMapProxy & inOperand2 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_functionMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_functionMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_functionMap_2E_element::objectCompare (const GALGAS_functionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFunctionSignature.objectCompare (inOperand.mAttribute_mFunctionSignature) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mResultType.objectCompare (inOperand.mAttribute_mResultType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_functionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFunctionSignature.isValid () && mAttribute_mResultType.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_functionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFunctionSignature.drop () ;
  mAttribute_mResultType.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_functionMap_2E_element::description (C_String & ioString,
                                                 const int32_t inIndentation) const {
  ioString << "<struct @functionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFunctionSignature.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mResultType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_functionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_functionMap_2E_element::reader_mFunctionSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFunctionSignature ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_functionMap_2E_element::reader_mResultType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mResultType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @functionMap.element type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_functionMap_2E_element ("functionMap.element",
                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_functionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_functionMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_functionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_functionMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_functionMap_2E_element GALGAS_functionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_functionMap_2E_element result ;
  const GALGAS_functionMap_2E_element * p = (const GALGAS_functionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_functionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("functionMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element::GALGAS_wrapperFileMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAbsoluteFilePath (),
mAttribute_mIsTextFile (),
mAttribute_mWrapperDirectoryIndex (),
mAttribute_mWrapperFileIndex () {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element::~ GALGAS_wrapperFileMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element::GALGAS_wrapperFileMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_string & inOperand1,
                                                                    const GALGAS_bool & inOperand2,
                                                                    const GALGAS_uint & inOperand3,
                                                                    const GALGAS_uint & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mAbsoluteFilePath (inOperand1),
mAttribute_mIsTextFile (inOperand2),
mAttribute_mWrapperDirectoryIndex (inOperand3),
mAttribute_mWrapperFileIndex (inOperand4) {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element GALGAS_wrapperFileMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_wrapperFileMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_string::constructor_default (HERE),
                                           GALGAS_bool::constructor_default (HERE),
                                           GALGAS_uint::constructor_default (HERE),
                                           GALGAS_uint::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element GALGAS_wrapperFileMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_string & inOperand1,
                                                                                    const GALGAS_bool & inOperand2,
                                                                                    const GALGAS_uint & inOperand3,
                                                                                    const GALGAS_uint & inOperand4 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_wrapperFileMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_wrapperFileMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_wrapperFileMap_2E_element::objectCompare (const GALGAS_wrapperFileMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAbsoluteFilePath.objectCompare (inOperand.mAttribute_mAbsoluteFilePath) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsTextFile.objectCompare (inOperand.mAttribute_mIsTextFile) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mWrapperDirectoryIndex.objectCompare (inOperand.mAttribute_mWrapperDirectoryIndex) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mWrapperFileIndex.objectCompare (inOperand.mAttribute_mWrapperFileIndex) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_wrapperFileMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAbsoluteFilePath.isValid () && mAttribute_mIsTextFile.isValid () && mAttribute_mWrapperDirectoryIndex.isValid () && mAttribute_mWrapperFileIndex.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperFileMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAbsoluteFilePath.drop () ;
  mAttribute_mIsTextFile.drop () ;
  mAttribute_mWrapperDirectoryIndex.drop () ;
  mAttribute_mWrapperFileIndex.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperFileMap_2E_element::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "<struct @wrapperFileMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAbsoluteFilePath.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsTextFile.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mWrapperDirectoryIndex.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mWrapperFileIndex.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_wrapperFileMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_wrapperFileMap_2E_element::reader_mAbsoluteFilePath (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAbsoluteFilePath ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_wrapperFileMap_2E_element::reader_mIsTextFile (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsTextFile ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperFileMap_2E_element::reader_mWrapperDirectoryIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mWrapperDirectoryIndex ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperFileMap_2E_element::reader_mWrapperFileIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mWrapperFileIndex ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @wrapperFileMap.element type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperFileMap_2E_element ("wrapperFileMap.element",
                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperFileMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperFileMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperFileMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperFileMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap_2E_element GALGAS_wrapperFileMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_wrapperFileMap_2E_element result ;
  const GALGAS_wrapperFileMap_2E_element * p = (const GALGAS_wrapperFileMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperFileMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("wrapperFileMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element::GALGAS_wrapperDirectoryMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mRegularFileMap (),
mAttribute_mDirectoryMap (),
mAttribute_mWrapperDirectoryIndex () {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element::~ GALGAS_wrapperDirectoryMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element::GALGAS_wrapperDirectoryMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_wrapperFileMap & inOperand1,
                                                                              const GALGAS_wrapperDirectoryMap & inOperand2,
                                                                              const GALGAS_uint & inOperand3) :
mAttribute_lkey (inOperand0),
mAttribute_mRegularFileMap (inOperand1),
mAttribute_mDirectoryMap (inOperand2),
mAttribute_mWrapperDirectoryIndex (inOperand3) {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element GALGAS_wrapperDirectoryMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_wrapperDirectoryMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                GALGAS_wrapperFileMap::constructor_emptyMap (HERE),
                                                GALGAS_wrapperDirectoryMap::constructor_emptyMap (HERE),
                                                GALGAS_uint::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element GALGAS_wrapperDirectoryMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_wrapperFileMap & inOperand1,
                                                                                              const GALGAS_wrapperDirectoryMap & inOperand2,
                                                                                              const GALGAS_uint & inOperand3 
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_wrapperDirectoryMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_wrapperDirectoryMap_2E_element::objectCompare (const GALGAS_wrapperDirectoryMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRegularFileMap.objectCompare (inOperand.mAttribute_mRegularFileMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDirectoryMap.objectCompare (inOperand.mAttribute_mDirectoryMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mWrapperDirectoryIndex.objectCompare (inOperand.mAttribute_mWrapperDirectoryIndex) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_wrapperDirectoryMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRegularFileMap.isValid () && mAttribute_mDirectoryMap.isValid () && mAttribute_mWrapperDirectoryIndex.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mRegularFileMap.drop () ;
  mAttribute_mDirectoryMap.drop () ;
  mAttribute_mWrapperDirectoryIndex.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperDirectoryMap_2E_element::description (C_String & ioString,
                                                         const int32_t inIndentation) const {
  ioString << "<struct @wrapperDirectoryMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRegularFileMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDirectoryMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mWrapperDirectoryIndex.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_wrapperDirectoryMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_wrapperDirectoryMap_2E_element::reader_mRegularFileMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRegularFileMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_wrapperDirectoryMap_2E_element::reader_mDirectoryMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDirectoryMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_uint GALGAS_wrapperDirectoryMap_2E_element::reader_mWrapperDirectoryIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mWrapperDirectoryIndex ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @wrapperDirectoryMap.element type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperDirectoryMap_2E_element ("wrapperDirectoryMap.element",
                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperDirectoryMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperDirectoryMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperDirectoryMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperDirectoryMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap_2E_element GALGAS_wrapperDirectoryMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_wrapperDirectoryMap_2E_element result ;
  const GALGAS_wrapperDirectoryMap_2E_element * p = (const GALGAS_wrapperDirectoryMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperDirectoryMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("wrapperDirectoryMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element::GALGAS_filewrapperTemplateMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mTemplateSignature (),
mAttribute_mFilewrapperTemplatePath () {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element::~ GALGAS_filewrapperTemplateMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element::GALGAS_filewrapperTemplateMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_unifiedTypeMapProxyList & inOperand1,
                                                                                    const GALGAS_lstring & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mTemplateSignature (inOperand1),
mAttribute_mFilewrapperTemplatePath (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element GALGAS_filewrapperTemplateMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_filewrapperTemplateMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                   GALGAS_unifiedTypeMapProxyList::constructor_emptyList (HERE),
                                                   GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element GALGAS_filewrapperTemplateMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                    const GALGAS_unifiedTypeMapProxyList & inOperand1,
                                                                                                    const GALGAS_lstring & inOperand2 
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_filewrapperTemplateMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_filewrapperTemplateMap_2E_element::objectCompare (const GALGAS_filewrapperTemplateMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTemplateSignature.objectCompare (inOperand.mAttribute_mTemplateSignature) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperTemplatePath.objectCompare (inOperand.mAttribute_mFilewrapperTemplatePath) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_filewrapperTemplateMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTemplateSignature.isValid () && mAttribute_mFilewrapperTemplatePath.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mTemplateSignature.drop () ;
  mAttribute_mFilewrapperTemplatePath.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperTemplateMap_2E_element::description (C_String & ioString,
                                                            const int32_t inIndentation) const {
  ioString << "<struct @filewrapperTemplateMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTemplateSignature.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperTemplatePath.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperTemplateMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxyList GALGAS_filewrapperTemplateMap_2E_element::reader_mTemplateSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTemplateSignature ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperTemplateMap_2E_element::reader_mFilewrapperTemplatePath (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperTemplatePath ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                    @filewrapperTemplateMap.element type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_filewrapperTemplateMap_2E_element ("filewrapperTemplateMap.element",
                                                          NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_filewrapperTemplateMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_filewrapperTemplateMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_filewrapperTemplateMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_filewrapperTemplateMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap_2E_element GALGAS_filewrapperTemplateMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperTemplateMap_2E_element result ;
  const GALGAS_filewrapperTemplateMap_2E_element * p = (const GALGAS_filewrapperTemplateMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_filewrapperTemplateMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("filewrapperTemplateMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element::GALGAS_filewrapperMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mFilewrapperPath (),
mAttribute_mFilewrapperExtensionList (),
mAttribute_mFilewrapperFileMap (),
mAttribute_mFilewrapperDirectoryMap (),
mAttribute_mFilewrapperTemplateMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element::~ GALGAS_filewrapperMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element::GALGAS_filewrapperMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_lstring & inOperand1,
                                                                    const GALGAS_lstringlist & inOperand2,
                                                                    const GALGAS_wrapperFileMap & inOperand3,
                                                                    const GALGAS_wrapperDirectoryMap & inOperand4,
                                                                    const GALGAS_filewrapperTemplateMap & inOperand5) :
mAttribute_lkey (inOperand0),
mAttribute_mFilewrapperPath (inOperand1),
mAttribute_mFilewrapperExtensionList (inOperand2),
mAttribute_mFilewrapperFileMap (inOperand3),
mAttribute_mFilewrapperDirectoryMap (inOperand4),
mAttribute_mFilewrapperTemplateMap (inOperand5) {
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element GALGAS_filewrapperMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_filewrapperMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_lstringlist::constructor_emptyList (HERE),
                                           GALGAS_wrapperFileMap::constructor_emptyMap (HERE),
                                           GALGAS_wrapperDirectoryMap::constructor_emptyMap (HERE),
                                           GALGAS_filewrapperTemplateMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element GALGAS_filewrapperMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_lstring & inOperand1,
                                                                                    const GALGAS_lstringlist & inOperand2,
                                                                                    const GALGAS_wrapperFileMap & inOperand3,
                                                                                    const GALGAS_wrapperDirectoryMap & inOperand4,
                                                                                    const GALGAS_filewrapperTemplateMap & inOperand5 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_filewrapperMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid ()) {
    result = GALGAS_filewrapperMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_filewrapperMap_2E_element::objectCompare (const GALGAS_filewrapperMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperPath.objectCompare (inOperand.mAttribute_mFilewrapperPath) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperExtensionList.objectCompare (inOperand.mAttribute_mFilewrapperExtensionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperFileMap.objectCompare (inOperand.mAttribute_mFilewrapperFileMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperDirectoryMap.objectCompare (inOperand.mAttribute_mFilewrapperDirectoryMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFilewrapperTemplateMap.objectCompare (inOperand.mAttribute_mFilewrapperTemplateMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_filewrapperMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFilewrapperPath.isValid () && mAttribute_mFilewrapperExtensionList.isValid () && mAttribute_mFilewrapperFileMap.isValid () && mAttribute_mFilewrapperDirectoryMap.isValid () && mAttribute_mFilewrapperTemplateMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFilewrapperPath.drop () ;
  mAttribute_mFilewrapperExtensionList.drop () ;
  mAttribute_mFilewrapperFileMap.drop () ;
  mAttribute_mFilewrapperDirectoryMap.drop () ;
  mAttribute_mFilewrapperTemplateMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_filewrapperMap_2E_element::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "<struct @filewrapperMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperPath.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperExtensionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperFileMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperDirectoryMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFilewrapperTemplateMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_filewrapperMap_2E_element::reader_mFilewrapperPath (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperPath ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_filewrapperMap_2E_element::reader_mFilewrapperExtensionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperExtensionList ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperFileMap GALGAS_filewrapperMap_2E_element::reader_mFilewrapperFileMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperFileMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperDirectoryMap GALGAS_filewrapperMap_2E_element::reader_mFilewrapperDirectoryMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperDirectoryMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperTemplateMap GALGAS_filewrapperMap_2E_element::reader_mFilewrapperTemplateMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFilewrapperTemplateMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @filewrapperMap.element type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_filewrapperMap_2E_element ("filewrapperMap.element",
                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_filewrapperMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_filewrapperMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_filewrapperMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_filewrapperMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_filewrapperMap_2E_element GALGAS_filewrapperMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_filewrapperMap_2E_element result ;
  const GALGAS_filewrapperMap_2E_element * p = (const GALGAS_filewrapperMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_filewrapperMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("filewrapperMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element::GALGAS_optionComponentMapForSemanticAnalysis_2E_element (void) :
mAttribute_lkey (),
mAttribute_mBoolOptionMap (),
mAttribute_mUIntOptionMap (),
mAttribute_mStringOptionMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element::~ GALGAS_optionComponentMapForSemanticAnalysis_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element::GALGAS_optionComponentMapForSemanticAnalysis_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                                  const GALGAS_commandLineOptionMap & inOperand1,
                                                                                                                  const GALGAS_commandLineOptionMap & inOperand2,
                                                                                                                  const GALGAS_commandLineOptionMap & inOperand3) :
mAttribute_lkey (inOperand0),
mAttribute_mBoolOptionMap (inOperand1),
mAttribute_mUIntOptionMap (inOperand2),
mAttribute_mStringOptionMap (inOperand3) {
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element GALGAS_optionComponentMapForSemanticAnalysis_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_optionComponentMapForSemanticAnalysis_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                                  GALGAS_commandLineOptionMap::constructor_emptyMap (HERE),
                                                                  GALGAS_commandLineOptionMap::constructor_emptyMap (HERE),
                                                                  GALGAS_commandLineOptionMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element GALGAS_optionComponentMapForSemanticAnalysis_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                                  const GALGAS_commandLineOptionMap & inOperand1,
                                                                                                                                  const GALGAS_commandLineOptionMap & inOperand2,
                                                                                                                                  const GALGAS_commandLineOptionMap & inOperand3 
                                                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_optionComponentMapForSemanticAnalysis_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_optionComponentMapForSemanticAnalysis_2E_element::objectCompare (const GALGAS_optionComponentMapForSemanticAnalysis_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBoolOptionMap.objectCompare (inOperand.mAttribute_mBoolOptionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mUIntOptionMap.objectCompare (inOperand.mAttribute_mUIntOptionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStringOptionMap.objectCompare (inOperand.mAttribute_mStringOptionMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_optionComponentMapForSemanticAnalysis_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mBoolOptionMap.isValid () && mAttribute_mUIntOptionMap.isValid () && mAttribute_mStringOptionMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mBoolOptionMap.drop () ;
  mAttribute_mUIntOptionMap.drop () ;
  mAttribute_mStringOptionMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_optionComponentMapForSemanticAnalysis_2E_element::description (C_String & ioString,
                                                                           const int32_t inIndentation) const {
  ioString << "<struct @optionComponentMapForSemanticAnalysis.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBoolOptionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mUIntOptionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStringOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_optionComponentMapForSemanticAnalysis_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis_2E_element::reader_mBoolOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBoolOptionMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis_2E_element::reader_mUIntOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUIntOptionMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_commandLineOptionMap GALGAS_optionComponentMapForSemanticAnalysis_2E_element::reader_mStringOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStringOptionMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//             @optionComponentMapForSemanticAnalysis.element type             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_optionComponentMapForSemanticAnalysis_2E_element ("optionComponentMapForSemanticAnalysis.element",
                                                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_optionComponentMapForSemanticAnalysis_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_optionComponentMapForSemanticAnalysis_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_optionComponentMapForSemanticAnalysis_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_optionComponentMapForSemanticAnalysis_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionComponentMapForSemanticAnalysis_2E_element GALGAS_optionComponentMapForSemanticAnalysis_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                C_Compiler * inCompiler
                                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_optionComponentMapForSemanticAnalysis_2E_element result ;
  const GALGAS_optionComponentMapForSemanticAnalysis_2E_element * p = (const GALGAS_optionComponentMapForSemanticAnalysis_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_optionComponentMapForSemanticAnalysis_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("optionComponentMapForSemanticAnalysis.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element::GALGAS_optionMapForSemanticAnalysis_2E_element (void) :
mAttribute_lkey (),
mAttribute_mOptionType (),
mAttribute_mOptionChar (),
mAttribute_mOptionString (),
mAttribute_mComment (),
mAttribute_mDefaultValue () {
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element::~ GALGAS_optionMapForSemanticAnalysis_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element::GALGAS_optionMapForSemanticAnalysis_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                const GALGAS_unifiedTypeMapProxy & inOperand1,
                                                                                                const GALGAS_char & inOperand2,
                                                                                                const GALGAS_string & inOperand3,
                                                                                                const GALGAS_string & inOperand4,
                                                                                                const GALGAS_string & inOperand5) :
mAttribute_lkey (inOperand0),
mAttribute_mOptionType (inOperand1),
mAttribute_mOptionChar (inOperand2),
mAttribute_mOptionString (inOperand3),
mAttribute_mComment (inOperand4),
mAttribute_mDefaultValue (inOperand5) {
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element GALGAS_optionMapForSemanticAnalysis_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_optionMapForSemanticAnalysis_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                         GALGAS_unifiedTypeMapProxy::constructor_null (HERE),
                                                         GALGAS_char::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element GALGAS_optionMapForSemanticAnalysis_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                const GALGAS_unifiedTypeMapProxy & inOperand1,
                                                                                                                const GALGAS_char & inOperand2,
                                                                                                                const GALGAS_string & inOperand3,
                                                                                                                const GALGAS_string & inOperand4,
                                                                                                                const GALGAS_string & inOperand5 
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid ()) {
    result = GALGAS_optionMapForSemanticAnalysis_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_optionMapForSemanticAnalysis_2E_element::objectCompare (const GALGAS_optionMapForSemanticAnalysis_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionType.objectCompare (inOperand.mAttribute_mOptionType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionChar.objectCompare (inOperand.mAttribute_mOptionChar) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionString.objectCompare (inOperand.mAttribute_mOptionString) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mComment.objectCompare (inOperand.mAttribute_mComment) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDefaultValue.objectCompare (inOperand.mAttribute_mDefaultValue) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_optionMapForSemanticAnalysis_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mOptionType.isValid () && mAttribute_mOptionChar.isValid () && mAttribute_mOptionString.isValid () && mAttribute_mComment.isValid () && mAttribute_mDefaultValue.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mOptionType.drop () ;
  mAttribute_mOptionChar.drop () ;
  mAttribute_mOptionString.drop () ;
  mAttribute_mComment.drop () ;
  mAttribute_mDefaultValue.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_optionMapForSemanticAnalysis_2E_element::description (C_String & ioString,
                                                                  const int32_t inIndentation) const {
  ioString << "<struct @optionMapForSemanticAnalysis.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionChar.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionString.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mComment.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDefaultValue.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_optionMapForSemanticAnalysis_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMapProxy GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mOptionType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionType ;
}

//-----------------------------------------------------------------------------*

GALGAS_char GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mOptionChar (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionChar ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mOptionString (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionString ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mComment (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mComment ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_optionMapForSemanticAnalysis_2E_element::reader_mDefaultValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDefaultValue ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                 @optionMapForSemanticAnalysis.element type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_optionMapForSemanticAnalysis_2E_element ("optionMapForSemanticAnalysis.element",
                                                                NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_optionMapForSemanticAnalysis_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_optionMapForSemanticAnalysis_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_optionMapForSemanticAnalysis_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_optionMapForSemanticAnalysis_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_optionMapForSemanticAnalysis_2E_element GALGAS_optionMapForSemanticAnalysis_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_optionMapForSemanticAnalysis_2E_element result ;
  const GALGAS_optionMapForSemanticAnalysis_2E_element * p = (const GALGAS_optionMapForSemanticAnalysis_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_optionMapForSemanticAnalysis_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("optionMapForSemanticAnalysis.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::~ GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::objectCompare (const GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::description (C_String & ioString,
                                                                            const int32_t inIndentation) const {
  ioString << "<struct @lexiqueComponentMapForSemanticAnalysis.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//            @lexiqueComponentMapForSemanticAnalysis.element type             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element ("lexiqueComponentMapForSemanticAnalysis.element",
                                                                          NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                  C_Compiler * inCompiler
                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element result ;
  const GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element * p = (const GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_lexiqueComponentMapForSemanticAnalysis_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("lexiqueComponentMapForSemanticAnalysis.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element::GALGAS_categoryMethodMapForType_2E_element (void) :
mAttribute_lkey (),
mAttribute_mFormalParameterList () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element::~ GALGAS_categoryMethodMapForType_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element::GALGAS_categoryMethodMapForType_2E_element (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_formalParameterListAST & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mFormalParameterList (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element GALGAS_categoryMethodMapForType_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryMethodMapForType_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                     GALGAS_formalParameterListAST::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element GALGAS_categoryMethodMapForType_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                        const GALGAS_formalParameterListAST & inOperand1 
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryMethodMapForType_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryMethodMapForType_2E_element::objectCompare (const GALGAS_categoryMethodMapForType_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFormalParameterList.objectCompare (inOperand.mAttribute_mFormalParameterList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_categoryMethodMapForType_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalParameterList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForType_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFormalParameterList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForType_2E_element::description (C_String & ioString,
                                                              const int32_t inIndentation) const {
  ioString << "<struct @categoryMethodMapForType.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFormalParameterList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryMethodMapForType_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterListAST GALGAS_categoryMethodMapForType_2E_element::reader_mFormalParameterList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFormalParameterList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                   @categoryMethodMapForType.element type                    *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForType_2E_element ("categoryMethodMapForType.element",
                                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForType_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForType_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForType_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForType_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType_2E_element GALGAS_categoryMethodMapForType_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForType_2E_element result ;
  const GALGAS_categoryMethodMapForType_2E_element * p = (const GALGAS_categoryMethodMapForType_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForType_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryMethodMapForType.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element::GALGAS_categoryMethodMapForBuildingContext_2E_element (void) :
mAttribute_lkey (),
mAttribute_mCategoryMethodMapForType () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element::~ GALGAS_categoryMethodMapForBuildingContext_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element::GALGAS_categoryMethodMapForBuildingContext_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_categoryMethodMapForType & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mCategoryMethodMapForType (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element GALGAS_categoryMethodMapForBuildingContext_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryMethodMapForBuildingContext_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                                GALGAS_categoryMethodMapForType::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element GALGAS_categoryMethodMapForBuildingContext_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                              const GALGAS_categoryMethodMapForType & inOperand1 
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryMethodMapForBuildingContext_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryMethodMapForBuildingContext_2E_element::objectCompare (const GALGAS_categoryMethodMapForBuildingContext_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCategoryMethodMapForType.objectCompare (inOperand.mAttribute_mCategoryMethodMapForType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_categoryMethodMapForBuildingContext_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryMethodMapForType.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mCategoryMethodMapForType.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryMethodMapForBuildingContext_2E_element::description (C_String & ioString,
                                                                         const int32_t inIndentation) const {
  ioString << "<struct @categoryMethodMapForBuildingContext.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCategoryMethodMapForType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryMethodMapForBuildingContext_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForType GALGAS_categoryMethodMapForBuildingContext_2E_element::reader_mCategoryMethodMapForType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCategoryMethodMapForType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//              @categoryMethodMapForBuildingContext.element type              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryMethodMapForBuildingContext_2E_element ("categoryMethodMapForBuildingContext.element",
                                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryMethodMapForBuildingContext_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryMethodMapForBuildingContext_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryMethodMapForBuildingContext_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryMethodMapForBuildingContext_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryMethodMapForBuildingContext_2E_element GALGAS_categoryMethodMapForBuildingContext_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_categoryMethodMapForBuildingContext_2E_element result ;
  const GALGAS_categoryMethodMapForBuildingContext_2E_element * p = (const GALGAS_categoryMethodMapForBuildingContext_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryMethodMapForBuildingContext_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryMethodMapForBuildingContext.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element::GALGAS_categoryModifierMapForType_2E_element (void) :
mAttribute_lkey (),
mAttribute_mFormalParameterList () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element::~ GALGAS_categoryModifierMapForType_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element::GALGAS_categoryModifierMapForType_2E_element (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_formalParameterListAST & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mFormalParameterList (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element GALGAS_categoryModifierMapForType_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryModifierMapForType_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                       GALGAS_formalParameterListAST::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element GALGAS_categoryModifierMapForType_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                            const GALGAS_formalParameterListAST & inOperand1 
                                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryModifierMapForType_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryModifierMapForType_2E_element::objectCompare (const GALGAS_categoryModifierMapForType_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFormalParameterList.objectCompare (inOperand.mAttribute_mFormalParameterList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_categoryModifierMapForType_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFormalParameterList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForType_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFormalParameterList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForType_2E_element::description (C_String & ioString,
                                                                const int32_t inIndentation) const {
  ioString << "<struct @categoryModifierMapForType.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFormalParameterList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryModifierMapForType_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalParameterListAST GALGAS_categoryModifierMapForType_2E_element::reader_mFormalParameterList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFormalParameterList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @categoryModifierMapForType.element type                   *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForType_2E_element ("categoryModifierMapForType.element",
                                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForType_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForType_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForType_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForType_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType_2E_element GALGAS_categoryModifierMapForType_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForType_2E_element result ;
  const GALGAS_categoryModifierMapForType_2E_element * p = (const GALGAS_categoryModifierMapForType_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForType_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryModifierMapForType.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element::GALGAS_categoryModifierMapForBuildingContext_2E_element (void) :
mAttribute_lkey (),
mAttribute_mCategoryModifierMapForType () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element::~ GALGAS_categoryModifierMapForBuildingContext_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element::GALGAS_categoryModifierMapForBuildingContext_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                                  const GALGAS_categoryModifierMapForType & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mCategoryModifierMapForType (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element GALGAS_categoryModifierMapForBuildingContext_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryModifierMapForBuildingContext_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                                  GALGAS_categoryModifierMapForType::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element GALGAS_categoryModifierMapForBuildingContext_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                                  const GALGAS_categoryModifierMapForType & inOperand1 
                                                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryModifierMapForBuildingContext_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryModifierMapForBuildingContext_2E_element::objectCompare (const GALGAS_categoryModifierMapForBuildingContext_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCategoryModifierMapForType.objectCompare (inOperand.mAttribute_mCategoryModifierMapForType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_categoryModifierMapForBuildingContext_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryModifierMapForType.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mCategoryModifierMapForType.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryModifierMapForBuildingContext_2E_element::description (C_String & ioString,
                                                                           const int32_t inIndentation) const {
  ioString << "<struct @categoryModifierMapForBuildingContext.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCategoryModifierMapForType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryModifierMapForBuildingContext_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForType GALGAS_categoryModifierMapForBuildingContext_2E_element::reader_mCategoryModifierMapForType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCategoryModifierMapForType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//             @categoryModifierMapForBuildingContext.element type             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryModifierMapForBuildingContext_2E_element ("categoryModifierMapForBuildingContext.element",
                                                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryModifierMapForBuildingContext_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryModifierMapForBuildingContext_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryModifierMapForBuildingContext_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryModifierMapForBuildingContext_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryModifierMapForBuildingContext_2E_element GALGAS_categoryModifierMapForBuildingContext_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                C_Compiler * inCompiler
                                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_categoryModifierMapForBuildingContext_2E_element result ;
  const GALGAS_categoryModifierMapForBuildingContext_2E_element * p = (const GALGAS_categoryModifierMapForBuildingContext_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryModifierMapForBuildingContext_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryModifierMapForBuildingContext.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element::GALGAS_categoryReaderMapForType_2E_element (void) :
mAttribute_lkey (),
mAttribute_mResultTypeName (),
mAttribute_mInputFormalParameterList () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element::~ GALGAS_categoryReaderMapForType_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element::GALGAS_categoryReaderMapForType_2E_element (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_lstring & inOperand1,
                                                                                        const GALGAS_formalInputParameterListAST & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mResultTypeName (inOperand1),
mAttribute_mInputFormalParameterList (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element GALGAS_categoryReaderMapForType_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryReaderMapForType_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                     GALGAS_lstring::constructor_default (HERE),
                                                     GALGAS_formalInputParameterListAST::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element GALGAS_categoryReaderMapForType_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                        const GALGAS_lstring & inOperand1,
                                                                                                        const GALGAS_formalInputParameterListAST & inOperand2 
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_categoryReaderMapForType_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryReaderMapForType_2E_element::objectCompare (const GALGAS_categoryReaderMapForType_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mResultTypeName.objectCompare (inOperand.mAttribute_mResultTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInputFormalParameterList.objectCompare (inOperand.mAttribute_mInputFormalParameterList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_categoryReaderMapForType_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mResultTypeName.isValid () && mAttribute_mInputFormalParameterList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mResultTypeName.drop () ;
  mAttribute_mInputFormalParameterList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForType_2E_element::description (C_String & ioString,
                                                              const int32_t inIndentation) const {
  ioString << "<struct @categoryReaderMapForType.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mResultTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInputFormalParameterList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryReaderMapForType_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryReaderMapForType_2E_element::reader_mResultTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mResultTypeName ;
}

//-----------------------------------------------------------------------------*

GALGAS_formalInputParameterListAST GALGAS_categoryReaderMapForType_2E_element::reader_mInputFormalParameterList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInputFormalParameterList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                   @categoryReaderMapForType.element type                    *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForType_2E_element ("categoryReaderMapForType.element",
                                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForType_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForType_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForType_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForType_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType_2E_element GALGAS_categoryReaderMapForType_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForType_2E_element result ;
  const GALGAS_categoryReaderMapForType_2E_element * p = (const GALGAS_categoryReaderMapForType_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForType_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryReaderMapForType.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element::GALGAS_categoryReaderMapForBuildingContext_2E_element (void) :
mAttribute_lkey (),
mAttribute_mCategoryReaderMapForType () {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element::~ GALGAS_categoryReaderMapForBuildingContext_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element::GALGAS_categoryReaderMapForBuildingContext_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_categoryReaderMapForType & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mCategoryReaderMapForType (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element GALGAS_categoryReaderMapForBuildingContext_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_categoryReaderMapForBuildingContext_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                                GALGAS_categoryReaderMapForType::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element GALGAS_categoryReaderMapForBuildingContext_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                              const GALGAS_categoryReaderMapForType & inOperand1 
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_categoryReaderMapForBuildingContext_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_categoryReaderMapForBuildingContext_2E_element::objectCompare (const GALGAS_categoryReaderMapForBuildingContext_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCategoryReaderMapForType.objectCompare (inOperand.mAttribute_mCategoryReaderMapForType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_categoryReaderMapForBuildingContext_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mCategoryReaderMapForType.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mCategoryReaderMapForType.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_categoryReaderMapForBuildingContext_2E_element::description (C_String & ioString,
                                                                         const int32_t inIndentation) const {
  ioString << "<struct @categoryReaderMapForBuildingContext.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCategoryReaderMapForType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_categoryReaderMapForBuildingContext_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForType GALGAS_categoryReaderMapForBuildingContext_2E_element::reader_mCategoryReaderMapForType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCategoryReaderMapForType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//              @categoryReaderMapForBuildingContext.element type              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_categoryReaderMapForBuildingContext_2E_element ("categoryReaderMapForBuildingContext.element",
                                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_categoryReaderMapForBuildingContext_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_categoryReaderMapForBuildingContext_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_categoryReaderMapForBuildingContext_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_categoryReaderMapForBuildingContext_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_categoryReaderMapForBuildingContext_2E_element GALGAS_categoryReaderMapForBuildingContext_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_categoryReaderMapForBuildingContext_2E_element result ;
  const GALGAS_categoryReaderMapForBuildingContext_2E_element * p = (const GALGAS_categoryReaderMapForBuildingContext_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_categoryReaderMapForBuildingContext_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("categoryReaderMapForBuildingContext.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element::GALGAS_wrapperExtensionMap_2E_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element::~ GALGAS_wrapperExtensionMap_2E_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element::GALGAS_wrapperExtensionMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element GALGAS_wrapperExtensionMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_wrapperExtensionMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element GALGAS_wrapperExtensionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_wrapperExtensionMap_2E_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_wrapperExtensionMap_2E_element::objectCompare (const GALGAS_wrapperExtensionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_wrapperExtensionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperExtensionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_wrapperExtensionMap_2E_element::description (C_String & ioString,
                                                         const int32_t inIndentation) const {
  ioString << "<struct @wrapperExtensionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_wrapperExtensionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @wrapperExtensionMap.element type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_wrapperExtensionMap_2E_element ("wrapperExtensionMap.element",
                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_wrapperExtensionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_wrapperExtensionMap_2E_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_wrapperExtensionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_wrapperExtensionMap_2E_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_wrapperExtensionMap_2E_element GALGAS_wrapperExtensionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_wrapperExtensionMap_2E_element result ;
  const GALGAS_wrapperExtensionMap_2E_element * p = (const GALGAS_wrapperExtensionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_wrapperExtensionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("wrapperExtensionMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


